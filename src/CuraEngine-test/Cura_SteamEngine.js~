// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
try {
  this['Module'] = Module;
  Module.test;
} catch(e) {
  this['Module'] = Module = {};
}
// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
if (typeof module === "object") {
  module.exports = Module;
}
if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  Module['print'] = function(x) {
    process['stdout'].write(x + '\n');
  };
  Module['printErr'] = function(x) {
    process['stderr'].write(x + '\n');
  };
  var nodeFS = require('fs');
  var nodePath = require('path');
  Module['read'] = function(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };
  Module['readBinary'] = function(filename) { return Module['read'](filename, true) };
  Module['load'] = function(f) {
    globalEval(read(f));
  };
  if (!Module['arguments']) {
    Module['arguments'] = process['argv'].slice(2);
  }
}
if (ENVIRONMENT_IS_SHELL) {
  Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm
  Module['read'] = read;
  Module['readBinary'] = function(f) {
    return read(f, 'binary');
  };
  if (!Module['arguments']) {
    if (typeof scriptArgs != 'undefined') {
      Module['arguments'] = scriptArgs;
    } else if (typeof arguments != 'undefined') {
      Module['arguments'] = arguments;
    }
  }
}
if (ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER) {
  if (!Module['print']) {
    Module['print'] = function(x) {
      console.log(x);
    };
  }
  if (!Module['printErr']) {
    Module['printErr'] = function(x) {
      console.log(x);
    };
  }
}
if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };
  if (!Module['arguments']) {
    if (typeof arguments != 'undefined') {
      Module['arguments'] = arguments;
    }
  }
}
if (ENVIRONMENT_IS_WORKER) {
  // We can do very little here...
  var TRY_USE_DUMP = false;
  if (!Module['print']) {
    Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }
  Module['load'] = importScripts;
}
if (!ENVIRONMENT_IS_WORKER && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_SHELL) {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}
function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***
// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];
// Callbacks
if (!Module['preRun']) Module['preRun'] = [];
if (!Module['postRun']) Module['postRun'] = [];
// === Auto-generated preamble library stuff ===
//========================================
// Runtime code shared with compiler
//========================================
var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      var logg = log2(quantum);
      return '((((' +target + ')+' + (quantum-1) + ')>>' + logg + ')<<' + logg + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?{ ?[^}]* ?}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type, quantumSize) {
    if (Runtime.QUANTUM_SIZE == 1) return 1;
    var size = {
      '%i1': 1,
      '%i8': 1,
      '%i16': 2,
      '%i32': 4,
      '%i64': 8,
      "%float": 4,
      "%double": 8
    }['%'+type]; // add '%' since float and double confuse Closure compiler as keys, and also spidermonkey as a compiler will remove 's from '_i8' etc
    if (!size) {
      if (type.charAt(type.length-1) == '*') {
        size = Runtime.QUANTUM_SIZE; // A pointer
      } else if (type[0] == 'i') {
        var bits = parseInt(type.substr(1));
        assert(bits % 8 == 0);
        size = bits/8;
      }
    }
    return size;
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (type == 'i64' || type == 'double' || vararg) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    type.flatIndexes = type.fields.map(function(field) {
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        size = Types.types[field].flatSize;
        alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else {
        throw 'Unclear type in struct: ' + field + ', in ' + type.name_ + ' :: ' + dump(Types.types[type.name_]);
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2 + 2*i;
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xff;
      if (needed) {
        buffer.push(code);
        needed--;
      }
      if (buffer.length == 0) {
        if (code < 128) return String.fromCharCode(code);
        buffer.push(code);
        if (code > 191 && code < 224) {
          needed = 1;
        } else {
          needed = 2;
        }
        return '';
      }
      if (needed > 0) return '';
      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var ret;
      if (c1 > 191 && c1 < 224) {
        ret = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
      } else {
        ret = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = ((((STACKTOP)+7)>>3)<<3); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = ((((STATICTOP)+7)>>3)<<3); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = ((((DYNAMICTOP)+7)>>3)<<3); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+(((low)>>>(0))))+((+(((high)>>>(0))))*(+(4294967296)))) : ((+(((low)>>>(0))))+((+(((high)|(0))))*(+(4294967296))))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}
//========================================
// Runtime essentials
//========================================
var __THREW__ = 0; // Used in checking for thrown exceptions.
var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;
function abort(text) {
  Module.print(text + ':\n' + (new Error).stack);
  ABORT = true;
  throw "Assertion: " + text;
}
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}
var globalScope = this;
// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;
// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = globalScope['Module']['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}
// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length+1);
      writeStringToMemory(value, ret);
      return ret;
    } else if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}
// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;
// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,((Math.min((+(Math.floor((value)/(+(4294967296))))), (+(4294967295))))|0)>>>0],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;
// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;
var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;
// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }
  var singleType = typeof types === 'string' ? types : null;
  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }
  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }
  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }
  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];
    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }
    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later
    setValue(ret+i, curr, type);
    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }
  return ret;
}
Module['allocate'] = allocate;
function Pointer_stringify(ptr, /* optional */ length) {
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;
  var ret = '';
  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;
// Memory management
var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return ((x+4095)>>12)<<12;
}
var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk
function enlargeMemory() {
  abort('Cannot enlarge memory arrays in asm.js. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value, or (2) set Module.TOTAL_MEMORY before the program runs.');
}
var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 1073741824;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;
// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(!!Int32Array && !!Float64Array && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'Cannot fallback to non-typed array case: Code is too specialized');
var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);
// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');
Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}
var __ATINIT__ = []; // functions called during startup
var __ATMAIN__ = []; // functions called when main() is to be run
var __ATEXIT__ = []; // functions called during shutdown
var runtimeInitialized = false;
function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}
// Tools
// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;
function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;
// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;
function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}
if (!Math['imul']) Math['imul'] = function(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyTracking = {};
var calledInit = false, calledRun = false;
var runDependencyWatcher = null;
function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    } 
    // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
    if (!calledRun && shouldRunNow) run();
  }
}
Module['removeRunDependency'] = removeRunDependency;
Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data
function addPreRun(func) {
  if (!Module['preRun']) Module['preRun'] = [];
  else if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
  Module['preRun'].push(func);
}
var awaitingMemoryInitializer = false;
function loadMemoryInitializer(filename) {
  function applyData(data) {
    HEAPU8.set(data, STATIC_BASE);
    runPostSets();
  }
  // always do this asynchronously, to keep shell and web as similar as possible
  addPreRun(function() {
    if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
      applyData(Module['readBinary'](filename));
    } else {
      Browser.asyncLoad(filename, function(data) {
        applyData(data);
      }, function(data) {
        throw 'could not load memory initializer ' + filename;
      });
    }
  });
  awaitingMemoryInitializer = false;
}
// === Body ===
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 18536;
var _stdout;
var _stdin;
var _stderr;
__ATINIT__ = __ATINIT__.concat([
  { func: function() { __GLOBAL__I_a() } },
  { func: function() { __GLOBAL__I_a362() } }
]);
var ___fsmu8;
var ___dso_handle;
var __ZTVN10__cxxabiv120__si_class_type_infoE;
var __ZTVN10__cxxabiv119__pointer_type_infoE;
var __ZTVN10__cxxabiv117__class_type_infoE;
var __ZTIc;
var _stdout = _stdout=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var _stdin = _stdin=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var _stderr = _stderr=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,216,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
__ZTVN10__cxxabiv119__pointer_type_infoE=allocate([0,0,0,0,232,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,8,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
__ZTIc=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
/* memory initializer */ allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,114,105,116,104,109,101,116,105,99,32,101,120,99,101,112,116,105,111,110,46,0,0,0,117,115,97,103,101,58,32,67,117,114,97,69,110,103,105,110,101,32,91,45,104,93,32,91,45,118,93,32,91,45,109,32,51,120,51,109,97,116,114,105,120,93,32,91,45,115,32,60,115,101,116,116,105,110,103,107,101,121,62,61,60,118,97,108,117,101,62,93,32,45,111,32,60,111,117,116,112,117,116,46,103,99,111,100,101,62,32,60,109,111,100,101,108,46,115,116,108,62,0,0,0,0,0,0,42,42,42,0,0,0,0,0,0,0,0,0,0,0,36,64,0,0,0,0,0,0,89,64,0,0,0,0,0,136,195,64,0,0,0,0,132,215,151,65,0,128,224,55,121,195,65,67,23,110,5,181,181,184,147,70,245,249,63,233,3,79,56,77,50,29,48,249,72,119,130,90,60,191,115,127,221,79,21,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,117,108,0,0,0,0,0,114,97,102,116,76,83,0,0,74,117,110,0,0,0,0,0,114,97,102,116,76,105,110,101,83,112,97,99,105,110,103,0,114,0,0,0,0,0,0,0,65,112,114,0,0,0,0,0,114,97,102,116,77,97,114,0,77,97,114,0,0,0,0,0,114,97,102,116,77,97,114,103,105,110,0,0,0,0,0,0,70,101,98,0,0,0,0,0,111,98,106,115,105,110,107,0,74,97,110,0,0,0,0,0,111,98,106,101,99,116,83,105,110,107,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,112,111,115,121,0,0,0,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,111,98,106,101,99,116,80,111,115,105,116,105,111,110,46,89,0,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,112,111,115,120,0,0,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,111,98,106,101,99,116,80,111,115,105,116,105,111,110,46,88,0,0,0,0,0,0,0,0,65,117,103,117,115,116,0,0,109,117,108,116,105,79,118,101,114,108,97,112,0,0,0,0,74,117,108,121,0,0,0,0,109,117,108,116,105,86,111,108,117,109,101,79,118,101,114,108,97,112,0,0,0,0,0,0,74,117,110,101,0,0,0,0,114,101,116,101,115,0,0,0,77,97,121,0,0,0,0,0,114,101,116,114,97,99,116,105,111,110,65,109,111,117,110,116,69,120,116,114,117,100,101,114,83,119,105,116,99,104,0,0,65,112,114,105,108,0,0,0,114,101,116,115,0,0,0,0,77,97,114,99,104,0,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,114,101,116,114,97,99,116,105,111,110,83,112,101,101,100,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,114,101,116,97,0,0,0,0,74,97,110,117,97,114,121,0,114,101,116,114,97,99,116,105,111,110,65,109,111,117,110,116,0,0,0,0,0,0,0,0,68,111,77,97,120,105,109,97,32,101,114,114,111,114,0,0,115,117,108,119,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,115,117,112,112,111,114,116,76,105,110,101,87,105,100,116,104,0,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,115,117,112,101,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,115,117,112,112,111,114,116,69,118,101,114,121,119,104,101,114,101,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,115,117,112,97,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,115,117,112,112,111,114,116,65,110,103,108,101,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,102,108,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,102,97,110,79,110,76,97,121,101,114,78,114,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,109,115,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,109,111,118,101,83,112,101,101,100,0,0,0,0,0,0,0,80,114,111,99,101,115,115,73,110,116,101,114,115,101,99,116,105,111,110,115,32,101,114,114,111,114,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,105,115,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,105,110,102,105,108,108,83,112,101,101,100,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,112,115,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,112,114,105,110,116,83,112,101,101,100,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,105,108,115,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,105,110,105,116,105,97,108,76,97,121,101,114,83,112,101,101,100,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,105,115,108,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,105,110,105,116,105,97,108,83,112,101,101,100,117,112,76,97,121,101,114,115,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,115,108,99,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,115,107,105,114,116,76,105,110,101,67,111,117,110,116,0,0,85,112,100,97,116,101,69,100,103,101,73,110,116,111,65,69,76,58,32,105,110,118,97,108,105,100,32,99,97,108,108,0,82,101,97,100,105,110,103,32,109,101,115,104,32,102,114,111,109,32,98,105,110,97,114,121,32,98,108,111,98,32,119,105,116,104,32,37,105,32,118,101,114,116,101,120,101,115,10,0,115,100,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,115,107,105,114,116,68,105,115,116,97,110,99,101,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,105,111,118,101,114,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,105,110,102,105,108,108,79,118,101,114,108,97,112,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,115,105,108,100,0,0,0,0,115,112,97,114,115,101,73,110,102,105,108,108,76,105,110,101,68,105,115,116,97,110,99,101,0,0,0,0,0,0,0,0,80,77,0,0,0,0,0,0,117,115,99,0,0,0,0,0,65,77,0,0,0,0,0,0,117,112,83,107,105,110,67,111,117,110,116,0,0,0,0,0,100,115,99,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,100,111,119,110,83,107,105,110,67,111,117,110,116,0,0,0,80,114,111,99,101,115,115,72,111,114,105,122,111,110,116,97,108,32,101,114,114,111,114,0,46,115,116,108,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,105,99,0,0,0,0,0,0,105,110,115,101,116,67,111,117,110,116,0,0,0,0,0,0,101,119,0,0,0,0,0,0,101,120,116,114,117,115,105,111,110,87,105,100,116,104,0,0,102,102,0,0,0,0,0,0,102,105,108,97,109,101,110,116,70,108,111,119,0,0,0,0,102,100,0,0,0,0,0,0,102,105,108,97,109,101,110,116,68,105,97,109,101,116,101,114,0,0,0,0,0,0,0,0,105,108,116,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,105,110,105,116,105,97,108,76,97,121,101,114,84,104,105,99,107,110,101,115,115,0,0,0,73,110,115,101,114,116,76,111,99,97,108,77,105,110,105,109,97,73,110,116,111,65,69,76,58,32,109,105,115,115,105,110,103,32,114,105,103,104,116,98,111,117,110,100,33,0,0,0,83,79,76,73,68,0,0,0,108,116,0,0,0,0,0,0,108,97,121,101,114,84,104,105,99,107,110,101,115,115,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,84,111,116,97,108,32,116,105,109,101,32,101,108,97,112,115,101,100,32,37,53,46,50,102,115,46,10,0,0,0,0,0,112,114,111,99,101,115,115,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,87,114,111,116,101,32,108,97,121,101,114,115,32,105,110,32,37,53,46,50,102,115,46,10,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,76,65,89,69,82,58,37,100,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,101,120,112,111,114,116,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,76,65,89,69,82,58,45,49,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,82,65,70,84,0,0,0,0,76,65,89,69,82,58,45,50,0,0,0,0,0,0,0,0,72,111,108,101,76,105,110,107,97,103,101,32,101,114,114,111,114,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,85,80,80,79,82,84,0,70,73,76,76,0,0,0,0,87,65,76,76,45,73,78,78,69,82,0,0,0,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,87,65,76,76,45,79,85,84,69,82,0,0,0,0,0,0,102,97,108,115,101,0,0,0,83,75,73,82,84,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,116,111,116,97,108,95,108,97,121,101,114,115,61,37,100,0,71,101,110,101,114,97,116,101,100,32,117,112,47,100,111,119,110,32,115,107,105,110,32,105,110,32,37,53,46,51,102,115,10,0,0,0,0,0,0,0,115,107,105,110,0,0,0,0,71,101,110,101,114,97,116,101,100,32,105,110,115,101,116,32,105,110,32,37,53,46,51,102,115,10,0,0,0,0,0,0,37,112,0,0,0,0,0,0,37,115,10,0,0,0,0,0,105,110,115,101,116,0,0,0,67,111,111,114,100,105,110,97,116,101,32,101,120,99,101,101,100,115,32,114,97,110,103,101,32,98,111,117,110,100,115,0,114,98,0,0,0,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,71,101,110,101,114,97,116,101,100,32,108,97,121,101,114,32,112,97,114,116,115,32,105,110,32,37,53,46,51,102,115,10,0,0,0,0,0,0,0,0,71,101,110,101,114,97,116,105,110,103,32,108,97,121,101,114,32,112,97,114,116,115,46,46,46,10,0,0,0,0,0,0,71,101,110,101,114,97,116,105,110,103,32,115,117,112,112,111,114,116,32,109,97,112,46,46,46,10,0,0,0,0,0,0,67,111,111,114,100,105,110,97,116,101,32,101,120,99,101,101,100,115,32,114,97,110,103,101,32,98,111,117,110,100,115,46,0,0,0,0,0,0,0,0,83,108,105,99,101,100,32,109,111,100,101,108,32,105,110,32,37,53,46,51,102,115,10,0,114,116,0,0,0,0,0,0,111,112,116,105,109,105,122,101,100,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,69,58,32,37,102,32,37,102,10,0,0,0,0,0,0,0,83,58,32,37,102,32,37,102,10,0,0,0,0,0,0,0,13,80,114,111,99,101,115,115,101,100,32,97,108,108,32,108,97,121,101,114,115,32,105,110,32,37,53,46,49,102,115,32,32,32,32,32,32,32,32,32,32,32,10,0,0,0,0,0,83,108,105,99,105,110,103,32,109,111,100,101,108,46,46,46,10,0,0,0,0,0,0,0,13,80,114,111,99,101,115,115,105,110,103,32,108,97,121,101,114,115,46,46,46,32,40,37,100,32,112,101,114,99,101,110,116,41,0,0,0,0,0,0,76,97,121,101,114,32,99,111,117,110,116,58,32,37,105,10,0,0,0,0,0,0,0,0,71,57,50,32,69,48,10,0,32,69,37,48,46,53,108,102,0,0,0,0,0,0,0,0,32,90,37,48,46,50,102,0,32,88,37,48,46,50,102,32,89,37,48,46,50,102,0,0,118,101,99,116,111,114,0,0,32,70,37,105,0,0,0,0,71,48,0,0,0,0,0,0,71,49,0,0,0,0,0,0,79,112,116,105,109,105,122,101,32,109,111,100,101,108,32,37,53,46,51,102,115,32,10,0,71,49,32,70,37,105,32,69,37,48,46,53,108,102,10,0,109,111,118,101,0,0,0,0,84,37,105,10,0,0,0,0,71,49,32,70,37,105,32,69,37,48,46,52,108,102,10,0,71,52,32,80,37,100,10,0,37,46,48,76,102,0,0,0,83,109,97,108,108,32,108,97,121,101,114,44,32,97,100,100,105,110,103,32,100,101,108,97,121,32,111,102,32,37,102,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,84,89,80,69,58,37,115,0,77,49,48,55,10,0,0,0,32,32,86,101,114,116,101,120,32,99,111,117,110,116,115,58,32,37,105,32,45,62,32,37,105,32,37,48,46,49,102,37,37,10,0,0,0,0,0,0,77,49,48,54,32,83,37,100,10,0,0,0,0,0,0,0,87,114,111,116,101,32,37,53,46,49,102,32,107,105,108,111,98,121,116,101,115,46,10,0,87,114,111,116,101,32,37,53,46,49,102,32,77,66,46,10,0,0,0,0,0,0,0,0,70,105,108,97,109,101,110,116,58,32,37,100,10,0,0,0,80,114,105,110,116,32,116,105,109,101,58,32,37,100,10,0,78,111,32,111,117,116,112,117,116,32,102,105,108,101,32,115,112,101,99,105,102,105,101,100,10,0,0,0,0,0,0,0,85,110,107,110,111,119,110,32,111,112,116,105,111,110,58,32,37,99,10,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,37,108,102,44,37,108,102,44,37,108,102,44,37,108,102,44,37,108,102,44,37,108,102,44,37,108,102,44,37,108,102,44,37,108,102,0,0,0,0,0,71,101,110,101,114,97,116,101,100,32,119,105,116,104,32,67,117,114,97,95,83,116,101,97,109,69,110,103,105,110,101,32,37,115,0,0,0,0,0,0,70,97,105,108,101,100,32,116,111,32,111,112,101,110,32,37,115,32,102,111,114,32,111,117,116,112,117,116,46,10,0,0,32,32,70,97,99,101,32,99,111,117,110,116,115,58,32,37,105,32,45,62,32,37,105,32,37,48,46,49,102,37,37,10,0,0,0,0,0,0,0,0,49,46,48,0,0,0,0,0,67,117,114,97,95,83,116,101,97,109,69,110,103,105,110,101,32,118,101,114,115,105,111,110,32,37,115,10,0,0,0,0,77,49,48,52,32,83,48,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,59,101,120,116,114,117,100,101,114,32,104,101,97,116,101,114,32,111,102,102,10,77,49,52,48,32,83,48,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,59,104,101,97,116,101,100,32,98,101,100,32,104,101,97,116,101,114,32,111,102,102,32,40,105,102,32,121,111,117,32,104,97,118,101,32,105,116,41,10,71,57,49,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,59,114,101,108,97,116,105,118,101,32,112,111,115,105,116,105,111,110,105,110,103,10,71,49,32,69,45,49,32,70,51,48,48,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,59,114,101,116,114,97,99,116,32,116,104,101,32,102,105,108,97,109,101,110,116,32,97,32,98,105,116,32,98,101,102,111,114,101,32,108,105,102,116,105,110,103,32,116,104,101,32,110,111,122,122,108,101,44,32,116,111,32,114,101,108,101,97,115,101,32,115,111,109,101,32,111,102,32,116,104,101,32,112,114,101,115,115,117,114,101,10,71,49,32,90,43,48,46,53,32,69,45,53,32,88,45,50,48,32,89,45,50,48,32,70,57,48,48,48,32,32,32,59,109,111,118,101,32,90,32,117,112,32,97,32,98,105,116,32,97,110,100,32,114,101,116,114,97,99,116,32,102,105,108,97,109,101,110,116,32,101,118,101,110,32,109,111,114,101,10,71,50,56,32,88,48,32,89,48,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,59,109,111,118,101,32,88,47,89,32,116,111,32,109,105,110,32,101,110,100,115,116,111,112,115,44,32,115,111,32,116,104,101,32,104,101,97,100,32,105,115,32,111,117,116,32,111,102,32,116,104,101,32,119,97,121,10,77,56,52,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,59,115,116,101,112,112,101,114,115,32,111,102,102,10,71,57,48,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,59,97,98,115,111,108,117,116,101,32,112,111,115,105,116,105,111,110,105,110,103,10,0,0,0,0,0,77,49,48,57,32,83,50,49,48,32,32,32,32,32,59,72,101,97,116,117,112,32,116,111,32,50,49,48,67,10,71,50,49,32,32,32,32,32,32,32,32,32,32,32,59,109,101,116,114,105,99,32,118,97,108,117,101,115,10,71,57,48,32,32,32,32,32,32,32,32,32,32,32,59,97,98,115,111,108,117,116,101,32,112,111,115,105,116,105,111,110,105,110,103,10,71,50,56,32,32,32,32,32,32,32,32,32,32,32,59,72,111,109,101,10,71,49,32,90,49,53,46,48,32,70,51,48,48,32,59,109,111,118,101,32,116,104,101,32,112,108,97,116,102,111,114,109,32,100,111,119,110,32,49,53,109,109,10,71,57,50,32,69,48,32,32,32,32,32,32,32,32,59,122,101,114,111,32,116,104,101,32,101,120,116,114,117,100,101,100,32,108,101,110,103,116,104,10,71,49,32,70,50,48,48,32,69,53,32,32,32,32,59,101,120,116,114,117,100,101,32,53,109,109,32,111,102,32,102,101,101,100,32,115,116,111,99,107,10,71,57,50,32,69,48,32,32,32,32,32,32,32,32,59,122,101,114,111,32,116,104,101,32,101,120,116,114,117,100,101,100,32,108,101,110,103,116,104,32,97,103,97,105,110,10,0,0,0,83,97,116,0,0,0,0,0,70,114,105,0,0,0,0,0,84,104,117,0,0,0,0,0,37,76,102,0,0,0,0,0,101,110,100,67,111,100,101,0,87,101,100,0,0,0,0,0,115,116,97,114,116,67,111,100,101,0,0,0,0,0,0,0,84,117,101,0,0,0,0,0,101,79,102,102,51,89,0,0,65,110,97,108,121,122,105,110,103,32,97,110,100,32,111,112,116,105,109,105,122,105,110,103,32,109,111,100,101,108,46,46,46,10,0,0,0,0,0,0,77,111,110,0,0,0,0,0,101,120,116,114,117,100,101,114,79,102,102,115,101,116,91,51,93,46,89,0,0,0,0,0,83,117,110,0,0,0,0,0,101,79,102,102,51,88,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,101,120,116,114,117,100,101,114,79,102,102,115,101,116,91,51,93,46,88,0,0,0,0,0,70,114,105,100,97,121,0,0,101,79,102,102,50,89,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,101,120,116,114,117,100,101,114,79,102,102,115,101,116,91,50,93,46,89,0,0,0,0,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,101,79,102,102,50,88,0,0,84,117,101,115,100,97,121,0,101,120,116,114,117,100,101,114,79,102,102,115,101,116,91,50,93,46,88,0,0,0,0,0,77,111,110,100,97,121,0,0,101,79,102,102,49,89,0,0,73,110,116,49,50,56,32,111,112,101,114,97,116,111,114,42,58,32,111,118,101,114,102,108,111,119,32,101,114,114,111,114,0,0,0,0,0,0,0,0,83,117,110,100,97,121,0,0,101,120,116,114,117,100,101,114,79,102,102,115,101,116,91,49,93,46,89,0,0,0,0,0,58,32,0,0,0,0,0,0,101,79,102,102,49,88,0,0,76,111,97,100,101,100,32,102,114,111,109,32,100,105,115,107,32,105,110,32,37,53,46,51,102,115,10,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,101,120,116,114,117,100,101,114,79,102,102,115,101,116,91,49,93,46,88,0,0,0,0,0,74,111,105,110,69,114,114,111,114,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,102,105,120,72,111,114,114,105,98,108,101,0,0,0,0,0,32,118,101,114,116,101,120,32,37,108,102,32,37,108,102,32,37,108,102,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,102,97,110,77,97,120,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,102,97,110,83,112,101,101,100,77,97,120,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,102,97,110,77,105,110,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,102,97,110,83,112,101,101,100,77,105,110,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,99,111,111,108,76,105,102,116,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,99,111,111,108,72,101,97,100,76,105,102,116,0,0,0,0,73,110,116,49,50,56,32,111,112,101,114,97,116,111,114,47,58,32,100,105,118,105,100,101,32,98,121,32,122,101,114,111,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,109,105,110,70,101,101,100,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,109,105,110,105,109,97,108,70,101,101,100,114,97,116,101,0,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,109,111,100,101,108,58,32,37,115,10,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,109,105,110,76,97,121,84,105,109,101,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,109,105,110,105,109,97,108,76,97,121,101,114,84,105,109,101,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,114,97,102,116,73,110,116,101,114,102,97,99,101,76,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,114,97,102,116,73,110,116,101,114,102,97,99,101,76,105,110,101,119,105,100,116,104,0,0,114,97,102,116,73,110,116,101,114,102,97,99,101,84,0,0,68,101,99,0,0,0,0,0,114,97,102,116,73,110,116,101,114,102,97,99,101,84,104,105,99,107,110,101,115,115,0,0,78,111,118,0,0,0,0,0,114,97,102,116,66,97,115,101,76,0,0,0,0,0,0,0,79,99,116,0,0,0,0,0,114,97,102,116,66,97,115,101,76,105,110,101,119,105,100,116,104,0,0,0,0,0,0,0,83,101,112,0,0,0,0,0,114,97,102,116,66,97,115,101,84,0,0,0,0,0,0,0,65,117,103,0,0,0,0,0,114,97,102,116,66,97,115,101,84,104,105,99,107,110,101,115,115,0,0,0,0,0,0,0,76,111,97,100,105,110,103,32,37,115,32,102,114,111,109,32,100,105,115,107,46,46,46,10,0,0,0,0,0,0,0,0,80,114,111,103,114,101,115,115,58,37,115,58,37,105,58,37,105,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,72,58,37,77,58,37,83,37,72,58,37,77,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,89,45,37,109,45,37,100,37,109,47,37,100,47,37,121,37,72,58,37,77,58,37,83,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,59,0,0,28,0,0,0,122,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,59,0,0,208,0,0,0,172,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,59,0,0,72,0,0,0,20,1,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,0,0,100,0,0,0,8,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,60,0,0,100,0,0,0,20,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,60,0,0,178,0,0,0,84,0,0,0,42,0,0,0,2,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,60,0,0,248,0,0,0,198,0,0,0,42,0,0,0,4,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,60,0,0,170,0,0,0,200,0,0,0,42,0,0,0,8,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,60,0,0,14,1,0,0,148,0,0,0,42,0,0,0,6,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,61,0,0,12,1,0,0,16,0,0,0,42,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,61,0,0,168,0,0,0,114,0,0,0,42,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,61,0,0,34,0,0,0,116,0,0,0,42,0,0,0,122,0,0,0,4,0,0,0,28,0,0,0,6,0,0,0,20,0,0,0,54,0,0,0,2,0,0,0,248,255,255,255,120,61,0,0,22,0,0,0,8,0,0,0,36,0,0,0,12,0,0,0,2,0,0,0,34,0,0,0,126,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,61,0,0,2,1,0,0,238,0,0,0,42,0,0,0,20,0,0,0,16,0,0,0,58,0,0,0,24,0,0,0,18,0,0,0,2,0,0,0,4,0,0,0,248,255,255,255,160,61,0,0,74,0,0,0,106,0,0,0,118,0,0,0,124,0,0,0,68,0,0,0,48,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,61,0,0,78,0,0,0,202,0,0,0,42,0,0,0,52,0,0,0,44,0,0,0,8,0,0,0,36,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,61,0,0,58,0,0,0,66,0,0,0,42,0,0,0,46,0,0,0,88,0,0,0,12,0,0,0,50,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,61,0,0,6,1,0,0,2,0,0,0,42,0,0,0,24,0,0,0,30,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,62,0,0,40,0,0,0,226,0,0,0,42,0,0,0,40,0,0,0,14,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,62,0,0,228,0,0,0,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,62,0,0,26,0,0,0,146,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,62,0,0,6,0,0,0,184,0,0,0,42,0,0,0,8,0,0,0,6,0,0,0,12,0,0,0,4,0,0,0,10,0,0,0,4,0,0,0,2,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,62,0,0,106,0,0,0,18,0,0,0,42,0,0,0,20,0,0,0,24,0,0,0,32,0,0,0,22,0,0,0,30,0,0,0,8,0,0,0,6,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,62,0,0,36,0,0,0,22,0,0,0,42,0,0,0,46,0,0,0,44,0,0,0,36,0,0,0,38,0,0,0,26,0,0,0,42,0,0,0,34,0,0,0,52,0,0,0,50,0,0,0,48,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,62,0,0,46,0,0,0,4,0,0,0,42,0,0,0,76,0,0,0,68,0,0,0,62,0,0,0,64,0,0,0,56,0,0,0,66,0,0,0,60,0,0,0,74,0,0,0,72,0,0,0,70,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,62,0,0,74,0,0,0,98,0,0,0,42,0,0,0,14,0,0,0].concat([12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,62,0,0,24,0,0,0,186,0,0,0,42,0,0,0,22,0,0,0,14,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,62,0,0,244,0,0,0,136,0,0,0,42,0,0,0,14,0,0,0,4,0,0,0,20,0,0,0,16,0,0,0,66,0,0,0,4,0,0,0,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,0,0,190,0,0,0,60,0,0,0,42,0,0,0,2,0,0,0,8,0,0,0,8,0,0,0,108,0,0,0,98,0,0,0,18,0,0,0,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,63,0,0,190,0,0,0,140,0,0,0,42,0,0,0,16,0,0,0,6,0,0,0,2,0,0,0,128,0,0,0,50,0,0,0,12,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,63,0,0,190,0,0,0,160,0,0,0,42,0,0,0,10,0,0,0,12,0,0,0,24,0,0,0,38,0,0,0,78,0,0,0,6,0,0,0,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,63,0,0,190,0,0,0,30,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,63,0,0,54,0,0,0,164,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,190,0,0,0,80,0,0,0,42,0,0,0,20,0,0,0,2,0,0,0,4,0,0,0,10,0,0,0,18,0,0,0,30,0,0,0,28,0,0,0,6,0,0,0,6,0,0,0,8,0,0,0,10,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,63,0,0,18,1,0,0,32,0,0,0,42,0,0,0,2,0,0,0,4,0,0,0,22,0,0,0,38,0,0,0,8,0,0,0,6,0,0,0,26,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,63,0,0,68,0,0,0,234,0,0,0,82,0,0,0,2,0,0,0,14,0,0,0,36,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,63,0,0,190,0,0,0,86,0,0,0,42,0,0,0,10,0,0,0,12,0,0,0,24,0,0,0,38,0,0,0,78,0,0,0,6,0,0,0,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,0,0,190,0,0,0,174,0,0,0,42,0,0,0,10,0,0,0,12,0,0,0,24,0,0,0,38,0,0,0,78,0,0,0,6,0,0,0,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,132,0,0,0,252,0,0,0,16,0,0,0,22,0,0,0,16,0,0,0,10,0,0,0,30,0,0,0,102,0,0,0,34,0,0,0,28,0,0,0,26,0,0,0,34,0,0,0,44,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,64,0,0,10,0,0,0,124,0,0,0,54,0,0,0,42,0,0,0,28,0,0,0,6,0,0,0,54,0,0,0,90,0,0,0,18,0,0,0,6,0,0,0,10,0,0,0,30,0,0,0,16,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,56,64,0,0,38,0,0,0,224,0,0,0,252,255,255,255,252,255,255,255,56,64,0,0,154,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,80,64,0,0,230,0,0,0,138,0,0,0,252,255,255,255,252,255,255,255,80,64,0,0,112,0,0,0,214,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,104,64,0,0,92,0,0,0,22,1,0,0,248,255,255,255,248,255,255,255,104,64,0,0,194,0,0,0,250,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,128,64,0,0,110,0,0,0,220,0,0,0,248,255,255,255,248,255,255,255,128,64,0,0,142,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,64,0,0,218,0,0,0,196,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,64,0,0,8,1,0,0,242,0,0,0,4,0,0,0,22,0,0,0,16,0,0,0,10,0,0,0,62,0,0,0,102,0,0,0,34,0,0,0,28,0,0,0,26,0,0,0,34,0,0,0,44,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,64,0,0,162,0,0,0,188,0,0,0,32,0,0,0,42,0,0,0,28,0,0,0,6,0,0,0,92,0,0,0,90,0,0,0,18,0,0,0,6,0,0,0,10,0,0,0,30,0,0,0,16,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,236,0,0,0,152,0,0,0,42,0,0,0,72,0,0,0,120,0,0,0,40,0,0,0,76,0,0,0,6,0,0,0,28,0,0,0,56,0,0,0,20,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,65,0,0,108,0,0,0,50,0,0,0,42,0,0,0,114,0,0,0,4,0,0,0,62,0,0,0,70,0,0,0,72,0,0,0,22,0,0,0,116,0,0,0,46,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,65,0,0,240,0,0,0,120,0,0,0,42,0,0,0,14,0,0,0,64,0,0,0,42,0,0,0,38,0,0,0,74,0,0,0,48,0,0,0,94,0,0,0,52,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,65,0,0,76,0,0,0,182,0,0,0,42,0,0,0,104,0,0,0,110,0,0,0,26,0,0,0,68,0,0,0,24,0,0,0,18,0,0,0,84,0,0,0,66,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,65,0,0,94,0,0,0,70,0,0,0,58,0,0,0,22,0,0,0,16,0,0,0,10,0,0,0,30,0,0,0,102,0,0,0,34,0,0,0,76,0,0,0,86,0,0,0,12,0,0,0,44,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,65,0,0,14,0,0,0,232,0,0,0,56,0,0,0,42,0,0,0,28,0,0,0,6,0,0,0,54,0,0,0,90,0,0,0,18,0,0,0,60,0,0,0,24,0,0,0,4,0,0,0,16,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,65,0,0,10,1,0,0,90,0,0,0,62,0,0,0,158,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,65,0,0,10,1,0,0,210,0,0,0,62,0,0,0,158,0,0,0,8,0,0,0,2,0,0,0,6,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,40,66,0,0,96,0,0,0,246,0,0,0,52,0,0,0,48,0,0,0,36,0,0,0,180,255,255,255,180,255,255,255,180,255,255,255,180,255,255,255,40,66,0,0,222,0,0,0,166,0,0,0,212,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,66,0,0,216,0,0,0,144,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,66,0,0,88,0,0,0,254,0,0,0,104,0,0,0,204,0,0,0,0,0,0,0,0,0,0,0,132,46,0,0,172,46,0,0,119,0,0,0,0,0,0,0,118,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,80,75,99,0,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,48,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,48,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,48,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,48,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,51,95,95,102,117,110,100,97,109,101,110,116,97,108,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,78,49,48,67,108,105,112,112,101,114,76,105,98,55,67,108,105,112,112,101,114,69,0,0,78,49,48,67,108,105,112,112,101,114,76,105,98,49,54,99,108,105,112,112,101,114,69,120,99,101,112,116,105,111,110,69,0,0,0,0,0,0,0,0,78,49,48,67,108,105,112,112,101,114,76,105,98,49,49,67,108,105,112,112,101,114,66,97,115,101,69,0,0,0,0,0,68,110,0,0,0,0,0,0,40,46,0,0,24,47,0,0,0,0,0,0,40,47,0,0,0,0,0,0,56,47,0,0,0,0,0,0,72,47,0,0,200,59,0,0,0,0,0,0,0,0,0,0,88,47,0,0,200,59,0,0,0,0,0,0,0,0,0,0,104,47,0,0,200,59,0,0,0,0,0,0,0,0,0,0,128,47,0,0,16,60,0,0,0,0,0,0,0,0,0,0,152,47,0,0,200,59,0,0,0,0,0,0,0,0,0,0,168,47,0,0,1,0,0,0,0,0,0,0,0,0,0,0,176,47,0,0,80,46,0,0,200,47,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,224,64,0,0,0,0,0,0,80,46,0,0,16,48,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,232,64,0,0,0,0,0,0,80,46,0,0,88,48,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,240,64,0,0,0,0,0,0,80,46,0,0,160,48,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,248,64,0,0,0,0,0,0,0,0,0,0,232,48,0,0,40,62,0,0,0,0,0,0,0,0,0,0,24,49,0,0,40,62,0,0,0,0,0,0,80,46,0,0,72,49,0,0,0,0,0,0,1,0,0,0,32,64,0,0,0,0,0,0,80,46,0,0,96,49,0,0,0,0,0,0,1,0,0,0,32,64,0,0,0,0,0,0,80,46,0,0,120,49,0,0,0,0,0,0,1,0,0,0,40,64,0,0,0,0,0,0,80,46,0,0,144,49,0,0,0,0,0,0,1,0,0,0,40,64,0,0,0,0,0,0,80,46,0,0,168,49,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,144,65,0,0,0,8,0,0,80,46,0,0,240,49,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,144,65,0,0,0,8,0,0,80,46,0,0,56,50,0,0,0,0,0,0,3,0,0,0,96,63,0,0,2,0,0,0,48,60,0,0,2,0,0,0,192,63,0,0,0,8,0,0,80,46,0,0,128,50,0,0,0,0,0,0,3,0,0,0,96,63,0,0,2,0,0,0,48,60,0,0,2,0,0,0,200,63,0,0,0,8,0,0,0,0,0,0,200,50,0,0,96,63,0,0,0,0,0,0,0,0,0,0,224,50,0,0,96,63,0,0,0,0,0,0,80,46,0,0,248,50,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,48,64,0,0,2,0,0,0,80,46,0,0,16,51,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,48,64,0,0,2,0,0,0,0,0,0,0,40,51,0,0,0,0,0,0,64,51,0,0,152,64,0,0,0,0,0,0,80,46,0,0,96,51,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,216,60,0,0,0,0,0,0,80,46,0,0,168,51,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,240,60,0,0,0,0,0,0,80,46,0,0,240,51,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,8,61,0,0,0,0,0,0,80,46,0,0,56,52,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,32,61,0,0,0,0,0,0,0,0,0,0,128,52,0,0,96,63,0,0,0,0,0,0,0,0,0,0,152,52,0,0,96,63,0,0,0,0,0,0,80,46,0,0,176,52,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,168,64,0,0,2,0,0,0,80,46,0,0,216,52,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,168,64,0,0,2,0,0,0,80,46,0,0,0,53,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,168,64,0,0,2,0,0,0,80,46,0,0,40,53,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,168,64,0,0,2,0,0,0,0,0,0,0,80,53,0,0,24,64,0,0,0,0,0,0,0,0,0,0,104,53,0,0,96,63,0,0,0,0,0,0,80,46,0,0,128,53,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,136,65,0,0,2,0,0,0,80,46,0,0,152,53,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,136,65,0,0,2,0,0,0,0,0,0,0,176,53,0,0,0,0,0,0,216,53,0,0,0,0,0,0,0,54,0,0,176,64,0,0,0,0,0,0,0,0,0,0,32,54,0,0,64,63,0,0,0,0,0,0,0,0,0,0,72,54,0,0,64,63,0,0,0,0,0,0,0,0,0,0,112,54,0,0,0,0,0,0,168,54,0,0,0,0,0,0,224,54,0,0,0,0,0,0,0,55,0,0,0,0,0,0,32,55,0,0,0,0,0,0,64,55,0,0,0,0,0,0,96,55,0,0,80,46,0,0,120,55,0,0,0,0,0,0,1,0,0,0,184,60,0,0,3,244,255,255,80,46,0,0,168,55,0,0,0,0,0,0,1,0,0,0,200,60,0,0,3,244,255,255,80,46,0,0,216,55,0,0,0,0,0,0,1,0,0,0,184,60,0,0,3,244,255,255,80,46,0,0,8,56,0,0,0,0,0,0,1,0,0,0,200,60,0,0,3,244,255,255,0,0,0,0,56,56,0,0,240,59,0,0,0,0,0,0,0,0,0,0,80,56,0,0,0,0,0,0,104,56,0,0,16,64,0,0,0,0,0,0,0,0,0,0,128,56,0,0,0,64,0,0,0,0,0,0,0,0,0,0,160,56,0,0,8,64,0,0,0,0,0,0,0,0,0,0,192,56,0,0,0,0,0,0,224,56,0,0,0,0,0,0,0,57,0,0,0,0,0,0,32,57,0,0,80,46,0,0,64,57,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,128,65,0,0,2,0,0,0,80,46,0,0,96,57,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,128,65,0,0,2,0,0,0,80,46,0,0,128,57,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,128,65,0,0,2,0,0,0,80,46,0,0,160,57,0,0,0,0,0,0,2,0,0,0,96,63,0,0,2,0,0,0,128,65,0,0,2,0,0,0,0,0,0,0,192,57,0,0,0,0,0,0,216,57,0,0,0,0,0,0,240,57,0,0,0,0,0,0,8,58,0,0,0,64,0,0,0,0,0,0,0,0,0,0,32,58,0,0,8,64,0,0,0,0,0,0,0,0,0,0,56,58,0,0,24,66,0,0,0,0,0,0,0,0,0,0,96,58,0,0,8,66,0,0,0,0,0,0,0,0,0,0,136,58,0,0,8,66,0,0,0,0,0,0,0,0,0,0,176,58,0,0,248,65,0,0,0,0,0,0,0,0,0,0,216,58,0,0,24,66,0,0,0,0,0,0,0,0,0,0,0,59,0,0,24,66,0,0,0,0,0,0,0,0,0,0,40,59,0,0,192,59,0,0,0,0,0,0,80,46,0,0,80,59,0,0,0,0,0,0,1,0,0,0,80,66,0,0,3,244,255,255,0,0,0,0,104,59,0,0,200,59,0,0,0,0,0,0,0,0,0,0,144,59,0,0,40,46,0,0,176,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
, "i8", ALLOC_NONE, Runtime.GLOBAL_BASE)
function runPostSets() {
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(8))>>2)]=(266);
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(12))>>2)]=(134);
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(16))>>2)]=(62);
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(20))>>2)]=(158);
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(24))>>2)]=(8);
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(28))>>2)]=(10);
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(32))>>2)]=(2);
HEAP32[(((__ZTVN10__cxxabiv120__si_class_type_infoE)+(36))>>2)]=(2);
HEAP32[(((__ZTVN10__cxxabiv119__pointer_type_infoE)+(8))>>2)]=(266);
HEAP32[(((__ZTVN10__cxxabiv119__pointer_type_infoE)+(12))>>2)]=(64);
HEAP32[(((__ZTVN10__cxxabiv119__pointer_type_infoE)+(16))>>2)]=(62);
HEAP32[(((__ZTVN10__cxxabiv119__pointer_type_infoE)+(20))>>2)]=(158);
HEAP32[(((__ZTVN10__cxxabiv119__pointer_type_infoE)+(24))>>2)]=(28);
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(8))>>2)]=(266);
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(12))>>2)]=(260);
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(16))>>2)]=(62);
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(20))>>2)]=(158);
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(24))>>2)]=(8);
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(28))>>2)]=(26);
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(32))>>2)]=(4);
HEAP32[(((__ZTVN10__cxxabiv117__class_type_infoE)+(36))>>2)]=(8);
HEAP32[((__ZTIc)>>2)]=(((11816)|0));
HEAP32[(((__ZTIc)+(4))>>2)]=((12064)|0);
HEAP32[((15296)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((15304)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((15312)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15328)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15344)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15360)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15376)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15392)>>2)]=(((__ZTVN10__cxxabiv119__pointer_type_infoE+8)|0));
HEAP32[((15404)>>2)]=__ZTIc;
HEAP32[((15408)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((15544)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15560)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15816)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15832)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((15912)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((15920)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16064)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16080)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16224)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16240)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16320)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16328)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16336)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16352)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16368)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16384)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16392)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16400)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16408)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16416)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16424)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16432)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16536)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16552)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16560)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16576)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16592)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16608)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16616)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16624)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16632)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16768)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16776)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16784)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((16792)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16808)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16824)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16840)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16856)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16872)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16888)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16904)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16920)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16960)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((16976)>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
}
if (!awaitingMemoryInitializer) runPostSets();
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);
assert(tempDoublePtr % 8 == 0);
function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}
  var _llvm_dbg_declare=undefined;
  var _llvm_va_start=undefined;
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:35,EIDRM:36,ECHRNG:37,EL2NSYNC:38,EL3HLT:39,EL3RST:40,ELNRNG:41,EUNATCH:42,ENOCSI:43,EL2HLT:44,EDEADLK:45,ENOLCK:46,EBADE:50,EBADR:51,EXFULL:52,ENOANO:53,EBADRQC:54,EBADSLT:55,EDEADLOCK:56,EBFONT:57,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:74,ELBIN:75,EDOTDOT:76,EBADMSG:77,EFTYPE:79,ENOTUNIQ:80,EBADFD:81,EREMCHG:82,ELIBACC:83,ELIBBAD:84,ELIBSCN:85,ELIBMAX:86,ELIBEXEC:87,ENOSYS:88,ENMFILE:89,ENOTEMPTY:90,ENAMETOOLONG:91,ELOOP:92,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:106,EPROTOTYPE:107,ENOTSOCK:108,ENOPROTOOPT:109,ESHUTDOWN:110,ECONNREFUSED:111,EADDRINUSE:112,ECONNABORTED:113,ENETUNREACH:114,ENETDOWN:115,ETIMEDOUT:116,EHOSTDOWN:117,EHOSTUNREACH:118,EINPROGRESS:119,EALREADY:120,EDESTADDRREQ:121,EMSGSIZE:122,EPROTONOSUPPORT:123,ESOCKTNOSUPPORT:124,EADDRNOTAVAIL:125,ENETRESET:126,EISCONN:127,ENOTCONN:128,ETOOMANYREFS:129,EPROCLIM:130,EUSERS:131,EDQUOT:132,ESTALE:133,ENOTSUP:134,ENOMEDIUM:135,ENOSHARE:136,ECASECLASH:137,EILSEQ:138,EOVERFLOW:139,ECANCELED:140,ENOTRECOVERABLE:141,EOWNERDEAD:142,ESTRPIPE:143};
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value
      return value;
    }
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  var __impure_ptr=allocate(1, "i32*", ALLOC_STATIC);var FS={currentPath:"/",nextInode:2,streams:[null],ignorePermissions:true,createFileHandle:function (stream, fd) {
        if (typeof stream === 'undefined') {
          stream = null;
        }
        if (!fd) {
          if (stream && stream.socket) {
            for (var i = 1; i < 64; i++) {
              if (!FS.streams[i]) {
                fd = i;
                break;
              }
            }
            assert(fd, 'ran out of low fds for sockets');
          } else {
            fd = Math.max(FS.streams.length, 64);
            for (var i = FS.streams.length; i < fd; i++) {
              FS.streams[i] = null; // Keep dense
            }
          }
        }
        // Close WebSocket first if we are about to replace the fd (i.e. dup2)
        if (FS.streams[fd] && FS.streams[fd].socket && FS.streams[fd].socket.close) {
          FS.streams[fd].socket.close();
        }
        FS.streams[fd] = stream;
        return fd;
      },removeFileHandle:function (fd) {
        FS.streams[fd] = null;
      },joinPath:function (parts, forceRelative) {
        var ret = parts[0];
        for (var i = 1; i < parts.length; i++) {
          if (ret[ret.length-1] != '/') ret += '/';
          ret += parts[i];
        }
        if (forceRelative && ret[0] == '/') ret = ret.substr(1);
        return ret;
      },absolutePath:function (relative, base) {
        if (typeof relative !== 'string') return null;
        if (base === undefined) base = FS.currentPath;
        if (relative && relative[0] == '/') base = '';
        var full = base + '/' + relative;
        var parts = full.split('/').reverse();
        var absolute = [''];
        while (parts.length) {
          var part = parts.pop();
          if (part == '' || part == '.') {
            // Nothing.
          } else if (part == '..') {
            if (absolute.length > 1) absolute.pop();
          } else {
            absolute.push(part);
          }
        }
        return absolute.length == 1 ? '/' : absolute.join('/');
      },analyzePath:function (path, dontResolveLastLink, linksVisited) {
        var ret = {
          isRoot: false,
          exists: false,
          error: 0,
          name: null,
          path: null,
          object: null,
          parentExists: false,
          parentPath: null,
          parentObject: null
        };
        path = FS.absolutePath(path);
        if (path == '/') {
          ret.isRoot = true;
          ret.exists = ret.parentExists = true;
          ret.name = '/';
          ret.path = ret.parentPath = '/';
          ret.object = ret.parentObject = FS.root;
        } else if (path !== null) {
          linksVisited = linksVisited || 0;
          path = path.slice(1).split('/');
          var current = FS.root;
          var traversed = [''];
          while (path.length) {
            if (path.length == 1 && current.isFolder) {
              ret.parentExists = true;
              ret.parentPath = traversed.length == 1 ? '/' : traversed.join('/');
              ret.parentObject = current;
              ret.name = path[0];
            }
            var target = path.shift();
            if (!current.isFolder) {
              ret.error = ERRNO_CODES.ENOTDIR;
              break;
            } else if (!current.read) {
              ret.error = ERRNO_CODES.EACCES;
              break;
            } else if (!current.contents.hasOwnProperty(target)) {
              ret.error = ERRNO_CODES.ENOENT;
              break;
            }
            current = current.contents[target];
            if (current.link && !(dontResolveLastLink && path.length == 0)) {
              if (linksVisited > 40) { // Usual Linux SYMLOOP_MAX.
                ret.error = ERRNO_CODES.ELOOP;
                break;
              }
              var link = FS.absolutePath(current.link, traversed.join('/'));
              ret = FS.analyzePath([link].concat(path).join('/'),
                                   dontResolveLastLink, linksVisited + 1);
              return ret;
            }
            traversed.push(target);
            if (path.length == 0) {
              ret.exists = true;
              ret.path = traversed.join('/');
              ret.object = current;
            }
          }
        }
        return ret;
      },findObject:function (path, dontResolveLastLink) {
        FS.ensureRoot();
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },createObject:function (parent, name, properties, canRead, canWrite) {
        if (!parent) parent = '/';
        if (typeof parent === 'string') parent = FS.findObject(parent);
        if (!parent) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent path must exist.');
        }
        if (!parent.isFolder) {
          ___setErrNo(ERRNO_CODES.ENOTDIR);
          throw new Error('Parent must be a folder.');
        }
        if (!parent.write && !FS.ignorePermissions) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent folder must be writeable.');
        }
        if (!name || name == '.' || name == '..') {
          ___setErrNo(ERRNO_CODES.ENOENT);
          throw new Error('Name must not be empty.');
        }
        if (parent.contents.hasOwnProperty(name)) {
          ___setErrNo(ERRNO_CODES.EEXIST);
          throw new Error("Can't overwrite object.");
        }
        parent.contents[name] = {
          read: canRead === undefined ? true : canRead,
          write: canWrite === undefined ? false : canWrite,
          timestamp: Date.now(),
          inodeNumber: FS.nextInode++
        };
        for (var key in properties) {
          if (properties.hasOwnProperty(key)) {
            parent.contents[name][key] = properties[key];
          }
        }
        return parent.contents[name];
      },createFolder:function (parent, name, canRead, canWrite) {
        var properties = {isFolder: true, isDevice: false, contents: {}};
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createPath:function (parent, path, canRead, canWrite) {
        var current = FS.findObject(parent);
        if (current === null) throw new Error('Invalid parent.');
        path = path.split('/').reverse();
        while (path.length) {
          var part = path.pop();
          if (!part) continue;
          if (!current.contents.hasOwnProperty(part)) {
            FS.createFolder(current, part, canRead, canWrite);
          }
          current = current.contents[part];
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        properties.isFolder = false;
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createDataFile:function (parent, name, data, canRead, canWrite) {
        if (typeof data === 'string') {
          var dataArray = new Array(data.length);
          for (var i = 0, len = data.length; i < len; ++i) dataArray[i] = data.charCodeAt(i);
          data = dataArray;
        }
        var properties = {
          isDevice: false,
          contents: data.subarray ? data.subarray(0) : data // as an optimization, create a new array wrapper (not buffer) here, to help JS engines understand this object
        };
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          var LazyUint8Array = function() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
              if (!hasByteServing) chunkSize = datalength;
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile) {
        Browser.init();
        var fullname = FS.joinPath([parent, name], true);
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },createLink:function (parent, name, target, canRead, canWrite) {
        var properties = {isDevice: false, link: target};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createDevice:function (parent, name, input, output) {
        if (!(input || output)) {
          throw new Error('A device must have at least one callback defined.');
        }
        var ops = {isDevice: true, input: input, output: output};
        return FS.createFile(parent, name, ops, Boolean(input), Boolean(output));
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },ensureRoot:function () {
        if (FS.root) return;
        // The main file system tree. All the contents are inside this.
        FS.root = {
          read: true,
          write: true,
          isFolder: true,
          isDevice: false,
          timestamp: Date.now(),
          inodeNumber: 1,
          contents: {}
        };
      },init:function (input, output, error) {
        // Make sure we initialize only once.
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
        FS.ensureRoot();
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        input = input || Module['stdin'];
        output = output || Module['stdout'];
        error = error || Module['stderr'];
        // Default handlers.
        var stdinOverridden = true, stdoutOverridden = true, stderrOverridden = true;
        if (!input) {
          stdinOverridden = false;
          input = function() {
            if (!input.cache || !input.cache.length) {
              var result;
              if (typeof window != 'undefined' &&
                  typeof window.prompt == 'function') {
                // Browser.
                result = window.prompt('Input: ');
                if (result === null) result = String.fromCharCode(0); // cancel ==> EOF
              } else if (typeof readline == 'function') {
                // Command line.
                result = readline();
              }
              if (!result) result = '';
              input.cache = intArrayFromString(result + '\n', true);
            }
            return input.cache.shift();
          };
        }
        var utf8 = new Runtime.UTF8Processor();
        function simpleOutput(val) {
          if (val === null || val === 10) {
            output.printer(output.buffer.join(''));
            output.buffer = [];
          } else {
            output.buffer.push(utf8.processCChar(val));
          }
        }
        if (!output) {
          stdoutOverridden = false;
          output = simpleOutput;
        }
        if (!output.printer) output.printer = Module['print'];
        if (!output.buffer) output.buffer = [];
        if (!error) {
          stderrOverridden = false;
          error = simpleOutput;
        }
        if (!error.printer) error.printer = Module['print'];
        if (!error.buffer) error.buffer = [];
        // Create the temporary folder, if not already created
        try {
          FS.createFolder('/', 'tmp', true, true);
        } catch(e) {}
        // Create the I/O devices.
        var devFolder = FS.createFolder('/', 'dev', true, true);
        var stdin = FS.createDevice(devFolder, 'stdin', input);
        var stdout = FS.createDevice(devFolder, 'stdout', null, output);
        var stderr = FS.createDevice(devFolder, 'stderr', null, error);
        FS.createDevice(devFolder, 'tty', input, output);
        FS.createDevice(devFolder, 'null', function(){}, function(){});
        // Create default streams.
        FS.streams[1] = {
          path: '/dev/stdin',
          object: stdin,
          position: 0,
          isRead: true,
          isWrite: false,
          isAppend: false,
          isTerminal: !stdinOverridden,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[2] = {
          path: '/dev/stdout',
          object: stdout,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          isTerminal: !stdoutOverridden,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[3] = {
          path: '/dev/stderr',
          object: stderr,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          isTerminal: !stderrOverridden,
          error: false,
          eof: false,
          ungotten: []
        };
        // TODO: put these low in memory like we used to assert on: assert(Math.max(_stdin, _stdout, _stderr) < 15000); // make sure these are low, we flatten arrays with these
        HEAP32[((_stdin)>>2)]=1;
        HEAP32[((_stdout)>>2)]=2;
        HEAP32[((_stderr)>>2)]=3;
        // Other system paths
        FS.createPath('/', 'dev/shm/tmp', true, true); // temp files
        // Newlib initialization
        for (var i = FS.streams.length; i < Math.max(_stdin, _stdout, _stderr) + 4; i++) {
          FS.streams[i] = null; // Make sure to keep FS.streams dense
        }
        FS.streams[_stdin] = FS.streams[1];
        FS.streams[_stdout] = FS.streams[2];
        FS.streams[_stderr] = FS.streams[3];
        allocate([ allocate(
          [0, 0, 0, 0, _stdin, 0, 0, 0, _stdout, 0, 0, 0, _stderr, 0, 0, 0],
          'void*', ALLOC_NORMAL) ], 'void*', ALLOC_NONE, __impure_ptr);
      },quit:function () {
        if (!FS.init.initialized) return;
        // Flush any partially-printed lines in stdout and stderr. Careful, they may have been closed
        if (FS.streams[2] && FS.streams[2].object.output.buffer.length > 0) FS.streams[2].object.output(10);
        if (FS.streams[3] && FS.streams[3].object.output.buffer.length > 0) FS.streams[3].object.output(10);
      },standardizePath:function (path) {
        if (path.substr(0, 2) == './') path = path.substr(2);
        return path;
      },deleteFile:function (path) {
        path = FS.analyzePath(path);
        if (!path.parentExists || !path.exists) {
          throw 'Invalid path ' + path;
        }
        delete path.parentObject.contents[path.name];
      }};
  function _send(fd, buf, len, flags) {
      var info = FS.streams[fd];
      if (!info) return -1;
      info.sender(HEAPU8.subarray(buf, buf+len));
      return len;
    }
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (!stream || stream.object.isDevice) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (stream.object.isFolder) {
        ___setErrNo(ERRNO_CODES.EISDIR);
        return -1;
      } else if (nbyte < 0 || offset < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var contents = stream.object.contents;
        while (contents.length < offset) contents.push(0);
        for (var i = 0; i < nbyte; i++) {
          contents[offset + i] = HEAPU8[(((buf)+(i))|0)];
        }
        stream.object.timestamp = Date.now();
        return i;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (stream && ('socket' in stream)) {
          return _send(fildes, buf, nbyte, 0);
      } else if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (nbyte < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        if (stream.object.isDevice) {
          if (stream.object.output) {
            for (var i = 0; i < nbyte; i++) {
              try {
                stream.object.output(HEAP8[(((buf)+(i))|0)]);
              } catch (e) {
                ___setErrNo(ERRNO_CODES.EIO);
                return -1;
              }
            }
            stream.object.timestamp = Date.now();
            return i;
          } else {
            ___setErrNo(ERRNO_CODES.ENXIO);
            return -1;
          }
        } else {
          var bytesWritten = _pwrite(fildes, buf, nbyte, stream.position);
          if (bytesWritten != -1) stream.position += bytesWritten;
          return bytesWritten;
        }
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        if (FS.streams[stream]) FS.streams[stream].error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  Module["_strlen"] = _strlen;
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
          // Handle precision.
          var precisionSet = false;
          if (next == 46) {
            var precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          } else {
            var precision = 6; // Standard default.
          }
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
              // Add sign if needed
              if (flagAlwaysSigned) {
                if (currArg < 0) {
                  prefix = '-' + prefix;
                } else {
                  prefix = '+' + prefix;
                }
              }
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
                // Add sign.
                if (flagAlwaysSigned && currArg >= 0) {
                  argText = '+' + argText;
                }
              }
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }
  function _llvm_va_end() {}
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      var flush = function(filedes) {
        // Right now we write all data directly, except for output devices.
        if (FS.streams[filedes] && FS.streams[filedes].object.output) {
          if (!FS.streams[filedes].isTerminal) { // don't flush terminals, it would cause a \n to also appear
            FS.streams[filedes].object.output(null);
          }
        }
      };
      try {
        if (stream === 0) {
          for (var i = 0; i < FS.streams.length; i++) if (FS.streams[i]) flush(i);
        } else {
          flush(stream);
        }
        return 0;
      } catch (e) {
        ___setErrNo(ERRNO_CODES.EIO);
        return -1;
      }
    }
  function ___gxx_personality_v0() {
    }
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      function ExitStatus() {
        this.name = "ExitStatus";
        this.message = "Program terminated with exit(" + status + ")";
        this.status = status;
        Module.print('Exit Status: ' + status);
      };
      ExitStatus.prototype = new Error();
      ExitStatus.prototype.constructor = ExitStatus;
      exitRuntime();
      ABORT = true;
      throw new ExitStatus();
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i32=_memset;
  var ___dirent_struct_layout={__size__:1040,d_ino:0,d_name:4,d_off:1028,d_reclen:1032,d_type:1036};function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      // NOTE: This implementation tries to mimic glibc rather than strictly
      // following the POSIX standard.
      var mode = HEAP32[((varargs)>>2)];
      // Simplify flags.
      var accessMode = oflag & 3;
      var isWrite = accessMode != 0;
      var isRead = accessMode != 1;
      var isCreate = Boolean(oflag & 512);
      var isExistCheck = Boolean(oflag & 2048);
      var isTruncate = Boolean(oflag & 1024);
      var isAppend = Boolean(oflag & 8);
      // Verify path.
      var origPath = path;
      path = FS.analyzePath(Pointer_stringify(path));
      if (!path.parentExists) {
        ___setErrNo(path.error);
        return -1;
      }
      var target = path.object || null;
      var finalPath;
      // Verify the file exists, create if needed and allowed.
      if (target) {
        if (isCreate && isExistCheck) {
          ___setErrNo(ERRNO_CODES.EEXIST);
          return -1;
        }
        if ((isWrite || isCreate || isTruncate) && target.isFolder) {
          ___setErrNo(ERRNO_CODES.EISDIR);
          return -1;
        }
        if (isRead && !target.read || isWrite && !target.write) {
          ___setErrNo(ERRNO_CODES.EACCES);
          return -1;
        }
        if (isTruncate && !target.isDevice) {
          target.contents = [];
        } else {
          if (!FS.forceLoadFile(target)) {
            ___setErrNo(ERRNO_CODES.EIO);
            return -1;
          }
        }
        finalPath = path.path;
      } else {
        if (!isCreate) {
          ___setErrNo(ERRNO_CODES.ENOENT);
          return -1;
        }
        if (!path.parentObject.write) {
          ___setErrNo(ERRNO_CODES.EACCES);
          return -1;
        }
        target = FS.createDataFile(path.parentObject, path.name, [],
                                   mode & 0x100, mode & 0x80);  // S_IRUSR, S_IWUSR.
        finalPath = path.parentPath + '/' + path.name;
      }
      // Actually create an open stream.
      var id;
      if (target.isFolder) {
        var entryBuffer = 0;
        if (___dirent_struct_layout) {
          entryBuffer = _malloc(___dirent_struct_layout.__size__);
        }
        var contents = [];
        for (var key in target.contents) contents.push(key);
        id = FS.createFileHandle({
          path: finalPath,
          object: target,
          // An index into contents. Special values: -2 is ".", -1 is "..".
          position: -2,
          isRead: true,
          isWrite: false,
          isAppend: false,
          error: false,
          eof: false,
          ungotten: [],
          // Folder-specific properties:
          // Remember the contents at the time of opening in an array, so we can
          // seek between them relying on a single order.
          contents: contents,
          // Each stream has its own area for readdir() returns.
          currentEntry: entryBuffer
        });
      } else {
        id = FS.createFileHandle({
          path: finalPath,
          object: target,
          position: 0,
          isRead: isRead,
          isWrite: isWrite,
          isAppend: isAppend,
          error: false,
          eof: false,
          ungotten: []
        });
      }
      return id;
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 512;
        flags |= 1024;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 512;
        flags |= 8;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var ret = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return (ret == -1) ? 0 : ret;
    }
  function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      if (FS.streams[fildes]) {
        if (FS.streams[fildes].currentEntry) {
          _free(FS.streams[fildes].currentEntry);
        }
        FS.streams[fildes] = null;
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      if (FS.streams[fildes]) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      _fsync(stream);
      return _close(stream);
    }
  var _fabs=Math.abs;
  function _llvm_umul_with_overflow_i32(x, y) {
      x = x>>>0;
      y = y>>>0;
      return ((asm["setTempRet0"](x*y > 4294967295),(x*y)>>>0)|0);
    }
  function _llvm_uadd_with_overflow_i32(x, y) {
      x = x>>>0;
      y = y>>>0;
      return ((asm["setTempRet0"](x+y > 4294967295),(x+y)>>>0)|0);
    }
  function _qsort(base, num, size, cmp) {
      if (num == 0 || size == 0) return;
      // forward calls to the JavaScript sort method
      // first, sort the items logically
      var comparator = function(x, y) {
        return Runtime.dynCall('iii', cmp, [x, y]);
      }
      var keys = [];
      for (var i = 0; i < num; i++) keys.push(i);
      keys.sort(function(a, b) {
        return comparator(base+a*size, base+b*size);
      });
      // apply the sort
      var temp = _malloc(num*size);
      _memcpy(temp, base, num*size);
      for (var i = 0; i < num; i++) {
        if (keys[i] == i) continue; // already in place
        _memcpy(base+i*size, temp+keys[i]*size, size);
      }
      _free(temp);
    }
  var _atan2=Math.atan2;
  function _strchr(ptr, chr) {
      ptr--;
      do {
        ptr++;
        var val = HEAP8[(ptr)];
        if (val == chr) return ptr;
      } while (val);
      return 0;
    }
  Module["_tolower"] = _tolower; 
  Module["_strncasecmp"] = _strncasecmp; 
  Module["_strcasecmp"] = _strcasecmp;
  function _isspace(chr) {
      return chr in { 32: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0 };
    }function __parseInt(str, endptr, base, min, max, bits, unsign) {
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
      // Check for a plus/minus sign.
      var multiplier = 1;
      if (HEAP8[(str)] == 45) {
        multiplier = -1;
        str++;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
      // Find base.
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            str++;
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      // Get digits.
      var chr;
      var ret = 0;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          ret = ret * finalBase + digit;
          str++;
        }
      }
      // Apply sign.
      ret *= multiplier;
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str
      }
      // Unsign if needed.
      if (unsign) {
        if (Math.abs(ret) > max) {
          ret = max;
          ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          ret = unSign(ret, bits);
        }
      }
      // Validate range.
      if (ret > max || ret < min) {
        ret = ret > max ? max : min;
        ___setErrNo(ERRNO_CODES.ERANGE);
      }
      if (bits == 64) {
        return ((asm["setTempRet0"](((Math.min((+(Math.floor((ret)/(+(4294967296))))), (+(4294967295))))|0)>>>0),ret>>>0)|0);
      }
      return ret;
    }function _strtol(str, endptr, base) {
      return __parseInt(str, endptr, base, -2147483648, 2147483647, 32);  // LONG_MIN, LONG_MAX.
    }function _atoi(ptr) {
      return _strtol(ptr, null, 10);
    }
  function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var stdout = HEAP32[((_stdout)>>2)];
      return _fprintf(stdout, format, varargs);
    }
  function _signal(sig, func) {
      // TODO
      return 0;
    }
  function __isFloat(text) {
      return !!(/^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?$/.exec(text));
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
        __scanString.whiteSpace[' '] = 1;
        __scanString.whiteSpace['\t'] = 1;
        __scanString.whiteSpace['\n'] = 1;
        __scanString.whiteSpace['\v'] = 1;
        __scanString.whiteSpace['\f'] = 1;
        __scanString.whiteSpace['\r'] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
        // TODO: Support strings like "%5c" etc.
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'c') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          fields++;
          next = get();
          HEAP8[(argPtr)]=next
          formatIndex += 2;
          continue;
        }
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            var last = 0;
            next = get();
            while (next > 0) {
              buffer.push(String.fromCharCode(next));
              if (__isFloat(buffer.join(''))) {
                last = buffer.length;
              }
              next = get();
            }
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if (longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,((Math.min((+(Math.floor((parseInt(text, 10))/(+(4294967296))))), (+(4294967295))))|0)>>>0],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'X':
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16)
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text)
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text)
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j]
              }
              break;
          }
          fields++;
        } else if (format[formatIndex] in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      var get = function() { return HEAP8[(((s)+(index++))|0)]; };
      var unget = function() { index--; };
      return __scanString(format, get, unget, varargs);
    }
  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;
  function _ftell(stream) {
      // long ftell(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ftell.html
      if (FS.streams[stream]) {
        stream = FS.streams[stream];
        if (stream.object.isDevice) {
          ___setErrNo(ERRNO_CODES.ESPIPE);
          return -1;
        } else {
          return stream.position;
        }
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }
  var _sqrt=Math.sqrt;
  var _cos=Math.cos;
  var _sin=Math.sin;
  function _gettimeofday(ptr) {
      // %struct.timeval = type { i32, i32 }
      var now = Date.now();
      HEAP32[((ptr)>>2)]=Math.floor(now/1000); // seconds
      HEAP32[(((ptr)+(4))>>2)]=Math.floor((now-1000*Math.floor(now/1000))*1000); // microseconds
      return 0;
    }
  function _recv(fd, buf, len, flags) {
      var info = FS.streams[fd];
      if (!info) return -1;
      if (!info.hasData()) {
        ___setErrNo(ERRNO_CODES.EAGAIN); // no data, and all sockets are nonblocking, so this is the right behavior
        return -1;
      }
      var buffer = info.inQueue.shift();
      if (len < buffer.length) {
        if (info.stream) {
          // This is tcp (reliable), so if not all was read, keep it
          info.inQueue.unshift(buffer.subarray(len));
        }
        buffer = buffer.subarray(0, len);
      }
      HEAPU8.set(buffer, buf);
      return buffer.length;
    }
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.streams[fildes];
      if (!stream || stream.object.isDevice) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isRead) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (stream.object.isFolder) {
        ___setErrNo(ERRNO_CODES.EISDIR);
        return -1;
      } else if (nbyte < 0 || offset < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var bytesRead = 0;
        while (stream.ungotten.length && nbyte > 0) {
          HEAP8[((buf++)|0)]=stream.ungotten.pop()
          nbyte--;
          bytesRead++;
        }
        var contents = stream.object.contents;
        var size = Math.min(contents.length - offset, nbyte);
        if (contents.subarray) { // typed array
          HEAPU8.set(contents.subarray(offset, offset+size), buf);
        } else
        if (contents.slice) { // normal array
          for (var i = 0; i < size; i++) {
            HEAP8[(((buf)+(i))|0)]=contents[offset + i]
          }
        } else {
          for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
            HEAP8[(((buf)+(i))|0)]=contents.get(offset + i)
          }
        }
        bytesRead += size;
        return bytesRead;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.streams[fildes];
      if (stream && ('socket' in stream)) {
        return _recv(fildes, buf, nbyte, 0);
      } else if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isRead) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (nbyte < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var bytesRead;
        if (stream.object.isDevice) {
          if (stream.object.input) {
            bytesRead = 0;
            while (stream.ungotten.length && nbyte > 0) {
              HEAP8[((buf++)|0)]=stream.ungotten.pop()
              nbyte--;
              bytesRead++;
            }
            for (var i = 0; i < nbyte; i++) {
              try {
                var result = stream.object.input();
              } catch (e) {
                ___setErrNo(ERRNO_CODES.EIO);
                return -1;
              }
              if (result === undefined && bytesRead === 0) {
                ___setErrNo(ERRNO_CODES.EAGAIN);
                return -1;
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              HEAP8[(((buf)+(i))|0)]=result
            }
            return bytesRead;
          } else {
            ___setErrNo(ERRNO_CODES.ENXIO);
            return -1;
          }
        } else {
          var ungotSize = stream.ungotten.length;
          bytesRead = _pread(fildes, buf, nbyte, stream.position);
          if (bytesRead != -1) {
            stream.position += (stream.ungotten.length - ungotSize) + bytesRead;
          }
          return bytesRead;
        }
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) return 0;
      var bytesRead = _read(stream, ptr, bytesToRead);
      var streamObj = FS.streams[stream];
      if (bytesRead == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        if (bytesRead < bytesToRead) streamObj.eof = true;
        return Math.floor(bytesRead / size);
      }
    }
  function _strrchr(ptr, chr) {
      var ptr2 = ptr + _strlen(ptr);
      do {
        if (HEAP8[(ptr2)] == chr) return ptr2;
        ptr2--;
      } while (ptr2 >= ptr);
      return 0;
    }
  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }
  function _llvm_eh_exception() {
      return HEAP32[((_llvm_eh_exception.buf)>>2)];
    }
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  function ___resumeException(ptr) {
      if (HEAP32[((_llvm_eh_exception.buf)>>2)] == 0) HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr;
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = HEAP32[((_llvm_eh_exception.buf)>>2)];
      if (throwntype == -1) throwntype = HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=type
      HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=destructor
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }
  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
      }
    }
  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      return ptr;
    }
  function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Clear type.
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=0
      // Call destructor if one is registered then clear it.
      var ptr = HEAP32[((_llvm_eh_exception.buf)>>2)];
      var destructor = HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)];
      if (destructor) {
        Runtime.dynCall('vi', destructor, [ptr]);
        HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=0
      }
      // Free ptr if it isn't null.
      if (ptr) {
        ___cxa_free_exception(ptr);
        HEAP32[((_llvm_eh_exception.buf)>>2)]=0
      }
    }
  var _tan=Math.tan;
  function _pthread_mutex_lock() {}
  function _pthread_mutex_unlock() {}
  function _pthread_cond_broadcast() {
      return 0;
    }
  function _pthread_cond_wait() {
      return 0;
    }
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;
  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      if (FS.streams[stream]) {
        c = unSign(c & 0xFF);
        FS.streams[stream].ungotten.push(c);
        return c;
      } else {
        return -1;
      }
    }
  function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      if (!FS.streams[stream]) return -1;
      var streamObj = FS.streams[stream];
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _read(stream, _fgetc.ret, 1);
      if (ret == 0) {
        streamObj.eof = true;
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }var _getc=_fgetc;
  function ___errno_location() {
      return ___errno_state;
    }var ___errno=___errno_location;
  Module["_strcpy"] = _strcpy;
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"No message of desired type",36:"Identifier removed",37:"Channel number out of range",38:"Level 2 not synchronized",39:"Level 3 halted",40:"Level 3 reset",41:"Link number out of range",42:"Protocol driver not attached",43:"No CSI structure available",44:"Level 2 halted",45:"Deadlock condition",46:"No record locks available",50:"Invalid exchange",51:"Invalid request descriptor",52:"Exchange full",53:"No anode",54:"Invalid request code",55:"Invalid slot",56:"File locking deadlock error",57:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",74:"Multihop attempted",75:"Inode is remote (not really error)",76:"Cross mount point (not really error)",77:"Trying to read unreadable message",79:"Inappropriate file type or format",80:"Given log. name not unique",81:"f.d. invalid for this operation",82:"Remote address changed",83:"Can\t access a needed shared lib",84:"Accessing a corrupted shared lib",85:".lib section in a.out corrupted",86:"Attempting to link in too many libs",87:"Attempting to exec a shared library",88:"Function not implemented",89:"No more files",90:"Directory not empty",91:"File or path name too long",92:"Too many symbolic links",95:"Operation not supported on transport endpoint",96:"Protocol family not supported",104:"Connection reset by peer",105:"No buffer space available",106:"Address family not supported by protocol family",107:"Protocol wrong type for socket",108:"Socket operation on non-socket",109:"Protocol not available",110:"Can't send after socket shutdown",111:"Connection refused",112:"Address already in use",113:"Connection aborted",114:"Network is unreachable",115:"Network interface is not configured",116:"Connection timed out",117:"Host is down",118:"Host is unreachable",119:"Connection already in progress",120:"Socket already connected",121:"Destination address required",122:"Message too long",123:"Unknown protocol",124:"Socket type not supported",125:"Address not available",126:"ENETRESET",127:"Socket is already connected",128:"Socket is not connected",129:"TOOMANYREFS",130:"EPROCLIM",131:"EUSERS",132:"EDQUOT",133:"ESTALE",134:"Not supported",135:"No medium (in tape drive)",136:"No such host or network path",137:"Filename exists with different case",138:"EILSEQ",139:"Value too large for defined data type",140:"Operation canceled",141:"State not recoverable",142:"Previous owner died",143:"Streams pipe error"};function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          for (var i = 0; i < msg.length; i++) {
            HEAP8[(((strerrbuf)+(i))|0)]=msg.charCodeAt(i)
          }
          HEAP8[(((strerrbuf)+(i))|0)]=0
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }
  function _abort() {
      ABORT = true;
      throw 'abort() at ' + (new Error().stack);
    }
  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      throw HEAP32[((_llvm_eh_exception.buf)>>2)] + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }
  function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }
  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 8: return PAGE_SIZE;
        case 54:
        case 56:
        case 21:
        case 61:
        case 63:
        case 22:
        case 67:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 69:
        case 28:
        case 101:
        case 70:
        case 71:
        case 29:
        case 30:
        case 199:
        case 75:
        case 76:
        case 32:
        case 43:
        case 44:
        case 80:
        case 46:
        case 47:
        case 45:
        case 48:
        case 49:
        case 42:
        case 82:
        case 33:
        case 7:
        case 108:
        case 109:
        case 107:
        case 112:
        case 119:
        case 121:
          return 200809;
        case 13:
        case 104:
        case 94:
        case 95:
        case 34:
        case 35:
        case 77:
        case 81:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 91:
        case 94:
        case 95:
        case 110:
        case 111:
        case 113:
        case 114:
        case 115:
        case 116:
        case 117:
        case 118:
        case 120:
        case 40:
        case 16:
        case 79:
        case 19:
          return -1;
        case 92:
        case 93:
        case 5:
        case 72:
        case 6:
        case 74:
        case 92:
        case 93:
        case 96:
        case 97:
        case 98:
        case 99:
        case 102:
        case 103:
        case 105:
          return 1;
        case 38:
        case 66:
        case 50:
        case 51:
        case 4:
          return 1024;
        case 15:
        case 64:
        case 41:
          return 32;
        case 55:
        case 37:
        case 17:
          return 2147483647;
        case 18:
        case 1:
          return 47839;
        case 59:
        case 57:
          return 99;
        case 68:
        case 58:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 14: return 32768;
        case 73: return 32767;
        case 39: return 16384;
        case 60: return 1000;
        case 106: return 700;
        case 52: return 256;
        case 62: return 255;
        case 2: return 100;
        case 65: return 64;
        case 36: return 20;
        case 100: return 16;
        case 20: return 6;
        case 53: return 4;
        case 10: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }
  function _isxdigit(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 102) ||
             (chr >= 65 && chr <= 70);
    }var _isxdigit_l=_isxdigit;
  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }var _isdigit_l=_isdigit;
  function __Z7catopenPKci() { throw 'catopen not implemented' }
  function __Z7catgetsP8_nl_catdiiPKc() { throw 'catgets not implemented' }
  function __Z8catcloseP8_nl_catd() { throw 'catclose not implemented' }
  function _newlocale(mask, locale, base) {
      return 0;
    }
  function _freelocale(locale) {}
  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i]
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i]
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i]
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function _strftime(s, maxsize, format, timeptr) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
      // TODO: Implement.
      return 0;
    }var _strftime_l=_strftime;
  function __parseInt64(str, endptr, base, min, max, unsign) {
      var isNegative = false;
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
      // Check for a plus/minus sign.
      if (HEAP8[(str)] == 45) {
        str++;
        isNegative = true;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
      // Find base.
      var ok = false;
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            ok = true; // we saw an initial zero, perhaps the entire thing is just "0"
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      start = str;
      // Get digits.
      var chr;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          str++;
          ok = true;
        }
      }
      if (!ok) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return ((asm["setTempRet0"](0),0)|0);
      }
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str
      }
      try {
        var numberString = isNegative ? '-'+Pointer_stringify(start, str - start) : Pointer_stringify(start, str - start);
        i64Math.fromString(numberString, finalBase, min, max, unsign);
      } catch(e) {
        ___setErrNo(ERRNO_CODES.ERANGE); // not quite correct
      }
      return ((asm["setTempRet0"](((HEAP32[(((tempDoublePtr)+(4))>>2)])|0)),((HEAP32[((tempDoublePtr)>>2)])|0))|0);
    }function _strtoull(str, endptr, base) {
      return __parseInt64(str, endptr, base, 0, '18446744073709551615', true);  // ULONG_MAX.
    }var _strtoull_l=_strtoull;
  function _strtoll(str, endptr, base) {
      return __parseInt64(str, endptr, base, '-9223372036854775808', '9223372036854775807');  // LLONG_MIN, LLONG_MAX.
    }var _strtoll_l=_strtoll;
  function _uselocale(locale) {
      return 0;
    }
  function ___locale_mb_cur_max() { throw '__locale_mb_cur_max not implemented' }
  function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }function _asprintf(s, format, varargs) {
      return _sprintf(-s, format, varargs);
    }function _vasprintf(s, format, va_arg) {
      return _asprintf(s, format, HEAP32[((va_arg)>>2)]);
    }
  function _vsnprintf(s, n, format, va_arg) {
      return _snprintf(s, n, format, HEAP32[((va_arg)>>2)]);
    }
  function _vsprintf(s, format, va_arg) {
      return _sprintf(s, format, HEAP32[((va_arg)>>2)]);
    }
  function _vsscanf(s, format, va_arg) {
      return _sscanf(s, format, HEAP32[((va_arg)>>2)]);
    }
  var _llvm_memset_p0i8_i64=_memset;
  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }
  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }
  function _llvm_dbg_value() {
  Module['printErr']('missing function: llvm_dbg_value'); abort(-1);
  }
  Module["_llvm_uadd_with_overflow_i64"] = _llvm_uadd_with_overflow_i64;
  function _llvm_lifetime_start() {}
  function _llvm_lifetime_end() {}
  function _fputs(s, stream) {
      // int fputs(const char *restrict s, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputs.html
      return _write(stream, s, _strlen(s));
    }
  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)|0)]=chr
      var ret = _write(stream, _fputc.ret, 1);
      if (ret == -1) {
        if (FS.streams[stream]) FS.streams[stream].error = true;
        return -1;
      } else {
        return chr;
      }
    }function _puts(s) {
      // int puts(const char *s);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/puts.html
      // NOTE: puts() always writes an extra newline.
      var stdout = HEAP32[((_stdout)>>2)];
      var ret = _fputs(s, stdout);
      if (ret < 0) {
        return ret;
      } else {
        var newlineRet = _fputc(10, stdout);
        return (newlineRet < 0) ? -1 : ret + 1;
      }
    }
  var Browser={mainLoop:{scheduler:null,shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : console.log("warning: cannot create object URLs");
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
        function getMimetype(name) {
          return {
            'jpg': 'image/jpeg',
            'jpeg': 'image/jpeg',
            'png': 'image/png',
            'bmp': 'image/bmp',
            'ogg': 'audio/ogg',
            'wav': 'audio/wav',
            'mp3': 'audio/mpeg'
          }[name.substr(name.lastIndexOf('.')+1)];
        }
        var imagePlugin = {};
        imagePlugin['canHandle'] = function(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/.exec(name);
        };
        imagePlugin['handle'] = function(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: getMimetype(name) });
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
        var audioPlugin = {};
        audioPlugin['canHandle'] = function(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
        // Canvas event setup
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule) {
        var ctx;
        try {
          if (useWebGL) {
            ctx = canvas.getContext('experimental-webgl', {
              alpha: false
            });
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas - ' + e);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function (func) {
        if (!window.requestAnimationFrame) {
          window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                         window['mozRequestAnimationFrame'] ||
                                         window['webkitRequestAnimationFrame'] ||
                                         window['msRequestAnimationFrame'] ||
                                         window['oRequestAnimationFrame'] ||
                                         window['setTimeout'];
        }
        window.requestAnimationFrame(func);
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x = event.pageX - (window.scrollX + rect.left);
          var y = event.pageY - (window.scrollY + rect.top);
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};
__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
_llvm_eh_exception.buf = allocate(12, "void*", ALLOC_STATIC);
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function(func) { Browser.requestAnimationFrame(func) };
  Module["pauseMainLoop"] = function() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function() { Browser.getUserMedia() }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true; // seal the static portion of memory
STACK_MAX = STACK_BASE + 5242880;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
assert(DYNAMIC_BASE < TOTAL_MEMORY); // Stack must fit in TOTAL_MEMORY; allocations from here on may enlarge TOTAL_MEMORY
 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);
var Math_min = Math.min;
function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiif(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiif"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiif(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiif"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var ctlz_i8=env.ctlz_i8|0;
  var _stdin=env._stdin|0;
  var __ZTVN10__cxxabiv117__class_type_infoE=env.__ZTVN10__cxxabiv117__class_type_infoE|0;
  var __ZTIc=env.__ZTIc|0;
  var __ZTVN10__cxxabiv120__si_class_type_infoE=env.__ZTVN10__cxxabiv120__si_class_type_infoE|0;
  var _stderr=env._stderr|0;
  var ___fsmu8=env.___fsmu8|0;
  var _stdout=env._stdout|0;
  var __ZTVN10__cxxabiv119__pointer_type_infoE=env.__ZTVN10__cxxabiv119__pointer_type_infoE|0;
  var ___dso_handle=env.___dso_handle|0;
  var NaN=+env.NaN;
  var Infinity=+env.Infinity;
  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var abort=env.abort;
  var assert=env.assert;
  var asmPrintInt=env.asmPrintInt;
  var asmPrintFloat=env.asmPrintFloat;
  var Math_min=env.min;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiii=env.invoke_viiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_ii=env.invoke_ii;
  var invoke_viiiiif=env.invoke_viiiiif;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_viiiiiiii=env.invoke_viiiiiiii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_viiiiiiiii=env.invoke_viiiiiiiii;
  var invoke_viiiiiif=env.invoke_viiiiiif;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_viii=env.invoke_viii;
  var _llvm_lifetime_end=env._llvm_lifetime_end;
  var _llvm_dbg_value=env._llvm_dbg_value;
  var __scanString=env.__scanString;
  var _fclose=env._fclose;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var __isFloat=env.__isFloat;
  var _strtoull=env._strtoull;
  var _fflush=env._fflush;
  var _strtol=env._strtol;
  var _fputc=env._fputc;
  var _fwrite=env._fwrite;
  var _send=env._send;
  var _fputs=env._fputs;
  var _llvm_umul_with_overflow_i32=env._llvm_umul_with_overflow_i32;
  var _isspace=env._isspace;
  var _read=env._read;
  var _fsync=env._fsync;
  var _newlocale=env._newlocale;
  var _signal=env._signal;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var ___cxa_rethrow=env.___cxa_rethrow;
  var ___resumeException=env.___resumeException;
  var _llvm_va_end=env._llvm_va_end;
  var _vsscanf=env._vsscanf;
  var _snprintf=env._snprintf;
  var _fgetc=env._fgetc;
  var _atexit=env._atexit;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var _close=env._close;
  var _strchr=env._strchr;
  var ___setErrNo=env.___setErrNo;
  var _isxdigit=env._isxdigit;
  var _ftell=env._ftell;
  var _exit=env._exit;
  var _sprintf=env._sprintf;
  var _asprintf=env._asprintf;
  var ___ctype_b_loc=env.___ctype_b_loc;
  var _strrchr=env._strrchr;
  var _freelocale=env._freelocale;
  var __Z7catopenPKci=env.__Z7catopenPKci;
  var ___cxa_is_number_type=env.___cxa_is_number_type;
  var _llvm_uadd_with_overflow_i32=env._llvm_uadd_with_overflow_i32;
  var ___cxa_does_inherit=env.___cxa_does_inherit;
  var ___locale_mb_cur_max=env.___locale_mb_cur_max;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _recv=env._recv;
  var __parseInt64=env.__parseInt64;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _cos=env._cos;
  var ___cxa_call_unexpected=env.___cxa_call_unexpected;
  var __exit=env.__exit;
  var _strftime=env._strftime;
  var ___cxa_throw=env.___cxa_throw;
  var _llvm_eh_exception=env._llvm_eh_exception;
  var _printf=env._printf;
  var _pread=env._pread;
  var _fopen=env._fopen;
  var _open=env._open;
  var _puts=env._puts;
  var _qsort=env._qsort;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var __formatString=env.__formatString;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var __ZSt9terminatev=env.__ZSt9terminatev;
  var _gettimeofday=env._gettimeofday;
  var _atoi=env._atoi;
  var _vfprintf=env._vfprintf;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _sbrk=env._sbrk;
  var ___errno_location=env.___errno_location;
  var _strerror=env._strerror;
  var _llvm_lifetime_start=env._llvm_lifetime_start;
  var __parseInt=env.__parseInt;
  var _ungetc=env._ungetc;
  var _vsprintf=env._vsprintf;
  var _uselocale=env._uselocale;
  var _vsnprintf=env._vsnprintf;
  var _sscanf=env._sscanf;
  var _sysconf=env._sysconf;
  var _fread=env._fread;
  var _abort=env._abort;
  var _fprintf=env._fprintf;
  var _isdigit=env._isdigit;
  var _strtoll=env._strtoll;
  var _tan=env._tan;
  var __reallyNegative=env.__reallyNegative;
  var _fabs=env._fabs;
  var __Z7catgetsP8_nl_catdiiPKc=env.__Z7catgetsP8_nl_catdiiPKc;
  var _sqrt=env._sqrt;
  var _write=env._write;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _sin=env._sin;
  var __Z8catcloseP8_nl_catd=env.__Z8catcloseP8_nl_catd;
  var _vasprintf=env._vasprintf;
  var ___ctype_toupper_loc=env.___ctype_toupper_loc;
  var ___ctype_tolower_loc=env.___ctype_tolower_loc;
  var _pwrite=env._pwrite;
  var _strerror_r=env._strerror_r;
  var _atan2=env._atan2;
  var _time=env._time;
// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
 size = size | 0;
 var ret = 0;
 ret = STACKTOP;
 STACKTOP = STACKTOP + size | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 return ret | 0;
}
function stackSave() {
 return STACKTOP | 0;
}
function stackRestore(top) {
 top = top | 0;
 STACKTOP = top;
}
function setThrew(threw, value) {
 threw = threw | 0;
 value = value | 0;
 if ((__THREW__ | 0) == 0) {
  __THREW__ = threw;
  threwValue = value;
 }
}
function copyTempFloat(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr] = HEAP8[ptr];
 HEAP8[tempDoublePtr + 1 | 0] = HEAP8[ptr + 1 | 0];
 HEAP8[tempDoublePtr + 2 | 0] = HEAP8[ptr + 2 | 0];
 HEAP8[tempDoublePtr + 3 | 0] = HEAP8[ptr + 3 | 0];
}
function copyTempDouble(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr] = HEAP8[ptr];
 HEAP8[tempDoublePtr + 1 | 0] = HEAP8[ptr + 1 | 0];
 HEAP8[tempDoublePtr + 2 | 0] = HEAP8[ptr + 2 | 0];
 HEAP8[tempDoublePtr + 3 | 0] = HEAP8[ptr + 3 | 0];
 HEAP8[tempDoublePtr + 4 | 0] = HEAP8[ptr + 4 | 0];
 HEAP8[tempDoublePtr + 5 | 0] = HEAP8[ptr + 5 | 0];
 HEAP8[tempDoublePtr + 6 | 0] = HEAP8[ptr + 6 | 0];
 HEAP8[tempDoublePtr + 7 | 0] = HEAP8[ptr + 7 | 0];
}
function setTempRet0(value) {
 value = value | 0;
 tempRet0 = value;
}
function setTempRet1(value) {
 value = value | 0;
 tempRet1 = value;
}
function setTempRet2(value) {
 value = value | 0;
 tempRet2 = value;
}
function setTempRet3(value) {
 value = value | 0;
 tempRet3 = value;
}
function setTempRet4(value) {
 value = value | 0;
 tempRet4 = value;
}
function setTempRet5(value) {
 value = value | 0;
 tempRet5 = value;
}
function setTempRet6(value) {
 value = value | 0;
 tempRet6 = value;
}
function setTempRet7(value) {
 value = value | 0;
 tempRet7 = value;
}
function setTempRet8(value) {
 value = value | 0;
 tempRet8 = value;
}
function setTempRet9(value) {
 value = value | 0;
 tempRet9 = value;
}
function __Z8logErrorPKcz($fmt, varrp) {
 $fmt = $fmt | 0;
 varrp = varrp | 0;
 var $args = 0, $arraydecay1 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args = __stackBase__ | 0;
 $arraydecay1 = $args;
 HEAP32[$arraydecay1 >> 2] = varrp;
 HEAP32[$arraydecay1 + 4 >> 2] = 0;
 _vfprintf(HEAP32[_stdout >> 2] | 0, $fmt | 0, $args | 0) | 0;
 _fflush(HEAP32[_stdout >> 2] | 0) | 0;
 STACKTOP = __stackBase__;
 return;
}
function __Z4_logPKcz($fmt, varrp) {
 $fmt = $fmt | 0;
 varrp = varrp | 0;
 var $args = 0, $arraydecay1 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args = __stackBase__ | 0;
 if ((HEAP32[2] | 0) < 1) {
  STACKTOP = __stackBase__;
  return;
 }
 $arraydecay1 = $args;
 HEAP32[$arraydecay1 >> 2] = varrp;
 HEAP32[$arraydecay1 + 4 >> 2] = 0;
 _vfprintf(HEAP32[_stdout >> 2] | 0, $fmt | 0, $args | 0) | 0;
 _fflush(HEAP32[_stdout >> 2] | 0) | 0;
 STACKTOP = __stackBase__;
 return;
}
function __Z30generateMultipleVolumesOverlapRNSt3__16vectorI18SliceVolumeStorageNS_9allocatorIS1_EEEEi($volumes, $overlap) {
 $volumes = $volumes | 0;
 $overlap = $overlap | 0;
 var $fullLayer = 0, $fullLayerClipper = 0, $tmp = 0, $tmp64 = 0, $clipper = 0, $__end__i = 0, $0 = 0, $__begin__i = 0, $1 = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $__first__i_i_i_i_i_i = 0, $__begin__i_i_i159 = 0, $__end__i_i_i160 = 0, $__first__i_i_i_i_i_i166 = 0, $conv = 0.0, $5 = 0, $__begin__i_i_i_i_i105 = 0, $__end__i_i_i_i_i106 = 0, $__first__i_i_i_i_i_i_i_i107 = 0, $m_MinimaList_i_i108 = 0, $m_CurrentLM_i_i109 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $m_ReverseOutput_i112 = 0, $10 = 0, $11 = 0, $m_ExecuteLocked_i147 = 0, $m_SubjFillType_i169 = 0, $m_ClipFillType_i170 = 0, $m_ClipType_i171 = 0, $12 = 0, $13 = 0, $14 = 0, $__begin__i_i_i_i_i = 0, $__end__i_i_i_i_i = 0, $__first__i_i_i_i_i_i_i_i = 0, $m_MinimaList_i_i = 0, $m_CurrentLM_i_i = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $m_ReverseOutput_i = 0, $19 = 0, $20 = 0, $m_ExecuteLocked_i = 0, $m_SubjFillType_i = 0, $m_ClipFillType_i = 0, $m_ClipType_i = 0, $21 = 0, $22 = 0, $__begin__i_i_i225 = 0, $__end__i_i_i226 = 0, $__first__i_i_i_i_i_i232 = 0, $23 = 0, $24 = 0, $layerNr_0382 = 0, $26 = 0, $27 = 0, $28 = 0, $volIdx_0298 = 0, $29 = 0, $add_ptr = 0, $31 = 0, $i_011_i = 0, $__end__i235 = 0, $__begin__i236 = 0, $p1_0287 = 0, $39 = 0, $40 = 0, $41 = 0, $43 = 0, $i_011_i26 = 0, $inc_i30 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $incdec_ptr_i_i_i_i_i_i46 = 0, $49 = 0, $50 = 0, $51 = 0, $__end__i_i_i_i_i_i_i_i_i52 = 0, $52 = 0, $57 = 0, $82 = 0, $83 = 0, $85 = 0, $incdec_ptr_i_i_i_i_i = 0, $86 = 0, $87 = 0, $88 = 0, $__end__i_i_i_i_i_i_i_i = 0, $89 = 0, $inc40 = 0, $98 = 0, $101 = 0, $102 = 0, $104 = 0, $105 = 0, $volIdx44_0332 = 0, $106 = 0, $__end__i169 = 0, $__begin__i170 = 0, $p157_0326 = 0, $add_ptr77 = 0, $112 = 0, $114 = 0, $i_011_i115 = 0, $vtable81 = 0, $118 = 0, $120 = 0, $122 = 0, $i_011_i132 = 0, $125 = 0, $outline90 = 0, $__end__i_i_i149 = 0, $128 = 0, $129 = 0, $131 = 0, $incdec_ptr_i_i_i_i_i152 = 0, $132 = 0, $133 = 0, $134 = 0, $__end__i_i_i_i_i_i_i_i158 = 0, $135 = 0, $143 = 0, $144 = 0, $145 = 0, $incdec_ptr_i_i_i_i_i_i194 = 0, $146 = 0, $147 = 0, $148 = 0, $__end__i_i_i_i_i_i_i_i_i200 = 0, $149 = 0, $154 = 0, $178 = 0, $179 = 0, $inc103 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $incdec_ptr_i_i_i_i_i_i254 = 0, $184 = 0, $185 = 0, $186 = 0, $__end__i_i_i_i_i_i_i_i_i260 = 0, $187 = 0, $192 = 0, $194 = 0, $inc108 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $fullLayer = __stackBase__ | 0;
 $fullLayerClipper = __stackBase__ + 16 | 0;
 $tmp = __stackBase__ + 120 | 0;
 $tmp64 = __stackBase__ + 136 | 0;
 $clipper = __stackBase__ + 152 | 0;
 $__end__i = $volumes + 4 | 0;
 $0 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i = $volumes | 0;
 $1 = HEAP32[$__begin__i >> 2] | 0;
 if ((($0 - $1 | 0) / 12 & -1) >>> 0 < 2 | ($overlap | 0) < 1) {
  STACKTOP = __stackBase__;
  return;
 }
 if ((HEAP32[$1 + 4 >> 2] | 0) == (HEAP32[$1 >> 2] | 0)) {
  STACKTOP = __stackBase__;
  return;
 }
 $__begin__i_i_i = $fullLayer | 0;
 $__end__i_i_i = $fullLayer + 4 | 0;
 $__first__i_i_i_i_i_i = $fullLayer + 8 | 0;
 $__begin__i_i_i159 = $tmp64 | 0;
 $__end__i_i_i160 = $tmp64 + 4 | 0;
 $__first__i_i_i_i_i_i166 = $tmp64 + 8 | 0;
 $conv = +(($overlap | 0) / 2 & -1 | 0);
 $5 = $clipper + 76 | 0;
 $__begin__i_i_i_i_i105 = $clipper + 92 | 0;
 $__end__i_i_i_i_i106 = $clipper + 96 | 0;
 $__first__i_i_i_i_i_i_i_i107 = $clipper + 100 | 0;
 $m_MinimaList_i_i108 = $clipper + 84 | 0;
 $m_CurrentLM_i_i109 = $clipper + 80 | 0;
 $6 = $clipper | 0;
 $7 = $clipper + 88 | 0;
 $8 = $clipper + 4 | 0;
 $9 = $clipper + 44 | 0;
 $m_ReverseOutput_i112 = $clipper + 72 | 0;
 $10 = $clipper;
 $11 = $clipper;
 $m_ExecuteLocked_i147 = $clipper + 60 | 0;
 $m_SubjFillType_i169 = $clipper + 68 | 0;
 $m_ClipFillType_i170 = $clipper + 64 | 0;
 $m_ClipType_i171 = $clipper + 40 | 0;
 $12 = $clipper;
 $13 = $clipper + 76 | 0;
 $14 = $fullLayerClipper + 76 | 0;
 $__begin__i_i_i_i_i = $fullLayerClipper + 92 | 0;
 $__end__i_i_i_i_i = $fullLayerClipper + 96 | 0;
 $__first__i_i_i_i_i_i_i_i = $fullLayerClipper + 100 | 0;
 $m_MinimaList_i_i = $fullLayerClipper + 84 | 0;
 $m_CurrentLM_i_i = $fullLayerClipper + 80 | 0;
 $15 = $fullLayerClipper | 0;
 $16 = $fullLayerClipper + 88 | 0;
 $17 = $fullLayerClipper + 4 | 0;
 $18 = $fullLayerClipper + 44 | 0;
 $m_ReverseOutput_i = $fullLayerClipper + 72 | 0;
 $19 = $fullLayerClipper;
 $20 = $fullLayerClipper;
 $m_ExecuteLocked_i = $fullLayerClipper + 60 | 0;
 $m_SubjFillType_i = $fullLayerClipper + 68 | 0;
 $m_ClipFillType_i = $fullLayerClipper + 64 | 0;
 $m_ClipType_i = $fullLayerClipper + 40 | 0;
 $21 = $fullLayerClipper;
 $22 = $fullLayerClipper + 76 | 0;
 $__begin__i_i_i225 = $tmp | 0;
 $__end__i_i_i226 = $tmp + 4 | 0;
 $__first__i_i_i_i_i_i232 = $tmp + 8 | 0;
 $layerNr_0382 = 0;
 $24 = $1;
 $23 = $0;
 while (1) {
  HEAP32[$__begin__i_i_i >> 2] = 0;
  HEAP32[$__end__i_i_i >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i >> 2] = 0;
  L15 : do {
   if (($23 | 0) != ($24 | 0)) {
    $volIdx_0298 = 0;
    $28 = $24;
    $27 = 0;
    $26 = 0;
    while (1) {
     HEAP32[$__begin__i_i_i_i_i >> 2] = 0;
     HEAP32[$__end__i_i_i_i_i >> 2] = 0;
     HEAP32[$__first__i_i_i_i_i_i_i_i >> 2] = 0;
     HEAP32[$m_MinimaList_i_i >> 2] = 0;
     HEAP32[$m_CurrentLM_i_i >> 2] = 0;
     HEAP32[$15 >> 2] = 11908;
     HEAP32[$14 >> 2] = 11948;
     _memset($17 | 0, 0, 36);
     _memset($18 | 0, 0, 17);
     HEAP8[$16] = 0;
     HEAP8[$m_ReverseOutput_i] = 0;
     $29 = HEAP32[$28 + ($volIdx_0298 * 12 & -1) >> 2] | 0;
     $add_ptr = $fullLayerClipper + 76 | 0;
     if (($27 | 0) != ($26 | 0)) {
      $i_011_i = 0;
      $31 = $26;
      do {
       __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($add_ptr, $31 + ($i_011_i * 12 & -1) | 0, 0) | 0;
       $i_011_i = $i_011_i + 1 | 0;
       $31 = HEAP32[$__begin__i_i_i >> 2] | 0;
      } while ($i_011_i >>> 0 < (((HEAP32[$__end__i_i_i >> 2] | 0) - $31 | 0) / 12 & -1) >>> 0);
     }
     $__end__i235 = $29 + ($layerNr_0382 * 12 & -1) + 4 | 0;
     $__begin__i236 = $29 + ($layerNr_0382 * 12 & -1) | 0;
     if ((HEAP32[$__end__i235 >> 2] | 0) != (HEAP32[$__begin__i236 >> 2] | 0)) {
      $p1_0287 = 0;
      do {
       HEAP32[$__begin__i_i_i225 >> 2] = 0;
       HEAP32[$__end__i_i_i226 >> 2] = 0;
       HEAP32[$__first__i_i_i_i_i_i232 >> 2] = 0;
       __ZN10ClipperLib14OffsetPolygonsERKNSt3__16vectorINS1_INS_8IntPointENS0_9allocatorIS2_EEEENS3_IS5_EEEERS7_dNS_8JoinTypeEdb((HEAP32[$__begin__i236 >> 2] | 0) + ($p1_0287 * 96 & -1) + 32 | 0, $tmp, 20.0, 0, 2.0, 0);
       $39 = $20 + (HEAP32[(HEAP32[$19 >> 2] | 0) - 12 >> 2] | 0) | 0;
       $40 = HEAP32[$__end__i_i_i226 >> 2] | 0;
       $41 = HEAP32[$__begin__i_i_i225 >> 2] | 0;
       if (($40 | 0) == ($41 | 0)) {
        $47 = $40;
        $46 = $40;
       } else {
        $i_011_i26 = 0;
        $43 = $41;
        while (1) {
         __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($39, $43 + ($i_011_i26 * 12 & -1) | 0, 1) | 0;
         $inc_i30 = $i_011_i26 + 1 | 0;
         $44 = HEAP32[$__end__i_i_i226 >> 2] | 0;
         $45 = HEAP32[$__begin__i_i_i225 >> 2] | 0;
         if ($inc_i30 >>> 0 < (($44 - $45 | 0) / 12 & -1) >>> 0) {
          $i_011_i26 = $inc_i30;
          $43 = $45;
         } else {
          $47 = $45;
          $46 = $44;
          break;
         }
        }
       }
       if (($47 | 0) != 0) {
        if (($47 | 0) == ($46 | 0)) {
         $57 = $46;
        } else {
         $48 = $46;
         while (1) {
          $incdec_ptr_i_i_i_i_i_i46 = $48 - 12 | 0;
          HEAP32[$__end__i_i_i226 >> 2] = $incdec_ptr_i_i_i_i_i_i46;
          $49 = HEAP32[$incdec_ptr_i_i_i_i_i_i46 >> 2] | 0;
          $50 = $49;
          if (($49 | 0) == 0) {
           $51 = $incdec_ptr_i_i_i_i_i_i46;
          } else {
           $__end__i_i_i_i_i_i_i_i_i52 = $48 - 12 + 4 | 0;
           $52 = HEAP32[$__end__i_i_i_i_i_i_i_i_i52 >> 2] | 0;
           if (($49 | 0) != ($52 | 0)) {
            HEAP32[$__end__i_i_i_i_i_i_i_i_i52 >> 2] = $52 + ((($52 - 16 + (-$50 | 0) | 0) >>> 4 ^ -1) << 4);
           }
           __ZdlPv($49);
           $51 = HEAP32[$__end__i_i_i226 >> 2] | 0;
          }
          if (($47 | 0) == ($51 | 0)) {
           break;
          } else {
           $48 = $51;
          }
         }
         $57 = HEAP32[$__begin__i_i_i225 >> 2] | 0;
        }
        __ZdlPv($57);
       }
       $p1_0287 = $p1_0287 + 1 | 0;
      } while ($p1_0287 >>> 0 < (((HEAP32[$__end__i235 >> 2] | 0) - (HEAP32[$__begin__i236 >> 2] | 0) | 0) / 96 & -1) >>> 0);
     }
     if ((HEAP8[$m_ExecuteLocked_i] & 1) == 0) {
      HEAP8[$m_ExecuteLocked_i] = 1;
      $82 = HEAP32[$__end__i_i_i >> 2] | 0;
      $83 = HEAP32[$__begin__i_i_i >> 2] | 0;
      if (($83 | 0) != ($82 | 0)) {
       $85 = $82;
       while (1) {
        $incdec_ptr_i_i_i_i_i = $85 - 12 | 0;
        HEAP32[$__end__i_i_i >> 2] = $incdec_ptr_i_i_i_i_i;
        $86 = HEAP32[$incdec_ptr_i_i_i_i_i >> 2] | 0;
        $87 = $86;
        if (($86 | 0) == 0) {
         $88 = $incdec_ptr_i_i_i_i_i;
        } else {
         $__end__i_i_i_i_i_i_i_i = $85 - 12 + 4 | 0;
         $89 = HEAP32[$__end__i_i_i_i_i_i_i_i >> 2] | 0;
         if (($86 | 0) != ($89 | 0)) {
          HEAP32[$__end__i_i_i_i_i_i_i_i >> 2] = $89 + ((($89 - 16 + (-$87 | 0) | 0) >>> 4 ^ -1) << 4);
         }
         __ZdlPv($86);
         $88 = HEAP32[$__end__i_i_i >> 2] | 0;
        }
        if (($83 | 0) == ($88 | 0)) {
         break;
        } else {
         $85 = $88;
        }
       }
      }
      HEAP32[$m_SubjFillType_i >> 2] = 0;
      HEAP32[$m_ClipFillType_i >> 2] = 0;
      HEAP32[$m_ClipType_i >> 2] = 1;
      if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 16 >> 2] & 63]($fullLayerClipper, 0) | 0) {
       __ZN10ClipperLib7Clipper11BuildResultERNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEE($fullLayerClipper, $fullLayer);
      }
      HEAP8[$m_ExecuteLocked_i] = 0;
     }
     __ZN10ClipperLib7ClipperD2Ev($fullLayerClipper, 12040);
     __ZN10ClipperLib11ClipperBaseD2Ev($22);
     $inc40 = $volIdx_0298 + 1 | 0;
     $98 = HEAP32[$__begin__i >> 2] | 0;
     if ($inc40 >>> 0 >= (((HEAP32[$__end__i >> 2] | 0) - $98 | 0) / 12 & -1) >>> 0) {
      break L15;
     }
     $volIdx_0298 = $inc40;
     $28 = $98;
     $27 = HEAP32[$__end__i_i_i >> 2] | 0;
     $26 = HEAP32[$__begin__i_i_i >> 2] | 0;
    }
   }
  } while (0);
  __ZN10ClipperLib14OffsetPolygonsERKNSt3__16vectorINS1_INS_8IntPointENS0_9allocatorIS2_EEEENS3_IS5_EEEERS7_dNS_8JoinTypeEdb($fullLayer, $fullLayer, -20.0, 0, 2.0, 0);
  $101 = HEAP32[$__end__i >> 2] | 0;
  $102 = HEAP32[$__begin__i >> 2] | 0;
  if (($101 | 0) == ($102 | 0)) {
   $180 = $101;
  } else {
   $volIdx44_0332 = 0;
   $105 = $102;
   $104 = $101;
   while (1) {
    $106 = HEAP32[$105 + ($volIdx44_0332 * 12 & -1) >> 2] | 0;
    $__end__i169 = $106 + ($layerNr_0382 * 12 & -1) + 4 | 0;
    $__begin__i170 = $106 + ($layerNr_0382 * 12 & -1) | 0;
    if ((HEAP32[$__end__i169 >> 2] | 0) == (HEAP32[$__begin__i170 >> 2] | 0)) {
     $179 = $104;
     $178 = $105;
    } else {
     $p157_0326 = 0;
     do {
      HEAP32[$__begin__i_i_i159 >> 2] = 0;
      HEAP32[$__end__i_i_i160 >> 2] = 0;
      HEAP32[$__first__i_i_i_i_i_i166 >> 2] = 0;
      __ZN10ClipperLib14OffsetPolygonsERKNSt3__16vectorINS1_INS_8IntPointENS0_9allocatorIS2_EEEENS3_IS5_EEEERS7_dNS_8JoinTypeEdb((HEAP32[$__begin__i170 >> 2] | 0) + ($p157_0326 * 96 & -1) + 32 | 0, $tmp64, $conv, 0, 2.0, 0);
      HEAP32[$__begin__i_i_i_i_i105 >> 2] = 0;
      HEAP32[$__end__i_i_i_i_i106 >> 2] = 0;
      HEAP32[$__first__i_i_i_i_i_i_i_i107 >> 2] = 0;
      HEAP32[$m_MinimaList_i_i108 >> 2] = 0;
      HEAP32[$m_CurrentLM_i_i109 >> 2] = 0;
      HEAP32[$6 >> 2] = 11908;
      HEAP32[$5 >> 2] = 11948;
      _memset($8 | 0, 0, 36);
      _memset($9 | 0, 0, 17);
      HEAP8[$7] = 0;
      HEAP8[$m_ReverseOutput_i112] = 0;
      $add_ptr77 = $clipper + 76 | 0;
      $112 = HEAP32[$__begin__i_i_i159 >> 2] | 0;
      if ((HEAP32[$__end__i_i_i160 >> 2] | 0) == ($112 | 0)) {
       $vtable81 = 11908;
      } else {
       $i_011_i115 = 0;
       $114 = $112;
       do {
        __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($add_ptr77, $114 + ($i_011_i115 * 12 & -1) | 0, 1) | 0;
        $i_011_i115 = $i_011_i115 + 1 | 0;
        $114 = HEAP32[$__begin__i_i_i159 >> 2] | 0;
       } while ($i_011_i115 >>> 0 < (((HEAP32[$__end__i_i_i160 >> 2] | 0) - $114 | 0) / 12 & -1) >>> 0);
       $vtable81 = HEAP32[$10 >> 2] | 0;
      }
      $118 = $11 + (HEAP32[$vtable81 - 12 >> 2] | 0) | 0;
      $120 = HEAP32[$__begin__i_i_i >> 2] | 0;
      if ((HEAP32[$__end__i_i_i >> 2] | 0) != ($120 | 0)) {
       $i_011_i132 = 0;
       $122 = $120;
       do {
        __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($118, $122 + ($i_011_i132 * 12 & -1) | 0, 0) | 0;
        $i_011_i132 = $i_011_i132 + 1 | 0;
        $122 = HEAP32[$__begin__i_i_i >> 2] | 0;
       } while ($i_011_i132 >>> 0 < (((HEAP32[$__end__i_i_i >> 2] | 0) - $122 | 0) / 12 & -1) >>> 0);
      }
      $125 = HEAP32[$__begin__i170 >> 2] | 0;
      $outline90 = $125 + ($p157_0326 * 96 & -1) + 32 | 0;
      if ((HEAP8[$m_ExecuteLocked_i147] & 1) == 0) {
       HEAP8[$m_ExecuteLocked_i147] = 1;
       $__end__i_i_i149 = $125 + ($p157_0326 * 96 & -1) + 36 | 0;
       $128 = HEAP32[$__end__i_i_i149 >> 2] | 0;
       $129 = HEAP32[$outline90 >> 2] | 0;
       if (($129 | 0) != ($128 | 0)) {
        $131 = $128;
        while (1) {
         $incdec_ptr_i_i_i_i_i152 = $131 - 12 | 0;
         HEAP32[$__end__i_i_i149 >> 2] = $incdec_ptr_i_i_i_i_i152;
         $132 = HEAP32[$incdec_ptr_i_i_i_i_i152 >> 2] | 0;
         $133 = $132;
         if (($132 | 0) == 0) {
          $134 = $incdec_ptr_i_i_i_i_i152;
         } else {
          $__end__i_i_i_i_i_i_i_i158 = $131 - 12 + 4 | 0;
          $135 = HEAP32[$__end__i_i_i_i_i_i_i_i158 >> 2] | 0;
          if (($132 | 0) != ($135 | 0)) {
           HEAP32[$__end__i_i_i_i_i_i_i_i158 >> 2] = $135 + ((($135 - 16 + (-$133 | 0) | 0) >>> 4 ^ -1) << 4);
          }
          __ZdlPv($132);
          $134 = HEAP32[$__end__i_i_i149 >> 2] | 0;
         }
         if (($129 | 0) == ($134 | 0)) {
          break;
         } else {
          $131 = $134;
         }
        }
       }
       HEAP32[$m_SubjFillType_i169 >> 2] = 0;
       HEAP32[$m_ClipFillType_i170 >> 2] = 0;
       HEAP32[$m_ClipType_i171 >> 2] = 0;
       if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 63]($clipper, 0) | 0) {
        __ZN10ClipperLib7Clipper11BuildResultERNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEE($clipper, $outline90);
       }
       HEAP8[$m_ExecuteLocked_i147] = 0;
      }
      __ZN10ClipperLib7ClipperD2Ev($clipper, 12040);
      __ZN10ClipperLib11ClipperBaseD2Ev($13);
      $143 = HEAP32[$__begin__i_i_i159 >> 2] | 0;
      if (($143 | 0) != 0) {
       $144 = HEAP32[$__end__i_i_i160 >> 2] | 0;
       if (($143 | 0) == ($144 | 0)) {
        $154 = $143;
       } else {
        $145 = $144;
        while (1) {
         $incdec_ptr_i_i_i_i_i_i194 = $145 - 12 | 0;
         HEAP32[$__end__i_i_i160 >> 2] = $incdec_ptr_i_i_i_i_i_i194;
         $146 = HEAP32[$incdec_ptr_i_i_i_i_i_i194 >> 2] | 0;
         $147 = $146;
         if (($146 | 0) == 0) {
          $148 = $incdec_ptr_i_i_i_i_i_i194;
         } else {
          $__end__i_i_i_i_i_i_i_i_i200 = $145 - 12 + 4 | 0;
          $149 = HEAP32[$__end__i_i_i_i_i_i_i_i_i200 >> 2] | 0;
          if (($146 | 0) != ($149 | 0)) {
           HEAP32[$__end__i_i_i_i_i_i_i_i_i200 >> 2] = $149 + ((($149 - 16 + (-$147 | 0) | 0) >>> 4 ^ -1) << 4);
          }
          __ZdlPv($146);
          $148 = HEAP32[$__end__i_i_i160 >> 2] | 0;
         }
         if (($143 | 0) == ($148 | 0)) {
          break;
         } else {
          $145 = $148;
         }
        }
        $154 = HEAP32[$__begin__i_i_i159 >> 2] | 0;
       }
       __ZdlPv($154);
      }
      $p157_0326 = $p157_0326 + 1 | 0;
     } while ($p157_0326 >>> 0 < (((HEAP32[$__end__i169 >> 2] | 0) - (HEAP32[$__begin__i170 >> 2] | 0) | 0) / 96 & -1) >>> 0);
     $179 = HEAP32[$__end__i >> 2] | 0;
     $178 = HEAP32[$__begin__i >> 2] | 0;
    }
    $inc103 = $volIdx44_0332 + 1 | 0;
    if ($inc103 >>> 0 < (($179 - $178 | 0) / 12 & -1) >>> 0) {
     $volIdx44_0332 = $inc103;
     $105 = $178;
     $104 = $179;
    } else {
     $180 = $178;
     break;
    }
   }
  }
  $181 = HEAP32[$__begin__i_i_i >> 2] | 0;
  if (($181 | 0) == 0) {
   $194 = $180;
  } else {
   $182 = HEAP32[$__end__i_i_i >> 2] | 0;
   if (($181 | 0) == ($182 | 0)) {
    $192 = $181;
   } else {
    $183 = $182;
    while (1) {
     $incdec_ptr_i_i_i_i_i_i254 = $183 - 12 | 0;
     HEAP32[$__end__i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i254;
     $184 = HEAP32[$incdec_ptr_i_i_i_i_i_i254 >> 2] | 0;
     $185 = $184;
     if (($184 | 0) == 0) {
      $186 = $incdec_ptr_i_i_i_i_i_i254;
     } else {
      $__end__i_i_i_i_i_i_i_i_i260 = $183 - 12 + 4 | 0;
      $187 = HEAP32[$__end__i_i_i_i_i_i_i_i_i260 >> 2] | 0;
      if (($184 | 0) != ($187 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i_i_i260 >> 2] = $187 + ((($187 - 16 + (-$185 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($184);
      $186 = HEAP32[$__end__i_i_i >> 2] | 0;
     }
     if (($181 | 0) == ($186 | 0)) {
      break;
     } else {
      $183 = $186;
     }
    }
    $192 = HEAP32[$__begin__i_i_i >> 2] | 0;
   }
   __ZdlPv($192);
   $194 = HEAP32[$__begin__i >> 2] | 0;
  }
  $inc108 = $layerNr_0382 + 1 | 0;
  if ($inc108 >>> 0 >= (((HEAP32[$194 + 4 >> 2] | 0) - (HEAP32[$194 >> 2] | 0) | 0) / 12 & -1) >>> 0) {
   break;
  }
  $layerNr_0382 = $inc108;
  $24 = $194;
  $23 = HEAP32[$__end__i >> 2] | 0;
 }
 STACKTOP = __stackBase__;
 return;
}
function __Z15optimizePolygonRNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEE($poly) {
 $poly = $poly | 0;
 var $__end__i = 0, $0 = 0, $__begin__i = 0, $1 = 0, $sub = 0, $p0_sroa_1_8__idx94 = 0, $p0_sroa_0_0__idx = 0, $2 = 0, $3 = 0, $i_0114 = 0, $p0_sroa_0_0_copyload102113$0 = 0, $p0_sroa_0_0_copyload102113$1 = 0, $p0_sroa_1_8_copyload104112$0 = 0, $p0_sroa_1_8_copyload104112$1 = 0, $p1_sroa_0_0__idx85 = 0, $p1_sroa_0_0_copyload86$0 = 0, $p1_sroa_0_0_copyload86$1 = 0, $p1_sroa_1_8__idx90 = 0, $p1_sroa_1_8_copyload91$0 = 0, $p1_sroa_1_8_copyload91$1 = 0, $sub_i$0 = 0, $sub_i$1 = 0, $sub3_i$0 = 0, $sub3_i$1 = 0, $sub_i_off$0 = 0, $sub_i_off$1 = 0, $$etemp$9$1 = 0, $sub3_i_off$0 = 0, $sub3_i_off$1 = 0, $$etemp$11$1 = 0, $mul_i_i50$0 = 0, $mul_i_i50$1 = 0, $mul3_i_i$0 = 0, $add_i_i$0 = 0, $add_i_i$1 = 0, $$etemp$12$1 = 0, $add_ptr_i179 = 0, $sub_ptr_sub_i_i_i183 = 0, $add_ptr_i_i_i186 = 0, $8 = 0, $scevgep120 = 0, $11 = 0, $sub_ptr_lhs_cast_i114 = 0, $add = 0, $p2_sroa_1_8_copyload82100_in = 0, $_pn = 0, $p2_sroa_0_0_copyload7999_in = 0, $p2_sroa_0_0_copyload7999$0 = 0, $p2_sroa_0_0_copyload7999$1 = 0, $p2_sroa_1_8_copyload82100$0 = 0, $p2_sroa_1_8_copyload82100$1 = 0, $sub_i74$0 = 0, $sub_i74$1 = 0, $sub3_i75$0 = 0, $sub3_i75$1 = 0, $mul_i_i_i55$0 = 0, $mul_i_i_i55$1 = 0, $mul3_i_i_i56$0 = 0, $add_i_i_i57$0 = 0, $conv2_i_i60 = 0, $mul_i_i65$0 = 0, $mul_i_i65$1 = 0, $mul2_i_i66$0 = 0, $mul2_i_i66$1 = 0, $conv_i8_i67$0 = 0, $conv_i8_i67$1 = 0, $div_i_i68$0 = 0, $div_i_i68$1 = 0, $div2_i_i69$0 = 0, $diff0_sroa_1_8_load98$0 = 0, $diff0_sroa_1_8_load98$1 = 0, $diff0_sroa_0_0_load97$0 = 0, $diff0_sroa_0_0_load97$1 = 0, $sub_i51$0 = 0, $sub_i51$1 = 0, $sub3_i52$0 = 0, $sub3_i52$1 = 0, $mul_i_i_i$0 = 0, $mul_i_i_i$1 = 0, $mul3_i_i_i$0 = 0, $add_i_i_i$0 = 0, $conv2_i_i = 0, $mul_i_i$0 = 0, $mul_i_i$1 = 0, $mul2_i_i$0 = 0, $mul2_i_i$1 = 0, $conv_i8_i$0 = 0, $conv_i8_i$1 = 0, $div_i_i$0 = 0, $div_i_i$1 = 0, $div2_i_i$0 = 0, $diff2_sroa_1_8_load96$0 = 0, $diff2_sroa_1_8_load96$1 = 0, $diff2_sroa_0_0_load95$0 = 0, $diff2_sroa_0_0_load95$1 = 0, $mul_i$0 = 0, $mul_i$1 = 0, $mul3_i$0 = 0, $add_i$0 = 0, $add_i$1 = 0, $$etemp$21$1 = 0, $add_ptr_i = 0, $sub_ptr_sub_i_i_i = 0, $add_ptr_i_i_i = 0, $14 = 0, $scevgep128 = 0, $17 = 0, $18 = 0, $p0_sroa_1_8_copyload103$0 = 0, $p0_sroa_1_8_copyload103$1 = 0, $p0_sroa_0_0_copyload101$0 = 0, $p0_sroa_0_0_copyload101$1 = 0, $i_1 = 0, $inc = 0, $19 = 0, label = 0;
 $__end__i = $poly + 4 | 0;
 $0 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i = $poly | 0;
 $1 = HEAP32[$__begin__i >> 2] | 0;
 $sub = ($0 - $1 >> 4) - 1 | 0;
 if (($0 | 0) == ($1 | 0)) {
  return;
 }
 $p0_sroa_1_8__idx94 = $1 + ($sub << 4) + 8 | 0;
 $p0_sroa_0_0__idx = $1 + ($sub << 4) | 0;
 $p0_sroa_1_8_copyload104112$1 = HEAP32[$p0_sroa_1_8__idx94 + 4 >> 2] | 0;
 $p0_sroa_1_8_copyload104112$0 = HEAP32[$p0_sroa_1_8__idx94 >> 2] | 0;
 $p0_sroa_0_0_copyload102113$1 = HEAP32[$p0_sroa_0_0__idx + 4 >> 2] | 0;
 $p0_sroa_0_0_copyload102113$0 = HEAP32[$p0_sroa_0_0__idx >> 2] | 0;
 $i_0114 = 0;
 $3 = $1;
 $2 = $0;
 while (1) {
  $p1_sroa_0_0__idx85 = $3 + ($i_0114 << 4) | 0;
  $p1_sroa_0_0_copyload86$0 = HEAP32[$p1_sroa_0_0__idx85 >> 2] | 0;
  $p1_sroa_0_0_copyload86$1 = HEAP32[$p1_sroa_0_0__idx85 + 4 >> 2] | 0;
  $p1_sroa_1_8__idx90 = $3 + ($i_0114 << 4) + 8 | 0;
  $p1_sroa_1_8_copyload91$0 = HEAP32[$p1_sroa_1_8__idx90 >> 2] | 0;
  $p1_sroa_1_8_copyload91$1 = HEAP32[$p1_sroa_1_8__idx90 + 4 >> 2] | 0;
  $sub_i$0 = _i64Subtract($p0_sroa_0_0_copyload102113$0, $p0_sroa_0_0_copyload102113$1, $p1_sroa_0_0_copyload86$0, $p1_sroa_0_0_copyload86$1) | 0;
  $sub_i$1 = tempRet0;
  $sub3_i$0 = _i64Subtract($p0_sroa_1_8_copyload104112$0, $p0_sroa_1_8_copyload104112$1, $p1_sroa_1_8_copyload91$0, $p1_sroa_1_8_copyload91$1) | 0;
  $sub3_i$1 = tempRet0;
  $sub_i_off$0 = _i64Add($sub_i$0, $sub_i$1, 10, 0) | 0;
  $sub_i_off$1 = tempRet0;
  $$etemp$9$1 = 0;
  do {
   if ($sub_i_off$1 >>> 0 > $$etemp$9$1 >>> 0 | $sub_i_off$1 >>> 0 == $$etemp$9$1 >>> 0 & $sub_i_off$0 >>> 0 > 20 >>> 0) {
    label = 158;
   } else {
    $sub3_i_off$0 = _i64Add($sub3_i$0, $sub3_i$1, 10, 0) | 0;
    $sub3_i_off$1 = tempRet0;
    $$etemp$11$1 = 0;
    if ($sub3_i_off$1 >>> 0 > $$etemp$11$1 >>> 0 | $sub3_i_off$1 >>> 0 == $$etemp$11$1 >>> 0 & $sub3_i_off$0 >>> 0 > 20 >>> 0) {
     label = 158;
     break;
    }
    $mul_i_i50$0 = ___muldi3($sub_i$0, $sub_i$1, $sub_i$0, $sub_i$1) | 0;
    $mul_i_i50$1 = tempRet0;
    $mul3_i_i$0 = ___muldi3($sub3_i$0, $sub3_i$1, $sub3_i$0, $sub3_i$1) | 0;
    $add_i_i$0 = _i64Add($mul3_i_i$0, tempRet0, $mul_i_i50$0, $mul_i_i50$1) | 0;
    $add_i_i$1 = tempRet0;
    $$etemp$12$1 = 0;
    if (!(($add_i_i$1 | 0) < ($$etemp$12$1 | 0) | ($add_i_i$1 | 0) == ($$etemp$12$1 | 0) & $add_i_i$0 >>> 0 < 101 >>> 0)) {
     label = 158;
     break;
    }
    $add_ptr_i179 = $3 + ($i_0114 + 1 << 4) | 0;
    $sub_ptr_sub_i_i_i183 = $2 - $add_ptr_i179 | 0;
    _memmove($3 + ($i_0114 << 4) | 0, $add_ptr_i179 | 0, $sub_ptr_sub_i_i_i183 | 0);
    $add_ptr_i_i_i186 = $3 + (($sub_ptr_sub_i_i_i183 >> 4) + $i_0114 << 4) | 0;
    $8 = HEAP32[$__end__i >> 2] | 0;
    if (($add_ptr_i_i_i186 | 0) == ($8 | 0)) {
     $11 = $add_ptr_i_i_i186;
    } else {
     $scevgep120 = $8 + ((($8 - 16 + (-$add_ptr_i_i_i186 | 0) | 0) >>> 4 ^ -1) << 4) | 0;
     HEAP32[$__end__i >> 2] = $scevgep120;
     $11 = $scevgep120;
    }
    $i_1 = $i_0114 - 1 | 0;
    $p0_sroa_0_0_copyload101$1 = $p0_sroa_0_0_copyload102113$1;
    $p0_sroa_0_0_copyload101$0 = $p0_sroa_0_0_copyload102113$0;
    $p0_sroa_1_8_copyload103$1 = $p0_sroa_1_8_copyload104112$1;
    $p0_sroa_1_8_copyload103$0 = $p0_sroa_1_8_copyload104112$0;
    $18 = $11;
   }
  } while (0);
  do {
   if ((label | 0) == 158) {
    label = 0;
    $sub_ptr_lhs_cast_i114 = $2;
    if ($i_0114 >>> 0 < (($sub_ptr_lhs_cast_i114 - $3 >> 4) - 1 | 0) >>> 0) {
     $add = $i_0114 + 1 | 0;
     $_pn = $3 + ($add << 4) | 0;
     $p2_sroa_1_8_copyload82100_in = $3 + ($add << 4) + 8 | 0;
    } else {
     $_pn = $3;
     $p2_sroa_1_8_copyload82100_in = $3 + 8 | 0;
    }
    $p2_sroa_0_0_copyload7999_in = $_pn | 0;
    $p2_sroa_0_0_copyload7999$0 = HEAP32[$p2_sroa_0_0_copyload7999_in >> 2] | 0;
    $p2_sroa_0_0_copyload7999$1 = HEAP32[$p2_sroa_0_0_copyload7999_in + 4 >> 2] | 0;
    $p2_sroa_1_8_copyload82100$0 = HEAP32[$p2_sroa_1_8_copyload82100_in >> 2] | 0;
    $p2_sroa_1_8_copyload82100$1 = HEAP32[$p2_sroa_1_8_copyload82100_in + 4 >> 2] | 0;
    $sub_i74$0 = _i64Subtract($p1_sroa_0_0_copyload86$0, $p1_sroa_0_0_copyload86$1, $p0_sroa_0_0_copyload102113$0, $p0_sroa_0_0_copyload102113$1) | 0;
    $sub_i74$1 = tempRet0;
    $sub3_i75$0 = _i64Subtract($p1_sroa_1_8_copyload91$0, $p1_sroa_1_8_copyload91$1, $p0_sroa_1_8_copyload104112$0, $p0_sroa_1_8_copyload104112$1) | 0;
    $sub3_i75$1 = tempRet0;
    $mul_i_i_i55$0 = ___muldi3($sub_i74$0, $sub_i74$1, $sub_i74$0, $sub_i74$1) | 0;
    $mul_i_i_i55$1 = tempRet0;
    $mul3_i_i_i56$0 = ___muldi3($sub3_i75$0, $sub3_i75$1, $sub3_i75$0, $sub3_i75$1) | 0;
    $add_i_i_i57$0 = _i64Add($mul3_i_i_i56$0, tempRet0, $mul_i_i_i55$0, $mul_i_i_i55$1) | 0;
    $conv2_i_i60 = ~~+Math_sqrt(+(+($add_i_i_i57$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0));
    if (($conv2_i_i60 | 0) < 1) {
     $diff0_sroa_0_0_load97$1 = 0;
     $diff0_sroa_0_0_load97$0 = 1e6;
     $diff0_sroa_1_8_load98$1 = 0;
     $diff0_sroa_1_8_load98$0 = 0;
    } else {
     $mul_i_i65$0 = ___muldi3($sub_i74$0, $sub_i74$1, 1e6, 0) | 0;
     $mul_i_i65$1 = tempRet0;
     $mul2_i_i66$0 = ___muldi3($sub3_i75$0, $sub3_i75$1, 1e6, 0) | 0;
     $mul2_i_i66$1 = tempRet0;
     $conv_i8_i67$0 = $conv2_i_i60;
     $conv_i8_i67$1 = ($conv2_i_i60 | 0) < 0 ? -1 : 0;
     $div_i_i68$0 = ___divdi3($mul_i_i65$0, $mul_i_i65$1, $conv_i8_i67$0, $conv_i8_i67$1) | 0;
     $div_i_i68$1 = tempRet0;
     $div2_i_i69$0 = ___divdi3($mul2_i_i66$0, $mul2_i_i66$1, $conv_i8_i67$0, $conv_i8_i67$1) | 0;
     $diff0_sroa_0_0_load97$1 = $div_i_i68$1;
     $diff0_sroa_0_0_load97$0 = $div_i_i68$0;
     $diff0_sroa_1_8_load98$1 = tempRet0;
     $diff0_sroa_1_8_load98$0 = $div2_i_i69$0;
    }
    $sub_i51$0 = _i64Subtract($p1_sroa_0_0_copyload86$0, $p1_sroa_0_0_copyload86$1, $p2_sroa_0_0_copyload7999$0, $p2_sroa_0_0_copyload7999$1) | 0;
    $sub_i51$1 = tempRet0;
    $sub3_i52$0 = _i64Subtract($p1_sroa_1_8_copyload91$0, $p1_sroa_1_8_copyload91$1, $p2_sroa_1_8_copyload82100$0, $p2_sroa_1_8_copyload82100$1) | 0;
    $sub3_i52$1 = tempRet0;
    $mul_i_i_i$0 = ___muldi3($sub_i51$0, $sub_i51$1, $sub_i51$0, $sub_i51$1) | 0;
    $mul_i_i_i$1 = tempRet0;
    $mul3_i_i_i$0 = ___muldi3($sub3_i52$0, $sub3_i52$1, $sub3_i52$0, $sub3_i52$1) | 0;
    $add_i_i_i$0 = _i64Add($mul3_i_i_i$0, tempRet0, $mul_i_i_i$0, $mul_i_i_i$1) | 0;
    $conv2_i_i = ~~+Math_sqrt(+(+($add_i_i_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0));
    if (($conv2_i_i | 0) < 1) {
     $diff2_sroa_0_0_load95$1 = 0;
     $diff2_sroa_0_0_load95$0 = 1e6;
     $diff2_sroa_1_8_load96$1 = 0;
     $diff2_sroa_1_8_load96$0 = 0;
    } else {
     $mul_i_i$0 = ___muldi3($sub_i51$0, $sub_i51$1, 1e6, 0) | 0;
     $mul_i_i$1 = tempRet0;
     $mul2_i_i$0 = ___muldi3($sub3_i52$0, $sub3_i52$1, 1e6, 0) | 0;
     $mul2_i_i$1 = tempRet0;
     $conv_i8_i$0 = $conv2_i_i;
     $conv_i8_i$1 = ($conv2_i_i | 0) < 0 ? -1 : 0;
     $div_i_i$0 = ___divdi3($mul_i_i$0, $mul_i_i$1, $conv_i8_i$0, $conv_i8_i$1) | 0;
     $div_i_i$1 = tempRet0;
     $div2_i_i$0 = ___divdi3($mul2_i_i$0, $mul2_i_i$1, $conv_i8_i$0, $conv_i8_i$1) | 0;
     $diff2_sroa_0_0_load95$1 = $div_i_i$1;
     $diff2_sroa_0_0_load95$0 = $div_i_i$0;
     $diff2_sroa_1_8_load96$1 = tempRet0;
     $diff2_sroa_1_8_load96$0 = $div2_i_i$0;
    }
    $mul_i$0 = ___muldi3($diff2_sroa_0_0_load95$0, $diff2_sroa_0_0_load95$1, $diff0_sroa_0_0_load97$0, $diff0_sroa_0_0_load97$1) | 0;
    $mul_i$1 = tempRet0;
    $mul3_i$0 = ___muldi3($diff2_sroa_1_8_load96$0, $diff2_sroa_1_8_load96$1, $diff0_sroa_1_8_load98$0, $diff0_sroa_1_8_load98$1) | 0;
    $add_i$0 = _i64Add($mul_i$0, $mul_i$1, $mul3_i$0, tempRet0) | 0;
    $add_i$1 = tempRet0;
    $$etemp$21$1 = -233;
    if (!(($add_i$1 | 0) < ($$etemp$21$1 | 0) | ($add_i$1 | 0) == ($$etemp$21$1 | 0) & $add_i$0 >>> 0 < 728379968 >>> 0)) {
     $i_1 = $i_0114;
     $p0_sroa_0_0_copyload101$1 = $p1_sroa_0_0_copyload86$1;
     $p0_sroa_0_0_copyload101$0 = $p1_sroa_0_0_copyload86$0;
     $p0_sroa_1_8_copyload103$1 = $p1_sroa_1_8_copyload91$1;
     $p0_sroa_1_8_copyload103$0 = $p1_sroa_1_8_copyload91$0;
     $18 = $2;
     break;
    }
    $add_ptr_i = $3 + ($i_0114 + 1 << 4) | 0;
    $sub_ptr_sub_i_i_i = $sub_ptr_lhs_cast_i114 - $add_ptr_i | 0;
    _memmove($3 + ($i_0114 << 4) | 0, $add_ptr_i | 0, $sub_ptr_sub_i_i_i | 0);
    $add_ptr_i_i_i = $3 + (($sub_ptr_sub_i_i_i >> 4) + $i_0114 << 4) | 0;
    $14 = HEAP32[$__end__i >> 2] | 0;
    if (($add_ptr_i_i_i | 0) == ($14 | 0)) {
     $17 = $add_ptr_i_i_i;
    } else {
     $scevgep128 = $14 + ((($14 - 16 + (-$add_ptr_i_i_i | 0) | 0) >>> 4 ^ -1) << 4) | 0;
     HEAP32[$__end__i >> 2] = $scevgep128;
     $17 = $scevgep128;
    }
    $i_1 = $i_0114 - 1 | 0;
    $p0_sroa_0_0_copyload101$1 = $p0_sroa_0_0_copyload102113$1;
    $p0_sroa_0_0_copyload101$0 = $p0_sroa_0_0_copyload102113$0;
    $p0_sroa_1_8_copyload103$1 = $p0_sroa_1_8_copyload104112$1;
    $p0_sroa_1_8_copyload103$0 = $p0_sroa_1_8_copyload104112$0;
    $18 = $17;
   }
  } while (0);
  $inc = $i_1 + 1 | 0;
  $19 = HEAP32[$__begin__i >> 2] | 0;
  if ($inc >>> 0 < $18 - $19 >> 4 >>> 0) {
   $p0_sroa_1_8_copyload104112$1 = $p0_sroa_1_8_copyload103$1;
   $p0_sroa_1_8_copyload104112$0 = $p0_sroa_1_8_copyload103$0;
   $p0_sroa_0_0_copyload102113$1 = $p0_sroa_0_0_copyload101$1;
   $p0_sroa_0_0_copyload102113$0 = $p0_sroa_0_0_copyload101$0;
   $i_0114 = $inc;
   $3 = $19;
   $2 = $18;
  } else {
   break;
  }
 }
 return;
}
function __Z16optimizePolygonsRNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEE($polys) {
 $polys = $polys | 0;
 var $__end__i = 0, $__begin__i = 0, $1 = 0, $3 = 0, $n_030 = 0, $4 = 0, $5 = 0, $arrayidx_i19 = 0, $add_ptr_i = 0, $8 = 0, $11 = 0, $__first_addr_i_i_i_022 = 0, $__result_addr_i_i_i_021 = 0, $incdec_ptr_i_i_i = 0, $14 = 0, $__result_addr_i_i_i_0_lcssa = 0, $15 = 0, $incdec_ptr_i_i_i_i = 0, $16 = 0, $17 = 0, $18 = 0, $__end__i_i_i_i_i_i = 0, $19 = 0, $24 = 0, $25 = 0, $26 = 0, $n_1 = 0, $inc = 0;
 $__end__i = $polys + 4 | 0;
 $__begin__i = $polys | 0;
 $1 = HEAP32[$__begin__i >> 2] | 0;
 if ((HEAP32[$__end__i >> 2] | 0) == ($1 | 0)) {
  return;
 } else {
  $n_030 = 0;
  $3 = $1;
 }
 while (1) {
  __Z15optimizePolygonRNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEE($3 + ($n_030 * 12 & -1) | 0);
  $4 = HEAP32[$__begin__i >> 2] | 0;
  $5 = $4;
  $arrayidx_i19 = $4 + ($n_030 * 12 & -1) | 0;
  if ((HEAP32[$4 + ($n_030 * 12 & -1) + 4 >> 2] | 0) - (HEAP32[$arrayidx_i19 >> 2] | 0) >> 4 >>> 0 < 3) {
   $add_ptr_i = $4 + (($n_030 + 1 | 0) * 12 & -1) | 0;
   $8 = HEAP32[$__end__i >> 2] | 0;
   if (($add_ptr_i | 0) == ($8 | 0)) {
    $__result_addr_i_i_i_0_lcssa = $arrayidx_i19;
    $14 = $add_ptr_i;
   } else {
    $11 = $n_030 + ((($8 + ((-2 - $n_030 | 0) * 12 & -1) + (-$5 | 0) | 0) >>> 0) / 12 >>> 0) | 0;
    $__result_addr_i_i_i_021 = $arrayidx_i19;
    $__first_addr_i_i_i_022 = $add_ptr_i;
    while (1) {
     __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($__result_addr_i_i_i_021, HEAP32[$__first_addr_i_i_i_022 >> 2] | 0, HEAP32[$__first_addr_i_i_i_022 + 4 >> 2] | 0);
     $incdec_ptr_i_i_i = $__first_addr_i_i_i_022 + 12 | 0;
     if (($incdec_ptr_i_i_i | 0) == ($8 | 0)) {
      break;
     } else {
      $__result_addr_i_i_i_021 = $__result_addr_i_i_i_021 + 12 | 0;
      $__first_addr_i_i_i_022 = $incdec_ptr_i_i_i;
     }
    }
    $__result_addr_i_i_i_0_lcssa = $4 + (($11 + 1 | 0) * 12 & -1) | 0;
    $14 = HEAP32[$__end__i >> 2] | 0;
   }
   if (($__result_addr_i_i_i_0_lcssa | 0) == ($14 | 0)) {
    $24 = $14;
   } else {
    $15 = $14;
    while (1) {
     $incdec_ptr_i_i_i_i = $15 - 12 | 0;
     HEAP32[$__end__i >> 2] = $incdec_ptr_i_i_i_i;
     $16 = HEAP32[$incdec_ptr_i_i_i_i >> 2] | 0;
     $17 = $16;
     if (($16 | 0) == 0) {
      $18 = $incdec_ptr_i_i_i_i;
     } else {
      $__end__i_i_i_i_i_i = $15 - 12 + 4 | 0;
      $19 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
      if (($16 | 0) != ($19 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i >> 2] = $19 + ((($19 - 16 + (-$17 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($16);
      $18 = HEAP32[$__end__i >> 2] | 0;
     }
     if (($__result_addr_i_i_i_0_lcssa | 0) == ($18 | 0)) {
      $24 = $__result_addr_i_i_i_0_lcssa;
      break;
     } else {
      $15 = $18;
     }
    }
   }
   $n_1 = $n_030 - 1 | 0;
   $26 = HEAP32[$__begin__i >> 2] | 0;
   $25 = $24;
  } else {
   $n_1 = $n_030;
   $26 = $4;
   $25 = HEAP32[$__end__i >> 2] | 0;
  }
  $inc = $n_1 + 1 | 0;
  if ($inc >>> 0 < (($25 - $26 | 0) / 12 & -1) >>> 0) {
   $n_030 = $inc;
   $3 = $26;
  } else {
   break;
  }
 }
 return;
}
function __Z20createLayerWithPartsR10SliceLayerP11SlicerLayeri($storageLayer, $layer, $unionAllType) {
 $storageLayer = $storageLayer | 0;
 $layer = $layer | 0;
 $unionAllType = $unionAllType | 0;
 var $polyList = 0, $p = 0, $resultPolys = 0, $clipper = 0, $ref_tmp = 0, $agg_tmp = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $__first__i_i_i_i_i_i = 0, $__end__i = 0, $__begin__i = 0, $1 = 0, $__begin__i_i_i121 = 0, $__end__i_i_i122 = 0, $__first__i_i_i_i_i_i128 = 0, $tobool = 0, $__t_i_i_i_i_0_cast177 = 0, $3 = 0, $i_0233 = 0, $_pre246 = 0, $6 = 0, $7 = 0, $j_0208 = 0, $arrayidx_i168 = 0, $8 = 0, $10 = 0, $11 = 0, $12 = 0, $24 = 0, $25 = 0, $incdec_ptr_i19_i_i12_i = 0, $incdec_ptr_i19_i_i15_i = 0, $agg_tmp3_i_sroa_0_014_i = 0, $26 = 0, $27 = 0, $28 = 0, $__begin__i_i35 = 0, $__end__i_i36 = 0, $__first__i_i_i_i_i = 0, $sub_ptr_sub_i_i = 0, $sub_ptr_div_i_i = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $__first_addr_04_i_i = 0, $36 = 0, $37 = 0, $38 = 0, $47 = 0, $48 = 0, $49 = 0, $inc28 = 0, $55 = 0, $56 = 0, $57 = 0, $__begin__i_i_i263 = 0, $__end__i_i_i264 = 0, $add_ptr = 0, $64 = 0, $i_011_i = 0, $m_ExecuteLocked_i62_phi_trans_insert = 0, $m_ExecuteLocked_i62_pre_phi = 0, $67 = 0, $68 = 0, $69 = 0, $71 = 0, $incdec_ptr_i_i_i_i_i = 0, $81 = 0, $82 = 0, $84 = 0, $incdec_ptr_i_i_i_i_i67 = 0, $92 = 0, $X_i_i_i_i_i_i = 0, $Y_i_i_i_i_i_i = 0, $X_i_i1_i_i_i_i = 0, $Y_i_i2_i_i_i_i = 0, $93 = 0, $__end__i327 = 0, $__first__i_i_i_i332 = 0, $parts = 0, $__begin__i350 = 0, $__begin__i_i_i96 = 0, $__end__i_i_i_i_i_i98 = 0, $i43_0195 = 0, $94 = 0, $96 = 0, $97 = 0, $outer = 0, $__end__i370 = 0, $99 = 0, $101 = 0, $102 = 0, $104 = 0, $106 = 0, $107 = 0, $108 = 0, $j59_0186 = 0, $arrayidx_i409 = 0, $__end__i292 = 0, $109 = 0, $111 = 0, $inc77 = 0, $112 = 0, $114 = 0, $115 = 0, $_lcssa = 0, $119 = 0, $120 = 0, $121 = 0, $incdec_ptr_i_i_i_i_i_i101 = 0, $122 = 0, $123 = 0, $124 = 0, $__end__i_i_i_i_i_i_i_i_i107 = 0, $125 = 0, $_pre3_i_i_i116 = 0, $130 = 0, $138 = 0, $139 = 0, $incdec_ptr_i_i_i_i_i_i131 = 0, $144 = 0, $145 = 0, $146 = 0, $incdec_ptr_i_i_i_i_i_i138 = 0, $147 = 0, $148 = 0, $149 = 0, $__end__i_i_i_i_i_i_i_i_i144 = 0, $150 = 0, $155 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 280 | 0;
 $polyList = __stackBase__ + 16 | 0;
 $p = __stackBase__ + 32 | 0;
 $resultPolys = __stackBase__ + 48 | 0;
 $clipper = __stackBase__ + 64 | 0;
 $ref_tmp = __stackBase__ + 168 | 0;
 $agg_tmp = __stackBase__ + 264 | 0;
 $__begin__i_i_i = $polyList | 0;
 HEAP32[$__begin__i_i_i >> 2] = 0;
 $__end__i_i_i = $polyList + 4 | 0;
 HEAP32[$__end__i_i_i >> 2] = 0;
 $__first__i_i_i_i_i_i = $polyList + 8 | 0;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = 0;
 $__end__i = $layer + 28 | 0;
 $__begin__i = $layer + 24 | 0;
 $1 = HEAP32[$__begin__i >> 2] | 0;
 do {
  if ((HEAP32[$__end__i >> 2] | 0) == ($1 | 0)) {
   $57 = 0;
   $56 = 0;
  } else {
   $__begin__i_i_i121 = $p | 0;
   $__end__i_i_i122 = $p + 4 | 0;
   $__first__i_i_i_i_i_i128 = $p + 8 | 0;
   $tobool = ($unionAllType & 2 | 0) == 0;
   $__t_i_i_i_i_0_cast177 = __stackBase__ | 0;
   $i_0233 = 0;
   $3 = $1;
   L199 : while (1) {
    HEAP32[$__begin__i_i_i121 >> 2] = 0;
    HEAP32[$__end__i_i_i122 >> 2] = 0;
    HEAP32[$__first__i_i_i_i_i_i128 >> 2] = 0;
    __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($p, HEAP32[$3 + ($i_0233 * 12 & -1) >> 2] | 0);
    $_pre246 = HEAP32[$__begin__i >> 2] | 0;
    $6 = HEAP32[$_pre246 + ($i_0233 * 12 & -1) >> 2] | 0;
    if ((HEAP32[$_pre246 + ($i_0233 * 12 & -1) + 4 >> 2] | 0) - $6 >> 4 >>> 0 > 1) {
     $j_0208 = 1;
     $7 = $6;
     do {
      $arrayidx_i168 = $7 + ($j_0208 << 4) | 0;
      $8 = HEAP32[$__end__i_i_i122 >> 2] | 0;
      if (($8 | 0) == (HEAP32[$__first__i_i_i_i_i_i128 >> 2] | 0)) {
       __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($p, $arrayidx_i168);
      } else {
       if (($8 | 0) != 0) {
        $10 = $8;
        $11 = $arrayidx_i168;
        HEAP32[$10 >> 2] = HEAP32[$11 >> 2];
        HEAP32[$10 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
        HEAP32[$10 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
        HEAP32[$10 + 12 >> 2] = HEAP32[$11 + 12 >> 2];
       }
       HEAP32[$__end__i_i_i122 >> 2] = $8 + 16;
      }
      $j_0208 = $j_0208 + 1 | 0;
      $12 = HEAP32[$__begin__i >> 2] | 0;
      $7 = HEAP32[$12 + ($i_0233 * 12 & -1) >> 2] | 0;
     } while ($j_0208 >>> 0 < (HEAP32[$12 + ($i_0233 * 12 & -1) + 4 >> 2] | 0) - $7 >> 4 >>> 0);
    }
    do {
     if (!$tobool) {
      if (!(__ZN10ClipperLib11OrientationERKNSt3__16vectorINS_8IntPointENS0_9allocatorIS2_EEEE($p) | 0)) {
       break;
      }
      $24 = HEAP32[$__begin__i_i_i121 >> 2] | 0;
      $25 = HEAP32[$__end__i_i_i122 >> 2] | 0;
      if (($24 | 0) == ($25 | 0)) {
       break;
      }
      $incdec_ptr_i19_i_i12_i = $25 - 16 | 0;
      if ($24 >>> 0 < $incdec_ptr_i19_i_i12_i >>> 0) {
       $agg_tmp3_i_sroa_0_014_i = $24;
       $incdec_ptr_i19_i_i15_i = $incdec_ptr_i19_i_i12_i;
      } else {
       break;
      }
      do {
       $26 = $agg_tmp3_i_sroa_0_014_i;
       HEAP32[$__t_i_i_i_i_0_cast177 >> 2] = HEAP32[$26 >> 2];
       HEAP32[$__t_i_i_i_i_0_cast177 + 4 >> 2] = HEAP32[$26 + 4 >> 2];
       HEAP32[$__t_i_i_i_i_0_cast177 + 8 >> 2] = HEAP32[$26 + 8 >> 2];
       HEAP32[$__t_i_i_i_i_0_cast177 + 12 >> 2] = HEAP32[$26 + 12 >> 2];
       $27 = $incdec_ptr_i19_i_i15_i;
       HEAP32[$26 >> 2] = HEAP32[$27 >> 2];
       HEAP32[$26 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
       HEAP32[$26 + 8 >> 2] = HEAP32[$27 + 8 >> 2];
       HEAP32[$26 + 12 >> 2] = HEAP32[$27 + 12 >> 2];
       HEAP32[$27 >> 2] = HEAP32[$__t_i_i_i_i_0_cast177 >> 2];
       HEAP32[$27 + 4 >> 2] = HEAP32[$__t_i_i_i_i_0_cast177 + 4 >> 2];
       HEAP32[$27 + 8 >> 2] = HEAP32[$__t_i_i_i_i_0_cast177 + 8 >> 2];
       HEAP32[$27 + 12 >> 2] = HEAP32[$__t_i_i_i_i_0_cast177 + 12 >> 2];
       $agg_tmp3_i_sroa_0_014_i = $agg_tmp3_i_sroa_0_014_i + 16 | 0;
       $incdec_ptr_i19_i_i15_i = $incdec_ptr_i19_i_i15_i - 16 | 0;
      } while ($agg_tmp3_i_sroa_0_014_i >>> 0 < $incdec_ptr_i19_i_i15_i >>> 0);
     }
    } while (0);
    $28 = HEAP32[$__end__i_i_i >> 2] | 0;
    if (($28 | 0) == (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0)) {
     __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($polyList, $p);
    } else {
     do {
      if (($28 | 0) != 0) {
       $__begin__i_i35 = $28 | 0;
       HEAP32[$__begin__i_i35 >> 2] = 0;
       $__end__i_i36 = $28 + 4 | 0;
       HEAP32[$__end__i_i36 >> 2] = 0;
       $__first__i_i_i_i_i = $28 + 8 | 0;
       HEAP32[$__first__i_i_i_i_i >> 2] = 0;
       $sub_ptr_sub_i_i = (HEAP32[$__end__i_i_i122 >> 2] | 0) - (HEAP32[$__begin__i_i_i121 >> 2] | 0) | 0;
       $sub_ptr_div_i_i = $sub_ptr_sub_i_i >> 4;
       if (($sub_ptr_div_i_i | 0) == 0) {
        break;
       }
       if ($sub_ptr_div_i_i >>> 0 > 268435455) {
        break L199;
       }
       $32 = __Znwj($sub_ptr_sub_i_i) | 0;
       HEAP32[$__end__i_i36 >> 2] = $32;
       HEAP32[$__begin__i_i35 >> 2] = $32;
       HEAP32[$__first__i_i_i_i_i >> 2] = $32 + ($sub_ptr_div_i_i << 4);
       $33 = HEAP32[$__begin__i_i_i121 >> 2] | 0;
       $34 = HEAP32[$__end__i_i_i122 >> 2] | 0;
       if (($33 | 0) == ($34 | 0)) {
        break;
       } else {
        $__first_addr_04_i_i = $33;
        $35 = $32;
       }
       do {
        if (($35 | 0) == 0) {
         $38 = 0;
        } else {
         $36 = $35;
         $37 = $__first_addr_04_i_i;
         HEAP32[$36 >> 2] = HEAP32[$37 >> 2];
         HEAP32[$36 + 4 >> 2] = HEAP32[$37 + 4 >> 2];
         HEAP32[$36 + 8 >> 2] = HEAP32[$37 + 8 >> 2];
         HEAP32[$36 + 12 >> 2] = HEAP32[$37 + 12 >> 2];
         $38 = HEAP32[$__end__i_i36 >> 2] | 0;
        }
        $35 = $38 + 16 | 0;
        HEAP32[$__end__i_i36 >> 2] = $35;
        $__first_addr_04_i_i = $__first_addr_04_i_i + 16 | 0;
       } while (($__first_addr_04_i_i | 0) != ($34 | 0));
      }
     } while (0);
     HEAP32[$__end__i_i_i >> 2] = (HEAP32[$__end__i_i_i >> 2] | 0) + 12;
    }
    $47 = HEAP32[$__begin__i_i_i121 >> 2] | 0;
    $48 = $47;
    if (($47 | 0) != 0) {
     $49 = HEAP32[$__end__i_i_i122 >> 2] | 0;
     if (($47 | 0) != ($49 | 0)) {
      HEAP32[$__end__i_i_i122 >> 2] = $49 + ((($49 - 16 + (-$48 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($47);
    }
    $inc28 = $i_0233 + 1 | 0;
    $55 = HEAP32[$__begin__i >> 2] | 0;
    if ($inc28 >>> 0 < (((HEAP32[$__end__i >> 2] | 0) - $55 | 0) / 12 & -1) >>> 0) {
     $i_0233 = $inc28;
     $3 = $55;
    } else {
     label = 237;
     break;
    }
   }
   if ((label | 0) == 237) {
    $57 = HEAP32[$__end__i_i_i >> 2] | 0;
    $56 = HEAP32[$__begin__i_i_i >> 2] | 0;
    break;
   }
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
  }
 } while (0);
 $__begin__i_i_i263 = $resultPolys | 0;
 HEAP32[$__begin__i_i_i263 >> 2] = 0;
 $__end__i_i_i264 = $resultPolys + 4 | 0;
 HEAP32[$__end__i_i_i264 >> 2] = 0;
 HEAP32[$resultPolys + 8 >> 2] = 0;
 HEAP32[$clipper + 92 >> 2] = 0;
 HEAP32[$clipper + 96 >> 2] = 0;
 HEAP32[$clipper + 100 >> 2] = 0;
 HEAP32[$clipper + 84 >> 2] = 0;
 HEAP32[$clipper + 80 >> 2] = 0;
 HEAP32[$clipper >> 2] = 11908;
 HEAP32[$clipper + 76 >> 2] = 11948;
 _memset($clipper + 4 | 0, 0, 36);
 _memset($clipper + 44 | 0, 0, 17);
 HEAP8[$clipper + 88 | 0] = 0;
 HEAP8[$clipper + 72 | 0] = 0;
 $add_ptr = $clipper + 76 | 0;
 if (($57 | 0) == ($56 | 0)) {
  $67 = 1;
  $m_ExecuteLocked_i62_pre_phi = $clipper + 60 | 0;
 } else {
  $i_011_i = 0;
  $64 = $56;
  do {
   __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($add_ptr, $64 + ($i_011_i * 12 & -1) | 0, 0) | 0;
   $i_011_i = $i_011_i + 1 | 0;
   $64 = HEAP32[$__begin__i_i_i >> 2] | 0;
  } while ($i_011_i >>> 0 < (((HEAP32[$__end__i_i_i >> 2] | 0) - $64 | 0) / 12 & -1) >>> 0);
  $m_ExecuteLocked_i62_phi_trans_insert = $clipper + 60 | 0;
  $67 = (HEAP8[$m_ExecuteLocked_i62_phi_trans_insert] & 1) == 0;
  $m_ExecuteLocked_i62_pre_phi = $m_ExecuteLocked_i62_phi_trans_insert;
 }
 do {
  if (($unionAllType | 0) == 0) {
   if (!$67) {
    break;
   }
   HEAP8[$m_ExecuteLocked_i62_pre_phi] = 1;
   $81 = HEAP32[$__end__i_i_i264 >> 2] | 0;
   $82 = HEAP32[$__begin__i_i_i263 >> 2] | 0;
   if (($81 | 0) != ($82 | 0)) {
    $84 = $81;
    do {
     $incdec_ptr_i_i_i_i_i67 = $84 - 24 | 0;
     HEAP32[$__end__i_i_i264 >> 2] = $incdec_ptr_i_i_i_i_i67;
     __ZN10ClipperLib9ExPolygonD2Ev($incdec_ptr_i_i_i_i_i67);
     $84 = HEAP32[$__end__i_i_i264 >> 2] | 0;
    } while (($82 | 0) != ($84 | 0));
   }
   HEAP32[$clipper + 68 >> 2] = 0;
   HEAP32[$clipper + 64 >> 2] = 0;
   HEAP32[$clipper + 40 >> 2] = 1;
   if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$clipper >> 2] | 0) + 16 >> 2] & 63]($clipper, 1) | 0) {
    __ZN10ClipperLib7Clipper13BuildResultExERNSt3__16vectorINS_9ExPolygonENS1_9allocatorIS3_EEEE($clipper, $resultPolys);
   }
   HEAP8[$m_ExecuteLocked_i62_pre_phi] = 0;
  } else {
   if (!$67) {
    break;
   }
   HEAP8[$m_ExecuteLocked_i62_pre_phi] = 1;
   $68 = HEAP32[$__end__i_i_i264 >> 2] | 0;
   $69 = HEAP32[$__begin__i_i_i263 >> 2] | 0;
   if (($68 | 0) != ($69 | 0)) {
    $71 = $68;
    do {
     $incdec_ptr_i_i_i_i_i = $71 - 24 | 0;
     HEAP32[$__end__i_i_i264 >> 2] = $incdec_ptr_i_i_i_i_i;
     __ZN10ClipperLib9ExPolygonD2Ev($incdec_ptr_i_i_i_i_i);
     $71 = HEAP32[$__end__i_i_i264 >> 2] | 0;
    } while (($69 | 0) != ($71 | 0));
   }
   HEAP32[$clipper + 68 >> 2] = 1;
   HEAP32[$clipper + 64 >> 2] = 1;
   HEAP32[$clipper + 40 >> 2] = 1;
   if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$clipper >> 2] | 0) + 16 >> 2] & 63]($clipper, 1) | 0) {
    __ZN10ClipperLib7Clipper13BuildResultExERNSt3__16vectorINS_9ExPolygonENS1_9allocatorIS3_EEEE($clipper, $resultPolys);
   }
   HEAP8[$m_ExecuteLocked_i62_pre_phi] = 0;
  }
 } while (0);
 if ((HEAP32[$__end__i_i_i264 >> 2] | 0) != (HEAP32[$__begin__i_i_i263 >> 2] | 0)) {
  $92 = $ref_tmp;
  $X_i_i_i_i_i_i = $ref_tmp | 0;
  $Y_i_i_i_i_i_i = $ref_tmp + 8 | 0;
  $X_i_i1_i_i_i_i = $ref_tmp + 16 | 0;
  $Y_i_i2_i_i_i_i = $ref_tmp + 24 | 0;
  $93 = $ref_tmp + 32 | 0;
  $__end__i327 = $storageLayer + 4 | 0;
  $__first__i_i_i_i332 = $storageLayer + 8 | 0;
  $parts = $storageLayer | 0;
  $__begin__i350 = $storageLayer | 0;
  $__begin__i_i_i96 = $agg_tmp | 0;
  $__end__i_i_i_i_i_i98 = $agg_tmp + 4 | 0;
  $i43_0195 = 0;
  do {
   _memset($92 | 0, 0, 96);
   HEAP32[$X_i_i_i_i_i_i >> 2] = 0;
   HEAP32[$X_i_i_i_i_i_i + 4 >> 2] = -2147483648;
   HEAP32[$Y_i_i_i_i_i_i >> 2] = 0;
   HEAP32[$Y_i_i_i_i_i_i + 4 >> 2] = -2147483648;
   HEAP32[$X_i_i1_i_i_i_i >> 2] = 0;
   HEAP32[$X_i_i1_i_i_i_i + 4 >> 2] = -2147483648;
   HEAP32[$Y_i_i2_i_i_i_i >> 2] = 0;
   HEAP32[$Y_i_i2_i_i_i_i + 4 >> 2] = -2147483648;
   _memset($93 | 0, 0, 60);
   $94 = HEAP32[$__end__i327 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$__first__i_i_i_i332 >> 2] | 0)) {
    __ZNSt3__16vectorI14SliceLayerPartNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($parts, $ref_tmp);
   } else {
    if (($94 | 0) == 0) {
     $96 = 0;
    } else {
     __ZN14SliceLayerPartC2ERKS_($94, $ref_tmp);
     $96 = HEAP32[$__end__i327 >> 2] | 0;
    }
    HEAP32[$__end__i327 >> 2] = $96 + 96;
   }
   __ZN14SliceLayerPartD2Ev($ref_tmp);
   $97 = HEAP32[$__begin__i350 >> 2] | 0;
   $outer = (HEAP32[$__begin__i_i_i263 >> 2] | 0) + ($i43_0195 * 24 & -1) | 0;
   $__end__i370 = $97 + ($i43_0195 * 96 & -1) + 36 | 0;
   $99 = HEAP32[$__end__i370 >> 2] | 0;
   if (($99 | 0) == (HEAP32[$97 + ($i43_0195 * 96 & -1) + 40 >> 2] | 0)) {
    __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($97 + ($i43_0195 * 96 & -1) + 32 | 0, $outer);
   } else {
    if (($99 | 0) == 0) {
     $101 = 0;
    } else {
     __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($99, $outer);
     $101 = HEAP32[$__end__i370 >> 2] | 0;
    }
    HEAP32[$__end__i370 >> 2] = $101 + 12;
   }
   $102 = HEAP32[$__begin__i_i_i263 >> 2] | 0;
   $104 = HEAP32[$102 + ($i43_0195 * 24 & -1) + 12 >> 2] | 0;
   $106 = HEAP32[$__begin__i350 >> 2] | 0;
   if ((HEAP32[$102 + ($i43_0195 * 24 & -1) + 16 >> 2] | 0) == ($104 | 0)) {
    $_lcssa = $106;
   } else {
    $j59_0186 = 0;
    $108 = $104;
    $107 = $106;
    while (1) {
     $arrayidx_i409 = $108 + ($j59_0186 * 12 & -1) | 0;
     $__end__i292 = $107 + ($i43_0195 * 96 & -1) + 36 | 0;
     $109 = HEAP32[$__end__i292 >> 2] | 0;
     if (($109 | 0) == (HEAP32[$107 + ($i43_0195 * 96 & -1) + 40 >> 2] | 0)) {
      __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($107 + ($i43_0195 * 96 & -1) + 32 | 0, $arrayidx_i409);
     } else {
      if (($109 | 0) == 0) {
       $111 = 0;
      } else {
       __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($109, $arrayidx_i409);
       $111 = HEAP32[$__end__i292 >> 2] | 0;
      }
      HEAP32[$__end__i292 >> 2] = $111 + 12;
     }
     $inc77 = $j59_0186 + 1 | 0;
     $112 = HEAP32[$__begin__i_i_i263 >> 2] | 0;
     $114 = HEAP32[$112 + ($i43_0195 * 24 & -1) + 12 >> 2] | 0;
     $115 = HEAP32[$__begin__i350 >> 2] | 0;
     if ($inc77 >>> 0 < (((HEAP32[$112 + ($i43_0195 * 24 & -1) + 16 >> 2] | 0) - $114 | 0) / 12 & -1) >>> 0) {
      $j59_0186 = $inc77;
      $108 = $114;
      $107 = $115;
     } else {
      $_lcssa = $115;
      break;
     }
    }
   }
   __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($agg_tmp, $_lcssa + ($i43_0195 * 96 & -1) + 32 | 0);
   __ZN4AABB9calculateENSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEE($_lcssa + ($i43_0195 * 96 & -1) | 0, $agg_tmp);
   $119 = HEAP32[$__begin__i_i_i96 >> 2] | 0;
   if (($119 | 0) != 0) {
    $120 = HEAP32[$__end__i_i_i_i_i_i98 >> 2] | 0;
    if (($119 | 0) == ($120 | 0)) {
     $130 = $119;
    } else {
     $121 = $120;
     while (1) {
      $incdec_ptr_i_i_i_i_i_i101 = $121 - 12 | 0;
      HEAP32[$__end__i_i_i_i_i_i98 >> 2] = $incdec_ptr_i_i_i_i_i_i101;
      $122 = HEAP32[$incdec_ptr_i_i_i_i_i_i101 >> 2] | 0;
      $123 = $122;
      if (($122 | 0) == 0) {
       $124 = $incdec_ptr_i_i_i_i_i_i101;
      } else {
       $__end__i_i_i_i_i_i_i_i_i107 = $121 - 12 + 4 | 0;
       $125 = HEAP32[$__end__i_i_i_i_i_i_i_i_i107 >> 2] | 0;
       if (($122 | 0) == ($125 | 0)) {
        $_pre3_i_i_i116 = $incdec_ptr_i_i_i_i_i_i101;
       } else {
        HEAP32[$__end__i_i_i_i_i_i_i_i_i107 >> 2] = $125 + ((($125 - 16 + (-$123 | 0) | 0) >>> 4 ^ -1) << 4);
        $_pre3_i_i_i116 = HEAP32[$__end__i_i_i_i_i_i98 >> 2] | 0;
       }
       __ZdlPv($122);
       $124 = $_pre3_i_i_i116;
      }
      if (($119 | 0) == ($124 | 0)) {
       break;
      } else {
       $121 = $124;
      }
     }
     $130 = HEAP32[$__begin__i_i_i96 >> 2] | 0;
    }
    __ZdlPv($130);
   }
   $i43_0195 = $i43_0195 + 1 | 0;
  } while ($i43_0195 >>> 0 < (((HEAP32[$__end__i_i_i264 >> 2] | 0) - (HEAP32[$__begin__i_i_i263 >> 2] | 0) | 0) / 24 & -1) >>> 0);
 }
 __ZN10ClipperLib7ClipperD2Ev($clipper, 12040);
 __ZN10ClipperLib11ClipperBaseD2Ev($clipper + 76 | 0);
 $138 = HEAP32[$__begin__i_i_i263 >> 2] | 0;
 if (($138 | 0) != 0) {
  while (1) {
   $139 = HEAP32[$__end__i_i_i264 >> 2] | 0;
   if (($138 | 0) == ($139 | 0)) {
    break;
   }
   $incdec_ptr_i_i_i_i_i_i131 = $139 - 24 | 0;
   HEAP32[$__end__i_i_i264 >> 2] = $incdec_ptr_i_i_i_i_i_i131;
   __ZN10ClipperLib9ExPolygonD2Ev($incdec_ptr_i_i_i_i_i_i131);
  }
  __ZdlPv(HEAP32[$__begin__i_i_i263 >> 2] | 0);
 }
 $144 = HEAP32[$__begin__i_i_i >> 2] | 0;
 if (($144 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 $145 = HEAP32[$__end__i_i_i >> 2] | 0;
 if (($144 | 0) == ($145 | 0)) {
  $155 = $144;
 } else {
  $146 = $145;
  while (1) {
   $incdec_ptr_i_i_i_i_i_i138 = $146 - 12 | 0;
   HEAP32[$__end__i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i138;
   $147 = HEAP32[$incdec_ptr_i_i_i_i_i_i138 >> 2] | 0;
   $148 = $147;
   if (($147 | 0) == 0) {
    $149 = $incdec_ptr_i_i_i_i_i_i138;
   } else {
    $__end__i_i_i_i_i_i_i_i_i144 = $146 - 12 + 4 | 0;
    $150 = HEAP32[$__end__i_i_i_i_i_i_i_i_i144 >> 2] | 0;
    if (($147 | 0) != ($150 | 0)) {
     HEAP32[$__end__i_i_i_i_i_i_i_i_i144 >> 2] = $150 + ((($150 - 16 + (-$148 | 0) | 0) >>> 4 ^ -1) << 4);
    }
    __ZdlPv($147);
    $149 = HEAP32[$__end__i_i_i >> 2] | 0;
   }
   if (($144 | 0) == ($149 | 0)) {
    break;
   } else {
    $146 = $149;
   }
  }
  $155 = HEAP32[$__begin__i_i_i >> 2] | 0;
 }
 __ZdlPv($155);
 STACKTOP = __stackBase__;
 return;
}
function __ZN4AABB9calculateENSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEE($this, $polys) {
 $this = $this | 0;
 $polys = $polys | 0;
 var $ref_tmp_sroa_0_0__idx = 0, $ref_tmp_sroa_1_8__idx23 = 0, $ref_tmp2_sroa_0_0__idx = 0, $ref_tmp2_sroa_1_8__idx22 = 0, $__end__i = 0, $0 = 0, $__begin__i = 0, $1 = 0, $3$0 = 0, $3$1 = 0, $4$0 = 0, $4$1 = 0, $5$0 = 0, $5$1 = 0, $6$0 = 0, $6$1 = 0, $7 = 0, $8 = 0, $i_037 = 0, $10 = 0, $11$0 = 0, $11$1 = 0, $12$0 = 0, $12$1 = 0, $13 = 0, $14$0 = 0, $14$1 = 0, $15$0 = 0, $15$1 = 0, $16 = 0, $j_031 = 0, $X11 = 0, $17$0 = 0, $17$1 = 0, $18 = 0, $19$0 = 0, $19$1 = 0, $20 = 0, $Y21 = 0, $21$0 = 0, $21$1 = 0, $_pre40 = 0, $22 = 0, $23 = 0, $24$0 = 0, $24$1 = 0, $X34 = 0, $25$0 = 0, $25$1 = 0, $_pre42 = 0, $26 = 0, $27 = 0, $28$0 = 0, $28$1 = 0, $Y47 = 0, $29$0 = 0, $29$1 = 0, $_pre44 = 0, $30 = 0, $31 = 0, $32$0 = 0, $32$1 = 0, $inc = 0, $34$0 = 0, $34$1 = 0, $35$0 = 0, $35$1 = 0, $36$0 = 0, $36$1 = 0, $37$0 = 0, $37$1 = 0, $38 = 0, $39 = 0, $inc57 = 0;
 $ref_tmp_sroa_0_0__idx = $this | 0;
 HEAP32[$ref_tmp_sroa_0_0__idx >> 2] = -1;
 HEAP32[$ref_tmp_sroa_0_0__idx + 4 >> 2] = 2147483647;
 $ref_tmp_sroa_1_8__idx23 = $this + 8 | 0;
 HEAP32[$ref_tmp_sroa_1_8__idx23 >> 2] = -1;
 HEAP32[$ref_tmp_sroa_1_8__idx23 + 4 >> 2] = 2147483647;
 $ref_tmp2_sroa_0_0__idx = $this + 16 | 0;
 HEAP32[$ref_tmp2_sroa_0_0__idx >> 2] = 0;
 HEAP32[$ref_tmp2_sroa_0_0__idx + 4 >> 2] = -2147483648;
 $ref_tmp2_sroa_1_8__idx22 = $this + 24 | 0;
 HEAP32[$ref_tmp2_sroa_1_8__idx22 >> 2] = 0;
 HEAP32[$ref_tmp2_sroa_1_8__idx22 + 4 >> 2] = -2147483648;
 $__end__i = $polys + 4 | 0;
 $0 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i = $polys | 0;
 $1 = HEAP32[$__begin__i >> 2] | 0;
 if (($0 | 0) == ($1 | 0)) {
  return;
 } else {
  $i_037 = 0;
  $8 = $1;
  $7 = $0;
  $6$1 = 2147483647;
  $6$0 = -1;
  $5$1 = 2147483647;
  $5$0 = -1;
  $4$1 = -2147483648;
  $4$0 = 0;
  $3$1 = -2147483648;
  $3$0 = 0;
 }
 while (1) {
  $10 = HEAP32[$8 + ($i_037 * 12 & -1) >> 2] | 0;
  if ((HEAP32[$8 + ($i_037 * 12 & -1) + 4 >> 2] | 0) == ($10 | 0)) {
   $39 = $7;
   $38 = $8;
   $37$1 = $6$1;
   $37$0 = $6$0;
   $36$1 = $5$1;
   $36$0 = $5$0;
   $35$1 = $4$1;
   $35$0 = $4$0;
   $34$1 = $3$1;
   $34$0 = $3$0;
  } else {
   $j_031 = 0;
   $16 = $10;
   $15$1 = $6$1;
   $15$0 = $6$0;
   $14$1 = $5$1;
   $14$0 = $5$0;
   $13 = $8;
   $12$1 = $4$1;
   $12$0 = $4$0;
   $11$1 = $3$1;
   $11$0 = $3$0;
   while (1) {
    $X11 = $16 + ($j_031 << 4) | 0;
    $17$0 = HEAP32[$X11 >> 2] | 0;
    $17$1 = HEAP32[$X11 + 4 >> 2] | 0;
    if (($15$1 | 0) > ($17$1 | 0) | ($15$1 | 0) == ($17$1 | 0) & $15$0 >>> 0 > $17$0 >>> 0) {
     HEAP32[$ref_tmp_sroa_0_0__idx >> 2] = $17$0;
     HEAP32[$ref_tmp_sroa_0_0__idx + 4 >> 2] = $17$1;
     $19$1 = $17$1;
     $19$0 = $17$0;
     $18 = HEAP32[$__begin__i >> 2] | 0;
    } else {
     $19$1 = $15$1;
     $19$0 = $15$0;
     $18 = $13;
    }
    $20 = HEAP32[$18 + ($i_037 * 12 & -1) >> 2] | 0;
    $Y21 = $20 + ($j_031 << 4) + 8 | 0;
    $21$0 = HEAP32[$Y21 >> 2] | 0;
    $21$1 = HEAP32[$Y21 + 4 >> 2] | 0;
    if (($14$1 | 0) > ($21$1 | 0) | ($14$1 | 0) == ($21$1 | 0) & $14$0 >>> 0 > $21$0 >>> 0) {
     HEAP32[$ref_tmp_sroa_1_8__idx23 >> 2] = $21$0;
     HEAP32[$ref_tmp_sroa_1_8__idx23 + 4 >> 2] = $21$1;
     $_pre40 = HEAP32[$__begin__i >> 2] | 0;
     $24$1 = $21$1;
     $24$0 = $21$0;
     $23 = $_pre40;
     $22 = HEAP32[$_pre40 + ($i_037 * 12 & -1) >> 2] | 0;
    } else {
     $24$1 = $14$1;
     $24$0 = $14$0;
     $23 = $18;
     $22 = $20;
    }
    $X34 = $22 + ($j_031 << 4) | 0;
    $25$0 = HEAP32[$X34 >> 2] | 0;
    $25$1 = HEAP32[$X34 + 4 >> 2] | 0;
    if (($12$1 | 0) < ($25$1 | 0) | ($12$1 | 0) == ($25$1 | 0) & $12$0 >>> 0 < $25$0 >>> 0) {
     HEAP32[$ref_tmp2_sroa_0_0__idx >> 2] = $25$0;
     HEAP32[$ref_tmp2_sroa_0_0__idx + 4 >> 2] = $25$1;
     $_pre42 = HEAP32[$__begin__i >> 2] | 0;
     $28$1 = $25$1;
     $28$0 = $25$0;
     $27 = $_pre42;
     $26 = HEAP32[$_pre42 + ($i_037 * 12 & -1) >> 2] | 0;
    } else {
     $28$1 = $12$1;
     $28$0 = $12$0;
     $27 = $23;
     $26 = $22;
    }
    $Y47 = $26 + ($j_031 << 4) + 8 | 0;
    $29$0 = HEAP32[$Y47 >> 2] | 0;
    $29$1 = HEAP32[$Y47 + 4 >> 2] | 0;
    if (($11$1 | 0) < ($29$1 | 0) | ($11$1 | 0) == ($29$1 | 0) & $11$0 >>> 0 < $29$0 >>> 0) {
     HEAP32[$ref_tmp2_sroa_1_8__idx22 >> 2] = $29$0;
     HEAP32[$ref_tmp2_sroa_1_8__idx22 + 4 >> 2] = $29$1;
     $_pre44 = HEAP32[$__begin__i >> 2] | 0;
     $32$1 = $29$1;
     $32$0 = $29$0;
     $31 = $_pre44;
     $30 = HEAP32[$_pre44 + ($i_037 * 12 & -1) >> 2] | 0;
    } else {
     $32$1 = $11$1;
     $32$0 = $11$0;
     $31 = $27;
     $30 = $26;
    }
    $inc = $j_031 + 1 | 0;
    if ($inc >>> 0 < (HEAP32[$31 + ($i_037 * 12 & -1) + 4 >> 2] | 0) - $30 >> 4 >>> 0) {
     $j_031 = $inc;
     $16 = $30;
     $15$1 = $19$1;
     $15$0 = $19$0;
     $14$1 = $24$1;
     $14$0 = $24$0;
     $13 = $31;
     $12$1 = $28$1;
     $12$0 = $28$0;
     $11$1 = $32$1;
     $11$0 = $32$0;
    } else {
     break;
    }
   }
   $39 = HEAP32[$__end__i >> 2] | 0;
   $38 = $31;
   $37$1 = $19$1;
   $37$0 = $19$0;
   $36$1 = $24$1;
   $36$0 = $24$0;
   $35$1 = $28$1;
   $35$0 = $28$0;
   $34$1 = $32$1;
   $34$0 = $32$0;
  }
  $inc57 = $i_037 + 1 | 0;
  if ($inc57 >>> 0 < (($39 - $38 | 0) / 12 & -1) >>> 0) {
   $i_037 = $inc57;
   $8 = $38;
   $7 = $39;
   $6$1 = $37$1;
   $6$0 = $37$0;
   $5$1 = $36$1;
   $5$0 = $36$0;
   $4$1 = $35$1;
   $4$0 = $35$0;
   $3$1 = $34$1;
   $3$0 = $34$0;
  } else {
   break;
  }
 }
 return;
}
function __Z14generateInsetsP14SliceLayerPartii($part, $offset, $insetCount) {
 $part = $part | 0;
 $offset = $offset | 0;
 $insetCount = $insetCount | 0;
 var $ref_tmp = 0, $outline = 0, $sub = 0, $insets3 = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $__first__i_i_i_i_i_i = 0, $__end__i41 = 0, $__first__i_i_i_i46 = 0, $__begin__i = 0, $div = 0, $__end__i = 0, $0 = 0, $2 = 0, $i_0 = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $incdec_ptr_i_i_i_i_i_i = 0, $9 = 0, $10 = 0, $11 = 0, $__end__i_i_i_i_i_i_i_i_i = 0, $12 = 0, $_pre3_i_i_i = 0, $17 = 0, $arrayidx_i = 0, $21 = 0, $25 = 0, $add_ptr_i = 0, $26 = 0, $incdec_ptr_i_i_i_i = 0, $__begin__i_i_i21 = 0, $27 = 0, $28 = 0, $__end__i_i_i_i_i_i23 = 0, $29 = 0, $30 = 0, $incdec_ptr_i_i_i_i_i_i26 = 0, $31 = 0, $32 = 0, $33 = 0, $__end__i_i_i_i_i_i_i_i_i32 = 0, $34 = 0, $39 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ref_tmp = __stackBase__ | 0;
 $outline = $part + 32 | 0;
 $sub = -$offset | 0;
 __ZN10ClipperLib14OffsetPolygonsERKNSt3__16vectorINS1_INS_8IntPointENS0_9allocatorIS2_EEEENS3_IS5_EEEERS7_dNS_8JoinTypeEdb($outline, $part + 44 | 0, +($sub | 0), 0, 2.0, 0);
 if (($insetCount | 0) == 0) {
  $__end__i = $part + 60 | 0;
  $0 = HEAP32[$__end__i >> 2] | 0;
  if (($0 | 0) == (HEAP32[$part + 64 >> 2] | 0)) {
   __ZNSt3__16vectorINS0_INS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE21__push_back_slow_pathIKS7_EEvRT_($part + 56 | 0, $outline);
   STACKTOP = __stackBase__;
   return;
  }
  if (($0 | 0) == 0) {
   $2 = 0;
  } else {
   __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($0, $outline);
   $2 = HEAP32[$__end__i >> 2] | 0;
  }
  HEAP32[$__end__i >> 2] = $2 + 12;
  STACKTOP = __stackBase__;
  return;
 }
 $insets3 = $part + 56 | 0;
 $__begin__i_i_i = $ref_tmp | 0;
 $__end__i_i_i = $ref_tmp + 4 | 0;
 $__first__i_i_i_i_i_i = $ref_tmp + 8 | 0;
 $__end__i41 = $part + 60 | 0;
 $__first__i_i_i_i46 = $part + 64 | 0;
 $__begin__i = $insets3 | 0;
 $div = ($offset | 0) / 2 & -1;
 $i_0 = 0;
 while (1) {
  if (($i_0 | 0) >= ($insetCount | 0)) {
   label = 410;
   break;
  }
  HEAP32[$__begin__i_i_i >> 2] = 0;
  HEAP32[$__end__i_i_i >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i >> 2] = 0;
  $3 = HEAP32[$__end__i41 >> 2] | 0;
  if (($3 | 0) == (HEAP32[$__first__i_i_i_i46 >> 2] | 0)) {
   __ZNSt3__16vectorINS0_INS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE21__push_back_slow_pathIKS7_EEvRT_($insets3, $ref_tmp);
  } else {
   if (($3 | 0) == 0) {
    $5 = 0;
   } else {
    __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($3, $ref_tmp);
    $5 = HEAP32[$__end__i41 >> 2] | 0;
   }
   HEAP32[$__end__i41 >> 2] = $5 + 12;
  }
  $6 = HEAP32[$__begin__i_i_i >> 2] | 0;
  if (($6 | 0) != 0) {
   $7 = HEAP32[$__end__i_i_i >> 2] | 0;
   if (($6 | 0) == ($7 | 0)) {
    $17 = $6;
   } else {
    $8 = $7;
    while (1) {
     $incdec_ptr_i_i_i_i_i_i = $8 - 12 | 0;
     HEAP32[$__end__i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i;
     $9 = HEAP32[$incdec_ptr_i_i_i_i_i_i >> 2] | 0;
     $10 = $9;
     if (($9 | 0) == 0) {
      $11 = $incdec_ptr_i_i_i_i_i_i;
     } else {
      $__end__i_i_i_i_i_i_i_i_i = $8 - 12 + 4 | 0;
      $12 = HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] | 0;
      if (($9 | 0) == ($12 | 0)) {
       $_pre3_i_i_i = $incdec_ptr_i_i_i_i_i_i;
      } else {
       HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] = $12 + ((($12 - 16 + (-$10 | 0) | 0) >>> 4 ^ -1) << 4);
       $_pre3_i_i_i = HEAP32[$__end__i_i_i >> 2] | 0;
      }
      __ZdlPv($9);
      $11 = $_pre3_i_i_i;
     }
     if (($6 | 0) == ($11 | 0)) {
      break;
     } else {
      $8 = $11;
     }
    }
    $17 = HEAP32[$__begin__i_i_i >> 2] | 0;
   }
   __ZdlPv($17);
  }
  $arrayidx_i = (HEAP32[$__begin__i >> 2] | 0) + ($i_0 * 12 & -1) | 0;
  __ZN10ClipperLib14OffsetPolygonsERKNSt3__16vectorINS1_INS_8IntPointENS0_9allocatorIS2_EEEENS3_IS5_EEEERS7_dNS_8JoinTypeEdb($outline, $arrayidx_i, +((Math_imul($i_0, $sub) | 0) - $div | 0), 0, 2.0, 0);
  __Z16optimizePolygonsRNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEE((HEAP32[$__begin__i >> 2] | 0) + ($i_0 * 12 & -1) | 0);
  $21 = HEAP32[$__begin__i >> 2] | 0;
  if ((HEAP32[$21 + ($i_0 * 12 & -1) + 4 >> 2] | 0) == (HEAP32[$21 + ($i_0 * 12 & -1) >> 2] | 0)) {
   break;
  } else {
   $i_0 = $i_0 + 1 | 0;
  }
 }
 if ((label | 0) == 410) {
  STACKTOP = __stackBase__;
  return;
 }
 $25 = HEAP32[$__end__i41 >> 2] | 0;
 $add_ptr_i = $25 - 12 | 0;
 $26 = $25;
 while (1) {
  $incdec_ptr_i_i_i_i = $26 - 12 | 0;
  HEAP32[$__end__i41 >> 2] = $incdec_ptr_i_i_i_i;
  $__begin__i_i_i21 = $incdec_ptr_i_i_i_i | 0;
  $27 = HEAP32[$__begin__i_i_i21 >> 2] | 0;
  if (($27 | 0) == 0) {
   $28 = $incdec_ptr_i_i_i_i;
  } else {
   $__end__i_i_i_i_i_i23 = $26 - 12 + 4 | 0;
   $29 = HEAP32[$__end__i_i_i_i_i_i23 >> 2] | 0;
   if (($27 | 0) == ($29 | 0)) {
    $39 = $27;
   } else {
    $30 = $29;
    while (1) {
     $incdec_ptr_i_i_i_i_i_i26 = $30 - 12 | 0;
     HEAP32[$__end__i_i_i_i_i_i23 >> 2] = $incdec_ptr_i_i_i_i_i_i26;
     $31 = HEAP32[$incdec_ptr_i_i_i_i_i_i26 >> 2] | 0;
     $32 = $31;
     if (($31 | 0) == 0) {
      $33 = $incdec_ptr_i_i_i_i_i_i26;
     } else {
      $__end__i_i_i_i_i_i_i_i_i32 = $30 - 12 + 4 | 0;
      $34 = HEAP32[$__end__i_i_i_i_i_i_i_i_i32 >> 2] | 0;
      if (($31 | 0) != ($34 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i_i_i32 >> 2] = $34 + ((($34 - 16 + (-$32 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($31);
      $33 = HEAP32[$__end__i_i_i_i_i_i23 >> 2] | 0;
     }
     if (($27 | 0) == ($33 | 0)) {
      break;
     } else {
      $30 = $33;
     }
    }
    $39 = HEAP32[$__begin__i_i_i21 >> 2] | 0;
   }
   __ZdlPv($39);
   $28 = HEAP32[$__end__i41 >> 2] | 0;
  }
  if (($add_ptr_i | 0) == ($28 | 0)) {
   break;
  } else {
   $26 = $28;
  }
 }
 STACKTOP = __stackBase__;
 return;
}
function __Z16createLayerPartsR18SliceVolumeStorageP6Sliceri($storage, $slicer, $unionAllType) {
 $storage = $storage | 0;
 $slicer = $slicer | 0;
 $unionAllType = $unionAllType | 0;
 var $ref_tmp = 0, $__end__i = 0, $__begin__i = 0, $__begin__i_i_i_i_i = 0, $__end__i_i_i_i_i = 0, $__first__i_i_i_i_i_i_i_i = 0, $__end__i10 = 0, $__first__i_i_i_i = 0, $layers1 = 0, $__begin__i14 = 0, $parts2_i_i = 0, $layerNr_026 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $incdec_ptr_i_i_i_i_i_i_i_i14 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ref_tmp = __stackBase__ | 0;
 $__end__i = $slicer + 4 | 0;
 $__begin__i = $slicer | 0;
 if ((HEAP32[$__end__i >> 2] | 0) == (HEAP32[$__begin__i >> 2] | 0)) {
  STACKTOP = __stackBase__;
  return;
 }
 $__begin__i_i_i_i_i = $ref_tmp | 0;
 $__end__i_i_i_i_i = $ref_tmp + 4 | 0;
 $__first__i_i_i_i_i_i_i_i = $ref_tmp + 8 | 0;
 $__end__i10 = $storage + 4 | 0;
 $__first__i_i_i_i = $storage + 8 | 0;
 $layers1 = $storage | 0;
 $__begin__i14 = $storage | 0;
 $parts2_i_i = $ref_tmp | 0;
 $layerNr_026 = 0;
 do {
  $3 = $ref_tmp;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$__begin__i_i_i_i_i >> 2] = 0;
  HEAP32[$__end__i_i_i_i_i >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i_i_i >> 2] = 0;
  $4 = HEAP32[$__end__i10 >> 2] | 0;
  if (($4 | 0) == (HEAP32[$__first__i_i_i_i >> 2] | 0)) {
   __ZNSt3__16vectorI10SliceLayerNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($layers1, $ref_tmp);
  } else {
   if (($4 | 0) == 0) {
    $6 = 0;
   } else {
    __ZNSt3__16vectorI14SliceLayerPartNS_9allocatorIS1_EEEC2ERKS4_($4 | 0, $parts2_i_i);
    $6 = HEAP32[$__end__i10 >> 2] | 0;
   }
   HEAP32[$__end__i10 >> 2] = $6 + 12;
  }
  $7 = HEAP32[$__begin__i_i_i_i_i >> 2] | 0;
  if (($7 | 0) != 0) {
   $8 = HEAP32[$__end__i_i_i_i_i >> 2] | 0;
   while (1) {
    if (($7 | 0) == ($8 | 0)) {
     break;
    }
    $incdec_ptr_i_i_i_i_i_i_i_i14 = $8 - 96 | 0;
    HEAP32[$__end__i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i_i_i14;
    __ZN14SliceLayerPartD2Ev($incdec_ptr_i_i_i_i_i_i_i_i14);
    $8 = $incdec_ptr_i_i_i_i_i_i_i_i14;
   }
   __ZdlPv(HEAP32[$__begin__i_i_i_i_i >> 2] | 0);
  }
  __Z20createLayerWithPartsR10SliceLayerP11SlicerLayeri((HEAP32[$__begin__i14 >> 2] | 0) + ($layerNr_026 * 12 & -1) | 0, (HEAP32[$__begin__i >> 2] | 0) + ($layerNr_026 * 48 & -1) | 0, $unionAllType);
  $layerNr_026 = $layerNr_026 + 1 | 0;
 } while ($layerNr_026 >>> 0 < (((HEAP32[$__end__i >> 2] | 0) - (HEAP32[$__begin__i >> 2] | 0) | 0) / 48 & -1) >>> 0);
 STACKTOP = __stackBase__;
 return;
}
function __Z14generateInsetsP10SliceLayerii($layer, $offset, $insetCount) {
 $layer = $layer | 0;
 $offset = $offset | 0;
 $insetCount = $insetCount | 0;
 var $__end__i = 0, $__begin__i = 0, $1 = 0, $4 = 0, $partNr_032 = 0, $5 = 0, $7 = 0, $8 = 0, $partNr3_026 = 0, $9 = 0, $arrayidx_i40 = 0, $add_ptr_i = 0, $15 = 0, $__first_addr_i_i_i_020 = 0, $__result_addr_i_i_i_019 = 0, $16 = 0, $17 = 0, $incdec_ptr_i_i_i = 0, $__result_addr_i_i_i_0_lcssa = 0, $29 = 0, $incdec_ptr_i_i_i_i = 0, $32 = 0, $33 = 0, $partNr3_1 = 0, $inc17 = 0;
 $__end__i = $layer + 4 | 0;
 $__begin__i = $layer | 0;
 $1 = HEAP32[$__begin__i >> 2] | 0;
 if ((HEAP32[$__end__i >> 2] | 0) == ($1 | 0)) {
  return;
 } else {
  $partNr_032 = 0;
  $4 = $1;
 }
 do {
  __Z14generateInsetsP14SliceLayerPartii($4 + ($partNr_032 * 96 & -1) | 0, $offset, $insetCount);
  $partNr_032 = $partNr_032 + 1 | 0;
  $5 = HEAP32[$__end__i >> 2] | 0;
  $4 = HEAP32[$__begin__i >> 2] | 0;
 } while ($partNr_032 >>> 0 < (($5 - $4 | 0) / 96 & -1) >>> 0);
 if (($5 | 0) == ($4 | 0)) {
  return;
 } else {
  $partNr3_026 = 0;
  $8 = $5;
  $7 = $4;
 }
 while (1) {
  $9 = $7;
  if ((HEAP32[$7 + ($partNr3_026 * 96 & -1) + 60 >> 2] | 0) == (HEAP32[$7 + ($partNr3_026 * 96 & -1) + 56 >> 2] | 0)) {
   $arrayidx_i40 = $7 + ($partNr3_026 * 96 & -1) | 0;
   $add_ptr_i = $7 + (($partNr3_026 + 1 | 0) * 96 & -1) | 0;
   if (($add_ptr_i | 0) == ($8 | 0)) {
    $__result_addr_i_i_i_0_lcssa = $arrayidx_i40;
   } else {
    $15 = $partNr3_026 + ((($8 + ((-2 - $partNr3_026 | 0) * 96 & -1) + (-$9 | 0) | 0) >>> 0) / 96 >>> 0) | 0;
    $__result_addr_i_i_i_019 = $arrayidx_i40;
    $__first_addr_i_i_i_020 = $add_ptr_i;
    while (1) {
     $16 = $__result_addr_i_i_i_019;
     $17 = $__first_addr_i_i_i_020;
     HEAP32[$16 >> 2] = HEAP32[$17 >> 2];
     HEAP32[$16 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
     HEAP32[$16 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
     HEAP32[$16 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
     HEAP32[$16 + 16 >> 2] = HEAP32[$17 + 16 >> 2];
     HEAP32[$16 + 20 >> 2] = HEAP32[$17 + 20 >> 2];
     HEAP32[$16 + 24 >> 2] = HEAP32[$17 + 24 >> 2];
     HEAP32[$16 + 28 >> 2] = HEAP32[$17 + 28 >> 2];
     __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE6assignIPS5_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_($__result_addr_i_i_i_019 + 32 | 0, HEAP32[$__first_addr_i_i_i_020 + 32 >> 2] | 0, HEAP32[$__first_addr_i_i_i_020 + 36 >> 2] | 0);
     __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE6assignIPS5_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_($__result_addr_i_i_i_019 + 44 | 0, HEAP32[$__first_addr_i_i_i_020 + 44 >> 2] | 0, HEAP32[$__first_addr_i_i_i_020 + 48 >> 2] | 0);
     __ZNSt3__16vectorINS0_INS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE6assignIPS7_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_($__result_addr_i_i_i_019 + 56 | 0, HEAP32[$__first_addr_i_i_i_020 + 56 >> 2] | 0, HEAP32[$__first_addr_i_i_i_020 + 60 >> 2] | 0);
     __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE6assignIPS5_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_($__result_addr_i_i_i_019 + 68 | 0, HEAP32[$__first_addr_i_i_i_020 + 68 >> 2] | 0, HEAP32[$__first_addr_i_i_i_020 + 72 >> 2] | 0);
     __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE6assignIPS5_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_($__result_addr_i_i_i_019 + 80 | 0, HEAP32[$__first_addr_i_i_i_020 + 80 >> 2] | 0, HEAP32[$__first_addr_i_i_i_020 + 84 >> 2] | 0);
     HEAP32[$__result_addr_i_i_i_019 + 92 >> 2] = HEAP32[$__first_addr_i_i_i_020 + 92 >> 2];
     $incdec_ptr_i_i_i = $__first_addr_i_i_i_020 + 96 | 0;
     if (($incdec_ptr_i_i_i | 0) == ($8 | 0)) {
      break;
     } else {
      $__result_addr_i_i_i_019 = $__result_addr_i_i_i_019 + 96 | 0;
      $__first_addr_i_i_i_020 = $incdec_ptr_i_i_i;
     }
    }
    $__result_addr_i_i_i_0_lcssa = $7 + (($15 + 1 | 0) * 96 & -1) | 0;
   }
   while (1) {
    $29 = HEAP32[$__end__i >> 2] | 0;
    if (($__result_addr_i_i_i_0_lcssa | 0) == ($29 | 0)) {
     break;
    }
    $incdec_ptr_i_i_i_i = $29 - 96 | 0;
    HEAP32[$__end__i >> 2] = $incdec_ptr_i_i_i_i;
    __ZN14SliceLayerPartD2Ev($incdec_ptr_i_i_i_i);
   }
   $partNr3_1 = $partNr3_026 - 1 | 0;
   $33 = $__result_addr_i_i_i_0_lcssa;
   $32 = HEAP32[$__begin__i >> 2] | 0;
  } else {
   $partNr3_1 = $partNr3_026;
   $33 = $8;
   $32 = $7;
  }
  $inc17 = $partNr3_1 + 1 | 0;
  if ($inc17 >>> 0 < (($33 - $32 | 0) / 96 & -1) >>> 0) {
   $partNr3_026 = $inc17;
   $8 = $33;
   $7 = $32;
  } else {
   break;
  }
 }
 return;
}
function __Z13generateSkinsiR18SliceVolumeStorageiiii($layerNr, $storage, $extrusionWidth, $downSkinCount, $upSkinCount, $infillOverlap) {
 $layerNr = $layerNr | 0;
 $storage = $storage | 0;
 $extrusionWidth = $extrusionWidth | 0;
 $downSkinCount = $downSkinCount | 0;
 $upSkinCount = $upSkinCount | 0;
 $infillOverlap = $infillOverlap | 0;
 var $temp = 0, $downskinClipper = 0, $upskinClipper = 0, $thinWallClipper = 0, $downSkin = 0, $upSkin = 0, $skinCombineClipper = 0, $__begin__i = 0, $0 = 0, $__end__i = 0, $__begin__i231 = 0, $2 = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $__first__i_i_i_i_i_i = 0, $div = 0, $conv = 0.0, $4 = 0, $__begin__i_i_i_i_i = 0, $__end__i_i_i_i_i = 0, $__first__i_i_i_i_i_i_i_i = 0, $m_MinimaList_i_i = 0, $m_CurrentLM_i_i = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $m_ReverseOutput_i = 0, $9 = 0, $__begin__i_i_i_i_i59 = 0, $__end__i_i_i_i_i60 = 0, $__first__i_i_i_i_i_i_i_i61 = 0, $m_MinimaList_i_i62 = 0, $m_CurrentLM_i_i63 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $m_ReverseOutput_i66 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $__begin__i_i_i_i_i85 = 0, $__end__i_i_i_i_i86 = 0, $__first__i_i_i_i_i_i_i_i87 = 0, $m_MinimaList_i_i88 = 0, $m_CurrentLM_i_i89 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $m_ReverseOutput_i92 = 0, $conv33 = 0.0, $23 = 0, $24 = 0, $conv46 = 0.0, $m_ExecuteLocked_i = 0, $m_SubjFillType_i = 0, $m_ClipFillType_i = 0, $m_ClipType_i = 0, $25 = 0, $26 = 0, $sub70 = 0, $cmp71 = 0, $add = 0, $__end__i433 = 0, $__begin__i_i_i374 = 0, $__end__i_i_i375 = 0, $__first__i_i_i_i_i_i381 = 0, $__begin__i_i_i349 = 0, $__end__i_i_i350 = 0, $__first__i_i_i_i_i_i356 = 0, $m_ExecuteLocked_i234 = 0, $m_SubjFillType_i256 = 0, $m_ClipFillType_i257 = 0, $m_ClipType_i258 = 0, $27 = 0, $m_ExecuteLocked_i269 = 0, $m_SubjFillType_i291 = 0, $m_ClipFillType_i292 = 0, $m_ClipType_i293 = 0, $28 = 0, $29 = 0, $__begin__i_i_i_i_i304 = 0, $__end__i_i_i_i_i305 = 0, $__first__i_i_i_i_i_i_i_i306 = 0, $m_MinimaList_i_i307 = 0, $m_CurrentLM_i_i308 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $m_ReverseOutput_i311 = 0, $34 = 0, $35 = 0, $m_ExecuteLocked_i346 = 0, $m_SubjFillType_i369 = 0, $m_ClipFillType_i370 = 0, $m_ClipType_i371 = 0, $36 = 0, $37 = 0, $div182 = 0.0, $mul187 = 0.0, $38 = 0, $39 = 0, $40 = 0, $partNr_0752 = 0, $arrayidx_i236 = 0, $__end__i241 = 0, $__begin__i242 = 0, $42 = 0, $add_ptr = 0, $44 = 0, $46 = 0, $i_011_i = 0, $47 = 0, $50 = 0, $52 = 0, $i_011_i70 = 0, $59 = 0, $61 = 0, $63 = 0, $i_011_i95 = 0, $68 = 0, $69 = 0, $70 = 0, $72 = 0, $i_011_i112 = 0, $inc_i116 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $80 = 0, $incdec_ptr_i_i_i_i_i = 0, $81 = 0, $82 = 0, $83 = 0, $__end__i_i_i_i_i_i_i_i = 0, $84 = 0, $90 = 0, $91 = 0, $93 = 0, $95 = 0, $i_011_i133 = 0, $96 = 0, $99 = 0, $101 = 0, $i_011_i150 = 0, $118 = 0, $__end__i407 = 0, $119 = 0, $__begin__i408 = 0, $120 = 0, $X_i = 0, $X4_i = 0, $Y_i = 0, $Y17_i = 0, $122 = 0, $123 = 0, $partNr2_0574 = 0, $124$1 = 0, $X2_i = 0, $125$1 = 0, $126$1 = 0, $X6_i = 0, $127$1 = 0, $128$1 = 0, $Y12_i = 0, $129$1 = 0, $130$1 = 0, $Y19_i = 0, $131$1 = 0, $133 = 0, $135 = 0, $sub102 = 0, $__end__i_i183 = 0, $__begin__i_i184 = 0, $137 = 0, $139 = 0, $i_011_i185 = 0, $142 = 0, $143 = 0, $inc = 0, $145 = 0, $__end__i420 = 0, $146 = 0, $__begin__i421 = 0, $147 = 0, $X_i200 = 0, $X4_i203 = 0, $Y_i207 = 0, $Y17_i211 = 0, $149 = 0, $150 = 0, $partNr2118_0583 = 0, $151$1 = 0, $X2_i201 = 0, $152$1 = 0, $153$1 = 0, $X6_i204 = 0, $154$1 = 0, $155$1 = 0, $Y12_i208 = 0, $156$1 = 0, $157$1 = 0, $Y19_i212 = 0, $158$1 = 0, $160 = 0, $162 = 0, $sub145 = 0, $__end__i_i217 = 0, $__begin__i_i218 = 0, $164 = 0, $166 = 0, $i_011_i219 = 0, $169 = 0, $170 = 0, $inc152 = 0, $176 = 0, $177 = 0, $179 = 0, $incdec_ptr_i_i_i_i_i274 = 0, $180 = 0, $181 = 0, $182 = 0, $__end__i_i_i_i_i_i_i_i280 = 0, $183 = 0, $add_ptr167 = 0, $190 = 0, $192 = 0, $i_011_i314 = 0, $vtable171 = 0, $196 = 0, $198 = 0, $200 = 0, $i_011_i331 = 0, $skinOutline = 0, $__end__i_i_i348 = 0, $205 = 0, $206 = 0, $208 = 0, $incdec_ptr_i_i_i_i_i352 = 0, $209 = 0, $210 = 0, $211 = 0, $__end__i_i_i_i_i_i_i_i358 = 0, $212 = 0, $__end__i326 = 0, $__begin__i327 = 0, $221 = 0, $223 = 0, $i_0604 = 0, $224 = 0, $add_ptr_i_i = 0, $add_ptr_i = 0, $225 = 0, $__first_addr_i_i_i_0594 = 0, $__result_addr_i_i_i_0593 = 0, $228 = 0, $__result_addr_i_i_i_0_lcssa = 0, $229 = 0, $incdec_ptr_i_i_i_i = 0, $230 = 0, $231 = 0, $232 = 0, $__end__i_i_i_i_i_i391 = 0, $233 = 0, $238 = 0, $243 = 0, $i_1 = 0, $245 = 0, $246 = 0, $247 = 0, $incdec_ptr_i_i_i_i_i_i407 = 0, $248 = 0, $249 = 0, $250 = 0, $__end__i_i_i_i_i_i_i_i_i413 = 0, $251 = 0, $256 = 0, $258 = 0, $259 = 0, $260 = 0, $incdec_ptr_i_i_i_i_i_i433 = 0, $261 = 0, $262 = 0, $263 = 0, $__end__i_i_i_i_i_i_i_i_i439 = 0, $264 = 0, $269 = 0, $275 = 0, $276 = 0, $277 = 0, $incdec_ptr_i_i_i_i_i_i473 = 0, $278 = 0, $279 = 0, $280 = 0, $__end__i_i_i_i_i_i_i_i_i479 = 0, $281 = 0, $286 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 464 | 0;
 $temp = __stackBase__ | 0;
 $downskinClipper = __stackBase__ + 16 | 0;
 $upskinClipper = __stackBase__ + 120 | 0;
 $thinWallClipper = __stackBase__ + 224 | 0;
 $downSkin = __stackBase__ + 328 | 0;
 $upSkin = __stackBase__ + 344 | 0;
 $skinCombineClipper = __stackBase__ + 360 | 0;
 $__begin__i = $storage | 0;
 $0 = HEAP32[$__begin__i >> 2] | 0;
 $__end__i = $0 + ($layerNr * 12 & -1) + 4 | 0;
 $__begin__i231 = $0 + ($layerNr * 12 & -1) | 0;
 $2 = HEAP32[$__begin__i231 >> 2] | 0;
 if ((HEAP32[$__end__i >> 2] | 0) == ($2 | 0)) {
  STACKTOP = __stackBase__;
  return;
 }
 $__begin__i_i_i = $temp | 0;
 $__end__i_i_i = $temp + 4 | 0;
 $__first__i_i_i_i_i_i = $temp + 8 | 0;
 $div = ($extrusionWidth | 0) / -2 & -1;
 $conv = +($div | 0);
 $4 = $downskinClipper + 76 | 0;
 $__begin__i_i_i_i_i = $downskinClipper + 92 | 0;
 $__end__i_i_i_i_i = $downskinClipper + 96 | 0;
 $__first__i_i_i_i_i_i_i_i = $downskinClipper + 100 | 0;
 $m_MinimaList_i_i = $downskinClipper + 84 | 0;
 $m_CurrentLM_i_i = $downskinClipper + 80 | 0;
 $5 = $downskinClipper | 0;
 $6 = $downskinClipper + 88 | 0;
 $7 = $downskinClipper + 4 | 0;
 $8 = $downskinClipper + 44 | 0;
 $m_ReverseOutput_i = $downskinClipper + 72 | 0;
 $9 = $upskinClipper + 76 | 0;
 $__begin__i_i_i_i_i59 = $upskinClipper + 92 | 0;
 $__end__i_i_i_i_i60 = $upskinClipper + 96 | 0;
 $__first__i_i_i_i_i_i_i_i61 = $upskinClipper + 100 | 0;
 $m_MinimaList_i_i62 = $upskinClipper + 84 | 0;
 $m_CurrentLM_i_i63 = $upskinClipper + 80 | 0;
 $10 = $upskinClipper | 0;
 $11 = $upskinClipper + 88 | 0;
 $12 = $upskinClipper + 4 | 0;
 $13 = $upskinClipper + 44 | 0;
 $m_ReverseOutput_i66 = $upskinClipper + 72 | 0;
 $14 = $downskinClipper;
 $15 = $downskinClipper;
 $16 = $upskinClipper;
 $17 = $upskinClipper;
 $18 = $thinWallClipper + 76 | 0;
 $__begin__i_i_i_i_i85 = $thinWallClipper + 92 | 0;
 $__end__i_i_i_i_i86 = $thinWallClipper + 96 | 0;
 $__first__i_i_i_i_i_i_i_i87 = $thinWallClipper + 100 | 0;
 $m_MinimaList_i_i88 = $thinWallClipper + 84 | 0;
 $m_CurrentLM_i_i89 = $thinWallClipper + 80 | 0;
 $19 = $thinWallClipper | 0;
 $20 = $thinWallClipper + 88 | 0;
 $21 = $thinWallClipper + 4 | 0;
 $22 = $thinWallClipper + 44 | 0;
 $m_ReverseOutput_i92 = $thinWallClipper + 72 | 0;
 $conv33 = +($div - ((Math_imul($infillOverlap, $extrusionWidth) | 0) / 100 & -1) | 0);
 $23 = $thinWallClipper;
 $24 = $thinWallClipper;
 $conv46 = +(($extrusionWidth * 6 & -1 | 0) / 10 & -1 | 0);
 $m_ExecuteLocked_i = $thinWallClipper + 60 | 0;
 $m_SubjFillType_i = $thinWallClipper + 68 | 0;
 $m_ClipFillType_i = $thinWallClipper + 64 | 0;
 $m_ClipType_i = $thinWallClipper + 40 | 0;
 $25 = $thinWallClipper;
 $26 = $thinWallClipper + 76 | 0;
 $sub70 = $layerNr - $downSkinCount | 0;
 $cmp71 = ($sub70 | 0) > -1;
 $add = $upSkinCount + $layerNr | 0;
 $__end__i433 = $storage + 4 | 0;
 $__begin__i_i_i374 = $downSkin | 0;
 $__end__i_i_i375 = $downSkin + 4 | 0;
 $__first__i_i_i_i_i_i381 = $downSkin + 8 | 0;
 $__begin__i_i_i349 = $upSkin | 0;
 $__end__i_i_i350 = $upSkin + 4 | 0;
 $__first__i_i_i_i_i_i356 = $upSkin + 8 | 0;
 $m_ExecuteLocked_i234 = $downskinClipper + 60 | 0;
 $m_SubjFillType_i256 = $downskinClipper + 68 | 0;
 $m_ClipFillType_i257 = $downskinClipper + 64 | 0;
 $m_ClipType_i258 = $downskinClipper + 40 | 0;
 $27 = $downskinClipper;
 $m_ExecuteLocked_i269 = $upskinClipper + 60 | 0;
 $m_SubjFillType_i291 = $upskinClipper + 68 | 0;
 $m_ClipFillType_i292 = $upskinClipper + 64 | 0;
 $m_ClipType_i293 = $upskinClipper + 40 | 0;
 $28 = $upskinClipper;
 $29 = $skinCombineClipper + 76 | 0;
 $__begin__i_i_i_i_i304 = $skinCombineClipper + 92 | 0;
 $__end__i_i_i_i_i305 = $skinCombineClipper + 96 | 0;
 $__first__i_i_i_i_i_i_i_i306 = $skinCombineClipper + 100 | 0;
 $m_MinimaList_i_i307 = $skinCombineClipper + 84 | 0;
 $m_CurrentLM_i_i308 = $skinCombineClipper + 80 | 0;
 $30 = $skinCombineClipper | 0;
 $31 = $skinCombineClipper + 88 | 0;
 $32 = $skinCombineClipper + 4 | 0;
 $33 = $skinCombineClipper + 44 | 0;
 $m_ReverseOutput_i311 = $skinCombineClipper + 72 | 0;
 $34 = $skinCombineClipper;
 $35 = $skinCombineClipper;
 $m_ExecuteLocked_i346 = $skinCombineClipper + 60 | 0;
 $m_SubjFillType_i369 = $skinCombineClipper + 68 | 0;
 $m_ClipFillType_i370 = $skinCombineClipper + 64 | 0;
 $m_ClipType_i371 = $skinCombineClipper + 40 | 0;
 $36 = $skinCombineClipper;
 $37 = $skinCombineClipper + 76 | 0;
 $div182 = +($extrusionWidth | 0) / 1.0e3;
 $mul187 = $div182 * $div182 * 6.283185307179586 * .3;
 $38 = $upskinClipper + 76 | 0;
 $39 = $downskinClipper + 76 | 0;
 $partNr_0752 = 0;
 $40 = $2;
 do {
  $arrayidx_i236 = $40 + ($partNr_0752 * 96 & -1) | 0;
  HEAP32[$__begin__i_i_i >> 2] = 0;
  HEAP32[$__end__i_i_i >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i >> 2] = 0;
  $__end__i241 = $40 + ($partNr_0752 * 96 & -1) + 60 | 0;
  $__begin__i242 = $40 + ($partNr_0752 * 96 & -1) + 56 | 0;
  $42 = HEAP32[$__begin__i242 >> 2] | 0;
  __ZN10ClipperLib14OffsetPolygonsERKNSt3__16vectorINS1_INS_8IntPointENS0_9allocatorIS2_EEEENS3_IS5_EEEERS7_dNS_8JoinTypeEdb($42 + (((((HEAP32[$__end__i241 >> 2] | 0) - $42 | 0) / 12 & -1) - 1 | 0) * 12 & -1) | 0, $temp, $conv, 0, 2.0, 0);
  HEAP32[$__begin__i_i_i_i_i >> 2] = 0;
  HEAP32[$__end__i_i_i_i_i >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i_i_i >> 2] = 0;
  HEAP32[$m_MinimaList_i_i >> 2] = 0;
  HEAP32[$m_CurrentLM_i_i >> 2] = 0;
  HEAP32[$5 >> 2] = 11908;
  HEAP32[$4 >> 2] = 11948;
  _memset($7 | 0, 0, 36);
  _memset($8 | 0, 0, 17);
  HEAP8[$6] = 0;
  HEAP8[$m_ReverseOutput_i] = 0;
  HEAP32[$__begin__i_i_i_i_i59 >> 2] = 0;
  HEAP32[$__end__i_i_i_i_i60 >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i_i_i61 >> 2] = 0;
  HEAP32[$m_MinimaList_i_i62 >> 2] = 0;
  HEAP32[$m_CurrentLM_i_i63 >> 2] = 0;
  HEAP32[$10 >> 2] = 11908;
  HEAP32[$9 >> 2] = 11948;
  _memset($12 | 0, 0, 36);
  _memset($13 | 0, 0, 17);
  HEAP8[$11] = 0;
  HEAP8[$m_ReverseOutput_i66] = 0;
  $add_ptr = $downskinClipper + 76 | 0;
  $44 = HEAP32[$__begin__i_i_i >> 2] | 0;
  do {
   if ((HEAP32[$__end__i_i_i >> 2] | 0) != ($44 | 0)) {
    $i_011_i = 0;
    $46 = $44;
    do {
     __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($add_ptr, $46 + ($i_011_i * 12 & -1) | 0, 0) | 0;
     $i_011_i = $i_011_i + 1 | 0;
     $47 = HEAP32[$__end__i_i_i >> 2] | 0;
     $46 = HEAP32[$__begin__i_i_i >> 2] | 0;
    } while ($i_011_i >>> 0 < (($47 - $46 | 0) / 12 & -1) >>> 0);
    $50 = $17 + (HEAP32[(HEAP32[$16 >> 2] | 0) - 12 >> 2] | 0) | 0;
    if (($47 | 0) == ($46 | 0)) {
     break;
    } else {
     $i_011_i70 = 0;
     $52 = $46;
    }
    do {
     __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($50, $52 + ($i_011_i70 * 12 & -1) | 0, 0) | 0;
     $i_011_i70 = $i_011_i70 + 1 | 0;
     $52 = HEAP32[$__begin__i_i_i >> 2] | 0;
    } while ($i_011_i70 >>> 0 < (((HEAP32[$__end__i_i_i >> 2] | 0) - $52 | 0) / 12 & -1) >>> 0);
   }
  } while (0);
  if ((((HEAP32[$__end__i241 >> 2] | 0) - (HEAP32[$__begin__i242 >> 2] | 0) | 0) / 12 & -1) >>> 0 > 1) {
   HEAP32[$__begin__i_i_i_i_i85 >> 2] = 0;
   HEAP32[$__end__i_i_i_i_i86 >> 2] = 0;
   HEAP32[$__first__i_i_i_i_i_i_i_i87 >> 2] = 0;
   HEAP32[$m_MinimaList_i_i88 >> 2] = 0;
   HEAP32[$m_CurrentLM_i_i89 >> 2] = 0;
   HEAP32[$19 >> 2] = 11908;
   HEAP32[$18 >> 2] = 11948;
   _memset($21 | 0, 0, 36);
   _memset($22 | 0, 0, 17);
   HEAP8[$20] = 0;
   HEAP8[$m_ReverseOutput_i92] = 0;
   __ZN10ClipperLib14OffsetPolygonsERKNSt3__16vectorINS1_INS_8IntPointENS0_9allocatorIS2_EEEENS3_IS5_EEEERS7_dNS_8JoinTypeEdb(HEAP32[$__begin__i242 >> 2] | 0, $temp, $conv33, 0, 2.0, 0);
   $59 = $24 + (HEAP32[(HEAP32[$23 >> 2] | 0) - 12 >> 2] | 0) | 0;
   $61 = HEAP32[$__begin__i_i_i >> 2] | 0;
   if ((HEAP32[$__end__i_i_i >> 2] | 0) != ($61 | 0)) {
    $i_011_i95 = 0;
    $63 = $61;
    do {
     __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($59, $63 + ($i_011_i95 * 12 & -1) | 0, 0) | 0;
     $i_011_i95 = $i_011_i95 + 1 | 0;
     $63 = HEAP32[$__begin__i_i_i >> 2] | 0;
    } while ($i_011_i95 >>> 0 < (((HEAP32[$__end__i_i_i >> 2] | 0) - $63 | 0) / 12 & -1) >>> 0);
   }
   __ZN10ClipperLib14OffsetPolygonsERKNSt3__16vectorINS1_INS_8IntPointENS0_9allocatorIS2_EEEENS3_IS5_EEEERS7_dNS_8JoinTypeEdb((HEAP32[$__begin__i242 >> 2] | 0) + 12 | 0, $temp, $conv46, 0, 2.0, 0);
   $68 = $24 + (HEAP32[(HEAP32[$23 >> 2] | 0) - 12 >> 2] | 0) | 0;
   $69 = HEAP32[$__end__i_i_i >> 2] | 0;
   $70 = HEAP32[$__begin__i_i_i >> 2] | 0;
   if (($69 | 0) == ($70 | 0)) {
    $76 = $69;
    $75 = $69;
   } else {
    $i_011_i112 = 0;
    $72 = $70;
    while (1) {
     __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($68, $72 + ($i_011_i112 * 12 & -1) | 0, 1) | 0;
     $inc_i116 = $i_011_i112 + 1 | 0;
     $73 = HEAP32[$__end__i_i_i >> 2] | 0;
     $74 = HEAP32[$__begin__i_i_i >> 2] | 0;
     if ($inc_i116 >>> 0 < (($73 - $74 | 0) / 12 & -1) >>> 0) {
      $i_011_i112 = $inc_i116;
      $72 = $74;
     } else {
      $76 = $73;
      $75 = $74;
      break;
     }
    }
   }
   if ((HEAP8[$m_ExecuteLocked_i] & 1) == 0) {
    HEAP8[$m_ExecuteLocked_i] = 1;
    if (($75 | 0) != ($76 | 0)) {
     $80 = $76;
     while (1) {
      $incdec_ptr_i_i_i_i_i = $80 - 12 | 0;
      HEAP32[$__end__i_i_i >> 2] = $incdec_ptr_i_i_i_i_i;
      $81 = HEAP32[$incdec_ptr_i_i_i_i_i >> 2] | 0;
      $82 = $81;
      if (($81 | 0) == 0) {
       $83 = $incdec_ptr_i_i_i_i_i;
      } else {
       $__end__i_i_i_i_i_i_i_i = $80 - 12 + 4 | 0;
       $84 = HEAP32[$__end__i_i_i_i_i_i_i_i >> 2] | 0;
       if (($81 | 0) != ($84 | 0)) {
        HEAP32[$__end__i_i_i_i_i_i_i_i >> 2] = $84 + ((($84 - 16 + (-$82 | 0) | 0) >>> 4 ^ -1) << 4);
       }
       __ZdlPv($81);
       $83 = HEAP32[$__end__i_i_i >> 2] | 0;
      }
      if (($75 | 0) == ($83 | 0)) {
       break;
      } else {
       $80 = $83;
      }
     }
    }
    HEAP32[$m_SubjFillType_i >> 2] = 0;
    HEAP32[$m_ClipFillType_i >> 2] = 0;
    HEAP32[$m_ClipType_i >> 2] = 2;
    if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$25 >> 2] | 0) + 16 >> 2] & 63]($thinWallClipper, 0) | 0) {
     __ZN10ClipperLib7Clipper11BuildResultERNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEE($thinWallClipper, $temp);
    }
    HEAP8[$m_ExecuteLocked_i] = 0;
    $91 = HEAP32[$__end__i_i_i >> 2] | 0;
    $90 = HEAP32[$__begin__i_i_i >> 2] | 0;
   } else {
    $91 = $76;
    $90 = $75;
   }
   $93 = $15 + (HEAP32[(HEAP32[$14 >> 2] | 0) - 12 >> 2] | 0) | 0;
   do {
    if (($91 | 0) != ($90 | 0)) {
     $i_011_i133 = 0;
     $95 = $90;
     do {
      __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($93, $95 + ($i_011_i133 * 12 & -1) | 0, 0) | 0;
      $i_011_i133 = $i_011_i133 + 1 | 0;
      $96 = HEAP32[$__end__i_i_i >> 2] | 0;
      $95 = HEAP32[$__begin__i_i_i >> 2] | 0;
     } while ($i_011_i133 >>> 0 < (($96 - $95 | 0) / 12 & -1) >>> 0);
     $99 = $17 + (HEAP32[(HEAP32[$16 >> 2] | 0) - 12 >> 2] | 0) | 0;
     if (($96 | 0) == ($95 | 0)) {
      break;
     } else {
      $i_011_i150 = 0;
      $101 = $95;
     }
     do {
      __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($99, $101 + ($i_011_i150 * 12 & -1) | 0, 0) | 0;
      $i_011_i150 = $i_011_i150 + 1 | 0;
      $101 = HEAP32[$__begin__i_i_i >> 2] | 0;
     } while ($i_011_i150 >>> 0 < (((HEAP32[$__end__i_i_i >> 2] | 0) - $101 | 0) / 12 & -1) >>> 0);
    }
   } while (0);
   __ZN10ClipperLib7ClipperD2Ev($thinWallClipper, 12040);
   __ZN10ClipperLib11ClipperBaseD2Ev($26);
  }
  do {
   if ($cmp71) {
    $118 = HEAP32[$__begin__i >> 2] | 0;
    $__end__i407 = $118 + ($sub70 * 12 & -1) + 4 | 0;
    $119 = HEAP32[$__end__i407 >> 2] | 0;
    $__begin__i408 = $118 + ($sub70 * 12 & -1) | 0;
    $120 = HEAP32[$__begin__i408 >> 2] | 0;
    if (($119 | 0) == ($120 | 0)) {
     break;
    }
    $X_i = $40 + ($partNr_0752 * 96 & -1) + 16 | 0;
    $X4_i = $arrayidx_i236 | 0;
    $Y_i = $40 + ($partNr_0752 * 96 & -1) + 24 | 0;
    $Y17_i = $40 + ($partNr_0752 * 96 & -1) + 8 | 0;
    $partNr2_0574 = 0;
    $123 = $120;
    $122 = $119;
    while (1) {
     $124$1 = HEAP32[$X_i + 4 >> 2] | 0;
     $X2_i = $123 + ($partNr2_0574 * 96 & -1) | 0;
     $125$1 = HEAP32[$X2_i + 4 >> 2] | 0;
     do {
      if (($124$1 | 0) < ($125$1 | 0) | ($124$1 | 0) == ($125$1 | 0) & (HEAP32[$X_i >> 2] | 0) >>> 0 < (HEAP32[$X2_i >> 2] | 0) >>> 0) {
       $143 = $122;
       $142 = $123;
      } else {
       $126$1 = HEAP32[$X4_i + 4 >> 2] | 0;
       $X6_i = $123 + ($partNr2_0574 * 96 & -1) + 16 | 0;
       $127$1 = HEAP32[$X6_i + 4 >> 2] | 0;
       if (($126$1 | 0) > ($127$1 | 0) | ($126$1 | 0) == ($127$1 | 0) & (HEAP32[$X4_i >> 2] | 0) >>> 0 > (HEAP32[$X6_i >> 2] | 0) >>> 0) {
        $143 = $122;
        $142 = $123;
        break;
       }
       $128$1 = HEAP32[$Y_i + 4 >> 2] | 0;
       $Y12_i = $123 + ($partNr2_0574 * 96 & -1) + 8 | 0;
       $129$1 = HEAP32[$Y12_i + 4 >> 2] | 0;
       if (($128$1 | 0) < ($129$1 | 0) | ($128$1 | 0) == ($129$1 | 0) & (HEAP32[$Y_i >> 2] | 0) >>> 0 < (HEAP32[$Y12_i >> 2] | 0) >>> 0) {
        $143 = $122;
        $142 = $123;
        break;
       }
       $130$1 = HEAP32[$Y17_i + 4 >> 2] | 0;
       $Y19_i = $123 + ($partNr2_0574 * 96 & -1) + 24 | 0;
       $131$1 = HEAP32[$Y19_i + 4 >> 2] | 0;
       if (($130$1 | 0) > ($131$1 | 0) | ($130$1 | 0) == ($131$1 | 0) & (HEAP32[$Y17_i >> 2] | 0) >>> 0 > (HEAP32[$Y19_i >> 2] | 0) >>> 0) {
        $143 = $122;
        $142 = $123;
        break;
       }
       $133 = $15 + (HEAP32[(HEAP32[$14 >> 2] | 0) - 12 >> 2] | 0) | 0;
       $135 = HEAP32[$123 + ($partNr2_0574 * 96 & -1) + 56 >> 2] | 0;
       $sub102 = (((HEAP32[$123 + ($partNr2_0574 * 96 & -1) + 60 >> 2] | 0) - $135 | 0) / 12 & -1) - 1 | 0;
       $__end__i_i183 = $135 + ($sub102 * 12 & -1) + 4 | 0;
       $__begin__i_i184 = $135 + ($sub102 * 12 & -1) | 0;
       $137 = HEAP32[$__begin__i_i184 >> 2] | 0;
       if ((HEAP32[$__end__i_i183 >> 2] | 0) == ($137 | 0)) {
        $143 = $122;
        $142 = $123;
        break;
       } else {
        $i_011_i185 = 0;
        $139 = $137;
       }
       do {
        __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($133, $139 + ($i_011_i185 * 12 & -1) | 0, 1) | 0;
        $i_011_i185 = $i_011_i185 + 1 | 0;
        $139 = HEAP32[$__begin__i_i184 >> 2] | 0;
       } while ($i_011_i185 >>> 0 < (((HEAP32[$__end__i_i183 >> 2] | 0) - $139 | 0) / 12 & -1) >>> 0);
       $143 = HEAP32[$__end__i407 >> 2] | 0;
       $142 = HEAP32[$__begin__i408 >> 2] | 0;
      }
     } while (0);
     $inc = $partNr2_0574 + 1 | 0;
     if ($inc >>> 0 < (($143 - $142 | 0) / 96 & -1) >>> 0) {
      $partNr2_0574 = $inc;
      $123 = $142;
      $122 = $143;
     } else {
      break;
     }
    }
   }
  } while (0);
  $145 = HEAP32[$__begin__i >> 2] | 0;
  do {
   if (($add | 0) < (((HEAP32[$__end__i433 >> 2] | 0) - $145 | 0) / 12 & -1 | 0)) {
    $__end__i420 = $145 + ($add * 12 & -1) + 4 | 0;
    $146 = HEAP32[$__end__i420 >> 2] | 0;
    $__begin__i421 = $145 + ($add * 12 & -1) | 0;
    $147 = HEAP32[$__begin__i421 >> 2] | 0;
    if (($146 | 0) == ($147 | 0)) {
     break;
    }
    $X_i200 = $40 + ($partNr_0752 * 96 & -1) + 16 | 0;
    $X4_i203 = $arrayidx_i236 | 0;
    $Y_i207 = $40 + ($partNr_0752 * 96 & -1) + 24 | 0;
    $Y17_i211 = $40 + ($partNr_0752 * 96 & -1) + 8 | 0;
    $partNr2118_0583 = 0;
    $150 = $147;
    $149 = $146;
    while (1) {
     $151$1 = HEAP32[$X_i200 + 4 >> 2] | 0;
     $X2_i201 = $150 + ($partNr2118_0583 * 96 & -1) | 0;
     $152$1 = HEAP32[$X2_i201 + 4 >> 2] | 0;
     do {
      if (($151$1 | 0) < ($152$1 | 0) | ($151$1 | 0) == ($152$1 | 0) & (HEAP32[$X_i200 >> 2] | 0) >>> 0 < (HEAP32[$X2_i201 >> 2] | 0) >>> 0) {
       $170 = $149;
       $169 = $150;
      } else {
       $153$1 = HEAP32[$X4_i203 + 4 >> 2] | 0;
       $X6_i204 = $150 + ($partNr2118_0583 * 96 & -1) + 16 | 0;
       $154$1 = HEAP32[$X6_i204 + 4 >> 2] | 0;
       if (($153$1 | 0) > ($154$1 | 0) | ($153$1 | 0) == ($154$1 | 0) & (HEAP32[$X4_i203 >> 2] | 0) >>> 0 > (HEAP32[$X6_i204 >> 2] | 0) >>> 0) {
        $170 = $149;
        $169 = $150;
        break;
       }
       $155$1 = HEAP32[$Y_i207 + 4 >> 2] | 0;
       $Y12_i208 = $150 + ($partNr2118_0583 * 96 & -1) + 8 | 0;
       $156$1 = HEAP32[$Y12_i208 + 4 >> 2] | 0;
       if (($155$1 | 0) < ($156$1 | 0) | ($155$1 | 0) == ($156$1 | 0) & (HEAP32[$Y_i207 >> 2] | 0) >>> 0 < (HEAP32[$Y12_i208 >> 2] | 0) >>> 0) {
        $170 = $149;
        $169 = $150;
        break;
       }
       $157$1 = HEAP32[$Y17_i211 + 4 >> 2] | 0;
       $Y19_i212 = $150 + ($partNr2118_0583 * 96 & -1) + 24 | 0;
       $158$1 = HEAP32[$Y19_i212 + 4 >> 2] | 0;
       if (($157$1 | 0) > ($158$1 | 0) | ($157$1 | 0) == ($158$1 | 0) & (HEAP32[$Y17_i211 >> 2] | 0) >>> 0 > (HEAP32[$Y19_i212 >> 2] | 0) >>> 0) {
        $170 = $149;
        $169 = $150;
        break;
       }
       $160 = $17 + (HEAP32[(HEAP32[$16 >> 2] | 0) - 12 >> 2] | 0) | 0;
       $162 = HEAP32[$150 + ($partNr2118_0583 * 96 & -1) + 56 >> 2] | 0;
       $sub145 = (((HEAP32[$150 + ($partNr2118_0583 * 96 & -1) + 60 >> 2] | 0) - $162 | 0) / 12 & -1) - 1 | 0;
       $__end__i_i217 = $162 + ($sub145 * 12 & -1) + 4 | 0;
       $__begin__i_i218 = $162 + ($sub145 * 12 & -1) | 0;
       $164 = HEAP32[$__begin__i_i218 >> 2] | 0;
       if ((HEAP32[$__end__i_i217 >> 2] | 0) == ($164 | 0)) {
        $170 = $149;
        $169 = $150;
        break;
       } else {
        $i_011_i219 = 0;
        $166 = $164;
       }
       do {
        __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($160, $166 + ($i_011_i219 * 12 & -1) | 0, 1) | 0;
        $i_011_i219 = $i_011_i219 + 1 | 0;
        $166 = HEAP32[$__begin__i_i218 >> 2] | 0;
       } while ($i_011_i219 >>> 0 < (((HEAP32[$__end__i_i217 >> 2] | 0) - $166 | 0) / 12 & -1) >>> 0);
       $170 = HEAP32[$__end__i420 >> 2] | 0;
       $169 = HEAP32[$__begin__i421 >> 2] | 0;
      }
     } while (0);
     $inc152 = $partNr2118_0583 + 1 | 0;
     if ($inc152 >>> 0 < (($170 - $169 | 0) / 96 & -1) >>> 0) {
      $partNr2118_0583 = $inc152;
      $150 = $169;
      $149 = $170;
     } else {
      break;
     }
    }
   }
  } while (0);
  HEAP32[$__begin__i_i_i374 >> 2] = 0;
  HEAP32[$__end__i_i_i375 >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i381 >> 2] = 0;
  HEAP32[$__begin__i_i_i349 >> 2] = 0;
  HEAP32[$__end__i_i_i350 >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i356 >> 2] = 0;
  if ((HEAP8[$m_ExecuteLocked_i234] & 1) == 0) {
   HEAP8[$m_ExecuteLocked_i234] = 1;
   HEAP32[$m_SubjFillType_i256 >> 2] = 0;
   HEAP32[$m_ClipFillType_i257 >> 2] = 0;
   HEAP32[$m_ClipType_i258 >> 2] = 2;
   if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$27 >> 2] | 0) + 16 >> 2] & 63]($downskinClipper, 0) | 0) {
    __ZN10ClipperLib7Clipper11BuildResultERNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEE($downskinClipper, $downSkin);
   }
   HEAP8[$m_ExecuteLocked_i234] = 0;
  }
  if ((HEAP8[$m_ExecuteLocked_i269] & 1) == 0) {
   HEAP8[$m_ExecuteLocked_i269] = 1;
   $176 = HEAP32[$__end__i_i_i350 >> 2] | 0;
   $177 = HEAP32[$__begin__i_i_i349 >> 2] | 0;
   if (($177 | 0) != ($176 | 0)) {
    $179 = $176;
    while (1) {
     $incdec_ptr_i_i_i_i_i274 = $179 - 12 | 0;
     HEAP32[$__end__i_i_i350 >> 2] = $incdec_ptr_i_i_i_i_i274;
     $180 = HEAP32[$incdec_ptr_i_i_i_i_i274 >> 2] | 0;
     $181 = $180;
     if (($180 | 0) == 0) {
      $182 = $incdec_ptr_i_i_i_i_i274;
     } else {
      $__end__i_i_i_i_i_i_i_i280 = $179 - 12 + 4 | 0;
      $183 = HEAP32[$__end__i_i_i_i_i_i_i_i280 >> 2] | 0;
      if (($180 | 0) != ($183 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i_i280 >> 2] = $183 + ((($183 - 16 + (-$181 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($180);
      $182 = HEAP32[$__end__i_i_i350 >> 2] | 0;
     }
     if (($177 | 0) == ($182 | 0)) {
      break;
     } else {
      $179 = $182;
     }
    }
   }
   HEAP32[$m_SubjFillType_i291 >> 2] = 0;
   HEAP32[$m_ClipFillType_i292 >> 2] = 0;
   HEAP32[$m_ClipType_i293 >> 2] = 2;
   if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$28 >> 2] | 0) + 16 >> 2] & 63]($upskinClipper, 0) | 0) {
    __ZN10ClipperLib7Clipper11BuildResultERNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEE($upskinClipper, $upSkin);
   }
   HEAP8[$m_ExecuteLocked_i269] = 0;
  }
  HEAP32[$__begin__i_i_i_i_i304 >> 2] = 0;
  HEAP32[$__end__i_i_i_i_i305 >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i_i_i306 >> 2] = 0;
  HEAP32[$m_MinimaList_i_i307 >> 2] = 0;
  HEAP32[$m_CurrentLM_i_i308 >> 2] = 0;
  HEAP32[$30 >> 2] = 11908;
  HEAP32[$29 >> 2] = 11948;
  _memset($32 | 0, 0, 36);
  _memset($33 | 0, 0, 17);
  HEAP8[$31] = 0;
  HEAP8[$m_ReverseOutput_i311] = 0;
  $add_ptr167 = $skinCombineClipper + 76 | 0;
  $190 = HEAP32[$__begin__i_i_i374 >> 2] | 0;
  if ((HEAP32[$__end__i_i_i375 >> 2] | 0) == ($190 | 0)) {
   $vtable171 = 11908;
  } else {
   $i_011_i314 = 0;
   $192 = $190;
   do {
    __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($add_ptr167, $192 + ($i_011_i314 * 12 & -1) | 0, 0) | 0;
    $i_011_i314 = $i_011_i314 + 1 | 0;
    $192 = HEAP32[$__begin__i_i_i374 >> 2] | 0;
   } while ($i_011_i314 >>> 0 < (((HEAP32[$__end__i_i_i375 >> 2] | 0) - $192 | 0) / 12 & -1) >>> 0);
   $vtable171 = HEAP32[$34 >> 2] | 0;
  }
  $196 = $35 + (HEAP32[$vtable171 - 12 >> 2] | 0) | 0;
  $198 = HEAP32[$__begin__i_i_i349 >> 2] | 0;
  if ((HEAP32[$__end__i_i_i350 >> 2] | 0) != ($198 | 0)) {
   $i_011_i331 = 0;
   $200 = $198;
   do {
    __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($196, $200 + ($i_011_i331 * 12 & -1) | 0, 1) | 0;
    $i_011_i331 = $i_011_i331 + 1 | 0;
    $200 = HEAP32[$__begin__i_i_i349 >> 2] | 0;
   } while ($i_011_i331 >>> 0 < (((HEAP32[$__end__i_i_i350 >> 2] | 0) - $200 | 0) / 12 & -1) >>> 0);
  }
  $skinOutline = $40 + ($partNr_0752 * 96 & -1) + 68 | 0;
  if ((HEAP8[$m_ExecuteLocked_i346] & 1) == 0) {
   HEAP8[$m_ExecuteLocked_i346] = 1;
   $__end__i_i_i348 = $40 + ($partNr_0752 * 96 & -1) + 72 | 0;
   $205 = HEAP32[$__end__i_i_i348 >> 2] | 0;
   $206 = HEAP32[$skinOutline >> 2] | 0;
   if (($206 | 0) != ($205 | 0)) {
    $208 = $205;
    while (1) {
     $incdec_ptr_i_i_i_i_i352 = $208 - 12 | 0;
     HEAP32[$__end__i_i_i348 >> 2] = $incdec_ptr_i_i_i_i_i352;
     $209 = HEAP32[$incdec_ptr_i_i_i_i_i352 >> 2] | 0;
     $210 = $209;
     if (($209 | 0) == 0) {
      $211 = $incdec_ptr_i_i_i_i_i352;
     } else {
      $__end__i_i_i_i_i_i_i_i358 = $208 - 12 + 4 | 0;
      $212 = HEAP32[$__end__i_i_i_i_i_i_i_i358 >> 2] | 0;
      if (($209 | 0) != ($212 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i_i358 >> 2] = $212 + ((($212 - 16 + (-$210 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($209);
      $211 = HEAP32[$__end__i_i_i348 >> 2] | 0;
     }
     if (($206 | 0) == ($211 | 0)) {
      break;
     } else {
      $208 = $211;
     }
    }
   }
   HEAP32[$m_SubjFillType_i369 >> 2] = 0;
   HEAP32[$m_ClipFillType_i370 >> 2] = 0;
   HEAP32[$m_ClipType_i371 >> 2] = 1;
   if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$36 >> 2] | 0) + 16 >> 2] & 63]($skinCombineClipper, 0) | 0) {
    __ZN10ClipperLib7Clipper11BuildResultERNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEE($skinCombineClipper, $skinOutline);
   }
   HEAP8[$m_ExecuteLocked_i346] = 0;
  }
  __ZN10ClipperLib7ClipperD2Ev($skinCombineClipper, 12040);
  __ZN10ClipperLib11ClipperBaseD2Ev($37);
  $__end__i326 = $40 + ($partNr_0752 * 96 & -1) + 72 | 0;
  $__begin__i327 = $skinOutline | 0;
  $221 = HEAP32[$__begin__i327 >> 2] | 0;
  if ((HEAP32[$__end__i326 >> 2] | 0) != ($221 | 0)) {
   $i_0604 = 0;
   $223 = $221;
   do {
    if (+Math_abs(+(+__ZN10ClipperLib4AreaERKNSt3__16vectorINS_8IntPointENS0_9allocatorIS2_EEEE($223 + ($i_0604 * 12 & -1) | 0))) / 1.0e3 / 1.0e3 < $mul187) {
     $224 = HEAP32[$__begin__i327 >> 2] | 0;
     $add_ptr_i_i = $224 + ($i_0604 * 12 & -1) | 0;
     $add_ptr_i = $224 + (($i_0604 + 1 | 0) * 12 & -1) | 0;
     $225 = HEAP32[$__end__i326 >> 2] | 0;
     if (($add_ptr_i | 0) == ($225 | 0)) {
      $__result_addr_i_i_i_0_lcssa = $add_ptr_i_i;
      $228 = $add_ptr_i;
     } else {
      $__result_addr_i_i_i_0593 = $add_ptr_i_i;
      $__first_addr_i_i_i_0594 = $add_ptr_i;
      do {
       __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($__result_addr_i_i_i_0593, HEAP32[$__first_addr_i_i_i_0594 >> 2] | 0, HEAP32[$__first_addr_i_i_i_0594 + 4 >> 2] | 0);
       $__first_addr_i_i_i_0594 = $__first_addr_i_i_i_0594 + 12 | 0;
       $__result_addr_i_i_i_0593 = $__result_addr_i_i_i_0593 + 12 | 0;
      } while (($__first_addr_i_i_i_0594 | 0) != ($225 | 0));
      $__result_addr_i_i_i_0_lcssa = $__result_addr_i_i_i_0593;
      $228 = HEAP32[$__end__i326 >> 2] | 0;
     }
     if (($__result_addr_i_i_i_0_lcssa | 0) == ($228 | 0)) {
      $238 = $228;
     } else {
      $229 = $228;
      while (1) {
       $incdec_ptr_i_i_i_i = $229 - 12 | 0;
       HEAP32[$__end__i326 >> 2] = $incdec_ptr_i_i_i_i;
       $230 = HEAP32[$incdec_ptr_i_i_i_i >> 2] | 0;
       $231 = $230;
       if (($230 | 0) == 0) {
        $232 = $incdec_ptr_i_i_i_i;
       } else {
        $__end__i_i_i_i_i_i391 = $229 - 12 + 4 | 0;
        $233 = HEAP32[$__end__i_i_i_i_i_i391 >> 2] | 0;
        if (($230 | 0) != ($233 | 0)) {
         HEAP32[$__end__i_i_i_i_i_i391 >> 2] = $233 + ((($233 - 16 + (-$231 | 0) | 0) >>> 4 ^ -1) << 4);
        }
        __ZdlPv($230);
        $232 = HEAP32[$__end__i326 >> 2] | 0;
       }
       if (($__result_addr_i_i_i_0_lcssa | 0) == ($232 | 0)) {
        $238 = $__result_addr_i_i_i_0_lcssa;
        break;
       } else {
        $229 = $232;
       }
      }
     }
     $i_1 = $i_0604 - 1 | 0;
     $243 = $238;
    } else {
     $i_1 = $i_0604;
     $243 = HEAP32[$__end__i326 >> 2] | 0;
    }
    $i_0604 = $i_1 + 1 | 0;
    $223 = HEAP32[$__begin__i327 >> 2] | 0;
   } while ($i_0604 >>> 0 < (($243 - $223 | 0) / 12 & -1) >>> 0);
  }
  $245 = HEAP32[$__begin__i_i_i349 >> 2] | 0;
  if (($245 | 0) != 0) {
   $246 = HEAP32[$__end__i_i_i350 >> 2] | 0;
   if (($245 | 0) == ($246 | 0)) {
    $256 = $245;
   } else {
    $247 = $246;
    while (1) {
     $incdec_ptr_i_i_i_i_i_i407 = $247 - 12 | 0;
     HEAP32[$__end__i_i_i350 >> 2] = $incdec_ptr_i_i_i_i_i_i407;
     $248 = HEAP32[$incdec_ptr_i_i_i_i_i_i407 >> 2] | 0;
     $249 = $248;
     if (($248 | 0) == 0) {
      $250 = $incdec_ptr_i_i_i_i_i_i407;
     } else {
      $__end__i_i_i_i_i_i_i_i_i413 = $247 - 12 + 4 | 0;
      $251 = HEAP32[$__end__i_i_i_i_i_i_i_i_i413 >> 2] | 0;
      if (($248 | 0) != ($251 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i_i_i413 >> 2] = $251 + ((($251 - 16 + (-$249 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($248);
      $250 = HEAP32[$__end__i_i_i350 >> 2] | 0;
     }
     if (($245 | 0) == ($250 | 0)) {
      break;
     } else {
      $247 = $250;
     }
    }
    $256 = HEAP32[$__begin__i_i_i349 >> 2] | 0;
   }
   __ZdlPv($256);
  }
  $258 = HEAP32[$__begin__i_i_i374 >> 2] | 0;
  if (($258 | 0) != 0) {
   $259 = HEAP32[$__end__i_i_i375 >> 2] | 0;
   if (($258 | 0) == ($259 | 0)) {
    $269 = $258;
   } else {
    $260 = $259;
    while (1) {
     $incdec_ptr_i_i_i_i_i_i433 = $260 - 12 | 0;
     HEAP32[$__end__i_i_i375 >> 2] = $incdec_ptr_i_i_i_i_i_i433;
     $261 = HEAP32[$incdec_ptr_i_i_i_i_i_i433 >> 2] | 0;
     $262 = $261;
     if (($261 | 0) == 0) {
      $263 = $incdec_ptr_i_i_i_i_i_i433;
     } else {
      $__end__i_i_i_i_i_i_i_i_i439 = $260 - 12 + 4 | 0;
      $264 = HEAP32[$__end__i_i_i_i_i_i_i_i_i439 >> 2] | 0;
      if (($261 | 0) != ($264 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i_i_i439 >> 2] = $264 + ((($264 - 16 + (-$262 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($261);
      $263 = HEAP32[$__end__i_i_i375 >> 2] | 0;
     }
     if (($258 | 0) == ($263 | 0)) {
      break;
     } else {
      $260 = $263;
     }
    }
    $269 = HEAP32[$__begin__i_i_i374 >> 2] | 0;
   }
   __ZdlPv($269);
  }
  __ZN10ClipperLib7ClipperD2Ev($upskinClipper, 12040);
  __ZN10ClipperLib11ClipperBaseD2Ev($38);
  __ZN10ClipperLib7ClipperD2Ev($downskinClipper, 12040);
  __ZN10ClipperLib11ClipperBaseD2Ev($39);
  $275 = HEAP32[$__begin__i_i_i >> 2] | 0;
  if (($275 | 0) != 0) {
   $276 = HEAP32[$__end__i_i_i >> 2] | 0;
   if (($275 | 0) == ($276 | 0)) {
    $286 = $275;
   } else {
    $277 = $276;
    while (1) {
     $incdec_ptr_i_i_i_i_i_i473 = $277 - 12 | 0;
     HEAP32[$__end__i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i473;
     $278 = HEAP32[$incdec_ptr_i_i_i_i_i_i473 >> 2] | 0;
     $279 = $278;
     if (($278 | 0) == 0) {
      $280 = $incdec_ptr_i_i_i_i_i_i473;
     } else {
      $__end__i_i_i_i_i_i_i_i_i479 = $277 - 12 + 4 | 0;
      $281 = HEAP32[$__end__i_i_i_i_i_i_i_i_i479 >> 2] | 0;
      if (($278 | 0) != ($281 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i_i_i479 >> 2] = $281 + ((($281 - 16 + (-$279 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($278);
      $280 = HEAP32[$__end__i_i_i >> 2] | 0;
     }
     if (($275 | 0) == ($280 | 0)) {
      break;
     } else {
      $277 = $280;
     }
    }
    $286 = HEAP32[$__begin__i_i_i >> 2] | 0;
   }
   __ZdlPv($286);
  }
  $partNr_0752 = $partNr_0752 + 1 | 0;
  $40 = HEAP32[$__begin__i231 >> 2] | 0;
 } while ($partNr_0752 >>> 0 < (((HEAP32[$__end__i >> 2] | 0) - $40 | 0) / 96 & -1) >>> 0);
 STACKTOP = __stackBase__;
 return;
}
function __Z14generateSparseiR18SliceVolumeStorageiii($layerNr, $storage, $extrusionWidth, $downSkinCount, $upSkinCount) {
 $layerNr = $layerNr | 0;
 $storage = $storage | 0;
 $extrusionWidth = $extrusionWidth | 0;
 $downSkinCount = $downSkinCount | 0;
 $upSkinCount = $upSkinCount | 0;
 var $temp = 0, $downskinClipper = 0, $upskinClipper = 0, $downSkin = 0, $upSkin = 0, $result = 0, $skinClipper = 0, $sparseClipper = 0, $__begin__i = 0, $0 = 0, $__end__i = 0, $__begin__i246 = 0, $2 = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $__first__i_i_i_i_i_i = 0, $conv = 0.0, $4 = 0, $__begin__i_i_i_i_i = 0, $__end__i_i_i_i_i = 0, $__first__i_i_i_i_i_i_i_i = 0, $m_MinimaList_i_i = 0, $m_CurrentLM_i_i = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $m_ReverseOutput_i = 0, $9 = 0, $__begin__i_i_i_i_i55 = 0, $__end__i_i_i_i_i56 = 0, $__first__i_i_i_i_i_i_i_i57 = 0, $m_MinimaList_i_i58 = 0, $m_CurrentLM_i_i59 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $m_ReverseOutput_i62 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $sub21 = 0, $cmp22 = 0, $add = 0, $__end__i519 = 0, $__begin__i_i_i427 = 0, $__end__i_i_i428 = 0, $__first__i_i_i_i_i_i434 = 0, $__begin__i_i_i402 = 0, $__end__i_i_i403 = 0, $__first__i_i_i_i_i_i409 = 0, $__begin__i_i_i377 = 0, $__end__i_i_i378 = 0, $__first__i_i_i_i_i_i384 = 0, $m_ExecuteLocked_i = 0, $m_SubjFillType_i = 0, $m_ClipFillType_i = 0, $m_ClipType_i = 0, $18 = 0, $m_ExecuteLocked_i173 = 0, $m_SubjFillType_i195 = 0, $m_ClipFillType_i196 = 0, $m_ClipType_i197 = 0, $19 = 0, $20 = 0, $__begin__i_i_i_i_i208 = 0, $__end__i_i_i_i_i209 = 0, $__first__i_i_i_i_i_i_i_i210 = 0, $m_MinimaList_i_i211 = 0, $m_CurrentLM_i_i212 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $m_ReverseOutput_i215 = 0, $25 = 0, $26 = 0, $m_ExecuteLocked_i250 = 0, $m_SubjFillType_i272 = 0, $m_ClipFillType_i273 = 0, $m_ClipType_i274 = 0, $27 = 0, $28 = 0, $29 = 0, $__begin__i_i_i_i_i305 = 0, $__end__i_i_i_i_i306 = 0, $__first__i_i_i_i_i_i_i_i307 = 0, $m_MinimaList_i_i308 = 0, $m_CurrentLM_i_i309 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $m_ReverseOutput_i312 = 0, $34 = 0, $35 = 0, $m_ExecuteLocked_i347 = 0, $m_SubjFillType_i369 = 0, $m_ClipFillType_i370 = 0, $m_ClipType_i371 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $partNr_0862 = 0, $arrayidx_i251 = 0, $42 = 0, $add_ptr = 0, $44 = 0, $46 = 0, $i_011_i = 0, $47 = 0, $50 = 0, $52 = 0, $i_011_i66 = 0, $55 = 0, $__end__i274 = 0, $__begin__i275 = 0, $57 = 0, $X_i = 0, $X4_i = 0, $Y_i = 0, $Y17_i = 0, $59 = 0, $partNr2_0616 = 0, $60$1 = 0, $X2_i = 0, $61$1 = 0, $62$1 = 0, $X6_i = 0, $63$1 = 0, $64$1 = 0, $Y12_i = 0, $65$1 = 0, $66$1 = 0, $Y19_i = 0, $67$1 = 0, $69 = 0, $sub_ptr_div_i315 = 0, $71 = 0, $sub59 = 0, $__end__i_i82 = 0, $__begin__i_i83 = 0, $73 = 0, $75 = 0, $i_011_i84 = 0, $sub77 = 0, $__end__i_i99 = 0, $__begin__i_i100 = 0, $87 = 0, $89 = 0, $i_011_i101 = 0, $95 = 0, $__end__i506 = 0, $__begin__i507 = 0, $97 = 0, $X_i116 = 0, $X4_i119 = 0, $Y_i123 = 0, $Y17_i127 = 0, $99 = 0, $partNr293_0625 = 0, $100$1 = 0, $X2_i117 = 0, $101$1 = 0, $102$1 = 0, $X6_i120 = 0, $103$1 = 0, $104$1 = 0, $Y12_i124 = 0, $105$1 = 0, $106$1 = 0, $Y19_i128 = 0, $107$1 = 0, $109 = 0, $sub_ptr_div_i488 = 0, $111 = 0, $sub127 = 0, $__end__i_i133 = 0, $__begin__i_i134 = 0, $113 = 0, $115 = 0, $i_011_i135 = 0, $sub146 = 0, $__end__i_i150 = 0, $__begin__i_i151 = 0, $119 = 0, $121 = 0, $i_011_i152 = 0, $131 = 0, $132 = 0, $134 = 0, $incdec_ptr_i_i_i_i_i178 = 0, $135 = 0, $136 = 0, $137 = 0, $__end__i_i_i_i_i_i_i_i184 = 0, $138 = 0, $add_ptr171 = 0, $145 = 0, $147 = 0, $i_011_i218 = 0, $vtable175 = 0, $151 = 0, $153 = 0, $155 = 0, $i_011_i235 = 0, $160 = 0, $161 = 0, $163 = 0, $incdec_ptr_i_i_i_i_i255 = 0, $164 = 0, $165 = 0, $166 = 0, $__end__i_i_i_i_i_i_i_i261 = 0, $167 = 0, $173 = 0, $174 = 0, $178 = 0, $i_0648 = 0, $179 = 0, $add_ptr_i_i = 0, $add_ptr_i = 0, $180 = 0, $__first_addr_i_i_i_0638 = 0, $__result_addr_i_i_i_0637 = 0, $183 = 0, $__result_addr_i_i_i_0_lcssa = 0, $184 = 0, $incdec_ptr_i_i_i_i = 0, $185 = 0, $186 = 0, $187 = 0, $__end__i_i_i_i_i_i294 = 0, $188 = 0, $193 = 0, $200 = 0, $i_1 = 0, $inc203 = 0, $201 = 0, $202 = 0, $203 = 0, $add_ptr210 = 0, $205 = 0, $207 = 0, $i_011_i315 = 0, $210 = 0, $211 = 0, $vtable214 = 0, $213 = 0, $215 = 0, $i_011_i332 = 0, $sparseOutline = 0, $__end__i_i_i349 = 0, $220 = 0, $221 = 0, $223 = 0, $incdec_ptr_i_i_i_i_i352 = 0, $224 = 0, $225 = 0, $226 = 0, $__end__i_i_i_i_i_i_i_i358 = 0, $227 = 0, $235 = 0, $236 = 0, $237 = 0, $incdec_ptr_i_i_i_i_i_i395 = 0, $238 = 0, $239 = 0, $240 = 0, $__end__i_i_i_i_i_i_i_i_i401 = 0, $241 = 0, $246 = 0, $248 = 0, $249 = 0, $250 = 0, $incdec_ptr_i_i_i_i_i_i421 = 0, $251 = 0, $252 = 0, $253 = 0, $__end__i_i_i_i_i_i_i_i_i427 = 0, $254 = 0, $259 = 0, $261 = 0, $262 = 0, $263 = 0, $incdec_ptr_i_i_i_i_i_i447 = 0, $264 = 0, $265 = 0, $266 = 0, $__end__i_i_i_i_i_i_i_i_i453 = 0, $267 = 0, $272 = 0, $278 = 0, $279 = 0, $280 = 0, $incdec_ptr_i_i_i_i_i_i487 = 0, $281 = 0, $282 = 0, $283 = 0, $__end__i_i_i_i_i_i_i_i_i493 = 0, $284 = 0, $289 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 $temp = __stackBase__ | 0;
 $downskinClipper = __stackBase__ + 16 | 0;
 $upskinClipper = __stackBase__ + 120 | 0;
 $downSkin = __stackBase__ + 224 | 0;
 $upSkin = __stackBase__ + 240 | 0;
 $result = __stackBase__ + 256 | 0;
 $skinClipper = __stackBase__ + 272 | 0;
 $sparseClipper = __stackBase__ + 376 | 0;
 $__begin__i = $storage | 0;
 $0 = HEAP32[$__begin__i >> 2] | 0;
 $__end__i = $0 + ($layerNr * 12 & -1) + 4 | 0;
 $__begin__i246 = $0 + ($layerNr * 12 & -1) | 0;
 $2 = HEAP32[$__begin__i246 >> 2] | 0;
 if ((HEAP32[$__end__i >> 2] | 0) == ($2 | 0)) {
  STACKTOP = __stackBase__;
  return;
 }
 $__begin__i_i_i = $temp | 0;
 $__end__i_i_i = $temp + 4 | 0;
 $__first__i_i_i_i_i_i = $temp + 8 | 0;
 $conv = +(($extrusionWidth | 0) / -2 & -1 | 0);
 $4 = $downskinClipper + 76 | 0;
 $__begin__i_i_i_i_i = $downskinClipper + 92 | 0;
 $__end__i_i_i_i_i = $downskinClipper + 96 | 0;
 $__first__i_i_i_i_i_i_i_i = $downskinClipper + 100 | 0;
 $m_MinimaList_i_i = $downskinClipper + 84 | 0;
 $m_CurrentLM_i_i = $downskinClipper + 80 | 0;
 $5 = $downskinClipper | 0;
 $6 = $downskinClipper + 88 | 0;
 $7 = $downskinClipper + 4 | 0;
 $8 = $downskinClipper + 44 | 0;
 $m_ReverseOutput_i = $downskinClipper + 72 | 0;
 $9 = $upskinClipper + 76 | 0;
 $__begin__i_i_i_i_i55 = $upskinClipper + 92 | 0;
 $__end__i_i_i_i_i56 = $upskinClipper + 96 | 0;
 $__first__i_i_i_i_i_i_i_i57 = $upskinClipper + 100 | 0;
 $m_MinimaList_i_i58 = $upskinClipper + 84 | 0;
 $m_CurrentLM_i_i59 = $upskinClipper + 80 | 0;
 $10 = $upskinClipper | 0;
 $11 = $upskinClipper + 88 | 0;
 $12 = $upskinClipper + 4 | 0;
 $13 = $upskinClipper + 44 | 0;
 $m_ReverseOutput_i62 = $upskinClipper + 72 | 0;
 $14 = $downskinClipper;
 $15 = $downskinClipper;
 $16 = $upskinClipper;
 $17 = $upskinClipper;
 $sub21 = $layerNr - $downSkinCount | 0;
 $cmp22 = ($sub21 | 0) > -1;
 $add = $upSkinCount + $layerNr | 0;
 $__end__i519 = $storage + 4 | 0;
 $__begin__i_i_i427 = $downSkin | 0;
 $__end__i_i_i428 = $downSkin + 4 | 0;
 $__first__i_i_i_i_i_i434 = $downSkin + 8 | 0;
 $__begin__i_i_i402 = $upSkin | 0;
 $__end__i_i_i403 = $upSkin + 4 | 0;
 $__first__i_i_i_i_i_i409 = $upSkin + 8 | 0;
 $__begin__i_i_i377 = $result | 0;
 $__end__i_i_i378 = $result + 4 | 0;
 $__first__i_i_i_i_i_i384 = $result + 8 | 0;
 $m_ExecuteLocked_i = $downskinClipper + 60 | 0;
 $m_SubjFillType_i = $downskinClipper + 68 | 0;
 $m_ClipFillType_i = $downskinClipper + 64 | 0;
 $m_ClipType_i = $downskinClipper + 40 | 0;
 $18 = $downskinClipper;
 $m_ExecuteLocked_i173 = $upskinClipper + 60 | 0;
 $m_SubjFillType_i195 = $upskinClipper + 68 | 0;
 $m_ClipFillType_i196 = $upskinClipper + 64 | 0;
 $m_ClipType_i197 = $upskinClipper + 40 | 0;
 $19 = $upskinClipper;
 $20 = $skinClipper + 76 | 0;
 $__begin__i_i_i_i_i208 = $skinClipper + 92 | 0;
 $__end__i_i_i_i_i209 = $skinClipper + 96 | 0;
 $__first__i_i_i_i_i_i_i_i210 = $skinClipper + 100 | 0;
 $m_MinimaList_i_i211 = $skinClipper + 84 | 0;
 $m_CurrentLM_i_i212 = $skinClipper + 80 | 0;
 $21 = $skinClipper | 0;
 $22 = $skinClipper + 88 | 0;
 $23 = $skinClipper + 4 | 0;
 $24 = $skinClipper + 44 | 0;
 $m_ReverseOutput_i215 = $skinClipper + 72 | 0;
 $25 = $skinClipper;
 $26 = $skinClipper;
 $m_ExecuteLocked_i250 = $skinClipper + 60 | 0;
 $m_SubjFillType_i272 = $skinClipper + 68 | 0;
 $m_ClipFillType_i273 = $skinClipper + 64 | 0;
 $m_ClipType_i274 = $skinClipper + 40 | 0;
 $27 = $skinClipper;
 $28 = $skinClipper + 76 | 0;
 $29 = $sparseClipper + 76 | 0;
 $__begin__i_i_i_i_i305 = $sparseClipper + 92 | 0;
 $__end__i_i_i_i_i306 = $sparseClipper + 96 | 0;
 $__first__i_i_i_i_i_i_i_i307 = $sparseClipper + 100 | 0;
 $m_MinimaList_i_i308 = $sparseClipper + 84 | 0;
 $m_CurrentLM_i_i309 = $sparseClipper + 80 | 0;
 $30 = $sparseClipper | 0;
 $31 = $sparseClipper + 88 | 0;
 $32 = $sparseClipper + 4 | 0;
 $33 = $sparseClipper + 44 | 0;
 $m_ReverseOutput_i312 = $sparseClipper + 72 | 0;
 $34 = $sparseClipper;
 $35 = $sparseClipper;
 $m_ExecuteLocked_i347 = $sparseClipper + 60 | 0;
 $m_SubjFillType_i369 = $sparseClipper + 68 | 0;
 $m_ClipFillType_i370 = $sparseClipper + 64 | 0;
 $m_ClipType_i371 = $sparseClipper + 40 | 0;
 $36 = $sparseClipper;
 $37 = $sparseClipper + 76 | 0;
 $38 = $upskinClipper + 76 | 0;
 $39 = $downskinClipper + 76 | 0;
 $partNr_0862 = 0;
 $40 = $2;
 do {
  $arrayidx_i251 = $40 + ($partNr_0862 * 96 & -1) | 0;
  HEAP32[$__begin__i_i_i >> 2] = 0;
  HEAP32[$__end__i_i_i >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i >> 2] = 0;
  $42 = HEAP32[$40 + ($partNr_0862 * 96 & -1) + 56 >> 2] | 0;
  __ZN10ClipperLib14OffsetPolygonsERKNSt3__16vectorINS1_INS_8IntPointENS0_9allocatorIS2_EEEENS3_IS5_EEEERS7_dNS_8JoinTypeEdb($42 + (((((HEAP32[$40 + ($partNr_0862 * 96 & -1) + 60 >> 2] | 0) - $42 | 0) / 12 & -1) - 1 | 0) * 12 & -1) | 0, $temp, $conv, 0, 2.0, 0);
  HEAP32[$__begin__i_i_i_i_i >> 2] = 0;
  HEAP32[$__end__i_i_i_i_i >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i_i_i >> 2] = 0;
  HEAP32[$m_MinimaList_i_i >> 2] = 0;
  HEAP32[$m_CurrentLM_i_i >> 2] = 0;
  HEAP32[$5 >> 2] = 11908;
  HEAP32[$4 >> 2] = 11948;
  _memset($7 | 0, 0, 36);
  _memset($8 | 0, 0, 17);
  HEAP8[$6] = 0;
  HEAP8[$m_ReverseOutput_i] = 0;
  HEAP32[$__begin__i_i_i_i_i55 >> 2] = 0;
  HEAP32[$__end__i_i_i_i_i56 >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i_i_i57 >> 2] = 0;
  HEAP32[$m_MinimaList_i_i58 >> 2] = 0;
  HEAP32[$m_CurrentLM_i_i59 >> 2] = 0;
  HEAP32[$10 >> 2] = 11908;
  HEAP32[$9 >> 2] = 11948;
  _memset($12 | 0, 0, 36);
  _memset($13 | 0, 0, 17);
  HEAP8[$11] = 0;
  HEAP8[$m_ReverseOutput_i62] = 0;
  $add_ptr = $downskinClipper + 76 | 0;
  $44 = HEAP32[$__begin__i_i_i >> 2] | 0;
  do {
   if ((HEAP32[$__end__i_i_i >> 2] | 0) != ($44 | 0)) {
    $i_011_i = 0;
    $46 = $44;
    do {
     __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($add_ptr, $46 + ($i_011_i * 12 & -1) | 0, 0) | 0;
     $i_011_i = $i_011_i + 1 | 0;
     $47 = HEAP32[$__end__i_i_i >> 2] | 0;
     $46 = HEAP32[$__begin__i_i_i >> 2] | 0;
    } while ($i_011_i >>> 0 < (($47 - $46 | 0) / 12 & -1) >>> 0);
    $50 = $17 + (HEAP32[(HEAP32[$16 >> 2] | 0) - 12 >> 2] | 0) | 0;
    if (($47 | 0) == ($46 | 0)) {
     break;
    } else {
     $i_011_i66 = 0;
     $52 = $46;
    }
    do {
     __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($50, $52 + ($i_011_i66 * 12 & -1) | 0, 0) | 0;
     $i_011_i66 = $i_011_i66 + 1 | 0;
     $52 = HEAP32[$__begin__i_i_i >> 2] | 0;
    } while ($i_011_i66 >>> 0 < (((HEAP32[$__end__i_i_i >> 2] | 0) - $52 | 0) / 12 & -1) >>> 0);
   }
  } while (0);
  do {
   if ($cmp22) {
    $55 = HEAP32[$__begin__i >> 2] | 0;
    $__end__i274 = $55 + ($sub21 * 12 & -1) + 4 | 0;
    $__begin__i275 = $55 + ($sub21 * 12 & -1) | 0;
    $57 = HEAP32[$__begin__i275 >> 2] | 0;
    if ((HEAP32[$__end__i274 >> 2] | 0) == ($57 | 0)) {
     break;
    }
    $X_i = $40 + ($partNr_0862 * 96 & -1) + 16 | 0;
    $X4_i = $arrayidx_i251 | 0;
    $Y_i = $40 + ($partNr_0862 * 96 & -1) + 24 | 0;
    $Y17_i = $40 + ($partNr_0862 * 96 & -1) + 8 | 0;
    $partNr2_0616 = 0;
    $59 = $57;
    do {
     $60$1 = HEAP32[$X_i + 4 >> 2] | 0;
     $X2_i = $59 + ($partNr2_0616 * 96 & -1) | 0;
     $61$1 = HEAP32[$X2_i + 4 >> 2] | 0;
     do {
      if (!(($60$1 | 0) < ($61$1 | 0) | ($60$1 | 0) == ($61$1 | 0) & (HEAP32[$X_i >> 2] | 0) >>> 0 < (HEAP32[$X2_i >> 2] | 0) >>> 0)) {
       $62$1 = HEAP32[$X4_i + 4 >> 2] | 0;
       $X6_i = $59 + ($partNr2_0616 * 96 & -1) + 16 | 0;
       $63$1 = HEAP32[$X6_i + 4 >> 2] | 0;
       if (($62$1 | 0) > ($63$1 | 0) | ($62$1 | 0) == ($63$1 | 0) & (HEAP32[$X4_i >> 2] | 0) >>> 0 > (HEAP32[$X6_i >> 2] | 0) >>> 0) {
        break;
       }
       $64$1 = HEAP32[$Y_i + 4 >> 2] | 0;
       $Y12_i = $59 + ($partNr2_0616 * 96 & -1) + 8 | 0;
       $65$1 = HEAP32[$Y12_i + 4 >> 2] | 0;
       if (($64$1 | 0) < ($65$1 | 0) | ($64$1 | 0) == ($65$1 | 0) & (HEAP32[$Y_i >> 2] | 0) >>> 0 < (HEAP32[$Y12_i >> 2] | 0) >>> 0) {
        break;
       }
       $66$1 = HEAP32[$Y17_i + 4 >> 2] | 0;
       $Y19_i = $59 + ($partNr2_0616 * 96 & -1) + 24 | 0;
       $67$1 = HEAP32[$Y19_i + 4 >> 2] | 0;
       if (($66$1 | 0) > ($67$1 | 0) | ($66$1 | 0) == ($67$1 | 0) & (HEAP32[$Y17_i >> 2] | 0) >>> 0 > (HEAP32[$Y19_i >> 2] | 0) >>> 0) {
        break;
       }
       $69 = HEAP32[$59 + ($partNr2_0616 * 96 & -1) + 56 >> 2] | 0;
       $sub_ptr_div_i315 = ((HEAP32[$59 + ($partNr2_0616 * 96 & -1) + 60 >> 2] | 0) - $69 | 0) / 12 & -1;
       $71 = $15 + (HEAP32[(HEAP32[$14 >> 2] | 0) - 12 >> 2] | 0) | 0;
       if ($sub_ptr_div_i315 >>> 0 > 1) {
        $sub59 = $sub_ptr_div_i315 - 2 | 0;
        $__end__i_i82 = $69 + ($sub59 * 12 & -1) + 4 | 0;
        $__begin__i_i83 = $69 + ($sub59 * 12 & -1) | 0;
        $73 = HEAP32[$__begin__i_i83 >> 2] | 0;
        if ((HEAP32[$__end__i_i82 >> 2] | 0) == ($73 | 0)) {
         break;
        } else {
         $i_011_i84 = 0;
         $75 = $73;
        }
        do {
         __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($71, $75 + ($i_011_i84 * 12 & -1) | 0, 1) | 0;
         $i_011_i84 = $i_011_i84 + 1 | 0;
         $75 = HEAP32[$__begin__i_i83 >> 2] | 0;
        } while ($i_011_i84 >>> 0 < (((HEAP32[$__end__i_i82 >> 2] | 0) - $75 | 0) / 12 & -1) >>> 0);
       } else {
        $sub77 = $sub_ptr_div_i315 - 1 | 0;
        $__end__i_i99 = $69 + ($sub77 * 12 & -1) + 4 | 0;
        $__begin__i_i100 = $69 + ($sub77 * 12 & -1) | 0;
        $87 = HEAP32[$__begin__i_i100 >> 2] | 0;
        if ((HEAP32[$__end__i_i99 >> 2] | 0) == ($87 | 0)) {
         break;
        } else {
         $i_011_i101 = 0;
         $89 = $87;
        }
        do {
         __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($71, $89 + ($i_011_i101 * 12 & -1) | 0, 1) | 0;
         $i_011_i101 = $i_011_i101 + 1 | 0;
         $89 = HEAP32[$__begin__i_i100 >> 2] | 0;
        } while ($i_011_i101 >>> 0 < (((HEAP32[$__end__i_i99 >> 2] | 0) - $89 | 0) / 12 & -1) >>> 0);
       }
      }
     } while (0);
     $partNr2_0616 = $partNr2_0616 + 1 | 0;
     $59 = HEAP32[$__begin__i275 >> 2] | 0;
    } while ($partNr2_0616 >>> 0 < (((HEAP32[$__end__i274 >> 2] | 0) - $59 | 0) / 96 & -1) >>> 0);
   }
  } while (0);
  $95 = HEAP32[$__begin__i >> 2] | 0;
  do {
   if (($add | 0) < (((HEAP32[$__end__i519 >> 2] | 0) - $95 | 0) / 12 & -1 | 0)) {
    $__end__i506 = $95 + ($add * 12 & -1) + 4 | 0;
    $__begin__i507 = $95 + ($add * 12 & -1) | 0;
    $97 = HEAP32[$__begin__i507 >> 2] | 0;
    if ((HEAP32[$__end__i506 >> 2] | 0) == ($97 | 0)) {
     break;
    }
    $X_i116 = $40 + ($partNr_0862 * 96 & -1) + 16 | 0;
    $X4_i119 = $arrayidx_i251 | 0;
    $Y_i123 = $40 + ($partNr_0862 * 96 & -1) + 24 | 0;
    $Y17_i127 = $40 + ($partNr_0862 * 96 & -1) + 8 | 0;
    $partNr293_0625 = 0;
    $99 = $97;
    do {
     $100$1 = HEAP32[$X_i116 + 4 >> 2] | 0;
     $X2_i117 = $99 + ($partNr293_0625 * 96 & -1) | 0;
     $101$1 = HEAP32[$X2_i117 + 4 >> 2] | 0;
     do {
      if (!(($100$1 | 0) < ($101$1 | 0) | ($100$1 | 0) == ($101$1 | 0) & (HEAP32[$X_i116 >> 2] | 0) >>> 0 < (HEAP32[$X2_i117 >> 2] | 0) >>> 0)) {
       $102$1 = HEAP32[$X4_i119 + 4 >> 2] | 0;
       $X6_i120 = $99 + ($partNr293_0625 * 96 & -1) + 16 | 0;
       $103$1 = HEAP32[$X6_i120 + 4 >> 2] | 0;
       if (($102$1 | 0) > ($103$1 | 0) | ($102$1 | 0) == ($103$1 | 0) & (HEAP32[$X4_i119 >> 2] | 0) >>> 0 > (HEAP32[$X6_i120 >> 2] | 0) >>> 0) {
        break;
       }
       $104$1 = HEAP32[$Y_i123 + 4 >> 2] | 0;
       $Y12_i124 = $99 + ($partNr293_0625 * 96 & -1) + 8 | 0;
       $105$1 = HEAP32[$Y12_i124 + 4 >> 2] | 0;
       if (($104$1 | 0) < ($105$1 | 0) | ($104$1 | 0) == ($105$1 | 0) & (HEAP32[$Y_i123 >> 2] | 0) >>> 0 < (HEAP32[$Y12_i124 >> 2] | 0) >>> 0) {
        break;
       }
       $106$1 = HEAP32[$Y17_i127 + 4 >> 2] | 0;
       $Y19_i128 = $99 + ($partNr293_0625 * 96 & -1) + 24 | 0;
       $107$1 = HEAP32[$Y19_i128 + 4 >> 2] | 0;
       if (($106$1 | 0) > ($107$1 | 0) | ($106$1 | 0) == ($107$1 | 0) & (HEAP32[$Y17_i127 >> 2] | 0) >>> 0 > (HEAP32[$Y19_i128 >> 2] | 0) >>> 0) {
        break;
       }
       $109 = HEAP32[$99 + ($partNr293_0625 * 96 & -1) + 56 >> 2] | 0;
       $sub_ptr_div_i488 = ((HEAP32[$99 + ($partNr293_0625 * 96 & -1) + 60 >> 2] | 0) - $109 | 0) / 12 & -1;
       $111 = $17 + (HEAP32[(HEAP32[$16 >> 2] | 0) - 12 >> 2] | 0) | 0;
       if ($sub_ptr_div_i488 >>> 0 > 1) {
        $sub127 = $sub_ptr_div_i488 - 2 | 0;
        $__end__i_i133 = $109 + ($sub127 * 12 & -1) + 4 | 0;
        $__begin__i_i134 = $109 + ($sub127 * 12 & -1) | 0;
        $113 = HEAP32[$__begin__i_i134 >> 2] | 0;
        if ((HEAP32[$__end__i_i133 >> 2] | 0) == ($113 | 0)) {
         break;
        } else {
         $i_011_i135 = 0;
         $115 = $113;
        }
        do {
         __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($111, $115 + ($i_011_i135 * 12 & -1) | 0, 1) | 0;
         $i_011_i135 = $i_011_i135 + 1 | 0;
         $115 = HEAP32[$__begin__i_i134 >> 2] | 0;
        } while ($i_011_i135 >>> 0 < (((HEAP32[$__end__i_i133 >> 2] | 0) - $115 | 0) / 12 & -1) >>> 0);
       } else {
        $sub146 = $sub_ptr_div_i488 - 1 | 0;
        $__end__i_i150 = $109 + ($sub146 * 12 & -1) + 4 | 0;
        $__begin__i_i151 = $109 + ($sub146 * 12 & -1) | 0;
        $119 = HEAP32[$__begin__i_i151 >> 2] | 0;
        if ((HEAP32[$__end__i_i150 >> 2] | 0) == ($119 | 0)) {
         break;
        } else {
         $i_011_i152 = 0;
         $121 = $119;
        }
        do {
         __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($111, $121 + ($i_011_i152 * 12 & -1) | 0, 1) | 0;
         $i_011_i152 = $i_011_i152 + 1 | 0;
         $121 = HEAP32[$__begin__i_i151 >> 2] | 0;
        } while ($i_011_i152 >>> 0 < (((HEAP32[$__end__i_i150 >> 2] | 0) - $121 | 0) / 12 & -1) >>> 0);
       }
      }
     } while (0);
     $partNr293_0625 = $partNr293_0625 + 1 | 0;
     $99 = HEAP32[$__begin__i507 >> 2] | 0;
    } while ($partNr293_0625 >>> 0 < (((HEAP32[$__end__i506 >> 2] | 0) - $99 | 0) / 96 & -1) >>> 0);
   }
  } while (0);
  HEAP32[$__begin__i_i_i427 >> 2] = 0;
  HEAP32[$__end__i_i_i428 >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i434 >> 2] = 0;
  HEAP32[$__begin__i_i_i402 >> 2] = 0;
  HEAP32[$__end__i_i_i403 >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i409 >> 2] = 0;
  HEAP32[$__begin__i_i_i377 >> 2] = 0;
  HEAP32[$__end__i_i_i378 >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i384 >> 2] = 0;
  if ((HEAP8[$m_ExecuteLocked_i] & 1) == 0) {
   HEAP8[$m_ExecuteLocked_i] = 1;
   HEAP32[$m_SubjFillType_i >> 2] = 0;
   HEAP32[$m_ClipFillType_i >> 2] = 0;
   HEAP32[$m_ClipType_i >> 2] = 2;
   if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$18 >> 2] | 0) + 16 >> 2] & 63]($downskinClipper, 0) | 0) {
    __ZN10ClipperLib7Clipper11BuildResultERNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEE($downskinClipper, $downSkin);
   }
   HEAP8[$m_ExecuteLocked_i] = 0;
  }
  if ((HEAP8[$m_ExecuteLocked_i173] & 1) == 0) {
   HEAP8[$m_ExecuteLocked_i173] = 1;
   $131 = HEAP32[$__end__i_i_i403 >> 2] | 0;
   $132 = HEAP32[$__begin__i_i_i402 >> 2] | 0;
   if (($132 | 0) != ($131 | 0)) {
    $134 = $131;
    while (1) {
     $incdec_ptr_i_i_i_i_i178 = $134 - 12 | 0;
     HEAP32[$__end__i_i_i403 >> 2] = $incdec_ptr_i_i_i_i_i178;
     $135 = HEAP32[$incdec_ptr_i_i_i_i_i178 >> 2] | 0;
     $136 = $135;
     if (($135 | 0) == 0) {
      $137 = $incdec_ptr_i_i_i_i_i178;
     } else {
      $__end__i_i_i_i_i_i_i_i184 = $134 - 12 + 4 | 0;
      $138 = HEAP32[$__end__i_i_i_i_i_i_i_i184 >> 2] | 0;
      if (($135 | 0) != ($138 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i_i184 >> 2] = $138 + ((($138 - 16 + (-$136 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($135);
      $137 = HEAP32[$__end__i_i_i403 >> 2] | 0;
     }
     if (($132 | 0) == ($137 | 0)) {
      break;
     } else {
      $134 = $137;
     }
    }
   }
   HEAP32[$m_SubjFillType_i195 >> 2] = 0;
   HEAP32[$m_ClipFillType_i196 >> 2] = 0;
   HEAP32[$m_ClipType_i197 >> 2] = 2;
   if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$19 >> 2] | 0) + 16 >> 2] & 63]($upskinClipper, 0) | 0) {
    __ZN10ClipperLib7Clipper11BuildResultERNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEE($upskinClipper, $upSkin);
   }
   HEAP8[$m_ExecuteLocked_i173] = 0;
  }
  HEAP32[$__begin__i_i_i_i_i208 >> 2] = 0;
  HEAP32[$__end__i_i_i_i_i209 >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i_i_i210 >> 2] = 0;
  HEAP32[$m_MinimaList_i_i211 >> 2] = 0;
  HEAP32[$m_CurrentLM_i_i212 >> 2] = 0;
  HEAP32[$21 >> 2] = 11908;
  HEAP32[$20 >> 2] = 11948;
  _memset($23 | 0, 0, 36);
  _memset($24 | 0, 0, 17);
  HEAP8[$22] = 0;
  HEAP8[$m_ReverseOutput_i215] = 0;
  $add_ptr171 = $skinClipper + 76 | 0;
  $145 = HEAP32[$__begin__i_i_i427 >> 2] | 0;
  if ((HEAP32[$__end__i_i_i428 >> 2] | 0) == ($145 | 0)) {
   $vtable175 = 11908;
  } else {
   $i_011_i218 = 0;
   $147 = $145;
   do {
    __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($add_ptr171, $147 + ($i_011_i218 * 12 & -1) | 0, 0) | 0;
    $i_011_i218 = $i_011_i218 + 1 | 0;
    $147 = HEAP32[$__begin__i_i_i427 >> 2] | 0;
   } while ($i_011_i218 >>> 0 < (((HEAP32[$__end__i_i_i428 >> 2] | 0) - $147 | 0) / 12 & -1) >>> 0);
   $vtable175 = HEAP32[$25 >> 2] | 0;
  }
  $151 = $26 + (HEAP32[$vtable175 - 12 >> 2] | 0) | 0;
  $153 = HEAP32[$__begin__i_i_i402 >> 2] | 0;
  if ((HEAP32[$__end__i_i_i403 >> 2] | 0) != ($153 | 0)) {
   $i_011_i235 = 0;
   $155 = $153;
   do {
    __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($151, $155 + ($i_011_i235 * 12 & -1) | 0, 1) | 0;
    $i_011_i235 = $i_011_i235 + 1 | 0;
    $155 = HEAP32[$__begin__i_i_i402 >> 2] | 0;
   } while ($i_011_i235 >>> 0 < (((HEAP32[$__end__i_i_i403 >> 2] | 0) - $155 | 0) / 12 & -1) >>> 0);
  }
  if ((HEAP8[$m_ExecuteLocked_i250] & 1) == 0) {
   HEAP8[$m_ExecuteLocked_i250] = 1;
   $160 = HEAP32[$__end__i_i_i378 >> 2] | 0;
   $161 = HEAP32[$__begin__i_i_i377 >> 2] | 0;
   if (($161 | 0) != ($160 | 0)) {
    $163 = $160;
    while (1) {
     $incdec_ptr_i_i_i_i_i255 = $163 - 12 | 0;
     HEAP32[$__end__i_i_i378 >> 2] = $incdec_ptr_i_i_i_i_i255;
     $164 = HEAP32[$incdec_ptr_i_i_i_i_i255 >> 2] | 0;
     $165 = $164;
     if (($164 | 0) == 0) {
      $166 = $incdec_ptr_i_i_i_i_i255;
     } else {
      $__end__i_i_i_i_i_i_i_i261 = $163 - 12 + 4 | 0;
      $167 = HEAP32[$__end__i_i_i_i_i_i_i_i261 >> 2] | 0;
      if (($164 | 0) != ($167 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i_i261 >> 2] = $167 + ((($167 - 16 + (-$165 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($164);
      $166 = HEAP32[$__end__i_i_i378 >> 2] | 0;
     }
     if (($161 | 0) == ($166 | 0)) {
      break;
     } else {
      $163 = $166;
     }
    }
   }
   HEAP32[$m_SubjFillType_i272 >> 2] = 0;
   HEAP32[$m_ClipFillType_i273 >> 2] = 0;
   HEAP32[$m_ClipType_i274 >> 2] = 1;
   if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$27 >> 2] | 0) + 16 >> 2] & 63]($skinClipper, 0) | 0) {
    __ZN10ClipperLib7Clipper11BuildResultERNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEE($skinClipper, $result);
   }
   HEAP8[$m_ExecuteLocked_i250] = 0;
  }
  __ZN10ClipperLib7ClipperD2Ev($skinClipper, 12040);
  __ZN10ClipperLib11ClipperBaseD2Ev($28);
  $173 = HEAP32[$__end__i_i_i378 >> 2] | 0;
  $174 = HEAP32[$__begin__i_i_i377 >> 2] | 0;
  if (($173 | 0) == ($174 | 0)) {
   $203 = $173;
   $202 = $173;
  } else {
   $i_0648 = 0;
   $178 = $174;
   while (1) {
    if (+Math_abs(+(+__ZN10ClipperLib4AreaERKNSt3__16vectorINS_8IntPointENS0_9allocatorIS2_EEEE($178 + ($i_0648 * 12 & -1) | 0))) / 1.0e3 / 1.0e3 < 3.0) {
     $179 = HEAP32[$__begin__i_i_i377 >> 2] | 0;
     $add_ptr_i_i = $179 + ($i_0648 * 12 & -1) | 0;
     $add_ptr_i = $179 + (($i_0648 + 1 | 0) * 12 & -1) | 0;
     $180 = HEAP32[$__end__i_i_i378 >> 2] | 0;
     if (($add_ptr_i | 0) == ($180 | 0)) {
      $__result_addr_i_i_i_0_lcssa = $add_ptr_i_i;
      $183 = $add_ptr_i;
     } else {
      $__result_addr_i_i_i_0637 = $add_ptr_i_i;
      $__first_addr_i_i_i_0638 = $add_ptr_i;
      do {
       __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($__result_addr_i_i_i_0637, HEAP32[$__first_addr_i_i_i_0638 >> 2] | 0, HEAP32[$__first_addr_i_i_i_0638 + 4 >> 2] | 0);
       $__first_addr_i_i_i_0638 = $__first_addr_i_i_i_0638 + 12 | 0;
       $__result_addr_i_i_i_0637 = $__result_addr_i_i_i_0637 + 12 | 0;
      } while (($__first_addr_i_i_i_0638 | 0) != ($180 | 0));
      $__result_addr_i_i_i_0_lcssa = $__result_addr_i_i_i_0637;
      $183 = HEAP32[$__end__i_i_i378 >> 2] | 0;
     }
     if (($__result_addr_i_i_i_0_lcssa | 0) == ($183 | 0)) {
      $193 = $183;
     } else {
      $184 = $183;
      while (1) {
       $incdec_ptr_i_i_i_i = $184 - 12 | 0;
       HEAP32[$__end__i_i_i378 >> 2] = $incdec_ptr_i_i_i_i;
       $185 = HEAP32[$incdec_ptr_i_i_i_i >> 2] | 0;
       $186 = $185;
       if (($185 | 0) == 0) {
        $187 = $incdec_ptr_i_i_i_i;
       } else {
        $__end__i_i_i_i_i_i294 = $184 - 12 + 4 | 0;
        $188 = HEAP32[$__end__i_i_i_i_i_i294 >> 2] | 0;
        if (($185 | 0) != ($188 | 0)) {
         HEAP32[$__end__i_i_i_i_i_i294 >> 2] = $188 + ((($188 - 16 + (-$186 | 0) | 0) >>> 4 ^ -1) << 4);
        }
        __ZdlPv($185);
        $187 = HEAP32[$__end__i_i_i378 >> 2] | 0;
       }
       if (($__result_addr_i_i_i_0_lcssa | 0) == ($187 | 0)) {
        $193 = $__result_addr_i_i_i_0_lcssa;
        break;
       } else {
        $184 = $187;
       }
      }
     }
     $i_1 = $i_0648 - 1 | 0;
     $200 = $193;
    } else {
     $i_1 = $i_0648;
     $200 = HEAP32[$__end__i_i_i378 >> 2] | 0;
    }
    $inc203 = $i_1 + 1 | 0;
    $201 = HEAP32[$__begin__i_i_i377 >> 2] | 0;
    if ($inc203 >>> 0 < (($200 - $201 | 0) / 12 & -1) >>> 0) {
     $i_0648 = $inc203;
     $178 = $201;
    } else {
     $203 = $200;
     $202 = $201;
     break;
    }
   }
  }
  HEAP32[$__begin__i_i_i_i_i305 >> 2] = 0;
  HEAP32[$__end__i_i_i_i_i306 >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i_i_i307 >> 2] = 0;
  HEAP32[$m_MinimaList_i_i308 >> 2] = 0;
  HEAP32[$m_CurrentLM_i_i309 >> 2] = 0;
  HEAP32[$30 >> 2] = 11908;
  HEAP32[$29 >> 2] = 11948;
  _memset($32 | 0, 0, 36);
  _memset($33 | 0, 0, 17);
  HEAP8[$31] = 0;
  HEAP8[$m_ReverseOutput_i312] = 0;
  $add_ptr210 = $sparseClipper + 76 | 0;
  $205 = HEAP32[$__begin__i_i_i >> 2] | 0;
  if ((HEAP32[$__end__i_i_i >> 2] | 0) == ($205 | 0)) {
   $vtable214 = 11908;
   $211 = $203;
   $210 = $202;
  } else {
   $i_011_i315 = 0;
   $207 = $205;
   do {
    __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($add_ptr210, $207 + ($i_011_i315 * 12 & -1) | 0, 0) | 0;
    $i_011_i315 = $i_011_i315 + 1 | 0;
    $207 = HEAP32[$__begin__i_i_i >> 2] | 0;
   } while ($i_011_i315 >>> 0 < (((HEAP32[$__end__i_i_i >> 2] | 0) - $207 | 0) / 12 & -1) >>> 0);
   $vtable214 = HEAP32[$34 >> 2] | 0;
   $211 = HEAP32[$__end__i_i_i378 >> 2] | 0;
   $210 = HEAP32[$__begin__i_i_i377 >> 2] | 0;
  }
  $213 = $35 + (HEAP32[$vtable214 - 12 >> 2] | 0) | 0;
  if (($211 | 0) != ($210 | 0)) {
   $i_011_i332 = 0;
   $215 = $210;
   do {
    __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($213, $215 + ($i_011_i332 * 12 & -1) | 0, 1) | 0;
    $i_011_i332 = $i_011_i332 + 1 | 0;
    $215 = HEAP32[$__begin__i_i_i377 >> 2] | 0;
   } while ($i_011_i332 >>> 0 < (((HEAP32[$__end__i_i_i378 >> 2] | 0) - $215 | 0) / 12 & -1) >>> 0);
  }
  $sparseOutline = $40 + ($partNr_0862 * 96 & -1) + 80 | 0;
  if ((HEAP8[$m_ExecuteLocked_i347] & 1) == 0) {
   HEAP8[$m_ExecuteLocked_i347] = 1;
   $__end__i_i_i349 = $40 + ($partNr_0862 * 96 & -1) + 84 | 0;
   $220 = HEAP32[$__end__i_i_i349 >> 2] | 0;
   $221 = HEAP32[$sparseOutline >> 2] | 0;
   if (($221 | 0) != ($220 | 0)) {
    $223 = $220;
    while (1) {
     $incdec_ptr_i_i_i_i_i352 = $223 - 12 | 0;
     HEAP32[$__end__i_i_i349 >> 2] = $incdec_ptr_i_i_i_i_i352;
     $224 = HEAP32[$incdec_ptr_i_i_i_i_i352 >> 2] | 0;
     $225 = $224;
     if (($224 | 0) == 0) {
      $226 = $incdec_ptr_i_i_i_i_i352;
     } else {
      $__end__i_i_i_i_i_i_i_i358 = $223 - 12 + 4 | 0;
      $227 = HEAP32[$__end__i_i_i_i_i_i_i_i358 >> 2] | 0;
      if (($224 | 0) != ($227 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i_i358 >> 2] = $227 + ((($227 - 16 + (-$225 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($224);
      $226 = HEAP32[$__end__i_i_i349 >> 2] | 0;
     }
     if (($221 | 0) == ($226 | 0)) {
      break;
     } else {
      $223 = $226;
     }
    }
   }
   HEAP32[$m_SubjFillType_i369 >> 2] = 0;
   HEAP32[$m_ClipFillType_i370 >> 2] = 0;
   HEAP32[$m_ClipType_i371 >> 2] = 2;
   if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$36 >> 2] | 0) + 16 >> 2] & 63]($sparseClipper, 0) | 0) {
    __ZN10ClipperLib7Clipper11BuildResultERNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEE($sparseClipper, $sparseOutline);
   }
   HEAP8[$m_ExecuteLocked_i347] = 0;
  }
  __ZN10ClipperLib7ClipperD2Ev($sparseClipper, 12040);
  __ZN10ClipperLib11ClipperBaseD2Ev($37);
  $235 = HEAP32[$__begin__i_i_i377 >> 2] | 0;
  if (($235 | 0) != 0) {
   $236 = HEAP32[$__end__i_i_i378 >> 2] | 0;
   if (($235 | 0) == ($236 | 0)) {
    $246 = $235;
   } else {
    $237 = $236;
    while (1) {
     $incdec_ptr_i_i_i_i_i_i395 = $237 - 12 | 0;
     HEAP32[$__end__i_i_i378 >> 2] = $incdec_ptr_i_i_i_i_i_i395;
     $238 = HEAP32[$incdec_ptr_i_i_i_i_i_i395 >> 2] | 0;
     $239 = $238;
     if (($238 | 0) == 0) {
      $240 = $incdec_ptr_i_i_i_i_i_i395;
     } else {
      $__end__i_i_i_i_i_i_i_i_i401 = $237 - 12 + 4 | 0;
      $241 = HEAP32[$__end__i_i_i_i_i_i_i_i_i401 >> 2] | 0;
      if (($238 | 0) != ($241 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i_i_i401 >> 2] = $241 + ((($241 - 16 + (-$239 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($238);
      $240 = HEAP32[$__end__i_i_i378 >> 2] | 0;
     }
     if (($235 | 0) == ($240 | 0)) {
      break;
     } else {
      $237 = $240;
     }
    }
    $246 = HEAP32[$__begin__i_i_i377 >> 2] | 0;
   }
   __ZdlPv($246);
  }
  $248 = HEAP32[$__begin__i_i_i402 >> 2] | 0;
  if (($248 | 0) != 0) {
   $249 = HEAP32[$__end__i_i_i403 >> 2] | 0;
   if (($248 | 0) == ($249 | 0)) {
    $259 = $248;
   } else {
    $250 = $249;
    while (1) {
     $incdec_ptr_i_i_i_i_i_i421 = $250 - 12 | 0;
     HEAP32[$__end__i_i_i403 >> 2] = $incdec_ptr_i_i_i_i_i_i421;
     $251 = HEAP32[$incdec_ptr_i_i_i_i_i_i421 >> 2] | 0;
     $252 = $251;
     if (($251 | 0) == 0) {
      $253 = $incdec_ptr_i_i_i_i_i_i421;
     } else {
      $__end__i_i_i_i_i_i_i_i_i427 = $250 - 12 + 4 | 0;
      $254 = HEAP32[$__end__i_i_i_i_i_i_i_i_i427 >> 2] | 0;
      if (($251 | 0) != ($254 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i_i_i427 >> 2] = $254 + ((($254 - 16 + (-$252 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($251);
      $253 = HEAP32[$__end__i_i_i403 >> 2] | 0;
     }
     if (($248 | 0) == ($253 | 0)) {
      break;
     } else {
      $250 = $253;
     }
    }
    $259 = HEAP32[$__begin__i_i_i402 >> 2] | 0;
   }
   __ZdlPv($259);
  }
  $261 = HEAP32[$__begin__i_i_i427 >> 2] | 0;
  if (($261 | 0) != 0) {
   $262 = HEAP32[$__end__i_i_i428 >> 2] | 0;
   if (($261 | 0) == ($262 | 0)) {
    $272 = $261;
   } else {
    $263 = $262;
    while (1) {
     $incdec_ptr_i_i_i_i_i_i447 = $263 - 12 | 0;
     HEAP32[$__end__i_i_i428 >> 2] = $incdec_ptr_i_i_i_i_i_i447;
     $264 = HEAP32[$incdec_ptr_i_i_i_i_i_i447 >> 2] | 0;
     $265 = $264;
     if (($264 | 0) == 0) {
      $266 = $incdec_ptr_i_i_i_i_i_i447;
     } else {
      $__end__i_i_i_i_i_i_i_i_i453 = $263 - 12 + 4 | 0;
      $267 = HEAP32[$__end__i_i_i_i_i_i_i_i_i453 >> 2] | 0;
      if (($264 | 0) != ($267 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i_i_i453 >> 2] = $267 + ((($267 - 16 + (-$265 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($264);
      $266 = HEAP32[$__end__i_i_i428 >> 2] | 0;
     }
     if (($261 | 0) == ($266 | 0)) {
      break;
     } else {
      $263 = $266;
     }
    }
    $272 = HEAP32[$__begin__i_i_i427 >> 2] | 0;
   }
   __ZdlPv($272);
  }
  __ZN10ClipperLib7ClipperD2Ev($upskinClipper, 12040);
  __ZN10ClipperLib11ClipperBaseD2Ev($38);
  __ZN10ClipperLib7ClipperD2Ev($downskinClipper, 12040);
  __ZN10ClipperLib11ClipperBaseD2Ev($39);
  $278 = HEAP32[$__begin__i_i_i >> 2] | 0;
  if (($278 | 0) != 0) {
   $279 = HEAP32[$__end__i_i_i >> 2] | 0;
   if (($278 | 0) == ($279 | 0)) {
    $289 = $278;
   } else {
    $280 = $279;
    while (1) {
     $incdec_ptr_i_i_i_i_i_i487 = $280 - 12 | 0;
     HEAP32[$__end__i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i487;
     $281 = HEAP32[$incdec_ptr_i_i_i_i_i_i487 >> 2] | 0;
     $282 = $281;
     if (($281 | 0) == 0) {
      $283 = $incdec_ptr_i_i_i_i_i_i487;
     } else {
      $__end__i_i_i_i_i_i_i_i_i493 = $280 - 12 + 4 | 0;
      $284 = HEAP32[$__end__i_i_i_i_i_i_i_i_i493 >> 2] | 0;
      if (($281 | 0) != ($284 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i_i_i493 >> 2] = $284 + ((($284 - 16 + (-$282 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($281);
      $283 = HEAP32[$__end__i_i_i >> 2] | 0;
     }
     if (($278 | 0) == ($283 | 0)) {
      break;
     } else {
      $280 = $283;
     }
    }
    $289 = HEAP32[$__begin__i_i_i >> 2] | 0;
   }
   __ZdlPv($289);
  }
  $partNr_0862 = $partNr_0862 + 1 | 0;
  $40 = HEAP32[$__begin__i246 >> 2] | 0;
 } while ($partNr_0862 >>> 0 < (((HEAP32[$__end__i >> 2] | 0) - $40 | 0) / 96 & -1) >>> 0);
 STACKTOP = __stackBase__;
 return;
}
function __Z15compare_int64_tPKvS0_($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $0 = 0, $2 = 0, $sub$0 = 0, $sub$1 = 0, $$etemp$4$1 = 0, $$etemp$5$1 = 0, $retval_0 = 0;
 $0 = $a;
 $2 = $b;
 $sub$0 = _i64Subtract(HEAP32[$0 >> 2] | 0, HEAP32[$0 + 4 >> 2] | 0, HEAP32[$2 >> 2] | 0, HEAP32[$2 + 4 >> 2] | 0) | 0;
 $sub$1 = tempRet0;
 $$etemp$4$1 = 0;
 if (($sub$1 | 0) < ($$etemp$4$1 | 0) | ($sub$1 | 0) == ($$etemp$4$1 | 0) & $sub$0 >>> 0 < 0 >>> 0) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $$etemp$5$1 = 0;
 $retval_0 = (($sub$1 | 0) > ($$etemp$5$1 | 0) | ($sub$1 | 0) == ($$etemp$5$1 | 0) & $sub$0 >>> 0 > 0 >>> 0) & 1;
 return $retval_0 | 0;
}
function __Z18generateLineInfillNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEERS7_iiid($outline, $result, $extrusionWidth, $lineSpacing, $infillOverlap, $rotation) {
 $outline = $outline | 0;
 $result = $result | 0;
 $extrusionWidth = $extrusionWidth | 0;
 $lineSpacing = $lineSpacing | 0;
 $infillOverlap = $infillOverlap | 0;
 $rotation = +$rotation;
 var $boundary = 0, $agg_tmp = 0, $ref_tmp = 0, $p = 0, $ref_tmp119 = 0, $ref_tmp128 = 0, $mul_i_i = 0.0, $call_i_i = 0.0, $call2_i_i = 0.0, $sub_i_i = 0.0, $__end__i_i = 0, $0 = 0, $__begin__i_i = 0, $1 = 0, $3 = 0, $4 = 0, $i_029_i = 0, $6 = 0, $7 = 0, $j_023_i = 0, $agg_tmp_sroa_0_0__idx_i = 0, $agg_tmp_sroa_1_8__idx15_i = 0, $conv_i_i = 0.0, $conv2_i_i = 0.0, $add_i_i = 0.0, $conv6_i_i$1 = 0, $add17_i_i = 0.0, $conv18_i_i$1 = 0, $8 = 0, $11 = 0, $12 = 0, $inc12_i = 0, $__begin__i_i_i67 = 0, $13 = 0, $__end__i_i_i_i_i_i = 0, $14 = 0, $15 = 0, $incdec_ptr_i_i_i_i_i_i = 0, $16 = 0, $17 = 0, $18 = 0, $__end__i_i_i_i_i_i_i_i_i = 0, $19 = 0, $_pre3_i_i_i = 0, $24 = 0, $X = 0, $X2 = 0, $27$0 = 0, $27$1 = 0, $sub3 = 0, $sub$0 = 0, $add$0 = 0, $conv5$0 = 0, $conv5$1 = 0, $div6$0 = 0, $conv7 = 0, $28$0 = 0, $29 = 0, $31$0 = 0, $call = 0, $38 = 0, $arrayctor_end = 0, $arrayctor_cur = 0, $39 = 0, $40 = 0, $_pre205$0 = 0, $_pre205$1 = 0, $div98_pre = 0, $conv6061$0 = 0, $conv6061$1 = 0, $42 = 0, $43 = 0, $polyNr_0196 = 0, $44 = 0, $45 = 0, $sub16 = 0, $p1_sroa_1_8__idx38 = 0, $p1_sroa_0_0__idx = 0, $46 = 0, $p1_sroa_1_0190$0 = 0, $p1_sroa_1_0190$1 = 0, $p1_sroa_0_0189$0 = 0, $p1_sroa_0_0189$1 = 0, $i_0188 = 0, $p0_sroa_0_0__idx26 = 0, $p0_sroa_0_0_copyload27$0 = 0, $p0_sroa_0_0_copyload27$1 = 0, $p0_sroa_1_8__idx30 = 0, $p0_sroa_1_8_copyload31$0 = 0, $p0_sroa_1_8_copyload31$1 = 0, $sub28$0 = 0, $div30$0 = 0, $conv31 = 0, $sub35$0 = 0, $div37$0 = 0, $conv38 = 0, $cmp43 = 0, $p1_sroa_0_0_p0_sroa_0_0_copyload27$0 = 0, $p1_sroa_0_0_p0_sroa_0_0_copyload27$1 = 0, $p0_sroa_0_0_copyload27_p1_sroa_0_0$0 = 0, $p0_sroa_0_0_copyload27_p1_sroa_0_0$1 = 0, $cmp46 = 0, $idx1_0 = 0, $sub74$0 = 0, $sub74$1 = 0, $sub81$0 = 0, $sub81$1 = 0, $idx_0180 = 0, $add58$0 = 0, $add61$0 = 0, $sext$1 = 0, $conv63$0 = 0, $conv63$1 = 0, $sub77$0 = 0, $mul78$0 = 0, $div82$0 = 0, $add83$0 = 0, $sext62$1 = 0, $conv85$0 = 0, $conv85$1 = 0, $__end__i288 = 0, $63 = 0, $65 = 0, $inc87 = 0, $66 = 0, $68 = 0, $69 = 0, $70 = 0, $inc90 = 0, $add100$0 = 0, $add100$1 = 0, $71$0 = 0, $71$1 = 0, $__begin__i_i_i332 = 0, $__end__i_i_i333 = 0, $__first__i_i_i_i_i_i339 = 0, $X_i_i_i = 0, $Y_i_i_i = 0, $X_i_i_i122 = 0, $Y_i_i_i123 = 0, $__end__i158 = 0, $__first__i_i_i_i = 0, $72 = 0, $x95_0179$0 = 0, $x95_0179$1 = 0, $idx93_0178 = 0, $__begin__i309 = 0, $73 = 0, $__end__i350 = 0, $77 = 0, $conv_i = 0.0, $mul_i = 0.0, $mul11_i = 0.0, $78 = 0, $add11359176 = 0, $i111_0175 = 0, $arrayidx_i314 = 0, $conv2_i = 0.0, $add_i = 0.0, $conv6_i$1 = 0, $add17_i = 0.0, $conv18_i$1 = 0, $_pre207 = 0, $_pre208 = 0, $arrayidx_i230 = 0, $conv2_i111 = 0.0, $add_i114 = 0.0, $conv6_i115$1 = 0, $add17_i120 = 0.0, $conv18_i121$1 = 0, $81 = 0, $82 = 0, $__begin__i_i137 = 0, $__end__i_i138 = 0, $__first__i_i_i_i_i = 0, $sub_ptr_sub_i_i141 = 0, $sub_ptr_div_i_i142 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $__first_addr_04_i_i = 0, $90 = 0, $91 = 0, $92 = 0, $101 = 0, $102 = 0, $103 = 0, $add145$0 = 0, $add145$1 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 104 | 0;
 $boundary = __stackBase__ | 0;
 $agg_tmp = __stackBase__ + 32 | 0;
 $ref_tmp = __stackBase__ + 48 | 0;
 $p = __stackBase__ + 56 | 0;
 $ref_tmp119 = __stackBase__ + 72 | 0;
 $ref_tmp128 = __stackBase__ + 88 | 0;
 __ZN10ClipperLib14OffsetPolygonsERKNSt3__16vectorINS1_INS_8IntPointENS0_9allocatorIS2_EEEENS3_IS5_EEEERS7_dNS_8JoinTypeEdb($outline, $outline, +((Math_imul($infillOverlap, $extrusionWidth) | 0) / 100 & -1 | 0), 0, 2.0, 0);
 $mul_i_i = $rotation / 180.0 * 3.141592653589793;
 $call_i_i = +Math_cos(+$mul_i_i);
 $call2_i_i = +Math_sin(+$mul_i_i);
 $sub_i_i = -0.0 - $call2_i_i;
 $__end__i_i = $outline + 4 | 0;
 $0 = HEAP32[$__end__i_i >> 2] | 0;
 $__begin__i_i = $outline | 0;
 $1 = HEAP32[$__begin__i_i >> 2] | 0;
 if (($0 | 0) != ($1 | 0)) {
  $i_029_i = 0;
  $4 = $1;
  $3 = $0;
  while (1) {
   $6 = HEAP32[$4 + ($i_029_i * 12 & -1) >> 2] | 0;
   if ((HEAP32[$4 + ($i_029_i * 12 & -1) + 4 >> 2] | 0) == ($6 | 0)) {
    $12 = $3;
    $11 = $4;
   } else {
    $j_023_i = 0;
    $7 = $6;
    do {
     $agg_tmp_sroa_0_0__idx_i = $7 + ($j_023_i << 4) | 0;
     $agg_tmp_sroa_1_8__idx15_i = $7 + ($j_023_i << 4) + 8 | 0;
     $conv_i_i = +((HEAP32[$agg_tmp_sroa_0_0__idx_i >> 2] | 0) >>> 0) + +(HEAP32[$agg_tmp_sroa_0_0__idx_i + 4 >> 2] | 0) * 4294967296.0;
     $conv2_i_i = +((HEAP32[$agg_tmp_sroa_1_8__idx15_i >> 2] | 0) >>> 0) + +(HEAP32[$agg_tmp_sroa_1_8__idx15_i + 4 >> 2] | 0) * 4294967296.0;
     $add_i_i = $call_i_i * $conv_i_i + $conv2_i_i * $sub_i_i;
     $conv6_i_i$1 = (Math_min(+Math_floor($add_i_i / 4294967296.0), 4294967295.0) | 0) >>> 0;
     $add17_i_i = $call2_i_i * $conv_i_i + $call_i_i * $conv2_i_i;
     $conv18_i_i$1 = (Math_min(+Math_floor($add17_i_i / 4294967296.0), 4294967295.0) | 0) >>> 0;
     HEAP32[$agg_tmp_sroa_0_0__idx_i >> 2] = ~~$add_i_i >>> 0;
     HEAP32[$agg_tmp_sroa_0_0__idx_i + 4 >> 2] = $conv6_i_i$1;
     HEAP32[$agg_tmp_sroa_1_8__idx15_i >> 2] = ~~$add17_i_i >>> 0;
     HEAP32[$agg_tmp_sroa_1_8__idx15_i + 4 >> 2] = $conv18_i_i$1;
     $j_023_i = $j_023_i + 1 | 0;
     $8 = HEAP32[$__begin__i_i >> 2] | 0;
     $7 = HEAP32[$8 + ($i_029_i * 12 & -1) >> 2] | 0;
    } while ($j_023_i >>> 0 < (HEAP32[$8 + ($i_029_i * 12 & -1) + 4 >> 2] | 0) - $7 >> 4 >>> 0);
    $12 = HEAP32[$__end__i_i >> 2] | 0;
    $11 = $8;
   }
   $inc12_i = $i_029_i + 1 | 0;
   if ($inc12_i >>> 0 < (($12 - $11 | 0) / 12 & -1) >>> 0) {
    $i_029_i = $inc12_i;
    $4 = $11;
    $3 = $12;
   } else {
    break;
   }
  }
 }
 __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($agg_tmp, $outline);
 __ZN4AABBC2ENSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEE($boundary, $agg_tmp);
 $__begin__i_i_i67 = $agg_tmp | 0;
 $13 = HEAP32[$__begin__i_i_i67 >> 2] | 0;
 if (($13 | 0) != 0) {
  $__end__i_i_i_i_i_i = $agg_tmp + 4 | 0;
  $14 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
  if (($13 | 0) == ($14 | 0)) {
   $24 = $13;
  } else {
   $15 = $14;
   while (1) {
    $incdec_ptr_i_i_i_i_i_i = $15 - 12 | 0;
    HEAP32[$__end__i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i;
    $16 = HEAP32[$incdec_ptr_i_i_i_i_i_i >> 2] | 0;
    $17 = $16;
    if (($16 | 0) == 0) {
     $18 = $incdec_ptr_i_i_i_i_i_i;
    } else {
     $__end__i_i_i_i_i_i_i_i_i = $15 - 12 + 4 | 0;
     $19 = HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] | 0;
     if (($16 | 0) == ($19 | 0)) {
      $_pre3_i_i_i = $incdec_ptr_i_i_i_i_i_i;
     } else {
      HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] = $19 + ((($19 - 16 + (-$17 | 0) | 0) >>> 4 ^ -1) << 4);
      $_pre3_i_i_i = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
     }
     __ZdlPv($16);
     $18 = $_pre3_i_i_i;
    }
    if (($13 | 0) == ($18 | 0)) {
     break;
    } else {
     $15 = $18;
    }
   }
   $24 = HEAP32[$__begin__i_i_i67 >> 2] | 0;
  }
  __ZdlPv($24);
 }
 $X = $boundary + 16 | 0;
 $X2 = $boundary | 0;
 $27$0 = HEAP32[$X2 >> 2] | 0;
 $27$1 = HEAP32[$X2 + 4 >> 2] | 0;
 $sub3 = $lineSpacing - 1 | 0;
 $sub$0 = _i64Add(HEAP32[$X >> 2] | 0, HEAP32[$X + 4 >> 2] | 0, $sub3, ($sub3 | 0) < 0 ? -1 : 0) | 0;
 $add$0 = _i64Subtract($sub$0, tempRet0, $27$0, $27$1) | 0;
 $conv5$0 = $lineSpacing;
 $conv5$1 = ($lineSpacing | 0) < 0 ? -1 : 0;
 $div6$0 = ___divdi3($add$0, tempRet0, $conv5$0, $conv5$1) | 0;
 $conv7 = $div6$0;
 $28$0 = _llvm_umul_with_overflow_i32($conv7 | 0, 12) | 0;
 $29 = tempRet0;
 $31$0 = _llvm_uadd_with_overflow_i32($28$0 | 0, 4) | 0;
 $call = __Znaj($29 | tempRet0 ? -1 : $31$0) | 0;
 HEAP32[$call >> 2] = $conv7;
 $38 = $call + 4 | 0;
 if (($conv7 | 0) != 0) {
  $arrayctor_end = $38 + ($conv7 * 12 & -1) | 0;
  $arrayctor_cur = $38;
  do {
   HEAP32[$arrayctor_cur >> 2] = 0;
   HEAP32[$arrayctor_cur + 4 >> 2] = 0;
   HEAP32[$arrayctor_cur + 8 >> 2] = 0;
   $arrayctor_cur = $arrayctor_cur + 12 | 0;
  } while (($arrayctor_cur | 0) != ($arrayctor_end | 0));
 }
 $39 = HEAP32[$__end__i_i >> 2] | 0;
 $40 = HEAP32[$__begin__i_i >> 2] | 0;
 $_pre205$0 = HEAP32[$X2 >> 2] | 0;
 $_pre205$1 = HEAP32[$X2 + 4 >> 2] | 0;
 $div98_pre = ($lineSpacing | 0) / 2 & -1;
 if (($39 | 0) != ($40 | 0)) {
  $conv6061$0 = $div98_pre;
  $conv6061$1 = 0;
  $polyNr_0196 = 0;
  $43 = $40;
  $42 = $39;
  while (1) {
   $44 = HEAP32[$43 + ($polyNr_0196 * 12 & -1) + 4 >> 2] | 0;
   $45 = HEAP32[$43 + ($polyNr_0196 * 12 & -1) >> 2] | 0;
   $sub16 = ($44 - $45 >> 4) - 1 | 0;
   if (($44 | 0) == ($45 | 0)) {
    $70 = $42;
    $69 = $43;
   } else {
    $p1_sroa_1_8__idx38 = $45 + ($sub16 << 4) + 8 | 0;
    $p1_sroa_0_0__idx = $45 + ($sub16 << 4) | 0;
    $i_0188 = 0;
    $p1_sroa_0_0189$1 = HEAP32[$p1_sroa_0_0__idx + 4 >> 2] | 0;
    $p1_sroa_0_0189$0 = HEAP32[$p1_sroa_0_0__idx >> 2] | 0;
    $p1_sroa_1_0190$1 = HEAP32[$p1_sroa_1_8__idx38 + 4 >> 2] | 0;
    $p1_sroa_1_0190$0 = HEAP32[$p1_sroa_1_8__idx38 >> 2] | 0;
    $46 = $45;
    while (1) {
     $p0_sroa_0_0__idx26 = $46 + ($i_0188 << 4) | 0;
     $p0_sroa_0_0_copyload27$0 = HEAP32[$p0_sroa_0_0__idx26 >> 2] | 0;
     $p0_sroa_0_0_copyload27$1 = HEAP32[$p0_sroa_0_0__idx26 + 4 >> 2] | 0;
     $p0_sroa_1_8__idx30 = $46 + ($i_0188 << 4) + 8 | 0;
     $p0_sroa_1_8_copyload31$0 = HEAP32[$p0_sroa_1_8__idx30 >> 2] | 0;
     $p0_sroa_1_8_copyload31$1 = HEAP32[$p0_sroa_1_8__idx30 + 4 >> 2] | 0;
     $sub28$0 = _i64Subtract($p0_sroa_0_0_copyload27$0, $p0_sroa_0_0_copyload27$1, $_pre205$0, $_pre205$1) | 0;
     $div30$0 = ___divdi3($sub28$0, tempRet0, $conv5$0, $conv5$1) | 0;
     $conv31 = $div30$0;
     $sub35$0 = _i64Subtract($p1_sroa_0_0189$0, $p1_sroa_0_0189$1, $_pre205$0, $_pre205$1) | 0;
     $div37$0 = ___divdi3($sub35$0, tempRet0, $conv5$0, $conv5$1) | 0;
     $conv38 = $div37$0;
     $cmp43 = ($p0_sroa_0_0_copyload27$1 | 0) > ($p1_sroa_0_0189$1 | 0) | ($p0_sroa_0_0_copyload27$1 | 0) == ($p1_sroa_0_0189$1 | 0) & $p0_sroa_0_0_copyload27$0 >>> 0 > $p1_sroa_0_0189$0 >>> 0;
     $p1_sroa_0_0_p0_sroa_0_0_copyload27$0 = $cmp43 ? $p1_sroa_0_0189$0 : $p0_sroa_0_0_copyload27$0;
     $p1_sroa_0_0_p0_sroa_0_0_copyload27$1 = $cmp43 ? $p1_sroa_0_0189$1 : $p0_sroa_0_0_copyload27$1;
     $p0_sroa_0_0_copyload27_p1_sroa_0_0$0 = $cmp43 ? $p0_sroa_0_0_copyload27$0 : $p1_sroa_0_0189$0;
     $p0_sroa_0_0_copyload27_p1_sroa_0_0$1 = $cmp43 ? $p0_sroa_0_0_copyload27$1 : $p1_sroa_0_0189$1;
     $cmp46 = ($conv31 | 0) > ($conv38 | 0);
     $idx1_0 = $cmp46 ? $conv31 : $conv38;
     $sub74$0 = _i64Subtract($p1_sroa_1_0190$0, $p1_sroa_1_0190$1, $p0_sroa_1_8_copyload31$0, $p0_sroa_1_8_copyload31$1) | 0;
     $sub74$1 = tempRet0;
     $sub81$0 = _i64Subtract($p1_sroa_0_0189$0, $p1_sroa_0_0189$1, $p0_sroa_0_0_copyload27$0, $p0_sroa_0_0_copyload27$1) | 0;
     $sub81$1 = tempRet0;
     $idx_0180 = $cmp46 ? $conv38 : $conv31;
     do {
      $add58$0 = _i64Add($_pre205$0, $_pre205$1, Math_imul($idx_0180, $lineSpacing) | 0, 0) | 0;
      $add61$0 = _i64Add($add58$0, tempRet0, $conv6061$0, $conv6061$1) | 0;
      $sext$1 = $add61$0;
      $conv63$0 = $sext$1;
      $conv63$1 = ($sext$1 | 0) < 0 ? -1 : 0;
      do {
       if (($conv63$1 | 0) >= ($p1_sroa_0_0_p0_sroa_0_0_copyload27$1 | 0) & (($conv63$1 | 0) > ($p1_sroa_0_0_p0_sroa_0_0_copyload27$1 | 0) | $conv63$0 >>> 0 >= $p1_sroa_0_0_p0_sroa_0_0_copyload27$0 >>> 0) & (($conv63$1 | 0) < ($p0_sroa_0_0_copyload27_p1_sroa_0_0$1 | 0) | ($conv63$1 | 0) == ($p0_sroa_0_0_copyload27_p1_sroa_0_0$1 | 0) & $conv63$0 >>> 0 < $p0_sroa_0_0_copyload27_p1_sroa_0_0$0 >>> 0)) {
        $sub77$0 = _i64Subtract($conv63$0, $conv63$1, $p0_sroa_0_0_copyload27$0, $p0_sroa_0_0_copyload27$1) | 0;
        $mul78$0 = ___muldi3($sub77$0, tempRet0, $sub74$0, $sub74$1) | 0;
        $div82$0 = ___divdi3($mul78$0, tempRet0, $sub81$0, $sub81$1) | 0;
        $add83$0 = _i64Add($div82$0, tempRet0, $p0_sroa_1_8_copyload31$0, $p0_sroa_1_8_copyload31$1) | 0;
        $sext62$1 = $add83$0;
        $conv85$0 = $sext62$1;
        $conv85$1 = ($sext62$1 | 0) < 0 ? -1 : 0;
        HEAP32[$ref_tmp >> 2] = $conv85$0;
        HEAP32[$ref_tmp + 4 >> 2] = $conv85$1;
        $__end__i288 = $38 + ($idx_0180 * 12 & -1) + 4 | 0;
        $63 = HEAP32[$__end__i288 >> 2] | 0;
        if (($63 | 0) == (HEAP32[$38 + ($idx_0180 * 12 & -1) + 8 >> 2] | 0)) {
         __ZNSt3__16vectorIxNS_9allocatorIxEEE21__push_back_slow_pathIKxEEvRT_($38 + ($idx_0180 * 12 & -1) | 0, $ref_tmp);
         break;
        }
        if (($63 | 0) == 0) {
         $65 = 0;
        } else {
         HEAP32[$63 >> 2] = $conv85$0;
         HEAP32[$63 + 4 >> 2] = $conv85$1;
         $65 = HEAP32[$__end__i288 >> 2] | 0;
        }
        HEAP32[$__end__i288 >> 2] = $65 + 8;
       }
      } while (0);
      $idx_0180 = $idx_0180 + 1 | 0;
     } while (($idx_0180 | 0) <= ($idx1_0 | 0));
     $inc87 = $i_0188 + 1 | 0;
     $66 = HEAP32[$__begin__i_i >> 2] | 0;
     $68 = HEAP32[$66 + ($polyNr_0196 * 12 & -1) >> 2] | 0;
     if ($inc87 >>> 0 < (HEAP32[$66 + ($polyNr_0196 * 12 & -1) + 4 >> 2] | 0) - $68 >> 4 >>> 0) {
      $i_0188 = $inc87;
      $p1_sroa_0_0189$1 = $p0_sroa_0_0_copyload27$1;
      $p1_sroa_0_0189$0 = $p0_sroa_0_0_copyload27$0;
      $p1_sroa_1_0190$1 = $p0_sroa_1_8_copyload31$1;
      $p1_sroa_1_0190$0 = $p0_sroa_1_8_copyload31$0;
      $46 = $68;
     } else {
      break;
     }
    }
    $70 = HEAP32[$__end__i_i >> 2] | 0;
    $69 = $66;
   }
   $inc90 = $polyNr_0196 + 1 | 0;
   if ($inc90 >>> 0 < (($70 - $69 | 0) / 12 & -1) >>> 0) {
    $polyNr_0196 = $inc90;
    $43 = $69;
    $42 = $70;
   } else {
    break;
   }
  }
 }
 $add100$0 = _i64Add($div98_pre, ($div98_pre | 0) < 0 ? -1 : 0, $_pre205$0, $_pre205$1) | 0;
 $add100$1 = tempRet0;
 $71$0 = HEAP32[$X >> 2] | 0;
 $71$1 = HEAP32[$X + 4 >> 2] | 0;
 if (!(($add100$1 | 0) < ($71$1 | 0) | ($add100$1 | 0) == ($71$1 | 0) & $add100$0 >>> 0 < $71$0 >>> 0)) {
  STACKTOP = __stackBase__;
  return;
 }
 $__begin__i_i_i332 = $p | 0;
 $__end__i_i_i333 = $p + 4 | 0;
 $__first__i_i_i_i_i_i339 = $p + 8 | 0;
 $X_i_i_i = $ref_tmp119 | 0;
 $Y_i_i_i = $ref_tmp119 + 8 | 0;
 $X_i_i_i122 = $ref_tmp128 | 0;
 $Y_i_i_i123 = $ref_tmp128 + 8 | 0;
 $__end__i158 = $result + 4 | 0;
 $__first__i_i_i_i = $result + 8 | 0;
 $72 = $ref_tmp128;
 $idx93_0178 = 0;
 $x95_0179$1 = $add100$1;
 $x95_0179$0 = $add100$0;
 L981 : while (1) {
  $__begin__i309 = $38 + ($idx93_0178 * 12 & -1) | 0;
  $73 = HEAP32[$__begin__i309 >> 2] | 0;
  $__end__i350 = $38 + ($idx93_0178 * 12 & -1) + 4 | 0;
  _qsort($73 | 0, (HEAP32[$__end__i350 >> 2] | 0) - $73 >> 3 | 0, 8, 20);
  $77 = HEAP32[$__begin__i309 >> 2] | 0;
  if ((HEAP32[$__end__i350 >> 2] | 0) - $77 >> 3 >>> 0 > 1) {
   $conv_i = +($x95_0179$0 >>> 0) + +($x95_0179$1 | 0) * 4294967296.0;
   $mul_i = $call_i_i * $conv_i;
   $mul11_i = $conv_i * $sub_i_i;
   $i111_0175 = 0;
   $add11359176 = 1;
   $78 = $77;
   do {
    HEAP32[$__begin__i_i_i332 >> 2] = 0;
    HEAP32[$__end__i_i_i333 >> 2] = 0;
    HEAP32[$__first__i_i_i_i_i_i339 >> 2] = 0;
    $arrayidx_i314 = $78 + ($i111_0175 << 3) | 0;
    $conv2_i = +((HEAP32[$arrayidx_i314 >> 2] | 0) >>> 0) + +(HEAP32[$arrayidx_i314 + 4 >> 2] | 0) * 4294967296.0;
    $add_i = $mul_i + $call2_i_i * $conv2_i;
    $conv6_i$1 = (Math_min(+Math_floor($add_i / 4294967296.0), 4294967295.0) | 0) >>> 0;
    $add17_i = $mul11_i + $call_i_i * $conv2_i;
    $conv18_i$1 = (Math_min(+Math_floor($add17_i / 4294967296.0), 4294967295.0) | 0) >>> 0;
    HEAP32[$X_i_i_i >> 2] = ~~$add_i >>> 0;
    HEAP32[$X_i_i_i + 4 >> 2] = $conv6_i$1;
    HEAP32[$Y_i_i_i >> 2] = ~~$add17_i >>> 0;
    HEAP32[$Y_i_i_i + 4 >> 2] = $conv18_i$1;
    __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($p, $ref_tmp119);
    $_pre207 = HEAP32[$__end__i_i_i333 >> 2] | 0;
    $_pre208 = HEAP32[$__first__i_i_i_i_i_i339 >> 2] | 0;
    $arrayidx_i230 = (HEAP32[$__begin__i309 >> 2] | 0) + ($add11359176 << 3) | 0;
    $conv2_i111 = +((HEAP32[$arrayidx_i230 >> 2] | 0) >>> 0) + +(HEAP32[$arrayidx_i230 + 4 >> 2] | 0) * 4294967296.0;
    $add_i114 = $mul_i + $call2_i_i * $conv2_i111;
    $conv6_i115$1 = (Math_min(+Math_floor($add_i114 / 4294967296.0), 4294967295.0) | 0) >>> 0;
    $add17_i120 = $mul11_i + $call_i_i * $conv2_i111;
    $conv18_i121$1 = (Math_min(+Math_floor($add17_i120 / 4294967296.0), 4294967295.0) | 0) >>> 0;
    HEAP32[$X_i_i_i122 >> 2] = ~~$add_i114 >>> 0;
    HEAP32[$X_i_i_i122 + 4 >> 2] = $conv6_i115$1;
    HEAP32[$Y_i_i_i123 >> 2] = ~~$add17_i120 >>> 0;
    HEAP32[$Y_i_i_i123 + 4 >> 2] = $conv18_i121$1;
    if (($_pre207 | 0) == ($_pre208 | 0)) {
     __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($p, $ref_tmp128);
    } else {
     if (($_pre207 | 0) != 0) {
      $81 = $_pre207;
      HEAP32[$81 >> 2] = HEAP32[$72 >> 2];
      HEAP32[$81 + 4 >> 2] = HEAP32[$72 + 4 >> 2];
      HEAP32[$81 + 8 >> 2] = HEAP32[$72 + 8 >> 2];
      HEAP32[$81 + 12 >> 2] = HEAP32[$72 + 12 >> 2];
     }
     HEAP32[$__end__i_i_i333 >> 2] = $_pre207 + 16;
    }
    $82 = HEAP32[$__end__i158 >> 2] | 0;
    if (($82 | 0) == (HEAP32[$__first__i_i_i_i >> 2] | 0)) {
     __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($result, $p);
    } else {
     do {
      if (($82 | 0) != 0) {
       $__begin__i_i137 = $82 | 0;
       HEAP32[$__begin__i_i137 >> 2] = 0;
       $__end__i_i138 = $82 + 4 | 0;
       HEAP32[$__end__i_i138 >> 2] = 0;
       $__first__i_i_i_i_i = $82 + 8 | 0;
       HEAP32[$__first__i_i_i_i_i >> 2] = 0;
       $sub_ptr_sub_i_i141 = (HEAP32[$__end__i_i_i333 >> 2] | 0) - (HEAP32[$__begin__i_i_i332 >> 2] | 0) | 0;
       $sub_ptr_div_i_i142 = $sub_ptr_sub_i_i141 >> 4;
       if (($sub_ptr_div_i_i142 | 0) == 0) {
        break;
       }
       if ($sub_ptr_div_i_i142 >>> 0 > 268435455) {
        break L981;
       }
       $86 = __Znwj($sub_ptr_sub_i_i141) | 0;
       HEAP32[$__end__i_i138 >> 2] = $86;
       HEAP32[$__begin__i_i137 >> 2] = $86;
       HEAP32[$__first__i_i_i_i_i >> 2] = $86 + ($sub_ptr_div_i_i142 << 4);
       $87 = HEAP32[$__begin__i_i_i332 >> 2] | 0;
       $88 = HEAP32[$__end__i_i_i333 >> 2] | 0;
       if (($87 | 0) == ($88 | 0)) {
        break;
       } else {
        $__first_addr_04_i_i = $87;
        $89 = $86;
       }
       do {
        if (($89 | 0) == 0) {
         $92 = 0;
        } else {
         $90 = $89;
         $91 = $__first_addr_04_i_i;
         HEAP32[$90 >> 2] = HEAP32[$91 >> 2];
         HEAP32[$90 + 4 >> 2] = HEAP32[$91 + 4 >> 2];
         HEAP32[$90 + 8 >> 2] = HEAP32[$91 + 8 >> 2];
         HEAP32[$90 + 12 >> 2] = HEAP32[$91 + 12 >> 2];
         $92 = HEAP32[$__end__i_i138 >> 2] | 0;
        }
        $89 = $92 + 16 | 0;
        HEAP32[$__end__i_i138 >> 2] = $89;
        $__first_addr_04_i_i = $__first_addr_04_i_i + 16 | 0;
       } while (($__first_addr_04_i_i | 0) != ($88 | 0));
      }
     } while (0);
     HEAP32[$__end__i158 >> 2] = (HEAP32[$__end__i158 >> 2] | 0) + 12;
    }
    $101 = HEAP32[$__begin__i_i_i332 >> 2] | 0;
    $102 = $101;
    if (($101 | 0) != 0) {
     $103 = HEAP32[$__end__i_i_i333 >> 2] | 0;
     if (($101 | 0) != ($103 | 0)) {
      HEAP32[$__end__i_i_i333 >> 2] = $103 + ((($103 - 16 + (-$102 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($101);
    }
    $i111_0175 = $i111_0175 + 2 | 0;
    $add11359176 = $i111_0175 | 1;
    $78 = HEAP32[$__begin__i309 >> 2] | 0;
   } while ($add11359176 >>> 0 < (HEAP32[$__end__i350 >> 2] | 0) - $78 >> 3 >>> 0);
  }
  $add145$0 = _i64Add($x95_0179$0, $x95_0179$1, $conv5$0, $conv5$1) | 0;
  $add145$1 = tempRet0;
  if (($add145$1 | 0) < ($71$1 | 0) | ($add145$1 | 0) == ($71$1 | 0) & $add145$0 >>> 0 < $71$0 >>> 0) {
   $idx93_0178 = $idx93_0178 + 1 | 0;
   $x95_0179$1 = $add145$1;
   $x95_0179$0 = $add145$0;
  } else {
   label = 1008;
   break;
  }
 }
 if ((label | 0) == 1008) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
}
function __Z16cmp_SupportPointPKvS0_($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 return (HEAP32[$a >> 2] | 0) - (HEAP32[$b >> 2] | 0) | 0;
}
function __Z11bridgeAngleP14SliceLayerPartP10SliceLayer($part, $prevLayer) {
 $part = $part | 0;
 $prevLayer = $prevLayer | 0;
 var $bridgeClip = 0, $islands = 0, $5 = 0, $6 = 0, $__end__i = 0, $8 = 0, $__begin__i78 = 0, $9 = 0, $X_i = 0, $X4_i = 0, $Y_i = 0, $Y17_i = 0, $11 = 0, $12 = 0, $n_0146 = 0, $13$1 = 0, $X2_i = 0, $14$1 = 0, $15$1 = 0, $X6_i = 0, $16$1 = 0, $17$1 = 0, $Y12_i = 0, $18$1 = 0, $19$1 = 0, $Y19_i = 0, $20$1 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $inc = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $m_ExecuteLocked_i = 0, $_pre = 0, $32 = 0, $33 = 0, $50 = 0, $n30_0133 = 0, $idx2_0132 = 0, $idx1_0131 = 0, $area2_0130 = 0.0, $area1_0129 = 0.0, $call39 = 0.0, $cmp42 = 0, $area1_1 = 0.0, $area2_2 = 0.0, $idx1_1 = 0, $idx2_2 = 0, $inc50 = 0, $52 = 0, $53 = 0, $idx2_0_lcssa = 0, $idx1_0_lcssa = 0, $arrayidx_i98 = 0, $56 = 0, $57 = 0, $sub_ptr_div_i_i = 0, $sub_i = 0, $p0_sroa_1_8__idx14_i = 0, $p0_sroa_0_0__idx_i = 0, $x_034_i = 0.0, $y_033_i = 0.0, $p0_sroa_1_032_i$0 = 0, $p0_sroa_1_032_i$1 = 0, $p0_sroa_0_031_i$0 = 0, $p0_sroa_0_031_i$1 = 0, $n_030_i = 0, $p1_sroa_0_0__idx4_i = 0, $p1_sroa_0_0_copyload5_i$0 = 0, $p1_sroa_0_0_copyload5_i$1 = 0, $p1_sroa_1_8__idx8_i = 0, $p1_sroa_1_8_copyload9_i$0 = 0, $p1_sroa_1_8_copyload9_i$1 = 0, $mul_i$0 = 0, $mul_i$1 = 0, $mul6_i$0 = 0, $sub7_i$0 = 0, $conv_i = 0.0, $add_i$0 = 0, $add12_i = 0.0, $add15_i$0 = 0, $add18_i = 0.0, $inc_i = 0, $x_0_lcssa_i = 0.0, $y_0_lcssa_i = 0.0, $call19_i31 = 0.0, $div20_i = 0.0, $div22_i = 0.0, $y_1_i = 0.0, $x_1_i = 0.0, $conv26_i$0 = 0, $conv26_i$1 = 0, $conv27_i$0 = 0, $conv27_i$1 = 0, $58 = 0, $arrayidx_i88 = 0, $59 = 0, $60 = 0, $sub_ptr_div_i_i37 = 0, $sub_i38 = 0, $p0_sroa_1_8__idx14_i40 = 0, $p0_sroa_0_0__idx_i41 = 0, $x_034_i45 = 0.0, $y_033_i46 = 0.0, $p0_sroa_1_032_i47$0 = 0, $p0_sroa_1_032_i47$1 = 0, $p0_sroa_0_031_i48$0 = 0, $p0_sroa_0_031_i48$1 = 0, $n_030_i49 = 0, $p1_sroa_0_0__idx4_i50 = 0, $p1_sroa_0_0_copyload5_i51$0 = 0, $p1_sroa_0_0_copyload5_i51$1 = 0, $p1_sroa_1_8__idx8_i52 = 0, $p1_sroa_1_8_copyload9_i53$0 = 0, $p1_sroa_1_8_copyload9_i53$1 = 0, $mul_i54$0 = 0, $mul_i54$1 = 0, $mul6_i55$0 = 0, $sub7_i56$0 = 0, $conv_i57 = 0.0, $add_i58$0 = 0, $add12_i61 = 0.0, $add15_i62$0 = 0, $add18_i65 = 0.0, $inc_i66 = 0, $x_0_lcssa_i69 = 0.0, $y_0_lcssa_i70 = 0.0, $call19_i88 = 0.0, $div20_i72 = 0.0, $div22_i74 = 0.0, $y_1_i80 = 0.0, $x_1_i81 = 0.0, $conv26_i82$1 = 0, $conv27_i83$1 = 0, $sub$0 = 0, $conv = 0.0, $sub64$0 = 0, $mul = 0.0, $angle_0 = 0.0, $61 = 0, $retval_0 = 0, $62 = 0, $63 = 0, $incdec_ptr_i_i_i_i_i_i95 = 0, $64 = 0, $65 = 0, $66 = 0, $__end__i_i_i_i_i_i_i_i_i101 = 0, $67 = 0, $72 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 120 | 0;
 $bridgeClip = __stackBase__ | 0;
 $islands = __stackBase__ + 104 | 0;
 HEAP32[$bridgeClip + 92 >> 2] = 0;
 HEAP32[$bridgeClip + 96 >> 2] = 0;
 HEAP32[$bridgeClip + 100 >> 2] = 0;
 HEAP32[$bridgeClip + 84 >> 2] = 0;
 HEAP32[$bridgeClip + 80 >> 2] = 0;
 HEAP32[$bridgeClip >> 2] = 11908;
 HEAP32[$bridgeClip + 76 >> 2] = 11948;
 _memset($bridgeClip + 4 | 0, 0, 36);
 _memset($bridgeClip + 44 | 0, 0, 17);
 HEAP8[$bridgeClip + 88 | 0] = 0;
 HEAP8[$bridgeClip + 72 | 0] = 0;
 $5 = $bridgeClip;
 $6 = $bridgeClip;
 __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($bridgeClip + 76 | 0, HEAP32[$part + 32 >> 2] | 0, 0) | 0;
 $__end__i = $prevLayer + 4 | 0;
 $8 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i78 = $prevLayer | 0;
 $9 = HEAP32[$__begin__i78 >> 2] | 0;
 if (($8 | 0) != ($9 | 0)) {
  $X_i = $part + 16 | 0;
  $X4_i = $part | 0;
  $Y_i = $part + 24 | 0;
  $Y17_i = $part + 8 | 0;
  $n_0146 = 0;
  $12 = $9;
  $11 = $8;
  while (1) {
   $13$1 = HEAP32[$X_i + 4 >> 2] | 0;
   $X2_i = $12 + ($n_0146 * 96 & -1) | 0;
   $14$1 = HEAP32[$X2_i + 4 >> 2] | 0;
   do {
    if (($13$1 | 0) < ($14$1 | 0) | ($13$1 | 0) == ($14$1 | 0) & (HEAP32[$X_i >> 2] | 0) >>> 0 < (HEAP32[$X2_i >> 2] | 0) >>> 0) {
     $27 = $11;
     $26 = $12;
    } else {
     $15$1 = HEAP32[$X4_i + 4 >> 2] | 0;
     $X6_i = $12 + ($n_0146 * 96 & -1) + 16 | 0;
     $16$1 = HEAP32[$X6_i + 4 >> 2] | 0;
     if (($15$1 | 0) > ($16$1 | 0) | ($15$1 | 0) == ($16$1 | 0) & (HEAP32[$X4_i >> 2] | 0) >>> 0 > (HEAP32[$X6_i >> 2] | 0) >>> 0) {
      $27 = $11;
      $26 = $12;
      break;
     }
     $17$1 = HEAP32[$Y_i + 4 >> 2] | 0;
     $Y12_i = $12 + ($n_0146 * 96 & -1) + 8 | 0;
     $18$1 = HEAP32[$Y12_i + 4 >> 2] | 0;
     if (($17$1 | 0) < ($18$1 | 0) | ($17$1 | 0) == ($18$1 | 0) & (HEAP32[$Y_i >> 2] | 0) >>> 0 < (HEAP32[$Y12_i >> 2] | 0) >>> 0) {
      $27 = $11;
      $26 = $12;
      break;
     }
     $19$1 = HEAP32[$Y17_i + 4 >> 2] | 0;
     $Y19_i = $12 + ($n_0146 * 96 & -1) + 24 | 0;
     $20$1 = HEAP32[$Y19_i + 4 >> 2] | 0;
     if (($19$1 | 0) > ($20$1 | 0) | ($19$1 | 0) == ($20$1 | 0) & (HEAP32[$Y17_i >> 2] | 0) >>> 0 > (HEAP32[$Y19_i >> 2] | 0) >>> 0) {
      $27 = $11;
      $26 = $12;
      break;
     }
     $24 = $6 + (HEAP32[(HEAP32[$5 >> 2] | 0) - 12 >> 2] | 0) | 0;
     $25 = HEAP32[$12 + ($n_0146 * 96 & -1) + 32 >> 2] | 0;
     __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($24, $25, 1) | 0;
     $27 = HEAP32[$__end__i >> 2] | 0;
     $26 = HEAP32[$__begin__i78 >> 2] | 0;
    }
   } while (0);
   $inc = $n_0146 + 1 | 0;
   if ($inc >>> 0 < (($27 - $26 | 0) / 96 & -1) >>> 0) {
    $n_0146 = $inc;
    $12 = $26;
    $11 = $27;
   } else {
    break;
   }
  }
 }
 $__begin__i_i_i = $islands | 0;
 HEAP32[$__begin__i_i_i >> 2] = 0;
 $__end__i_i_i = $islands + 4 | 0;
 HEAP32[$__end__i_i_i >> 2] = 0;
 HEAP32[$islands + 8 >> 2] = 0;
 $m_ExecuteLocked_i = $bridgeClip + 60 | 0;
 if ((HEAP8[$m_ExecuteLocked_i] & 1) == 0) {
  HEAP8[$m_ExecuteLocked_i] = 1;
  HEAP32[$bridgeClip + 68 >> 2] = 0;
  HEAP32[$bridgeClip + 64 >> 2] = 0;
  HEAP32[$bridgeClip + 40 >> 2] = 0;
  if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$bridgeClip >> 2] | 0) + 16 >> 2] & 63]($bridgeClip, 0) | 0) {
   __ZN10ClipperLib7Clipper11BuildResultERNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEE($bridgeClip, $islands);
   $_pre = HEAP32[$__end__i_i_i >> 2] | 0;
  } else {
   $_pre = 0;
  }
  HEAP8[$m_ExecuteLocked_i] = 0;
  $33 = $_pre;
  $32 = HEAP32[$__begin__i_i_i >> 2] | 0;
 } else {
  $33 = 0;
  $32 = 0;
 }
 do {
  if ((($33 - $32 | 0) / 12 & -1) >>> 0 > 5) {
   $retval_0 = -1;
   $61 = $32;
  } else {
   if (($33 | 0) == ($32 | 0)) {
    $idx1_0_lcssa = -1;
    $idx2_0_lcssa = -1;
    $53 = $32;
   } else {
    $area1_0129 = 0.0;
    $area2_0130 = 0.0;
    $idx1_0131 = -1;
    $idx2_0132 = -1;
    $n30_0133 = 0;
    $50 = $32;
    while (1) {
     $call39 = +Math_abs(+(+__ZN10ClipperLib4AreaERKNSt3__16vectorINS_8IntPointENS0_9allocatorIS2_EEEE($50 + ($n30_0133 * 12 & -1) | 0)));
     do {
      if ($call39 > $area1_0129) {
       $cmp42 = $area1_0129 > $area2_0130;
       $idx2_2 = $cmp42 ? $idx1_0131 : $idx2_0132;
       $idx1_1 = $n30_0133;
       $area2_2 = $cmp42 ? $area1_0129 : $area2_0130;
       $area1_1 = $call39;
      } else {
       if ($call39 <= $area2_0130) {
        $idx2_2 = $idx2_0132;
        $idx1_1 = $idx1_0131;
        $area2_2 = $area2_0130;
        $area1_1 = $area1_0129;
        break;
       }
       $idx2_2 = $n30_0133;
       $idx1_1 = $idx1_0131;
       $area2_2 = $call39;
       $area1_1 = $area1_0129;
      }
     } while (0);
     $inc50 = $n30_0133 + 1 | 0;
     $52 = HEAP32[$__begin__i_i_i >> 2] | 0;
     if ($inc50 >>> 0 < (((HEAP32[$__end__i_i_i >> 2] | 0) - $52 | 0) / 12 & -1) >>> 0) {
      $area1_0129 = $area1_1;
      $area2_0130 = $area2_2;
      $idx1_0131 = $idx1_1;
      $idx2_0132 = $idx2_2;
      $n30_0133 = $inc50;
      $50 = $52;
     } else {
      $idx1_0_lcssa = $idx1_1;
      $idx2_0_lcssa = $idx2_2;
      $53 = $52;
      break;
     }
    }
   }
   if (($idx2_0_lcssa | $idx1_0_lcssa | 0) < 0) {
    $retval_0 = -1;
    $61 = $53;
    break;
   }
   $arrayidx_i98 = $53 + ($idx1_0_lcssa * 12 & -1) | 0;
   $56 = HEAP32[$53 + ($idx1_0_lcssa * 12 & -1) + 4 >> 2] | 0;
   $57 = HEAP32[$arrayidx_i98 >> 2] | 0;
   $sub_ptr_div_i_i = $56 - $57 >> 4;
   $sub_i = $sub_ptr_div_i_i - 1 | 0;
   if (($56 | 0) == ($57 | 0)) {
    $y_0_lcssa_i = 0.0;
    $x_0_lcssa_i = 0.0;
   } else {
    $p0_sroa_1_8__idx14_i = $57 + ($sub_i << 4) + 8 | 0;
    $p0_sroa_0_0__idx_i = $57 + ($sub_i << 4) | 0;
    $n_030_i = 0;
    $p0_sroa_0_031_i$1 = HEAP32[$p0_sroa_0_0__idx_i + 4 >> 2] | 0;
    $p0_sroa_0_031_i$0 = HEAP32[$p0_sroa_0_0__idx_i >> 2] | 0;
    $p0_sroa_1_032_i$1 = HEAP32[$p0_sroa_1_8__idx14_i + 4 >> 2] | 0;
    $p0_sroa_1_032_i$0 = HEAP32[$p0_sroa_1_8__idx14_i >> 2] | 0;
    $y_033_i = 0.0;
    $x_034_i = 0.0;
    while (1) {
     $p1_sroa_0_0__idx4_i = $57 + ($n_030_i << 4) | 0;
     $p1_sroa_0_0_copyload5_i$0 = HEAP32[$p1_sroa_0_0__idx4_i >> 2] | 0;
     $p1_sroa_0_0_copyload5_i$1 = HEAP32[$p1_sroa_0_0__idx4_i + 4 >> 2] | 0;
     $p1_sroa_1_8__idx8_i = $57 + ($n_030_i << 4) + 8 | 0;
     $p1_sroa_1_8_copyload9_i$0 = HEAP32[$p1_sroa_1_8__idx8_i >> 2] | 0;
     $p1_sroa_1_8_copyload9_i$1 = HEAP32[$p1_sroa_1_8__idx8_i + 4 >> 2] | 0;
     $mul_i$0 = ___muldi3($p1_sroa_1_8_copyload9_i$0, $p1_sroa_1_8_copyload9_i$1, $p0_sroa_0_031_i$0, $p0_sroa_0_031_i$1) | 0;
     $mul_i$1 = tempRet0;
     $mul6_i$0 = ___muldi3($p1_sroa_0_0_copyload5_i$0, $p1_sroa_0_0_copyload5_i$1, $p0_sroa_1_032_i$0, $p0_sroa_1_032_i$1) | 0;
     $sub7_i$0 = _i64Subtract($mul_i$0, $mul_i$1, $mul6_i$0, tempRet0) | 0;
     $conv_i = +($sub7_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
     $add_i$0 = _i64Add($p1_sroa_0_0_copyload5_i$0, $p1_sroa_0_0_copyload5_i$1, $p0_sroa_0_031_i$0, $p0_sroa_0_031_i$1) | 0;
     $add12_i = $x_034_i + (+($add_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0) * $conv_i;
     $add15_i$0 = _i64Add($p1_sroa_1_8_copyload9_i$0, $p1_sroa_1_8_copyload9_i$1, $p0_sroa_1_032_i$0, $p0_sroa_1_032_i$1) | 0;
     $add18_i = $y_033_i + (+($add15_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0) * $conv_i;
     $inc_i = $n_030_i + 1 | 0;
     if ($inc_i >>> 0 < $sub_ptr_div_i_i >>> 0) {
      $n_030_i = $inc_i;
      $p0_sroa_0_031_i$1 = $p1_sroa_0_0_copyload5_i$1;
      $p0_sroa_0_031_i$0 = $p1_sroa_0_0_copyload5_i$0;
      $p0_sroa_1_032_i$1 = $p1_sroa_1_8_copyload9_i$1;
      $p0_sroa_1_032_i$0 = $p1_sroa_1_8_copyload9_i$0;
      $y_033_i = $add18_i;
      $x_034_i = $add12_i;
     } else {
      $y_0_lcssa_i = $add18_i;
      $x_0_lcssa_i = $add12_i;
      break;
     }
    }
   }
   $call19_i31 = +__ZN10ClipperLib4AreaERKNSt3__16vectorINS_8IntPointENS0_9allocatorIS2_EEEE($arrayidx_i98);
   $div20_i = $x_0_lcssa_i / 6.0 / $call19_i31;
   $div22_i = $y_0_lcssa_i / 6.0 / $call19_i31;
   if ($div20_i < 0.0) {
    $x_1_i = -0.0 - $div20_i;
    $y_1_i = -0.0 - $div22_i;
   } else {
    $x_1_i = $div20_i;
    $y_1_i = $div22_i;
   }
   $conv26_i$0 = ~~$x_1_i >>> 0;
   $conv26_i$1 = (Math_min(+Math_floor($x_1_i / 4294967296.0), 4294967295.0) | 0) >>> 0;
   $conv27_i$0 = ~~$y_1_i >>> 0;
   $conv27_i$1 = (Math_min(+Math_floor($y_1_i / 4294967296.0), 4294967295.0) | 0) >>> 0;
   $58 = HEAP32[$__begin__i_i_i >> 2] | 0;
   $arrayidx_i88 = $58 + ($idx2_0_lcssa * 12 & -1) | 0;
   $59 = HEAP32[$58 + ($idx2_0_lcssa * 12 & -1) + 4 >> 2] | 0;
   $60 = HEAP32[$arrayidx_i88 >> 2] | 0;
   $sub_ptr_div_i_i37 = $59 - $60 >> 4;
   $sub_i38 = $sub_ptr_div_i_i37 - 1 | 0;
   if (($59 | 0) == ($60 | 0)) {
    $y_0_lcssa_i70 = 0.0;
    $x_0_lcssa_i69 = 0.0;
   } else {
    $p0_sroa_1_8__idx14_i40 = $60 + ($sub_i38 << 4) + 8 | 0;
    $p0_sroa_0_0__idx_i41 = $60 + ($sub_i38 << 4) | 0;
    $n_030_i49 = 0;
    $p0_sroa_0_031_i48$1 = HEAP32[$p0_sroa_0_0__idx_i41 + 4 >> 2] | 0;
    $p0_sroa_0_031_i48$0 = HEAP32[$p0_sroa_0_0__idx_i41 >> 2] | 0;
    $p0_sroa_1_032_i47$1 = HEAP32[$p0_sroa_1_8__idx14_i40 + 4 >> 2] | 0;
    $p0_sroa_1_032_i47$0 = HEAP32[$p0_sroa_1_8__idx14_i40 >> 2] | 0;
    $y_033_i46 = 0.0;
    $x_034_i45 = 0.0;
    while (1) {
     $p1_sroa_0_0__idx4_i50 = $60 + ($n_030_i49 << 4) | 0;
     $p1_sroa_0_0_copyload5_i51$0 = HEAP32[$p1_sroa_0_0__idx4_i50 >> 2] | 0;
     $p1_sroa_0_0_copyload5_i51$1 = HEAP32[$p1_sroa_0_0__idx4_i50 + 4 >> 2] | 0;
     $p1_sroa_1_8__idx8_i52 = $60 + ($n_030_i49 << 4) + 8 | 0;
     $p1_sroa_1_8_copyload9_i53$0 = HEAP32[$p1_sroa_1_8__idx8_i52 >> 2] | 0;
     $p1_sroa_1_8_copyload9_i53$1 = HEAP32[$p1_sroa_1_8__idx8_i52 + 4 >> 2] | 0;
     $mul_i54$0 = ___muldi3($p1_sroa_1_8_copyload9_i53$0, $p1_sroa_1_8_copyload9_i53$1, $p0_sroa_0_031_i48$0, $p0_sroa_0_031_i48$1) | 0;
     $mul_i54$1 = tempRet0;
     $mul6_i55$0 = ___muldi3($p1_sroa_0_0_copyload5_i51$0, $p1_sroa_0_0_copyload5_i51$1, $p0_sroa_1_032_i47$0, $p0_sroa_1_032_i47$1) | 0;
     $sub7_i56$0 = _i64Subtract($mul_i54$0, $mul_i54$1, $mul6_i55$0, tempRet0) | 0;
     $conv_i57 = +($sub7_i56$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
     $add_i58$0 = _i64Add($p1_sroa_0_0_copyload5_i51$0, $p1_sroa_0_0_copyload5_i51$1, $p0_sroa_0_031_i48$0, $p0_sroa_0_031_i48$1) | 0;
     $add12_i61 = $x_034_i45 + (+($add_i58$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0) * $conv_i57;
     $add15_i62$0 = _i64Add($p1_sroa_1_8_copyload9_i53$0, $p1_sroa_1_8_copyload9_i53$1, $p0_sroa_1_032_i47$0, $p0_sroa_1_032_i47$1) | 0;
     $add18_i65 = $y_033_i46 + (+($add15_i62$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0) * $conv_i57;
     $inc_i66 = $n_030_i49 + 1 | 0;
     if ($inc_i66 >>> 0 < $sub_ptr_div_i_i37 >>> 0) {
      $n_030_i49 = $inc_i66;
      $p0_sroa_0_031_i48$1 = $p1_sroa_0_0_copyload5_i51$1;
      $p0_sroa_0_031_i48$0 = $p1_sroa_0_0_copyload5_i51$0;
      $p0_sroa_1_032_i47$1 = $p1_sroa_1_8_copyload9_i53$1;
      $p0_sroa_1_032_i47$0 = $p1_sroa_1_8_copyload9_i53$0;
      $y_033_i46 = $add18_i65;
      $x_034_i45 = $add12_i61;
     } else {
      $y_0_lcssa_i70 = $add18_i65;
      $x_0_lcssa_i69 = $add12_i61;
      break;
     }
    }
   }
   $call19_i88 = +__ZN10ClipperLib4AreaERKNSt3__16vectorINS_8IntPointENS0_9allocatorIS2_EEEE($arrayidx_i88);
   $div20_i72 = $x_0_lcssa_i69 / 6.0 / $call19_i88;
   $div22_i74 = $y_0_lcssa_i70 / 6.0 / $call19_i88;
   if ($div20_i72 < 0.0) {
    $x_1_i81 = -0.0 - $div20_i72;
    $y_1_i80 = -0.0 - $div22_i74;
   } else {
    $x_1_i81 = $div20_i72;
    $y_1_i80 = $div22_i74;
   }
   $conv26_i82$1 = (Math_min(+Math_floor($x_1_i81 / 4294967296.0), 4294967295.0) | 0) >>> 0;
   $conv27_i83$1 = (Math_min(+Math_floor($y_1_i80 / 4294967296.0), 4294967295.0) | 0) >>> 0;
   $sub$0 = _i64Subtract(~~$x_1_i81 >>> 0, $conv26_i82$1, $conv26_i$0, $conv26_i$1) | 0;
   $conv = +($sub$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
   $sub64$0 = _i64Subtract(~~$y_1_i80 >>> 0, $conv27_i83$1, $conv27_i$0, $conv27_i$1) | 0;
   $mul = +Math_atan2(+$conv, +(+($sub64$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0)) / 3.141592653589793 * 180.0;
   if ($mul < 0.0) {
    $angle_0 = $mul + 360.0;
   } else {
    $angle_0 = $mul;
   }
   $retval_0 = ~~$angle_0;
   $61 = HEAP32[$__begin__i_i_i >> 2] | 0;
  }
 } while (0);
 if (($61 | 0) != 0) {
  $62 = HEAP32[$__end__i_i_i >> 2] | 0;
  if (($61 | 0) == ($62 | 0)) {
   $72 = $61;
  } else {
   $63 = $62;
   while (1) {
    $incdec_ptr_i_i_i_i_i_i95 = $63 - 12 | 0;
    HEAP32[$__end__i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i95;
    $64 = HEAP32[$incdec_ptr_i_i_i_i_i_i95 >> 2] | 0;
    $65 = $64;
    if (($64 | 0) == 0) {
     $66 = $incdec_ptr_i_i_i_i_i_i95;
    } else {
     $__end__i_i_i_i_i_i_i_i_i101 = $63 - 12 + 4 | 0;
     $67 = HEAP32[$__end__i_i_i_i_i_i_i_i_i101 >> 2] | 0;
     if (($64 | 0) != ($67 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i_i101 >> 2] = $67 + ((($67 - 16 + (-$65 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($64);
     $66 = HEAP32[$__end__i_i_i >> 2] | 0;
    }
    if (($61 | 0) == ($66 | 0)) {
     break;
    } else {
     $63 = $66;
    }
   }
   $72 = HEAP32[$__begin__i_i_i >> 2] | 0;
  }
  __ZdlPv($72);
 }
 __ZN10ClipperLib7ClipperD2Ev($bridgeClip, 12040);
 __ZN10ClipperLib11ClipperBaseD2Ev($bridgeClip + 76 | 0);
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __Z19generateSupportGridR14SupportStorageP14OptimizedModelii($storage, $om, $initial, $thickness) {
 $storage = $storage | 0;
 $om = $om | 0;
 $initial = $initial | 0;
 $thickness = $thickness | 0;
 var $ref_tmp205 = 0, $ref_tmp312 = 0, $0 = 0, $X = 0, $1 = 0, $Y = 0, $gridScale = 0, $add = 0, $gridWidth = 0, $add10 = 0, $gridHeight = 0, $mul = 0, $4$0 = 0, $5 = 0, $7$0 = 0, $call = 0, $14 = 0, $arrayctor_end = 0, $arrayctor_cur = 0, $grid = 0, $__end__i390 = 0, $15 = 0, $__begin__i391 = 0, $16 = 0, $z2_i_i = 0, $cosAngle3_i_i = 0, $18 = 0, $z2_i_i93 = 0, $cosAngle3_i_i94 = 0, $19 = 0, $20 = 0, $21 = 0, $volumeIdx_0281 = 0, $__end__i401 = 0, $__begin__i402 = 0, $23 = 0, $__begin__i448 = 0, $25 = 0, $26 = 0, $faceIdx_0275 = 0, $27 = 0, $28 = 0, $v0_sroa_0_0_copyload200 = 0, $v0_sroa_1_4_copyload210 = 0, $v0_sroa_2_8_copyload219 = 0, $29 = 0, $v1_sroa_0_0_copyload158 = 0, $v1_sroa_1_4_copyload172 = 0, $v1_sroa_2_8_copyload185 = 0, $30 = 0, $v2_sroa_0_0_copyload123 = 0, $v2_sroa_1_4_copyload132 = 0, $v2_sroa_2_8_copyload140 = 0, $sub_i = 0, $sub4_i = 0, $sub6_i = 0, $sub_i75 = 0, $sub4_i78 = 0, $sub6_i81 = 0, $mul_i = 0, $sub_i88 = 0, $mul6_i = 0, $sub10_i = 0, $mul13_i = 0, $sub17_i = 0, $conv_i_i$0 = 0, $conv_i_i$1 = 0, $mul_i_i$0 = 0, $mul_i_i$1 = 0, $conv4_i_i$0 = 0, $conv4_i_i$1 = 0, $mul7_i_i$0 = 0, $mul7_i_i$1 = 0, $conv8_i_i$0 = 0, $conv8_i_i$1 = 0, $mul11_i_i$0 = 0, $add_i_i$0 = 0, $add12_i_i$0 = 0, $call41 = 0.0, $31$0 = 0, $31$1 = 0, $sub$0 = 0, $32 = 0, $conv47$0 = 0, $conv47$1 = 0, $div48$0 = 0, $conv49 = 0, $33$0 = 0, $33$1 = 0, $sub55$0 = 0, $div58$0 = 0, $conv59 = 0, $sub65$0 = 0, $div68$0 = 0, $conv69 = 0, $sub75$0 = 0, $div78$0 = 0, $conv79 = 0, $sub85$0 = 0, $div88$0 = 0, $conv89 = 0, $sub95$0 = 0, $div98$0 = 0, $conv99 = 0, $cmp103 = 0, $v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219 = 0, $conv79_conv59 = 0, $conv69_conv49 = 0, $v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185 = 0, $conv59_conv79 = 0, $conv49_conv69 = 0, $cmp106 = 0, $v2_sroa_2_8_copyload140_v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185 = 0, $conv99_conv59_conv79 = 0, $conv89_conv49_conv69 = 0, $v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185_v2_sroa_2_8_copyload140 = 0, $conv59_conv79_conv99 = 0, $conv49_conv69_conv89 = 0, $cmp111 = 0, $v1_sroa_2_8_copyload185247_v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219 = 0, $v1_sroa_1_4_copyload172244_conv79_conv59 = 0, $v1_sroa_0_0_copyload158241_conv69_conv49 = 0, $v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185247 = 0, $conv79_conv59_v1_sroa_1_4_copyload172244 = 0, $conv69_conv49_v1_sroa_0_0_copyload158241 = 0, $conv117$0 = 0, $conv117$1 = 0, $conv120$0 = 0, $conv120$1 = 0, $conv125$0 = 0, $conv125$1 = 0, $sub128 = 0, $conv129$0 = 0, $conv129$1 = 0, $sub136 = 0, $conv137$0 = 0, $conv137$1 = 0, $sub145 = 0, $conv146$0 = 0, $conv146$1 = 0, $sub153 = 0, $conv154$0 = 0, $conv154$1 = 0, $conv159$0 = 0, $conv159$1 = 0, $sub162 = 0, $conv163$0 = 0, $conv163$1 = 0, $sub179 = 0, $conv180$0 = 0, $conv180$1 = 0, $x115_0263$0 = 0, $x115_0263$1 = 0, $sub132$0 = 0, $sub132$1 = 0, $mul133$0 = 0, $div138$0 = 0, $add139$0 = 0, $add139$1 = 0, $mul150$0 = 0, $div155$0 = 0, $add156$0 = 0, $add156$1 = 0, $mul167$0 = 0, $div172$0 = 0, $add173$0 = 0, $add173$1 = 0, $mul184$0 = 0, $div189$0 = 0, $add190$0 = 0, $add190$1 = 0, $cmp191 = 0, $add156_add139$0 = 0, $add156_add139$1 = 0, $add139_add156$0 = 0, $add139_add156$1 = 0, $add190_add173$0 = 0, $add190_add173$1 = 0, $sub206$0 = 0, $sub206$1 = 0, $sub209$0 = 0, $sub209$1 = 0, $y195_0261$0 = 0, $y195_0261$1 = 0, $34 = 0, $mul201$0 = 0, $add202$0 = 0, $idxprom = 0, $35 = 0, $sub207$0 = 0, $mul208$0 = 0, $div210$0 = 0, $add211$0 = 0, $__end__i425 = 0, $36 = 0, $38 = 0, $39 = 0, $conv222$0 = 0, $conv222$1 = 0, $conv228$0 = 0, $conv228$1 = 0, $sub231 = 0, $conv232$0 = 0, $conv232$1 = 0, $sub239 = 0, $conv240$0 = 0, $conv240$1 = 0, $conv246$0 = 0, $conv246$1 = 0, $sub249 = 0, $conv250$0 = 0, $conv250$1 = 0, $sub257 = 0, $conv258$0 = 0, $conv258$1 = 0, $conv264$0 = 0, $conv264$1 = 0, $sub267 = 0, $conv268$0 = 0, $conv268$1 = 0, $conv282$0 = 0, $conv282$1 = 0, $sub285 = 0, $conv286$0 = 0, $conv286$1 = 0, $x217_0268$0 = 0, $x217_0268$1 = 0, $sub235$0 = 0, $sub235$1 = 0, $mul236$0 = 0, $div241$0 = 0, $add242$0 = 0, $add242$1 = 0, $sub253$0 = 0, $sub253$1 = 0, $mul254$0 = 0, $div259$0 = 0, $add260$0 = 0, $add260$1 = 0, $mul272$0 = 0, $div277$0 = 0, $add278$0 = 0, $add278$1 = 0, $mul290$0 = 0, $div295$0 = 0, $add296$0 = 0, $add296$1 = 0, $cmp297 = 0, $add260_add242$0 = 0, $add260_add242$1 = 0, $add242_add260$0 = 0, $add242_add260$1 = 0, $add296_add278$0 = 0, $add296_add278$1 = 0, $sub313$0 = 0, $sub313$1 = 0, $sub316$0 = 0, $sub316$1 = 0, $y301_0266$0 = 0, $y301_0266$1 = 0, $40 = 0, $mul307$0 = 0, $add308$0 = 0, $idxprom309 = 0, $41 = 0, $sub314$0 = 0, $mul315$0 = 0, $div317$0 = 0, $add318$0 = 0, $__end__i384 = 0, $42 = 0, $44 = 0, $45 = 0, $48 = 0, $49 = 0, $inc330 = 0, $50 = 0, $51 = 0, $x333_0258 = 0, $52 = 0, $y339_0256 = 0, $add347 = 0, $53 = 0, $54 = 0, $inc355 = 0, $57 = 0, $_pre287 = 0, $58 = 0, $59 = 0, $inc358 = 0, $60 = 0, $div361 = 0, $conv362$0 = 0, $conv362$1 = 0, $ld$12$0 = 0, $61$0 = 0, $ld$13$1 = 0, $61$1 = 0, $add365$0 = 0, $add365$1 = 0, $st$14$0 = 0, $st$15$1 = 0, $ld$16$0 = 0, $62$0 = 0, $ld$17$1 = 0, $62$1 = 0, $add371$0 = 0, $add371$1 = 0, $st$18$0 = 0, $st$19$1 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $ref_tmp205 = __stackBase__ | 0;
 $ref_tmp312 = __stackBase__ + 16 | 0;
 $0 = HEAP32[$om + 24 >> 2] | 0;
 $X = $storage | 0;
 HEAP32[$X >> 2] = $0;
 HEAP32[$X + 4 >> 2] = ($0 | 0) < 0 ? -1 : 0;
 $1 = HEAP32[$om + 28 >> 2] | 0;
 $Y = $storage + 8 | 0;
 HEAP32[$Y >> 2] = $1;
 HEAP32[$Y + 4 >> 2] = ($1 | 0) < 0 ? -1 : 0;
 $gridScale = $storage + 16 | 0;
 HEAP32[$gridScale >> 2] = 400;
 $add = ((HEAP32[$om + 12 >> 2] | 0) / 400 & -1) + 1 | 0;
 $gridWidth = $storage + 20 | 0;
 HEAP32[$gridWidth >> 2] = $add;
 $add10 = ((HEAP32[$om + 16 >> 2] | 0) / 400 & -1) + 1 | 0;
 $gridHeight = $storage + 24 | 0;
 HEAP32[$gridHeight >> 2] = $add10;
 $mul = Math_imul($add, $add10) | 0;
 $4$0 = _llvm_umul_with_overflow_i32($mul | 0, 12) | 0;
 $5 = tempRet0;
 $7$0 = _llvm_uadd_with_overflow_i32($4$0 | 0, 4) | 0;
 $call = __Znaj($5 | tempRet0 ? -1 : $7$0) | 0;
 HEAP32[$call >> 2] = $mul;
 $14 = $call + 4 | 0;
 if (($mul | 0) != 0) {
  $arrayctor_end = $14 + ($mul * 12 & -1) | 0;
  $arrayctor_cur = $14;
  do {
   HEAP32[$arrayctor_cur >> 2] = 0;
   HEAP32[$arrayctor_cur + 4 >> 2] = 0;
   HEAP32[$arrayctor_cur + 8 >> 2] = 0;
   $arrayctor_cur = $arrayctor_cur + 12 | 0;
  } while (($arrayctor_cur | 0) != ($arrayctor_end | 0));
 }
 $grid = $storage + 28 | 0;
 HEAP32[$grid >> 2] = $14;
 $__end__i390 = $om + 4 | 0;
 $15 = HEAP32[$__end__i390 >> 2] | 0;
 $__begin__i391 = $om | 0;
 $16 = HEAP32[$__begin__i391 >> 2] | 0;
 if (($15 | 0) != ($16 | 0)) {
  $z2_i_i = $ref_tmp312 | 0;
  $cosAngle3_i_i = $ref_tmp312 + 8 | 0;
  $18 = $ref_tmp312;
  $z2_i_i93 = $ref_tmp205 | 0;
  $cosAngle3_i_i94 = $ref_tmp205 + 8 | 0;
  $19 = $ref_tmp205;
  $volumeIdx_0281 = 0;
  $21 = $16;
  $20 = $15;
  while (1) {
   $__end__i401 = $21 + ($volumeIdx_0281 * 28 & -1) + 20 | 0;
   $__begin__i402 = $21 + ($volumeIdx_0281 * 28 & -1) + 16 | 0;
   $23 = HEAP32[$__begin__i402 >> 2] | 0;
   if ((HEAP32[$__end__i401 >> 2] | 0) == ($23 | 0)) {
    $49 = $20;
    $48 = $21;
   } else {
    $__begin__i448 = $21 + ($volumeIdx_0281 * 28 & -1) + 4 | 0;
    $faceIdx_0275 = 0;
    $26 = $23;
    do {
     $27 = HEAP32[$26 + ($faceIdx_0275 * 24 & -1) >> 2] | 0;
     $28 = HEAP32[$__begin__i448 >> 2] | 0;
     $v0_sroa_0_0_copyload200 = HEAP32[$28 + ($27 * 24 & -1) >> 2] | 0;
     $v0_sroa_1_4_copyload210 = HEAP32[$28 + ($27 * 24 & -1) + 4 >> 2] | 0;
     $v0_sroa_2_8_copyload219 = HEAP32[$28 + ($27 * 24 & -1) + 8 >> 2] | 0;
     $29 = HEAP32[$26 + ($faceIdx_0275 * 24 & -1) + 4 >> 2] | 0;
     $v1_sroa_0_0_copyload158 = HEAP32[$28 + ($29 * 24 & -1) >> 2] | 0;
     $v1_sroa_1_4_copyload172 = HEAP32[$28 + ($29 * 24 & -1) + 4 >> 2] | 0;
     $v1_sroa_2_8_copyload185 = HEAP32[$28 + ($29 * 24 & -1) + 8 >> 2] | 0;
     $30 = HEAP32[$26 + ($faceIdx_0275 * 24 & -1) + 8 >> 2] | 0;
     $v2_sroa_0_0_copyload123 = HEAP32[$28 + ($30 * 24 & -1) >> 2] | 0;
     $v2_sroa_1_4_copyload132 = HEAP32[$28 + ($30 * 24 & -1) + 4 >> 2] | 0;
     $v2_sroa_2_8_copyload140 = HEAP32[$28 + ($30 * 24 & -1) + 8 >> 2] | 0;
     $sub_i = $v1_sroa_0_0_copyload158 - $v0_sroa_0_0_copyload200 | 0;
     $sub4_i = $v1_sroa_1_4_copyload172 - $v0_sroa_1_4_copyload210 | 0;
     $sub6_i = $v1_sroa_2_8_copyload185 - $v0_sroa_2_8_copyload219 | 0;
     $sub_i75 = $v2_sroa_0_0_copyload123 - $v0_sroa_0_0_copyload200 | 0;
     $sub4_i78 = $v2_sroa_1_4_copyload132 - $v0_sroa_1_4_copyload210 | 0;
     $sub6_i81 = $v2_sroa_2_8_copyload140 - $v0_sroa_2_8_copyload219 | 0;
     $mul_i = Math_imul($sub6_i81, $sub4_i) | 0;
     $sub_i88 = $mul_i - (Math_imul($sub4_i78, $sub6_i) | 0) | 0;
     $mul6_i = Math_imul($sub_i75, $sub6_i) | 0;
     $sub10_i = $mul6_i - (Math_imul($sub6_i81, $sub_i) | 0) | 0;
     $mul13_i = Math_imul($sub4_i78, $sub_i) | 0;
     $sub17_i = $mul13_i - (Math_imul($sub_i75, $sub4_i) | 0) | 0;
     $conv_i_i$0 = $sub_i88;
     $conv_i_i$1 = ($sub_i88 | 0) < 0 ? -1 : 0;
     $mul_i_i$0 = ___muldi3($conv_i_i$0, $conv_i_i$1, $conv_i_i$0, $conv_i_i$1) | 0;
     $mul_i_i$1 = tempRet0;
     $conv4_i_i$0 = $sub10_i;
     $conv4_i_i$1 = ($sub10_i | 0) < 0 ? -1 : 0;
     $mul7_i_i$0 = ___muldi3($conv4_i_i$0, $conv4_i_i$1, $conv4_i_i$0, $conv4_i_i$1) | 0;
     $mul7_i_i$1 = tempRet0;
     $conv8_i_i$0 = $sub17_i;
     $conv8_i_i$1 = ($sub17_i | 0) < 0 ? -1 : 0;
     $mul11_i_i$0 = ___muldi3($conv8_i_i$0, $conv8_i_i$1, $conv8_i_i$0, $conv8_i_i$1) | 0;
     $add_i_i$0 = _i64Add($mul_i_i$0, $mul_i_i$1, $mul11_i_i$0, tempRet0) | 0;
     $add12_i_i$0 = _i64Add($add_i_i$0, tempRet0, $mul7_i_i$0, $mul7_i_i$1) | 0;
     $call41 = +Math_abs(+(+($sub17_i | 0) / +(~~+Math_sqrt(+(+($add12_i_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0)) | 0)));
     $31$0 = HEAP32[$X >> 2] | 0;
     $31$1 = HEAP32[$X + 4 >> 2] | 0;
     $sub$0 = _i64Subtract($v0_sroa_0_0_copyload200, ($v0_sroa_0_0_copyload200 | 0) < 0 ? -1 : 0, $31$0, $31$1) | 0;
     $32 = HEAP32[$gridScale >> 2] | 0;
     $conv47$0 = $32;
     $conv47$1 = ($32 | 0) < 0 ? -1 : 0;
     $div48$0 = ___divdi3($sub$0, tempRet0, $conv47$0, $conv47$1) | 0;
     $conv49 = $div48$0;
     $33$0 = HEAP32[$Y >> 2] | 0;
     $33$1 = HEAP32[$Y + 4 >> 2] | 0;
     $sub55$0 = _i64Subtract($v0_sroa_1_4_copyload210, ($v0_sroa_1_4_copyload210 | 0) < 0 ? -1 : 0, $33$0, $33$1) | 0;
     $div58$0 = ___divdi3($sub55$0, tempRet0, $conv47$0, $conv47$1) | 0;
     $conv59 = $div58$0;
     $sub65$0 = _i64Subtract($v1_sroa_0_0_copyload158, ($v1_sroa_0_0_copyload158 | 0) < 0 ? -1 : 0, $31$0, $31$1) | 0;
     $div68$0 = ___divdi3($sub65$0, tempRet0, $conv47$0, $conv47$1) | 0;
     $conv69 = $div68$0;
     $sub75$0 = _i64Subtract($v1_sroa_1_4_copyload172, ($v1_sroa_1_4_copyload172 | 0) < 0 ? -1 : 0, $33$0, $33$1) | 0;
     $div78$0 = ___divdi3($sub75$0, tempRet0, $conv47$0, $conv47$1) | 0;
     $conv79 = $div78$0;
     $sub85$0 = _i64Subtract($v2_sroa_0_0_copyload123, ($v2_sroa_0_0_copyload123 | 0) < 0 ? -1 : 0, $31$0, $31$1) | 0;
     $div88$0 = ___divdi3($sub85$0, tempRet0, $conv47$0, $conv47$1) | 0;
     $conv89 = $div88$0;
     $sub95$0 = _i64Subtract($v2_sroa_1_4_copyload132, ($v2_sroa_1_4_copyload132 | 0) < 0 ? -1 : 0, $33$0, $33$1) | 0;
     $div98$0 = ___divdi3($sub95$0, tempRet0, $conv47$0, $conv47$1) | 0;
     $conv99 = $div98$0;
     $cmp103 = ($conv49 | 0) > ($conv69 | 0);
     $v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219 = $cmp103 ? $v1_sroa_2_8_copyload185 : $v0_sroa_2_8_copyload219;
     $conv79_conv59 = $cmp103 ? $conv79 : $conv59;
     $conv69_conv49 = $cmp103 ? $conv69 : $conv49;
     $v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185 = $cmp103 ? $v0_sroa_2_8_copyload219 : $v1_sroa_2_8_copyload185;
     $conv59_conv79 = $cmp103 ? $conv59 : $conv79;
     $conv49_conv69 = $cmp103 ? $conv49 : $conv69;
     $cmp106 = ($conv49_conv69 | 0) > ($conv89 | 0);
     $v2_sroa_2_8_copyload140_v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185 = $cmp106 ? $v2_sroa_2_8_copyload140 : $v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185;
     $conv99_conv59_conv79 = $cmp106 ? $conv99 : $conv59_conv79;
     $conv89_conv49_conv69 = $cmp106 ? $conv89 : $conv49_conv69;
     $v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185_v2_sroa_2_8_copyload140 = $cmp106 ? $v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185 : $v2_sroa_2_8_copyload140;
     $conv59_conv79_conv99 = $cmp106 ? $conv59_conv79 : $conv99;
     $conv49_conv69_conv89 = $cmp106 ? $conv49_conv69 : $conv89;
     $cmp111 = ($conv69_conv49 | 0) > ($conv89_conv49_conv69 | 0);
     $v1_sroa_2_8_copyload185247_v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219 = $cmp111 ? $v2_sroa_2_8_copyload140_v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185 : $v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219;
     $v1_sroa_1_4_copyload172244_conv79_conv59 = $cmp111 ? $conv99_conv59_conv79 : $conv79_conv59;
     $v1_sroa_0_0_copyload158241_conv69_conv49 = $cmp111 ? $conv89_conv49_conv69 : $conv69_conv49;
     $v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185247 = $cmp111 ? $v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219 : $v2_sroa_2_8_copyload140_v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185;
     $conv79_conv59_v1_sroa_1_4_copyload172244 = $cmp111 ? $conv79_conv59 : $conv99_conv59_conv79;
     $conv69_conv49_v1_sroa_0_0_copyload158241 = $cmp111 ? $conv69_conv49 : $conv89_conv49_conv69;
     $conv117$0 = $v1_sroa_0_0_copyload158241_conv69_conv49;
     $conv117$1 = ($v1_sroa_0_0_copyload158241_conv69_conv49 | 0) < 0 ? -1 : 0;
     $conv120$0 = $conv69_conv49_v1_sroa_0_0_copyload158241;
     $conv120$1 = ($conv69_conv49_v1_sroa_0_0_copyload158241 | 0) < 0 ? -1 : 0;
     if (($v1_sroa_0_0_copyload158241_conv69_conv49 | 0) < ($conv69_conv49_v1_sroa_0_0_copyload158241 | 0)) {
      $conv125$0 = $v1_sroa_1_4_copyload172244_conv79_conv59;
      $conv125$1 = ($v1_sroa_1_4_copyload172244_conv79_conv59 | 0) < 0 ? -1 : 0;
      $sub128 = $conv79_conv59_v1_sroa_1_4_copyload172244 - $v1_sroa_1_4_copyload172244_conv79_conv59 | 0;
      $conv129$0 = $sub128;
      $conv129$1 = ($sub128 | 0) < 0 ? -1 : 0;
      $sub136 = $conv69_conv49_v1_sroa_0_0_copyload158241 - $v1_sroa_0_0_copyload158241_conv69_conv49 | 0;
      $conv137$0 = $sub136;
      $conv137$1 = ($sub136 | 0) < 0 ? -1 : 0;
      $sub145 = $conv59_conv79_conv99 - $v1_sroa_1_4_copyload172244_conv79_conv59 | 0;
      $conv146$0 = $sub145;
      $conv146$1 = ($sub145 | 0) < 0 ? -1 : 0;
      $sub153 = $conv49_conv69_conv89 - $v1_sroa_0_0_copyload158241_conv69_conv49 | 0;
      $conv154$0 = $sub153;
      $conv154$1 = ($sub153 | 0) < 0 ? -1 : 0;
      $conv159$0 = $v1_sroa_2_8_copyload185247_v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219;
      $conv159$1 = ($v1_sroa_2_8_copyload185247_v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219 | 0) < 0 ? -1 : 0;
      $sub162 = $v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185247 - $v1_sroa_2_8_copyload185247_v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219 | 0;
      $conv163$0 = $sub162;
      $conv163$1 = ($sub162 | 0) < 0 ? -1 : 0;
      $sub179 = $v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185_v2_sroa_2_8_copyload140 - $v1_sroa_2_8_copyload185247_v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219 | 0;
      $conv180$0 = $sub179;
      $conv180$1 = ($sub179 | 0) < 0 ? -1 : 0;
      $x115_0263$1 = $conv117$1;
      $x115_0263$0 = $conv117$0;
      do {
       $sub132$0 = _i64Subtract($x115_0263$0, $x115_0263$1, $conv117$0, $conv117$1) | 0;
       $sub132$1 = tempRet0;
       $mul133$0 = ___muldi3($sub132$0, $sub132$1, $conv129$0, $conv129$1) | 0;
       $div138$0 = ___divdi3($mul133$0, tempRet0, $conv137$0, $conv137$1) | 0;
       $add139$0 = _i64Add($div138$0, tempRet0, $conv125$0, $conv125$1) | 0;
       $add139$1 = tempRet0;
       $mul150$0 = ___muldi3($sub132$0, $sub132$1, $conv146$0, $conv146$1) | 0;
       $div155$0 = ___divdi3($mul150$0, tempRet0, $conv154$0, $conv154$1) | 0;
       $add156$0 = _i64Add($div155$0, tempRet0, $conv125$0, $conv125$1) | 0;
       $add156$1 = tempRet0;
       $mul167$0 = ___muldi3($sub132$0, $sub132$1, $conv163$0, $conv163$1) | 0;
       $div172$0 = ___divdi3($mul167$0, tempRet0, $conv137$0, $conv137$1) | 0;
       $add173$0 = _i64Add($div172$0, tempRet0, $conv159$0, $conv159$1) | 0;
       $add173$1 = tempRet0;
       $mul184$0 = ___muldi3($sub132$0, $sub132$1, $conv180$0, $conv180$1) | 0;
       $div189$0 = ___divdi3($mul184$0, tempRet0, $conv154$0, $conv154$1) | 0;
       $add190$0 = _i64Add($div189$0, tempRet0, $conv159$0, $conv159$1) | 0;
       $add190$1 = tempRet0;
       $cmp191 = ($add139$1 | 0) > ($add156$1 | 0) | ($add139$1 | 0) == ($add156$1 | 0) & $add139$0 >>> 0 > $add156$0 >>> 0;
       $add156_add139$0 = $cmp191 ? $add156$0 : $add139$0;
       $add156_add139$1 = $cmp191 ? $add156$1 : $add139$1;
       $add139_add156$0 = $cmp191 ? $add139$0 : $add156$0;
       $add139_add156$1 = $cmp191 ? $add139$1 : $add156$1;
       $add190_add173$0 = $cmp191 ? $add190$0 : $add173$0;
       $add190_add173$1 = $cmp191 ? $add190$1 : $add173$1;
       if (($add156_add139$1 | 0) < ($add139_add156$1 | 0) | ($add156_add139$1 | 0) == ($add139_add156$1 | 0) & $add156_add139$0 >>> 0 < $add139_add156$0 >>> 0) {
        $sub206$0 = _i64Subtract($cmp191 ? $add173$0 : $add190$0, $cmp191 ? $add173$1 : $add190$1, $add190_add173$0, $add190_add173$1) | 0;
        $sub206$1 = tempRet0;
        $sub209$0 = _i64Subtract($add139_add156$0, $add139_add156$1, $add156_add139$0, $add156_add139$1) | 0;
        $sub209$1 = tempRet0;
        $y195_0261$1 = $add156_add139$1;
        $y195_0261$0 = $add156_add139$0;
        do {
         $34 = HEAP32[$gridWidth >> 2] | 0;
         $mul201$0 = ___muldi3($34, ($34 | 0) < 0 ? -1 : 0, $y195_0261$0, $y195_0261$1) | 0;
         $add202$0 = _i64Add($mul201$0, tempRet0, $x115_0263$0, $x115_0263$1) | 0;
         $idxprom = $add202$0;
         $35 = HEAP32[$grid >> 2] | 0;
         $sub207$0 = _i64Subtract($y195_0261$0, $y195_0261$1, $add156_add139$0, $add156_add139$1) | 0;
         $mul208$0 = ___muldi3($sub207$0, tempRet0, $sub206$0, $sub206$1) | 0;
         $div210$0 = ___divdi3($mul208$0, tempRet0, $sub209$0, $sub209$1) | 0;
         $add211$0 = _i64Add($div210$0, tempRet0, $add190_add173$0, $add190_add173$1) | 0;
         HEAP32[$z2_i_i93 >> 2] = $add211$0;
         HEAPF64[$cosAngle3_i_i94 >> 3] = $call41;
         $__end__i425 = $35 + ($idxprom * 12 & -1) + 4 | 0;
         $36 = HEAP32[$__end__i425 >> 2] | 0;
         if (($36 | 0) == (HEAP32[$35 + ($idxprom * 12 & -1) + 8 >> 2] | 0)) {
          __ZNSt3__16vectorI12SupportPointNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($35 + ($idxprom * 12 & -1) | 0, $ref_tmp205);
         } else {
          if (($36 | 0) == 0) {
           $39 = 0;
          } else {
           $38 = $36;
           HEAP32[$38 >> 2] = HEAP32[$19 >> 2];
           HEAP32[$38 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
           HEAP32[$38 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
           HEAP32[$38 + 12 >> 2] = HEAP32[$19 + 12 >> 2];
           $39 = HEAP32[$__end__i425 >> 2] | 0;
          }
          HEAP32[$__end__i425 >> 2] = $39 + 16;
         }
         $y195_0261$0 = _i64Add($y195_0261$0, $y195_0261$1, 1, 0) | 0;
         $y195_0261$1 = tempRet0;
        } while (($y195_0261$1 | 0) < ($add139_add156$1 | 0) | ($y195_0261$1 | 0) == ($add139_add156$1 | 0) & $y195_0261$0 >>> 0 < $add139_add156$0 >>> 0);
       }
       $x115_0263$0 = _i64Add($x115_0263$0, $x115_0263$1, 1, 0) | 0;
       $x115_0263$1 = tempRet0;
      } while (($x115_0263$1 | 0) < ($conv120$1 | 0) | ($x115_0263$1 | 0) == ($conv120$1 | 0) & $x115_0263$0 >>> 0 < $conv120$0 >>> 0);
     }
     $conv222$0 = $conv49_conv69_conv89;
     $conv222$1 = ($conv49_conv69_conv89 | 0) < 0 ? -1 : 0;
     if (($conv69_conv49_v1_sroa_0_0_copyload158241 | 0) < ($conv49_conv69_conv89 | 0)) {
      $conv228$0 = $conv79_conv59_v1_sroa_1_4_copyload172244;
      $conv228$1 = ($conv79_conv59_v1_sroa_1_4_copyload172244 | 0) < 0 ? -1 : 0;
      $sub231 = $conv59_conv79_conv99 - $conv79_conv59_v1_sroa_1_4_copyload172244 | 0;
      $conv232$0 = $sub231;
      $conv232$1 = ($sub231 | 0) < 0 ? -1 : 0;
      $sub239 = $conv49_conv69_conv89 - $conv69_conv49_v1_sroa_0_0_copyload158241 | 0;
      $conv240$0 = $sub239;
      $conv240$1 = ($sub239 | 0) < 0 ? -1 : 0;
      $conv246$0 = $v1_sroa_1_4_copyload172244_conv79_conv59;
      $conv246$1 = ($v1_sroa_1_4_copyload172244_conv79_conv59 | 0) < 0 ? -1 : 0;
      $sub249 = $conv59_conv79_conv99 - $v1_sroa_1_4_copyload172244_conv79_conv59 | 0;
      $conv250$0 = $sub249;
      $conv250$1 = ($sub249 | 0) < 0 ? -1 : 0;
      $sub257 = $conv49_conv69_conv89 - $v1_sroa_0_0_copyload158241_conv69_conv49 | 0;
      $conv258$0 = $sub257;
      $conv258$1 = ($sub257 | 0) < 0 ? -1 : 0;
      $conv264$0 = $v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185247;
      $conv264$1 = ($v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185247 | 0) < 0 ? -1 : 0;
      $sub267 = $v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185_v2_sroa_2_8_copyload140 - $v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185247 | 0;
      $conv268$0 = $sub267;
      $conv268$1 = ($sub267 | 0) < 0 ? -1 : 0;
      $conv282$0 = $v1_sroa_2_8_copyload185247_v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219;
      $conv282$1 = ($v1_sroa_2_8_copyload185247_v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219 | 0) < 0 ? -1 : 0;
      $sub285 = $v0_sroa_2_8_copyload219_v1_sroa_2_8_copyload185_v2_sroa_2_8_copyload140 - $v1_sroa_2_8_copyload185247_v1_sroa_2_8_copyload185_v0_sroa_2_8_copyload219 | 0;
      $conv286$0 = $sub285;
      $conv286$1 = ($sub285 | 0) < 0 ? -1 : 0;
      $x217_0268$1 = $conv120$1;
      $x217_0268$0 = $conv120$0;
      do {
       $sub235$0 = _i64Subtract($x217_0268$0, $x217_0268$1, $conv120$0, $conv120$1) | 0;
       $sub235$1 = tempRet0;
       $mul236$0 = ___muldi3($sub235$0, $sub235$1, $conv232$0, $conv232$1) | 0;
       $div241$0 = ___divdi3($mul236$0, tempRet0, $conv240$0, $conv240$1) | 0;
       $add242$0 = _i64Add($div241$0, tempRet0, $conv228$0, $conv228$1) | 0;
       $add242$1 = tempRet0;
       $sub253$0 = _i64Subtract($x217_0268$0, $x217_0268$1, $conv117$0, $conv117$1) | 0;
       $sub253$1 = tempRet0;
       $mul254$0 = ___muldi3($sub253$0, $sub253$1, $conv250$0, $conv250$1) | 0;
       $div259$0 = ___divdi3($mul254$0, tempRet0, $conv258$0, $conv258$1) | 0;
       $add260$0 = _i64Add($div259$0, tempRet0, $conv246$0, $conv246$1) | 0;
       $add260$1 = tempRet0;
       $mul272$0 = ___muldi3($sub235$0, $sub235$1, $conv268$0, $conv268$1) | 0;
       $div277$0 = ___divdi3($mul272$0, tempRet0, $conv240$0, $conv240$1) | 0;
       $add278$0 = _i64Add($div277$0, tempRet0, $conv264$0, $conv264$1) | 0;
       $add278$1 = tempRet0;
       $mul290$0 = ___muldi3($sub253$0, $sub253$1, $conv286$0, $conv286$1) | 0;
       $div295$0 = ___divdi3($mul290$0, tempRet0, $conv258$0, $conv258$1) | 0;
       $add296$0 = _i64Add($div295$0, tempRet0, $conv282$0, $conv282$1) | 0;
       $add296$1 = tempRet0;
       $cmp297 = ($add242$1 | 0) > ($add260$1 | 0) | ($add242$1 | 0) == ($add260$1 | 0) & $add242$0 >>> 0 > $add260$0 >>> 0;
       $add260_add242$0 = $cmp297 ? $add260$0 : $add242$0;
       $add260_add242$1 = $cmp297 ? $add260$1 : $add242$1;
       $add242_add260$0 = $cmp297 ? $add242$0 : $add260$0;
       $add242_add260$1 = $cmp297 ? $add242$1 : $add260$1;
       $add296_add278$0 = $cmp297 ? $add296$0 : $add278$0;
       $add296_add278$1 = $cmp297 ? $add296$1 : $add278$1;
       if (($add260_add242$1 | 0) < ($add242_add260$1 | 0) | ($add260_add242$1 | 0) == ($add242_add260$1 | 0) & $add260_add242$0 >>> 0 < $add242_add260$0 >>> 0) {
        $sub313$0 = _i64Subtract($cmp297 ? $add278$0 : $add296$0, $cmp297 ? $add278$1 : $add296$1, $add296_add278$0, $add296_add278$1) | 0;
        $sub313$1 = tempRet0;
        $sub316$0 = _i64Subtract($add242_add260$0, $add242_add260$1, $add260_add242$0, $add260_add242$1) | 0;
        $sub316$1 = tempRet0;
        $y301_0266$1 = $add260_add242$1;
        $y301_0266$0 = $add260_add242$0;
        do {
         $40 = HEAP32[$gridWidth >> 2] | 0;
         $mul307$0 = ___muldi3($40, ($40 | 0) < 0 ? -1 : 0, $y301_0266$0, $y301_0266$1) | 0;
         $add308$0 = _i64Add($mul307$0, tempRet0, $x217_0268$0, $x217_0268$1) | 0;
         $idxprom309 = $add308$0;
         $41 = HEAP32[$grid >> 2] | 0;
         $sub314$0 = _i64Subtract($y301_0266$0, $y301_0266$1, $add260_add242$0, $add260_add242$1) | 0;
         $mul315$0 = ___muldi3($sub314$0, tempRet0, $sub313$0, $sub313$1) | 0;
         $div317$0 = ___divdi3($mul315$0, tempRet0, $sub316$0, $sub316$1) | 0;
         $add318$0 = _i64Add($div317$0, tempRet0, $add296_add278$0, $add296_add278$1) | 0;
         HEAP32[$z2_i_i >> 2] = $add318$0;
         HEAPF64[$cosAngle3_i_i >> 3] = $call41;
         $__end__i384 = $41 + ($idxprom309 * 12 & -1) + 4 | 0;
         $42 = HEAP32[$__end__i384 >> 2] | 0;
         if (($42 | 0) == (HEAP32[$41 + ($idxprom309 * 12 & -1) + 8 >> 2] | 0)) {
          __ZNSt3__16vectorI12SupportPointNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($41 + ($idxprom309 * 12 & -1) | 0, $ref_tmp312);
         } else {
          if (($42 | 0) == 0) {
           $45 = 0;
          } else {
           $44 = $42;
           HEAP32[$44 >> 2] = HEAP32[$18 >> 2];
           HEAP32[$44 + 4 >> 2] = HEAP32[$18 + 4 >> 2];
           HEAP32[$44 + 8 >> 2] = HEAP32[$18 + 8 >> 2];
           HEAP32[$44 + 12 >> 2] = HEAP32[$18 + 12 >> 2];
           $45 = HEAP32[$__end__i384 >> 2] | 0;
          }
          HEAP32[$__end__i384 >> 2] = $45 + 16;
         }
         $y301_0266$0 = _i64Add($y301_0266$0, $y301_0266$1, 1, 0) | 0;
         $y301_0266$1 = tempRet0;
        } while (($y301_0266$1 | 0) < ($add242_add260$1 | 0) | ($y301_0266$1 | 0) == ($add242_add260$1 | 0) & $y301_0266$0 >>> 0 < $add242_add260$0 >>> 0);
       }
       $x217_0268$0 = _i64Add($x217_0268$0, $x217_0268$1, 1, 0) | 0;
       $x217_0268$1 = tempRet0;
      } while (($x217_0268$1 | 0) < ($conv222$1 | 0) | ($x217_0268$1 | 0) == ($conv222$1 | 0) & $x217_0268$0 >>> 0 < $conv222$0 >>> 0);
     }
     $faceIdx_0275 = $faceIdx_0275 + 1 | 0;
     $26 = HEAP32[$__begin__i402 >> 2] | 0;
    } while ($faceIdx_0275 >>> 0 < (((HEAP32[$__end__i401 >> 2] | 0) - $26 | 0) / 24 & -1) >>> 0);
    $49 = HEAP32[$__end__i390 >> 2] | 0;
    $48 = HEAP32[$__begin__i391 >> 2] | 0;
   }
   $inc330 = $volumeIdx_0281 + 1 | 0;
   if ($inc330 >>> 0 < (($49 - $48 | 0) / 28 & -1) >>> 0) {
    $volumeIdx_0281 = $inc330;
    $21 = $48;
    $20 = $49;
   } else {
    break;
   }
  }
 }
 $25 = HEAP32[$gridWidth >> 2] | 0;
 if (($25 | 0) <= 0) {
  $60 = HEAP32[$gridScale >> 2] | 0;
  $div361 = ($60 | 0) / 2 & -1;
  $conv362$0 = $div361;
  $conv362$1 = ($div361 | 0) < 0 ? -1 : 0;
  $ld$12$0 = $X | 0;
  $61$0 = HEAP32[$ld$12$0 >> 2] | 0;
  $ld$13$1 = $X + 4 | 0;
  $61$1 = HEAP32[$ld$13$1 >> 2] | 0;
  $add365$0 = _i64Add($61$0, $61$1, $conv362$0, $conv362$1) | 0;
  $add365$1 = tempRet0;
  $st$14$0 = $X | 0;
  HEAP32[$st$14$0 >> 2] = $add365$0;
  $st$15$1 = $X + 4 | 0;
  HEAP32[$st$15$1 >> 2] = $add365$1;
  $ld$16$0 = $Y | 0;
  $62$0 = HEAP32[$ld$16$0 >> 2] | 0;
  $ld$17$1 = $Y + 4 | 0;
  $62$1 = HEAP32[$ld$17$1 >> 2] | 0;
  $add371$0 = _i64Add($62$0, $62$1, $conv362$0, $conv362$1) | 0;
  $add371$1 = tempRet0;
  $st$18$0 = $Y | 0;
  HEAP32[$st$18$0 >> 2] = $add371$0;
  $st$19$1 = $Y + 4 | 0;
  HEAP32[$st$19$1 >> 2] = $add371$1;
  STACKTOP = __stackBase__;
  return;
 }
 $x333_0258 = 0;
 $51 = HEAP32[$gridHeight >> 2] | 0;
 $50 = $25;
 while (1) {
  if (($51 | 0) > 0) {
   $y339_0256 = 0;
   $52 = $50;
   while (1) {
    $add347 = (Math_imul($52, $y339_0256) | 0) + $x333_0258 | 0;
    $53 = HEAP32[$grid >> 2] | 0;
    $54 = HEAP32[$53 + ($add347 * 12 & -1) >> 2] | 0;
    _qsort($54 | 0, (HEAP32[$53 + ($add347 * 12 & -1) + 4 >> 2] | 0) - $54 >> 4 | 0, 16, 16);
    $inc355 = $y339_0256 + 1 | 0;
    $57 = HEAP32[$gridHeight >> 2] | 0;
    $_pre287 = HEAP32[$gridWidth >> 2] | 0;
    if (($inc355 | 0) < ($57 | 0)) {
     $y339_0256 = $inc355;
     $52 = $_pre287;
    } else {
     $59 = $57;
     $58 = $_pre287;
     break;
    }
   }
  } else {
   $59 = $51;
   $58 = $50;
  }
  $inc358 = $x333_0258 + 1 | 0;
  if (($inc358 | 0) < ($58 | 0)) {
   $x333_0258 = $inc358;
   $51 = $59;
   $50 = $58;
  } else {
   break;
  }
 }
 $60 = HEAP32[$gridScale >> 2] | 0;
 $div361 = ($60 | 0) / 2 & -1;
 $conv362$0 = $div361;
 $conv362$1 = ($div361 | 0) < 0 ? -1 : 0;
 $ld$12$0 = $X | 0;
 $61$0 = HEAP32[$ld$12$0 >> 2] | 0;
 $ld$13$1 = $X + 4 | 0;
 $61$1 = HEAP32[$ld$13$1 >> 2] | 0;
 $add365$0 = _i64Add($61$0, $61$1, $conv362$0, $conv362$1) | 0;
 $add365$1 = tempRet0;
 $st$14$0 = $X | 0;
 HEAP32[$st$14$0 >> 2] = $add365$0;
 $st$15$1 = $X + 4 | 0;
 HEAP32[$st$15$1 >> 2] = $add365$1;
 $ld$16$0 = $Y | 0;
 $62$0 = HEAP32[$ld$16$0 >> 2] | 0;
 $ld$17$1 = $Y + 4 | 0;
 $62$1 = HEAP32[$ld$17$1 >> 2] | 0;
 $add371$0 = _i64Add($62$0, $62$1, $conv362$0, $conv362$1) | 0;
 $add371$1 = tempRet0;
 $st$18$0 = $Y | 0;
 HEAP32[$st$18$0 >> 2] = $add371$0;
 $st$19$1 = $Y + 4 | 0;
 HEAP32[$st$19$1 >> 2] = $add371$1;
 STACKTOP = __stackBase__;
 return;
}
function __Z13generateSkirtR16SliceDataStorageiii($storage, $distance, $extrusionWidth, $count) {
 $storage = $storage | 0;
 $distance = $distance | 0;
 $extrusionWidth = $extrusionWidth | 0;
 $count = $count | 0;
 var $skirtUnion = 0, $skirt = 0, $skirtResult = 0, $0 = 0, $__begin__i_i_i_i_i = 0, $__end__i_i_i_i_i = 0, $__first__i_i_i_i_i_i_i_i = 0, $m_MinimaList_i_i = 0, $m_CurrentLM_i_i = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $m_ReverseOutput_i = 0, $__end__i = 0, $__begin__i = 0, $__begin__i_i_i108 = 0, $__end__i_i_i109 = 0, $__first__i_i_i_i_i_i115 = 0, $m_ExecuteLocked_i = 0, $m_SubjFillType_i = 0, $m_ClipFillType_i = 0, $m_ClipType_i = 0, $5 = 0, $6 = 0, $__end__i60 = 0, $__first__i_i_i_i = 0, $skirt36 = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $__first__i_i_i_i_i_i = 0, $div = 0, $7 = 0, $8 = 0, $skirtNr_0132 = 0, $9 = 0, $10 = 0, $conv = 0.0, $12 = 0, $13 = 0, $volumeIdx_0114 = 0, $14 = 0, $__end__i64 = 0, $__begin__i65 = 0, $i_0108 = 0, $22 = 0, $23 = 0, $24 = 0, $incdec_ptr_i_i_i_i_i_i = 0, $25 = 0, $26 = 0, $27 = 0, $__end__i_i_i_i_i_i_i_i_i = 0, $28 = 0, $33 = 0, $53 = 0, $54 = 0, $inc26 = 0, $phitmp142 = 0, $_pre135 = 0, $_pre136 = 0, $57 = 0, $n_0123 = 0, $arrayidx_i82 = 0, $58 = 0, $60 = 0, $inc41 = 0, $61 = 0, $62 = 0, $_lcssa116 = 0, $_lcssa = 0, $78 = 0, $incdec_ptr_i_i_i_i_i_i77 = 0, $79 = 0, $80 = 0, $81 = 0, $__end__i_i_i_i_i_i_i_i_i83 = 0, $82 = 0, $87 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 136 | 0;
 $skirtUnion = __stackBase__ | 0;
 $skirt = __stackBase__ + 104 | 0;
 $skirtResult = __stackBase__ + 120 | 0;
 if (($count | 0) <= 0) {
  STACKTOP = __stackBase__;
  return;
 }
 $0 = $skirtUnion + 76 | 0;
 $__begin__i_i_i_i_i = $skirtUnion + 92 | 0;
 $__end__i_i_i_i_i = $skirtUnion + 96 | 0;
 $__first__i_i_i_i_i_i_i_i = $skirtUnion + 100 | 0;
 $m_MinimaList_i_i = $skirtUnion + 84 | 0;
 $m_CurrentLM_i_i = $skirtUnion + 80 | 0;
 $1 = $skirtUnion | 0;
 $2 = $skirtUnion + 88 | 0;
 $3 = $skirtUnion + 4 | 0;
 $4 = $skirtUnion + 44 | 0;
 $m_ReverseOutput_i = $skirtUnion + 72 | 0;
 $__end__i = $storage + 64 | 0;
 $__begin__i = $storage + 60 | 0;
 $__begin__i_i_i108 = $skirtResult | 0;
 $__end__i_i_i109 = $skirtResult + 4 | 0;
 $__first__i_i_i_i_i_i115 = $skirtResult + 8 | 0;
 $m_ExecuteLocked_i = $skirtUnion + 60 | 0;
 $m_SubjFillType_i = $skirtUnion + 68 | 0;
 $m_ClipFillType_i = $skirtUnion + 64 | 0;
 $m_ClipType_i = $skirtUnion + 40 | 0;
 $5 = $skirtUnion;
 $6 = $skirtUnion + 76 | 0;
 $__end__i60 = $storage + 40 | 0;
 $__first__i_i_i_i = $storage + 44 | 0;
 $skirt36 = $storage + 36 | 0;
 $__begin__i_i_i = $skirt | 0;
 $__end__i_i_i = $skirt + 4 | 0;
 $__first__i_i_i_i_i_i = $skirt + 8 | 0;
 $div = ($extrusionWidth | 0) / 2 & -1;
 $7 = $skirtUnion;
 $8 = $skirtUnion;
 $skirtNr_0132 = 0;
 do {
  HEAP32[$__begin__i_i_i_i_i >> 2] = 0;
  HEAP32[$__end__i_i_i_i_i >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i_i_i >> 2] = 0;
  HEAP32[$m_MinimaList_i_i >> 2] = 0;
  HEAP32[$m_CurrentLM_i_i >> 2] = 0;
  HEAP32[$1 >> 2] = 11908;
  HEAP32[$0 >> 2] = 11948;
  _memset($3 | 0, 0, 36);
  _memset($4 | 0, 0, 17);
  HEAP8[$2] = 0;
  HEAP8[$m_ReverseOutput_i] = 0;
  $9 = HEAP32[$__end__i >> 2] | 0;
  $10 = HEAP32[$__begin__i >> 2] | 0;
  if (($9 | 0) == ($10 | 0)) {
   HEAP32[$__begin__i_i_i108 >> 2] = 0;
   HEAP32[$__end__i_i_i109 >> 2] = 0;
   HEAP32[$__first__i_i_i_i_i_i115 >> 2] = 0;
   label = 1156;
  } else {
   $conv = +((Math_imul($skirtNr_0132, $extrusionWidth) | 0) + $distance + $div | 0);
   $volumeIdx_0114 = 0;
   $13 = $10;
   $12 = $9;
   while (1) {
    $14 = HEAP32[$13 + ($volumeIdx_0114 * 12 & -1) >> 2] | 0;
    $__end__i64 = $14 + 4 | 0;
    $__begin__i65 = $14 | 0;
    if ((HEAP32[$__end__i64 >> 2] | 0) == (HEAP32[$__begin__i65 >> 2] | 0)) {
     $54 = $12;
     $53 = $13;
    } else {
     $i_0108 = 0;
     do {
      HEAP32[$__begin__i_i_i >> 2] = 0;
      HEAP32[$__end__i_i_i >> 2] = 0;
      HEAP32[$__first__i_i_i_i_i_i >> 2] = 0;
      __ZN10ClipperLib14OffsetPolygonsERKNSt3__16vectorINS1_INS_8IntPointENS0_9allocatorIS2_EEEENS3_IS5_EEEERS7_dNS_8JoinTypeEdb((HEAP32[$__begin__i65 >> 2] | 0) + ($i_0108 * 96 & -1) + 32 | 0, $skirt, $conv, 0, 2.0, 0);
      __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($8 + (HEAP32[(HEAP32[$7 >> 2] | 0) - 12 >> 2] | 0) | 0, HEAP32[$__begin__i_i_i >> 2] | 0, 0) | 0;
      $22 = HEAP32[$__begin__i_i_i >> 2] | 0;
      if (($22 | 0) != 0) {
       $23 = HEAP32[$__end__i_i_i >> 2] | 0;
       if (($22 | 0) == ($23 | 0)) {
        $33 = $22;
       } else {
        $24 = $23;
        while (1) {
         $incdec_ptr_i_i_i_i_i_i = $24 - 12 | 0;
         HEAP32[$__end__i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i;
         $25 = HEAP32[$incdec_ptr_i_i_i_i_i_i >> 2] | 0;
         $26 = $25;
         if (($25 | 0) == 0) {
          $27 = $incdec_ptr_i_i_i_i_i_i;
         } else {
          $__end__i_i_i_i_i_i_i_i_i = $24 - 12 + 4 | 0;
          $28 = HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] | 0;
          if (($25 | 0) != ($28 | 0)) {
           HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] = $28 + ((($28 - 16 + (-$26 | 0) | 0) >>> 4 ^ -1) << 4);
          }
          __ZdlPv($25);
          $27 = HEAP32[$__end__i_i_i >> 2] | 0;
         }
         if (($22 | 0) == ($27 | 0)) {
          break;
         } else {
          $24 = $27;
         }
        }
        $33 = HEAP32[$__begin__i_i_i >> 2] | 0;
       }
       __ZdlPv($33);
      }
      $i_0108 = $i_0108 + 1 | 0;
     } while ($i_0108 >>> 0 < (((HEAP32[$__end__i64 >> 2] | 0) - (HEAP32[$__begin__i65 >> 2] | 0) | 0) / 96 & -1) >>> 0);
     $54 = HEAP32[$__end__i >> 2] | 0;
     $53 = HEAP32[$__begin__i >> 2] | 0;
    }
    $inc26 = $volumeIdx_0114 + 1 | 0;
    if ($inc26 >>> 0 < (($54 - $53 | 0) / 12 & -1) >>> 0) {
     $volumeIdx_0114 = $inc26;
     $13 = $53;
     $12 = $54;
    } else {
     break;
    }
   }
   $phitmp142 = (HEAP8[$m_ExecuteLocked_i] & 1) == 0;
   HEAP32[$__begin__i_i_i108 >> 2] = 0;
   HEAP32[$__end__i_i_i109 >> 2] = 0;
   HEAP32[$__first__i_i_i_i_i_i115 >> 2] = 0;
   if ($phitmp142) {
    label = 1156;
   }
  }
  do {
   if ((label | 0) == 1156) {
    label = 0;
    HEAP8[$m_ExecuteLocked_i] = 1;
    HEAP32[$m_SubjFillType_i >> 2] = 1;
    HEAP32[$m_ClipFillType_i >> 2] = 1;
    HEAP32[$m_ClipType_i >> 2] = 1;
    if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$5 >> 2] | 0) + 16 >> 2] & 63]($skirtUnion, 0) | 0) {
     __ZN10ClipperLib7Clipper11BuildResultERNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEE($skirtUnion, $skirtResult);
     $_pre135 = HEAP32[$__end__i_i_i109 >> 2] | 0;
    } else {
     $_pre135 = 0;
    }
    HEAP8[$m_ExecuteLocked_i] = 0;
    $_pre136 = HEAP32[$__begin__i_i_i108 >> 2] | 0;
    if (($_pre135 | 0) == ($_pre136 | 0)) {
     $_lcssa = $_pre136;
     $_lcssa116 = $_pre136;
    } else {
     $n_0123 = 0;
     $57 = $_pre136;
     while (1) {
      $arrayidx_i82 = $57 + ($n_0123 * 12 & -1) | 0;
      $58 = HEAP32[$__end__i60 >> 2] | 0;
      if (($58 | 0) == (HEAP32[$__first__i_i_i_i >> 2] | 0)) {
       __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($skirt36, $arrayidx_i82);
      } else {
       if (($58 | 0) == 0) {
        $60 = 0;
       } else {
        __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($58, $arrayidx_i82);
        $60 = HEAP32[$__end__i60 >> 2] | 0;
       }
       HEAP32[$__end__i60 >> 2] = $60 + 12;
      }
      $inc41 = $n_0123 + 1 | 0;
      $61 = HEAP32[$__end__i_i_i109 >> 2] | 0;
      $62 = HEAP32[$__begin__i_i_i108 >> 2] | 0;
      if ($inc41 >>> 0 < (($61 - $62 | 0) / 12 & -1) >>> 0) {
       $n_0123 = $inc41;
       $57 = $62;
      } else {
       $_lcssa = $61;
       $_lcssa116 = $62;
       break;
      }
     }
    }
    if (($_lcssa116 | 0) == 0) {
     break;
    }
    if (($_lcssa116 | 0) == ($_lcssa | 0)) {
     $87 = $_lcssa116;
    } else {
     $78 = $_lcssa;
     while (1) {
      $incdec_ptr_i_i_i_i_i_i77 = $78 - 12 | 0;
      HEAP32[$__end__i_i_i109 >> 2] = $incdec_ptr_i_i_i_i_i_i77;
      $79 = HEAP32[$incdec_ptr_i_i_i_i_i_i77 >> 2] | 0;
      $80 = $79;
      if (($79 | 0) == 0) {
       $81 = $incdec_ptr_i_i_i_i_i_i77;
      } else {
       $__end__i_i_i_i_i_i_i_i_i83 = $78 - 12 + 4 | 0;
       $82 = HEAP32[$__end__i_i_i_i_i_i_i_i_i83 >> 2] | 0;
       if (($79 | 0) != ($82 | 0)) {
        HEAP32[$__end__i_i_i_i_i_i_i_i_i83 >> 2] = $82 + ((($82 - 16 + (-$80 | 0) | 0) >>> 4 ^ -1) << 4);
       }
       __ZdlPv($79);
       $81 = HEAP32[$__end__i_i_i109 >> 2] | 0;
      }
      if (($_lcssa116 | 0) == ($81 | 0)) {
       break;
      } else {
       $78 = $81;
      }
     }
     $87 = HEAP32[$__begin__i_i_i108 >> 2] | 0;
    }
    __ZdlPv($87);
   }
  } while (0);
  __ZN10ClipperLib7ClipperD2Ev($skirtUnion, 12040);
  __ZN10ClipperLib11ClipperBaseD2Ev($6);
  $skirtNr_0132 = $skirtNr_0132 + 1 | 0;
 } while (($skirtNr_0132 | 0) < ($count | 0));
 STACKTOP = __stackBase__;
 return;
}
function __Z12generateRaftR16SliceDataStoragei($storage, $distance) {
 $storage = $storage | 0;
 $distance = $distance | 0;
 var $raftUnion = 0, $raft = 0, $raftResult = 0, $__end__i = 0, $5 = 0, $__begin__i = 0, $6 = 0, $__begin__i_i_i100132 = 0, $__end__i_i_i101133 = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $__first__i_i_i_i_i_i = 0, $conv = 0.0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $volumeIdx_0121 = 0, $12 = 0, $__end__i56 = 0, $__begin__i57 = 0, $i_0115 = 0, $20 = 0, $21 = 0, $22 = 0, $incdec_ptr_i_i_i_i_i_i = 0, $23 = 0, $24 = 0, $25 = 0, $__end__i_i_i_i_i_i_i_i_i = 0, $26 = 0, $31 = 0, $51 = 0, $52 = 0, $inc22 = 0, $m_ExecuteLocked_i_phi_trans_insert = 0, $phitmp131 = 0, $__begin__i_i_i100 = 0, $__end__i_i_i101 = 0, $__end__i_i_i101141 = 0, $__begin__i_i_i100137 = 0, $m_ExecuteLocked_i_pre_phi135 = 0, $_pre124 = 0, $_pre125 = 0, $__end__i52 = 0, $__first__i_i_i_i = 0, $raftOutline = 0, $56 = 0, $n_0108 = 0, $arrayidx_i74 = 0, $57 = 0, $59 = 0, $inc36 = 0, $60 = 0, $61 = 0, $_lcssa101 = 0, $_lcssa = 0, $77 = 0, $incdec_ptr_i_i_i_i_i_i74 = 0, $78 = 0, $79 = 0, $80 = 0, $__end__i_i_i_i_i_i_i_i_i80 = 0, $81 = 0, $86 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 136 | 0;
 $raftUnion = __stackBase__ | 0;
 $raft = __stackBase__ + 104 | 0;
 $raftResult = __stackBase__ + 120 | 0;
 HEAP32[$raftUnion + 92 >> 2] = 0;
 HEAP32[$raftUnion + 96 >> 2] = 0;
 HEAP32[$raftUnion + 100 >> 2] = 0;
 HEAP32[$raftUnion + 84 >> 2] = 0;
 HEAP32[$raftUnion + 80 >> 2] = 0;
 HEAP32[$raftUnion >> 2] = 11908;
 HEAP32[$raftUnion + 76 >> 2] = 11948;
 _memset($raftUnion + 4 | 0, 0, 36);
 _memset($raftUnion + 44 | 0, 0, 17);
 HEAP8[$raftUnion + 88 | 0] = 0;
 HEAP8[$raftUnion + 72 | 0] = 0;
 $__end__i = $storage + 64 | 0;
 $5 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i = $storage + 60 | 0;
 $6 = HEAP32[$__begin__i >> 2] | 0;
 if (($5 | 0) == ($6 | 0)) {
  $__begin__i_i_i100132 = $raftResult | 0;
  HEAP32[$__begin__i_i_i100132 >> 2] = 0;
  $__end__i_i_i101133 = $raftResult + 4 | 0;
  HEAP32[$__end__i_i_i101133 >> 2] = 0;
  HEAP32[$raftResult + 8 >> 2] = 0;
  $m_ExecuteLocked_i_pre_phi135 = $raftUnion + 60 | 0;
  $__begin__i_i_i100137 = $__begin__i_i_i100132;
  $__end__i_i_i101141 = $__end__i_i_i101133;
  label = 1231;
 } else {
  $__begin__i_i_i = $raft | 0;
  $__end__i_i_i = $raft + 4 | 0;
  $__first__i_i_i_i_i_i = $raft + 8 | 0;
  $conv = +($distance | 0);
  $8 = $raftUnion;
  $9 = $raftUnion;
  $volumeIdx_0121 = 0;
  $11 = $6;
  $10 = $5;
  while (1) {
   $12 = HEAP32[$11 + ($volumeIdx_0121 * 12 & -1) >> 2] | 0;
   $__end__i56 = $12 + 4 | 0;
   $__begin__i57 = $12 | 0;
   if ((HEAP32[$__end__i56 >> 2] | 0) == (HEAP32[$__begin__i57 >> 2] | 0)) {
    $52 = $10;
    $51 = $11;
   } else {
    $i_0115 = 0;
    do {
     HEAP32[$__begin__i_i_i >> 2] = 0;
     HEAP32[$__end__i_i_i >> 2] = 0;
     HEAP32[$__first__i_i_i_i_i_i >> 2] = 0;
     __ZN10ClipperLib14OffsetPolygonsERKNSt3__16vectorINS1_INS_8IntPointENS0_9allocatorIS2_EEEENS3_IS5_EEEERS7_dNS_8JoinTypeEdb((HEAP32[$__begin__i57 >> 2] | 0) + ($i_0115 * 96 & -1) + 32 | 0, $raft, $conv, 0, 2.0, 0);
     __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($9 + (HEAP32[(HEAP32[$8 >> 2] | 0) - 12 >> 2] | 0) | 0, HEAP32[$__begin__i_i_i >> 2] | 0, 0) | 0;
     $20 = HEAP32[$__begin__i_i_i >> 2] | 0;
     if (($20 | 0) != 0) {
      $21 = HEAP32[$__end__i_i_i >> 2] | 0;
      if (($20 | 0) == ($21 | 0)) {
       $31 = $20;
      } else {
       $22 = $21;
       while (1) {
        $incdec_ptr_i_i_i_i_i_i = $22 - 12 | 0;
        HEAP32[$__end__i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i;
        $23 = HEAP32[$incdec_ptr_i_i_i_i_i_i >> 2] | 0;
        $24 = $23;
        if (($23 | 0) == 0) {
         $25 = $incdec_ptr_i_i_i_i_i_i;
        } else {
         $__end__i_i_i_i_i_i_i_i_i = $22 - 12 + 4 | 0;
         $26 = HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] | 0;
         if (($23 | 0) != ($26 | 0)) {
          HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] = $26 + ((($26 - 16 + (-$24 | 0) | 0) >>> 4 ^ -1) << 4);
         }
         __ZdlPv($23);
         $25 = HEAP32[$__end__i_i_i >> 2] | 0;
        }
        if (($20 | 0) == ($25 | 0)) {
         break;
        } else {
         $22 = $25;
        }
       }
       $31 = HEAP32[$__begin__i_i_i >> 2] | 0;
      }
      __ZdlPv($31);
     }
     $i_0115 = $i_0115 + 1 | 0;
    } while ($i_0115 >>> 0 < (((HEAP32[$__end__i56 >> 2] | 0) - (HEAP32[$__begin__i57 >> 2] | 0) | 0) / 96 & -1) >>> 0);
    $52 = HEAP32[$__end__i >> 2] | 0;
    $51 = HEAP32[$__begin__i >> 2] | 0;
   }
   $inc22 = $volumeIdx_0121 + 1 | 0;
   if ($inc22 >>> 0 < (($52 - $51 | 0) / 12 & -1) >>> 0) {
    $volumeIdx_0121 = $inc22;
    $11 = $51;
    $10 = $52;
   } else {
    break;
   }
  }
  $m_ExecuteLocked_i_phi_trans_insert = $raftUnion + 60 | 0;
  $phitmp131 = (HEAP8[$m_ExecuteLocked_i_phi_trans_insert] & 1) == 0;
  $__begin__i_i_i100 = $raftResult | 0;
  HEAP32[$__begin__i_i_i100 >> 2] = 0;
  $__end__i_i_i101 = $raftResult + 4 | 0;
  HEAP32[$__end__i_i_i101 >> 2] = 0;
  HEAP32[$raftResult + 8 >> 2] = 0;
  if ($phitmp131) {
   $m_ExecuteLocked_i_pre_phi135 = $m_ExecuteLocked_i_phi_trans_insert;
   $__begin__i_i_i100137 = $__begin__i_i_i100;
   $__end__i_i_i101141 = $__end__i_i_i101;
   label = 1231;
  }
 }
 do {
  if ((label | 0) == 1231) {
   HEAP8[$m_ExecuteLocked_i_pre_phi135] = 1;
   HEAP32[$raftUnion + 68 >> 2] = 1;
   HEAP32[$raftUnion + 64 >> 2] = 1;
   HEAP32[$raftUnion + 40 >> 2] = 1;
   if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$raftUnion >> 2] | 0) + 16 >> 2] & 63]($raftUnion, 0) | 0) {
    __ZN10ClipperLib7Clipper11BuildResultERNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEE($raftUnion, $raftResult);
    $_pre124 = HEAP32[$__end__i_i_i101141 >> 2] | 0;
   } else {
    $_pre124 = 0;
   }
   HEAP8[$m_ExecuteLocked_i_pre_phi135] = 0;
   $_pre125 = HEAP32[$__begin__i_i_i100137 >> 2] | 0;
   if (($_pre124 | 0) == ($_pre125 | 0)) {
    $_lcssa = $_pre125;
    $_lcssa101 = $_pre125;
   } else {
    $__end__i52 = $storage + 52 | 0;
    $__first__i_i_i_i = $storage + 56 | 0;
    $raftOutline = $storage + 48 | 0;
    $n_0108 = 0;
    $56 = $_pre125;
    while (1) {
     $arrayidx_i74 = $56 + ($n_0108 * 12 & -1) | 0;
     $57 = HEAP32[$__end__i52 >> 2] | 0;
     if (($57 | 0) == (HEAP32[$__first__i_i_i_i >> 2] | 0)) {
      __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($raftOutline, $arrayidx_i74);
     } else {
      if (($57 | 0) == 0) {
       $59 = 0;
      } else {
       __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($57, $arrayidx_i74);
       $59 = HEAP32[$__end__i52 >> 2] | 0;
      }
      HEAP32[$__end__i52 >> 2] = $59 + 12;
     }
     $inc36 = $n_0108 + 1 | 0;
     $60 = HEAP32[$__end__i_i_i101141 >> 2] | 0;
     $61 = HEAP32[$__begin__i_i_i100137 >> 2] | 0;
     if ($inc36 >>> 0 < (($60 - $61 | 0) / 12 & -1) >>> 0) {
      $n_0108 = $inc36;
      $56 = $61;
     } else {
      $_lcssa = $60;
      $_lcssa101 = $61;
      break;
     }
    }
   }
   if (($_lcssa101 | 0) == 0) {
    break;
   }
   if (($_lcssa101 | 0) == ($_lcssa | 0)) {
    $86 = $_lcssa101;
   } else {
    $77 = $_lcssa;
    while (1) {
     $incdec_ptr_i_i_i_i_i_i74 = $77 - 12 | 0;
     HEAP32[$__end__i_i_i101141 >> 2] = $incdec_ptr_i_i_i_i_i_i74;
     $78 = HEAP32[$incdec_ptr_i_i_i_i_i_i74 >> 2] | 0;
     $79 = $78;
     if (($78 | 0) == 0) {
      $80 = $incdec_ptr_i_i_i_i_i_i74;
     } else {
      $__end__i_i_i_i_i_i_i_i_i80 = $77 - 12 + 4 | 0;
      $81 = HEAP32[$__end__i_i_i_i_i_i_i_i_i80 >> 2] | 0;
      if (($78 | 0) != ($81 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i_i_i80 >> 2] = $81 + ((($81 - 16 + (-$79 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($78);
      $80 = HEAP32[$__end__i_i_i101141 >> 2] | 0;
     }
     if (($_lcssa101 | 0) == ($80 | 0)) {
      break;
     } else {
      $77 = $80;
     }
    }
    $86 = HEAP32[$__begin__i_i_i100137 >> 2] | 0;
   }
   __ZdlPv($86);
  }
 } while (0);
 __ZN10ClipperLib7ClipperD2Ev($raftUnion, 12040);
 __ZN10ClipperLib11ClipperBaseD2Ev($raftUnion + 76 | 0);
 STACKTOP = __stackBase__;
 return;
}
function __Z11processFilePKcR6ConfigR11GCodeExportb($input_filename, $config, $gcode, $firstFile) {
 $input_filename = $input_filename | 0;
 $config = $config | 0;
 $gcode = $gcode | 0;
 $firstFile = $firstFile | 0;
 var $tv_i10_i = 0, $tv_i2_i1180 = 0, $tv_i_i1181 = 0, $tv_i2_i1138 = 0, $tv_i_i1139 = 0, $ref_tmp_i = 0, $tv_i2_i395 = 0, $tv_i_i396 = 0, $tv_i2_i369 = 0, $tv_i_i370 = 0, $tv_i2_i347 = 0, $tv_i_i348 = 0, $tv_i2_i271 = 0, $tv_i_i272 = 0, $tv_i2_i254 = 0, $tv_i_i255 = 0, $agg_tmp4251 = 0, $tv_i2_i = 0, $tv_i_i = 0, $tv_i = 0, $slicerList = 0, $ref_tmp = 0, $storage = 0, $ref_tmp107 = 0, $agg_tmp280 = 0, $skirtConfig = 0, $inset0Config = 0, $inset1Config = 0, $fillConfig = 0, $supportConfig = 0, $raftBaseConfig = 0, $raftInterfaceConfig = 0, $gcodeLayer = 0, $raftLines = 0, $agg_tmp314 = 0, $gcodeLayer333 = 0, $raftLines345 = 0, $agg_tmp347 = 0, $gcodeLayer375 = 0, $partOrderOptimizer = 0, $fillPolygons = 0, $agg_tmp475 = 0, $agg_tmp497 = 0, $agg_tmp508 = 0, $agg_tmp521 = 0, $supportGenerator = 0, $supportGenerator2 = 0, $31 = 0, $32 = 0, $call1 = 0, $34 = 0, $35 = 0, $add_i9_i = 0.0, $call3 = 0, $39 = 0, $objectPosition = 0, $conv6 = 0, $sub = 0, $__end__i = 0, $43 = 0, $__begin__i = 0, $44 = 0, $__begin__i670 = 0, $46 = 0, $v_01376 = 0, $sub_ptr_div_i666 = 0, $49 = 0, $sub_ptr_div_i679 = 0, $52 = 0, $mul34 = 0, $55 = 0, $sub_ptr_div_i731 = 0, $inc53 = 0, $58 = 0, $59 = 0, $_lcssa1370 = 0, $_lcssa = 0, $63 = 0, $incdec_ptr_i_i_i_i_i_i_i_i = 0, $64 = 0, $65 = 0, $66 = 0, $__end__i_i_i_i_i_i_i_i_i_i_i_i_i = 0, $67 = 0, $72 = 0, $76 = 0, $77 = 0, $add_i9_i265 = 0.0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $__first__i_i_i_i_i_i = 0, $81 = 0, $__begin__i765 = 0, $initialLayerThickness = 0, $layerThickness = 0, $fixHorrible = 0, $volumeIdx_01369 = 0, $85 = 0, $89 = 0, $90 = 0, $92 = 0, $101 = 0, $102 = 0, $add_i9_i282 = 0.0, $supportAngle = 0, $108 = 0, $modelSize94 = 0, $112 = 0, $vMin = 0, $113 = 0, $vMax = 0, $114 = 0, $115 = 0, $116 = 0, $incdec_ptr_i_i_i_i_i_i_i_i296 = 0, $volumes106 = 0, $__begin__i_i_i_i_i298 = 0, $__end__i_i_i_i_i = 0, $__first__i_i_i_i_i_i_i_i = 0, $__end__i806 = 0, $__first__i_i_i_i811 = 0, $__begin__i829 = 0, $fixHorrible118 = 0, $volumeIdx101_01359 = 0, $123 = 0, $124 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $incdec_ptr_i_i_i_i_i_i_i_i304 = 0, $__begin__i_i_i_i_i_i_i_i_i_i305 = 0, $130 = 0, $131 = 0, $__end__i_i_i_i_i_i_i_i_i_i_i_i_i310 = 0, $132 = 0, $incdec_ptr_i_i_i_i_i_i_i_i_i_i_i_i_i = 0, $137 = 0, $143 = 0, $144 = 0, $__begin__i_i_i_i_i314 = 0, $145 = 0, $__end__i_i_i_i_i_i_i_i316 = 0, $146 = 0, $incdec_ptr_i_i_i_i_i_i_i_i320 = 0, $152 = 0, $171 = 0, $172 = 0, $add_i9_i358 = 0.0, $__begin__i844 = 0, $176 = 0, $177 = 0, $178 = 0, $sub_ptr_div_i853 = 0, $179 = 0, $__end__i856 = 0, $extrusionWidth = 0, $insetCount = 0, $180 = 0, $layerNr_01340 = 0, $183 = 0, $volumeIdx143_01338 = 0, $add = 0, $190 = 0, $191 = 0, $193 = 0, $194 = 0, $add_i9_i380 = 0.0, $__end__i874 = 0, $extrusionWidth179 = 0, $downSkinCount = 0, $upSkinCount = 0, $infillOverlap = 0, $layerNr166_01328 = 0, $199 = 0, $201 = 0, $volumeIdx170_01326 = 0, $213 = 0, $214 = 0, $216 = 0, $217 = 0, $add_i9_i406 = 0.0, $extrusionWidth199 = 0, $__end__i892 = 0, $225 = 0, $226 = 0, $228 = 0, $229 = 0, $volumeIdx202_01315 = 0, $230 = 0, $layerNr208_01305 = 0, $231 = 0, $233 = 0, $sub237 = 0, $235 = 0, $partNr_01303_us = 0, $inc263_us = 0, $236 = 0, $237 = 0, $239 = 0, $240 = 0, $241 = 0, $partNr_01303 = 0, $call241 = 0, $_pre1396 = 0, $inc263 = 0, $245 = 0, $247 = 0, $248 = 0, $inc266 = 0, $249 = 0, $250 = 0, $inc269 = 0, $252 = 0, $253 = 0, $div_i417 = 0.0, $retractionAmount2_i = 0, $retractionSpeed3_i = 0, $254 = 0, $255 = 0, $extrusionAmount_i = 0, $256 = 0.0, $257 = 0, $totalFilament_i = 0, $261 = 0.0, $262 = 0.0, $isRetracted_i = 0, $265 = 0, $mul_i = 0, $sub_i427 = 0.0, $269 = 0, $270 = 0, $printSpeed = 0, $272 = 0, $273 = 0, $275 = 0, $raftBaseThickness = 0, $raftInterfaceThickness = 0, $moveSpeed376 = 0, $277 = 0, $X_i_i_i_i674 = 0, $Y_i_i_i_i675 = 0, $speed2_i_i_i_i676 = 0, $278 = 0, $lineWidth3_i_i_i_i677 = 0, $name4_i_i_i_i678 = 0, $x_i_i_i679 = 0, $y_i_i_i681 = 0, $comb_i_i683 = 0, $speedFactor_i_i684 = 0, $forceRetraction_i_i686 = 0, $extruderNr_i_i_i687 = 0, $279 = 0, $currentExtruder_i_i688 = 0, $initialLayerThickness380 = 0, $layerThickness381 = 0, $zPos_i689 = 0, $skirt = 0, $support552 = 0, $supportEverywhere = 0, $polygons = 0, $polygons565 = 0, $__begin__i_i_i_i_i1010 = 0, $__end__i_i_i_i_i_i_i_i1012 = 0, $__begin__i_i_i_i_i1046 = 0, $__end__i_i_i_i_i_i_i_i1048 = 0, $initialSpeedupLayers = 0, $initialLayerSpeed580 = 0, $minimalLayerTime = 0, $minimalFeedrate = 0, $filamentDiameter596 = 0, $filamentFlow597 = 0, $extrusionPerMM_i1110 = 0, $fanOnLayerNr = 0, $currentFanSpeed_i1131 = 0, $f_i1133 = 0, $coolHeadLift = 0, $fanSpeedMax = 0, $fanSpeedMin = 0, $280 = 0, $agg_tmp411691_sroa_0_0__idx = 0, $agg_tmp411691_sroa_1_8__idx1223 = 0, $__end__i1115 = 0, $__begin__i1116 = 0, $__begin__i_i_i1_i = 0, $__begin__i_i_i14_i = 0, $__end__i_i_i_i_i_i16_i = 0, $__end__i_i_i_i_i_i3_i = 0, $insetCount445 = 0, $__begin__i_i_i1072 = 0, $__end__i_i_i1073 = 0, $__first__i_i_i_i_i_i1079 = 0, $infillOverlap480 = 0, $__begin__i_i_i696 = 0, $sparseInfillLineDistance = 0, $__begin__i_i_i724 = 0, $__begin__i_i_i752 = 0, $__end__i_i_i_i_i_i754 = 0, $__end__i_i_i_i_i_i726 = 0, $__begin__i_i_i858 = 0, $__end__i_i_i_i_i_i860 = 0, $__end__i_i_i_i_i_i698 = 0, $__first__i_i_i_i_i = 0, $polygons_i = 0, $283 = 0, $raftBaseLinewidth = 0, $284 = 0, $raftInterfaceLinewidth = 0, $285 = 0, $moveSpeed305 = 0, $286 = 0, $X_i_i_i_i = 0, $Y_i_i_i_i = 0, $x_i_i_i = 0, $289 = 0, $y_i_i_i = 0, $290 = 0, $extruderNr_i_i_i = 0, $zPos_i449 = 0, $filamentDiameter = 0, $filamentFlow = 0, $div2_i = 0.0, $extrusionPerMM_i = 0, $raftOutline = 0, $__begin__i_i_i988 = 0, $__end__i_i_i989 = 0, $raftLineSpacing = 0, $infillOverlap319 = 0, $__begin__i_i_i453 = 0, $300 = 0, $__end__i_i_i_i_i_i455 = 0, $301 = 0, $302 = 0, $incdec_ptr_i_i_i_i_i_i = 0, $303 = 0, $304 = 0, $305 = 0, $__end__i_i_i_i_i_i_i_i_i = 0, $306 = 0, $311 = 0, $313 = 0, $314 = 0, $315 = 0, $incdec_ptr_i_i_i_i_i_i463 = 0, $316 = 0, $317 = 0, $318 = 0, $__end__i_i_i_i_i_i_i_i_i469 = 0, $319 = 0, $324 = 0, $326 = 0, $X_i_i_i_i484 = 0, $Y_i_i_i_i485 = 0, $329 = 0, $330 = 0, $div2_i502 = 0.0, $__begin__i_i_i1013 = 0, $__end__i_i_i1014 = 0, $__begin__i_i_i513 = 0, $341 = 0, $__end__i_i_i_i_i_i515 = 0, $342 = 0, $343 = 0, $incdec_ptr_i_i_i_i_i_i518 = 0, $344 = 0, $345 = 0, $346 = 0, $__end__i_i_i_i_i_i_i_i_i524 = 0, $347 = 0, $352 = 0, $354 = 0, $355 = 0, $356 = 0, $incdec_ptr_i_i_i_i_i_i544 = 0, $357 = 0, $358 = 0, $359 = 0, $__end__i_i_i_i_i_i_i_i_i550 = 0, $360 = 0, $365 = 0, $volumeIdx368_0 = 0, $layerNr369_0 = 0, $add373 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $441 = 0, $mul382 = 0, $add387 = 0, $cmp389 = 0, $445 = 0, $446 = 0, $_ = 0, $conv527 = 0.0, $451 = 0, $sub_ptr_div_i10281287 = 0, $volumeCnt_01286 = 0, $volumeIdx368_11285 = 0, $volumeIdx368_2 = 0, $452 = 0, $453 = 0, $454 = 0, $__end__i1049 = 0, $__begin__i1050 = 0, $456 = 0, $458 = 0, $459 = 0, $460 = 0, $partNr414_01230 = 0, $462 = 0, $463 = 0, $inc430 = 0, $465 = 0, $468 = 0, $469 = 0, $470 = 0, $partCounter_01268 = 0, $471 = 0, $472 = 0, $__begin__i1103 = 0, $475 = 0, $insetNr_01234 = 0, $476 = 0, $insetNr_01236 = 0, $arrayidx_i1099 = 0, $insetNr_0 = 0, $477 = 0, $479 = 0, $480 = 0, $481 = 0, $482 = 0, $incdec_ptr_i_i_i_i_i_i701 = 0, $483 = 0, $484 = 0, $485 = 0, $__end__i_i_i_i_i_i_i_i_i707 = 0, $486 = 0, $491 = 0, $493 = 0, $sparseOutline = 0, $498 = 0, $499 = 0, $500 = 0, $incdec_ptr_i_i_i_i_i_i729 = 0, $501 = 0, $502 = 0, $503 = 0, $__end__i_i_i_i_i_i_i_i_i735 = 0, $504 = 0, $509 = 0, $514 = 0, $515 = 0, $516 = 0, $incdec_ptr_i_i_i_i_i_i757 = 0, $517 = 0, $518 = 0, $519 = 0, $__end__i_i_i_i_i_i_i_i_i763 = 0, $520 = 0, $525 = 0, $581 = 0, $582 = 0, $583 = 0, $incdec_ptr_i_i_i_i_i_i863 = 0, $584 = 0, $585 = 0, $586 = 0, $__end__i_i_i_i_i_i_i_i_i869 = 0, $587 = 0, $592 = 0, $610 = 0, $611 = 0, $612 = 0, $incdec_ptr_i_i_i_i_i_i915 = 0, $613 = 0, $614 = 0, $615 = 0, $__end__i_i_i_i_i_i_i_i_i921 = 0, $616 = 0, $621 = 0, $inc540 = 0, $624 = 0, $638 = 0, $639 = 0, $640 = 0, $642 = 0, $644 = 0, $646 = 0, $649 = 0, $650 = 0, $651 = 0, $656 = 0, $657 = 0, $658 = 0, $663 = 0, $664 = 0, $665 = 0, $inc547 = 0, $671 = 0, $sub_ptr_div_i1028 = 0, $volumeIdx368_1_lcssa = 0, $693 = 0, $697 = 0, $698 = 0, $699 = 0, $incdec_ptr_i_i_i_i_i_i_i_i1014 = 0, $700 = 0, $701 = 0, $702 = 0, $__end__i_i_i_i_i_i_i_i_i_i_i = 0, $703 = 0, $708 = 0, $729 = 0, $730 = 0, $731 = 0, $incdec_ptr_i_i_i_i_i_i_i_i1051 = 0, $732 = 0, $733 = 0, $734 = 0, $__end__i_i_i_i_i_i_i_i_i_i_i1057 = 0, $735 = 0, $740 = 0, $755 = 0, $div588 = 0, $div2_i1101 = 0.0, $div2_i1113 = 0.0, $storemerge_in = 0.0, $767 = 0, $div618 = 0, $speed_0 = 0, $772 = 0, $div_i1128 = 0, $775 = 0, $779 = 0, $780 = 0, $conv_i1161 = 0.0, $conv3_i1163 = 0.0, $783 = 0, $conv4_i1164 = 0.0, $fsize_0_i = 0.0, $784 = 0, $conv11_i = 0.0, $786 = 0, $789 = 0, $790 = 0, $797 = 0, $798 = 0, $800 = 0, $802 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 944 | 0;
 $tv_i10_i = __stackBase__ | 0;
 $tv_i2_i1180 = __stackBase__ + 8 | 0;
 $tv_i_i1181 = __stackBase__ + 16 | 0;
 $tv_i2_i1138 = __stackBase__ + 24 | 0;
 $tv_i_i1139 = __stackBase__ + 32 | 0;
 $ref_tmp_i = __stackBase__ + 40 | 0;
 $tv_i2_i395 = __stackBase__ + 48 | 0;
 $tv_i_i396 = __stackBase__ + 56 | 0;
 $tv_i2_i369 = __stackBase__ + 64 | 0;
 $tv_i_i370 = __stackBase__ + 72 | 0;
 $tv_i2_i347 = __stackBase__ + 80 | 0;
 $tv_i_i348 = __stackBase__ + 88 | 0;
 $tv_i2_i271 = __stackBase__ + 96 | 0;
 $tv_i_i272 = __stackBase__ + 104 | 0;
 $tv_i2_i254 = __stackBase__ + 112 | 0;
 $tv_i_i255 = __stackBase__ + 120 | 0;
 $agg_tmp4251 = __stackBase__ + 128 | 0;
 $tv_i2_i = __stackBase__ + 144 | 0;
 $tv_i_i = __stackBase__ + 152 | 0;
 $tv_i = __stackBase__ + 160 | 0;
 $slicerList = __stackBase__ + 168 | 0;
 $ref_tmp = __stackBase__ + 184 | 0;
 $storage = __stackBase__ + 192 | 0;
 $ref_tmp107 = __stackBase__ + 296 | 0;
 $agg_tmp280 = __stackBase__ + 312 | 0;
 $skirtConfig = __stackBase__ + 328 | 0;
 $inset0Config = __stackBase__ + 344 | 0;
 $inset1Config = __stackBase__ + 360 | 0;
 $fillConfig = __stackBase__ + 376 | 0;
 $supportConfig = __stackBase__ + 392 | 0;
 $raftBaseConfig = __stackBase__ + 408 | 0;
 $raftInterfaceConfig = __stackBase__ + 424 | 0;
 $gcodeLayer = __stackBase__ + 440 | 0;
 $raftLines = __stackBase__ + 520 | 0;
 $agg_tmp314 = __stackBase__ + 536 | 0;
 $gcodeLayer333 = __stackBase__ + 552 | 0;
 $raftLines345 = __stackBase__ + 632 | 0;
 $agg_tmp347 = __stackBase__ + 648 | 0;
 $gcodeLayer375 = __stackBase__ + 664 | 0;
 $partOrderOptimizer = __stackBase__ + 744 | 0;
 $fillPolygons = __stackBase__ + 800 | 0;
 $agg_tmp475 = __stackBase__ + 816 | 0;
 $agg_tmp497 = __stackBase__ + 832 | 0;
 $agg_tmp508 = __stackBase__ + 848 | 0;
 $agg_tmp521 = __stackBase__ + 864 | 0;
 $supportGenerator = __stackBase__ + 880 | 0;
 $supportGenerator2 = __stackBase__ + 912 | 0;
 _memmove($gcode + 72 | 0, $config + 256 | 0, 16);
 _memmove($gcode + 88 | 0, $config + 272 | 0, 16);
 _memmove($gcode + 104 | 0, $config + 288 | 0, 16);
 _memmove($gcode + 120 | 0, $config + 304 | 0, 16);
 _memmove($gcode + 136 | 0, $config + 320 | 0, 16);
 _memmove($gcode + 152 | 0, $config + 336 | 0, 16);
 _memmove($gcode + 168 | 0, $config + 352 | 0, 16);
 _memmove($gcode + 184 | 0, $config + 368 | 0, 16);
 _memmove($gcode + 200 | 0, $config + 384 | 0, 16);
 _memmove($gcode + 216 | 0, $config + 400 | 0, 16);
 _memmove($gcode + 232 | 0, $config + 416 | 0, 16);
 _memmove($gcode + 248 | 0, $config + 432 | 0, 16);
 _memmove($gcode + 264 | 0, $config + 448 | 0, 16);
 _memmove($gcode + 280 | 0, $config + 464 | 0, 16);
 _memmove($gcode + 296 | 0, $config + 480 | 0, 16);
 _gettimeofday($tv_i | 0, 0) | 0;
 $31 = HEAP32[$tv_i >> 2] | 0;
 $32 = HEAP32[$tv_i + 4 >> 2] | 0;
 __Z4_logPKcz(6128, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $input_filename, tempInt) | 0);
 $call1 = __Z9loadModelPKcR10FMatrix3x3($input_filename, $config + 144 | 0) | 0;
 if (($call1 | 0) == 0) {
  __Z4_logPKcz(5720, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $input_filename, tempInt) | 0);
  STACKTOP = __stackBase__;
  return;
 }
 _gettimeofday($tv_i_i | 0, 0) | 0;
 $34 = HEAP32[$tv_i_i >> 2] | 0;
 $35 = HEAP32[$tv_i_i + 4 >> 2] | 0;
 _gettimeofday($tv_i2_i | 0, 0) | 0;
 $add_i9_i = +(HEAP32[$tv_i2_i >> 2] | 0) + +(HEAP32[$tv_i2_i + 4 >> 2] | 0) / 1.0e6;
 __Z4_logPKcz(5200, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = +($34 | 0) + +($35 | 0) / 1.0e6 - (+($31 | 0) + +($32 | 0) / 1.0e6), tempInt) | 0);
 __Z4_logPKcz(4856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0);
 $call3 = __Znwj(48) | 0;
 $39 = $call3;
 $objectPosition = $config + 216 | 0;
 $conv6 = HEAP32[$config + 224 >> 2] | 0;
 $sub = -(HEAP32[$config + 232 >> 2] | 0) | 0;
 HEAP32[$agg_tmp4251 >> 2] = HEAP32[$objectPosition >> 2];
 HEAP32[$agg_tmp4251 + 4 >> 2] = $conv6;
 HEAP32[$agg_tmp4251 + 8 >> 2] = $sub;
 __ZN14OptimizedModelC2EP11SimpleModel6Point3($39, $call1, $agg_tmp4251);
 $__end__i = $call1 + 4 | 0;
 $43 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i = $call1 | 0;
 $44 = HEAP32[$__begin__i >> 2] | 0;
 if (($43 | 0) == ($44 | 0)) {
  $_lcssa = $43;
  $_lcssa1370 = $43;
 } else {
  $__begin__i670 = $call3;
  $v_01376 = 0;
  $46 = $44;
  while (1) {
   $sub_ptr_div_i666 = ((HEAP32[$46 + ($v_01376 * 12 & -1) + 4 >> 2] | 0) - (HEAP32[$46 + ($v_01376 * 12 & -1) >> 2] | 0) | 0) / 36 & -1;
   $49 = HEAP32[$__begin__i670 >> 2] | 0;
   $sub_ptr_div_i679 = ((HEAP32[$49 + ($v_01376 * 28 & -1) + 20 >> 2] | 0) - (HEAP32[$49 + ($v_01376 * 28 & -1) + 16 >> 2] | 0) | 0) / 24 & -1;
   __Z4_logPKcz(3856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $sub_ptr_div_i666, HEAP32[tempInt + 8 >> 2] = $sub_ptr_div_i679, HEAPF64[tempInt + 16 >> 3] = +($sub_ptr_div_i679 >>> 0 >>> 0) / +($sub_ptr_div_i666 >>> 0 >>> 0) * 100.0, tempInt) | 0);
   $52 = HEAP32[$__begin__i >> 2] | 0;
   $mul34 = (((HEAP32[$52 + ($v_01376 * 12 & -1) + 4 >> 2] | 0) - (HEAP32[$52 + ($v_01376 * 12 & -1) >> 2] | 0) | 0) / 36 & -1) * 3 & -1;
   $55 = HEAP32[$__begin__i670 >> 2] | 0;
   $sub_ptr_div_i731 = ((HEAP32[$55 + ($v_01376 * 28 & -1) + 8 >> 2] | 0) - (HEAP32[$55 + ($v_01376 * 28 & -1) + 4 >> 2] | 0) | 0) / 24 & -1;
   __Z4_logPKcz(3536, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $mul34, HEAP32[tempInt + 8 >> 2] = $sub_ptr_div_i731, HEAPF64[tempInt + 16 >> 3] = +($sub_ptr_div_i731 >>> 0 >>> 0) / +($mul34 >>> 0 >>> 0) * 100.0, tempInt) | 0);
   $inc53 = $v_01376 + 1 | 0;
   $58 = HEAP32[$__end__i >> 2] | 0;
   $59 = HEAP32[$__begin__i >> 2] | 0;
   if ($inc53 >>> 0 < (($58 - $59 | 0) / 12 & -1) >>> 0) {
    $v_01376 = $inc53;
    $46 = $59;
   } else {
    $_lcssa = $58;
    $_lcssa1370 = $59;
    break;
   }
  }
 }
 if (($_lcssa1370 | 0) != 0) {
  if (($_lcssa1370 | 0) == ($_lcssa | 0)) {
   $72 = $_lcssa1370;
  } else {
   $63 = $_lcssa;
   while (1) {
    $incdec_ptr_i_i_i_i_i_i_i_i = $63 - 12 | 0;
    HEAP32[$__end__i >> 2] = $incdec_ptr_i_i_i_i_i_i_i_i;
    $64 = HEAP32[$incdec_ptr_i_i_i_i_i_i_i_i >> 2] | 0;
    $65 = $64;
    if (($64 | 0) == 0) {
     $66 = $incdec_ptr_i_i_i_i_i_i_i_i;
    } else {
     $__end__i_i_i_i_i_i_i_i_i_i_i_i_i = $63 - 12 + 4 | 0;
     $67 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i_i_i >> 2] | 0;
     if (($64 | 0) != ($67 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i_i_i >> 2] = $67 + (((($67 - 36 + (-$65 | 0) | 0) >>> 0) / 36 >>> 0 ^ -1) * 36 & -1);
     }
     __ZdlPv($64);
     $66 = HEAP32[$__end__i >> 2] | 0;
    }
    if (($_lcssa1370 | 0) == ($66 | 0)) {
     break;
    } else {
     $63 = $66;
    }
   }
   $72 = HEAP32[$__begin__i >> 2] | 0;
  }
  __ZdlPv($72);
 }
 __ZdlPv($call1);
 _gettimeofday($tv_i_i255 | 0, 0) | 0;
 $76 = HEAP32[$tv_i_i255 >> 2] | 0;
 $77 = HEAP32[$tv_i_i255 + 4 >> 2] | 0;
 _gettimeofday($tv_i2_i254 | 0, 0) | 0;
 $add_i9_i265 = +(HEAP32[$tv_i2_i254 >> 2] | 0) + +(HEAP32[$tv_i2_i254 + 4 >> 2] | 0) / 1.0e6;
 __Z4_logPKcz(3384, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = +($76 | 0) + +($77 | 0) / 1.0e6 - $add_i9_i, tempInt) | 0);
 __Z4_logPKcz(3216, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0);
 $__begin__i_i_i = $slicerList | 0;
 HEAP32[$__begin__i_i_i >> 2] = 0;
 $__end__i_i_i = $slicerList + 4 | 0;
 HEAP32[$__end__i_i_i >> 2] = 0;
 $__first__i_i_i_i_i_i = $slicerList + 8 | 0;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = 0;
 $81 = $call3 + 4 | 0;
 $__begin__i765 = $call3;
 if ((HEAP32[$81 >> 2] | 0) != (HEAP32[$__begin__i765 >> 2] | 0)) {
  $initialLayerThickness = $config + 4 | 0;
  $layerThickness = $config | 0;
  $fixHorrible = $config + 236 | 0;
  $volumeIdx_01369 = 0;
  do {
   $85 = __Znwj(36) | 0;
   $89 = HEAP32[$fixHorrible >> 2] | 0;
   __ZN6SlicerC2EP15OptimizedVolumeiibb($85, (HEAP32[$__begin__i765 >> 2] | 0) + ($volumeIdx_01369 * 28 & -1) | 0, (HEAP32[$initialLayerThickness >> 2] | 0) / 2 & -1, HEAP32[$layerThickness >> 2] | 0, ($89 & 16 | 0) != 0, ($89 & 4 | 0) != 0);
   HEAP32[$ref_tmp >> 2] = $85;
   $90 = HEAP32[$__end__i_i_i >> 2] | 0;
   if (($90 | 0) == (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0)) {
    __ZNSt3__16vectorIP6SlicerNS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($slicerList, $ref_tmp);
   } else {
    if (($90 | 0) == 0) {
     $92 = 0;
    } else {
     HEAP32[$90 >> 2] = $85;
     $92 = HEAP32[$__end__i_i_i >> 2] | 0;
    }
    HEAP32[$__end__i_i_i >> 2] = $92 + 4;
   }
   $volumeIdx_01369 = $volumeIdx_01369 + 1 | 0;
  } while ($volumeIdx_01369 >>> 0 < (((HEAP32[$81 >> 2] | 0) - (HEAP32[$__begin__i765 >> 2] | 0) | 0) / 28 & -1) >>> 0);
 }
 _gettimeofday($tv_i_i272 | 0, 0) | 0;
 $101 = HEAP32[$tv_i_i272 >> 2] | 0;
 $102 = HEAP32[$tv_i_i272 + 4 >> 2] | 0;
 _gettimeofday($tv_i2_i271 | 0, 0) | 0;
 $add_i9_i282 = +(HEAP32[$tv_i2_i271 >> 2] | 0) + +(HEAP32[$tv_i2_i271 + 4 >> 2] | 0) / 1.0e6;
 __Z4_logPKcz(3080, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = +($101 | 0) + +($102 | 0) / 1.0e6 - $add_i9_i265, tempInt) | 0);
 _memset($storage + 36 | 0, 0, 52);
 $supportAngle = $config + 88 | 0;
 if ((HEAP32[$supportAngle >> 2] | 0) > -1) {
  $108 = HEAP32[_stdout >> 2] | 0;
  _fwrite(3008, 26, 1, $108 | 0) | 0;
  __Z19generateSupportGridR14SupportStorageP14OptimizedModelii($storage + 72 | 0, $39, 0, 0);
 }
 $modelSize94 = $call3 + 12 | 0;
 $112 = $storage;
 HEAP32[$112 >> 2] = HEAP32[$modelSize94 >> 2];
 HEAP32[$112 + 4 >> 2] = HEAP32[$modelSize94 + 4 >> 2];
 HEAP32[$112 + 8 >> 2] = HEAP32[$modelSize94 + 8 >> 2];
 $vMin = $call3 + 24 | 0;
 $113 = $storage + 12 | 0;
 HEAP32[$113 >> 2] = HEAP32[$vMin >> 2];
 HEAP32[$113 + 4 >> 2] = HEAP32[$vMin + 4 >> 2];
 HEAP32[$113 + 8 >> 2] = HEAP32[$vMin + 8 >> 2];
 $vMax = $call3 + 36 | 0;
 $114 = $storage + 24 | 0;
 HEAP32[$114 >> 2] = HEAP32[$vMax >> 2];
 HEAP32[$114 + 4 >> 2] = HEAP32[$vMax + 4 >> 2];
 HEAP32[$114 + 8 >> 2] = HEAP32[$vMax + 8 >> 2];
 if (($call3 | 0) != 0) {
  $115 = HEAP32[$__begin__i765 >> 2] | 0;
  if (($115 | 0) != 0) {
   while (1) {
    $116 = HEAP32[$81 >> 2] | 0;
    if (($115 | 0) == ($116 | 0)) {
     break;
    }
    $incdec_ptr_i_i_i_i_i_i_i_i296 = $116 - 28 | 0;
    HEAP32[$81 >> 2] = $incdec_ptr_i_i_i_i_i_i_i_i296;
    __ZN15OptimizedVolumeD1Ev($incdec_ptr_i_i_i_i_i_i_i_i296);
   }
   __ZdlPv(HEAP32[$__begin__i765 >> 2] | 0);
  }
  __ZdlPv($call3);
 }
 __Z4_logPKcz(2976, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0);
 $volumes106 = $storage + 60 | 0;
 if ((HEAP32[$__end__i_i_i >> 2] | 0) != (HEAP32[$__begin__i_i_i >> 2] | 0)) {
  $__begin__i_i_i_i_i298 = $ref_tmp107 | 0;
  $__end__i_i_i_i_i = $ref_tmp107 + 4 | 0;
  $__first__i_i_i_i_i_i_i_i = $ref_tmp107 + 8 | 0;
  $__end__i806 = $storage + 64 | 0;
  $__first__i_i_i_i811 = $storage + 68 | 0;
  $__begin__i829 = $volumes106 | 0;
  $fixHorrible118 = $config + 236 | 0;
  $volumeIdx101_01359 = 0;
  do {
   $123 = $ref_tmp107;
   HEAP32[$123 >> 2] = 0;
   HEAP32[$123 + 4 >> 2] = 0;
   HEAP32[$__begin__i_i_i_i_i298 >> 2] = 0;
   HEAP32[$__end__i_i_i_i_i >> 2] = 0;
   HEAP32[$__first__i_i_i_i_i_i_i_i >> 2] = 0;
   $124 = HEAP32[$__end__i806 >> 2] | 0;
   if (($124 | 0) == (HEAP32[$__first__i_i_i_i811 >> 2] | 0)) {
    __ZNSt3__16vectorI18SliceVolumeStorageNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($volumes106, $ref_tmp107);
   } else {
    if (($124 | 0) == 0) {
     $126 = 0;
    } else {
     __ZN18SliceVolumeStorageC1ERKS_($124, $ref_tmp107);
     $126 = HEAP32[$__end__i806 >> 2] | 0;
    }
    HEAP32[$__end__i806 >> 2] = $126 + 12;
   }
   $127 = HEAP32[$__begin__i_i_i_i_i298 >> 2] | 0;
   if (($127 | 0) != 0) {
    $128 = HEAP32[$__end__i_i_i_i_i >> 2] | 0;
    if (($127 | 0) == ($128 | 0)) {
     $137 = $127;
    } else {
     $129 = $128;
     while (1) {
      $incdec_ptr_i_i_i_i_i_i_i_i304 = $129 - 12 | 0;
      HEAP32[$__end__i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i_i_i304;
      $__begin__i_i_i_i_i_i_i_i_i_i305 = $incdec_ptr_i_i_i_i_i_i_i_i304 | 0;
      $130 = HEAP32[$__begin__i_i_i_i_i_i_i_i_i_i305 >> 2] | 0;
      if (($130 | 0) == 0) {
       $131 = $incdec_ptr_i_i_i_i_i_i_i_i304;
      } else {
       $__end__i_i_i_i_i_i_i_i_i_i_i_i_i310 = $129 - 12 + 4 | 0;
       while (1) {
        $132 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i_i_i310 >> 2] | 0;
        if (($130 | 0) == ($132 | 0)) {
         break;
        }
        $incdec_ptr_i_i_i_i_i_i_i_i_i_i_i_i_i = $132 - 96 | 0;
        HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i_i_i310 >> 2] = $incdec_ptr_i_i_i_i_i_i_i_i_i_i_i_i_i;
        __ZN14SliceLayerPartD2Ev($incdec_ptr_i_i_i_i_i_i_i_i_i_i_i_i_i);
       }
       __ZdlPv(HEAP32[$__begin__i_i_i_i_i_i_i_i_i_i305 >> 2] | 0);
       $131 = HEAP32[$__end__i_i_i_i_i >> 2] | 0;
      }
      if (($127 | 0) == ($131 | 0)) {
       break;
      } else {
       $129 = $131;
      }
     }
     $137 = HEAP32[$__begin__i_i_i_i_i298 >> 2] | 0;
    }
    __ZdlPv($137);
   }
   __Z16createLayerPartsR18SliceVolumeStorageP6Sliceri((HEAP32[$__begin__i829 >> 2] | 0) + ($volumeIdx101_01359 * 12 & -1) | 0, HEAP32[(HEAP32[$__begin__i_i_i >> 2] | 0) + ($volumeIdx101_01359 << 2) >> 2] | 0, HEAP32[$fixHorrible118 >> 2] & 3);
   $143 = HEAP32[$__begin__i_i_i >> 2] | 0;
   $144 = HEAP32[$143 + ($volumeIdx101_01359 << 2) >> 2] | 0;
   if (($144 | 0) == 0) {
    $152 = $143;
   } else {
    $__begin__i_i_i_i_i314 = $144 | 0;
    $145 = HEAP32[$__begin__i_i_i_i_i314 >> 2] | 0;
    if (($145 | 0) != 0) {
     $__end__i_i_i_i_i_i_i_i316 = $144 + 4 | 0;
     while (1) {
      $146 = HEAP32[$__end__i_i_i_i_i_i_i_i316 >> 2] | 0;
      if (($145 | 0) == ($146 | 0)) {
       break;
      }
      $incdec_ptr_i_i_i_i_i_i_i_i320 = $146 - 48 | 0;
      HEAP32[$__end__i_i_i_i_i_i_i_i316 >> 2] = $incdec_ptr_i_i_i_i_i_i_i_i320;
      __ZN11SlicerLayerD2Ev($incdec_ptr_i_i_i_i_i_i_i_i320);
     }
     __ZdlPv(HEAP32[$__begin__i_i_i_i_i314 >> 2] | 0);
    }
    __ZdlPv($144);
    $152 = HEAP32[$__begin__i_i_i >> 2] | 0;
   }
   $volumeIdx101_01359 = $volumeIdx101_01359 + 1 | 0;
  } while ($volumeIdx101_01359 >>> 0 < (HEAP32[$__end__i_i_i >> 2] | 0) - $152 >> 2 >>> 0);
 }
 __Z30generateMultipleVolumesOverlapRNSt3__16vectorI18SliceVolumeStorageNS_9allocatorIS1_EEEEi($volumes106, HEAP32[$config + 60 >> 2] | 0);
 _gettimeofday($tv_i_i348 | 0, 0) | 0;
 $171 = HEAP32[$tv_i_i348 >> 2] | 0;
 $172 = HEAP32[$tv_i_i348 + 4 >> 2] | 0;
 _gettimeofday($tv_i2_i347 | 0, 0) | 0;
 $add_i9_i358 = +(HEAP32[$tv_i2_i347 >> 2] | 0) + +(HEAP32[$tv_i2_i347 + 4 >> 2] | 0) / 1.0e6;
 __Z4_logPKcz(2936, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = +($171 | 0) + +($172 | 0) / 1.0e6 - $add_i9_i282, tempInt) | 0);
 $__begin__i844 = $volumes106 | 0;
 $176 = HEAP32[$__begin__i844 >> 2] | 0;
 $177 = HEAP32[$176 + 4 >> 2] | 0;
 $178 = HEAP32[$176 >> 2] | 0;
 $sub_ptr_div_i853 = ($177 - $178 | 0) / 12 & -1;
 $179 = ($177 | 0) == ($178 | 0);
 L1379 : do {
  if (!$179) {
   $__end__i856 = $storage + 64 | 0;
   $extrusionWidth = $config + 16 | 0;
   $insetCount = $config + 20 | 0;
   $layerNr_01340 = 0;
   $180 = $176;
   while (1) {
    if ((HEAP32[$__end__i856 >> 2] | 0) != ($180 | 0)) {
     $volumeIdx143_01338 = 0;
     $183 = $180;
     do {
      __Z14generateInsetsP10SliceLayerii((HEAP32[$183 + ($volumeIdx143_01338 * 12 & -1) >> 2] | 0) + ($layerNr_01340 * 12 & -1) | 0, HEAP32[$extrusionWidth >> 2] | 0, HEAP32[$insetCount >> 2] | 0);
      $volumeIdx143_01338 = $volumeIdx143_01338 + 1 | 0;
      $183 = HEAP32[$__begin__i844 >> 2] | 0;
     } while ($volumeIdx143_01338 >>> 0 < (((HEAP32[$__end__i856 >> 2] | 0) - $183 | 0) / 12 & -1) >>> 0);
    }
    $add = $layerNr_01340 + 1 | 0;
    if ((HEAP32[2] | 0) >= 2) {
     $190 = HEAP32[_stdout >> 2] | 0;
     _fprintf($190 | 0, 6160, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = 2872, HEAP32[tempInt + 8 >> 2] = $add, HEAP32[tempInt + 16 >> 2] = $sub_ptr_div_i853, tempInt) | 0) | 0;
     $191 = HEAP32[_stdout >> 2] | 0;
     _fflush($191 | 0) | 0;
    }
    if ($add >>> 0 >= $sub_ptr_div_i853 >>> 0) {
     break L1379;
    }
    $layerNr_01340 = $add;
    $180 = HEAP32[$__begin__i844 >> 2] | 0;
   }
  }
 } while (0);
 _gettimeofday($tv_i_i370 | 0, 0) | 0;
 $193 = HEAP32[$tv_i_i370 >> 2] | 0;
 $194 = HEAP32[$tv_i_i370 + 4 >> 2] | 0;
 _gettimeofday($tv_i2_i369 | 0, 0) | 0;
 $add_i9_i380 = +(HEAP32[$tv_i2_i369 >> 2] | 0) + +(HEAP32[$tv_i2_i369 + 4 >> 2] | 0) / 1.0e6;
 __Z4_logPKcz(2824, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = +($193 | 0) + +($194 | 0) / 1.0e6 - $add_i9_i358, tempInt) | 0);
 if (!$179) {
  $__end__i874 = $storage + 64 | 0;
  $extrusionWidth179 = $config + 16 | 0;
  $downSkinCount = $config + 24 | 0;
  $upSkinCount = $config + 28 | 0;
  $infillOverlap = $config + 36 | 0;
  $layerNr166_01328 = 0;
  do {
   $199 = HEAP32[$__begin__i844 >> 2] | 0;
   if ((HEAP32[$__end__i874 >> 2] | 0) != ($199 | 0)) {
    $volumeIdx170_01326 = 0;
    $201 = $199;
    do {
     __Z13generateSkinsiR18SliceVolumeStorageiiii($layerNr166_01328, $201 + ($volumeIdx170_01326 * 12 & -1) | 0, HEAP32[$extrusionWidth179 >> 2] | 0, HEAP32[$downSkinCount >> 2] | 0, HEAP32[$upSkinCount >> 2] | 0, HEAP32[$infillOverlap >> 2] | 0);
     __Z14generateSparseiR18SliceVolumeStorageiii($layerNr166_01328, (HEAP32[$__begin__i844 >> 2] | 0) + ($volumeIdx170_01326 * 12 & -1) | 0, HEAP32[$extrusionWidth179 >> 2] | 0, HEAP32[$downSkinCount >> 2] | 0, HEAP32[$upSkinCount >> 2] | 0);
     $volumeIdx170_01326 = $volumeIdx170_01326 + 1 | 0;
     $201 = HEAP32[$__begin__i844 >> 2] | 0;
    } while ($volumeIdx170_01326 >>> 0 < (((HEAP32[$__end__i874 >> 2] | 0) - $201 | 0) / 12 & -1) >>> 0);
   }
   $layerNr166_01328 = $layerNr166_01328 + 1 | 0;
   if ((HEAP32[2] | 0) >= 2) {
    $213 = HEAP32[_stdout >> 2] | 0;
    _fprintf($213 | 0, 6160, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = 2816, HEAP32[tempInt + 8 >> 2] = $layerNr166_01328, HEAP32[tempInt + 16 >> 2] = $sub_ptr_div_i853, tempInt) | 0) | 0;
    $214 = HEAP32[_stdout >> 2] | 0;
    _fflush($214 | 0) | 0;
   }
  } while ($layerNr166_01328 >>> 0 < $sub_ptr_div_i853 >>> 0);
 }
 _gettimeofday($tv_i_i396 | 0, 0) | 0;
 $216 = HEAP32[$tv_i_i396 >> 2] | 0;
 $217 = HEAP32[$tv_i_i396 + 4 >> 2] | 0;
 _gettimeofday($tv_i2_i395 | 0, 0) | 0;
 $add_i9_i406 = +(HEAP32[$tv_i2_i395 >> 2] | 0) + +(HEAP32[$tv_i2_i395 + 4 >> 2] | 0) / 1.0e6;
 __Z4_logPKcz(2776, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = +($216 | 0) + +($217 | 0) / 1.0e6 - $add_i9_i380, tempInt) | 0);
 $extrusionWidth199 = $config + 16 | 0;
 __Z13generateSkirtR16SliceDataStorageiii($storage, HEAP32[$config + 40 >> 2] | 0, HEAP32[$extrusionWidth199 >> 2] | 0, HEAP32[$config + 44 >> 2] | 0);
 __Z12generateRaftR16SliceDataStoragei($storage, HEAP32[$config + 120 >> 2] | 0);
 $__end__i892 = $storage + 64 | 0;
 $225 = HEAP32[$__end__i892 >> 2] | 0;
 $226 = HEAP32[$__begin__i844 >> 2] | 0;
 if (($225 | 0) != ($226 | 0)) {
  $volumeIdx202_01315 = 0;
  $229 = $225;
  $228 = $226;
  while (1) {
   if ($179) {
    $250 = $229;
    $249 = $228;
   } else {
    $layerNr208_01305 = 0;
    $230 = $228;
    while (1) {
     $231 = HEAP32[$230 + ($volumeIdx202_01315 * 12 & -1) >> 2] | 0;
     $233 = HEAP32[$231 + ($layerNr208_01305 * 12 & -1) >> 2] | 0;
     L1419 : do {
      if ((HEAP32[$231 + ($layerNr208_01305 * 12 & -1) + 4 >> 2] | 0) == ($233 | 0)) {
       $248 = $230;
      } else {
       $sub237 = $layerNr208_01305 - 1 | 0;
       if (($layerNr208_01305 | 0) == 0) {
        $partNr_01303_us = 0;
        $235 = $233;
        while (1) {
         HEAP32[$235 + ($partNr_01303_us * 96 & -1) + 92 >> 2] = -1;
         $inc263_us = $partNr_01303_us + 1 | 0;
         $236 = HEAP32[$__begin__i844 >> 2] | 0;
         $237 = HEAP32[$236 + ($volumeIdx202_01315 * 12 & -1) >> 2] | 0;
         $239 = HEAP32[$237 >> 2] | 0;
         if ($inc263_us >>> 0 < (((HEAP32[$237 + 4 >> 2] | 0) - $239 | 0) / 96 & -1) >>> 0) {
          $partNr_01303_us = $inc263_us;
          $235 = $239;
         } else {
          $248 = $236;
          break L1419;
         }
        }
       } else {
        $partNr_01303 = 0;
        $241 = $231;
        $240 = $233;
       }
       while (1) {
        $call241 = __Z11bridgeAngleP14SliceLayerPartP10SliceLayer($240 + ($partNr_01303 * 96 & -1) | 0, $241 + ($sub237 * 12 & -1) | 0) | 0;
        HEAP32[(HEAP32[(HEAP32[(HEAP32[$__begin__i844 >> 2] | 0) + ($volumeIdx202_01315 * 12 & -1) >> 2] | 0) + ($layerNr208_01305 * 12 & -1) >> 2] | 0) + ($partNr_01303 * 96 & -1) + 92 >> 2] = $call241;
        $_pre1396 = HEAP32[$__begin__i844 >> 2] | 0;
        $inc263 = $partNr_01303 + 1 | 0;
        $245 = HEAP32[$_pre1396 + ($volumeIdx202_01315 * 12 & -1) >> 2] | 0;
        $247 = HEAP32[$245 + ($layerNr208_01305 * 12 & -1) >> 2] | 0;
        if ($inc263 >>> 0 < (((HEAP32[$245 + ($layerNr208_01305 * 12 & -1) + 4 >> 2] | 0) - $247 | 0) / 96 & -1) >>> 0) {
         $partNr_01303 = $inc263;
         $241 = $245;
         $240 = $247;
        } else {
         $248 = $_pre1396;
         break;
        }
       }
      }
     } while (0);
     $inc266 = $layerNr208_01305 + 1 | 0;
     if ($inc266 >>> 0 < $sub_ptr_div_i853 >>> 0) {
      $layerNr208_01305 = $inc266;
      $230 = $248;
     } else {
      break;
     }
    }
    $250 = HEAP32[$__end__i892 >> 2] | 0;
    $249 = $248;
   }
   $inc269 = $volumeIdx202_01315 + 1 | 0;
   if ($inc269 >>> 0 < (($250 - $249 | 0) / 12 & -1) >>> 0) {
    $volumeIdx202_01315 = $inc269;
    $229 = $250;
    $228 = $249;
   } else {
    break;
   }
  }
 }
 $252 = HEAP32[$config + 56 >> 2] | 0;
 $253 = HEAP32[$config + 52 >> 2] | 0;
 $div_i417 = +(HEAP32[$config + 48 >> 2] | 0) / 1.0e3;
 $retractionAmount2_i = $gcode + 24 | 0;
 HEAPF64[$retractionAmount2_i >> 3] = $div_i417;
 $retractionSpeed3_i = $gcode + 316 | 0;
 HEAP32[$retractionSpeed3_i >> 2] = $252;
 HEAPF64[$gcode + 32 >> 3] = +($253 | 0) / 1.0e3;
 if ($firstFile) {
  $254 = HEAP32[$config + 496 >> 2] | 0;
  $255 = HEAP32[$gcode >> 2] | 0;
  _fprintf($255 | 0, 2864, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $254, tempInt) | 0) | 0;
 } else {
  $extrusionAmount_i = $gcode + 8 | 0;
  $256 = +HEAPF64[$extrusionAmount_i >> 3];
  if ($256 != 0.0) {
   $257 = HEAP32[$gcode >> 2] | 0;
   _fwrite(3304, 7, 1, $257 | 0) | 0;
   $totalFilament_i = $gcode + 336 | 0;
   HEAPF64[$totalFilament_i >> 3] = +HEAPF64[$extrusionAmount_i >> 3] + +HEAPF64[$totalFilament_i >> 3];
   HEAPF64[$extrusionAmount_i >> 3] = 0.0;
   $262 = +HEAPF64[$retractionAmount2_i >> 3];
   $261 = 0.0;
  } else {
   $262 = $div_i417;
   $261 = $256;
  }
  do {
   if ($262 > 0.0) {
    $isRetracted_i = $gcode + 324 | 0;
    if ((HEAP8[$isRetracted_i] & 1) != 0) {
     break;
    }
    $265 = HEAP32[$gcode >> 2] | 0;
    $mul_i = (HEAP32[$retractionSpeed3_i >> 2] | 0) * 60 & -1;
    $sub_i427 = $261 - $262;
    _fprintf($265 | 0, 3408, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $mul_i, HEAPF64[tempInt + 8 >> 3] = $sub_i427, tempInt) | 0) | 0;
    HEAP32[$gcode + 312 >> 2] = HEAP32[$retractionSpeed3_i >> 2];
    HEAP8[$isRetracted_i] = 1;
   }
  } while (0);
  HEAP32[$gcode + 320 >> 2] = (HEAP32[68] | 0) + 5e3;
  $269 = $agg_tmp280;
  $270 = $objectPosition;
  HEAP32[$269 >> 2] = HEAP32[$270 >> 2];
  HEAP32[$269 + 4 >> 2] = HEAP32[$270 + 4 >> 2];
  HEAP32[$269 + 8 >> 2] = HEAP32[$270 + 8 >> 2];
  HEAP32[$269 + 12 >> 2] = HEAP32[$270 + 12 >> 2];
  __ZN11GCodeExport7addMoveEN10ClipperLib8IntPointEii($gcode, $agg_tmp280, HEAP32[$config + 80 >> 2] | 0, 0);
 }
 __ZN11GCodeExport10addCommentEPKcz($gcode, 2760, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $sub_ptr_div_i853, tempInt) | 0);
 $printSpeed = $config + 72 | 0;
 $272 = HEAP32[$printSpeed >> 2] | 0;
 $273 = HEAP32[$extrusionWidth199 >> 2] | 0;
 HEAP32[$skirtConfig >> 2] = $272;
 HEAP32[$skirtConfig + 4 >> 2] = $273;
 HEAP32[$skirtConfig + 8 >> 2] = 2728;
 HEAP32[$inset0Config >> 2] = $272;
 HEAP32[$inset0Config + 4 >> 2] = $273;
 HEAP32[$inset0Config + 8 >> 2] = 2704;
 HEAP32[$inset1Config >> 2] = $272;
 HEAP32[$inset1Config + 4 >> 2] = $273;
 HEAP32[$inset1Config + 8 >> 2] = 2664;
 HEAP32[$fillConfig >> 2] = HEAP32[$config + 76 >> 2];
 HEAP32[$fillConfig + 4 >> 2] = $273;
 HEAP32[$fillConfig + 8 >> 2] = 2656;
 $275 = HEAP32[$config + 96 >> 2] | 0;
 HEAP32[$supportConfig >> 2] = $272;
 HEAP32[$supportConfig + 4 >> 2] = $275;
 HEAP32[$supportConfig + 8 >> 2] = 2648;
 $raftBaseThickness = $config + 128 | 0;
 $raftInterfaceThickness = $config + 136 | 0;
 do {
  if ((HEAP32[$raftBaseThickness >> 2] | 0) > 0) {
   if ((HEAP32[$raftInterfaceThickness >> 2] | 0) <= 0) {
    break;
   }
   $283 = HEAP32[$config + 68 >> 2] | 0;
   $raftBaseLinewidth = $config + 132 | 0;
   $284 = HEAP32[$raftBaseLinewidth >> 2] | 0;
   HEAP32[$raftBaseConfig >> 2] = $283;
   HEAP32[$raftBaseConfig + 4 >> 2] = $284;
   HEAP32[$raftBaseConfig + 8 >> 2] = 2648;
   $raftInterfaceLinewidth = $config + 140 | 0;
   $285 = HEAP32[$raftInterfaceLinewidth >> 2] | 0;
   HEAP32[$raftInterfaceConfig >> 2] = $283;
   HEAP32[$raftInterfaceConfig + 4 >> 2] = $285;
   HEAP32[$raftInterfaceConfig + 8 >> 2] = 2648;
   __ZN11GCodeExport10addCommentEPKcz($gcode, 2568, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0);
   __ZN11GCodeExport10addCommentEPKcz($gcode, 2560, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0);
   $moveSpeed305 = $config + 80 | 0;
   $286 = HEAP32[$moveSpeed305 >> 2] | 0;
   HEAP32[$gcodeLayer >> 2] = $gcode;
   $X_i_i_i_i = $gcodeLayer + 8 | 0;
   $Y_i_i_i_i = $gcodeLayer + 16 | 0;
   _memset($X_i_i_i_i | 0, 0, 28);
   HEAP32[$gcodeLayer + 40 >> 2] = $286;
   HEAP32[$gcodeLayer + 44 >> 2] = 0;
   HEAP32[$gcodeLayer + 48 >> 2] = 3424;
   $x_i_i_i = $gcode + 40 | 0;
   $289 = HEAP32[$x_i_i_i >> 2] | 0;
   $y_i_i_i = $gcode + 44 | 0;
   $290 = HEAP32[$y_i_i_i >> 2] | 0;
   HEAP32[$X_i_i_i_i >> 2] = $289;
   HEAP32[$X_i_i_i_i + 4 >> 2] = ($289 | 0) < 0 ? -1 : 0;
   HEAP32[$Y_i_i_i_i >> 2] = $290;
   HEAP32[$Y_i_i_i_i + 4 >> 2] = ($290 | 0) < 0 ? -1 : 0;
   HEAP32[$gcodeLayer + 36 >> 2] = 0;
   HEAP32[$gcodeLayer + 52 >> 2] = 100;
   HEAP8[$gcodeLayer + 60 | 0] = 0;
   $extruderNr_i_i_i = $gcode + 328 | 0;
   _memset($gcodeLayer + 64 | 0, 0, 16);
   HEAP32[$gcodeLayer + 56 >> 2] = HEAP32[$extruderNr_i_i_i >> 2];
   $zPos_i449 = $gcode + 320 | 0;
   HEAP32[$zPos_i449 >> 2] = HEAP32[$raftBaseThickness >> 2];
   $filamentDiameter = $config + 8 | 0;
   $filamentFlow = $config + 12 | 0;
   $div2_i = +(HEAP32[$filamentDiameter >> 2] | 0) / 1.0e3 * .5;
   $extrusionPerMM_i = $gcode + 16 | 0;
   HEAPF64[$extrusionPerMM_i >> 3] = +(HEAP32[$filamentFlow >> 2] | 0) * (+(HEAP32[$raftBaseThickness >> 2] | 0) / 1.0e3 / ($div2_i * $div2_i * 3.141592653589793)) / 100.0;
   $raftOutline = $storage + 48 | 0;
   __ZN12GCodePlanner22addPolygonsByOptimizerERNSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEEP15GCodePathConfig($gcodeLayer, $raftOutline, $raftBaseConfig);
   $__begin__i_i_i988 = $raftLines | 0;
   HEAP32[$__begin__i_i_i988 >> 2] = 0;
   $__end__i_i_i989 = $raftLines + 4 | 0;
   HEAP32[$__end__i_i_i989 >> 2] = 0;
   HEAP32[$raftLines + 8 >> 2] = 0;
   __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($agg_tmp314, $raftOutline);
   $raftLineSpacing = $config + 124 | 0;
   $infillOverlap319 = $config + 36 | 0;
   __Z18generateLineInfillNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEERS7_iiid($agg_tmp314, $raftLines, HEAP32[$raftBaseLinewidth >> 2] | 0, HEAP32[$raftLineSpacing >> 2] | 0, HEAP32[$infillOverlap319 >> 2] | 0, 0.0);
   $__begin__i_i_i453 = $agg_tmp314 | 0;
   $300 = HEAP32[$__begin__i_i_i453 >> 2] | 0;
   if (($300 | 0) != 0) {
    $__end__i_i_i_i_i_i455 = $agg_tmp314 + 4 | 0;
    $301 = HEAP32[$__end__i_i_i_i_i_i455 >> 2] | 0;
    if (($300 | 0) == ($301 | 0)) {
     $311 = $300;
    } else {
     $302 = $301;
     while (1) {
      $incdec_ptr_i_i_i_i_i_i = $302 - 12 | 0;
      HEAP32[$__end__i_i_i_i_i_i455 >> 2] = $incdec_ptr_i_i_i_i_i_i;
      $303 = HEAP32[$incdec_ptr_i_i_i_i_i_i >> 2] | 0;
      $304 = $303;
      if (($303 | 0) == 0) {
       $305 = $incdec_ptr_i_i_i_i_i_i;
      } else {
       $__end__i_i_i_i_i_i_i_i_i = $302 - 12 + 4 | 0;
       $306 = HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] | 0;
       if (($303 | 0) != ($306 | 0)) {
        HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] = $306 + ((($306 - 16 + (-$304 | 0) | 0) >>> 4 ^ -1) << 4);
       }
       __ZdlPv($303);
       $305 = HEAP32[$__end__i_i_i_i_i_i455 >> 2] | 0;
      }
      if (($300 | 0) == ($305 | 0)) {
       break;
      } else {
       $302 = $305;
      }
     }
     $311 = HEAP32[$__begin__i_i_i453 >> 2] | 0;
    }
    __ZdlPv($311);
   }
   __ZN12GCodePlanner22addPolygonsByOptimizerERNSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEEP15GCodePathConfig($gcodeLayer, $raftLines, $raftBaseConfig);
   __ZN12GCodePlanner10writeGCodeEb($gcodeLayer, 0);
   $313 = HEAP32[$__begin__i_i_i988 >> 2] | 0;
   if (($313 | 0) != 0) {
    $314 = HEAP32[$__end__i_i_i989 >> 2] | 0;
    if (($313 | 0) == ($314 | 0)) {
     $324 = $313;
    } else {
     $315 = $314;
     while (1) {
      $incdec_ptr_i_i_i_i_i_i463 = $315 - 12 | 0;
      HEAP32[$__end__i_i_i989 >> 2] = $incdec_ptr_i_i_i_i_i_i463;
      $316 = HEAP32[$incdec_ptr_i_i_i_i_i_i463 >> 2] | 0;
      $317 = $316;
      if (($316 | 0) == 0) {
       $318 = $incdec_ptr_i_i_i_i_i_i463;
      } else {
       $__end__i_i_i_i_i_i_i_i_i469 = $315 - 12 + 4 | 0;
       $319 = HEAP32[$__end__i_i_i_i_i_i_i_i_i469 >> 2] | 0;
       if (($316 | 0) != ($319 | 0)) {
        HEAP32[$__end__i_i_i_i_i_i_i_i_i469 >> 2] = $319 + ((($319 - 16 + (-$317 | 0) | 0) >>> 4 ^ -1) << 4);
       }
       __ZdlPv($316);
       $318 = HEAP32[$__end__i_i_i989 >> 2] | 0;
      }
      if (($313 | 0) == ($318 | 0)) {
       break;
      } else {
       $315 = $318;
      }
     }
     $324 = HEAP32[$__begin__i_i_i988 >> 2] | 0;
    }
    __ZdlPv($324);
   }
   __ZN12GCodePlannerD1Ev($gcodeLayer);
   __ZN11GCodeExport10addCommentEPKcz($gcode, 2504, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0);
   __ZN11GCodeExport10addCommentEPKcz($gcode, 2560, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0);
   $326 = HEAP32[$moveSpeed305 >> 2] | 0;
   HEAP32[$gcodeLayer333 >> 2] = $gcode;
   $X_i_i_i_i484 = $gcodeLayer333 + 8 | 0;
   $Y_i_i_i_i485 = $gcodeLayer333 + 16 | 0;
   _memset($X_i_i_i_i484 | 0, 0, 28);
   HEAP32[$gcodeLayer333 + 40 >> 2] = $326;
   HEAP32[$gcodeLayer333 + 44 >> 2] = 0;
   HEAP32[$gcodeLayer333 + 48 >> 2] = 3424;
   $329 = HEAP32[$x_i_i_i >> 2] | 0;
   $330 = HEAP32[$y_i_i_i >> 2] | 0;
   HEAP32[$X_i_i_i_i484 >> 2] = $329;
   HEAP32[$X_i_i_i_i484 + 4 >> 2] = ($329 | 0) < 0 ? -1 : 0;
   HEAP32[$Y_i_i_i_i485 >> 2] = $330;
   HEAP32[$Y_i_i_i_i485 + 4 >> 2] = ($330 | 0) < 0 ? -1 : 0;
   HEAP32[$gcodeLayer333 + 36 >> 2] = 0;
   HEAP32[$gcodeLayer333 + 52 >> 2] = 100;
   HEAP8[$gcodeLayer333 + 60 | 0] = 0;
   _memset($gcodeLayer333 + 64 | 0, 0, 16);
   HEAP32[$gcodeLayer333 + 56 >> 2] = HEAP32[$extruderNr_i_i_i >> 2];
   HEAP32[$zPos_i449 >> 2] = (HEAP32[$raftInterfaceThickness >> 2] | 0) + (HEAP32[$raftBaseThickness >> 2] | 0);
   $div2_i502 = +(HEAP32[$filamentDiameter >> 2] | 0) / 1.0e3 * .5;
   HEAPF64[$extrusionPerMM_i >> 3] = +(HEAP32[$filamentFlow >> 2] | 0) * (+(HEAP32[$raftInterfaceThickness >> 2] | 0) / 1.0e3 / ($div2_i502 * $div2_i502 * 3.141592653589793)) / 100.0;
   $__begin__i_i_i1013 = $raftLines345 | 0;
   HEAP32[$__begin__i_i_i1013 >> 2] = 0;
   $__end__i_i_i1014 = $raftLines345 + 4 | 0;
   HEAP32[$__end__i_i_i1014 >> 2] = 0;
   HEAP32[$raftLines345 + 8 >> 2] = 0;
   __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($agg_tmp347, $raftOutline);
   __Z18generateLineInfillNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEERS7_iiid($agg_tmp347, $raftLines345, HEAP32[$raftInterfaceLinewidth >> 2] | 0, HEAP32[$raftLineSpacing >> 2] | 0, HEAP32[$infillOverlap319 >> 2] | 0, 90.0);
   $__begin__i_i_i513 = $agg_tmp347 | 0;
   $341 = HEAP32[$__begin__i_i_i513 >> 2] | 0;
   if (($341 | 0) != 0) {
    $__end__i_i_i_i_i_i515 = $agg_tmp347 + 4 | 0;
    $342 = HEAP32[$__end__i_i_i_i_i_i515 >> 2] | 0;
    if (($341 | 0) == ($342 | 0)) {
     $352 = $341;
    } else {
     $343 = $342;
     while (1) {
      $incdec_ptr_i_i_i_i_i_i518 = $343 - 12 | 0;
      HEAP32[$__end__i_i_i_i_i_i515 >> 2] = $incdec_ptr_i_i_i_i_i_i518;
      $344 = HEAP32[$incdec_ptr_i_i_i_i_i_i518 >> 2] | 0;
      $345 = $344;
      if (($344 | 0) == 0) {
       $346 = $incdec_ptr_i_i_i_i_i_i518;
      } else {
       $__end__i_i_i_i_i_i_i_i_i524 = $343 - 12 + 4 | 0;
       $347 = HEAP32[$__end__i_i_i_i_i_i_i_i_i524 >> 2] | 0;
       if (($344 | 0) != ($347 | 0)) {
        HEAP32[$__end__i_i_i_i_i_i_i_i_i524 >> 2] = $347 + ((($347 - 16 + (-$345 | 0) | 0) >>> 4 ^ -1) << 4);
       }
       __ZdlPv($344);
       $346 = HEAP32[$__end__i_i_i_i_i_i515 >> 2] | 0;
      }
      if (($341 | 0) == ($346 | 0)) {
       break;
      } else {
       $343 = $346;
      }
     }
     $352 = HEAP32[$__begin__i_i_i513 >> 2] | 0;
    }
    __ZdlPv($352);
   }
   __ZN12GCodePlanner22addPolygonsByOptimizerERNSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEEP15GCodePathConfig($gcodeLayer333, $raftLines345, $raftInterfaceConfig);
   __ZN12GCodePlanner10writeGCodeEb($gcodeLayer333, 0);
   $354 = HEAP32[$__begin__i_i_i1013 >> 2] | 0;
   if (($354 | 0) != 0) {
    $355 = HEAP32[$__end__i_i_i1014 >> 2] | 0;
    if (($354 | 0) == ($355 | 0)) {
     $365 = $354;
    } else {
     $356 = $355;
     while (1) {
      $incdec_ptr_i_i_i_i_i_i544 = $356 - 12 | 0;
      HEAP32[$__end__i_i_i1014 >> 2] = $incdec_ptr_i_i_i_i_i_i544;
      $357 = HEAP32[$incdec_ptr_i_i_i_i_i_i544 >> 2] | 0;
      $358 = $357;
      if (($357 | 0) == 0) {
       $359 = $incdec_ptr_i_i_i_i_i_i544;
      } else {
       $__end__i_i_i_i_i_i_i_i_i550 = $356 - 12 + 4 | 0;
       $360 = HEAP32[$__end__i_i_i_i_i_i_i_i_i550 >> 2] | 0;
       if (($357 | 0) != ($360 | 0)) {
        HEAP32[$__end__i_i_i_i_i_i_i_i_i550 >> 2] = $360 + ((($360 - 16 + (-$358 | 0) | 0) >>> 4 ^ -1) << 4);
       }
       __ZdlPv($357);
       $359 = HEAP32[$__end__i_i_i1014 >> 2] | 0;
      }
      if (($354 | 0) == ($359 | 0)) {
       break;
      } else {
       $356 = $359;
      }
     }
     $365 = HEAP32[$__begin__i_i_i1013 >> 2] | 0;
    }
    __ZdlPv($365);
   }
   __ZN12GCodePlannerD1Ev($gcodeLayer333);
  }
 } while (0);
 $moveSpeed376 = $config + 80 | 0;
 $277 = $gcodeLayer375 | 0;
 $X_i_i_i_i674 = $gcodeLayer375 + 8 | 0;
 $Y_i_i_i_i675 = $gcodeLayer375 + 16 | 0;
 $speed2_i_i_i_i676 = $gcodeLayer375 + 40 | 0;
 $278 = $X_i_i_i_i674;
 $lineWidth3_i_i_i_i677 = $gcodeLayer375 + 44 | 0;
 $name4_i_i_i_i678 = $gcodeLayer375 + 48 | 0;
 $x_i_i_i679 = $gcode + 40 | 0;
 $y_i_i_i681 = $gcode + 44 | 0;
 $comb_i_i683 = $gcodeLayer375 + 36 | 0;
 $speedFactor_i_i684 = $gcodeLayer375 + 52 | 0;
 $forceRetraction_i_i686 = $gcodeLayer375 + 60 | 0;
 $extruderNr_i_i_i687 = $gcode + 328 | 0;
 $279 = $gcodeLayer375 + 64 | 0;
 $currentExtruder_i_i688 = $gcodeLayer375 + 56 | 0;
 $initialLayerThickness380 = $config + 4 | 0;
 $layerThickness381 = $config | 0;
 $zPos_i689 = $gcode + 320 | 0;
 $skirt = $storage + 36 | 0;
 $support552 = $storage + 72 | 0;
 $supportEverywhere = $config + 92 | 0;
 $polygons = $supportGenerator | 0;
 $polygons565 = $supportGenerator2 | 0;
 $__begin__i_i_i_i_i1010 = $supportGenerator2 | 0;
 $__end__i_i_i_i_i_i_i_i1012 = $supportGenerator2 + 4 | 0;
 $__begin__i_i_i_i_i1046 = $supportGenerator | 0;
 $__end__i_i_i_i_i_i_i_i1048 = $supportGenerator + 4 | 0;
 $initialSpeedupLayers = $config + 64 | 0;
 $initialLayerSpeed580 = $config + 68 | 0;
 $minimalLayerTime = $config + 100 | 0;
 $minimalFeedrate = $config + 104 | 0;
 $filamentDiameter596 = $config + 8 | 0;
 $filamentFlow597 = $config + 12 | 0;
 $extrusionPerMM_i1110 = $gcode + 16 | 0;
 $fanOnLayerNr = $config + 84 | 0;
 $currentFanSpeed_i1131 = $gcode + 332 | 0;
 $f_i1133 = $gcode | 0;
 $coolHeadLift = $config + 108 | 0;
 $fanSpeedMax = $config + 116 | 0;
 $fanSpeedMin = $config + 112 | 0;
 $280 = $partOrderOptimizer;
 $agg_tmp411691_sroa_0_0__idx = $partOrderOptimizer | 0;
 $agg_tmp411691_sroa_1_8__idx1223 = $partOrderOptimizer + 8 | 0;
 $__end__i1115 = $partOrderOptimizer + 44 | 0;
 $__begin__i1116 = $partOrderOptimizer + 40 | 0;
 $__begin__i_i_i1_i = $partOrderOptimizer + 28 | 0;
 $__begin__i_i_i14_i = $partOrderOptimizer + 16 | 0;
 $__end__i_i_i_i_i_i16_i = $partOrderOptimizer + 20 | 0;
 $__end__i_i_i_i_i_i3_i = $partOrderOptimizer + 32 | 0;
 $insetCount445 = $config + 20 | 0;
 $__begin__i_i_i1072 = $fillPolygons | 0;
 $__end__i_i_i1073 = $fillPolygons + 4 | 0;
 $__first__i_i_i_i_i_i1079 = $fillPolygons + 8 | 0;
 $infillOverlap480 = $config + 36 | 0;
 $__begin__i_i_i696 = $agg_tmp475 | 0;
 $sparseInfillLineDistance = $config + 32 | 0;
 $__begin__i_i_i724 = $agg_tmp497 | 0;
 $__begin__i_i_i752 = $agg_tmp508 | 0;
 $__end__i_i_i_i_i_i754 = $agg_tmp508 + 4 | 0;
 $__end__i_i_i_i_i_i726 = $agg_tmp497 + 4 | 0;
 $__begin__i_i_i858 = $agg_tmp521 | 0;
 $__end__i_i_i_i_i_i860 = $agg_tmp521 + 4 | 0;
 $__end__i_i_i_i_i_i698 = $agg_tmp475 + 4 | 0;
 $__first__i_i_i_i_i = $partOrderOptimizer + 24 | 0;
 $polygons_i = $partOrderOptimizer + 16 | 0;
 $layerNr369_0 = 0;
 $volumeIdx368_0 = 0;
 while (1) {
  if ($layerNr369_0 >>> 0 >= $sub_ptr_div_i853 >>> 0) {
   break;
  }
  $add373 = $layerNr369_0 + 1 | 0;
  if ((HEAP32[2] | 0) >= 2) {
   $435 = HEAP32[_stdout >> 2] | 0;
   _fprintf($435 | 0, 6160, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = 2456, HEAP32[tempInt + 8 >> 2] = $add373, HEAP32[tempInt + 16 >> 2] = $sub_ptr_div_i853, tempInt) | 0) | 0;
   $436 = HEAP32[_stdout >> 2] | 0;
   _fflush($436 | 0) | 0;
  }
  $437 = HEAP32[$moveSpeed376 >> 2] | 0;
  HEAP32[$277 >> 2] = $gcode;
  _memset($278 | 0, 0, 28);
  HEAP32[$speed2_i_i_i_i676 >> 2] = $437;
  HEAP32[$lineWidth3_i_i_i_i677 >> 2] = 0;
  HEAP32[$name4_i_i_i_i678 >> 2] = 3424;
  $438 = HEAP32[$x_i_i_i679 >> 2] | 0;
  $439 = HEAP32[$y_i_i_i681 >> 2] | 0;
  HEAP32[$X_i_i_i_i674 >> 2] = $438;
  HEAP32[$X_i_i_i_i674 + 4 >> 2] = ($438 | 0) < 0 ? -1 : 0;
  HEAP32[$Y_i_i_i_i675 >> 2] = $439;
  HEAP32[$Y_i_i_i_i675 + 4 >> 2] = ($439 | 0) < 0 ? -1 : 0;
  HEAP32[$comb_i_i683 >> 2] = 0;
  HEAP32[$speedFactor_i_i684 >> 2] = 100;
  HEAP8[$forceRetraction_i_i686] = 0;
  _memset($279 | 0, 0, 16);
  HEAP32[$currentExtruder_i_i688 >> 2] = HEAP32[$extruderNr_i_i_i687 >> 2];
  __ZN11GCodeExport10addCommentEPKcz($gcode, 2352, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $layerNr369_0, tempInt) | 0);
  $441 = HEAP32[$initialLayerThickness380 >> 2] | 0;
  $mul382 = Math_imul(HEAP32[$layerThickness381 >> 2] | 0, $layerNr369_0) | 0;
  $add387 = $mul382 + $441 + (HEAP32[$raftBaseThickness >> 2] | 0) + (HEAP32[$raftInterfaceThickness >> 2] | 0) | 0;
  HEAP32[$zPos_i689 >> 2] = $add387;
  $cmp389 = ($layerNr369_0 | 0) == 0;
  if ($cmp389) {
   __ZN12GCodePlanner22addPolygonsByOptimizerERNSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEEP15GCodePathConfig($gcodeLayer375, $skirt, $skirtConfig);
  }
  $445 = HEAP32[$__end__i892 >> 2] | 0;
  $446 = HEAP32[$__begin__i844 >> 2] | 0;
  if (($445 | 0) == ($446 | 0)) {
   $volumeIdx368_1_lcssa = $volumeIdx368_0;
  } else {
   $_ = ($layerNr369_0 & 1 | 0) == 0 ? 45 : 135;
   $conv527 = +($_ | 0);
   $volumeIdx368_11285 = $volumeIdx368_0;
   $volumeCnt_01286 = 0;
   $sub_ptr_div_i10281287 = ($445 - $446 | 0) / 12 & -1;
   $451 = $446;
   while (1) {
    if (($volumeCnt_01286 | 0) == 0) {
     $volumeIdx368_2 = $volumeIdx368_11285;
    } else {
     $volumeIdx368_2 = (($volumeIdx368_11285 + 1 | 0) >>> 0) % ($sub_ptr_div_i10281287 >>> 0) >>> 0;
    }
    $452 = HEAP32[$451 + ($volumeIdx368_2 * 12 & -1) >> 2] | 0;
    HEAP32[$currentExtruder_i_i688 >> 2] = $volumeIdx368_2;
    $453 = HEAP32[$x_i_i_i679 >> 2] | 0;
    $454 = HEAP32[$y_i_i_i681 >> 2] | 0;
    _memset($280 | 0, 0, 52);
    HEAP32[$agg_tmp411691_sroa_0_0__idx >> 2] = $453;
    HEAP32[$agg_tmp411691_sroa_0_0__idx + 4 >> 2] = ($453 | 0) < 0 ? -1 : 0;
    HEAP32[$agg_tmp411691_sroa_1_8__idx1223 >> 2] = $454;
    HEAP32[$agg_tmp411691_sroa_1_8__idx1223 + 4 >> 2] = ($454 | 0) < 0 ? -1 : 0;
    $__end__i1049 = $452 + ($layerNr369_0 * 12 & -1) + 4 | 0;
    $__begin__i1050 = $452 + ($layerNr369_0 * 12 & -1) | 0;
    $456 = HEAP32[$__begin__i1050 >> 2] | 0;
    L1526 : do {
     if ((HEAP32[$__end__i1049 >> 2] | 0) != ($456 | 0)) {
      $partNr414_01230 = 0;
      $460 = $456;
      $459 = 0;
      $458 = 0;
      while (1) {
       $462 = HEAP32[HEAP32[$460 + ($partNr414_01230 * 96 & -1) + 56 >> 2] >> 2] | 0;
       HEAP32[$ref_tmp_i >> 2] = $462;
       if (($459 | 0) == ($458 | 0)) {
        __ZNSt3__16vectorIPNS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS6_EEE21__push_back_slow_pathIKS6_EEvRT_($polygons_i, $ref_tmp_i);
       } else {
        if (($459 | 0) == 0) {
         $463 = 0;
        } else {
         HEAP32[$459 >> 2] = $462;
         $463 = HEAP32[$__end__i_i_i_i_i_i16_i >> 2] | 0;
        }
        HEAP32[$__end__i_i_i_i_i_i16_i >> 2] = $463 + 4;
       }
       $inc430 = $partNr414_01230 + 1 | 0;
       $465 = HEAP32[$__begin__i1050 >> 2] | 0;
       if ($inc430 >>> 0 >= (((HEAP32[$__end__i1049 >> 2] | 0) - $465 | 0) / 96 & -1) >>> 0) {
        break L1526;
       }
       $partNr414_01230 = $inc430;
       $460 = $465;
       $459 = HEAP32[$__end__i_i_i_i_i_i16_i >> 2] | 0;
       $458 = HEAP32[$__first__i_i_i_i_i >> 2] | 0;
      }
     }
    } while (0);
    __ZN13PathOptimizer8optimizeEv($partOrderOptimizer);
    $468 = HEAP32[$__end__i1115 >> 2] | 0;
    $469 = HEAP32[$__begin__i1116 >> 2] | 0;
    if (($468 | 0) == ($469 | 0)) {
     $638 = $468;
    } else {
     $partCounter_01268 = 0;
     $470 = $469;
     while (1) {
      $471 = HEAP32[$470 + ($partCounter_01268 << 2) >> 2] | 0;
      $472 = HEAP32[$__begin__i1050 >> 2] | 0;
      __ZN12GCodePlanner15setCombBoundaryEPNSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEE($gcodeLayer375, $472 + ($471 * 96 & -1) + 44 | 0);
      HEAP8[$forceRetraction_i_i686] = 1;
      L1543 : do {
       if ((HEAP32[$insetCount445 >> 2] | 0) > 0) {
        $__begin__i1103 = $472 + ($471 * 96 & -1) + 56 | 0;
        $475 = HEAP32[$__begin__i1103 >> 2] | 0;
        $insetNr_01234 = (((HEAP32[$472 + ($471 * 96 & -1) + 60 >> 2] | 0) - $475 | 0) / 12 & -1) - 1 | 0;
        if (($insetNr_01234 | 0) > -1) {
         $insetNr_01236 = $insetNr_01234;
         $476 = $475;
        } else {
         break;
        }
        while (1) {
         $arrayidx_i1099 = $476 + ($insetNr_01236 * 12 & -1) | 0;
         if (($insetNr_01236 | 0) == 0) {
          break;
         }
         __ZN12GCodePlanner22addPolygonsByOptimizerERNSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEEP15GCodePathConfig($gcodeLayer375, $arrayidx_i1099, $inset1Config);
         $insetNr_0 = $insetNr_01236 - 1 | 0;
         if (($insetNr_0 | 0) <= -1) {
          break L1543;
         }
         $insetNr_01236 = $insetNr_0;
         $476 = HEAP32[$__begin__i1103 >> 2] | 0;
        }
        __ZN12GCodePlanner22addPolygonsByOptimizerERNSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEEP15GCodePathConfig($gcodeLayer375, $arrayidx_i1099, $inset0Config);
       }
      } while (0);
      HEAP32[$__begin__i_i_i1072 >> 2] = 0;
      HEAP32[$__end__i_i_i1073 >> 2] = 0;
      HEAP32[$__first__i_i_i_i_i_i1079 >> 2] = 0;
      __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($agg_tmp475, $472 + ($471 * 96 & -1) + 68 | 0);
      $477 = HEAP32[$extrusionWidth199 >> 2] | 0;
      $479 = HEAP32[$472 + ($471 * 96 & -1) + 92 >> 2] | 0;
      __Z18generateLineInfillNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEERS7_iiid($agg_tmp475, $fillPolygons, $477, $477, HEAP32[$infillOverlap480 >> 2] | 0, +((($479 | 0) > -1 ? $479 : $_) | 0));
      $480 = HEAP32[$__begin__i_i_i696 >> 2] | 0;
      if (($480 | 0) != 0) {
       $481 = HEAP32[$__end__i_i_i_i_i_i698 >> 2] | 0;
       if (($480 | 0) == ($481 | 0)) {
        $491 = $480;
       } else {
        $482 = $481;
        while (1) {
         $incdec_ptr_i_i_i_i_i_i701 = $482 - 12 | 0;
         HEAP32[$__end__i_i_i_i_i_i698 >> 2] = $incdec_ptr_i_i_i_i_i_i701;
         $483 = HEAP32[$incdec_ptr_i_i_i_i_i_i701 >> 2] | 0;
         $484 = $483;
         if (($483 | 0) == 0) {
          $485 = $incdec_ptr_i_i_i_i_i_i701;
         } else {
          $__end__i_i_i_i_i_i_i_i_i707 = $482 - 12 + 4 | 0;
          $486 = HEAP32[$__end__i_i_i_i_i_i_i_i_i707 >> 2] | 0;
          if (($483 | 0) != ($486 | 0)) {
           HEAP32[$__end__i_i_i_i_i_i_i_i_i707 >> 2] = $486 + ((($486 - 16 + (-$484 | 0) | 0) >>> 4 ^ -1) << 4);
          }
          __ZdlPv($483);
          $485 = HEAP32[$__end__i_i_i_i_i_i698 >> 2] | 0;
         }
         if (($480 | 0) == ($485 | 0)) {
          break;
         } else {
          $482 = $485;
         }
        }
        $491 = HEAP32[$__begin__i_i_i696 >> 2] | 0;
       }
       __ZdlPv($491);
      }
      $493 = HEAP32[$sparseInfillLineDistance >> 2] | 0;
      do {
       if (($493 | 0) > 0) {
        $sparseOutline = $472 + ($471 * 96 & -1) + 80 | 0;
        if (($493 | 0) <= (HEAP32[$extrusionWidth199 >> 2] << 2 | 0)) {
         __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($agg_tmp521, $sparseOutline);
         __Z18generateLineInfillNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEERS7_iiid($agg_tmp521, $fillPolygons, HEAP32[$extrusionWidth199 >> 2] | 0, HEAP32[$sparseInfillLineDistance >> 2] | 0, HEAP32[$infillOverlap480 >> 2] | 0, $conv527);
         $581 = HEAP32[$__begin__i_i_i858 >> 2] | 0;
         if (($581 | 0) == 0) {
          break;
         }
         $582 = HEAP32[$__end__i_i_i_i_i_i860 >> 2] | 0;
         if (($581 | 0) == ($582 | 0)) {
          $592 = $581;
         } else {
          $583 = $582;
          while (1) {
           $incdec_ptr_i_i_i_i_i_i863 = $583 - 12 | 0;
           HEAP32[$__end__i_i_i_i_i_i860 >> 2] = $incdec_ptr_i_i_i_i_i_i863;
           $584 = HEAP32[$incdec_ptr_i_i_i_i_i_i863 >> 2] | 0;
           $585 = $584;
           if (($584 | 0) == 0) {
            $586 = $incdec_ptr_i_i_i_i_i_i863;
           } else {
            $__end__i_i_i_i_i_i_i_i_i869 = $583 - 12 + 4 | 0;
            $587 = HEAP32[$__end__i_i_i_i_i_i_i_i_i869 >> 2] | 0;
            if (($584 | 0) != ($587 | 0)) {
             HEAP32[$__end__i_i_i_i_i_i_i_i_i869 >> 2] = $587 + ((($587 - 16 + (-$585 | 0) | 0) >>> 4 ^ -1) << 4);
            }
            __ZdlPv($584);
            $586 = HEAP32[$__end__i_i_i_i_i_i860 >> 2] | 0;
           }
           if (($581 | 0) == ($586 | 0)) {
            break;
           } else {
            $583 = $586;
           }
          }
          $592 = HEAP32[$__begin__i_i_i858 >> 2] | 0;
         }
         __ZdlPv($592);
         break;
        }
        __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($agg_tmp497, $sparseOutline);
        __Z18generateLineInfillNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEERS7_iiid($agg_tmp497, $fillPolygons, HEAP32[$extrusionWidth199 >> 2] | 0, HEAP32[$sparseInfillLineDistance >> 2] << 1, HEAP32[$infillOverlap480 >> 2] | 0, 45.0);
        $498 = HEAP32[$__begin__i_i_i724 >> 2] | 0;
        if (($498 | 0) != 0) {
         $499 = HEAP32[$__end__i_i_i_i_i_i726 >> 2] | 0;
         if (($498 | 0) == ($499 | 0)) {
          $509 = $498;
         } else {
          $500 = $499;
          while (1) {
           $incdec_ptr_i_i_i_i_i_i729 = $500 - 12 | 0;
           HEAP32[$__end__i_i_i_i_i_i726 >> 2] = $incdec_ptr_i_i_i_i_i_i729;
           $501 = HEAP32[$incdec_ptr_i_i_i_i_i_i729 >> 2] | 0;
           $502 = $501;
           if (($501 | 0) == 0) {
            $503 = $incdec_ptr_i_i_i_i_i_i729;
           } else {
            $__end__i_i_i_i_i_i_i_i_i735 = $500 - 12 + 4 | 0;
            $504 = HEAP32[$__end__i_i_i_i_i_i_i_i_i735 >> 2] | 0;
            if (($501 | 0) != ($504 | 0)) {
             HEAP32[$__end__i_i_i_i_i_i_i_i_i735 >> 2] = $504 + ((($504 - 16 + (-$502 | 0) | 0) >>> 4 ^ -1) << 4);
            }
            __ZdlPv($501);
            $503 = HEAP32[$__end__i_i_i_i_i_i726 >> 2] | 0;
           }
           if (($498 | 0) == ($503 | 0)) {
            break;
           } else {
            $500 = $503;
           }
          }
          $509 = HEAP32[$__begin__i_i_i724 >> 2] | 0;
         }
         __ZdlPv($509);
        }
        __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($agg_tmp508, $sparseOutline);
        __Z18generateLineInfillNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEERS7_iiid($agg_tmp508, $fillPolygons, HEAP32[$extrusionWidth199 >> 2] | 0, HEAP32[$sparseInfillLineDistance >> 2] << 1, HEAP32[$infillOverlap480 >> 2] | 0, 135.0);
        $514 = HEAP32[$__begin__i_i_i752 >> 2] | 0;
        if (($514 | 0) == 0) {
         break;
        }
        $515 = HEAP32[$__end__i_i_i_i_i_i754 >> 2] | 0;
        if (($514 | 0) == ($515 | 0)) {
         $525 = $514;
        } else {
         $516 = $515;
         while (1) {
          $incdec_ptr_i_i_i_i_i_i757 = $516 - 12 | 0;
          HEAP32[$__end__i_i_i_i_i_i754 >> 2] = $incdec_ptr_i_i_i_i_i_i757;
          $517 = HEAP32[$incdec_ptr_i_i_i_i_i_i757 >> 2] | 0;
          $518 = $517;
          if (($517 | 0) == 0) {
           $519 = $incdec_ptr_i_i_i_i_i_i757;
          } else {
           $__end__i_i_i_i_i_i_i_i_i763 = $516 - 12 + 4 | 0;
           $520 = HEAP32[$__end__i_i_i_i_i_i_i_i_i763 >> 2] | 0;
           if (($517 | 0) != ($520 | 0)) {
            HEAP32[$__end__i_i_i_i_i_i_i_i_i763 >> 2] = $520 + ((($520 - 16 + (-$518 | 0) | 0) >>> 4 ^ -1) << 4);
           }
           __ZdlPv($517);
           $519 = HEAP32[$__end__i_i_i_i_i_i754 >> 2] | 0;
          }
          if (($514 | 0) == ($519 | 0)) {
           break;
          } else {
           $516 = $519;
          }
         }
         $525 = HEAP32[$__begin__i_i_i752 >> 2] | 0;
        }
        __ZdlPv($525);
       }
      } while (0);
      __ZN12GCodePlanner22addPolygonsByOptimizerERNSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEEP15GCodePathConfig($gcodeLayer375, $fillPolygons, $fillConfig);
      $610 = HEAP32[$__begin__i_i_i1072 >> 2] | 0;
      if (($610 | 0) != 0) {
       $611 = HEAP32[$__end__i_i_i1073 >> 2] | 0;
       if (($610 | 0) == ($611 | 0)) {
        $621 = $610;
       } else {
        $612 = $611;
        while (1) {
         $incdec_ptr_i_i_i_i_i_i915 = $612 - 12 | 0;
         HEAP32[$__end__i_i_i1073 >> 2] = $incdec_ptr_i_i_i_i_i_i915;
         $613 = HEAP32[$incdec_ptr_i_i_i_i_i_i915 >> 2] | 0;
         $614 = $613;
         if (($613 | 0) == 0) {
          $615 = $incdec_ptr_i_i_i_i_i_i915;
         } else {
          $__end__i_i_i_i_i_i_i_i_i921 = $612 - 12 + 4 | 0;
          $616 = HEAP32[$__end__i_i_i_i_i_i_i_i_i921 >> 2] | 0;
          if (($613 | 0) != ($616 | 0)) {
           HEAP32[$__end__i_i_i_i_i_i_i_i_i921 >> 2] = $616 + ((($616 - 16 + (-$614 | 0) | 0) >>> 4 ^ -1) << 4);
          }
          __ZdlPv($613);
          $615 = HEAP32[$__end__i_i_i1073 >> 2] | 0;
         }
         if (($610 | 0) == ($615 | 0)) {
          break;
         } else {
          $612 = $615;
         }
        }
        $621 = HEAP32[$__begin__i_i_i1072 >> 2] | 0;
       }
       __ZdlPv($621);
      }
      $inc540 = $partCounter_01268 + 1 | 0;
      $624 = HEAP32[$__begin__i1116 >> 2] | 0;
      if ($inc540 >>> 0 < (HEAP32[$__end__i1115 >> 2] | 0) - $624 >> 2 >>> 0) {
       $partCounter_01268 = $inc540;
       $470 = $624;
      } else {
       $638 = $624;
       break;
      }
     }
    }
    $639 = HEAP32[$comb_i_i683 >> 2] | 0;
    if (($639 | 0) == 0) {
     $649 = $638;
    } else {
     $640 = HEAP32[$639 + 4 >> 2] | 0;
     if (($640 | 0) != 0) {
      __ZdaPv($640);
     }
     $642 = HEAP32[$639 + 8 >> 2] | 0;
     if (($642 | 0) != 0) {
      __ZdaPv($642);
     }
     $644 = HEAP32[$639 + 12 >> 2] | 0;
     if (($644 | 0) != 0) {
      __ZdaPv($644);
     }
     $646 = HEAP32[$639 + 16 >> 2] | 0;
     if (($646 | 0) != 0) {
      __ZdaPv($646);
     }
     __ZdlPv($639);
     $649 = HEAP32[$__begin__i1116 >> 2] | 0;
    }
    HEAP32[$comb_i_i683 >> 2] = 0;
    $650 = $649;
    if (($649 | 0) != 0) {
     $651 = HEAP32[$__end__i1115 >> 2] | 0;
     if (($649 | 0) != ($651 | 0)) {
      HEAP32[$__end__i1115 >> 2] = $651 + ((($651 - 4 + (-$650 | 0) | 0) >>> 2 ^ -1) << 2);
     }
     __ZdlPv($649);
    }
    $656 = HEAP32[$__begin__i_i_i1_i >> 2] | 0;
    $657 = $656;
    if (($656 | 0) != 0) {
     $658 = HEAP32[$__end__i_i_i_i_i_i3_i >> 2] | 0;
     if (($656 | 0) != ($658 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i3_i >> 2] = $658 + ((($658 - 4 + (-$657 | 0) | 0) >>> 2 ^ -1) << 2);
     }
     __ZdlPv($656);
    }
    $663 = HEAP32[$__begin__i_i_i14_i >> 2] | 0;
    $664 = $663;
    if (($663 | 0) != 0) {
     $665 = HEAP32[$__end__i_i_i_i_i_i16_i >> 2] | 0;
     if (($663 | 0) != ($665 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i16_i >> 2] = $665 + ((($665 - 4 + (-$664 | 0) | 0) >>> 2 ^ -1) << 2);
     }
     __ZdlPv($663);
    }
    $inc547 = $volumeCnt_01286 + 1 | 0;
    $671 = HEAP32[$__begin__i844 >> 2] | 0;
    $sub_ptr_div_i1028 = ((HEAP32[$__end__i892 >> 2] | 0) - $671 | 0) / 12 & -1;
    if ($inc547 >>> 0 < $sub_ptr_div_i1028 >>> 0) {
     $volumeIdx368_11285 = $volumeIdx368_2;
     $volumeCnt_01286 = $inc547;
     $sub_ptr_div_i10281287 = $sub_ptr_div_i1028;
     $451 = $671;
    } else {
     $volumeIdx368_1_lcssa = $volumeIdx368_2;
     break;
    }
   }
  }
  $693 = HEAP32[$supportAngle >> 2] | 0;
  do {
   if (($693 | 0) > -1) {
    __ZN20SupportPolyGeneratorC2ER14SupportStorageiibb($supportGenerator, $support552, $add387, $693, (HEAP32[$supportEverywhere >> 2] | 0) > 0, 1);
    __ZN12GCodePlanner22addPolygonsByOptimizerERNSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEEP15GCodePathConfig($gcodeLayer375, $polygons, $supportConfig);
    do {
     if ($cmp389) {
      __ZN20SupportPolyGeneratorC2ER14SupportStorageiibb($supportGenerator2, $support552, $add387, HEAP32[$supportAngle >> 2] | 0, (HEAP32[$supportEverywhere >> 2] | 0) > 0, 0);
      __ZN12GCodePlanner22addPolygonsByOptimizerERNSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEEP15GCodePathConfig($gcodeLayer375, $polygons565, $supportConfig);
      $697 = HEAP32[$__begin__i_i_i_i_i1010 >> 2] | 0;
      if (($697 | 0) == 0) {
       break;
      }
      $698 = HEAP32[$__end__i_i_i_i_i_i_i_i1012 >> 2] | 0;
      if (($697 | 0) == ($698 | 0)) {
       $708 = $697;
      } else {
       $699 = $698;
       while (1) {
        $incdec_ptr_i_i_i_i_i_i_i_i1014 = $699 - 12 | 0;
        HEAP32[$__end__i_i_i_i_i_i_i_i1012 >> 2] = $incdec_ptr_i_i_i_i_i_i_i_i1014;
        $700 = HEAP32[$incdec_ptr_i_i_i_i_i_i_i_i1014 >> 2] | 0;
        $701 = $700;
        if (($700 | 0) == 0) {
         $702 = $incdec_ptr_i_i_i_i_i_i_i_i1014;
        } else {
         $__end__i_i_i_i_i_i_i_i_i_i_i = $699 - 12 + 4 | 0;
         $703 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i >> 2] | 0;
         if (($700 | 0) != ($703 | 0)) {
          HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i >> 2] = $703 + ((($703 - 16 + (-$701 | 0) | 0) >>> 4 ^ -1) << 4);
         }
         __ZdlPv($700);
         $702 = HEAP32[$__end__i_i_i_i_i_i_i_i1012 >> 2] | 0;
        }
        if (($697 | 0) == ($702 | 0)) {
         break;
        } else {
         $699 = $702;
        }
       }
       $708 = HEAP32[$__begin__i_i_i_i_i1010 >> 2] | 0;
      }
      __ZdlPv($708);
     }
    } while (0);
    $729 = HEAP32[$__begin__i_i_i_i_i1046 >> 2] | 0;
    if (($729 | 0) == 0) {
     break;
    }
    $730 = HEAP32[$__end__i_i_i_i_i_i_i_i1048 >> 2] | 0;
    if (($729 | 0) == ($730 | 0)) {
     $740 = $729;
    } else {
     $731 = $730;
     while (1) {
      $incdec_ptr_i_i_i_i_i_i_i_i1051 = $731 - 12 | 0;
      HEAP32[$__end__i_i_i_i_i_i_i_i1048 >> 2] = $incdec_ptr_i_i_i_i_i_i_i_i1051;
      $732 = HEAP32[$incdec_ptr_i_i_i_i_i_i_i_i1051 >> 2] | 0;
      $733 = $732;
      if (($732 | 0) == 0) {
       $734 = $incdec_ptr_i_i_i_i_i_i_i_i1051;
      } else {
       $__end__i_i_i_i_i_i_i_i_i_i_i1057 = $731 - 12 + 4 | 0;
       $735 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i1057 >> 2] | 0;
       if (($732 | 0) != ($735 | 0)) {
        HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i1057 >> 2] = $735 + ((($735 - 16 + (-$733 | 0) | 0) >>> 4 ^ -1) << 4);
       }
       __ZdlPv($732);
       $734 = HEAP32[$__end__i_i_i_i_i_i_i_i1048 >> 2] | 0;
      }
      if (($729 | 0) == ($734 | 0)) {
       break;
      } else {
       $731 = $734;
      }
     }
     $740 = HEAP32[$__begin__i_i_i_i_i1046 >> 2] | 0;
    }
    __ZdlPv($740);
   }
  } while (0);
  $755 = HEAP32[$initialSpeedupLayers >> 2] | 0;
  if (($layerNr369_0 | 0) < ($755 | 0)) {
   $div588 = (((Math_imul(((HEAP32[$initialLayerSpeed580 >> 2] | 0) * 100 & -1 | 0) / (HEAP32[$printSpeed >> 2] | 0) & -1, $755 - $layerNr369_0 | 0) | 0) + ($layerNr369_0 * 100 & -1) | 0) >>> 0) / ($755 >>> 0) >>> 0;
   HEAP32[$speedFactor_i_i684 >> 2] = ($div588 | 0) < 1 ? 1 : $div588;
  }
  __ZN12GCodePlanner21forceMinimalLayerTimeEdi($gcodeLayer375, +(HEAP32[$minimalLayerTime >> 2] | 0), HEAP32[$minimalFeedrate >> 2] | 0);
  if ($cmp389) {
   $div2_i1101 = +(HEAP32[$filamentDiameter596 >> 2] | 0) / 1.0e3 * .5;
   $storemerge_in = +(HEAP32[$filamentFlow597 >> 2] | 0) * (+(HEAP32[$initialLayerThickness380 >> 2] | 0) / 1.0e3 / ($div2_i1101 * $div2_i1101 * 3.141592653589793));
  } else {
   $div2_i1113 = +(HEAP32[$filamentDiameter596 >> 2] | 0) / 1.0e3 * .5;
   $storemerge_in = +(HEAP32[$filamentFlow597 >> 2] | 0) * (+(HEAP32[$layerThickness381 >> 2] | 0) / 1.0e3 / ($div2_i1113 * $div2_i1113 * 3.141592653589793));
  }
  HEAPF64[$extrusionPerMM_i1110 >> 3] = $storemerge_in / 100.0;
  do {
   if (($layerNr369_0 | 0) < (HEAP32[$fanOnLayerNr >> 2] | 0)) {
    if ((HEAP32[$currentFanSpeed_i1131 >> 2] | 0) == 0) {
     break;
    }
    $775 = HEAP32[$f_i1133 >> 2] | 0;
    _fwrite(3528, 5, 1, $775 | 0) | 0;
    HEAP32[$currentFanSpeed_i1131 >> 2] = 0;
   } else {
    $767 = HEAP32[$speedFactor_i_i684 >> 2] | 0;
    if (($767 | 0) < 51) {
     $speed_0 = HEAP32[$fanSpeedMax >> 2] | 0;
    } else {
     $div618 = (Math_imul(HEAP32[$fanSpeedMin >> 2] | 0, $767 - 50 | 0) | 0) / 50 & -1;
     $speed_0 = ((Math_imul(HEAP32[$fanSpeedMax >> 2] | 0, 100 - $767 | 0) | 0) / 50 & -1) + $div618 | 0;
    }
    if ((HEAP32[$currentFanSpeed_i1131 >> 2] | 0) == ($speed_0 | 0)) {
     break;
    }
    $772 = HEAP32[$f_i1133 >> 2] | 0;
    if (($speed_0 | 0) > 0) {
     $div_i1128 = ($speed_0 * 255 & -1 | 0) / 100 & -1;
     _fprintf($772 | 0, 3576, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $div_i1128, tempInt) | 0) | 0;
    } else {
     _fwrite(3528, 5, 1, $772 | 0) | 0;
    }
    HEAP32[$currentFanSpeed_i1131 >> 2] = $speed_0;
   }
  } while (0);
  __ZN12GCodePlanner10writeGCodeEb($gcodeLayer375, (HEAP32[$coolHeadLift >> 2] | 0) > 0);
  __ZN12GCodePlannerD1Ev($gcodeLayer375);
  $layerNr369_0 = $add373;
  $volumeIdx368_0 = $volumeIdx368_1_lcssa;
 }
 _gettimeofday($tv_i_i1139 | 0, 0) | 0;
 $779 = HEAP32[$tv_i_i1139 >> 2] | 0;
 $780 = HEAP32[$tv_i_i1139 + 4 >> 2] | 0;
 _gettimeofday($tv_i2_i1138 | 0, 0) | 0;
 __Z4_logPKcz(2304, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = +($779 | 0) + +($780 | 0) / 1.0e6 - $add_i9_i406, tempInt) | 0);
 $conv_i1161 = +(_ftell(HEAP32[$f_i1133 >> 2] | 0) | 0);
 if ($conv_i1161 > 1048576.0) {
  $conv3_i1163 = $conv_i1161 * 9.5367431640625e-7;
  $783 = HEAP32[_stdout >> 2] | 0;
  $conv4_i1164 = $conv3_i1163;
  _fprintf($783 | 0, 3616, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = $conv4_i1164, tempInt) | 0) | 0;
  $fsize_0_i = $conv3_i1163;
 } else {
  $fsize_0_i = $conv_i1161;
 }
 if ($fsize_0_i > 1024.0) {
  $784 = HEAP32[_stdout >> 2] | 0;
  $conv11_i = $fsize_0_i * .0009765625;
  _fprintf($784 | 0, 3592, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = $conv11_i, tempInt) | 0) | 0;
 }
 if ((HEAP32[$currentFanSpeed_i1131 >> 2] | 0) != 0) {
  $786 = HEAP32[$f_i1133 >> 2] | 0;
  _fwrite(3528, 5, 1, $786 | 0) | 0;
  HEAP32[$currentFanSpeed_i1131 >> 2] = 0;
 }
 if ((HEAP32[2] | 0) >= 2) {
  $789 = HEAP32[_stdout >> 2] | 0;
  _fprintf($789 | 0, 6160, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = 2248, HEAP32[tempInt + 8 >> 2] = 1, HEAP32[tempInt + 16 >> 2] = 1, tempInt) | 0) | 0;
  $790 = HEAP32[_stdout >> 2] | 0;
  _fflush($790 | 0) | 0;
 }
 _gettimeofday($tv_i_i1181 | 0, 0) | 0;
 _gettimeofday($tv_i2_i1180 | 0, 0) | 0;
 _gettimeofday($tv_i10_i | 0, 0) | 0;
 __Z4_logPKcz(2216, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = +(HEAP32[$tv_i10_i >> 2] | 0) + +(HEAP32[$tv_i10_i + 4 >> 2] | 0) / 1.0e6 - +HEAPF64[2], tempInt) | 0);
 $797 = HEAP32[68] | 0;
 $798 = HEAP32[$storage + 8 >> 2] | 0;
 HEAP32[68] = ($797 | 0) < ($798 | 0) ? $798 : $797;
 __ZN16SliceDataStorageD2Ev($storage);
 $800 = HEAP32[$__begin__i_i_i >> 2] | 0;
 if (($800 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 $802 = HEAP32[$__end__i_i_i >> 2] | 0;
 if (($800 | 0) != ($802 | 0)) {
  HEAP32[$__end__i_i_i >> 2] = $802 + ((($802 - 4 + (-$800 | 0) | 0) >>> 2 ^ -1) << 2);
 }
 __ZdlPv($800);
 STACKTOP = __stackBase__;
 return;
}
function __ZN11GCodeExport7addMoveEN10ClipperLib8IntPointEii($this, $p, $speed, $lineWidth) {
 $this = $this | 0;
 $p = $p | 0;
 $speed = $speed | 0;
 $lineWidth = $lineWidth | 0;
 var $cmp = 0, $0 = 0, $1 = 0, $p_idx = 0, $p_idx5 = 0, $p_idx5_val$0 = 0, $p_idx5_val$1 = 0, $sub_i$0 = 0, $sub_i$1 = 0, $sub3_i$0 = 0, $sub3_i$1 = 0, $isRetracted = 0, $f = 0, $4 = 0, $retractionSpeed = 0, $mul = 0, $extrusionAmount = 0, $6 = 0.0, $f9_pre_phi = 0, $extrusionAmount8_pre_phi = 0, $div = 0.0, $div_i = 0.0, $div2_i = 0.0, $mul7 = 0.0, $10 = 0, $12 = 0, $currentSpeed14 = 0, $f22_pre = 0, $15 = 0, $mul18 = 0, $16 = 0, $X = 0, $17$0 = 0, $18 = 0, $X23 = 0, $sub$0 = 0, $conv26 = 0.0, $Y = 0, $20$0 = 0, $Y30 = 0, $sub31$0 = 0, $conv34 = 0.0, $zPos = 0, $22 = 0, $z = 0, $24 = 0, $conv42 = 0.0, $27 = 0, $fputc = 0, $conv56$0 = 0, $conv56 = 0, $conv58$0 = 0, $conv58 = 0, $28 = 0, $ref_tmp54_sroa_0_0__idx = 0, $ref_tmp54_sroa_1_4__idx11 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 tempParam = $p;
 $p = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[$p >> 2] = HEAP32[tempParam >> 2];
 HEAP32[$p + 4 >> 2] = HEAP32[tempParam + 4 >> 2];
 HEAP32[$p + 8 >> 2] = HEAP32[tempParam + 8 >> 2];
 HEAP32[$p + 12 >> 2] = HEAP32[tempParam + 12 >> 2];
 $cmp = ($lineWidth | 0) != 0;
 if ($cmp) {
  $0 = HEAP32[$this + 40 >> 2] | 0;
  $1 = HEAP32[$this + 44 >> 2] | 0;
  $p_idx = $p | 0;
  $p_idx5 = $p + 8 | 0;
  $p_idx5_val$0 = HEAP32[$p_idx5 >> 2] | 0;
  $p_idx5_val$1 = HEAP32[$p_idx5 + 4 >> 2] | 0;
  $sub_i$0 = _i64Subtract(HEAP32[$p_idx >> 2] | 0, HEAP32[$p_idx + 4 >> 2] | 0, $0, ($0 | 0) < 0 ? -1 : 0) | 0;
  $sub_i$1 = tempRet0;
  $sub3_i$0 = _i64Subtract($p_idx5_val$0, $p_idx5_val$1, $1, ($1 | 0) < 0 ? -1 : 0) | 0;
  $sub3_i$1 = tempRet0;
  $isRetracted = $this + 324 | 0;
  if ((HEAP8[$isRetracted] & 1) == 0) {
   $extrusionAmount8_pre_phi = $this + 8 | 0;
   $f9_pre_phi = $this | 0;
  } else {
   $f = $this | 0;
   $4 = HEAP32[$f >> 2] | 0;
   $retractionSpeed = $this + 316 | 0;
   $mul = (HEAP32[$retractionSpeed >> 2] | 0) * 60 & -1;
   $extrusionAmount = $this + 8 | 0;
   $6 = +HEAPF64[$extrusionAmount >> 3];
   _fprintf($4 | 0, 3408, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $mul, HEAPF64[tempInt + 8 >> 3] = $6, tempInt) | 0) | 0;
   HEAP32[$this + 312 >> 2] = HEAP32[$retractionSpeed >> 2];
   HEAP8[$isRetracted] = 0;
   $extrusionAmount8_pre_phi = $extrusionAmount;
   $f9_pre_phi = $f;
  }
  $div = +($lineWidth | 0) * +HEAPF64[$this + 16 >> 3] / 1.0e3;
  $div_i = (+($sub_i$0 >>> 0) + +($sub_i$1 | 0) * 4294967296.0) / 1.0e3;
  $div2_i = (+($sub3_i$0 >>> 0) + +($sub3_i$1 | 0) * 4294967296.0) / 1.0e3;
  $mul7 = $div * +Math_sqrt(+($div_i * $div_i + $div2_i * $div2_i));
  HEAPF64[$extrusionAmount8_pre_phi >> 3] = +HEAPF64[$extrusionAmount8_pre_phi >> 3] + $mul7;
  $10 = HEAP32[$f9_pre_phi >> 2] | 0;
  _fwrite(3376, 2, 1, $10 | 0) | 0;
 } else {
  $12 = HEAP32[$this >> 2] | 0;
  _fwrite(3368, 2, 1, $12 | 0) | 0;
 }
 $currentSpeed14 = $this + 312 | 0;
 $f22_pre = $this | 0;
 if ((HEAP32[$currentSpeed14 >> 2] | 0) != ($speed | 0)) {
  $15 = HEAP32[$f22_pre >> 2] | 0;
  $mul18 = $speed * 60 & -1;
  _fprintf($15 | 0, 3360, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $mul18, tempInt) | 0) | 0;
  HEAP32[$currentSpeed14 >> 2] = $speed;
 }
 $16 = HEAP32[$f22_pre >> 2] | 0;
 $X = $p | 0;
 $17$0 = HEAP32[$X >> 2] | 0;
 $18 = HEAP32[$this + 328 >> 2] | 0;
 $X23 = $this + 56 + ($18 << 4) | 0;
 $sub$0 = _i64Subtract($17$0, HEAP32[$X + 4 >> 2] | 0, HEAP32[$X23 >> 2] | 0, HEAP32[$X23 + 4 >> 2] | 0) | 0;
 $conv26 = (+($sub$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0) / 1.0e3;
 $Y = $p + 8 | 0;
 $20$0 = HEAP32[$Y >> 2] | 0;
 $Y30 = $this + 56 + ($18 << 4) + 8 | 0;
 $sub31$0 = _i64Subtract($20$0, HEAP32[$Y + 4 >> 2] | 0, HEAP32[$Y30 >> 2] | 0, HEAP32[$Y30 + 4 >> 2] | 0) | 0;
 $conv34 = (+($sub31$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0) / 1.0e3;
 _fprintf($16 | 0, 3336, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAPF64[tempInt >> 3] = $conv26, HEAPF64[tempInt + 8 >> 3] = $conv34, tempInt) | 0) | 0;
 $zPos = $this + 320 | 0;
 $22 = HEAP32[$zPos >> 2] | 0;
 $z = $this + 48 | 0;
 if (($22 | 0) != (HEAP32[$z >> 2] | 0)) {
  $24 = HEAP32[$f22_pre >> 2] | 0;
  $conv42 = +($22 | 0) / 1.0e3;
  _fprintf($24 | 0, 3328, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = $conv42, tempInt) | 0) | 0;
 }
 if (!$cmp) {
  $27 = HEAP32[$f22_pre >> 2] | 0;
  $fputc = _fputc(10, $27 | 0) | 0;
  $conv56$0 = $17$0;
  $conv56 = $conv56$0;
  $conv58$0 = $20$0;
  $conv58 = $conv58$0;
  $28 = HEAP32[$zPos >> 2] | 0;
  $ref_tmp54_sroa_0_0__idx = $this + 40 | 0;
  HEAP32[$ref_tmp54_sroa_0_0__idx >> 2] = $conv56;
  $ref_tmp54_sroa_1_4__idx11 = $this + 44 | 0;
  HEAP32[$ref_tmp54_sroa_1_4__idx11 >> 2] = $conv58;
  HEAP32[$z >> 2] = $28;
  STACKTOP = __stackBase__;
  return;
 }
 _fprintf(HEAP32[$f22_pre >> 2] | 0, 3312, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = +HEAPF64[$this + 8 >> 3], tempInt) | 0) | 0;
 $27 = HEAP32[$f22_pre >> 2] | 0;
 $fputc = _fputc(10, $27 | 0) | 0;
 $conv56$0 = $17$0;
 $conv56 = $conv56$0;
 $conv58$0 = $20$0;
 $conv58 = $conv58$0;
 $28 = HEAP32[$zPos >> 2] | 0;
 $ref_tmp54_sroa_0_0__idx = $this + 40 | 0;
 HEAP32[$ref_tmp54_sroa_0_0__idx >> 2] = $conv56;
 $ref_tmp54_sroa_1_4__idx11 = $this + 44 | 0;
 HEAP32[$ref_tmp54_sroa_1_4__idx11 >> 2] = $conv58;
 HEAP32[$z >> 2] = $28;
 STACKTOP = __stackBase__;
 return;
}
function __ZN11GCodeExport10addCommentEPKcz($this, $comment, varrp) {
 $this = $this | 0;
 $comment = $comment | 0;
 varrp = varrp | 0;
 var $args = 0, $arraydecay2 = 0, $f = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args = __stackBase__ | 0;
 $arraydecay2 = $args;
 HEAP32[$arraydecay2 >> 2] = varrp;
 HEAP32[$arraydecay2 + 4 >> 2] = 0;
 $f = $this | 0;
 _fputc(59, HEAP32[$f >> 2] | 0) | 0;
 _vfprintf(HEAP32[$f >> 2] | 0, $comment | 0, $args | 0) | 0;
 _fputc(10, HEAP32[$f >> 2] | 0) | 0;
 STACKTOP = __stackBase__;
 return;
}
function __ZN12GCodePlanner22addPolygonsByOptimizerERNSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEEP15GCodePathConfig($this, $polygons, $config) {
 $this = $this | 0;
 $polygons = $polygons | 0;
 $config = $config | 0;
 var $ref_tmp_i = 0, $orderOptimizer = 0, $0 = 0, $1 = 0, $__end__i = 0, $__begin__i = 0, $3 = 0, $__end__i_i = 0, $__first__i_i_i_i_i = 0, $polygons_i = 0, $6 = 0, $7 = 0, $8 = 0, $i_075 = 0, $arrayidx_i = 0, $9 = 0, $inc = 0, $11 = 0, $__end__i28 = 0, $33 = 0, $__begin__i29 = 0, $34 = 0, $__begin__i37 = 0, $35 = 0, $i5_062 = 0, $36 = 0, $inc19 = 0, $40 = 0, $41 = 0, $sub_ptr_rhs_cast_i31 = 0, $sub_ptr_rhs_cast_i31_lcssa = 0, $_lcssa54 = 0, $_lcssa = 0, $46 = 0, $47 = 0, $__end__i_i_i_i_i_i3_i = 0, $48 = 0, $53 = 0, $__end__i_i_i_i_i_i16_i = 0, $55 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $ref_tmp_i = __stackBase__ | 0;
 $orderOptimizer = __stackBase__ + 8 | 0;
 $0 = $this + 8 | 0;
 $1 = $orderOptimizer;
 _memset($1 | 0, 0, 52);
 HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
 HEAP32[$1 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 HEAP32[$1 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
 HEAP32[$1 + 12 >> 2] = HEAP32[$0 + 12 >> 2];
 $__end__i = $polygons + 4 | 0;
 $__begin__i = $polygons | 0;
 $3 = HEAP32[$__begin__i >> 2] | 0;
 L1770 : do {
  if ((HEAP32[$__end__i >> 2] | 0) != ($3 | 0)) {
   $__end__i_i = $orderOptimizer + 20 | 0;
   $__first__i_i_i_i_i = $orderOptimizer + 24 | 0;
   $polygons_i = $orderOptimizer + 16 | 0;
   $i_075 = 0;
   $8 = $3;
   $7 = 0;
   $6 = 0;
   while (1) {
    $arrayidx_i = $8 + ($i_075 * 12 & -1) | 0;
    HEAP32[$ref_tmp_i >> 2] = $arrayidx_i;
    if (($7 | 0) == ($6 | 0)) {
     __ZNSt3__16vectorIPNS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS6_EEE21__push_back_slow_pathIKS6_EEvRT_($polygons_i, $ref_tmp_i);
    } else {
     if (($7 | 0) == 0) {
      $9 = 0;
     } else {
      HEAP32[$7 >> 2] = $arrayidx_i;
      $9 = HEAP32[$__end__i_i >> 2] | 0;
     }
     HEAP32[$__end__i_i >> 2] = $9 + 4;
    }
    $inc = $i_075 + 1 | 0;
    $11 = HEAP32[$__begin__i >> 2] | 0;
    if ($inc >>> 0 >= (((HEAP32[$__end__i >> 2] | 0) - $11 | 0) / 12 & -1) >>> 0) {
     break L1770;
    }
    $i_075 = $inc;
    $8 = $11;
    $7 = HEAP32[$__end__i_i >> 2] | 0;
    $6 = HEAP32[$__first__i_i_i_i_i >> 2] | 0;
   }
  }
 } while (0);
 __ZN13PathOptimizer8optimizeEv($orderOptimizer);
 $__end__i28 = $orderOptimizer + 44 | 0;
 $33 = HEAP32[$__end__i28 >> 2] | 0;
 $__begin__i29 = $orderOptimizer + 40 | 0;
 $34 = HEAP32[$__begin__i29 >> 2] | 0;
 if (($33 | 0) == ($34 | 0)) {
  $_lcssa = $33;
  $_lcssa54 = $33;
  $sub_ptr_rhs_cast_i31_lcssa = $34;
 } else {
  $__begin__i37 = $orderOptimizer + 28 | 0;
  $i5_062 = 0;
  $35 = $34;
  while (1) {
   $36 = HEAP32[$35 + ($i5_062 << 2) >> 2] | 0;
   __ZN12GCodePlanner10addPolygonERNSt3__16vectorIN10ClipperLib8IntPointENS0_9allocatorIS3_EEEEiP15GCodePathConfig($this, (HEAP32[$__begin__i >> 2] | 0) + ($36 * 12 & -1) | 0, HEAP32[(HEAP32[$__begin__i37 >> 2] | 0) + ($36 << 2) >> 2] | 0, $config);
   $inc19 = $i5_062 + 1 | 0;
   $40 = HEAP32[$__end__i28 >> 2] | 0;
   $41 = HEAP32[$__begin__i29 >> 2] | 0;
   $sub_ptr_rhs_cast_i31 = $41;
   if ($inc19 >>> 0 < $40 - $sub_ptr_rhs_cast_i31 >> 2 >>> 0) {
    $i5_062 = $inc19;
    $35 = $41;
   } else {
    $_lcssa = $40;
    $_lcssa54 = $41;
    $sub_ptr_rhs_cast_i31_lcssa = $sub_ptr_rhs_cast_i31;
    break;
   }
  }
 }
 if (($_lcssa54 | 0) != 0) {
  if (($_lcssa54 | 0) != ($_lcssa | 0)) {
   HEAP32[$__end__i28 >> 2] = $_lcssa + ((($_lcssa - 4 + (-$sub_ptr_rhs_cast_i31_lcssa | 0) | 0) >>> 2 ^ -1) << 2);
  }
  __ZdlPv($_lcssa54);
 }
 $46 = HEAP32[$orderOptimizer + 28 >> 2] | 0;
 $47 = $46;
 if (($46 | 0) != 0) {
  $__end__i_i_i_i_i_i3_i = $orderOptimizer + 32 | 0;
  $48 = HEAP32[$__end__i_i_i_i_i_i3_i >> 2] | 0;
  if (($46 | 0) != ($48 | 0)) {
   HEAP32[$__end__i_i_i_i_i_i3_i >> 2] = $48 + ((($48 - 4 + (-$47 | 0) | 0) >>> 2 ^ -1) << 2);
  }
  __ZdlPv($46);
 }
 $53 = HEAP32[$orderOptimizer + 16 >> 2] | 0;
 if (($53 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 $__end__i_i_i_i_i_i16_i = $orderOptimizer + 20 | 0;
 $55 = HEAP32[$__end__i_i_i_i_i_i16_i >> 2] | 0;
 if (($53 | 0) != ($55 | 0)) {
  HEAP32[$__end__i_i_i_i_i_i16_i >> 2] = $55 + ((($55 - 4 + (-$53 | 0) | 0) >>> 2 ^ -1) << 2);
 }
 __ZdlPv($53);
 STACKTOP = __stackBase__;
 return;
}
function __ZN12GCodePlanner10writeGCodeEb($this, $liftHeadIfNeeded) {
 $this = $this | 0;
 $liftHeadIfNeeded = $liftHeadIfNeeded | 0;
 var $agg_tmp = 0, $agg_tmp123 = 0, $agg_tmp142 = 0, $agg_tmp179 = 0, $agg_tmp186 = 0, $gcode = 0, $__end__i = 0, $__begin__i = 0, $1 = 0, $moveConfig = 0, $speedFactor = 0, $4 = 0, $newPoint_sroa_0_0__idx = 0, $newPoint_sroa_1_8__idx178 = 0, $5 = 0, $6 = 0, $lastConfig_0233 = 0, $extruder_0232 = 0, $n_0231 = 0, $7 = 0, $ref9 = 0, $extruderNr_i66 = 0, $f_i67 = 0, $9 = 0, $retractionSpeed_i = 0, $mul_i68 = 0, $sub_i = 0.0, $14 = 0, $15 = 0, $ref12 = 0, $18 = 0.0, $isRetracted_i71 = 0, $21 = 0, $retractionSpeed_i73 = 0, $mul_i74 = 0, $sub_i76 = 0.0, $extruder_1 = 0, $config = 0, $25 = 0, $27 = 0, $28 = 0, $lastConfig_1 = 0, $div = 0, $__end__i202 = 0, $31 = 0, $__begin__i203 = 0, $32 = 0, $ref34 = 0, $33 = 0, $conv_i80$0 = 0, $conv_i80$1 = 0, $34 = 0, $conv3_i$0 = 0, $conv3_i$1 = 0, $_idx55 = 0, $_idx55_val$0 = 0, $_idx55_val$1 = 0, $_idx56 = 0, $_idx56_val$0 = 0, $_idx56_val$1 = 0, $sub_i81$0 = 0, $sub_i81$1 = 0, $sub3_i$0 = 0, $sub3_i$1 = 0, $mul38 = 0, $conv_i84$0 = 0, $conv_i84$1 = 0, $sub_i86 = 0, $conv2_i$0 = 0, $conv2_i$1 = 0, $mul_i_i$0 = 0, $mul_i_i$1 = 0, $mul3_i_i$0 = 0, $add_i_i$0 = 0, $add_i_i$1 = 0, $conv1310_i$0 = 0, $conv1310_i$1 = 0, $i_0204 = 0, $37 = 0, $sub_ptr_div_i225208 = 0, $p0_sroa_1_8_copyload190194212$0 = 0, $p0_sroa_1_8_copyload190194212$1 = 0, $p0_sroa_0_0_copyload184192211$0 = 0, $p0_sroa_0_0_copyload184192211$1 = 0, $i_0213 = 0, $i_0_in210 = 0, $39 = 0, $_idx52 = 0, $_idx52_val$0 = 0, $_idx52_val$1 = 0, $_idx53 = 0, $_idx53_val$0 = 0, $_idx53_val$1 = 0, $sub_i99$0 = 0, $sub_i99$1 = 0, $sub3_i100$0 = 0, $sub3_i100$1 = 0, $mul_i_i134$0 = 0, $mul_i_i134$1 = 0, $mul3_i_i135$0 = 0, $add_i_i136$0 = 0, $add_i_i136$1 = 0, $i_0 = 0, $i_0199 = 0, $i_0_in197 = 0, $i_0_in_i_0 = 0, $sub79 = 0, $41 = 0, $42 = 0, $ref101 = 0, $43 = 0, $x_0218 = 0, $p0_sroa_0_0_copyload184191217$0 = 0, $p0_sroa_0_0_copyload184191217$1 = 0, $p0_sroa_1_8_copyload190193216$0 = 0, $p0_sroa_1_8_copyload190193216$1 = 0, $44 = 0, $_idx = 0, $_idx_val$0 = 0, $_idx_val$1 = 0, $_idx49 = 0, $_idx49_val$0 = 0, $_idx49_val$1 = 0, $sub_i149$0 = 0, $sub_i149$1 = 0, $sub3_i150$0 = 0, $sub3_i150$1 = 0, $add94 = 0, $45 = 0, $_idx64 = 0, $_idx64_val$0 = 0, $_idx64_val$1 = 0, $_idx65 = 0, $_idx65_val$0 = 0, $_idx65_val$1 = 0, $add_i$0 = 0, $add_i$1 = 0, $add3_i$0 = 0, $add3_i$1 = 0, $div_i$0 = 0, $div_i$1 = 0, $div2_i$0 = 0, $div2_i$1 = 0, $sub_i174$0 = 0, $sub_i174$1 = 0, $sub3_i175$0 = 0, $sub3_i175$1 = 0, $mul_i_i162$0 = 0, $mul_i_i162$1 = 0, $mul3_i_i163$0 = 0, $add_i_i164$0 = 0, $conv2_i167 = 0, $mul3_i_i154$0 = 0, $mul3_i_i154$1 = 0, $mul_i_i153$0 = 0, $add_i_i155$0 = 0, $conv2_i157 = 0, $47 = 0, $mul111$0 = 0, $div112$0 = 0, $_pre243 = 0, $_pre244 = 0, $p0_sroa_0_0__idx_phi_trans_insert = 0, $p0_sroa_1_8__idx186_phi_trans_insert = 0, $p0_sroa_1_8_copyload$0 = 0, $p0_sroa_1_8_copyload$1 = 0, $p0_sroa_0_0_copyload$0 = 0, $p0_sroa_0_0_copyload$1 = 0, $48 = 0, $add120 = 0, $ref101_pre = 0, $49 = 0, $50 = 0, $ref122 = 0, $52 = 0, $54 = 0, $55 = 0, $i134_0225 = 0, $ref141 = 0, $56 = 0, $inc148 = 0, $59 = 0, $n_1 = 0, $inc151 = 0, $61 = 0, $totalPrintTime155 = 0, $extraTime = 0, $64 = 0.0, $totalPrintTime164 = 0, $ref170 = 0, $67 = 0.0, $isRetracted_i111 = 0, $70 = 0, $retractionSpeed_i115 = 0, $mul_i116 = 0, $sub_i118 = 0.0, $ref172 = 0, $ref178 = 0, $75 = 0, $76 = 0, $X_i_i_i107 = 0, $Y_i_i_i108 = 0, $speed183 = 0, $ref185 = 0, $78 = 0, $79 = 0, $sub_i89$0 = 0, $X_i_i_i91 = 0, $Y_i_i_i92 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $agg_tmp = __stackBase__ | 0;
 $agg_tmp123 = __stackBase__ + 16 | 0;
 $agg_tmp142 = __stackBase__ + 32 | 0;
 $agg_tmp179 = __stackBase__ + 48 | 0;
 $agg_tmp186 = __stackBase__ + 64 | 0;
 $gcode = $this | 0;
 $__end__i = $this + 28 | 0;
 $__begin__i = $this + 24 | 0;
 $1 = HEAP32[$__begin__i >> 2] | 0;
 if ((HEAP32[$__end__i >> 2] | 0) != ($1 | 0)) {
  $moveConfig = $this + 40 | 0;
  $speedFactor = $this + 52 | 0;
  $4 = $agg_tmp123;
  $newPoint_sroa_0_0__idx = $agg_tmp | 0;
  $newPoint_sroa_1_8__idx178 = $agg_tmp + 8 | 0;
  $5 = $agg_tmp142;
  $n_0231 = 0;
  $extruder_0232 = HEAP32[(HEAP32[$gcode >> 2] | 0) + 328 >> 2] | 0;
  $lastConfig_0233 = 0;
  $6 = $1;
  while (1) {
   $7 = HEAP32[$6 + ($n_0231 * 24 & -1) + 8 >> 2] | 0;
   do {
    if (($extruder_0232 | 0) == ($7 | 0)) {
     if ((HEAP8[$6 + ($n_0231 * 24 & -1) + 4 | 0] & 1) == 0) {
      $extruder_1 = $extruder_0232;
      break;
     }
     $ref12 = HEAP32[$gcode >> 2] | 0;
     $18 = +HEAPF64[$ref12 + 24 >> 3];
     if ($18 <= 0.0) {
      $extruder_1 = $extruder_0232;
      break;
     }
     $isRetracted_i71 = $ref12 + 324 | 0;
     if ((HEAP8[$isRetracted_i71] & 1) != 0) {
      $extruder_1 = $extruder_0232;
      break;
     }
     $21 = HEAP32[$ref12 >> 2] | 0;
     $retractionSpeed_i73 = $ref12 + 316 | 0;
     $mul_i74 = (HEAP32[$retractionSpeed_i73 >> 2] | 0) * 60 & -1;
     $sub_i76 = +HEAPF64[$ref12 + 8 >> 3] - $18;
     _fprintf($21 | 0, 3408, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $mul_i74, HEAPF64[tempInt + 8 >> 3] = $sub_i76, tempInt) | 0) | 0;
     HEAP32[$ref12 + 312 >> 2] = HEAP32[$retractionSpeed_i73 >> 2];
     HEAP8[$isRetracted_i71] = 1;
     $extruder_1 = $extruder_0232;
    } else {
     $ref9 = HEAP32[$gcode >> 2] | 0;
     $extruderNr_i66 = $ref9 + 328 | 0;
     if ((HEAP32[$extruderNr_i66 >> 2] | 0) == ($7 | 0)) {
      $extruder_1 = $7;
      break;
     }
     HEAP32[$extruderNr_i66 >> 2] = $7;
     $f_i67 = $ref9 | 0;
     $9 = HEAP32[$f_i67 >> 2] | 0;
     $retractionSpeed_i = $ref9 + 316 | 0;
     $mul_i68 = (HEAP32[$retractionSpeed_i >> 2] | 0) * 60 & -1;
     $sub_i = +HEAPF64[$ref9 + 8 >> 3] - +HEAPF64[$ref9 + 32 >> 3];
     _fprintf($9 | 0, 3440, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $mul_i68, HEAPF64[tempInt + 8 >> 3] = $sub_i, tempInt) | 0) | 0;
     HEAP32[$ref9 + 312 >> 2] = HEAP32[$retractionSpeed_i >> 2];
     HEAP8[$ref9 + 324 | 0] = 1;
     $14 = HEAP32[$f_i67 >> 2] | 0;
     $15 = HEAP32[$extruderNr_i66 >> 2] | 0;
     _fprintf($14 | 0, 3432, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $15, tempInt) | 0) | 0;
     $extruder_1 = $7;
    }
   } while (0);
   $config = $6 + ($n_0231 * 24 & -1) | 0;
   $25 = HEAP32[$config >> 2] | 0;
   if (($25 | 0) == ($moveConfig | 0) | ($lastConfig_0233 | 0) == ($25 | 0)) {
    $lastConfig_1 = $lastConfig_0233;
    $28 = $25;
   } else {
    __ZN11GCodeExport10addCommentEPKcz(HEAP32[$gcode >> 2] | 0, 3520, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$25 + 8 >> 2], tempInt) | 0);
    $27 = HEAP32[$config >> 2] | 0;
    $lastConfig_1 = $27;
    $28 = $27;
   }
   $div = (Math_imul(HEAP32[$speedFactor >> 2] | 0, HEAP32[$28 >> 2] | 0) | 0) / 100 & -1;
   $__end__i202 = $6 + ($n_0231 * 24 & -1) + 16 | 0;
   $31 = HEAP32[$__end__i202 >> 2] | 0;
   $__begin__i203 = $6 + ($n_0231 * 24 & -1) + 12 | 0;
   $32 = HEAP32[$__begin__i203 >> 2] | 0;
   do {
    if (($31 - $32 | 0) != 16 | ($28 | 0) == ($moveConfig | 0)) {
     label = 1837;
    } else {
     $ref34 = HEAP32[$gcode >> 2] | 0;
     $33 = HEAP32[$ref34 + 40 >> 2] | 0;
     $conv_i80$0 = $33;
     $conv_i80$1 = ($33 | 0) < 0 ? -1 : 0;
     $34 = HEAP32[$ref34 + 44 >> 2] | 0;
     $conv3_i$0 = $34;
     $conv3_i$1 = ($34 | 0) < 0 ? -1 : 0;
     $_idx55 = $32 | 0;
     $_idx55_val$0 = HEAP32[$_idx55 >> 2] | 0;
     $_idx55_val$1 = HEAP32[$_idx55 + 4 >> 2] | 0;
     $_idx56 = $32 + 8 | 0;
     $_idx56_val$0 = HEAP32[$_idx56 >> 2] | 0;
     $_idx56_val$1 = HEAP32[$_idx56 + 4 >> 2] | 0;
     $sub_i81$0 = _i64Subtract($conv_i80$0, $conv_i80$1, $_idx55_val$0, $_idx55_val$1) | 0;
     $sub_i81$1 = tempRet0;
     $sub3_i$0 = _i64Subtract($conv3_i$0, $conv3_i$1, $_idx56_val$0, $_idx56_val$1) | 0;
     $sub3_i$1 = tempRet0;
     $mul38 = HEAP32[$28 + 4 >> 2] << 1;
     $conv_i84$0 = $mul38;
     $conv_i84$1 = ($mul38 | 0) < 0 ? -1 : 0;
     if (($conv_i84$1 | 0) < ($sub_i81$1 | 0) | ($conv_i84$1 | 0) == ($sub_i81$1 | 0) & $conv_i84$0 >>> 0 < $sub_i81$0 >>> 0) {
      label = 1837;
      break;
     }
     $sub_i86 = -$mul38 | 0;
     $conv2_i$0 = $sub_i86;
     $conv2_i$1 = ($sub_i86 | 0) < 0 ? -1 : 0;
     if (($conv2_i$1 | 0) > ($sub_i81$1 | 0) | ($conv2_i$1 | 0) == ($sub_i81$1 | 0) & $conv2_i$0 >>> 0 > $sub_i81$0 >>> 0) {
      label = 1837;
      break;
     }
     if (($conv_i84$1 | 0) < ($sub3_i$1 | 0) | ($conv_i84$1 | 0) == ($sub3_i$1 | 0) & $conv_i84$0 >>> 0 < $sub3_i$0 >>> 0 | (($conv2_i$1 | 0) > ($sub3_i$1 | 0) | ($conv2_i$1 | 0) == ($sub3_i$1 | 0) & $conv2_i$0 >>> 0 > $sub3_i$0 >>> 0)) {
      label = 1837;
      break;
     }
     $mul_i_i$0 = ___muldi3($sub_i81$0, $sub_i81$1, $sub_i81$0, $sub_i81$1) | 0;
     $mul_i_i$1 = tempRet0;
     $mul3_i_i$0 = ___muldi3($sub3_i$0, $sub3_i$1, $sub3_i$0, $sub3_i$1) | 0;
     $add_i_i$0 = _i64Add($mul3_i_i$0, tempRet0, $mul_i_i$0, $mul_i_i$1) | 0;
     $add_i_i$1 = tempRet0;
     $conv1310_i$0 = Math_imul($mul38, $mul38) | 0;
     $conv1310_i$1 = 0;
     if (($add_i_i$1 | 0) > ($conv1310_i$1 | 0) | ($add_i_i$1 | 0) == ($conv1310_i$1 | 0) & $add_i_i$0 >>> 0 > $conv1310_i$0 >>> 0) {
      label = 1837;
      break;
     }
     $i_0204 = $n_0231 + 1 | 0;
     $37 = HEAP32[$__begin__i >> 2] | 0;
     $sub_ptr_div_i225208 = ((HEAP32[$__end__i >> 2] | 0) - $37 | 0) / 24 & -1;
     L1831 : do {
      if ($i_0204 >>> 0 < $sub_ptr_div_i225208 >>> 0) {
       $i_0_in210 = $n_0231;
       $i_0213 = $i_0204;
       $p0_sroa_0_0_copyload184192211$1 = $_idx55_val$1;
       $p0_sroa_0_0_copyload184192211$0 = $_idx55_val$0;
       $p0_sroa_1_8_copyload190194212$1 = $_idx56_val$1;
       $p0_sroa_1_8_copyload190194212$0 = $_idx56_val$0;
       while (1) {
        $39 = HEAP32[$37 + ($i_0213 * 24 & -1) + 12 >> 2] | 0;
        if (((HEAP32[$37 + ($i_0213 * 24 & -1) + 16 >> 2] | 0) - $39 | 0) != 16) {
         $i_0_in197 = $i_0_in210;
         $i_0199 = $i_0213;
         break L1831;
        }
        $_idx52 = $39 | 0;
        $_idx52_val$0 = HEAP32[$_idx52 >> 2] | 0;
        $_idx52_val$1 = HEAP32[$_idx52 + 4 >> 2] | 0;
        $_idx53 = $39 + 8 | 0;
        $_idx53_val$0 = HEAP32[$_idx53 >> 2] | 0;
        $_idx53_val$1 = HEAP32[$_idx53 + 4 >> 2] | 0;
        $sub_i99$0 = _i64Subtract($p0_sroa_0_0_copyload184192211$0, $p0_sroa_0_0_copyload184192211$1, $_idx52_val$0, $_idx52_val$1) | 0;
        $sub_i99$1 = tempRet0;
        $sub3_i100$0 = _i64Subtract($p0_sroa_1_8_copyload190194212$0, $p0_sroa_1_8_copyload190194212$1, $_idx53_val$0, $_idx53_val$1) | 0;
        $sub3_i100$1 = tempRet0;
        if (($conv_i84$1 | 0) < ($sub_i99$1 | 0) | ($conv_i84$1 | 0) == ($sub_i99$1 | 0) & $conv_i84$0 >>> 0 < $sub_i99$0 >>> 0 | (($conv2_i$1 | 0) > ($sub_i99$1 | 0) | ($conv2_i$1 | 0) == ($sub_i99$1 | 0) & $conv2_i$0 >>> 0 > $sub_i99$0 >>> 0)) {
         $i_0_in197 = $i_0_in210;
         $i_0199 = $i_0213;
         break L1831;
        }
        if (($conv_i84$1 | 0) < ($sub3_i100$1 | 0) | ($conv_i84$1 | 0) == ($sub3_i100$1 | 0) & $conv_i84$0 >>> 0 < $sub3_i100$0 >>> 0 | (($conv2_i$1 | 0) > ($sub3_i100$1 | 0) | ($conv2_i$1 | 0) == ($sub3_i100$1 | 0) & $conv2_i$0 >>> 0 > $sub3_i100$0 >>> 0)) {
         $i_0_in197 = $i_0_in210;
         $i_0199 = $i_0213;
         break L1831;
        }
        $mul_i_i134$0 = ___muldi3($sub_i99$0, $sub_i99$1, $sub_i99$0, $sub_i99$1) | 0;
        $mul_i_i134$1 = tempRet0;
        $mul3_i_i135$0 = ___muldi3($sub3_i100$0, $sub3_i100$1, $sub3_i100$0, $sub3_i100$1) | 0;
        $add_i_i136$0 = _i64Add($mul3_i_i135$0, tempRet0, $mul_i_i134$0, $mul_i_i134$1) | 0;
        $add_i_i136$1 = tempRet0;
        if (($add_i_i136$1 | 0) > ($conv1310_i$1 | 0) | ($add_i_i136$1 | 0) == ($conv1310_i$1 | 0) & $add_i_i136$0 >>> 0 > $conv1310_i$0 >>> 0) {
         $i_0_in197 = $i_0_in210;
         $i_0199 = $i_0213;
         break L1831;
        }
        $i_0 = $i_0213 + 1 | 0;
        if ($i_0 >>> 0 < $sub_ptr_div_i225208 >>> 0) {
         $i_0_in210 = $i_0213;
         $i_0213 = $i_0;
         $p0_sroa_0_0_copyload184192211$1 = $_idx52_val$1;
         $p0_sroa_0_0_copyload184192211$0 = $_idx52_val$0;
         $p0_sroa_1_8_copyload190194212$1 = $_idx53_val$1;
         $p0_sroa_1_8_copyload190194212$0 = $_idx53_val$0;
        } else {
         $i_0_in197 = $i_0213;
         $i_0199 = $i_0;
         break;
        }
       }
      } else {
       $i_0_in197 = $n_0231;
       $i_0199 = $i_0204;
      }
     } while (0);
     $i_0_in_i_0 = (HEAP32[$37 + ($i_0_in197 * 24 & -1) >> 2] | 0) == ($moveConfig | 0) ? $i_0_in197 : $i_0199;
     if ($i_0_in_i_0 >>> 0 <= ($n_0231 + 2 | 0) >>> 0) {
      label = 1837;
      break;
     }
     $sub79 = $i_0_in_i_0 - 1 | 0;
     if ($n_0231 >>> 0 < $sub79 >>> 0) {
      $p0_sroa_1_8_copyload190193216$1 = $conv3_i$1;
      $p0_sroa_1_8_copyload190193216$0 = $conv3_i$0;
      $p0_sroa_0_0_copyload184191217$1 = $conv_i80$1;
      $p0_sroa_0_0_copyload184191217$0 = $conv_i80$0;
      $x_0218 = $n_0231;
      $43 = $37;
      $ref101 = $ref34;
      $42 = $33;
      $41 = $34;
      while (1) {
       $44 = HEAP32[$43 + ($x_0218 * 24 & -1) + 12 >> 2] | 0;
       $_idx = $44 | 0;
       $_idx_val$0 = HEAP32[$_idx >> 2] | 0;
       $_idx_val$1 = HEAP32[$_idx + 4 >> 2] | 0;
       $_idx49 = $44 + 8 | 0;
       $_idx49_val$0 = HEAP32[$_idx49 >> 2] | 0;
       $_idx49_val$1 = HEAP32[$_idx49 + 4 >> 2] | 0;
       $sub_i149$0 = _i64Subtract($p0_sroa_0_0_copyload184191217$0, $p0_sroa_0_0_copyload184191217$1, $_idx_val$0, $_idx_val$1) | 0;
       $sub_i149$1 = tempRet0;
       $sub3_i150$0 = _i64Subtract($p0_sroa_1_8_copyload190193216$0, $p0_sroa_1_8_copyload190193216$1, $_idx49_val$0, $_idx49_val$1) | 0;
       $sub3_i150$1 = tempRet0;
       $add94 = $x_0218 + 1 | 0;
       $45 = HEAP32[$43 + ($add94 * 24 & -1) + 12 >> 2] | 0;
       $_idx64 = $45 | 0;
       $_idx64_val$0 = HEAP32[$_idx64 >> 2] | 0;
       $_idx64_val$1 = HEAP32[$_idx64 + 4 >> 2] | 0;
       $_idx65 = $45 + 8 | 0;
       $_idx65_val$0 = HEAP32[$_idx65 >> 2] | 0;
       $_idx65_val$1 = HEAP32[$_idx65 + 4 >> 2] | 0;
       $add_i$0 = _i64Add($_idx64_val$0, $_idx64_val$1, $_idx_val$0, $_idx_val$1) | 0;
       $add_i$1 = tempRet0;
       $add3_i$0 = _i64Add($_idx65_val$0, $_idx65_val$1, $_idx49_val$0, $_idx49_val$1) | 0;
       $add3_i$1 = tempRet0;
       $div_i$0 = ___divdi3($add_i$0, $add_i$1, 2, 0) | 0;
       $div_i$1 = tempRet0;
       $div2_i$0 = ___divdi3($add3_i$0, $add3_i$1, 2, 0) | 0;
       $div2_i$1 = tempRet0;
       $sub_i174$0 = _i64Subtract($42, ($42 | 0) < 0 ? -1 : 0, $div_i$0, $div_i$1) | 0;
       $sub_i174$1 = tempRet0;
       $sub3_i175$0 = _i64Subtract($41, ($41 | 0) < 0 ? -1 : 0, $div2_i$0, $div2_i$1) | 0;
       $sub3_i175$1 = tempRet0;
       $mul_i_i162$0 = ___muldi3($sub_i174$0, $sub_i174$1, $sub_i174$0, $sub_i174$1) | 0;
       $mul_i_i162$1 = tempRet0;
       $mul3_i_i163$0 = ___muldi3($sub3_i175$0, $sub3_i175$1, $sub3_i175$0, $sub3_i175$1) | 0;
       $add_i_i164$0 = _i64Add($mul3_i_i163$0, tempRet0, $mul_i_i162$0, $mul_i_i162$1) | 0;
       $conv2_i167 = ~~+Math_sqrt(+(+($add_i_i164$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0));
       if (($conv2_i167 | 0) > 0) {
        $mul3_i_i154$0 = ___muldi3($sub3_i150$0, $sub3_i150$1, $sub3_i150$0, $sub3_i150$1) | 0;
        $mul3_i_i154$1 = tempRet0;
        $mul_i_i153$0 = ___muldi3($sub_i149$0, $sub_i149$1, $sub_i149$0, $sub_i149$1) | 0;
        $add_i_i155$0 = _i64Add($mul3_i_i154$0, $mul3_i_i154$1, $mul_i_i153$0, tempRet0) | 0;
        $conv2_i157 = ~~+Math_sqrt(+(+($add_i_i155$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0));
        HEAP32[$newPoint_sroa_0_0__idx >> 2] = $div_i$0;
        HEAP32[$newPoint_sroa_0_0__idx + 4 >> 2] = $div_i$1;
        HEAP32[$newPoint_sroa_1_8__idx178 >> 2] = $div2_i$0;
        HEAP32[$newPoint_sroa_1_8__idx178 + 4 >> 2] = $div2_i$1;
        $47 = HEAP32[(HEAP32[$config >> 2] | 0) + 4 >> 2] | 0;
        $mul111$0 = ___muldi3($47, ($47 | 0) < 0 ? -1 : 0, $conv2_i157, ($conv2_i157 | 0) < 0 ? -1 : 0) | 0;
        $div112$0 = ___divdi3($mul111$0, tempRet0, $conv2_i167, ($conv2_i167 | 0) < 0 ? -1 : 0) | 0;
        __ZN11GCodeExport7addMoveEN10ClipperLib8IntPointEii($ref101, $agg_tmp, $div, $div112$0);
        $_pre243 = HEAP32[$__begin__i >> 2] | 0;
        $_pre244 = HEAP32[$_pre243 + ($add94 * 24 & -1) + 12 >> 2] | 0;
        $p0_sroa_0_0__idx_phi_trans_insert = $_pre244 | 0;
        $p0_sroa_1_8__idx186_phi_trans_insert = $_pre244 + 8 | 0;
        $48 = $_pre243;
        $p0_sroa_0_0_copyload$1 = HEAP32[$p0_sroa_0_0__idx_phi_trans_insert + 4 >> 2] | 0;
        $p0_sroa_0_0_copyload$0 = HEAP32[$p0_sroa_0_0__idx_phi_trans_insert >> 2] | 0;
        $p0_sroa_1_8_copyload$1 = HEAP32[$p0_sroa_1_8__idx186_phi_trans_insert + 4 >> 2] | 0;
        $p0_sroa_1_8_copyload$0 = HEAP32[$p0_sroa_1_8__idx186_phi_trans_insert >> 2] | 0;
       } else {
        $48 = $43;
        $p0_sroa_0_0_copyload$1 = $_idx64_val$1;
        $p0_sroa_0_0_copyload$0 = $_idx64_val$0;
        $p0_sroa_1_8_copyload$1 = $_idx65_val$1;
        $p0_sroa_1_8_copyload$0 = $_idx65_val$0;
       }
       $add120 = $x_0218 + 2 | 0;
       $ref101_pre = HEAP32[$gcode >> 2] | 0;
       if ($add120 >>> 0 >= $sub79 >>> 0) {
        break;
       }
       $p0_sroa_1_8_copyload190193216$1 = $p0_sroa_1_8_copyload$1;
       $p0_sroa_1_8_copyload190193216$0 = $p0_sroa_1_8_copyload$0;
       $p0_sroa_0_0_copyload184191217$1 = $p0_sroa_0_0_copyload$1;
       $p0_sroa_0_0_copyload184191217$0 = $p0_sroa_0_0_copyload$0;
       $x_0218 = $add120;
       $43 = $48;
       $ref101 = $ref101_pre;
       $42 = HEAP32[$ref101_pre + 40 >> 2] | 0;
       $41 = HEAP32[$ref101_pre + 44 >> 2] | 0;
      }
      $ref122 = $ref101_pre;
      $50 = $48;
      $49 = HEAP32[$config >> 2] | 0;
     } else {
      $ref122 = $ref34;
      $50 = $37;
      $49 = $28;
     }
     $52 = HEAP32[$50 + ($sub79 * 24 & -1) + 12 >> 2] | 0;
     HEAP32[$4 >> 2] = HEAP32[$52 >> 2];
     HEAP32[$4 + 4 >> 2] = HEAP32[$52 + 4 >> 2];
     HEAP32[$4 + 8 >> 2] = HEAP32[$52 + 8 >> 2];
     HEAP32[$4 + 12 >> 2] = HEAP32[$52 + 12 >> 2];
     __ZN11GCodeExport7addMoveEN10ClipperLib8IntPointEii($ref122, $agg_tmp123, $div, HEAP32[$49 + 4 >> 2] | 0);
     $n_1 = $sub79;
    }
   } while (0);
   L1849 : do {
    if ((label | 0) == 1837) {
     label = 0;
     if (($31 | 0) == ($32 | 0)) {
      $n_1 = $n_0231;
      break;
     } else {
      $i134_0225 = 0;
      $55 = $32;
      $54 = $28;
     }
     while (1) {
      $ref141 = HEAP32[$gcode >> 2] | 0;
      $56 = $55 + ($i134_0225 << 4) | 0;
      HEAP32[$5 >> 2] = HEAP32[$56 >> 2];
      HEAP32[$5 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
      HEAP32[$5 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
      HEAP32[$5 + 12 >> 2] = HEAP32[$56 + 12 >> 2];
      __ZN11GCodeExport7addMoveEN10ClipperLib8IntPointEii($ref141, $agg_tmp142, $div, HEAP32[$54 + 4 >> 2] | 0);
      $inc148 = $i134_0225 + 1 | 0;
      $59 = HEAP32[$__begin__i203 >> 2] | 0;
      if ($inc148 >>> 0 >= (HEAP32[$__end__i202 >> 2] | 0) - $59 >> 4 >>> 0) {
       $n_1 = $n_0231;
       break L1849;
      }
      $i134_0225 = $inc148;
      $55 = $59;
      $54 = HEAP32[$config >> 2] | 0;
     }
    }
   } while (0);
   $inc151 = $n_1 + 1 | 0;
   $61 = HEAP32[$__begin__i >> 2] | 0;
   if ($inc151 >>> 0 < (((HEAP32[$__end__i >> 2] | 0) - $61 | 0) / 24 & -1) >>> 0) {
    $n_0231 = $inc151;
    $extruder_0232 = $extruder_1;
    $lastConfig_0233 = $lastConfig_1;
    $6 = $61;
   } else {
    break;
   }
  }
 }
 $totalPrintTime155 = (HEAP32[$gcode >> 2] | 0) + 344 | 0;
 HEAPF64[$totalPrintTime155 >> 3] = +HEAPF64[$this + 72 >> 3] + +HEAPF64[$totalPrintTime155 >> 3];
 if (!$liftHeadIfNeeded) {
  STACKTOP = __stackBase__;
  return;
 }
 $extraTime = $this + 64 | 0;
 $64 = +HEAPF64[$extraTime >> 3];
 if ($64 <= 0.0) {
  STACKTOP = __stackBase__;
  return;
 }
 $totalPrintTime164 = (HEAP32[$gcode >> 2] | 0) + 344 | 0;
 HEAPF64[$totalPrintTime164 >> 3] = $64 + +HEAPF64[$totalPrintTime164 >> 3];
 __ZN11GCodeExport10addCommentEPKcz(HEAP32[$gcode >> 2] | 0, 3472, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = +HEAPF64[$extraTime >> 3], tempInt) | 0);
 $ref170 = HEAP32[$gcode >> 2] | 0;
 $67 = +HEAPF64[$ref170 + 24 >> 3];
 do {
  if ($67 > 0.0) {
   $isRetracted_i111 = $ref170 + 324 | 0;
   if ((HEAP8[$isRetracted_i111] & 1) != 0) {
    $ref172 = $ref170;
    break;
   }
   $70 = HEAP32[$ref170 >> 2] | 0;
   $retractionSpeed_i115 = $ref170 + 316 | 0;
   $mul_i116 = (HEAP32[$retractionSpeed_i115 >> 2] | 0) * 60 & -1;
   $sub_i118 = +HEAPF64[$ref170 + 8 >> 3] - $67;
   _fprintf($70 | 0, 3408, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $mul_i116, HEAPF64[tempInt + 8 >> 3] = $sub_i118, tempInt) | 0) | 0;
   HEAP32[$ref170 + 312 >> 2] = HEAP32[$retractionSpeed_i115 >> 2];
   HEAP8[$isRetracted_i111] = 1;
   $ref172 = HEAP32[$gcode >> 2] | 0;
  } else {
   $ref172 = $ref170;
  }
 } while (0);
 HEAP32[$ref172 + 320 >> 2] = (HEAP32[$ref172 + 48 >> 2] | 0) + 3e3;
 $ref178 = HEAP32[$gcode >> 2] | 0;
 $75 = HEAP32[$ref178 + 40 >> 2] | 0;
 $76 = HEAP32[$ref178 + 44 >> 2] | 0;
 $X_i_i_i107 = $agg_tmp179 | 0;
 HEAP32[$X_i_i_i107 >> 2] = $75;
 HEAP32[$X_i_i_i107 + 4 >> 2] = ($75 | 0) < 0 ? -1 : 0;
 $Y_i_i_i108 = $agg_tmp179 + 8 | 0;
 HEAP32[$Y_i_i_i108 >> 2] = $76;
 HEAP32[$Y_i_i_i108 + 4 >> 2] = ($76 | 0) < 0 ? -1 : 0;
 $speed183 = $this + 40 | 0;
 __ZN11GCodeExport7addMoveEN10ClipperLib8IntPointEii($ref178, $agg_tmp179, HEAP32[$speed183 >> 2] | 0, 0);
 $ref185 = HEAP32[$gcode >> 2] | 0;
 $78 = HEAP32[$ref185 + 40 >> 2] | 0;
 $79 = HEAP32[$ref185 + 44 >> 2] | 0;
 $sub_i89$0 = _i64Add($78, ($78 | 0) < 0 ? -1 : 0, 2e4, 0) | 0;
 $X_i_i_i91 = $agg_tmp186 | 0;
 HEAP32[$X_i_i_i91 >> 2] = $sub_i89$0;
 HEAP32[$X_i_i_i91 + 4 >> 2] = tempRet0;
 $Y_i_i_i92 = $agg_tmp186 + 8 | 0;
 HEAP32[$Y_i_i_i92 >> 2] = $79;
 HEAP32[$Y_i_i_i92 + 4 >> 2] = ($79 | 0) < 0 ? -1 : 0;
 __ZN11GCodeExport7addMoveEN10ClipperLib8IntPointEii($ref185, $agg_tmp186, HEAP32[$speed183 >> 2] | 0, 0);
 _fprintf(HEAP32[HEAP32[$gcode >> 2] >> 2] | 0, 3456, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = ~~(+HEAPF64[$extraTime >> 3] * 1.0e3), tempInt) | 0) | 0;
 STACKTOP = __stackBase__;
 return;
}
function __ZN12GCodePlannerD1Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0, $5 = 0, $7 = 0, $__begin__i_i_i = 0, $10 = 0, $__end__i_i_i_i_i_i = 0, $11 = 0, $12 = 0, $incdec_ptr_i_i_i_i_i_i = 0, $13 = 0, $14 = 0, $15 = 0, $__end__i_i_i_i_i_i_i_i_i_i_i = 0, $16 = 0, $21 = 0;
 $0 = HEAP32[$this + 36 >> 2] | 0;
 if (($0 | 0) != 0) {
  $1 = HEAP32[$0 + 4 >> 2] | 0;
  if (($1 | 0) != 0) {
   __ZdaPv($1);
  }
  $3 = HEAP32[$0 + 8 >> 2] | 0;
  if (($3 | 0) != 0) {
   __ZdaPv($3);
  }
  $5 = HEAP32[$0 + 12 >> 2] | 0;
  if (($5 | 0) != 0) {
   __ZdaPv($5);
  }
  $7 = HEAP32[$0 + 16 >> 2] | 0;
  if (($7 | 0) != 0) {
   __ZdaPv($7);
  }
  __ZdlPv($0);
 }
 $__begin__i_i_i = $this + 24 | 0;
 $10 = HEAP32[$__begin__i_i_i >> 2] | 0;
 if (($10 | 0) == 0) {
  return;
 }
 $__end__i_i_i_i_i_i = $this + 28 | 0;
 $11 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
 if (($10 | 0) == ($11 | 0)) {
  $21 = $10;
 } else {
  $12 = $11;
  while (1) {
   $incdec_ptr_i_i_i_i_i_i = $12 - 24 | 0;
   HEAP32[$__end__i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i;
   $13 = HEAP32[$12 - 24 + 12 >> 2] | 0;
   $14 = $13;
   if (($13 | 0) == 0) {
    $15 = $incdec_ptr_i_i_i_i_i_i;
   } else {
    $__end__i_i_i_i_i_i_i_i_i_i_i = $12 - 24 + 16 | 0;
    $16 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i >> 2] | 0;
    if (($13 | 0) != ($16 | 0)) {
     HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i >> 2] = $16 + ((($16 - 16 + (-$14 | 0) | 0) >>> 4 ^ -1) << 4);
    }
    __ZdlPv($13);
    $15 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
   }
   if (($10 | 0) == ($15 | 0)) {
    break;
   } else {
    $12 = $15;
   }
  }
  $21 = HEAP32[$__begin__i_i_i >> 2] | 0;
 }
 __ZdlPv($21);
 return;
}
function __ZN12GCodePlanner15setCombBoundaryEPNSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEE($this, $polygons) {
 $this = $this | 0;
 $polygons = $polygons | 0;
 var $comb = 0, $0 = 0, $1 = 0, $3 = 0, $5 = 0, $7 = 0, $call = 0, $11 = 0, $16$0 = 0, $ref4_i_i = 0, $24$0 = 0, $ref8_i_i = 0, $32$0 = 0, $ref12_i_i = 0, $40$0 = 0, $storemerge = 0;
 $comb = $this + 36 | 0;
 $0 = HEAP32[$comb >> 2] | 0;
 if (($0 | 0) != 0) {
  $1 = HEAP32[$0 + 4 >> 2] | 0;
  if (($1 | 0) != 0) {
   __ZdaPv($1);
  }
  $3 = HEAP32[$0 + 8 >> 2] | 0;
  if (($3 | 0) != 0) {
   __ZdaPv($3);
  }
  $5 = HEAP32[$0 + 12 >> 2] | 0;
  if (($5 | 0) != 0) {
   __ZdaPv($5);
  }
  $7 = HEAP32[$0 + 16 >> 2] | 0;
  if (($7 | 0) != 0) {
   __ZdaPv($7);
  }
  __ZdlPv($0);
 }
 if (($polygons | 0) == 0) {
  $storemerge = 0;
  HEAP32[$comb >> 2] = $storemerge;
  return;
 }
 $call = __Znwj(88) | 0;
 $11 = $call;
 HEAP32[$11 >> 2] = $polygons;
 HEAPF64[$call + 24 >> 3] = 1.0;
 _memset($call + 32 | 0, 0, 16);
 HEAPF64[$call + 48 >> 3] = 1.0;
 _memset($call + 56 | 0, 0, 32);
 $16$0 = _llvm_umul_with_overflow_i32(((HEAP32[$polygons + 4 >> 2] | 0) - (HEAP32[$polygons >> 2] | 0) | 0) / 12 & -1 | 0, 8) | 0;
 HEAP32[$call + 4 >> 2] = __Znaj(tempRet0 ? -1 : $16$0) | 0;
 $ref4_i_i = HEAP32[$11 >> 2] | 0;
 $24$0 = _llvm_umul_with_overflow_i32(((HEAP32[$ref4_i_i + 4 >> 2] | 0) - (HEAP32[$ref4_i_i >> 2] | 0) | 0) / 12 & -1 | 0, 8) | 0;
 HEAP32[$call + 8 >> 2] = __Znaj(tempRet0 ? -1 : $24$0) | 0;
 $ref8_i_i = HEAP32[$11 >> 2] | 0;
 $32$0 = _llvm_umul_with_overflow_i32(((HEAP32[$ref8_i_i + 4 >> 2] | 0) - (HEAP32[$ref8_i_i >> 2] | 0) | 0) / 12 & -1 | 0, 4) | 0;
 HEAP32[$call + 12 >> 2] = __Znaj(tempRet0 ? -1 : $32$0) | 0;
 $ref12_i_i = HEAP32[$11 >> 2] | 0;
 $40$0 = _llvm_umul_with_overflow_i32(((HEAP32[$ref12_i_i + 4 >> 2] | 0) - (HEAP32[$ref12_i_i >> 2] | 0) | 0) / 12 & -1 | 0, 4) | 0;
 HEAP32[$call + 16 >> 2] = __Znaj(tempRet0 ? -1 : $40$0) | 0;
 $storemerge = $call;
 HEAP32[$comb >> 2] = $storemerge;
 return;
}
function __ZN13PathOptimizer8optimizeEv($this) {
 $this = $this | 0;
 var $picked = 0, $best = 0, $best24 = 0, $__begin__i_i = 0, $__size__i_i = 0, $__first__i_i_i_i_i = 0, $__end__i = 0, $0 = 0, $__begin__i = 0, $1 = 0, $__end__i388 = 0, $__first__i_i_i_i393 = 0, $polyStart = 0, $X1_i = 0, $Y2_i = 0, $2 = 0, $3 = 0, $4 = 0, $i_0201 = 0, $5 = 0, $6 = 0, $7 = 0, $8$0 = 0, $8$1 = 0, $9$0 = 0, $9$1 = 0, $sub_ptr_div_i291 = 0, $10 = 0, $bestDist_0187 = 0.0, $j_0186 = 0, $X_i = 0, $sub_i$0 = 0, $conv_i = 0.0, $Y_i = 0, $sub3_i$0 = 0, $conv4_i = 0.0, $add_i = 0.0, $15 = 0, $bestDist_1 = 0.0, $inc = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $mul_i_i = 0, $and_i_i_i = 0, $retval_i_0_i = 0, $21 = 0, $22 = 0, $inc_i = 0, $add_ptr_i_i_i = 0, $inc16 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $p0_sroa_0_0__idx111_pre_phi216 = 0, $p0_sroa_1_8__idx125_pre_phi214 = 0, $__begin__i330 = 0, $__end__i280 = 0, $__first__i_i_i_i = 0, $polyOrder = 0, $28 = 0, $p0_sroa_0_0__idx111_pre_phi215 = 0, $p0_sroa_1_8__idx125_pre_phi213 = 0, $__end__i269_pre_phi = 0, $29 = 0, $__begin__i270 = 0, $31 = 0, $__begin__i232 = 0, $32 = 0, $33 = 0, $n_0180 = 0, $p0_sroa_0_0_copyload112128178$0 = 0, $p0_sroa_0_0_copyload112128178$1 = 0, $p0_sroa_1_8_copyload126133176$0 = 0, $p0_sroa_1_8_copyload126133176$1 = 0, $34 = 0, $35 = 0, $i26_0166 = 0, $bestDist25_0165 = 0.0, $37 = 0, $39 = 0, $sub_ptr_div_i470 = 0, $X_i56 = 0, $sub_i58$0 = 0, $conv_i59 = 0.0, $Y_i60 = 0, $sub3_i62$0 = 0, $conv4_i63 = 0.0, $add_i66 = 0.0, $_pre206 = 0, $43 = 0, $44 = 0, $45 = 0, $bestDist25_1 = 0.0, $X_i67 = 0, $sub_i69$0 = 0, $conv_i70 = 0.0, $Y_i71 = 0, $sub3_i73$0 = 0, $conv4_i74 = 0.0, $add_i77 = 0.0, $50 = 0, $X_i89 = 0, $sub_i91$0 = 0, $conv_i92 = 0.0, $Y_i93 = 0, $sub3_i95$0 = 0, $conv4_i96 = 0.0, $add_i99 = 0.0, $53 = 0, $54 = 0, $bestDist25_2 = 0.0, $inc92 = 0, $56 = 0, $58 = 0, $60 = 0, $_pn = 0, $p0_sroa_0_0_copyload112129_in = 0, $p0_sroa_1_8_copyload126134_in = 0, $p0_sroa_0_0_copyload112129$0 = 0, $p0_sroa_0_0_copyload112129$1 = 0, $p0_sroa_1_8_copyload126134$0 = 0, $p0_sroa_1_8_copyload126134$1 = 0, $add_ptr_i_i = 0, $62 = 0, $65 = 0, $p0_sroa_1_8_copyload126132$0 = 0, $p0_sroa_1_8_copyload126132$1 = 0, $p0_sroa_0_0_copyload112127$0 = 0, $p0_sroa_0_0_copyload112127$1 = 0, $inc126 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $p0_sroa_1_8_copyload126135159_in = 0, $p0_sroa_0_0_copyload112130158_in = 0, $n130_0157 = 0, $p0_sroa_0_0_copyload112130158$0 = 0, $p0_sroa_0_0_copyload112130158$1 = 0, $p0_sroa_1_8_copyload126135159$0 = 0, $p0_sroa_1_8_copyload126135159$1 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $sub_ptr_div_i256 = 0, $i145_0149 = 0, $bestDist143_0148 = 0.0, $best141_0147 = 0, $X_i78 = 0, $sub_i80$0 = 0, $conv_i81 = 0.0, $Y_i82 = 0, $sub3_i84$0 = 0, $conv4_i85 = 0.0, $add_i88 = 0.0, $cmp162 = 0, $best141_1 = 0, $inc166 = 0, $best141_0_lcssa = 0, $77 = 0, $78 = 0, $80 = 0, $rem181_pn = 0, $inc192 = 0, $82 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $picked = __stackBase__ | 0;
 $best = __stackBase__ + 16 | 0;
 $best24 = __stackBase__ + 24 | 0;
 $__begin__i_i = $picked | 0;
 HEAP32[$__begin__i_i >> 2] = 0;
 $__size__i_i = $picked + 4 | 0;
 HEAP32[$__size__i_i >> 2] = 0;
 $__first__i_i_i_i_i = $picked + 8 | 0;
 HEAP32[$__first__i_i_i_i_i >> 2] = 0;
 $__end__i = $this + 20 | 0;
 $0 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i = $this + 16 | 0;
 $1 = HEAP32[$__begin__i >> 2] | 0;
 do {
  if (($0 | 0) == ($1 | 0)) {
   $p0_sroa_1_8__idx125_pre_phi214 = $this + 8 | 0;
   $p0_sroa_0_0__idx111_pre_phi216 = $this | 0;
   $27 = 0;
   $26 = $0;
   label = 1936;
  } else {
   $__end__i388 = $this + 32 | 0;
   $__first__i_i_i_i393 = $this + 36 | 0;
   $polyStart = $this + 28 | 0;
   $X1_i = $this | 0;
   $Y2_i = $this + 8 | 0;
   $i_0201 = 0;
   $4 = $1;
   $3 = 0;
   $2 = 0;
   while (1) {
    HEAP32[$best >> 2] = -1;
    $5 = HEAP32[$4 + ($i_0201 << 2) >> 2] | 0;
    $6 = HEAP32[$5 + 4 >> 2] | 0;
    $7 = HEAP32[$5 >> 2] | 0;
    if (($6 | 0) == ($7 | 0)) {
     $16 = -1;
    } else {
     $8$0 = HEAP32[$X1_i >> 2] | 0;
     $8$1 = HEAP32[$X1_i + 4 >> 2] | 0;
     $9$0 = HEAP32[$Y2_i >> 2] | 0;
     $9$1 = HEAP32[$Y2_i + 4 >> 2] | 0;
     $sub_ptr_div_i291 = $6 - $7 >> 4;
     $j_0186 = 0;
     $bestDist_0187 = 18446744073709552000.0;
     $10 = -1;
     while (1) {
      $X_i = $7 + ($j_0186 << 4) | 0;
      $sub_i$0 = _i64Subtract(HEAP32[$X_i >> 2] | 0, HEAP32[$X_i + 4 >> 2] | 0, $8$0, $8$1) | 0;
      $conv_i = +($sub_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
      $Y_i = $7 + ($j_0186 << 4) + 8 | 0;
      $sub3_i$0 = _i64Subtract(HEAP32[$Y_i >> 2] | 0, HEAP32[$Y_i + 4 >> 2] | 0, $9$0, $9$1) | 0;
      $conv4_i = +($sub3_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
      $add_i = $conv_i * $conv_i + $conv4_i * $conv4_i;
      if ($add_i < $bestDist_0187) {
       HEAP32[$best >> 2] = $j_0186;
       $bestDist_1 = $add_i;
       $15 = $j_0186;
      } else {
       $bestDist_1 = $bestDist_0187;
       $15 = $10;
      }
      $inc = $j_0186 + 1 | 0;
      if ($inc >>> 0 < $sub_ptr_div_i291 >>> 0) {
       $j_0186 = $inc;
       $bestDist_0187 = $bestDist_1;
       $10 = $15;
      } else {
       $16 = $15;
       break;
      }
     }
    }
    $17 = HEAP32[$__end__i388 >> 2] | 0;
    if (($17 | 0) == (HEAP32[$__first__i_i_i_i393 >> 2] | 0)) {
     __ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIKiEEvRT_($polyStart, $best);
    } else {
     if (($17 | 0) == 0) {
      $19 = 0;
     } else {
      HEAP32[$17 >> 2] = $16;
      $19 = HEAP32[$__end__i388 >> 2] | 0;
     }
     HEAP32[$__end__i388 >> 2] = $19 + 4;
    }
    $20 = HEAP32[$__first__i_i_i_i_i >> 2] | 0;
    if (($3 | 0) == ($20 << 5 | 0)) {
     if (($3 + 1 | 0) < 0) {
      label = 1928;
      break;
     }
     if ($3 >>> 0 > 1073741822) {
      $retval_i_0_i = 2147483647;
     } else {
      $mul_i_i = $20 << 6;
      $and_i_i_i = $3 + 32 & -32;
      $retval_i_0_i = $mul_i_i >>> 0 < $and_i_i_i >>> 0 ? $and_i_i_i : $mul_i_i;
     }
     __ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEj($picked, $retval_i_0_i);
     $22 = HEAP32[$__size__i_i >> 2] | 0;
     $21 = HEAP32[$__begin__i_i >> 2] | 0;
    } else {
     $22 = $3;
     $21 = $2;
    }
    $inc_i = $22 + 1 | 0;
    HEAP32[$__size__i_i >> 2] = $inc_i;
    $add_ptr_i_i_i = $21 + ($22 >>> 5 << 2) | 0;
    HEAP32[$add_ptr_i_i_i >> 2] = HEAP32[$add_ptr_i_i_i >> 2] & (1 << ($22 & 31) ^ -1);
    $inc16 = $i_0201 + 1 | 0;
    $24 = HEAP32[$__end__i >> 2] | 0;
    $25 = HEAP32[$__begin__i >> 2] | 0;
    if ($inc16 >>> 0 < $24 - $25 >> 2 >>> 0) {
     $i_0201 = $inc16;
     $4 = $25;
     $3 = $inc_i;
     $2 = $21;
    } else {
     break;
    }
   }
   if ((label | 0) == 1928) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
   }
   if (($24 | 0) == ($25 | 0)) {
    $p0_sroa_1_8__idx125_pre_phi214 = $Y2_i;
    $p0_sroa_0_0__idx111_pre_phi216 = $X1_i;
    $27 = $21;
    $26 = $25;
    label = 1936;
    break;
   }
   $__begin__i330 = $this + 28 | 0;
   $__end__i280 = $this + 44 | 0;
   $__first__i_i_i_i = $this + 48 | 0;
   $polyOrder = $this + 40 | 0;
   $p0_sroa_1_8_copyload126133176$1 = HEAP32[$Y2_i + 4 >> 2] | 0;
   $p0_sroa_1_8_copyload126133176$0 = HEAP32[$Y2_i >> 2] | 0;
   $p0_sroa_0_0_copyload112128178$1 = HEAP32[$X1_i + 4 >> 2] | 0;
   $p0_sroa_0_0_copyload112128178$0 = HEAP32[$X1_i >> 2] | 0;
   $n_0180 = 0;
   $33 = $24;
   $32 = $25;
   while (1) {
    HEAP32[$best24 >> 2] = -1;
    do {
     if (($33 | 0) == ($32 | 0)) {
      $p0_sroa_0_0_copyload112127$1 = $p0_sroa_0_0_copyload112128178$1;
      $p0_sroa_0_0_copyload112127$0 = $p0_sroa_0_0_copyload112128178$0;
      $p0_sroa_1_8_copyload126132$1 = $p0_sroa_1_8_copyload126133176$1;
      $p0_sroa_1_8_copyload126132$0 = $p0_sroa_1_8_copyload126133176$0;
     } else {
      $bestDist25_0165 = 18446744073709552000.0;
      $i26_0166 = 0;
      $35 = $32;
      $34 = -1;
      while (1) {
       do {
        if ((HEAP32[$21 + ($i26_0166 >>> 5 << 2) >> 2] & 1 << ($i26_0166 & 31) | 0) == 0) {
         $37 = HEAP32[$35 + ($i26_0166 << 2) >> 2] | 0;
         $39 = HEAP32[$37 >> 2] | 0;
         $sub_ptr_div_i470 = (HEAP32[$37 + 4 >> 2] | 0) - $39 >> 4;
         if (($sub_ptr_div_i470 | 0) == 0) {
          $bestDist25_2 = $bestDist25_0165;
          $54 = $34;
          $53 = $35;
          break;
         } else if (($sub_ptr_div_i470 | 0) != 2) {
          $50 = HEAP32[(HEAP32[$__begin__i330 >> 2] | 0) + ($i26_0166 << 2) >> 2] | 0;
          $X_i89 = $39 + ($50 << 4) | 0;
          $sub_i91$0 = _i64Subtract(HEAP32[$X_i89 >> 2] | 0, HEAP32[$X_i89 + 4 >> 2] | 0, $p0_sroa_0_0_copyload112128178$0, $p0_sroa_0_0_copyload112128178$1) | 0;
          $conv_i92 = +($sub_i91$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
          $Y_i93 = $39 + ($50 << 4) + 8 | 0;
          $sub3_i95$0 = _i64Subtract(HEAP32[$Y_i93 >> 2] | 0, HEAP32[$Y_i93 + 4 >> 2] | 0, $p0_sroa_1_8_copyload126133176$0, $p0_sroa_1_8_copyload126133176$1) | 0;
          $conv4_i96 = +($sub3_i95$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
          $add_i99 = $conv_i92 * $conv_i92 + $conv4_i96 * $conv4_i96;
          if ($add_i99 >= $bestDist25_0165) {
           $bestDist25_2 = $bestDist25_0165;
           $54 = $34;
           $53 = $35;
           break;
          }
          HEAP32[$best24 >> 2] = $i26_0166;
          $bestDist25_2 = $add_i99;
          $54 = $i26_0166;
          $53 = $35;
          break;
         }
         $X_i56 = $39 | 0;
         $sub_i58$0 = _i64Subtract(HEAP32[$X_i56 >> 2] | 0, HEAP32[$X_i56 + 4 >> 2] | 0, $p0_sroa_0_0_copyload112128178$0, $p0_sroa_0_0_copyload112128178$1) | 0;
         $conv_i59 = +($sub_i58$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
         $Y_i60 = $39 + 8 | 0;
         $sub3_i62$0 = _i64Subtract(HEAP32[$Y_i60 >> 2] | 0, HEAP32[$Y_i60 + 4 >> 2] | 0, $p0_sroa_1_8_copyload126133176$0, $p0_sroa_1_8_copyload126133176$1) | 0;
         $conv4_i63 = +($sub3_i62$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
         $add_i66 = $conv_i59 * $conv_i59 + $conv4_i63 * $conv4_i63;
         if ($add_i66 < $bestDist25_0165) {
          HEAP32[$best24 >> 2] = $i26_0166;
          HEAP32[(HEAP32[$__begin__i330 >> 2] | 0) + ($i26_0166 << 2) >> 2] = 0;
          $_pre206 = HEAP32[$__begin__i >> 2] | 0;
          $bestDist25_1 = $add_i66;
          $45 = $i26_0166;
          $44 = $_pre206;
          $43 = HEAP32[HEAP32[$_pre206 + ($i26_0166 << 2) >> 2] >> 2] | 0;
         } else {
          $bestDist25_1 = $bestDist25_0165;
          $45 = $34;
          $44 = $35;
          $43 = $39;
         }
         $X_i67 = $43 + 16 | 0;
         $sub_i69$0 = _i64Subtract(HEAP32[$X_i67 >> 2] | 0, HEAP32[$X_i67 + 4 >> 2] | 0, $p0_sroa_0_0_copyload112128178$0, $p0_sroa_0_0_copyload112128178$1) | 0;
         $conv_i70 = +($sub_i69$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
         $Y_i71 = $43 + 24 | 0;
         $sub3_i73$0 = _i64Subtract(HEAP32[$Y_i71 >> 2] | 0, HEAP32[$Y_i71 + 4 >> 2] | 0, $p0_sroa_1_8_copyload126133176$0, $p0_sroa_1_8_copyload126133176$1) | 0;
         $conv4_i74 = +($sub3_i73$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
         $add_i77 = $conv_i70 * $conv_i70 + $conv4_i74 * $conv4_i74;
         if ($add_i77 >= $bestDist25_1) {
          $bestDist25_2 = $bestDist25_1;
          $54 = $45;
          $53 = $44;
          break;
         }
         HEAP32[$best24 >> 2] = $i26_0166;
         HEAP32[(HEAP32[$__begin__i330 >> 2] | 0) + ($i26_0166 << 2) >> 2] = 1;
         $bestDist25_2 = $add_i77;
         $54 = $i26_0166;
         $53 = HEAP32[$__begin__i >> 2] | 0;
        } else {
         $bestDist25_2 = $bestDist25_0165;
         $54 = $34;
         $53 = $35;
        }
       } while (0);
       $inc92 = $i26_0166 + 1 | 0;
       if ($inc92 >>> 0 < (HEAP32[$__end__i >> 2] | 0) - $53 >> 2 >>> 0) {
        $bestDist25_0165 = $bestDist25_2;
        $i26_0166 = $inc92;
        $35 = $53;
        $34 = $54;
       } else {
        break;
       }
      }
      if (($54 | 0) <= -1) {
       $p0_sroa_0_0_copyload112127$1 = $p0_sroa_0_0_copyload112128178$1;
       $p0_sroa_0_0_copyload112127$0 = $p0_sroa_0_0_copyload112128178$0;
       $p0_sroa_1_8_copyload126132$1 = $p0_sroa_1_8_copyload126133176$1;
       $p0_sroa_1_8_copyload126132$0 = $p0_sroa_1_8_copyload126133176$0;
       break;
      }
      $56 = HEAP32[$53 + ($54 << 2) >> 2] | 0;
      $58 = HEAP32[$56 >> 2] | 0;
      $60 = HEAP32[(HEAP32[$__begin__i330 >> 2] | 0) + ($54 << 2) >> 2] | 0;
      if (((HEAP32[$56 + 4 >> 2] | 0) - $58 | 0) == 32) {
       $_pn = ($60 + 1 | 0) % 2 & -1;
      } else {
       $_pn = $60;
      }
      $p0_sroa_0_0_copyload112129_in = $58 + ($_pn << 4) | 0;
      $p0_sroa_1_8_copyload126134_in = $58 + ($_pn << 4) + 8 | 0;
      $p0_sroa_0_0_copyload112129$0 = HEAP32[$p0_sroa_0_0_copyload112129_in >> 2] | 0;
      $p0_sroa_0_0_copyload112129$1 = HEAP32[$p0_sroa_0_0_copyload112129_in + 4 >> 2] | 0;
      $p0_sroa_1_8_copyload126134$0 = HEAP32[$p0_sroa_1_8_copyload126134_in >> 2] | 0;
      $p0_sroa_1_8_copyload126134$1 = HEAP32[$p0_sroa_1_8_copyload126134_in + 4 >> 2] | 0;
      $add_ptr_i_i = $21 + ($54 >>> 5 << 2) | 0;
      HEAP32[$add_ptr_i_i >> 2] = HEAP32[$add_ptr_i_i >> 2] | 1 << ($54 & 31);
      $62 = HEAP32[$__end__i280 >> 2] | 0;
      if (($62 | 0) == (HEAP32[$__first__i_i_i_i >> 2] | 0)) {
       __ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIKiEEvRT_($polyOrder, $best24);
       $p0_sroa_0_0_copyload112127$1 = $p0_sroa_0_0_copyload112129$1;
       $p0_sroa_0_0_copyload112127$0 = $p0_sroa_0_0_copyload112129$0;
       $p0_sroa_1_8_copyload126132$1 = $p0_sroa_1_8_copyload126134$1;
       $p0_sroa_1_8_copyload126132$0 = $p0_sroa_1_8_copyload126134$0;
       break;
      }
      if (($62 | 0) == 0) {
       $65 = 0;
      } else {
       HEAP32[$62 >> 2] = HEAP32[$best24 >> 2];
       $65 = HEAP32[$__end__i280 >> 2] | 0;
      }
      HEAP32[$__end__i280 >> 2] = $65 + 4;
      $p0_sroa_0_0_copyload112127$1 = $p0_sroa_0_0_copyload112129$1;
      $p0_sroa_0_0_copyload112127$0 = $p0_sroa_0_0_copyload112129$0;
      $p0_sroa_1_8_copyload126132$1 = $p0_sroa_1_8_copyload126134$1;
      $p0_sroa_1_8_copyload126132$0 = $p0_sroa_1_8_copyload126134$0;
     }
    } while (0);
    $inc126 = $n_0180 + 1 | 0;
    $66 = HEAP32[$__end__i >> 2] | 0;
    $67 = HEAP32[$__begin__i >> 2] | 0;
    if ($inc126 >>> 0 < $66 - $67 >> 2 >>> 0) {
     $p0_sroa_1_8_copyload126133176$1 = $p0_sroa_1_8_copyload126132$1;
     $p0_sroa_1_8_copyload126133176$0 = $p0_sroa_1_8_copyload126132$0;
     $p0_sroa_0_0_copyload112128178$1 = $p0_sroa_0_0_copyload112127$1;
     $p0_sroa_0_0_copyload112128178$0 = $p0_sroa_0_0_copyload112127$0;
     $n_0180 = $inc126;
     $33 = $66;
     $32 = $67;
    } else {
     $29 = $67;
     $__end__i269_pre_phi = $__end__i280;
     $p0_sroa_1_8__idx125_pre_phi213 = $Y2_i;
     $p0_sroa_0_0__idx111_pre_phi215 = $X1_i;
     $28 = $21;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 1936) {
  $29 = $26;
  $__end__i269_pre_phi = $this + 44 | 0;
  $p0_sroa_1_8__idx125_pre_phi213 = $p0_sroa_1_8__idx125_pre_phi214;
  $p0_sroa_0_0__idx111_pre_phi215 = $p0_sroa_0_0__idx111_pre_phi216;
  $28 = $27;
 }
 $__begin__i270 = $this + 40 | 0;
 $31 = HEAP32[$__begin__i270 >> 2] | 0;
 L1987 : do {
  if ((HEAP32[$__end__i269_pre_phi >> 2] | 0) != ($31 | 0)) {
   $__begin__i232 = $this + 28 | 0;
   $n130_0157 = 0;
   $p0_sroa_0_0_copyload112130158_in = $p0_sroa_0_0__idx111_pre_phi215;
   $p0_sroa_1_8_copyload126135159_in = $p0_sroa_1_8__idx125_pre_phi213;
   $69 = $31;
   $68 = $29;
   while (1) {
    $p0_sroa_0_0_copyload112130158$0 = HEAP32[$p0_sroa_0_0_copyload112130158_in >> 2] | 0;
    $p0_sroa_0_0_copyload112130158$1 = HEAP32[$p0_sroa_0_0_copyload112130158_in + 4 >> 2] | 0;
    $p0_sroa_1_8_copyload126135159$0 = HEAP32[$p0_sroa_1_8_copyload126135159_in >> 2] | 0;
    $p0_sroa_1_8_copyload126135159$1 = HEAP32[$p0_sroa_1_8_copyload126135159_in + 4 >> 2] | 0;
    $70 = HEAP32[$69 + ($n130_0157 << 2) >> 2] | 0;
    $71 = HEAP32[$68 + ($70 << 2) >> 2] | 0;
    $72 = HEAP32[$71 + 4 >> 2] | 0;
    $73 = HEAP32[$71 >> 2] | 0;
    if (($72 | 0) == ($73 | 0)) {
     $best141_0_lcssa = -1;
    } else {
     $sub_ptr_div_i256 = $72 - $73 >> 4;
     $best141_0147 = -1;
     $bestDist143_0148 = 18446744073709552000.0;
     $i145_0149 = 0;
     while (1) {
      $X_i78 = $73 + ($i145_0149 << 4) | 0;
      $sub_i80$0 = _i64Subtract(HEAP32[$X_i78 >> 2] | 0, HEAP32[$X_i78 + 4 >> 2] | 0, $p0_sroa_0_0_copyload112130158$0, $p0_sroa_0_0_copyload112130158$1) | 0;
      $conv_i81 = +($sub_i80$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
      $Y_i82 = $73 + ($i145_0149 << 4) + 8 | 0;
      $sub3_i84$0 = _i64Subtract(HEAP32[$Y_i82 >> 2] | 0, HEAP32[$Y_i82 + 4 >> 2] | 0, $p0_sroa_1_8_copyload126135159$0, $p0_sroa_1_8_copyload126135159$1) | 0;
      $conv4_i85 = +($sub3_i84$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
      $add_i88 = $conv_i81 * $conv_i81 + $conv4_i85 * $conv4_i85;
      $cmp162 = $add_i88 < $bestDist143_0148;
      $best141_1 = $cmp162 ? $i145_0149 : $best141_0147;
      $inc166 = $i145_0149 + 1 | 0;
      if ($inc166 >>> 0 < $sub_ptr_div_i256 >>> 0) {
       $best141_0147 = $best141_1;
       $bestDist143_0148 = $cmp162 ? $add_i88 : $bestDist143_0148;
       $i145_0149 = $inc166;
      } else {
       $best141_0_lcssa = $best141_1;
       break;
      }
     }
    }
    HEAP32[(HEAP32[$__begin__i232 >> 2] | 0) + ($70 << 2) >> 2] = $best141_0_lcssa;
    $77 = HEAP32[$__begin__i >> 2] | 0;
    $78 = HEAP32[$77 + ($70 << 2) >> 2] | 0;
    $80 = HEAP32[$78 >> 2] | 0;
    if ((HEAP32[$78 + 4 >> 2] | 0) - $80 >> 4 >>> 0 < 3) {
     $rem181_pn = ($best141_0_lcssa + 1 | 0) % 2 & -1;
    } else {
     $rem181_pn = $best141_0_lcssa;
    }
    $inc192 = $n130_0157 + 1 | 0;
    $82 = HEAP32[$__begin__i270 >> 2] | 0;
    if ($inc192 >>> 0 >= (HEAP32[$__end__i269_pre_phi >> 2] | 0) - $82 >> 2 >>> 0) {
     break L1987;
    }
    $n130_0157 = $inc192;
    $p0_sroa_0_0_copyload112130158_in = $80 + ($rem181_pn << 4) | 0;
    $p0_sroa_1_8_copyload126135159_in = $80 + ($rem181_pn << 4) + 8 | 0;
    $69 = $82;
    $68 = $77;
   }
  }
 } while (0);
 if (($28 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv($28);
 STACKTOP = __stackBase__;
 return;
}
function __ZN12GCodePlanner21forceMinimalLayerTimeEdi($this, $minTime, $minimalSpeed) {
 $this = $this | 0;
 $minTime = +$minTime;
 $minimalSpeed = $minimalSpeed | 0;
 var $ref = 0, $0 = 0, $1 = 0, $3 = 0, $4 = 0, $sub_ptr_div_i = 0, $totalTime_063 = 0.0, $n_062 = 0, $p0_sroa_0_0_copyload3261$0 = 0, $p0_sroa_0_0_copyload3261$1 = 0, $p0_sroa_1_8_copyload3460$0 = 0, $p0_sroa_1_8_copyload3460$1 = 0, $5 = 0, $6 = 0, $conv = 0.0, $sub_ptr_div_i81 = 0, $totalTime_151 = 0.0, $i_050 = 0, $p0_sroa_0_0_copyload3349$0 = 0, $p0_sroa_0_0_copyload3349$1 = 0, $p0_sroa_1_8_copyload3548$0 = 0, $p0_sroa_1_8_copyload3548$1 = 0, $arrayidx_i86_idx = 0, $arrayidx_i86_idx_val$0 = 0, $arrayidx_i86_idx_val$1 = 0, $arrayidx_i86_idx26 = 0, $arrayidx_i86_idx26_val$0 = 0, $arrayidx_i86_idx26_val$1 = 0, $sub_i$0 = 0, $sub_i$1 = 0, $sub3_i$0 = 0, $div_i = 0.0, $div2_i = 0.0, $add = 0.0, $inc = 0, $totalTime_1_lcssa = 0.0, $p0_sroa_0_0_copyload33_lcssa$0 = 0, $p0_sroa_0_0_copyload33_lcssa$1 = 0, $p0_sroa_1_8_copyload35_lcssa$0 = 0, $p0_sroa_1_8_copyload35_lcssa$1 = 0, $inc14 = 0, $9 = 0, $totalTime_0_lcssa = 0.0, $div17 = 0.0, $conv34 = 0.0, $sub_ptr_div_i68 = 0, $n18_042 = 0, $factor_041 = 0.0, $conv30 = 0.0, $factor_1 = 0.0, $inc40 = 0, $factor_0_lcssa = 0.0, $conv43 = 0, $sub = 0.0;
 $ref = HEAP32[$this >> 2] | 0;
 $0 = HEAP32[$this + 28 >> 2] | 0;
 $1 = HEAP32[$this + 24 >> 2] | 0;
 if (($0 | 0) == ($1 | 0)) {
  $totalTime_0_lcssa = 0.0;
  $9 = $0;
 } else {
  $3 = HEAP32[$ref + 44 >> 2] | 0;
  $4 = HEAP32[$ref + 40 >> 2] | 0;
  $sub_ptr_div_i = ($0 - $1 | 0) / 24 & -1;
  $p0_sroa_1_8_copyload3460$1 = ($3 | 0) < 0 ? -1 : 0;
  $p0_sroa_1_8_copyload3460$0 = $3;
  $p0_sroa_0_0_copyload3261$1 = ($4 | 0) < 0 ? -1 : 0;
  $p0_sroa_0_0_copyload3261$0 = $4;
  $n_062 = 0;
  $totalTime_063 = 0.0;
  while (1) {
   $5 = HEAP32[$1 + ($n_062 * 24 & -1) + 16 >> 2] | 0;
   $6 = HEAP32[$1 + ($n_062 * 24 & -1) + 12 >> 2] | 0;
   if (($5 | 0) == ($6 | 0)) {
    $p0_sroa_1_8_copyload35_lcssa$1 = $p0_sroa_1_8_copyload3460$1;
    $p0_sroa_1_8_copyload35_lcssa$0 = $p0_sroa_1_8_copyload3460$0;
    $p0_sroa_0_0_copyload33_lcssa$1 = $p0_sroa_0_0_copyload3261$1;
    $p0_sroa_0_0_copyload33_lcssa$0 = $p0_sroa_0_0_copyload3261$0;
    $totalTime_1_lcssa = $totalTime_063;
   } else {
    $conv = +(HEAP32[HEAP32[$1 + ($n_062 * 24 & -1) >> 2] >> 2] | 0);
    $sub_ptr_div_i81 = $5 - $6 >> 4;
    $p0_sroa_1_8_copyload3548$1 = $p0_sroa_1_8_copyload3460$1;
    $p0_sroa_1_8_copyload3548$0 = $p0_sroa_1_8_copyload3460$0;
    $p0_sroa_0_0_copyload3349$1 = $p0_sroa_0_0_copyload3261$1;
    $p0_sroa_0_0_copyload3349$0 = $p0_sroa_0_0_copyload3261$0;
    $i_050 = 0;
    $totalTime_151 = $totalTime_063;
    while (1) {
     $arrayidx_i86_idx = $6 + ($i_050 << 4) | 0;
     $arrayidx_i86_idx_val$0 = HEAP32[$arrayidx_i86_idx >> 2] | 0;
     $arrayidx_i86_idx_val$1 = HEAP32[$arrayidx_i86_idx + 4 >> 2] | 0;
     $arrayidx_i86_idx26 = $6 + ($i_050 << 4) + 8 | 0;
     $arrayidx_i86_idx26_val$0 = HEAP32[$arrayidx_i86_idx26 >> 2] | 0;
     $arrayidx_i86_idx26_val$1 = HEAP32[$arrayidx_i86_idx26 + 4 >> 2] | 0;
     $sub_i$0 = _i64Subtract($p0_sroa_0_0_copyload3349$0, $p0_sroa_0_0_copyload3349$1, $arrayidx_i86_idx_val$0, $arrayidx_i86_idx_val$1) | 0;
     $sub_i$1 = tempRet0;
     $sub3_i$0 = _i64Subtract($p0_sroa_1_8_copyload3548$0, $p0_sroa_1_8_copyload3548$1, $arrayidx_i86_idx26_val$0, $arrayidx_i86_idx26_val$1) | 0;
     $div_i = (+($sub_i$0 >>> 0) + +($sub_i$1 | 0) * 4294967296.0) / 1.0e3;
     $div2_i = (+($sub3_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0) / 1.0e3;
     $add = $totalTime_151 + +Math_sqrt(+($div_i * $div_i + $div2_i * $div2_i)) / $conv;
     $inc = $i_050 + 1 | 0;
     if ($inc >>> 0 < $sub_ptr_div_i81 >>> 0) {
      $p0_sroa_1_8_copyload3548$1 = $arrayidx_i86_idx26_val$1;
      $p0_sroa_1_8_copyload3548$0 = $arrayidx_i86_idx26_val$0;
      $p0_sroa_0_0_copyload3349$1 = $arrayidx_i86_idx_val$1;
      $p0_sroa_0_0_copyload3349$0 = $arrayidx_i86_idx_val$0;
      $i_050 = $inc;
      $totalTime_151 = $add;
     } else {
      $p0_sroa_1_8_copyload35_lcssa$1 = $arrayidx_i86_idx26_val$1;
      $p0_sroa_1_8_copyload35_lcssa$0 = $arrayidx_i86_idx26_val$0;
      $p0_sroa_0_0_copyload33_lcssa$1 = $arrayidx_i86_idx_val$1;
      $p0_sroa_0_0_copyload33_lcssa$0 = $arrayidx_i86_idx_val$0;
      $totalTime_1_lcssa = $add;
      break;
     }
    }
   }
   $inc14 = $n_062 + 1 | 0;
   if ($inc14 >>> 0 < $sub_ptr_div_i >>> 0) {
    $p0_sroa_1_8_copyload3460$1 = $p0_sroa_1_8_copyload35_lcssa$1;
    $p0_sroa_1_8_copyload3460$0 = $p0_sroa_1_8_copyload35_lcssa$0;
    $p0_sroa_0_0_copyload3261$1 = $p0_sroa_0_0_copyload33_lcssa$1;
    $p0_sroa_0_0_copyload3261$0 = $p0_sroa_0_0_copyload33_lcssa$0;
    $n_062 = $inc14;
    $totalTime_063 = $totalTime_1_lcssa;
   } else {
    $totalTime_0_lcssa = $totalTime_1_lcssa;
    $9 = $1;
    break;
   }
  }
 }
 if ($totalTime_0_lcssa >= $minTime) {
  HEAPF64[$this + 72 >> 3] = $totalTime_0_lcssa;
  return;
 }
 $div17 = $totalTime_0_lcssa / $minTime;
 if (($0 | 0) == ($9 | 0)) {
  $factor_0_lcssa = $div17;
 } else {
  $conv34 = +($minimalSpeed | 0);
  $sub_ptr_div_i68 = ($0 - $9 | 0) / 24 & -1;
  $factor_041 = $div17;
  $n18_042 = 0;
  while (1) {
   $conv30 = +(HEAP32[HEAP32[$9 + ($n18_042 * 24 & -1) >> 2] >> 2] | 0);
   if ((~~($factor_041 * $conv30) | 0) < ($minimalSpeed | 0)) {
    $factor_1 = $conv34 / $conv30;
   } else {
    $factor_1 = $factor_041;
   }
   $inc40 = $n18_042 + 1 | 0;
   if ($inc40 >>> 0 < $sub_ptr_div_i68 >>> 0) {
    $factor_041 = $factor_1;
    $n18_042 = $inc40;
   } else {
    $factor_0_lcssa = $factor_1;
    break;
   }
  }
 }
 $conv43 = ~~($factor_0_lcssa * 100.0);
 HEAP32[$this + 52 >> 2] = ($conv43 | 0) < 1 ? 1 : $conv43;
 $sub = $minTime - $totalTime_0_lcssa / $factor_0_lcssa;
 if ($sub > .1) {
  HEAPF64[$this + 64 >> 3] = $sub;
 }
 HEAPF64[$this + 72 >> 3] = $totalTime_0_lcssa * $factor_0_lcssa;
 return;
}
function __Z9setConfigR6ConfigPc($config, $str) {
 $config = $config | 0;
 $str = $str | 0;
 var $call = 0, $incdec_ptr = 0, $call205 = 0, $X = 0, $call213 = 0, $Y = 0, $call327 = 0, $X329 = 0, $call337 = 0, $Y341 = 0, $call349 = 0, $X353 = 0, $call361 = 0, $Y365 = 0, $call373 = 0, $X377 = 0, $call385 = 0, $Y389 = 0, label = 0;
 $call = _strchr($str | 0, 61) | 0;
 if (($call | 0) == 0) {
  return;
 }
 $incdec_ptr = $call + 1 | 0;
 HEAP8[$call] = 0;
 if ((_strcasecmp($str | 0, 2176) | 0) == 0) {
  label = 1994;
 } else {
  if ((_strcasecmp($str | 0, 2168) | 0) == 0) {
   label = 1994;
  }
 }
 if ((label | 0) == 1994) {
  HEAP32[$config >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 2088) | 0) == 0) {
  label = 1997;
 } else {
  if ((_strcasecmp($str | 0, 2064) | 0) == 0) {
   label = 1997;
  }
 }
 if ((label | 0) == 1997) {
  HEAP32[$config + 4 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 2040) | 0) == 0) {
  label = 2e3;
 } else {
  if ((_strcasecmp($str | 0, 2032) | 0) == 0) {
   label = 2e3;
  }
 }
 if ((label | 0) == 2e3) {
  HEAP32[$config + 8 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 2016) | 0) == 0) {
  label = 2003;
 } else {
  if ((_strcasecmp($str | 0, 2008) | 0) == 0) {
   label = 2003;
  }
 }
 if ((label | 0) == 2003) {
  HEAP32[$config + 12 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 1992) | 0) == 0) {
  label = 2006;
 } else {
  if ((_strcasecmp($str | 0, 1984) | 0) == 0) {
   label = 2006;
  }
 }
 if ((label | 0) == 2006) {
  HEAP32[$config + 16 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 1968) | 0) == 0) {
  label = 2009;
 } else {
  if ((_strcasecmp($str | 0, 1960) | 0) == 0) {
   label = 2009;
  }
 }
 if ((label | 0) == 2009) {
  HEAP32[$config + 20 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 1896) | 0) == 0) {
  label = 2012;
 } else {
  if ((_strcasecmp($str | 0, 1872) | 0) == 0) {
   label = 2012;
  }
 }
 if ((label | 0) == 2012) {
  HEAP32[$config + 24 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 1856) | 0) == 0) {
  label = 2015;
 } else {
  if ((_strcasecmp($str | 0, 1840) | 0) == 0) {
   label = 2015;
  }
 }
 if ((label | 0) == 2015) {
  HEAP32[$config + 28 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 1800) | 0) == 0) {
  label = 2018;
 } else {
  if ((_strcasecmp($str | 0, 1792) | 0) == 0) {
   label = 2018;
  }
 }
 if ((label | 0) == 2018) {
  HEAP32[$config + 32 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 1744) | 0) == 0) {
  label = 2021;
 } else {
  if ((_strcasecmp($str | 0, 1696) | 0) == 0) {
   label = 2021;
  }
 }
 if ((label | 0) == 2021) {
  HEAP32[$config + 36 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 1656) | 0) == 0) {
  label = 2024;
 } else {
  if ((_strcasecmp($str | 0, 1624) | 0) == 0) {
   label = 2024;
  }
 }
 if ((label | 0) == 2024) {
  HEAP32[$config + 40 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 1528) | 0) == 0) {
  label = 2027;
 } else {
  if ((_strcasecmp($str | 0, 1496) | 0) == 0) {
   label = 2027;
  }
 }
 if ((label | 0) == 2027) {
  HEAP32[$config + 44 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 1448) | 0) == 0) {
  label = 2030;
 } else {
  if ((_strcasecmp($str | 0, 1408) | 0) == 0) {
   label = 2030;
  }
 }
 if ((label | 0) == 2030) {
  HEAP32[$config + 64 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 1344) | 0) == 0) {
  label = 2033;
 } else {
  if ((_strcasecmp($str | 0, 1304) | 0) == 0) {
   label = 2033;
  }
 }
 if ((label | 0) == 2033) {
  HEAP32[$config + 68 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 1248) | 0) == 0) {
  label = 2036;
 } else {
  if ((_strcasecmp($str | 0, 1200) | 0) == 0) {
   label = 2036;
  }
 }
 if ((label | 0) == 2036) {
  HEAP32[$config + 72 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 1168) | 0) == 0) {
  label = 2039;
 } else {
  if ((_strcasecmp($str | 0, 1144) | 0) == 0) {
   label = 2039;
  }
 }
 if ((label | 0) == 2039) {
  HEAP32[$config + 76 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 1080) | 0) == 0) {
  label = 2042;
 } else {
  if ((_strcasecmp($str | 0, 1056) | 0) == 0) {
   label = 2042;
  }
 }
 if ((label | 0) == 2042) {
  HEAP32[$config + 80 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 1024) | 0) == 0) {
  label = 2045;
 } else {
  if ((_strcasecmp($str | 0, 1e3) | 0) == 0) {
   label = 2045;
  }
 }
 if ((label | 0) == 2045) {
  HEAP32[$config + 84 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 968) | 0) == 0) {
  label = 2048;
 } else {
  if ((_strcasecmp($str | 0, 944) | 0) == 0) {
   label = 2048;
  }
 }
 if ((label | 0) == 2048) {
  HEAP32[$config + 88 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 904) | 0) == 0) {
  label = 2051;
 } else {
  if ((_strcasecmp($str | 0, 880) | 0) == 0) {
   label = 2051;
  }
 }
 if ((label | 0) == 2051) {
  HEAP32[$config + 92 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 840) | 0) == 0) {
  label = 2054;
 } else {
  if ((_strcasecmp($str | 0, 816) | 0) == 0) {
   label = 2054;
  }
 }
 if ((label | 0) == 2054) {
  HEAP32[$config + 96 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 776) | 0) == 0) {
  label = 2057;
 } else {
  if ((_strcasecmp($str | 0, 760) | 0) == 0) {
   label = 2057;
  }
 }
 if ((label | 0) == 2057) {
  HEAP32[$config + 48 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 728) | 0) == 0) {
  label = 2060;
 } else {
  if ((_strcasecmp($str | 0, 696) | 0) == 0) {
   label = 2060;
  }
 }
 if ((label | 0) == 2060) {
  HEAP32[$config + 56 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 656) | 0) == 0) {
  label = 2063;
 } else {
  if ((_strcasecmp($str | 0, 640) | 0) == 0) {
   label = 2063;
  }
 }
 if ((label | 0) == 2063) {
  HEAP32[$config + 52 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 608) | 0) == 0) {
  label = 2066;
 } else {
  if ((_strcasecmp($str | 0, 584) | 0) == 0) {
   label = 2066;
  }
 }
 if ((label | 0) == 2066) {
  HEAP32[$config + 60 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 552) | 0) == 0) {
  label = 2069;
 } else {
  if ((_strcasecmp($str | 0, 528) | 0) == 0) {
   label = 2069;
  }
 }
 if ((label | 0) == 2069) {
  $call205 = _atoi($incdec_ptr | 0) | 0;
  $X = $config + 216 | 0;
  HEAP32[$X >> 2] = $call205;
  HEAP32[$X + 4 >> 2] = ($call205 | 0) < 0 ? -1 : 0;
 }
 if ((_strcasecmp($str | 0, 496) | 0) == 0) {
  label = 2072;
 } else {
  if ((_strcasecmp($str | 0, 432) | 0) == 0) {
   label = 2072;
  }
 }
 if ((label | 0) == 2072) {
  $call213 = _atoi($incdec_ptr | 0) | 0;
  $Y = $config + 224 | 0;
  HEAP32[$Y >> 2] = $call213;
  HEAP32[$Y + 4 >> 2] = ($call213 | 0) < 0 ? -1 : 0;
 }
 if ((_strcasecmp($str | 0, 400) | 0) == 0) {
  label = 2075;
 } else {
  if ((_strcasecmp($str | 0, 384) | 0) == 0) {
   label = 2075;
  }
 }
 if ((label | 0) == 2075) {
  HEAP32[$config + 232 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 360) | 0) == 0) {
  label = 2078;
 } else {
  if ((_strcasecmp($str | 0, 344) | 0) == 0) {
   label = 2078;
  }
 }
 if ((label | 0) == 2078) {
  HEAP32[$config + 120 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 312) | 0) == 0) {
  label = 2081;
 } else {
  if ((_strcasecmp($str | 0, 296) | 0) == 0) {
   label = 2081;
  }
 }
 if ((label | 0) == 2081) {
  HEAP32[$config + 124 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 6104) | 0) == 0) {
  label = 2084;
 } else {
  if ((_strcasecmp($str | 0, 6080) | 0) == 0) {
   label = 2084;
  }
 }
 if ((label | 0) == 2084) {
  HEAP32[$config + 128 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 6048) | 0) == 0) {
  label = 2087;
 } else {
  if ((_strcasecmp($str | 0, 6024) | 0) == 0) {
   label = 2087;
  }
 }
 if ((label | 0) == 2087) {
  HEAP32[$config + 132 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 5992) | 0) == 0) {
  label = 2090;
 } else {
  if ((_strcasecmp($str | 0, 5968) | 0) == 0) {
   label = 2090;
  }
 }
 if ((label | 0) == 2090) {
  HEAP32[$config + 136 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 5944) | 0) == 0) {
  label = 2093;
 } else {
  if ((_strcasecmp($str | 0, 5896) | 0) == 0) {
   label = 2093;
  }
 }
 if ((label | 0) == 2093) {
  HEAP32[$config + 140 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 5840) | 0) == 0) {
  label = 2096;
 } else {
  if ((_strcasecmp($str | 0, 5792) | 0) == 0) {
   label = 2096;
  }
 }
 if ((label | 0) == 2096) {
  HEAP32[$config + 100 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 5704) | 0) == 0) {
  label = 2099;
 } else {
  if ((_strcasecmp($str | 0, 5656) | 0) == 0) {
   label = 2099;
  }
 }
 if ((label | 0) == 2099) {
  HEAP32[$config + 104 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 5568) | 0) == 0) {
  label = 2102;
 } else {
  if ((_strcasecmp($str | 0, 5512) | 0) == 0) {
   label = 2102;
  }
 }
 if ((label | 0) == 2102) {
  HEAP32[$config + 108 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 5480) | 0) == 0) {
  label = 2105;
 } else {
  if ((_strcasecmp($str | 0, 5456) | 0) == 0) {
   label = 2105;
  }
 }
 if ((label | 0) == 2105) {
  HEAP32[$config + 112 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 5384) | 0) == 0) {
  label = 2108;
 } else {
  if ((_strcasecmp($str | 0, 5360) | 0) == 0) {
   label = 2108;
  }
 }
 if ((label | 0) == 2108) {
  HEAP32[$config + 116 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 5304) | 0) == 0) {
  HEAP32[$config + 236 >> 2] = _atoi($incdec_ptr | 0) | 0;
 }
 if ((_strcasecmp($str | 0, 5248) | 0) == 0) {
  label = 2113;
 } else {
  if ((_strcasecmp($str | 0, 5192) | 0) == 0) {
   label = 2113;
  }
 }
 if ((label | 0) == 2113) {
  $call327 = _atoi($incdec_ptr | 0) | 0;
  $X329 = $config + 256 | 0;
  HEAP32[$X329 >> 2] = $call327;
  HEAP32[$X329 + 4 >> 2] = ($call327 | 0) < 0 ? -1 : 0;
 }
 if ((_strcasecmp($str | 0, 5160) | 0) == 0) {
  label = 2116;
 } else {
  if ((_strcasecmp($str | 0, 5104) | 0) == 0) {
   label = 2116;
  }
 }
 if ((label | 0) == 2116) {
  $call337 = _atoi($incdec_ptr | 0) | 0;
  $Y341 = $config + 264 | 0;
  HEAP32[$Y341 >> 2] = $call337;
  HEAP32[$Y341 + 4 >> 2] = ($call337 | 0) < 0 ? -1 : 0;
 }
 if ((_strcasecmp($str | 0, 5072) | 0) == 0) {
  label = 2119;
 } else {
  if ((_strcasecmp($str | 0, 5056) | 0) == 0) {
   label = 2119;
  }
 }
 if ((label | 0) == 2119) {
  $call349 = _atoi($incdec_ptr | 0) | 0;
  $X353 = $config + 272 | 0;
  HEAP32[$X353 >> 2] = $call349;
  HEAP32[$X353 + 4 >> 2] = ($call349 | 0) < 0 ? -1 : 0;
 }
 if ((_strcasecmp($str | 0, 5016) | 0) == 0) {
  label = 2122;
 } else {
  if ((_strcasecmp($str | 0, 4992) | 0) == 0) {
   label = 2122;
  }
 }
 if ((label | 0) == 2122) {
  $call361 = _atoi($incdec_ptr | 0) | 0;
  $Y365 = $config + 280 | 0;
  HEAP32[$Y365 >> 2] = $call361;
  HEAP32[$Y365 + 4 >> 2] = ($call361 | 0) < 0 ? -1 : 0;
 }
 if ((_strcasecmp($str | 0, 4960) | 0) == 0) {
  label = 2125;
 } else {
  if ((_strcasecmp($str | 0, 4936) | 0) == 0) {
   label = 2125;
  }
 }
 if ((label | 0) == 2125) {
  $call373 = _atoi($incdec_ptr | 0) | 0;
  $X377 = $config + 288 | 0;
  HEAP32[$X377 >> 2] = $call373;
  HEAP32[$X377 + 4 >> 2] = ($call373 | 0) < 0 ? -1 : 0;
 }
 if ((_strcasecmp($str | 0, 4904) | 0) == 0) {
  label = 2128;
 } else {
  if ((_strcasecmp($str | 0, 4848) | 0) == 0) {
   label = 2128;
  }
 }
 if ((label | 0) == 2128) {
  $call385 = _atoi($incdec_ptr | 0) | 0;
  $Y389 = $config + 296 | 0;
  HEAP32[$Y389 >> 2] = $call385;
  HEAP32[$Y389 + 4 >> 2] = ($call385 | 0) < 0 ? -1 : 0;
 }
 if ((_strcasecmp($str | 0, 4824) | 0) == 0) {
  HEAP32[$config + 496 >> 2] = $incdec_ptr;
 }
 if ((_strcasecmp($str | 0, 4808) | 0) != 0) {
  return;
 }
 HEAP32[$config + 500 >> 2] = $incdec_ptr;
 return;
}
function __Z10signal_FPEi($n) {
 $n = $n | 0;
 _puts(24 | 0) | 0;
 _exit(1);
}
function _main($argc, $argv) {
 $argc = $argc | 0;
 $argv = $argv | 0;
 var $gcode = 0, $config = 0, $extrusionAmount_i_i = 0, $currentFanSpeed_i_i = 0, $totalFilament_i_i = 0, $f_i_i = 0, $arrayidx2_i_i_i_i = 0, $arrayidx5_i_i_i_i = 0, $arrayidx8_i_i_i_i = 0, $arrayidx11_i_i_i_i = 0, $arrayidx14_i_i_i_i = 0, $arrayidx17_i_i_i_i = 0, $arrayidx20_i_i_i_i = 0, $arrayidx23_i_i_i_i = 0, $arrayidx26_i_i_i_i = 0, $X_i_i1_i_i = 0, $ref_tmp_sroa_1_8__idx40 = 0, $endCode = 0, $argn_063 = 0, $fileNr_062 = 0, $6 = 0, $str_04855 = 0, $8 = 0, $9 = 0, $str_04858 = 0, $argn_1_ph57 = 0, $10 = 0, $str_050 = 0, $conv10 = 0, $str_0 = 0, $13 = 0, $inc15 = 0, $inc20 = 0, $arrayidx21 = 0, $call_i = 0, $inc31 = 0, $inc35 = 0, $argn_1_ph_be = 0, $str_048 = 0, $19 = 0, $fileNr_1 = 0, $argn_3 = 0, $inc87 = 0, $21 = 0, $24 = 0, $25 = 0, $retval_0_ph = 0, $_pr = 0, $retval_042 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 856 | 0;
 $gcode = __stackBase__ | 0;
 $config = __stackBase__ + 352 | 0;
 _signal(8, 192) | 0;
 HEAP32[$gcode + 40 >> 2] = 0;
 HEAP32[$gcode + 44 >> 2] = 0;
 HEAP32[$gcode + 48 >> 2] = 0;
 $extrusionAmount_i_i = $gcode + 8 | 0;
 _memset($extrusionAmount_i_i | 0, 0, 16);
 HEAPF64[$gcode + 24 >> 3] = 4.5;
 HEAPF64[$gcode + 32 >> 3] = 14.5;
 HEAP32[$gcode + 328 >> 2] = 0;
 $currentFanSpeed_i_i = $gcode + 332 | 0;
 HEAP32[$currentFanSpeed_i_i >> 2] = -1;
 $totalFilament_i_i = $gcode + 336 | 0;
 HEAP32[$gcode + 312 >> 2] = 0;
 _memset($totalFilament_i_i | 0, 0, 16);
 HEAP32[$gcode + 316 >> 2] = 45;
 HEAP8[$gcode + 324 | 0] = 0;
 _memset($gcode + 56 | 0, 0, 256);
 $f_i_i = $gcode | 0;
 HEAP32[$f_i_i >> 2] = 0;
 $arrayidx2_i_i_i_i = $config + 144 | 0;
 HEAPF64[$arrayidx2_i_i_i_i >> 3] = 1.0;
 $arrayidx5_i_i_i_i = $config + 168 | 0;
 HEAPF64[$arrayidx5_i_i_i_i >> 3] = 0.0;
 $arrayidx8_i_i_i_i = $config + 192 | 0;
 HEAPF64[$arrayidx8_i_i_i_i >> 3] = 0.0;
 $arrayidx11_i_i_i_i = $config + 152 | 0;
 HEAPF64[$arrayidx11_i_i_i_i >> 3] = 0.0;
 $arrayidx14_i_i_i_i = $config + 176 | 0;
 HEAPF64[$arrayidx14_i_i_i_i >> 3] = 1.0;
 $arrayidx17_i_i_i_i = $config + 200 | 0;
 HEAPF64[$arrayidx17_i_i_i_i >> 3] = 0.0;
 $arrayidx20_i_i_i_i = $config + 160 | 0;
 HEAPF64[$arrayidx20_i_i_i_i >> 3] = 0.0;
 $arrayidx23_i_i_i_i = $config + 184 | 0;
 HEAPF64[$arrayidx23_i_i_i_i >> 3] = 0.0;
 $arrayidx26_i_i_i_i = $config + 208 | 0;
 HEAPF64[$arrayidx26_i_i_i_i >> 3] = 1.0;
 $X_i_i1_i_i = $config + 216 | 0;
 HEAP32[$X_i_i1_i_i >> 2] = 0;
 HEAP32[$X_i_i1_i_i + 4 >> 2] = 0;
 _memset($config + 240 | 0, 0, 256);
 HEAP32[$config + 8 >> 2] = 2890;
 HEAP32[$config + 12 >> 2] = 100;
 HEAP32[$config + 4 >> 2] = 300;
 HEAP32[$config >> 2] = 100;
 HEAP32[$config + 16 >> 2] = 400;
 HEAP32[$config + 20 >> 2] = 2;
 HEAP32[$config + 24 >> 2] = 6;
 HEAP32[$config + 28 >> 2] = 6;
 HEAP32[$config + 64 >> 2] = 4;
 HEAP32[$config + 68 >> 2] = 20;
 HEAP32[$config + 72 >> 2] = 50;
 HEAP32[$config + 76 >> 2] = 50;
 HEAP32[$config + 80 >> 2] = 200;
 HEAP32[$config + 84 >> 2] = 2;
 HEAP32[$config + 40 >> 2] = 6e3;
 HEAP32[$config + 44 >> 2] = 1;
 HEAP32[$config + 32 >> 2] = 2e3;
 HEAP32[$config + 36 >> 2] = 15;
 HEAP32[$X_i_i1_i_i >> 2] = 102500;
 HEAP32[$X_i_i1_i_i + 4 >> 2] = 0;
 $ref_tmp_sroa_1_8__idx40 = $config + 224 | 0;
 HEAP32[$ref_tmp_sroa_1_8__idx40 >> 2] = 102500;
 HEAP32[$ref_tmp_sroa_1_8__idx40 + 4 >> 2] = 0;
 HEAP32[$config + 232 >> 2] = 0;
 HEAP32[$config + 88 >> 2] = -1;
 HEAP32[$config + 92 >> 2] = 0;
 HEAP32[$config + 96 >> 2] = 400;
 HEAP32[$config + 48 >> 2] = 4;
 HEAP32[$config + 56 >> 2] = 45;
 HEAP32[$config + 52 >> 2] = 14;
 HEAP32[$config + 60 >> 2] = 0;
 HEAP32[$config + 100 >> 2] = 5;
 HEAP32[$config + 104 >> 2] = 10;
 HEAP32[$config + 108 >> 2] = 1;
 HEAP32[$config + 112 >> 2] = 100;
 HEAP32[$config + 116 >> 2] = 100;
 HEAP32[$config + 120 >> 2] = 5e3;
 HEAP32[$config + 124 >> 2] = 1e3;
 HEAP32[$config + 236 >> 2] = 0;
 _memset($config + 128 | 0, 0, 16);
 HEAP32[$config + 496 >> 2] = 4488;
 $endCode = $config + 500 | 0;
 HEAP32[$endCode >> 2] = 3936;
 _fprintf(HEAP32[_stdout >> 2] | 0, 3904, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = 3896, tempInt) | 0) | 0;
 L2273 : do {
  if (($argc | 0) > 1) {
   $fileNr_062 = 0;
   $argn_063 = 1;
   L2274 : while (1) {
    $6 = HEAP32[$argv + ($argn_063 << 2) >> 2] | 0;
    L2276 : do {
     if ((HEAP8[$6] | 0) == 45) {
      $str_04855 = $6 + 1 | 0;
      $8 = HEAP8[$str_04855] | 0;
      if ($8 << 24 >> 24 == 0) {
       $argn_3 = $argn_063;
       $fileNr_1 = $fileNr_062;
       break;
      } else {
       $argn_1_ph57 = $argn_063;
       $str_04858 = $str_04855;
       $9 = $8;
      }
      while (1) {
       $str_050 = $str_04858;
       $10 = $9;
       while (1) {
        $conv10 = $10 << 24 >> 24;
        if (($conv10 | 0) == 104) {
         label = 2147;
         break L2274;
        } else if (($conv10 | 0) == 118) {
         HEAP32[2] = (HEAP32[2] | 0) + 1;
        } else if (($conv10 | 0) == 98) {
         label = 2151;
         break;
        } else if (($conv10 | 0) == 111) {
         label = 2152;
         break;
        } else if (($conv10 | 0) == 115) {
         label = 2156;
         break;
        } else if (($conv10 | 0) == 109) {
         label = 2157;
         break;
        } else {
         __Z8logErrorPKcz(3704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $conv10, tempInt) | 0);
        }
        $str_0 = $str_050 + 1 | 0;
        $13 = HEAP8[$str_0] | 0;
        if ($13 << 24 >> 24 == 0) {
         $argn_3 = $argn_1_ph57;
         $fileNr_1 = $fileNr_062;
         break L2276;
        } else {
         $str_050 = $str_0;
         $10 = $13;
        }
       }
       if ((label | 0) == 2151) {
        label = 0;
        $inc15 = $argn_1_ph57 + 1 | 0;
        HEAP32[70] = _fopen(HEAP32[$argv + ($inc15 << 2) >> 2] | 0, 2912) | 0;
        $argn_1_ph_be = $inc15;
       } else if ((label | 0) == 2152) {
        label = 0;
        $inc20 = $argn_1_ph57 + 1 | 0;
        $arrayidx21 = $argv + ($inc20 << 2) | 0;
        $call_i = _fopen(HEAP32[$arrayidx21 >> 2] | 0, 12048) | 0;
        HEAP32[$f_i_i >> 2] = $call_i;
        if (($call_i | 0) == 0) {
         label = 2153;
         break L2274;
        }
        __ZN11GCodeExport10addCommentEPKcz($gcode, 3784, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = 3896, tempInt) | 0);
        $argn_1_ph_be = $inc20;
       } else if ((label | 0) == 2156) {
        label = 0;
        $inc31 = $argn_1_ph57 + 1 | 0;
        __Z9setConfigR6ConfigPc($config, HEAP32[$argv + ($inc31 << 2) >> 2] | 0);
        $argn_1_ph_be = $inc31;
       } else if ((label | 0) == 2157) {
        label = 0;
        $inc35 = $argn_1_ph57 + 1 | 0;
        _sscanf(HEAP32[$argv + ($inc35 << 2) >> 2] | 0, 3744, (tempInt = STACKTOP, STACKTOP = STACKTOP + 72 | 0, HEAP32[tempInt >> 2] = $arrayidx2_i_i_i_i, HEAP32[tempInt + 8 >> 2] = $arrayidx11_i_i_i_i, HEAP32[tempInt + 16 >> 2] = $arrayidx20_i_i_i_i, HEAP32[tempInt + 24 >> 2] = $arrayidx5_i_i_i_i, HEAP32[tempInt + 32 >> 2] = $arrayidx14_i_i_i_i, HEAP32[tempInt + 40 >> 2] = $arrayidx23_i_i_i_i, HEAP32[tempInt + 48 >> 2] = $arrayidx8_i_i_i_i, HEAP32[tempInt + 56 >> 2] = $arrayidx17_i_i_i_i, HEAP32[tempInt + 64 >> 2] = $arrayidx26_i_i_i_i, tempInt) | 0) | 0;
        $argn_1_ph_be = $inc35;
       }
       $str_048 = $str_050 + 1 | 0;
       $19 = HEAP8[$str_048] | 0;
       if ($19 << 24 >> 24 == 0) {
        $argn_3 = $argn_1_ph_be;
        $fileNr_1 = $fileNr_062;
        break;
       } else {
        $argn_1_ph57 = $argn_1_ph_be;
        $str_04858 = $str_048;
        $9 = $19;
       }
      }
     } else {
      if ((HEAP32[$f_i_i >> 2] | 0) == 0) {
       label = 2161;
       break L2274;
      }
      __Z11processFilePKcR6ConfigR11GCodeExportb($6, $config, $gcode, ($fileNr_062 | 0) == 0);
      $argn_3 = $argn_063;
      $fileNr_1 = $fileNr_062 + 1 | 0;
     }
    } while (0);
    $inc87 = $argn_3 + 1 | 0;
    if (($inc87 | 0) < ($argc | 0)) {
     $fileNr_062 = $fileNr_1;
     $argn_063 = $inc87;
    } else {
     label = 2165;
     break L2273;
    }
   }
   if ((label | 0) == 2147) {
    _puts(48) | 0;
    _exit(1);
    return 0;
   } else if ((label | 0) == 2161) {
    __Z8logErrorPKcz(3672, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0);
    $retval_0_ph = 1;
    break;
   } else if ((label | 0) == 2153) {
    __Z8logErrorPKcz(3824, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$arrayidx21 >> 2], tempInt) | 0);
    _exit(1);
    return 0;
   }
  } else {
   label = 2165;
  }
 } while (0);
 if ((label | 0) == 2165) {
  $21 = HEAP32[$f_i_i >> 2] | 0;
  if (($21 | 0) == 0) {
   $retval_042 = 0;
   STACKTOP = __stackBase__;
   return $retval_042 | 0;
  }
  if ((HEAP32[$currentFanSpeed_i_i >> 2] | 0) == 0) {
   $24 = $21;
  } else {
   _fwrite(3528, 5, 1, $21 | 0) | 0;
   HEAP32[$currentFanSpeed_i_i >> 2] = 0;
   $24 = HEAP32[$f_i_i >> 2] | 0;
  }
  $25 = HEAP32[$endCode >> 2] | 0;
  _fprintf($24 | 0, 2864, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $25, tempInt) | 0) | 0;
  __Z4_logPKcz(3656, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = ~~+HEAPF64[$gcode + 344 >> 3], tempInt) | 0);
  __Z4_logPKcz(3640, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = ~~(+HEAPF64[$totalFilament_i_i >> 3] + +HEAPF64[$extrusionAmount_i_i >> 3]), tempInt) | 0);
  $retval_0_ph = 0;
 }
 $_pr = HEAP32[$f_i_i >> 2] | 0;
 if (($_pr | 0) == 0) {
  $retval_042 = $retval_0_ph;
  STACKTOP = __stackBase__;
  return $retval_042 | 0;
 }
 _fclose($_pr | 0) | 0;
 $retval_042 = $retval_0_ph;
 STACKTOP = __stackBase__;
 return $retval_042 | 0;
}
function __ZNSt3__16vectorI18SliceVolumeStorageNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_069 = 0, $retval_i_070 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $incdec_ptr = 0, $5 = 0, $6 = 0, $__v_sroa_1_4_load5563 = 0, $__end1_addr_i_015_i = 0, $_pre_i = 0, $_pre = 0, $7 = 0, $incdec_ptr_i_i_i_i_i19 = 0, $__begin__i_i_i_i_i27 = 0, $8 = 0, $__end__i_i_i_i_i_i_i_i29 = 0, $9 = 0, $10 = 0, $incdec_ptr_i_i_i_i_i_i_i_i32 = 0, $__begin__i_i_i_i_i_i_i_i_i_i33 = 0, $11 = 0, $12 = 0, $__end__i_i_i_i_i_i_i_i_i_i_i_i_i38 = 0, $13 = 0, $incdec_ptr_i_i_i_i_i_i_i_i_i_i_i_i_i42 = 0, $18 = 0, $20 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = ((HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 12 & -1;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 357913941) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_div_i_i_i = ((HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 12 & -1;
 if ($sub_ptr_div_i_i_i >>> 0 > 178956969) {
  $retval_i_069 = 357913941;
  label = 2180;
 } else {
  $mul_i = $sub_ptr_div_i_i_i << 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_070 = 0;
  } else {
   $retval_i_069 = $_sroa_speculated;
   label = 2180;
  }
 }
 if ((label | 0) == 2180) {
  $cond_i_i = __Znwj($retval_i_069 * 12 & -1) | 0;
  $retval_i_070 = $retval_i_069;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i * 12 & -1) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_070 * 12 & -1) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  __ZN18SliceVolumeStorageC1ERKS_($add_ptr_i_i, $__x);
 }
 $incdec_ptr = $cond_i_i + ($add * 12 & -1) | 0;
 $5 = HEAP32[$__begin__i >> 2] | 0;
 $6 = HEAP32[$__end__i >> 2] | 0;
 do {
  if (($6 | 0) == ($5 | 0)) {
   HEAP32[$__begin__i >> 2] = $add_ptr_i_i;
   HEAP32[$__end__i >> 2] = $incdec_ptr;
   HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
   $20 = $5;
  } else {
   $__end1_addr_i_015_i = $6;
   $__v_sroa_1_4_load5563 = $add_ptr_i_i;
   do {
    $__v_sroa_1_4_load5563 = $__v_sroa_1_4_load5563 - 12 | 0;
    $__end1_addr_i_015_i = $__end1_addr_i_015_i - 12 | 0;
    if (($__v_sroa_1_4_load5563 | 0) != 0) {
     __ZN18SliceVolumeStorageC1ERKS_($__v_sroa_1_4_load5563, $__end1_addr_i_015_i);
    }
   } while (($__end1_addr_i_015_i | 0) != ($5 | 0));
   $_pre_i = HEAP32[$__begin__i >> 2] | 0;
   $_pre = HEAP32[$__end__i >> 2] | 0;
   HEAP32[$__begin__i >> 2] = $__v_sroa_1_4_load5563;
   HEAP32[$__end__i >> 2] = $incdec_ptr;
   HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
   if (($_pre_i | 0) == ($_pre | 0)) {
    $20 = $_pre_i;
    break;
   } else {
    $7 = $_pre;
   }
   while (1) {
    $incdec_ptr_i_i_i_i_i19 = $7 - 12 | 0;
    $__begin__i_i_i_i_i27 = $incdec_ptr_i_i_i_i_i19 | 0;
    $8 = HEAP32[$__begin__i_i_i_i_i27 >> 2] | 0;
    if (($8 | 0) != 0) {
     $__end__i_i_i_i_i_i_i_i29 = $7 - 12 + 4 | 0;
     $9 = HEAP32[$__end__i_i_i_i_i_i_i_i29 >> 2] | 0;
     if (($8 | 0) == ($9 | 0)) {
      $18 = $8;
     } else {
      $10 = $9;
      while (1) {
       $incdec_ptr_i_i_i_i_i_i_i_i32 = $10 - 12 | 0;
       HEAP32[$__end__i_i_i_i_i_i_i_i29 >> 2] = $incdec_ptr_i_i_i_i_i_i_i_i32;
       $__begin__i_i_i_i_i_i_i_i_i_i33 = $incdec_ptr_i_i_i_i_i_i_i_i32 | 0;
       $11 = HEAP32[$__begin__i_i_i_i_i_i_i_i_i_i33 >> 2] | 0;
       if (($11 | 0) == 0) {
        $12 = $incdec_ptr_i_i_i_i_i_i_i_i32;
       } else {
        $__end__i_i_i_i_i_i_i_i_i_i_i_i_i38 = $10 - 12 + 4 | 0;
        while (1) {
         $13 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i_i_i38 >> 2] | 0;
         if (($11 | 0) == ($13 | 0)) {
          break;
         }
         $incdec_ptr_i_i_i_i_i_i_i_i_i_i_i_i_i42 = $13 - 96 | 0;
         HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i_i_i38 >> 2] = $incdec_ptr_i_i_i_i_i_i_i_i_i_i_i_i_i42;
         __ZN14SliceLayerPartD2Ev($incdec_ptr_i_i_i_i_i_i_i_i_i_i_i_i_i42);
        }
        __ZdlPv(HEAP32[$__begin__i_i_i_i_i_i_i_i_i_i33 >> 2] | 0);
        $12 = HEAP32[$__end__i_i_i_i_i_i_i_i29 >> 2] | 0;
       }
       if (($8 | 0) == ($12 | 0)) {
        break;
       } else {
        $10 = $12;
       }
      }
      $18 = HEAP32[$__begin__i_i_i_i_i27 >> 2] | 0;
     }
     __ZdlPv($18);
    }
    if (($_pre_i | 0) == ($incdec_ptr_i_i_i_i_i19 | 0)) {
     $20 = $_pre_i;
     break;
    } else {
     $7 = $incdec_ptr_i_i_i_i_i19;
    }
   }
  }
 } while (0);
 if (($20 | 0) == 0) {
  return;
 }
 __ZdlPv($20);
 return;
}
function __ZNSt3__113__vector_baseINS_6vectorINS1_IN10ClipperLib8IntPointENS_9allocatorIS3_EEEENS4_IS6_EEEENS4_IS8_EEED2Ev($this) {
 $this = $this | 0;
 var $__begin_ = 0, $0 = 0, $__end__i_i_i = 0, $1 = 0, $2 = 0, $incdec_ptr_i_i_i = 0, $__begin__i_i_i = 0, $3 = 0, $4 = 0, $__end__i_i_i_i_i_i = 0, $5 = 0, $6 = 0, $incdec_ptr_i_i_i_i_i_i = 0, $7 = 0, $8 = 0, $9 = 0, $__end__i_i_i_i_i_i_i_i_i = 0, $10 = 0, $15 = 0, $17 = 0;
 $__begin_ = $this | 0;
 $0 = HEAP32[$__begin_ >> 2] | 0;
 if (($0 | 0) == 0) {
  return;
 }
 $__end__i_i_i = $this + 4 | 0;
 $1 = HEAP32[$__end__i_i_i >> 2] | 0;
 if (($0 | 0) == ($1 | 0)) {
  $17 = $0;
 } else {
  $2 = $1;
  while (1) {
   $incdec_ptr_i_i_i = $2 - 12 | 0;
   HEAP32[$__end__i_i_i >> 2] = $incdec_ptr_i_i_i;
   $__begin__i_i_i = $incdec_ptr_i_i_i | 0;
   $3 = HEAP32[$__begin__i_i_i >> 2] | 0;
   if (($3 | 0) == 0) {
    $4 = $incdec_ptr_i_i_i;
   } else {
    $__end__i_i_i_i_i_i = $2 - 12 + 4 | 0;
    $5 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
    if (($3 | 0) == ($5 | 0)) {
     $15 = $3;
    } else {
     $6 = $5;
     while (1) {
      $incdec_ptr_i_i_i_i_i_i = $6 - 12 | 0;
      HEAP32[$__end__i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i;
      $7 = HEAP32[$incdec_ptr_i_i_i_i_i_i >> 2] | 0;
      $8 = $7;
      if (($7 | 0) == 0) {
       $9 = $incdec_ptr_i_i_i_i_i_i;
      } else {
       $__end__i_i_i_i_i_i_i_i_i = $6 - 12 + 4 | 0;
       $10 = HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] | 0;
       if (($7 | 0) != ($10 | 0)) {
        HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] = $10 + ((($10 - 16 + (-$8 | 0) | 0) >>> 4 ^ -1) << 4);
       }
       __ZdlPv($7);
       $9 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
      }
      if (($3 | 0) == ($9 | 0)) {
       break;
      } else {
       $6 = $9;
      }
     }
     $15 = HEAP32[$__begin__i_i_i >> 2] | 0;
    }
    __ZdlPv($15);
    $4 = HEAP32[$__end__i_i_i >> 2] | 0;
   }
   if (($0 | 0) == ($4 | 0)) {
    break;
   } else {
    $2 = $4;
   }
  }
  $17 = HEAP32[$__begin_ >> 2] | 0;
 }
 __ZdlPv($17);
 return;
}
function __ZN18SliceVolumeStorageC1ERKS_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $__begin__i_i_i_i = 0, $__end__i_i_i_i = 0, $__first__i_i_i_i_i_i_i = 0, $__end__i18_i_i_i = 0, $1 = 0, $__begin__i19_i_i_i = 0, $2 = 0, $sub_ptr_sub_i_i_i_i = 0, $sub_ptr_div_i_i_i_i = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__first_addr_04_i_i_i_i = 0, $8 = 0;
 $__begin__i_i_i_i = $this | 0;
 HEAP32[$__begin__i_i_i_i >> 2] = 0;
 $__end__i_i_i_i = $this + 4 | 0;
 HEAP32[$__end__i_i_i_i >> 2] = 0;
 $__first__i_i_i_i_i_i_i = $this + 8 | 0;
 HEAP32[$__first__i_i_i_i_i_i_i >> 2] = 0;
 $__end__i18_i_i_i = $0 + 4 | 0;
 $1 = HEAP32[$__end__i18_i_i_i >> 2] | 0;
 $__begin__i19_i_i_i = $0 | 0;
 $2 = HEAP32[$__begin__i19_i_i_i >> 2] | 0;
 if (($1 | 0) == ($2 | 0)) {
  return;
 }
 $sub_ptr_sub_i_i_i_i = $1 - $2 | 0;
 $sub_ptr_div_i_i_i_i = ($sub_ptr_sub_i_i_i_i | 0) / 12 & -1;
 if ($sub_ptr_div_i_i_i_i >>> 0 > 357913941) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $4 = __Znwj($sub_ptr_sub_i_i_i_i) | 0;
 HEAP32[$__end__i_i_i_i >> 2] = $4;
 HEAP32[$__begin__i_i_i_i >> 2] = $4;
 HEAP32[$__first__i_i_i_i_i_i_i >> 2] = $4 + ($sub_ptr_div_i_i_i_i * 12 & -1);
 $5 = HEAP32[$__begin__i19_i_i_i >> 2] | 0;
 $6 = HEAP32[$__end__i18_i_i_i >> 2] | 0;
 if (($5 | 0) == ($6 | 0)) {
  return;
 } else {
  $__first_addr_04_i_i_i_i = $5;
  $7 = $4;
 }
 do {
  if (($7 | 0) == 0) {
   $8 = 0;
  } else {
   __ZNSt3__16vectorI14SliceLayerPartNS_9allocatorIS1_EEEC2ERKS4_($7 | 0, $__first_addr_04_i_i_i_i | 0);
   $8 = HEAP32[$__end__i_i_i_i >> 2] | 0;
  }
  $7 = $8 + 12 | 0;
  HEAP32[$__end__i_i_i_i >> 2] = $7;
  $__first_addr_04_i_i_i_i = $__first_addr_04_i_i_i_i + 12 | 0;
 } while (($__first_addr_04_i_i_i_i | 0) != ($6 | 0));
 return;
}
function __ZNSt3__16vectorI14SliceLayerPartNS_9allocatorIS1_EEEC2ERKS4_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__begin__i = 0, $__end__i = 0, $__first__i_i_i_i = 0, $__end__i18 = 0, $0 = 0, $__begin__i19 = 0, $1 = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__first_addr_04_i = 0, $7 = 0;
 $__begin__i = $this | 0;
 HEAP32[$__begin__i >> 2] = 0;
 $__end__i = $this + 4 | 0;
 HEAP32[$__end__i >> 2] = 0;
 $__first__i_i_i_i = $this + 8 | 0;
 HEAP32[$__first__i_i_i_i >> 2] = 0;
 $__end__i18 = $__x + 4 | 0;
 $0 = HEAP32[$__end__i18 >> 2] | 0;
 $__begin__i19 = $__x | 0;
 $1 = HEAP32[$__begin__i19 >> 2] | 0;
 if (($0 | 0) == ($1 | 0)) {
  return;
 }
 $sub_ptr_sub_i = $0 - $1 | 0;
 $sub_ptr_div_i = ($sub_ptr_sub_i | 0) / 96 & -1;
 if ($sub_ptr_div_i >>> 0 > 44739242) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $3 = __Znwj($sub_ptr_sub_i) | 0;
 HEAP32[$__end__i >> 2] = $3;
 HEAP32[$__begin__i >> 2] = $3;
 HEAP32[$__first__i_i_i_i >> 2] = $3 + ($sub_ptr_div_i * 96 & -1);
 $4 = HEAP32[$__begin__i19 >> 2] | 0;
 $5 = HEAP32[$__end__i18 >> 2] | 0;
 if (($4 | 0) == ($5 | 0)) {
  return;
 } else {
  $__first_addr_04_i = $4;
  $6 = $3;
 }
 do {
  if (($6 | 0) == 0) {
   $7 = 0;
  } else {
   __ZN14SliceLayerPartC2ERKS_($6, $__first_addr_04_i);
   $7 = HEAP32[$__end__i >> 2] | 0;
  }
  $6 = $7 + 96 | 0;
  HEAP32[$__end__i >> 2] = $6;
  $__first_addr_04_i = $__first_addr_04_i + 96 | 0;
 } while (($__first_addr_04_i | 0) != ($5 | 0));
 return;
}
function __ZN14SliceLayerPartC2ERKS_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $__first__i_i_i_i_i_i = 0, $__end__i18_i_i = 0, $4 = 0, $__begin__i19_i_i = 0, $5 = 0, $sub_ptr_sub_i_i_i = 0, $sub_ptr_div_i_i_i = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $__first_addr_04_i_i_i = 0, $11 = 0;
 $1 = $this;
 $2 = $0;
 HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$1 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$1 + 12 >> 2] = HEAP32[$2 + 12 >> 2];
 HEAP32[$1 + 16 >> 2] = HEAP32[$2 + 16 >> 2];
 HEAP32[$1 + 20 >> 2] = HEAP32[$2 + 20 >> 2];
 HEAP32[$1 + 24 >> 2] = HEAP32[$2 + 24 >> 2];
 HEAP32[$1 + 28 >> 2] = HEAP32[$2 + 28 >> 2];
 __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($this + 32 | 0, $0 + 32 | 0);
 __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($this + 44 | 0, $0 + 44 | 0);
 $__begin__i_i_i = $this + 56 | 0;
 HEAP32[$__begin__i_i_i >> 2] = 0;
 $__end__i_i_i = $this + 60 | 0;
 HEAP32[$__end__i_i_i >> 2] = 0;
 $__first__i_i_i_i_i_i = $this + 64 | 0;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = 0;
 $__end__i18_i_i = $0 + 60 | 0;
 $4 = HEAP32[$__end__i18_i_i >> 2] | 0;
 $__begin__i19_i_i = $0 + 56 | 0;
 $5 = HEAP32[$__begin__i19_i_i >> 2] | 0;
 do {
  if (($4 | 0) != ($5 | 0)) {
   $sub_ptr_sub_i_i_i = $4 - $5 | 0;
   $sub_ptr_div_i_i_i = ($sub_ptr_sub_i_i_i | 0) / 12 & -1;
   if ($sub_ptr_div_i_i_i >>> 0 > 357913941) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
   }
   $7 = __Znwj($sub_ptr_sub_i_i_i) | 0;
   HEAP32[$__end__i_i_i >> 2] = $7;
   HEAP32[$__begin__i_i_i >> 2] = $7;
   HEAP32[$__first__i_i_i_i_i_i >> 2] = $7 + ($sub_ptr_div_i_i_i * 12 & -1);
   $8 = HEAP32[$__begin__i19_i_i >> 2] | 0;
   $9 = HEAP32[$__end__i18_i_i >> 2] | 0;
   if (($8 | 0) == ($9 | 0)) {
    break;
   } else {
    $__first_addr_04_i_i_i = $8;
    $10 = $7;
   }
   do {
    if (($10 | 0) == 0) {
     $11 = 0;
    } else {
     __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($10, $__first_addr_04_i_i_i);
     $11 = HEAP32[$__end__i_i_i >> 2] | 0;
    }
    $10 = $11 + 12 | 0;
    HEAP32[$__end__i_i_i >> 2] = $10;
    $__first_addr_04_i_i_i = $__first_addr_04_i_i_i + 12 | 0;
   } while (($__first_addr_04_i_i_i | 0) != ($9 | 0));
  }
 } while (0);
 __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($this + 68 | 0, $0 + 68 | 0);
 __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($this + 80 | 0, $0 + 80 | 0);
 HEAP32[$this + 92 >> 2] = HEAP32[$0 + 92 >> 2];
 return;
}
function __ZNSt3__16vectorIP6SlicerNS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_sub_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_022 = 0, $retval_i_023 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $incdec_ptr = 0, $5 = 0, $sub_ptr_sub_i_i = 0, $add_ptr_i_i13 = 0, $7 = 0, $8 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = (HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i >> 2;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_sub_i_i_i = (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0;
 if ($sub_ptr_sub_i_i_i >> 2 >>> 0 > 536870910) {
  $retval_i_022 = 1073741823;
  label = 2342;
 } else {
  $mul_i = $sub_ptr_sub_i_i_i >> 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_023 = 0;
  } else {
   $retval_i_022 = $_sroa_speculated;
   label = 2342;
  }
 }
 if ((label | 0) == 2342) {
  $cond_i_i = __Znwj($retval_i_022 << 2) | 0;
  $retval_i_023 = $retval_i_022;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i << 2) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_023 << 2) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  HEAP32[$add_ptr_i_i >> 2] = HEAP32[$__x >> 2];
 }
 $incdec_ptr = $cond_i_i + ($add << 2) | 0;
 $5 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i_i = (HEAP32[$__end__i >> 2] | 0) - $5 | 0;
 $add_ptr_i_i13 = $cond_i_i + ($sub_ptr_div_i - ($sub_ptr_sub_i_i >> 2) << 2) | 0;
 $7 = $add_ptr_i_i13;
 $8 = $5;
 _memcpy($7 | 0, $8 | 0, $sub_ptr_sub_i_i) | 0;
 HEAP32[$__begin__i >> 2] = $add_ptr_i_i13;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 if (($5 | 0) == 0) {
  return;
 }
 __ZdlPv($8);
 return;
}
function __ZNSt3__16vectorI12SupportPointNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_sub_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_022 = 0, $retval_i_023 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $4 = 0, $5 = 0, $incdec_ptr = 0, $6 = 0, $sub_ptr_sub_i_i = 0, $add_ptr_i_i13 = 0, $8 = 0, $9 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = (HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i >> 4;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 268435455) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_sub_i_i_i = (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0;
 if ($sub_ptr_sub_i_i_i >> 4 >>> 0 > 134217726) {
  $retval_i_022 = 268435455;
  label = 2354;
 } else {
  $mul_i = $sub_ptr_sub_i_i_i >> 3;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_023 = 0;
  } else {
   $retval_i_022 = $_sroa_speculated;
   label = 2354;
  }
 }
 if ((label | 0) == 2354) {
  $cond_i_i = __Znwj($retval_i_022 << 4) | 0;
  $retval_i_023 = $retval_i_022;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i << 4) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_023 << 4) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  $4 = $add_ptr_i_i;
  $5 = $__x;
  HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  HEAP32[$4 + 12 >> 2] = HEAP32[$5 + 12 >> 2];
 }
 $incdec_ptr = $cond_i_i + ($add << 4) | 0;
 $6 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i_i = (HEAP32[$__end__i >> 2] | 0) - $6 | 0;
 $add_ptr_i_i13 = $cond_i_i + ($sub_ptr_div_i - ($sub_ptr_sub_i_i >> 4) << 4) | 0;
 $8 = $add_ptr_i_i13;
 $9 = $6;
 _memcpy($8 | 0, $9 | 0, $sub_ptr_sub_i_i) | 0;
 HEAP32[$__begin__i >> 2] = $add_ptr_i_i13;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 if (($6 | 0) == 0) {
  return;
 }
 __ZdlPv($9);
 return;
}
function __ZNSt3__16vectorIxNS_9allocatorIxEEE21__push_back_slow_pathIKxEEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_sub_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_022 = 0, $retval_i_023 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $4$1 = 0, $incdec_ptr = 0, $5 = 0, $sub_ptr_sub_i_i = 0, $add_ptr_i_i13 = 0, $7 = 0, $8 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = (HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i >> 3;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 536870911) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_sub_i_i_i = (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0;
 if ($sub_ptr_sub_i_i_i >> 3 >>> 0 > 268435454) {
  $retval_i_022 = 536870911;
  label = 2366;
 } else {
  $mul_i = $sub_ptr_sub_i_i_i >> 2;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_023 = 0;
  } else {
   $retval_i_022 = $_sroa_speculated;
   label = 2366;
  }
 }
 if ((label | 0) == 2366) {
  $cond_i_i = __Znwj($retval_i_022 << 3) | 0;
  $retval_i_023 = $retval_i_022;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i << 3) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_023 << 3) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  $4$1 = HEAP32[$__x + 4 >> 2] | 0;
  HEAP32[$add_ptr_i_i >> 2] = HEAP32[$__x >> 2];
  HEAP32[$add_ptr_i_i + 4 >> 2] = $4$1;
 }
 $incdec_ptr = $cond_i_i + ($add << 3) | 0;
 $5 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i_i = (HEAP32[$__end__i >> 2] | 0) - $5 | 0;
 $add_ptr_i_i13 = $cond_i_i + ($sub_ptr_div_i - ($sub_ptr_sub_i_i >> 3) << 3) | 0;
 $7 = $add_ptr_i_i13;
 $8 = $5;
 _memcpy($7 | 0, $8 | 0, $sub_ptr_sub_i_i) | 0;
 HEAP32[$__begin__i >> 2] = $add_ptr_i_i13;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 if (($5 | 0) == 0) {
  return;
 }
 __ZdlPv($8);
 return;
}
function __ZNSt3__16vectorINS0_INS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE6assignIPS7_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $sub_ptr_rhs_cast_i_i = 0, $sub_ptr_div_i_i = 0, $__first__i_i_i_i_i = 0, $0 = 0, $__begin__i_i = 0, $1 = 0, $sub_ptr_rhs_cast_i_i14 = 0, $__end__i = 0, $sub_ptr_div_i = 0, $__mid_0 = 0, $__growing_0_off0 = 0, $5 = 0, $__first_addr_i_i44_084 = 0, $__result_addr_i_i_083 = 0, $incdec_ptr_i_i = 0, $__result_addr_i_i_0_lcssa = 0, $8 = 0, $9 = 0, $__first_addr_04_i = 0, $10 = 0, $11 = 0, $incdec_ptr_i_i_i = 0, $__begin__i_i_i = 0, $12 = 0, $13 = 0, $__end__i_i_i_i_i_i = 0, $14 = 0, $15 = 0, $incdec_ptr_i_i_i_i_i_i = 0, $16 = 0, $17 = 0, $18 = 0, $__end__i_i_i_i_i_i_i_i_i = 0, $19 = 0, $24 = 0, $__end__i_i_i_i_i = 0, $26 = 0, $27 = 0, $incdec_ptr_i_i_i_i_i = 0, $__begin__i_i_i32 = 0, $28 = 0, $__end__i_i_i_i_i_i34 = 0, $29 = 0, $30 = 0, $incdec_ptr_i_i_i_i_i_i37 = 0, $31 = 0, $32 = 0, $33 = 0, $__end__i_i_i_i_i_i_i_i_i43 = 0, $34 = 0, $39 = 0, $41 = 0, $42 = 0, $44 = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_078 = 0, $45 = 0, $__end__i60 = 0, $46 = 0, $__first_addr_04_i67 = 0, $47 = 0;
 $sub_ptr_rhs_cast_i_i = $__first;
 $sub_ptr_div_i_i = ($__last - $sub_ptr_rhs_cast_i_i | 0) / 12 & -1;
 $__first__i_i_i_i_i = $this + 8 | 0;
 $0 = HEAP32[$__first__i_i_i_i_i >> 2] | 0;
 $__begin__i_i = $this | 0;
 $1 = HEAP32[$__begin__i_i >> 2] | 0;
 $sub_ptr_rhs_cast_i_i14 = $1;
 if ($sub_ptr_div_i_i >>> 0 > (($0 - $sub_ptr_rhs_cast_i_i14 | 0) / 12 & -1) >>> 0) {
  if (($1 | 0) == 0) {
   $44 = $0;
  } else {
   $__end__i_i_i_i_i = $this + 4 | 0;
   $26 = HEAP32[$__end__i_i_i_i_i >> 2] | 0;
   if (($1 | 0) == ($26 | 0)) {
    $42 = $1;
   } else {
    $27 = $26;
    while (1) {
     $incdec_ptr_i_i_i_i_i = $27 - 12 | 0;
     HEAP32[$__end__i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i;
     $__begin__i_i_i32 = $incdec_ptr_i_i_i_i_i | 0;
     $28 = HEAP32[$__begin__i_i_i32 >> 2] | 0;
     if (($28 | 0) == 0) {
      $41 = $incdec_ptr_i_i_i_i_i;
     } else {
      $__end__i_i_i_i_i_i34 = $27 - 12 + 4 | 0;
      $29 = HEAP32[$__end__i_i_i_i_i_i34 >> 2] | 0;
      if (($28 | 0) == ($29 | 0)) {
       $39 = $28;
      } else {
       $30 = $29;
       while (1) {
        $incdec_ptr_i_i_i_i_i_i37 = $30 - 12 | 0;
        HEAP32[$__end__i_i_i_i_i_i34 >> 2] = $incdec_ptr_i_i_i_i_i_i37;
        $31 = HEAP32[$incdec_ptr_i_i_i_i_i_i37 >> 2] | 0;
        $32 = $31;
        if (($31 | 0) == 0) {
         $33 = $incdec_ptr_i_i_i_i_i_i37;
        } else {
         $__end__i_i_i_i_i_i_i_i_i43 = $30 - 12 + 4 | 0;
         $34 = HEAP32[$__end__i_i_i_i_i_i_i_i_i43 >> 2] | 0;
         if (($31 | 0) != ($34 | 0)) {
          HEAP32[$__end__i_i_i_i_i_i_i_i_i43 >> 2] = $34 + ((($34 - 16 + (-$32 | 0) | 0) >>> 4 ^ -1) << 4);
         }
         __ZdlPv($31);
         $33 = HEAP32[$__end__i_i_i_i_i_i34 >> 2] | 0;
        }
        if (($28 | 0) == ($33 | 0)) {
         break;
        } else {
         $30 = $33;
        }
       }
       $39 = HEAP32[$__begin__i_i_i32 >> 2] | 0;
      }
      __ZdlPv($39);
      $41 = HEAP32[$__end__i_i_i_i_i >> 2] | 0;
     }
     if (($1 | 0) == ($41 | 0)) {
      break;
     } else {
      $27 = $41;
     }
    }
    $42 = HEAP32[$__begin__i_i >> 2] | 0;
   }
   __ZdlPv($42);
   HEAP32[$__first__i_i_i_i_i >> 2] = 0;
   HEAP32[$__end__i_i_i_i_i >> 2] = 0;
   HEAP32[$__begin__i_i >> 2] = 0;
   $44 = 0;
  }
  if ($sub_ptr_div_i_i >>> 0 > 357913941) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
  }
  $sub_ptr_div_i_i_i = ($44 | 0) / 12 & -1;
  do {
   if ($sub_ptr_div_i_i_i >>> 0 > 178956969) {
    $retval_i_078 = 357913941;
   } else {
    $mul_i = $sub_ptr_div_i_i_i << 1;
    $_sroa_speculated = $mul_i >>> 0 < $sub_ptr_div_i_i >>> 0 ? $sub_ptr_div_i_i : $mul_i;
    if ($_sroa_speculated >>> 0 <= 357913941) {
     $retval_i_078 = $_sroa_speculated;
     break;
    }
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
   }
  } while (0);
  $45 = __Znwj($retval_i_078 * 12 & -1) | 0;
  $__end__i60 = $this + 4 | 0;
  HEAP32[$__end__i60 >> 2] = $45;
  HEAP32[$__begin__i_i >> 2] = $45;
  HEAP32[$__first__i_i_i_i_i >> 2] = $45 + ($retval_i_078 * 12 & -1);
  if (($__first | 0) == ($__last | 0)) {
   return;
  } else {
   $__first_addr_04_i67 = $__first;
   $46 = $45;
  }
  do {
   if (($46 | 0) == 0) {
    $47 = 0;
   } else {
    __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($46, $__first_addr_04_i67);
    $47 = HEAP32[$__end__i60 >> 2] | 0;
   }
   $46 = $47 + 12 | 0;
   HEAP32[$__end__i60 >> 2] = $46;
   $__first_addr_04_i67 = $__first_addr_04_i67 + 12 | 0;
  } while (($__first_addr_04_i67 | 0) != ($__last | 0));
  return;
 }
 $__end__i = $this + 4 | 0;
 $sub_ptr_div_i = ((HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i_i14 | 0) / 12 & -1;
 if ($sub_ptr_div_i_i >>> 0 > $sub_ptr_div_i >>> 0) {
  $__growing_0_off0 = 1;
  $__mid_0 = $__first + ($sub_ptr_div_i * 12 & -1) | 0;
 } else {
  $__growing_0_off0 = 0;
  $__mid_0 = $__last;
 }
 if (($__mid_0 | 0) == ($__first | 0)) {
  $__result_addr_i_i_0_lcssa = $1;
 } else {
  $5 = ((($__mid_0 - 12 + (-$sub_ptr_rhs_cast_i_i | 0) | 0) >>> 0) / 12 >>> 0) + 1 | 0;
  $__result_addr_i_i_083 = $1;
  $__first_addr_i_i44_084 = $__first;
  while (1) {
   if (($__result_addr_i_i_083 | 0) != ($__first_addr_i_i44_084 | 0)) {
    __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE6assignIPS5_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_($__result_addr_i_i_083, HEAP32[$__first_addr_i_i44_084 >> 2] | 0, HEAP32[$__first_addr_i_i44_084 + 4 >> 2] | 0);
   }
   $incdec_ptr_i_i = $__first_addr_i_i44_084 + 12 | 0;
   if (($incdec_ptr_i_i | 0) == ($__mid_0 | 0)) {
    break;
   } else {
    $__result_addr_i_i_083 = $__result_addr_i_i_083 + 12 | 0;
    $__first_addr_i_i44_084 = $incdec_ptr_i_i;
   }
  }
  $__result_addr_i_i_0_lcssa = $1 + ($5 * 12 & -1) | 0;
 }
 if ($__growing_0_off0) {
  if (($__mid_0 | 0) == ($__last | 0)) {
   return;
  }
  $__first_addr_04_i = $__mid_0;
  $9 = HEAP32[$__end__i >> 2] | 0;
  do {
   if (($9 | 0) == 0) {
    $10 = 0;
   } else {
    __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($9, $__first_addr_04_i);
    $10 = HEAP32[$__end__i >> 2] | 0;
   }
   $9 = $10 + 12 | 0;
   HEAP32[$__end__i >> 2] = $9;
   $__first_addr_04_i = $__first_addr_04_i + 12 | 0;
  } while (($__first_addr_04_i | 0) != ($__last | 0));
  return;
 }
 $8 = HEAP32[$__end__i >> 2] | 0;
 if (($__result_addr_i_i_0_lcssa | 0) == ($8 | 0)) {
  return;
 } else {
  $11 = $8;
 }
 while (1) {
  $incdec_ptr_i_i_i = $11 - 12 | 0;
  HEAP32[$__end__i >> 2] = $incdec_ptr_i_i_i;
  $__begin__i_i_i = $incdec_ptr_i_i_i | 0;
  $12 = HEAP32[$__begin__i_i_i >> 2] | 0;
  if (($12 | 0) == 0) {
   $13 = $incdec_ptr_i_i_i;
  } else {
   $__end__i_i_i_i_i_i = $11 - 12 + 4 | 0;
   $14 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
   if (($12 | 0) == ($14 | 0)) {
    $24 = $12;
   } else {
    $15 = $14;
    while (1) {
     $incdec_ptr_i_i_i_i_i_i = $15 - 12 | 0;
     HEAP32[$__end__i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i;
     $16 = HEAP32[$incdec_ptr_i_i_i_i_i_i >> 2] | 0;
     $17 = $16;
     if (($16 | 0) == 0) {
      $18 = $incdec_ptr_i_i_i_i_i_i;
     } else {
      $__end__i_i_i_i_i_i_i_i_i = $15 - 12 + 4 | 0;
      $19 = HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] | 0;
      if (($16 | 0) != ($19 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] = $19 + ((($19 - 16 + (-$17 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($16);
      $18 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
     }
     if (($12 | 0) == ($18 | 0)) {
      break;
     } else {
      $15 = $18;
     }
    }
    $24 = HEAP32[$__begin__i_i_i >> 2] | 0;
   }
   __ZdlPv($24);
   $13 = HEAP32[$__end__i >> 2] | 0;
  }
  if (($__result_addr_i_i_0_lcssa | 0) == ($13 | 0)) {
   break;
  } else {
   $11 = $13;
  }
 }
 return;
}
function __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE6assignIPS5_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $sub_ptr_rhs_cast_i_i = 0, $sub_ptr_div_i_i = 0, $__first__i_i_i_i_i = 0, $0 = 0, $__begin__i_i = 0, $1 = 0, $sub_ptr_rhs_cast_i_i14 = 0, $__end__i = 0, $sub_ptr_div_i = 0, $__mid_0 = 0, $__growing_0_off0 = 0, $5 = 0, $__first_addr_i_i44_059 = 0, $__result_addr_i_i_058 = 0, $incdec_ptr_i_i = 0, $__result_addr_i_i_0_lcssa = 0, $8 = 0, $9 = 0, $__first_addr_04_i = 0, $10 = 0, $11 = 0, $incdec_ptr_i_i_i = 0, $12 = 0, $13 = 0, $14 = 0, $__end__i_i_i_i_i_i = 0, $15 = 0, $__end__i_i_i_i_i = 0, $20 = 0, $21 = 0, $incdec_ptr_i_i_i_i_i = 0, $22 = 0, $23 = 0, $24 = 0, $__end__i_i_i_i_i_i_i = 0, $25 = 0, $30 = 0, $32 = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_053 = 0, $33 = 0, $__end__i35 = 0, $34 = 0, $__first_addr_04_i42 = 0, $35 = 0;
 $sub_ptr_rhs_cast_i_i = $__first;
 $sub_ptr_div_i_i = ($__last - $sub_ptr_rhs_cast_i_i | 0) / 12 & -1;
 $__first__i_i_i_i_i = $this + 8 | 0;
 $0 = HEAP32[$__first__i_i_i_i_i >> 2] | 0;
 $__begin__i_i = $this | 0;
 $1 = HEAP32[$__begin__i_i >> 2] | 0;
 $sub_ptr_rhs_cast_i_i14 = $1;
 if ($sub_ptr_div_i_i >>> 0 > (($0 - $sub_ptr_rhs_cast_i_i14 | 0) / 12 & -1) >>> 0) {
  if (($1 | 0) == 0) {
   $32 = $0;
  } else {
   $__end__i_i_i_i_i = $this + 4 | 0;
   $20 = HEAP32[$__end__i_i_i_i_i >> 2] | 0;
   if (($1 | 0) == ($20 | 0)) {
    $30 = $1;
   } else {
    $21 = $20;
    while (1) {
     $incdec_ptr_i_i_i_i_i = $21 - 12 | 0;
     HEAP32[$__end__i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i;
     $22 = HEAP32[$incdec_ptr_i_i_i_i_i >> 2] | 0;
     $23 = $22;
     if (($22 | 0) == 0) {
      $24 = $incdec_ptr_i_i_i_i_i;
     } else {
      $__end__i_i_i_i_i_i_i = $21 - 12 + 4 | 0;
      $25 = HEAP32[$__end__i_i_i_i_i_i_i >> 2] | 0;
      if (($22 | 0) != ($25 | 0)) {
       HEAP32[$__end__i_i_i_i_i_i_i >> 2] = $25 + ((($25 - 16 + (-$23 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($22);
      $24 = HEAP32[$__end__i_i_i_i_i >> 2] | 0;
     }
     if (($1 | 0) == ($24 | 0)) {
      break;
     } else {
      $21 = $24;
     }
    }
    $30 = HEAP32[$__begin__i_i >> 2] | 0;
   }
   __ZdlPv($30);
   HEAP32[$__first__i_i_i_i_i >> 2] = 0;
   HEAP32[$__end__i_i_i_i_i >> 2] = 0;
   HEAP32[$__begin__i_i >> 2] = 0;
   $32 = 0;
  }
  if ($sub_ptr_div_i_i >>> 0 > 357913941) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
  }
  $sub_ptr_div_i_i_i = ($32 | 0) / 12 & -1;
  do {
   if ($sub_ptr_div_i_i_i >>> 0 > 178956969) {
    $retval_i_053 = 357913941;
   } else {
    $mul_i = $sub_ptr_div_i_i_i << 1;
    $_sroa_speculated = $mul_i >>> 0 < $sub_ptr_div_i_i >>> 0 ? $sub_ptr_div_i_i : $mul_i;
    if ($_sroa_speculated >>> 0 <= 357913941) {
     $retval_i_053 = $_sroa_speculated;
     break;
    }
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
   }
  } while (0);
  $33 = __Znwj($retval_i_053 * 12 & -1) | 0;
  $__end__i35 = $this + 4 | 0;
  HEAP32[$__end__i35 >> 2] = $33;
  HEAP32[$__begin__i_i >> 2] = $33;
  HEAP32[$__first__i_i_i_i_i >> 2] = $33 + ($retval_i_053 * 12 & -1);
  if (($__first | 0) == ($__last | 0)) {
   return;
  } else {
   $__first_addr_04_i42 = $__first;
   $34 = $33;
  }
  do {
   if (($34 | 0) == 0) {
    $35 = 0;
   } else {
    __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($34, $__first_addr_04_i42);
    $35 = HEAP32[$__end__i35 >> 2] | 0;
   }
   $34 = $35 + 12 | 0;
   HEAP32[$__end__i35 >> 2] = $34;
   $__first_addr_04_i42 = $__first_addr_04_i42 + 12 | 0;
  } while (($__first_addr_04_i42 | 0) != ($__last | 0));
  return;
 }
 $__end__i = $this + 4 | 0;
 $sub_ptr_div_i = ((HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i_i14 | 0) / 12 & -1;
 if ($sub_ptr_div_i_i >>> 0 > $sub_ptr_div_i >>> 0) {
  $__growing_0_off0 = 1;
  $__mid_0 = $__first + ($sub_ptr_div_i * 12 & -1) | 0;
 } else {
  $__growing_0_off0 = 0;
  $__mid_0 = $__last;
 }
 if (($__mid_0 | 0) == ($__first | 0)) {
  $__result_addr_i_i_0_lcssa = $1;
 } else {
  $5 = ((($__mid_0 - 12 + (-$sub_ptr_rhs_cast_i_i | 0) | 0) >>> 0) / 12 >>> 0) + 1 | 0;
  $__result_addr_i_i_058 = $1;
  $__first_addr_i_i44_059 = $__first;
  while (1) {
   if (($__result_addr_i_i_058 | 0) != ($__first_addr_i_i44_059 | 0)) {
    __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($__result_addr_i_i_058, HEAP32[$__first_addr_i_i44_059 >> 2] | 0, HEAP32[$__first_addr_i_i44_059 + 4 >> 2] | 0);
   }
   $incdec_ptr_i_i = $__first_addr_i_i44_059 + 12 | 0;
   if (($incdec_ptr_i_i | 0) == ($__mid_0 | 0)) {
    break;
   } else {
    $__result_addr_i_i_058 = $__result_addr_i_i_058 + 12 | 0;
    $__first_addr_i_i44_059 = $incdec_ptr_i_i;
   }
  }
  $__result_addr_i_i_0_lcssa = $1 + ($5 * 12 & -1) | 0;
 }
 if ($__growing_0_off0) {
  if (($__mid_0 | 0) == ($__last | 0)) {
   return;
  }
  $__first_addr_04_i = $__mid_0;
  $9 = HEAP32[$__end__i >> 2] | 0;
  do {
   if (($9 | 0) == 0) {
    $10 = 0;
   } else {
    __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($9, $__first_addr_04_i);
    $10 = HEAP32[$__end__i >> 2] | 0;
   }
   $9 = $10 + 12 | 0;
   HEAP32[$__end__i >> 2] = $9;
   $__first_addr_04_i = $__first_addr_04_i + 12 | 0;
  } while (($__first_addr_04_i | 0) != ($__last | 0));
  return;
 }
 $8 = HEAP32[$__end__i >> 2] | 0;
 if (($__result_addr_i_i_0_lcssa | 0) == ($8 | 0)) {
  return;
 } else {
  $11 = $8;
 }
 while (1) {
  $incdec_ptr_i_i_i = $11 - 12 | 0;
  HEAP32[$__end__i >> 2] = $incdec_ptr_i_i_i;
  $12 = HEAP32[$incdec_ptr_i_i_i >> 2] | 0;
  $13 = $12;
  if (($12 | 0) == 0) {
   $14 = $incdec_ptr_i_i_i;
  } else {
   $__end__i_i_i_i_i_i = $11 - 12 + 4 | 0;
   $15 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
   if (($12 | 0) != ($15 | 0)) {
    HEAP32[$__end__i_i_i_i_i_i >> 2] = $15 + ((($15 - 16 + (-$13 | 0) | 0) >>> 4 ^ -1) << 4);
   }
   __ZdlPv($12);
   $14 = HEAP32[$__end__i >> 2] | 0;
  }
  if (($__result_addr_i_i_0_lcssa | 0) == ($14 | 0)) {
   break;
  } else {
   $11 = $14;
  }
 }
 return;
}
function __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__begin__i = 0, $__end__i = 0, $__first__i_i_i_i = 0, $__end__i18 = 0, $__begin__i19 = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__first_addr_04_i = 0, $6 = 0, $7 = 0, $8 = 0;
 $__begin__i = $this | 0;
 HEAP32[$__begin__i >> 2] = 0;
 $__end__i = $this + 4 | 0;
 HEAP32[$__end__i >> 2] = 0;
 $__first__i_i_i_i = $this + 8 | 0;
 HEAP32[$__first__i_i_i_i >> 2] = 0;
 $__end__i18 = $__x + 4 | 0;
 $__begin__i19 = $__x | 0;
 $sub_ptr_sub_i = (HEAP32[$__end__i18 >> 2] | 0) - (HEAP32[$__begin__i19 >> 2] | 0) | 0;
 $sub_ptr_div_i = $sub_ptr_sub_i >> 4;
 if (($sub_ptr_div_i | 0) == 0) {
  return;
 }
 if ($sub_ptr_div_i >>> 0 > 268435455) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $2 = __Znwj($sub_ptr_sub_i) | 0;
 HEAP32[$__end__i >> 2] = $2;
 HEAP32[$__begin__i >> 2] = $2;
 HEAP32[$__first__i_i_i_i >> 2] = $2 + ($sub_ptr_div_i << 4);
 $3 = HEAP32[$__begin__i19 >> 2] | 0;
 $4 = HEAP32[$__end__i18 >> 2] | 0;
 if (($3 | 0) == ($4 | 0)) {
  return;
 } else {
  $__first_addr_04_i = $3;
  $5 = $2;
 }
 do {
  if (($5 | 0) == 0) {
   $8 = 0;
  } else {
   $6 = $5;
   $7 = $__first_addr_04_i;
   HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   HEAP32[$6 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
   $8 = HEAP32[$__end__i >> 2] | 0;
  }
  $5 = $8 + 16 | 0;
  HEAP32[$__end__i >> 2] = $5;
  $__first_addr_04_i = $__first_addr_04_i + 16 | 0;
 } while (($__first_addr_04_i | 0) != ($4 | 0));
 return;
}
function __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $sub_ptr_rhs_cast_i_i = 0, $sub_ptr_div_i_i = 0, $__first__i_i_i_i_i = 0, $0 = 0, $__begin__i_i = 0, $1 = 0, $sub_ptr_rhs_cast_i_i14 = 0, $__end__i = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $sub_ptr_sub_i_i48 = 0, $add_ptr_i_i50 = 0, $5 = 0, $add_ptr_i_i = 0, $11 = 0, $__first_addr_04_i = 0, $12 = 0, $13 = 0, $14 = 0, $__end__i_i_i_i_i = 0, $15 = 0, $20 = 0, $sub_ptr_lhs_cast_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_047 = 0, $21 = 0, $__end__i41 = 0, $22 = 0, $__first_addr_04_i29 = 0, $23 = 0, $24 = 0, $25 = 0;
 $sub_ptr_rhs_cast_i_i = $__first;
 $sub_ptr_div_i_i = $__last - $sub_ptr_rhs_cast_i_i >> 4;
 $__first__i_i_i_i_i = $this + 8 | 0;
 $0 = HEAP32[$__first__i_i_i_i_i >> 2] | 0;
 $__begin__i_i = $this | 0;
 $1 = HEAP32[$__begin__i_i >> 2] | 0;
 $sub_ptr_rhs_cast_i_i14 = $1;
 if ($sub_ptr_div_i_i >>> 0 <= $0 - $sub_ptr_rhs_cast_i_i14 >> 4 >>> 0) {
  $__end__i = $this + 4 | 0;
  $sub_ptr_sub_i = (HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i_i14 | 0;
  $sub_ptr_div_i = $sub_ptr_sub_i >> 4;
  if ($sub_ptr_div_i_i >>> 0 <= $sub_ptr_div_i >>> 0) {
   $sub_ptr_sub_i_i48 = $__last - $sub_ptr_rhs_cast_i_i | 0;
   _memmove($1 | 0, $__first | 0, $sub_ptr_sub_i_i48 | 0);
   $add_ptr_i_i50 = $1 + ($sub_ptr_sub_i_i48 >> 4 << 4) | 0;
   $5 = HEAP32[$__end__i >> 2] | 0;
   if (($add_ptr_i_i50 | 0) == ($5 | 0)) {
    return;
   }
   HEAP32[$__end__i >> 2] = $5 + ((($5 - 16 + (-$add_ptr_i_i50 | 0) | 0) >>> 4 ^ -1) << 4);
   return;
  }
  $add_ptr_i_i = $__first + ($sub_ptr_div_i << 4) | 0;
  _memmove($1 | 0, $__first | 0, $sub_ptr_sub_i | 0);
  if (($add_ptr_i_i | 0) == ($__last | 0)) {
   return;
  }
  $__first_addr_04_i = $add_ptr_i_i;
  $11 = HEAP32[$__end__i >> 2] | 0;
  do {
   if (($11 | 0) == 0) {
    $14 = 0;
   } else {
    $12 = $11;
    $13 = $__first_addr_04_i;
    HEAP32[$12 >> 2] = HEAP32[$13 >> 2];
    HEAP32[$12 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
    HEAP32[$12 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
    HEAP32[$12 + 12 >> 2] = HEAP32[$13 + 12 >> 2];
    $14 = HEAP32[$__end__i >> 2] | 0;
   }
   $11 = $14 + 16 | 0;
   HEAP32[$__end__i >> 2] = $11;
   $__first_addr_04_i = $__first_addr_04_i + 16 | 0;
  } while (($__first_addr_04_i | 0) != ($__last | 0));
  return;
 }
 if (($1 | 0) == 0) {
  $20 = $0;
 } else {
  $__end__i_i_i_i_i = $this + 4 | 0;
  $15 = HEAP32[$__end__i_i_i_i_i >> 2] | 0;
  if (($1 | 0) != ($15 | 0)) {
   HEAP32[$__end__i_i_i_i_i >> 2] = $15 + ((($15 - 16 + (-$sub_ptr_rhs_cast_i_i14 | 0) | 0) >>> 4 ^ -1) << 4);
  }
  __ZdlPv($1);
  HEAP32[$__first__i_i_i_i_i >> 2] = 0;
  HEAP32[$__end__i_i_i_i_i >> 2] = 0;
  HEAP32[$__begin__i_i >> 2] = 0;
  $20 = 0;
 }
 if ($sub_ptr_div_i_i >>> 0 > 268435455) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $sub_ptr_lhs_cast_i_i_i = $20;
 do {
  if ($sub_ptr_lhs_cast_i_i_i >> 4 >>> 0 > 134217726) {
   $retval_i_047 = 268435455;
  } else {
   $mul_i = $sub_ptr_lhs_cast_i_i_i >> 3;
   $_sroa_speculated = $mul_i >>> 0 < $sub_ptr_div_i_i >>> 0 ? $sub_ptr_div_i_i : $mul_i;
   if ($_sroa_speculated >>> 0 <= 268435455) {
    $retval_i_047 = $_sroa_speculated;
    break;
   }
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
  }
 } while (0);
 $21 = __Znwj($retval_i_047 << 4) | 0;
 $__end__i41 = $this + 4 | 0;
 HEAP32[$__end__i41 >> 2] = $21;
 HEAP32[$__begin__i_i >> 2] = $21;
 HEAP32[$__first__i_i_i_i_i >> 2] = $21 + ($retval_i_047 << 4);
 if (($__first | 0) == ($__last | 0)) {
  return;
 } else {
  $__first_addr_04_i29 = $__first;
  $22 = $21;
 }
 do {
  if (($22 | 0) == 0) {
   $25 = 0;
  } else {
   $23 = $22;
   $24 = $__first_addr_04_i29;
   HEAP32[$23 >> 2] = HEAP32[$24 >> 2];
   HEAP32[$23 + 4 >> 2] = HEAP32[$24 + 4 >> 2];
   HEAP32[$23 + 8 >> 2] = HEAP32[$24 + 8 >> 2];
   HEAP32[$23 + 12 >> 2] = HEAP32[$24 + 12 >> 2];
   $25 = HEAP32[$__end__i41 >> 2] | 0;
  }
  $22 = $25 + 16 | 0;
  HEAP32[$__end__i41 >> 2] = $22;
  $__first_addr_04_i29 = $__first_addr_04_i29 + 16 | 0;
 } while (($__first_addr_04_i29 | 0) != ($__last | 0));
 return;
}
function __ZNSt3__16vectorINS0_INS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE21__push_back_slow_pathIKS7_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__v = 0, $0 = 0, $1 = 0, $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $sub_ptr_div_i_i_i = 0, $__first__i_i_i_i_i17 = 0, $mul_i = 0, $_sroa_speculated = 0, $__first__i_i_i_i_i = 0, $__first__i_i_i_i_i21 = 0, $retval_i_019 = 0, $__first__i_i_i_i_i22 = 0, $retval_i_020 = 0, $cond_i_i = 0, $__first__i_i = 0, $add_ptr_i_i = 0, $__end__i_i = 0, $__begin__i_i = 0, $_pre18_i = 0, $8 = 0, $incdec_ptr = 0, $9 = 0, $10 = 0, $11 = 0, $__end1_addr_i_015_i = 0, $add_ptr_i_i12 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $__first__i_i_i26_i = 0, $17 = 0, $18 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 $__v = __stackBase__ | 0;
 $0 = $this + 8 | 0;
 $1 = $0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = ((HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 12 & -1;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 357913941) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $sub_ptr_div_i_i_i = ((HEAP32[$0 >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 12 & -1;
 if ($sub_ptr_div_i_i_i >>> 0 > 178956969) {
  $__first__i_i_i_i_i17 = $__v + 12 | 0;
  HEAP32[$__first__i_i_i_i_i17 >> 2] = 0;
  HEAP32[$__v + 16 >> 2] = $1;
  $retval_i_019 = 357913941;
  $__first__i_i_i_i_i21 = $__first__i_i_i_i_i17;
  label = 2528;
 } else {
  $mul_i = $sub_ptr_div_i_i_i << 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  $__first__i_i_i_i_i = $__v + 12 | 0;
  HEAP32[$__first__i_i_i_i_i >> 2] = 0;
  HEAP32[$__v + 16 >> 2] = $1;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_020 = 0;
   $__first__i_i_i_i_i22 = $__first__i_i_i_i_i;
  } else {
   $retval_i_019 = $_sroa_speculated;
   $__first__i_i_i_i_i21 = $__first__i_i_i_i_i;
   label = 2528;
  }
 }
 if ((label | 0) == 2528) {
  $cond_i_i = __Znwj($retval_i_019 * 12 & -1) | 0;
  $retval_i_020 = $retval_i_019;
  $__first__i_i_i_i_i22 = $__first__i_i_i_i_i21;
 }
 $__first__i_i = $__v | 0;
 HEAP32[$__first__i_i >> 2] = $cond_i_i;
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i * 12 & -1) | 0;
 $__end__i_i = $__v + 8 | 0;
 HEAP32[$__end__i_i >> 2] = $add_ptr_i_i;
 $__begin__i_i = $__v + 4 | 0;
 HEAP32[$__begin__i_i >> 2] = $add_ptr_i_i;
 HEAP32[$__first__i_i_i_i_i22 >> 2] = $cond_i_i + ($retval_i_020 * 12 & -1);
 if (($add_ptr_i_i | 0) == 0) {
  $8 = 0;
  $_pre18_i = 0;
 } else {
  __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($add_ptr_i_i, $__x);
  $8 = HEAP32[$__end__i_i >> 2] | 0;
  $_pre18_i = HEAP32[$__begin__i_i >> 2] | 0;
 }
 $incdec_ptr = $8 + 12 | 0;
 HEAP32[$__end__i_i >> 2] = $incdec_ptr;
 $9 = HEAP32[$__begin__i >> 2] | 0;
 $10 = HEAP32[$__end__i >> 2] | 0;
 if (($10 | 0) == ($9 | 0)) {
  $16 = $9;
  $15 = $_pre18_i;
  $14 = $9;
  $13 = $incdec_ptr;
  HEAP32[$__begin__i >> 2] = $15;
  HEAP32[$__begin__i_i >> 2] = $16;
  HEAP32[$__end__i >> 2] = $13;
  HEAP32[$__end__i_i >> 2] = $14;
  $__first__i_i_i26_i = $this + 8 | 0;
  $17 = HEAP32[$__first__i_i_i26_i >> 2] | 0;
  $18 = HEAP32[$__first__i_i_i_i_i22 >> 2] | 0;
  HEAP32[$__first__i_i_i26_i >> 2] = $18;
  HEAP32[$__first__i_i_i_i_i22 >> 2] = $17;
  HEAP32[$__first__i_i >> 2] = $16;
  __ZNSt3__114__split_bufferINS_6vectorINS1_IN10ClipperLib8IntPointENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEED1Ev($__v);
  STACKTOP = __stackBase__;
  return;
 } else {
  $__end1_addr_i_015_i = $10;
  $11 = $_pre18_i;
 }
 do {
  $add_ptr_i_i12 = $11 - 12 | 0;
  $__end1_addr_i_015_i = $__end1_addr_i_015_i - 12 | 0;
  if (($add_ptr_i_i12 | 0) == 0) {
   $12 = $11;
  } else {
   __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($add_ptr_i_i12, $__end1_addr_i_015_i);
   $12 = HEAP32[$__begin__i_i >> 2] | 0;
  }
  $11 = $12 - 12 | 0;
  HEAP32[$__begin__i_i >> 2] = $11;
 } while (($__end1_addr_i_015_i | 0) != ($9 | 0));
 $16 = HEAP32[$__begin__i >> 2] | 0;
 $15 = $11;
 $14 = HEAP32[$__end__i >> 2] | 0;
 $13 = HEAP32[$__end__i_i >> 2] | 0;
 HEAP32[$__begin__i >> 2] = $15;
 HEAP32[$__begin__i_i >> 2] = $16;
 HEAP32[$__end__i >> 2] = $13;
 HEAP32[$__end__i_i >> 2] = $14;
 $__first__i_i_i26_i = $this + 8 | 0;
 $17 = HEAP32[$__first__i_i_i26_i >> 2] | 0;
 $18 = HEAP32[$__first__i_i_i_i_i22 >> 2] | 0;
 HEAP32[$__first__i_i_i26_i >> 2] = $18;
 HEAP32[$__first__i_i_i_i_i22 >> 2] = $17;
 HEAP32[$__first__i_i >> 2] = $16;
 __ZNSt3__114__split_bufferINS_6vectorINS1_IN10ClipperLib8IntPointENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEED1Ev($__v);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__114__split_bufferINS_6vectorINS1_IN10ClipperLib8IntPointENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEED1Ev($this) {
 $this = $this | 0;
 var $0 = 0, $__end__i_i_i_i = 0, $1 = 0, $2 = 0, $incdec_ptr_i_i_i_i = 0, $__begin__i_i_i = 0, $3 = 0, $__end__i_i_i_i_i_i = 0, $4 = 0, $5 = 0, $incdec_ptr_i_i_i_i_i_i = 0, $6 = 0, $7 = 0, $8 = 0, $__end__i_i_i_i_i_i_i_i_i = 0, $9 = 0, $14 = 0, $16 = 0, $17 = 0;
 $0 = HEAP32[$this + 4 >> 2] | 0;
 $__end__i_i_i_i = $this + 8 | 0;
 $1 = HEAP32[$__end__i_i_i_i >> 2] | 0;
 if (($0 | 0) != ($1 | 0)) {
  $2 = $1;
  while (1) {
   $incdec_ptr_i_i_i_i = $2 - 12 | 0;
   HEAP32[$__end__i_i_i_i >> 2] = $incdec_ptr_i_i_i_i;
   $__begin__i_i_i = $incdec_ptr_i_i_i_i | 0;
   $3 = HEAP32[$__begin__i_i_i >> 2] | 0;
   if (($3 | 0) == 0) {
    $16 = $incdec_ptr_i_i_i_i;
   } else {
    $__end__i_i_i_i_i_i = $2 - 12 + 4 | 0;
    $4 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
    if (($3 | 0) == ($4 | 0)) {
     $14 = $3;
    } else {
     $5 = $4;
     while (1) {
      $incdec_ptr_i_i_i_i_i_i = $5 - 12 | 0;
      HEAP32[$__end__i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i;
      $6 = HEAP32[$incdec_ptr_i_i_i_i_i_i >> 2] | 0;
      $7 = $6;
      if (($6 | 0) == 0) {
       $8 = $incdec_ptr_i_i_i_i_i_i;
      } else {
       $__end__i_i_i_i_i_i_i_i_i = $5 - 12 + 4 | 0;
       $9 = HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] | 0;
       if (($6 | 0) != ($9 | 0)) {
        HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] = $9 + ((($9 - 16 + (-$7 | 0) | 0) >>> 4 ^ -1) << 4);
       }
       __ZdlPv($6);
       $8 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
      }
      if (($3 | 0) == ($8 | 0)) {
       break;
      } else {
       $5 = $8;
      }
     }
     $14 = HEAP32[$__begin__i_i_i >> 2] | 0;
    }
    __ZdlPv($14);
    $16 = HEAP32[$__end__i_i_i_i >> 2] | 0;
   }
   if (($0 | 0) == ($16 | 0)) {
    break;
   } else {
    $2 = $16;
   }
  }
 }
 $17 = HEAP32[$this >> 2] | 0;
 if (($17 | 0) == 0) {
  return;
 }
 __ZdlPv($17);
 return;
}
function __ZNSt3__16vectorI10SliceLayerNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_056 = 0, $retval_i_057 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $incdec_ptr = 0, $5 = 0, $6 = 0, $__v_sroa_1_4_load4250 = 0, $__end1_addr_i_015_i = 0, $_pre_i = 0, $_pre = 0, $7 = 0, $incdec_ptr_i_i_i_i_i18 = 0, $__begin__i_i_i_i_i_i_i19 = 0, $8 = 0, $__end__i_i_i_i_i_i_i_i_i_i24 = 0, $9 = 0, $incdec_ptr_i_i_i_i_i_i_i_i_i_i28 = 0, $14 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = ((HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 12 & -1;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 357913941) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_div_i_i_i = ((HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 12 & -1;
 if ($sub_ptr_div_i_i_i >>> 0 > 178956969) {
  $retval_i_056 = 357913941;
  label = 2564;
 } else {
  $mul_i = $sub_ptr_div_i_i_i << 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_057 = 0;
  } else {
   $retval_i_056 = $_sroa_speculated;
   label = 2564;
  }
 }
 if ((label | 0) == 2564) {
  $cond_i_i = __Znwj($retval_i_056 * 12 & -1) | 0;
  $retval_i_057 = $retval_i_056;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i * 12 & -1) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_057 * 12 & -1) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  __ZNSt3__16vectorI14SliceLayerPartNS_9allocatorIS1_EEEC2ERKS4_($add_ptr_i_i | 0, $__x | 0);
 }
 $incdec_ptr = $cond_i_i + ($add * 12 & -1) | 0;
 $5 = HEAP32[$__begin__i >> 2] | 0;
 $6 = HEAP32[$__end__i >> 2] | 0;
 do {
  if (($6 | 0) == ($5 | 0)) {
   HEAP32[$__begin__i >> 2] = $add_ptr_i_i;
   HEAP32[$__end__i >> 2] = $incdec_ptr;
   HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
   $14 = $5;
  } else {
   $__end1_addr_i_015_i = $6;
   $__v_sroa_1_4_load4250 = $add_ptr_i_i;
   do {
    $__v_sroa_1_4_load4250 = $__v_sroa_1_4_load4250 - 12 | 0;
    $__end1_addr_i_015_i = $__end1_addr_i_015_i - 12 | 0;
    if (($__v_sroa_1_4_load4250 | 0) != 0) {
     __ZNSt3__16vectorI14SliceLayerPartNS_9allocatorIS1_EEEC2ERKS4_($__v_sroa_1_4_load4250 | 0, $__end1_addr_i_015_i | 0);
    }
   } while (($__end1_addr_i_015_i | 0) != ($5 | 0));
   $_pre_i = HEAP32[$__begin__i >> 2] | 0;
   $_pre = HEAP32[$__end__i >> 2] | 0;
   HEAP32[$__begin__i >> 2] = $__v_sroa_1_4_load4250;
   HEAP32[$__end__i >> 2] = $incdec_ptr;
   HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
   if (($_pre_i | 0) == ($_pre | 0)) {
    $14 = $_pre_i;
    break;
   } else {
    $7 = $_pre;
   }
   while (1) {
    $incdec_ptr_i_i_i_i_i18 = $7 - 12 | 0;
    $__begin__i_i_i_i_i_i_i19 = $incdec_ptr_i_i_i_i_i18 | 0;
    $8 = HEAP32[$__begin__i_i_i_i_i_i_i19 >> 2] | 0;
    if (($8 | 0) != 0) {
     $__end__i_i_i_i_i_i_i_i_i_i24 = $7 - 12 + 4 | 0;
     while (1) {
      $9 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i24 >> 2] | 0;
      if (($8 | 0) == ($9 | 0)) {
       break;
      }
      $incdec_ptr_i_i_i_i_i_i_i_i_i_i28 = $9 - 96 | 0;
      HEAP32[$__end__i_i_i_i_i_i_i_i_i_i24 >> 2] = $incdec_ptr_i_i_i_i_i_i_i_i_i_i28;
      __ZN14SliceLayerPartD2Ev($incdec_ptr_i_i_i_i_i_i_i_i_i_i28);
     }
     __ZdlPv(HEAP32[$__begin__i_i_i_i_i_i_i19 >> 2] | 0);
    }
    if (($_pre_i | 0) == ($incdec_ptr_i_i_i_i_i18 | 0)) {
     $14 = $_pre_i;
     break;
    } else {
     $7 = $incdec_ptr_i_i_i_i_i18;
    }
   }
  }
 } while (0);
 if (($14 | 0) == 0) {
  return;
 }
 __ZdlPv($14);
 return;
}
function __ZNSt3__16vectorI14SliceLayerPartNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_046 = 0, $retval_i_047 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $incdec_ptr = 0, $4 = 0, $5 = 0, $__v_sroa_1_4_load3137 = 0, $__end1_addr_i_015_i = 0, $6 = 0, $7 = 0, $8 = 0, $__v_sroa_2_8_load3540 = 0, $incdec_ptr_i_i_i_i_i19 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = ((HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 96 & -1;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 44739242) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_div_i_i_i = ((HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 96 & -1;
 if ($sub_ptr_div_i_i_i >>> 0 > 22369620) {
  $retval_i_046 = 44739242;
  label = 2601;
 } else {
  $mul_i = $sub_ptr_div_i_i_i << 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_047 = 0;
  } else {
   $retval_i_046 = $_sroa_speculated;
   label = 2601;
  }
 }
 if ((label | 0) == 2601) {
  $cond_i_i = __Znwj($retval_i_046 * 96 & -1) | 0;
  $retval_i_047 = $retval_i_046;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i * 96 & -1) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_047 * 96 & -1) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  __ZN14SliceLayerPartC2ERKS_($add_ptr_i_i, $__x);
 }
 $incdec_ptr = $cond_i_i + ($add * 96 & -1) | 0;
 $4 = HEAP32[$__begin__i >> 2] | 0;
 $5 = HEAP32[$__end__i >> 2] | 0;
 if (($5 | 0) == ($4 | 0)) {
  $8 = $4;
  $7 = $add_ptr_i_i;
  $6 = $4;
 } else {
  $__end1_addr_i_015_i = $5;
  $__v_sroa_1_4_load3137 = $add_ptr_i_i;
  do {
   $__v_sroa_1_4_load3137 = $__v_sroa_1_4_load3137 - 96 | 0;
   $__end1_addr_i_015_i = $__end1_addr_i_015_i - 96 | 0;
   if (($__v_sroa_1_4_load3137 | 0) != 0) {
    __ZN14SliceLayerPartC2ERKS_($__v_sroa_1_4_load3137, $__end1_addr_i_015_i);
   }
  } while (($__end1_addr_i_015_i | 0) != ($4 | 0));
  $8 = HEAP32[$__begin__i >> 2] | 0;
  $7 = $__v_sroa_1_4_load3137;
  $6 = HEAP32[$__end__i >> 2] | 0;
 }
 HEAP32[$__begin__i >> 2] = $7;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 $__v_sroa_2_8_load3540 = $6;
 while (1) {
  if (($8 | 0) == ($__v_sroa_2_8_load3540 | 0)) {
   break;
  }
  $incdec_ptr_i_i_i_i_i19 = $__v_sroa_2_8_load3540 - 96 | 0;
  __ZN14SliceLayerPartD2Ev($incdec_ptr_i_i_i_i_i19);
  $__v_sroa_2_8_load3540 = $incdec_ptr_i_i_i_i_i19;
 }
 if (($8 | 0) == 0) {
  return;
 }
 __ZdlPv($8);
 return;
}
function __ZN16SliceDataStorageD2Ev($this) {
 $this = $this | 0;
 var $__begin__i_i_i = 0, $0 = 0, $__end__i_i_i_i_i_i = 0, $1 = 0, $2 = 0, $incdec_ptr_i_i_i_i_i_i = 0, $3 = 0, $4 = 0, $5 = 0, $__end__i_i_i_i_i_i_i_i_i = 0, $6 = 0, $11 = 0, $__begin__i_i_i1 = 0, $13 = 0, $__end__i_i_i_i_i_i3 = 0, $14 = 0, $15 = 0, $incdec_ptr_i_i_i_i_i_i6 = 0, $16 = 0, $17 = 0, $18 = 0, $__end__i_i_i_i_i_i_i_i_i12 = 0, $19 = 0, $24 = 0;
 __ZNSt3__16vectorI18SliceVolumeStorageNS_9allocatorIS1_EEED1Ev($this + 60 | 0);
 $__begin__i_i_i = $this + 48 | 0;
 $0 = HEAP32[$__begin__i_i_i >> 2] | 0;
 if (($0 | 0) != 0) {
  $__end__i_i_i_i_i_i = $this + 52 | 0;
  $1 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
  if (($0 | 0) == ($1 | 0)) {
   $11 = $0;
  } else {
   $2 = $1;
   while (1) {
    $incdec_ptr_i_i_i_i_i_i = $2 - 12 | 0;
    HEAP32[$__end__i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i;
    $3 = HEAP32[$incdec_ptr_i_i_i_i_i_i >> 2] | 0;
    $4 = $3;
    if (($3 | 0) == 0) {
     $5 = $incdec_ptr_i_i_i_i_i_i;
    } else {
     $__end__i_i_i_i_i_i_i_i_i = $2 - 12 + 4 | 0;
     $6 = HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] | 0;
     if (($3 | 0) != ($6 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] = $6 + ((($6 - 16 + (-$4 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($3);
     $5 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
    }
    if (($0 | 0) == ($5 | 0)) {
     break;
    } else {
     $2 = $5;
    }
   }
   $11 = HEAP32[$__begin__i_i_i >> 2] | 0;
  }
  __ZdlPv($11);
 }
 $__begin__i_i_i1 = $this + 36 | 0;
 $13 = HEAP32[$__begin__i_i_i1 >> 2] | 0;
 if (($13 | 0) == 0) {
  return;
 }
 $__end__i_i_i_i_i_i3 = $this + 40 | 0;
 $14 = HEAP32[$__end__i_i_i_i_i_i3 >> 2] | 0;
 if (($13 | 0) == ($14 | 0)) {
  $24 = $13;
 } else {
  $15 = $14;
  while (1) {
   $incdec_ptr_i_i_i_i_i_i6 = $15 - 12 | 0;
   HEAP32[$__end__i_i_i_i_i_i3 >> 2] = $incdec_ptr_i_i_i_i_i_i6;
   $16 = HEAP32[$incdec_ptr_i_i_i_i_i_i6 >> 2] | 0;
   $17 = $16;
   if (($16 | 0) == 0) {
    $18 = $incdec_ptr_i_i_i_i_i_i6;
   } else {
    $__end__i_i_i_i_i_i_i_i_i12 = $15 - 12 + 4 | 0;
    $19 = HEAP32[$__end__i_i_i_i_i_i_i_i_i12 >> 2] | 0;
    if (($16 | 0) != ($19 | 0)) {
     HEAP32[$__end__i_i_i_i_i_i_i_i_i12 >> 2] = $19 + ((($19 - 16 + (-$17 | 0) | 0) >>> 4 ^ -1) << 4);
    }
    __ZdlPv($16);
    $18 = HEAP32[$__end__i_i_i_i_i_i3 >> 2] | 0;
   }
   if (($13 | 0) == ($18 | 0)) {
    break;
   } else {
    $15 = $18;
   }
  }
  $24 = HEAP32[$__begin__i_i_i1 >> 2] | 0;
 }
 __ZdlPv($24);
 return;
}
function __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_058 = 0, $retval_i_059 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $incdec_ptr = 0, $5 = 0, $6 = 0, $__v_sroa_1_4_load4452 = 0, $__end1_addr_i_015_i = 0, $_pre_i = 0, $_pre = 0, $7 = 0, $incdec_ptr_i_i_i_i_i18 = 0, $8 = 0, $9 = 0, $__end__i_i_i_i_i_i_i_i24 = 0, $10 = 0, $15 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = ((HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 12 & -1;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 357913941) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_div_i_i_i = ((HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 12 & -1;
 if ($sub_ptr_div_i_i_i >>> 0 > 178956969) {
  $retval_i_058 = 357913941;
  label = 2652;
 } else {
  $mul_i = $sub_ptr_div_i_i_i << 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_059 = 0;
  } else {
   $retval_i_058 = $_sroa_speculated;
   label = 2652;
  }
 }
 if ((label | 0) == 2652) {
  $cond_i_i = __Znwj($retval_i_058 * 12 & -1) | 0;
  $retval_i_059 = $retval_i_058;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i * 12 & -1) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_059 * 12 & -1) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($add_ptr_i_i, $__x);
 }
 $incdec_ptr = $cond_i_i + ($add * 12 & -1) | 0;
 $5 = HEAP32[$__begin__i >> 2] | 0;
 $6 = HEAP32[$__end__i >> 2] | 0;
 do {
  if (($6 | 0) == ($5 | 0)) {
   HEAP32[$__begin__i >> 2] = $add_ptr_i_i;
   HEAP32[$__end__i >> 2] = $incdec_ptr;
   HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
   $15 = $5;
  } else {
   $__end1_addr_i_015_i = $6;
   $__v_sroa_1_4_load4452 = $add_ptr_i_i;
   do {
    $__v_sroa_1_4_load4452 = $__v_sroa_1_4_load4452 - 12 | 0;
    $__end1_addr_i_015_i = $__end1_addr_i_015_i - 12 | 0;
    if (($__v_sroa_1_4_load4452 | 0) != 0) {
     __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($__v_sroa_1_4_load4452, $__end1_addr_i_015_i);
    }
   } while (($__end1_addr_i_015_i | 0) != ($5 | 0));
   $_pre_i = HEAP32[$__begin__i >> 2] | 0;
   $_pre = HEAP32[$__end__i >> 2] | 0;
   HEAP32[$__begin__i >> 2] = $__v_sroa_1_4_load4452;
   HEAP32[$__end__i >> 2] = $incdec_ptr;
   HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
   if (($_pre_i | 0) == ($_pre | 0)) {
    $15 = $_pre_i;
    break;
   } else {
    $7 = $_pre;
   }
   while (1) {
    $incdec_ptr_i_i_i_i_i18 = $7 - 12 | 0;
    $8 = HEAP32[$incdec_ptr_i_i_i_i_i18 >> 2] | 0;
    $9 = $8;
    if (($8 | 0) != 0) {
     $__end__i_i_i_i_i_i_i_i24 = $7 - 12 + 4 | 0;
     $10 = HEAP32[$__end__i_i_i_i_i_i_i_i24 >> 2] | 0;
     if (($8 | 0) != ($10 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i24 >> 2] = $10 + ((($10 - 16 + (-$9 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($8);
    }
    if (($_pre_i | 0) == ($incdec_ptr_i_i_i_i_i18 | 0)) {
     $15 = $_pre_i;
     break;
    } else {
     $7 = $incdec_ptr_i_i_i_i_i18;
    }
   }
  }
 } while (0);
 if (($15 | 0) == 0) {
  return;
 }
 __ZdlPv($15);
 return;
}
function __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_sub_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_022 = 0, $retval_i_023 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $4 = 0, $5 = 0, $incdec_ptr = 0, $6 = 0, $sub_ptr_sub_i_i = 0, $add_ptr_i_i13 = 0, $8 = 0, $9 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = (HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i >> 4;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 268435455) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_sub_i_i_i = (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0;
 if ($sub_ptr_sub_i_i_i >> 4 >>> 0 > 134217726) {
  $retval_i_022 = 268435455;
  label = 2685;
 } else {
  $mul_i = $sub_ptr_sub_i_i_i >> 3;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_023 = 0;
  } else {
   $retval_i_022 = $_sroa_speculated;
   label = 2685;
  }
 }
 if ((label | 0) == 2685) {
  $cond_i_i = __Znwj($retval_i_022 << 4) | 0;
  $retval_i_023 = $retval_i_022;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i << 4) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_023 << 4) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  $4 = $add_ptr_i_i;
  $5 = $__x;
  HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  HEAP32[$4 + 12 >> 2] = HEAP32[$5 + 12 >> 2];
 }
 $incdec_ptr = $cond_i_i + ($add << 4) | 0;
 $6 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i_i = (HEAP32[$__end__i >> 2] | 0) - $6 | 0;
 $add_ptr_i_i13 = $cond_i_i + ($sub_ptr_div_i - ($sub_ptr_sub_i_i >> 4) << 4) | 0;
 $8 = $add_ptr_i_i13;
 $9 = $6;
 _memcpy($8 | 0, $9 | 0, $sub_ptr_sub_i_i) | 0;
 HEAP32[$__begin__i >> 2] = $add_ptr_i_i13;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 if (($6 | 0) == 0) {
  return;
 }
 __ZdlPv($9);
 return;
}
function __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__begin__i = 0, $__end__i = 0, $__first__i_i_i_i = 0, $__end__i18 = 0, $0 = 0, $__begin__i19 = 0, $1 = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__first_addr_04_i = 0, $7 = 0;
 $__begin__i = $this | 0;
 HEAP32[$__begin__i >> 2] = 0;
 $__end__i = $this + 4 | 0;
 HEAP32[$__end__i >> 2] = 0;
 $__first__i_i_i_i = $this + 8 | 0;
 HEAP32[$__first__i_i_i_i >> 2] = 0;
 $__end__i18 = $__x + 4 | 0;
 $0 = HEAP32[$__end__i18 >> 2] | 0;
 $__begin__i19 = $__x | 0;
 $1 = HEAP32[$__begin__i19 >> 2] | 0;
 if (($0 | 0) == ($1 | 0)) {
  return;
 }
 $sub_ptr_sub_i = $0 - $1 | 0;
 $sub_ptr_div_i = ($sub_ptr_sub_i | 0) / 12 & -1;
 if ($sub_ptr_div_i >>> 0 > 357913941) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $3 = __Znwj($sub_ptr_sub_i) | 0;
 HEAP32[$__end__i >> 2] = $3;
 HEAP32[$__begin__i >> 2] = $3;
 HEAP32[$__first__i_i_i_i >> 2] = $3 + ($sub_ptr_div_i * 12 & -1);
 $4 = HEAP32[$__begin__i19 >> 2] | 0;
 $5 = HEAP32[$__end__i18 >> 2] | 0;
 if (($4 | 0) == ($5 | 0)) {
  return;
 } else {
  $__first_addr_04_i = $4;
  $6 = $3;
 }
 do {
  if (($6 | 0) == 0) {
   $7 = 0;
  } else {
   __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($6, $__first_addr_04_i);
   $7 = HEAP32[$__end__i >> 2] | 0;
  }
  $6 = $7 + 12 | 0;
  HEAP32[$__end__i >> 2] = $6;
  $__first_addr_04_i = $__first_addr_04_i + 12 | 0;
 } while (($__first_addr_04_i | 0) != ($5 | 0));
 return;
}
function __ZNSt3__16vectorI18SliceVolumeStorageNS_9allocatorIS1_EEED1Ev($this) {
 $this = $this | 0;
 var $__begin__i_i = 0, $0 = 0, $__end__i_i_i_i_i = 0, $1 = 0, $2 = 0, $incdec_ptr_i_i_i_i_i = 0, $__begin__i_i_i_i_i = 0, $3 = 0, $__end__i_i_i_i_i_i_i_i = 0, $4 = 0, $5 = 0, $incdec_ptr_i_i_i_i_i_i_i_i = 0, $__begin__i_i_i_i_i_i_i_i_i_i = 0, $6 = 0, $7 = 0, $__end__i_i_i_i_i_i_i_i_i_i_i_i_i = 0, $8 = 0, $incdec_ptr_i_i_i_i_i_i_i_i_i_i_i_i_i = 0, $13 = 0, $15 = 0, $16 = 0;
 $__begin__i_i = $this | 0;
 $0 = HEAP32[$__begin__i_i >> 2] | 0;
 if (($0 | 0) == 0) {
  return;
 }
 $__end__i_i_i_i_i = $this + 4 | 0;
 $1 = HEAP32[$__end__i_i_i_i_i >> 2] | 0;
 if (($0 | 0) == ($1 | 0)) {
  $16 = $0;
 } else {
  $2 = $1;
  while (1) {
   $incdec_ptr_i_i_i_i_i = $2 - 12 | 0;
   HEAP32[$__end__i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i;
   $__begin__i_i_i_i_i = $incdec_ptr_i_i_i_i_i | 0;
   $3 = HEAP32[$__begin__i_i_i_i_i >> 2] | 0;
   if (($3 | 0) == 0) {
    $15 = $incdec_ptr_i_i_i_i_i;
   } else {
    $__end__i_i_i_i_i_i_i_i = $2 - 12 + 4 | 0;
    $4 = HEAP32[$__end__i_i_i_i_i_i_i_i >> 2] | 0;
    if (($3 | 0) == ($4 | 0)) {
     $13 = $3;
    } else {
     $5 = $4;
     while (1) {
      $incdec_ptr_i_i_i_i_i_i_i_i = $5 - 12 | 0;
      HEAP32[$__end__i_i_i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i_i_i;
      $__begin__i_i_i_i_i_i_i_i_i_i = $incdec_ptr_i_i_i_i_i_i_i_i | 0;
      $6 = HEAP32[$__begin__i_i_i_i_i_i_i_i_i_i >> 2] | 0;
      if (($6 | 0) == 0) {
       $7 = $incdec_ptr_i_i_i_i_i_i_i_i;
      } else {
       $__end__i_i_i_i_i_i_i_i_i_i_i_i_i = $5 - 12 + 4 | 0;
       while (1) {
        $8 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i_i_i >> 2] | 0;
        if (($6 | 0) == ($8 | 0)) {
         break;
        }
        $incdec_ptr_i_i_i_i_i_i_i_i_i_i_i_i_i = $8 - 96 | 0;
        HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i_i_i_i_i_i_i_i;
        __ZN14SliceLayerPartD2Ev($incdec_ptr_i_i_i_i_i_i_i_i_i_i_i_i_i);
       }
       __ZdlPv(HEAP32[$__begin__i_i_i_i_i_i_i_i_i_i >> 2] | 0);
       $7 = HEAP32[$__end__i_i_i_i_i_i_i_i >> 2] | 0;
      }
      if (($3 | 0) == ($7 | 0)) {
       break;
      } else {
       $5 = $7;
      }
     }
     $13 = HEAP32[$__begin__i_i_i_i_i >> 2] | 0;
    }
    __ZdlPv($13);
    $15 = HEAP32[$__end__i_i_i_i_i >> 2] | 0;
   }
   if (($0 | 0) == ($15 | 0)) {
    break;
   } else {
    $2 = $15;
   }
  }
  $16 = HEAP32[$__begin__i_i >> 2] | 0;
 }
 __ZdlPv($16);
 return;
}
function __ZN20SupportPolyGeneratorC2ER14SupportStorageiibb($this, $storage, $z, $angle, $everywhere, $xAxis) {
 $this = $this | 0;
 $storage = $storage | 0;
 $z = $z | 0;
 $angle = $angle | 0;
 $everywhere = $everywhere | 0;
 $xAxis = $xAxis | 0;
 var $p0 = 0, $p1 = 0, $p = 0, $p080 = 0, $p194 = 0, $p108 = 0, $polygons = 0, $__end__i_i_i = 0, $__first__i_i_i_i_i_i = 0, $gridWidth55 = 0, $1 = 0, $gridHeight60 = 0, $gridScale81 = 0, $X85 = 0, $Y91 = 0, $X_i_i78 = 0, $Y_i_i79 = 0, $X_i_i80 = 0, $Y_i_i81 = 0, $__begin__i_i_i244 = 0, $__end__i_i_i245 = 0, $__first__i_i_i_i_i_i251 = 0, $2 = 0, $gridHeight = 0, $3 = 0, $gridWidth = 0, $gridScale = 0, $X = 0, $Y = 0, $X_i_i = 0, $Y_i_i = 0, $X_i_i57 = 0, $Y_i_i58 = 0, $__begin__i_i_i144 = 0, $__end__i_i_i145 = 0, $__first__i_i_i_i_i_i151 = 0, $4 = 0, $5 = 0, $6 = 0, $y_0167 = 0, $7 = 0, $x_0165 = 0, $x_1 = 0, $dec = 0, $8 = 0, $mul19 = 0, $9$0 = 0, $9$1 = 0, $add$0 = 0, $add$1 = 0, $mul22 = 0, $add25$0 = 0, $add25$1 = 0, $mul28 = 0, $add32$0 = 0, $_pr = 0, $11 = 0, $12 = 0, $__begin__i_i = 0, $__end__i_i = 0, $__first__i_i_i_i_i = 0, $sub_ptr_sub_i_i = 0, $sub_ptr_div_i_i = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $__first_addr_04_i_i = 0, $20 = 0, $21 = 0, $22 = 0, $31 = 0, $33 = 0, $x_2 = 0, $49 = 0, $50 = 0, $add51 = 0, $51 = 0, $52 = 0, $x53_0188 = 0, $53 = 0, $y58_0185 = 0, $y58_1 = 0, $dec77 = 0, $54 = 0, $mul82 = 0, $add86$0 = 0, $add86$1 = 0, $mul88 = 0, $56$0 = 0, $56$1 = 0, $add92$0 = 0, $mul102 = 0, $add106$0 = 0, $_pr151 = 0, $57 = 0, $58 = 0, $__begin__i_i83 = 0, $__end__i_i84 = 0, $__first__i_i_i_i_i85 = 0, $sub_ptr_sub_i_i90 = 0, $sub_ptr_div_i_i91 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $__first_addr_04_i_i102 = 0, $66 = 0, $67 = 0, $68 = 0, $77 = 0, $79 = 0, $y58_2 = 0, $95 = 0, $96 = 0, $add122 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $p0 = __stackBase__ | 0;
 $p1 = __stackBase__ + 16 | 0;
 $p = __stackBase__ + 32 | 0;
 $p080 = __stackBase__ + 48 | 0;
 $p194 = __stackBase__ + 64 | 0;
 $p108 = __stackBase__ + 80 | 0;
 $polygons = $this | 0;
 HEAP32[$this >> 2] = 0;
 $__end__i_i_i = $this + 4 | 0;
 HEAP32[$__end__i_i_i >> 2] = 0;
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = 0;
 HEAP32[$this + 12 >> 2] = $storage;
 HEAP32[$this + 24 >> 2] = $z;
 HEAP8[$this + 28 | 0] = $everywhere & 1;
 HEAPF64[$this + 16 >> 3] = +Math_cos(+(+(90 - $angle | 0) / 180.0 * 3.141592653589793)) + -.01;
 if ($xAxis) {
  $gridHeight = $storage + 24 | 0;
  $3 = HEAP32[$gridHeight >> 2] | 0;
  if (($3 | 0) <= 0) {
   STACKTOP = __stackBase__;
   return;
  }
  $gridWidth = $storage + 20 | 0;
  $gridScale = $storage + 16 | 0;
  $X = $storage | 0;
  $Y = $storage + 8 | 0;
  $X_i_i = $p0 | 0;
  $Y_i_i = $p0 + 8 | 0;
  $X_i_i57 = $p1 | 0;
  $Y_i_i58 = $p1 + 8 | 0;
  $__begin__i_i_i144 = $p | 0;
  $__end__i_i_i145 = $p + 4 | 0;
  $__first__i_i_i_i_i_i151 = $p + 8 | 0;
  $4 = $p1;
  $y_0167 = 0;
  $6 = HEAP32[$gridWidth >> 2] | 0;
  $5 = $3;
  L2931 : while (1) {
   if (($6 | 0) > 0) {
    $x_0165 = 0;
    $7 = $6;
    do {
     do {
      if (__ZN20SupportPolyGenerator13needSupportAtEii($this, $x_0165, $y_0167) | 0) {
       $x_1 = $x_0165;
       while (1) {
        if (($x_1 | 0) >= ($7 | 0)) {
         break;
        }
        if (__ZN20SupportPolyGenerator13needSupportAtEii($this, $x_1, $y_0167) | 0) {
         $x_1 = $x_1 + 1 | 0;
        } else {
         break;
        }
       }
       $dec = $x_1 - 1 | 0;
       if (($dec | 0) <= ($x_0165 | 0)) {
        $x_2 = $dec;
        break;
       }
       $8 = HEAP32[$gridScale >> 2] | 0;
       $mul19 = Math_imul($8, $x_0165) | 0;
       $9$0 = HEAP32[$X >> 2] | 0;
       $9$1 = HEAP32[$X + 4 >> 2] | 0;
       $add$0 = _i64Add($mul19, ($mul19 | 0) < 0 ? -1 : 0, $9$0, $9$1) | 0;
       $add$1 = tempRet0;
       $mul22 = Math_imul($8, $y_0167) | 0;
       $add25$0 = _i64Add($mul22, ($mul22 | 0) < 0 ? -1 : 0, HEAP32[$Y >> 2] | 0, HEAP32[$Y + 4 >> 2] | 0) | 0;
       $add25$1 = tempRet0;
       HEAP32[$X_i_i >> 2] = $add$0;
       HEAP32[$X_i_i + 4 >> 2] = $add$1;
       HEAP32[$Y_i_i >> 2] = $add25$0;
       HEAP32[$Y_i_i + 4 >> 2] = $add25$1;
       $mul28 = Math_imul($8, $dec) | 0;
       $add32$0 = _i64Add($mul28, ($mul28 | 0) < 0 ? -1 : 0, $9$0, $9$1) | 0;
       HEAP32[$X_i_i57 >> 2] = $add32$0;
       HEAP32[$X_i_i57 + 4 >> 2] = tempRet0;
       HEAP32[$Y_i_i58 >> 2] = $add25$0;
       HEAP32[$Y_i_i58 + 4 >> 2] = $add25$1;
       HEAP32[$__begin__i_i_i144 >> 2] = 0;
       HEAP32[$__end__i_i_i145 >> 2] = 0;
       HEAP32[$__first__i_i_i_i_i_i151 >> 2] = 0;
       __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($p, $p0);
       $_pr = HEAP32[$__end__i_i_i145 >> 2] | 0;
       if (($_pr | 0) == (HEAP32[$__first__i_i_i_i_i_i151 >> 2] | 0)) {
        __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($p, $p1);
       } else {
        if (($_pr | 0) != 0) {
         $11 = $_pr;
         HEAP32[$11 >> 2] = HEAP32[$4 >> 2];
         HEAP32[$11 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
         HEAP32[$11 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
         HEAP32[$11 + 12 >> 2] = HEAP32[$4 + 12 >> 2];
        }
        HEAP32[$__end__i_i_i145 >> 2] = $_pr + 16;
       }
       $12 = HEAP32[$__end__i_i_i >> 2] | 0;
       if (($12 | 0) == (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0)) {
        __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($polygons, $p);
       } else {
        do {
         if (($12 | 0) != 0) {
          $__begin__i_i = $12 | 0;
          HEAP32[$__begin__i_i >> 2] = 0;
          $__end__i_i = $12 + 4 | 0;
          HEAP32[$__end__i_i >> 2] = 0;
          $__first__i_i_i_i_i = $12 + 8 | 0;
          HEAP32[$__first__i_i_i_i_i >> 2] = 0;
          $sub_ptr_sub_i_i = (HEAP32[$__end__i_i_i145 >> 2] | 0) - (HEAP32[$__begin__i_i_i144 >> 2] | 0) | 0;
          $sub_ptr_div_i_i = $sub_ptr_sub_i_i >> 4;
          if (($sub_ptr_div_i_i | 0) == 0) {
           break;
          }
          if ($sub_ptr_div_i_i >>> 0 > 268435455) {
           break L2931;
          }
          $16 = __Znwj($sub_ptr_sub_i_i) | 0;
          HEAP32[$__end__i_i >> 2] = $16;
          HEAP32[$__begin__i_i >> 2] = $16;
          HEAP32[$__first__i_i_i_i_i >> 2] = $16 + ($sub_ptr_div_i_i << 4);
          $17 = HEAP32[$__begin__i_i_i144 >> 2] | 0;
          $18 = HEAP32[$__end__i_i_i145 >> 2] | 0;
          if (($17 | 0) == ($18 | 0)) {
           break;
          } else {
           $__first_addr_04_i_i = $17;
           $19 = $16;
          }
          do {
           if (($19 | 0) == 0) {
            $22 = 0;
           } else {
            $20 = $19;
            $21 = $__first_addr_04_i_i;
            HEAP32[$20 >> 2] = HEAP32[$21 >> 2];
            HEAP32[$20 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
            HEAP32[$20 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
            HEAP32[$20 + 12 >> 2] = HEAP32[$21 + 12 >> 2];
            $22 = HEAP32[$__end__i_i >> 2] | 0;
           }
           $19 = $22 + 16 | 0;
           HEAP32[$__end__i_i >> 2] = $19;
           $__first_addr_04_i_i = $__first_addr_04_i_i + 16 | 0;
          } while (($__first_addr_04_i_i | 0) != ($18 | 0));
         }
        } while (0);
        HEAP32[$__end__i_i_i >> 2] = (HEAP32[$__end__i_i_i >> 2] | 0) + 12;
       }
       $31 = HEAP32[$__begin__i_i_i144 >> 2] | 0;
       if (($31 | 0) == 0) {
        $x_2 = $dec;
        break;
       }
       $33 = HEAP32[$__end__i_i_i145 >> 2] | 0;
       if (($31 | 0) != ($33 | 0)) {
        HEAP32[$__end__i_i_i145 >> 2] = $33 + ((($33 - 16 + (-$31 | 0) | 0) >>> 4 ^ -1) << 4);
       }
       __ZdlPv($31);
       $x_2 = $dec;
      } else {
       $x_2 = $x_0165;
      }
     } while (0);
     $x_0165 = $x_2 + 1 | 0;
     $7 = HEAP32[$gridWidth >> 2] | 0;
    } while (($x_0165 | 0) < ($7 | 0));
    $50 = $7;
    $49 = HEAP32[$gridHeight >> 2] | 0;
   } else {
    $50 = $6;
    $49 = $5;
   }
   $add51 = $y_0167 + 2 | 0;
   if (($add51 | 0) < ($49 | 0)) {
    $y_0167 = $add51;
    $6 = $50;
    $5 = $49;
   } else {
    label = 2841;
    break;
   }
  }
  if ((label | 0) == 2841) {
   STACKTOP = __stackBase__;
   return;
  }
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 } else {
  $gridWidth55 = $storage + 20 | 0;
  $1 = HEAP32[$gridWidth55 >> 2] | 0;
  if (($1 | 0) <= 0) {
   STACKTOP = __stackBase__;
   return;
  }
  $gridHeight60 = $storage + 24 | 0;
  $gridScale81 = $storage + 16 | 0;
  $X85 = $storage | 0;
  $Y91 = $storage + 8 | 0;
  $X_i_i78 = $p080 | 0;
  $Y_i_i79 = $p080 + 8 | 0;
  $X_i_i80 = $p194 | 0;
  $Y_i_i81 = $p194 + 8 | 0;
  $__begin__i_i_i244 = $p108 | 0;
  $__end__i_i_i245 = $p108 + 4 | 0;
  $__first__i_i_i_i_i_i251 = $p108 + 8 | 0;
  $2 = $p194;
  $x53_0188 = 0;
  $52 = HEAP32[$gridHeight60 >> 2] | 0;
  $51 = $1;
  L2980 : while (1) {
   if (($52 | 0) > 0) {
    $y58_0185 = 0;
    $53 = $52;
    do {
     do {
      if (__ZN20SupportPolyGenerator13needSupportAtEii($this, $x53_0188, $y58_0185) | 0) {
       $y58_1 = $y58_0185;
       while (1) {
        if (($y58_1 | 0) >= ($53 | 0)) {
         break;
        }
        if (__ZN20SupportPolyGenerator13needSupportAtEii($this, $x53_0188, $y58_1) | 0) {
         $y58_1 = $y58_1 + 1 | 0;
        } else {
         break;
        }
       }
       $dec77 = $y58_1 - 1 | 0;
       if (($dec77 | 0) <= ($y58_0185 | 0)) {
        $y58_2 = $dec77;
        break;
       }
       $54 = HEAP32[$gridScale81 >> 2] | 0;
       $mul82 = Math_imul($54, $x53_0188) | 0;
       $add86$0 = _i64Add($mul82, ($mul82 | 0) < 0 ? -1 : 0, HEAP32[$X85 >> 2] | 0, HEAP32[$X85 + 4 >> 2] | 0) | 0;
       $add86$1 = tempRet0;
       $mul88 = Math_imul($54, $y58_0185) | 0;
       $56$0 = HEAP32[$Y91 >> 2] | 0;
       $56$1 = HEAP32[$Y91 + 4 >> 2] | 0;
       $add92$0 = _i64Add($mul88, ($mul88 | 0) < 0 ? -1 : 0, $56$0, $56$1) | 0;
       HEAP32[$X_i_i78 >> 2] = $add86$0;
       HEAP32[$X_i_i78 + 4 >> 2] = $add86$1;
       HEAP32[$Y_i_i79 >> 2] = $add92$0;
       HEAP32[$Y_i_i79 + 4 >> 2] = tempRet0;
       $mul102 = Math_imul($54, $dec77) | 0;
       $add106$0 = _i64Add($mul102, ($mul102 | 0) < 0 ? -1 : 0, $56$0, $56$1) | 0;
       HEAP32[$X_i_i80 >> 2] = $add86$0;
       HEAP32[$X_i_i80 + 4 >> 2] = $add86$1;
       HEAP32[$Y_i_i81 >> 2] = $add106$0;
       HEAP32[$Y_i_i81 + 4 >> 2] = tempRet0;
       HEAP32[$__begin__i_i_i244 >> 2] = 0;
       HEAP32[$__end__i_i_i245 >> 2] = 0;
       HEAP32[$__first__i_i_i_i_i_i251 >> 2] = 0;
       __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($p108, $p080);
       $_pr151 = HEAP32[$__end__i_i_i245 >> 2] | 0;
       if (($_pr151 | 0) == (HEAP32[$__first__i_i_i_i_i_i251 >> 2] | 0)) {
        __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($p108, $p194);
       } else {
        if (($_pr151 | 0) != 0) {
         $57 = $_pr151;
         HEAP32[$57 >> 2] = HEAP32[$2 >> 2];
         HEAP32[$57 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
         HEAP32[$57 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
         HEAP32[$57 + 12 >> 2] = HEAP32[$2 + 12 >> 2];
        }
        HEAP32[$__end__i_i_i245 >> 2] = $_pr151 + 16;
       }
       $58 = HEAP32[$__end__i_i_i >> 2] | 0;
       if (($58 | 0) == (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0)) {
        __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($polygons, $p108);
       } else {
        do {
         if (($58 | 0) != 0) {
          $__begin__i_i83 = $58 | 0;
          HEAP32[$__begin__i_i83 >> 2] = 0;
          $__end__i_i84 = $58 + 4 | 0;
          HEAP32[$__end__i_i84 >> 2] = 0;
          $__first__i_i_i_i_i85 = $58 + 8 | 0;
          HEAP32[$__first__i_i_i_i_i85 >> 2] = 0;
          $sub_ptr_sub_i_i90 = (HEAP32[$__end__i_i_i245 >> 2] | 0) - (HEAP32[$__begin__i_i_i244 >> 2] | 0) | 0;
          $sub_ptr_div_i_i91 = $sub_ptr_sub_i_i90 >> 4;
          if (($sub_ptr_div_i_i91 | 0) == 0) {
           break;
          }
          if ($sub_ptr_div_i_i91 >>> 0 > 268435455) {
           break L2980;
          }
          $62 = __Znwj($sub_ptr_sub_i_i90) | 0;
          HEAP32[$__end__i_i84 >> 2] = $62;
          HEAP32[$__begin__i_i83 >> 2] = $62;
          HEAP32[$__first__i_i_i_i_i85 >> 2] = $62 + ($sub_ptr_div_i_i91 << 4);
          $63 = HEAP32[$__begin__i_i_i244 >> 2] | 0;
          $64 = HEAP32[$__end__i_i_i245 >> 2] | 0;
          if (($63 | 0) == ($64 | 0)) {
           break;
          } else {
           $__first_addr_04_i_i102 = $63;
           $65 = $62;
          }
          do {
           if (($65 | 0) == 0) {
            $68 = 0;
           } else {
            $66 = $65;
            $67 = $__first_addr_04_i_i102;
            HEAP32[$66 >> 2] = HEAP32[$67 >> 2];
            HEAP32[$66 + 4 >> 2] = HEAP32[$67 + 4 >> 2];
            HEAP32[$66 + 8 >> 2] = HEAP32[$67 + 8 >> 2];
            HEAP32[$66 + 12 >> 2] = HEAP32[$67 + 12 >> 2];
            $68 = HEAP32[$__end__i_i84 >> 2] | 0;
           }
           $65 = $68 + 16 | 0;
           HEAP32[$__end__i_i84 >> 2] = $65;
           $__first_addr_04_i_i102 = $__first_addr_04_i_i102 + 16 | 0;
          } while (($__first_addr_04_i_i102 | 0) != ($64 | 0));
         }
        } while (0);
        HEAP32[$__end__i_i_i >> 2] = (HEAP32[$__end__i_i_i >> 2] | 0) + 12;
       }
       $77 = HEAP32[$__begin__i_i_i244 >> 2] | 0;
       if (($77 | 0) == 0) {
        $y58_2 = $dec77;
        break;
       }
       $79 = HEAP32[$__end__i_i_i245 >> 2] | 0;
       if (($77 | 0) != ($79 | 0)) {
        HEAP32[$__end__i_i_i245 >> 2] = $79 + ((($79 - 16 + (-$77 | 0) | 0) >>> 4 ^ -1) << 4);
       }
       __ZdlPv($77);
       $y58_2 = $dec77;
      } else {
       $y58_2 = $y58_0185;
      }
     } while (0);
     $y58_0185 = $y58_2 + 1 | 0;
     $53 = HEAP32[$gridHeight60 >> 2] | 0;
    } while (($y58_0185 | 0) < ($53 | 0));
    $96 = $53;
    $95 = HEAP32[$gridWidth55 >> 2] | 0;
   } else {
    $96 = $52;
    $95 = $51;
   }
   $add122 = $x53_0188 + 2 | 0;
   if (($add122 | 0) < ($95 | 0)) {
    $x53_0188 = $add122;
    $52 = $96;
    $51 = $95;
   } else {
    label = 2838;
    break;
   }
  }
  if ((label | 0) == 2838) {
   STACKTOP = __stackBase__;
   return;
  }
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
}
function __ZN20SupportPolyGenerator13needSupportAtEii($this, $x, $y) {
 $this = $this | 0;
 $x = $x | 0;
 $y = $y | 0;
 var $ref = 0, $0 = 0, $add = 0, $4 = 0, $5 = 0, $6 = 0, $cmp57 = 0, $7 = 0.0, $z33 = 0, $i_031 = 0, $10 = 0, $add48 = 0, $13 = 0.0, $15 = 0, $sub83 = 0, $17 = 0, $add123 = 0, $21 = 0, $retval_0 = 0;
 if (($x | 0) < 1 | ($y | 0) < 1) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 $ref = HEAP32[$this + 12 >> 2] | 0;
 $0 = HEAP32[$ref + 20 >> 2] | 0;
 if (($0 - 1 | 0) <= ($x | 0)) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 if (((HEAP32[$ref + 24 >> 2] | 0) - 1 | 0) <= ($y | 0)) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 $add = (Math_imul($0, $y) | 0) + $x | 0;
 $4 = HEAP32[$ref + 28 >> 2] | 0;
 $5 = HEAP32[$4 + ($add * 12 & -1) + 4 >> 2] | 0;
 $6 = HEAP32[$4 + ($add * 12 & -1) >> 2] | 0;
 $cmp57 = ($5 | 0) == ($6 | 0);
 L3035 : do {
  if ((HEAP8[$this + 28 | 0] & 1) == 0) {
   if ($cmp57) {
    $retval_0 = 0;
    return $retval_0 | 0;
   }
   $13 = +HEAPF64[$this + 16 >> 3];
   if (+HEAPF64[$6 + 8 >> 3] < $13) {
    $retval_0 = 0;
    return $retval_0 | 0;
   }
   $15 = HEAP32[$this + 24 >> 2] | 0;
   if ((HEAP32[$6 >> 2] | 0) < ($15 | 0)) {
    $retval_0 = 0;
    return $retval_0 | 0;
   }
   $sub83 = $add - $0 | 0;
   $17 = HEAP32[$4 + ($sub83 * 12 & -1) >> 2] | 0;
   if ((HEAP32[$4 + ($sub83 * 12 & -1) + 4 >> 2] | 0) == ($17 | 0)) {
    $retval_0 = 0;
    return $retval_0 | 0;
   }
   if (+HEAPF64[$17 + 8 >> 3] < $13) {
    $retval_0 = 0;
    return $retval_0 | 0;
   }
   if ((HEAP32[$17 >> 2] | 0) < ($15 | 0)) {
    $retval_0 = 0;
    return $retval_0 | 0;
   }
   $add123 = $add + $0 | 0;
   $21 = HEAP32[$4 + ($add123 * 12 & -1) >> 2] | 0;
   if ((HEAP32[$4 + ($add123 * 12 & -1) + 4 >> 2] | 0) == ($21 | 0)) {
    $retval_0 = 0;
    return $retval_0 | 0;
   }
   if (+HEAPF64[$21 + 8 >> 3] < $13) {
    $retval_0 = 0;
    return $retval_0 | 0;
   }
   if ((HEAP32[$21 >> 2] | 0) < ($15 | 0)) {
    $retval_0 = 0;
   } else {
    break;
   }
   return $retval_0 | 0;
  } else {
   if ($cmp57) {
    $retval_0 = 0;
    return $retval_0 | 0;
   }
   $7 = +HEAPF64[$this + 16 >> 3];
   $z33 = $this + 24 | 0;
   $i_031 = 0;
   while (1) {
    do {
     if (+HEAPF64[$6 + ($i_031 << 4) + 8 >> 3] >= $7) {
      $10 = HEAP32[$z33 >> 2] | 0;
      if ((HEAP32[$6 + ($i_031 << 4) >> 2] | 0) < ($10 | 0)) {
       break;
      }
      if (($i_031 | 0) == 0) {
       break L3035;
      }
      if ((HEAP32[$6 + ($i_031 - 1 << 4) >> 2] | 0) < ($10 | 0)) {
       break L3035;
      }
     }
    } while (0);
    $add48 = $i_031 + 2 | 0;
    if ($add48 >>> 0 < $5 - $6 >> 4 >>> 0) {
     $i_031 = $add48;
    } else {
     $retval_0 = 0;
     break;
    }
   }
   return $retval_0 | 0;
  }
 } while (0);
 $retval_0 = 1;
 return $retval_0 | 0;
}
function __ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_($agg_result, $__first, $__last, $__result) {
 $agg_result = $agg_result | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__result = $__result | 0;
 var $__seg_1_i = 0, $1 = 0, $3 = 0, $sub_i = 0, $sub = 0, $_sroa_speculated = 0, $and = 0, $and8 = 0, $__seg_9 = 0, $5 = 0, $7 = 0, $__ctz_12 = 0, $add = 0, $incdec_ptr = 0, $__seg_19_pre_phi = 0, $12 = 0, $__n_0 = 0, $div18 = 0, $sub22 = 0, $add_ptr28 = 0, $shr31 = 0, $and34 = 0, $19 = 0, $21 = 0, $__seg_2_i_i_pre_phi = 0, $__seg__i_i = 0, $23 = 0, $__ctz__i_i = 0, $__ctz_3_i_i = 0, $24 = 0;
 $__seg_1_i = $__first | 0;
 $1 = HEAP32[$__seg_1_i >> 2] | 0;
 $3 = HEAP32[$__first + 4 >> 2] | 0;
 $sub_i = (HEAP32[$__last + 4 >> 2] | 0) - $3 + ((HEAP32[$__last >> 2] | 0) - $1 << 3) | 0;
 if (($sub_i | 0) <= 0) {
  $__seg_2_i_i_pre_phi = $__result | 0;
  $__seg__i_i = $agg_result | 0;
  $23 = HEAP32[$__seg_2_i_i_pre_phi >> 2] | 0;
  HEAP32[$__seg__i_i >> 2] = $23;
  $__ctz__i_i = $agg_result + 4 | 0;
  $__ctz_3_i_i = $__result + 4 | 0;
  $24 = HEAP32[$__ctz_3_i_i >> 2] | 0;
  HEAP32[$__ctz__i_i >> 2] = $24;
  return;
 }
 if (($3 | 0) == 0) {
  $__n_0 = $sub_i;
  $12 = $1;
  $__seg_19_pre_phi = $__result | 0;
 } else {
  $sub = 32 - $3 | 0;
  $_sroa_speculated = ($sub_i | 0) < ($sub | 0) ? $sub_i : $sub;
  $and = -1 >>> (($sub - $_sroa_speculated | 0) >>> 0) & -1 << $3;
  $and8 = HEAP32[$1 >> 2] & $and;
  $__seg_9 = $__result | 0;
  $5 = HEAP32[$__seg_9 >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] & ($and ^ -1);
  $7 = HEAP32[$__seg_9 >> 2] | 0;
  HEAP32[$7 >> 2] = HEAP32[$7 >> 2] | $and8;
  $__ctz_12 = $__result + 4 | 0;
  $add = (HEAP32[$__ctz_12 >> 2] | 0) + $_sroa_speculated | 0;
  HEAP32[$__seg_9 >> 2] = (HEAP32[$__seg_9 >> 2] | 0) + ($add >>> 5 << 2);
  HEAP32[$__ctz_12 >> 2] = $add & 31;
  $incdec_ptr = (HEAP32[$__seg_1_i >> 2] | 0) + 4 | 0;
  HEAP32[$__seg_1_i >> 2] = $incdec_ptr;
  $__n_0 = $sub_i - $_sroa_speculated | 0;
  $12 = $incdec_ptr;
  $__seg_19_pre_phi = $__seg_9;
 }
 $div18 = $__n_0 >>> 5;
 _memmove(HEAP32[$__seg_19_pre_phi >> 2] | 0, $12 | 0, $div18 << 2 | 0);
 $sub22 = $__n_0 - ($div18 << 5) | 0;
 HEAP32[$__seg_19_pre_phi >> 2] = (HEAP32[$__seg_19_pre_phi >> 2] | 0) + ($div18 << 2);
 if (($sub22 | 0) <= 0) {
  $__seg_2_i_i_pre_phi = $__seg_19_pre_phi;
  $__seg__i_i = $agg_result | 0;
  $23 = HEAP32[$__seg_2_i_i_pre_phi >> 2] | 0;
  HEAP32[$__seg__i_i >> 2] = $23;
  $__ctz__i_i = $agg_result + 4 | 0;
  $__ctz_3_i_i = $__result + 4 | 0;
  $24 = HEAP32[$__ctz_3_i_i >> 2] | 0;
  HEAP32[$__ctz__i_i >> 2] = $24;
  return;
 }
 $add_ptr28 = (HEAP32[$__seg_1_i >> 2] | 0) + ($div18 << 2) | 0;
 HEAP32[$__seg_1_i >> 2] = $add_ptr28;
 $shr31 = -1 >>> ((32 - $sub22 | 0) >>> 0);
 $and34 = HEAP32[$add_ptr28 >> 2] & $shr31;
 $19 = HEAP32[$__seg_19_pre_phi >> 2] | 0;
 HEAP32[$19 >> 2] = HEAP32[$19 >> 2] & ($shr31 ^ -1);
 $21 = HEAP32[$__seg_19_pre_phi >> 2] | 0;
 HEAP32[$21 >> 2] = HEAP32[$21 >> 2] | $and34;
 HEAP32[$__result + 4 >> 2] = $sub22;
 $__seg_2_i_i_pre_phi = $__seg_19_pre_phi;
 $__seg__i_i = $agg_result | 0;
 $23 = HEAP32[$__seg_2_i_i_pre_phi >> 2] | 0;
 HEAP32[$__seg__i_i >> 2] = $23;
 $__ctz__i_i = $agg_result + 4 | 0;
 $__ctz_3_i_i = $__result + 4 | 0;
 $24 = HEAP32[$__ctz_3_i_i >> 2] | 0;
 HEAP32[$__ctz__i_i >> 2] = $24;
 return;
}
function __ZN12GCodePlanner10addPolygonERNSt3__16vectorIN10ClipperLib8IntPointENS0_9allocatorIS3_EEEEiP15GCodePathConfig($this, $polygon, $startIdx, $config) {
 $this = $this | 0;
 $polygon = $polygon | 0;
 $startIdx = $startIdx | 0;
 $config = $config | 0;
 var $agg_tmp812 = 0, $agg_tmp510 = 0, $agg_tmp = 0, $__begin__i = 0, $1 = 0, $2 = 0, $__end__i = 0, $4 = 0, $sub_ptr_div_i32 = 0, $tmp = 0, $5 = 0, $sub_ptr_div_i35 = 0, $6 = 0, $i_034 = 0, $7 = 0, $agg_tmp51039 = 0, $call_i = 0, $__end__i_i = 0, $8 = 0, $10 = 0, $11 = 0, $14 = 0, $agg_tmp81240 = 0, $tmp13 = 0, $call_i15 = 0, $__end__i_i16 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $agg_tmp812 = __stackBase__ | 0;
 $agg_tmp510 = __stackBase__ + 16 | 0;
 $agg_tmp = __stackBase__ + 32 | 0;
 $__begin__i = $polygon | 0;
 $1 = (HEAP32[$__begin__i >> 2] | 0) + ($startIdx << 4) | 0;
 $2 = $agg_tmp;
 HEAP32[$2 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$2 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$2 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$2 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
 __ZN12GCodePlanner7addMoveEN10ClipperLib8IntPointE($this, $agg_tmp);
 $__end__i = $polygon + 4 | 0;
 $4 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i32 = (HEAP32[$__end__i >> 2] | 0) - $4 >> 4;
 if ($sub_ptr_div_i32 >>> 0 <= 1) {
  STACKTOP = __stackBase__;
  return;
 }
 $tmp = $agg_tmp510;
 $5 = $this + 8 | 0;
 $i_034 = 1;
 $6 = $4;
 $sub_ptr_div_i35 = $sub_ptr_div_i32;
 do {
  $7 = $6 + ((($i_034 + $startIdx | 0) >>> 0) % ($sub_ptr_div_i35 >>> 0) >>> 0 << 4) | 0;
  $agg_tmp51039 = $agg_tmp510;
  HEAP32[$agg_tmp51039 >> 2] = HEAP32[$7 >> 2];
  HEAP32[$agg_tmp51039 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$agg_tmp51039 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  HEAP32[$agg_tmp51039 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
  $call_i = __ZN12GCodePlanner23getLatestPathWithConfigEP15GCodePathConfig($this, $config) | 0;
  $__end__i_i = $call_i + 16 | 0;
  $8 = HEAP32[$__end__i_i >> 2] | 0;
  if (($8 | 0) == (HEAP32[$call_i + 20 >> 2] | 0)) {
   __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($call_i + 12 | 0, $agg_tmp510);
  } else {
   if (($8 | 0) == 0) {
    $11 = 0;
   } else {
    $10 = $8;
    HEAP32[$10 >> 2] = HEAP32[$tmp >> 2];
    HEAP32[$10 + 4 >> 2] = HEAP32[$tmp + 4 >> 2];
    HEAP32[$10 + 8 >> 2] = HEAP32[$tmp + 8 >> 2];
    HEAP32[$10 + 12 >> 2] = HEAP32[$tmp + 12 >> 2];
    $11 = HEAP32[$__end__i_i >> 2] | 0;
   }
   HEAP32[$__end__i_i >> 2] = $11 + 16;
  }
  HEAP32[$5 >> 2] = HEAP32[$tmp >> 2];
  HEAP32[$5 + 4 >> 2] = HEAP32[$tmp + 4 >> 2];
  HEAP32[$5 + 8 >> 2] = HEAP32[$tmp + 8 >> 2];
  HEAP32[$5 + 12 >> 2] = HEAP32[$tmp + 12 >> 2];
  $i_034 = $i_034 + 1 | 0;
  $6 = HEAP32[$__begin__i >> 2] | 0;
  $sub_ptr_div_i35 = (HEAP32[$__end__i >> 2] | 0) - $6 >> 4;
 } while ($i_034 >>> 0 < $sub_ptr_div_i35 >>> 0);
 if ($sub_ptr_div_i35 >>> 0 <= 2) {
  STACKTOP = __stackBase__;
  return;
 }
 $14 = $6 + ($startIdx << 4) | 0;
 $agg_tmp81240 = $agg_tmp812;
 HEAP32[$agg_tmp81240 >> 2] = HEAP32[$14 >> 2];
 HEAP32[$agg_tmp81240 + 4 >> 2] = HEAP32[$14 + 4 >> 2];
 HEAP32[$agg_tmp81240 + 8 >> 2] = HEAP32[$14 + 8 >> 2];
 HEAP32[$agg_tmp81240 + 12 >> 2] = HEAP32[$14 + 12 >> 2];
 $tmp13 = $agg_tmp812;
 $call_i15 = __ZN12GCodePlanner23getLatestPathWithConfigEP15GCodePathConfig($this, $config) | 0;
 $__end__i_i16 = $call_i15 + 16 | 0;
 $15 = HEAP32[$__end__i_i16 >> 2] | 0;
 if (($15 | 0) == (HEAP32[$call_i15 + 20 >> 2] | 0)) {
  __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($call_i15 + 12 | 0, $agg_tmp812);
 } else {
  if (($15 | 0) == 0) {
   $18 = 0;
  } else {
   $17 = $15;
   HEAP32[$17 >> 2] = HEAP32[$tmp13 >> 2];
   HEAP32[$17 + 4 >> 2] = HEAP32[$tmp13 + 4 >> 2];
   HEAP32[$17 + 8 >> 2] = HEAP32[$tmp13 + 8 >> 2];
   HEAP32[$17 + 12 >> 2] = HEAP32[$tmp13 + 12 >> 2];
   $18 = HEAP32[$__end__i_i16 >> 2] | 0;
  }
  HEAP32[$__end__i_i16 >> 2] = $18 + 16;
 }
 $19 = $this + 8 | 0;
 HEAP32[$19 >> 2] = HEAP32[$tmp13 >> 2];
 HEAP32[$19 + 4 >> 2] = HEAP32[$tmp13 + 4 >> 2];
 HEAP32[$19 + 8 >> 2] = HEAP32[$tmp13 + 8 >> 2];
 HEAP32[$19 + 12 >> 2] = HEAP32[$tmp13 + 12 >> 2];
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $agg_tmp_i_i = 0, $agg_tmp2_i_i = 0, $agg_tmp3_i_i = 0, $__first__i_i_i_i = 0, $add_i_i = 0, $1 = 0, $__begin__i_i36 = 0, $2 = 0, $__size__i = 0, $3 = 0, $div_i_i51 = 0, $rem_i_i53 = 0, $8 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $agg_tmp_i_i = __stackBase__ | 0;
 $agg_tmp2_i_i = __stackBase__ + 8 | 0;
 $agg_tmp3_i_i = __stackBase__ + 16 | 0;
 $__first__i_i_i_i = $this + 8 | 0;
 if (HEAP32[$__first__i_i_i_i >> 2] << 5 >>> 0 >= $__n >>> 0) {
  STACKTOP = __stackBase__;
  return;
 }
 if (($__n | 0) < 0) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $add_i_i = (($__n - 1 | 0) >>> 5) + 1 | 0;
 $1 = __Znwj($add_i_i << 2) | 0;
 $__begin__i_i36 = $this | 0;
 $2 = HEAP32[$__begin__i_i36 >> 2] | 0;
 $__size__i = $this + 4 | 0;
 $3 = HEAP32[$__size__i >> 2] | 0;
 $div_i_i51 = $3 >>> 5;
 $rem_i_i53 = $3 & 31;
 HEAP32[$agg_tmp_i_i >> 2] = $2;
 HEAP32[$agg_tmp_i_i + 4 >> 2] = 0;
 HEAP32[$agg_tmp2_i_i >> 2] = $2 + ($div_i_i51 << 2);
 HEAP32[$agg_tmp2_i_i + 4 >> 2] = $rem_i_i53;
 HEAP32[$agg_tmp3_i_i >> 2] = $1;
 HEAP32[$agg_tmp3_i_i + 4 >> 2] = 0;
 __ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(__stackBase__ + 24 | 0, $agg_tmp_i_i, $agg_tmp2_i_i, $agg_tmp3_i_i);
 $8 = HEAP32[$__begin__i_i36 >> 2] | 0;
 HEAP32[$__begin__i_i36 >> 2] = $1;
 HEAP32[$__size__i >> 2] = $div_i_i51 << 5 | $rem_i_i53;
 HEAP32[$__first__i_i_i_i >> 2] = $add_i_i;
 if (($8 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv($8);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIKiEEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_sub_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_022 = 0, $retval_i_023 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $incdec_ptr = 0, $5 = 0, $sub_ptr_sub_i_i = 0, $add_ptr_i_i13 = 0, $7 = 0, $8 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = (HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i >> 2;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_sub_i_i_i = (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0;
 if ($sub_ptr_sub_i_i_i >> 2 >>> 0 > 536870910) {
  $retval_i_022 = 1073741823;
  label = 2922;
 } else {
  $mul_i = $sub_ptr_sub_i_i_i >> 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_023 = 0;
  } else {
   $retval_i_022 = $_sroa_speculated;
   label = 2922;
  }
 }
 if ((label | 0) == 2922) {
  $cond_i_i = __Znwj($retval_i_022 << 2) | 0;
  $retval_i_023 = $retval_i_022;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i << 2) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_023 << 2) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  HEAP32[$add_ptr_i_i >> 2] = HEAP32[$__x >> 2];
 }
 $incdec_ptr = $cond_i_i + ($add << 2) | 0;
 $5 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i_i = (HEAP32[$__end__i >> 2] | 0) - $5 | 0;
 $add_ptr_i_i13 = $cond_i_i + ($sub_ptr_div_i - ($sub_ptr_sub_i_i >> 2) << 2) | 0;
 $7 = $add_ptr_i_i13;
 $8 = $5;
 _memcpy($7 | 0, $8 | 0, $sub_ptr_sub_i_i) | 0;
 HEAP32[$__begin__i >> 2] = $add_ptr_i_i13;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 if (($5 | 0) == 0) {
  return;
 }
 __ZdlPv($8);
 return;
}
function __ZNSt3__16vectorIPNS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS6_EEE21__push_back_slow_pathIKS6_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_sub_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_022 = 0, $retval_i_023 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $incdec_ptr = 0, $5 = 0, $sub_ptr_sub_i_i = 0, $add_ptr_i_i13 = 0, $7 = 0, $8 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = (HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i >> 2;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_sub_i_i_i = (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0;
 if ($sub_ptr_sub_i_i_i >> 2 >>> 0 > 536870910) {
  $retval_i_022 = 1073741823;
  label = 2934;
 } else {
  $mul_i = $sub_ptr_sub_i_i_i >> 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_023 = 0;
  } else {
   $retval_i_022 = $_sroa_speculated;
   label = 2934;
  }
 }
 if ((label | 0) == 2934) {
  $cond_i_i = __Znwj($retval_i_022 << 2) | 0;
  $retval_i_023 = $retval_i_022;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i << 2) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_023 << 2) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  HEAP32[$add_ptr_i_i >> 2] = HEAP32[$__x >> 2];
 }
 $incdec_ptr = $cond_i_i + ($add << 2) | 0;
 $5 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i_i = (HEAP32[$__end__i >> 2] | 0) - $5 | 0;
 $add_ptr_i_i13 = $cond_i_i + ($sub_ptr_div_i - ($sub_ptr_sub_i_i >> 2) << 2) | 0;
 $7 = $add_ptr_i_i13;
 $8 = $5;
 _memcpy($7 | 0, $8 | 0, $sub_ptr_sub_i_i) | 0;
 HEAP32[$__begin__i >> 2] = $add_ptr_i_i13;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 if (($5 | 0) == 0) {
  return;
 }
 __ZdlPv($8);
 return;
}
function __ZN12GCodePlanner7addMoveEN10ClipperLib8IntPointE($this, $p) {
 $this = $this | 0;
 $p = $p | 0;
 var $pointList = 0, $agg_tmp = 0, $agg_tmp8 = 0, $call = 0, $forceRetraction = 0, $lastPosition_idx = 0, $lastPosition_idx8 = 0, $lastPosition_idx8_val$0 = 0, $lastPosition_idx8_val$1 = 0, $p_idx = 0, $p_idx9 = 0, $p_idx9_val$0 = 0, $p_idx9_val$1 = 0, $sub_i$0 = 0, $sub_i$1 = 0, $sub3_i$0 = 0, $sub3_i$1 = 0, $sub_i_off$0 = 0, $sub_i_off$1 = 0, $$etemp$9$1 = 0, $sub3_i_off$0 = 0, $sub3_i_off$1 = 0, $$etemp$11$1 = 0, $mul_i_i$0 = 0, $mul_i_i$1 = 0, $mul3_i_i$0 = 0, $add_i_i$0 = 0, $add_i_i$1 = 0, $$etemp$12$1 = 0, $4 = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $__end__i52 = 0, $__first__i_i_i_i57 = 0, $points = 0, $11 = 0, $n_033 = 0, $arrayidx_i = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $inc = 0, $18 = 0, $26 = 0, $28 = 0, $__end__i = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $lastPosition23 = 0, $38 = 0, $39 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 tempParam = $p;
 $p = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[$p >> 2] = HEAP32[tempParam >> 2];
 HEAP32[$p + 4 >> 2] = HEAP32[tempParam + 4 >> 2];
 HEAP32[$p + 8 >> 2] = HEAP32[tempParam + 8 >> 2];
 HEAP32[$p + 12 >> 2] = HEAP32[tempParam + 12 >> 2];
 $pointList = __stackBase__ | 0;
 $agg_tmp = __stackBase__ + 16 | 0;
 $agg_tmp8 = __stackBase__ + 32 | 0;
 $call = __ZN12GCodePlanner23getLatestPathWithConfigEP15GCodePathConfig($this, $this + 40 | 0) | 0;
 $forceRetraction = $this + 60 | 0;
 do {
  if ((HEAP8[$forceRetraction] & 1) == 0) {
   $4 = HEAP32[$this + 36 >> 2] | 0;
   if (($4 | 0) == 0) {
    break;
   }
   $__begin__i_i_i = $pointList | 0;
   HEAP32[$__begin__i_i_i >> 2] = 0;
   $__end__i_i_i = $pointList + 4 | 0;
   HEAP32[$__end__i_i_i >> 2] = 0;
   HEAP32[$pointList + 8 >> 2] = 0;
   $5 = $agg_tmp;
   $6 = $this + 8 | 0;
   HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
   HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
   HEAP32[$5 + 12 >> 2] = HEAP32[$6 + 12 >> 2];
   $7 = $agg_tmp8;
   $8 = $p;
   HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
   HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
   HEAP32[$7 + 12 >> 2] = HEAP32[$8 + 12 >> 2];
   do {
    if (__ZN4Comb4calcEN10ClipperLib8IntPointES1_RNSt3__16vectorIS1_NS2_9allocatorIS1_EEEE($4, $agg_tmp, $agg_tmp8, $pointList) | 0) {
     $9 = HEAP32[$__end__i_i_i >> 2] | 0;
     $10 = HEAP32[$__begin__i_i_i >> 2] | 0;
     if (($9 | 0) == ($10 | 0)) {
      $26 = $9;
      break;
     }
     $__end__i52 = $call + 16 | 0;
     $__first__i_i_i_i57 = $call + 20 | 0;
     $points = $call + 12 | 0;
     $n_033 = 0;
     $11 = $10;
     while (1) {
      $arrayidx_i = $11 + ($n_033 << 4) | 0;
      $12 = HEAP32[$__end__i52 >> 2] | 0;
      if (($12 | 0) == (HEAP32[$__first__i_i_i_i57 >> 2] | 0)) {
       __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($points, $arrayidx_i);
      } else {
       if (($12 | 0) == 0) {
        $16 = 0;
       } else {
        $14 = $12;
        $15 = $arrayidx_i;
        HEAP32[$14 >> 2] = HEAP32[$15 >> 2];
        HEAP32[$14 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
        HEAP32[$14 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
        HEAP32[$14 + 12 >> 2] = HEAP32[$15 + 12 >> 2];
        $16 = HEAP32[$__end__i52 >> 2] | 0;
       }
       HEAP32[$__end__i52 >> 2] = $16 + 16;
      }
      $inc = $n_033 + 1 | 0;
      $18 = HEAP32[$__begin__i_i_i >> 2] | 0;
      if ($inc >>> 0 < (HEAP32[$__end__i_i_i >> 2] | 0) - $18 >> 4 >>> 0) {
       $n_033 = $inc;
       $11 = $18;
      } else {
       $26 = $18;
       break;
      }
     }
    } else {
     HEAP8[$call + 4 | 0] = 1;
     $26 = HEAP32[$__begin__i_i_i >> 2] | 0;
    }
   } while (0);
   if (($26 | 0) == 0) {
    break;
   }
   $28 = HEAP32[$__end__i_i_i >> 2] | 0;
   if (($26 | 0) != ($28 | 0)) {
    HEAP32[$__end__i_i_i >> 2] = $28 + ((($28 - 16 + (-$26 | 0) | 0) >>> 4 ^ -1) << 4);
   }
   __ZdlPv($26);
  } else {
   $lastPosition_idx = $this + 8 | 0;
   $lastPosition_idx8 = $this + 16 | 0;
   $lastPosition_idx8_val$0 = HEAP32[$lastPosition_idx8 >> 2] | 0;
   $lastPosition_idx8_val$1 = HEAP32[$lastPosition_idx8 + 4 >> 2] | 0;
   $p_idx = $p | 0;
   $p_idx9 = $p + 8 | 0;
   $p_idx9_val$0 = HEAP32[$p_idx9 >> 2] | 0;
   $p_idx9_val$1 = HEAP32[$p_idx9 + 4 >> 2] | 0;
   $sub_i$0 = _i64Subtract(HEAP32[$lastPosition_idx >> 2] | 0, HEAP32[$lastPosition_idx + 4 >> 2] | 0, HEAP32[$p_idx >> 2] | 0, HEAP32[$p_idx + 4 >> 2] | 0) | 0;
   $sub_i$1 = tempRet0;
   $sub3_i$0 = _i64Subtract($lastPosition_idx8_val$0, $lastPosition_idx8_val$1, $p_idx9_val$0, $p_idx9_val$1) | 0;
   $sub3_i$1 = tempRet0;
   $sub_i_off$0 = _i64Add($sub_i$0, $sub_i$1, 1500, 0) | 0;
   $sub_i_off$1 = tempRet0;
   $$etemp$9$1 = 0;
   do {
    if ($sub_i_off$1 >>> 0 > $$etemp$9$1 >>> 0 | $sub_i_off$1 >>> 0 == $$etemp$9$1 >>> 0 & $sub_i_off$0 >>> 0 > 3e3 >>> 0) {
     label = 2946;
    } else {
     $sub3_i_off$0 = _i64Add($sub3_i$0, $sub3_i$1, 1500, 0) | 0;
     $sub3_i_off$1 = tempRet0;
     $$etemp$11$1 = 0;
     if ($sub3_i_off$1 >>> 0 > $$etemp$11$1 >>> 0 | $sub3_i_off$1 >>> 0 == $$etemp$11$1 >>> 0 & $sub3_i_off$0 >>> 0 > 3e3 >>> 0) {
      label = 2946;
      break;
     }
     $mul_i_i$0 = ___muldi3($sub_i$0, $sub_i$1, $sub_i$0, $sub_i$1) | 0;
     $mul_i_i$1 = tempRet0;
     $mul3_i_i$0 = ___muldi3($sub3_i$0, $sub3_i$1, $sub3_i$0, $sub3_i$1) | 0;
     $add_i_i$0 = _i64Add($mul3_i_i$0, tempRet0, $mul_i_i$0, $mul_i_i$1) | 0;
     $add_i_i$1 = tempRet0;
     $$etemp$12$1 = 0;
     if (!(($add_i_i$1 | 0) < ($$etemp$12$1 | 0) | ($add_i_i$1 | 0) == ($$etemp$12$1 | 0) & $add_i_i$0 >>> 0 < 2250001 >>> 0)) {
      label = 2946;
     }
    }
   } while (0);
   if ((label | 0) == 2946) {
    HEAP8[$call + 4 | 0] = 1;
   }
   HEAP8[$forceRetraction] = 0;
  }
 } while (0);
 $__end__i = $call + 16 | 0;
 $33 = HEAP32[$__end__i >> 2] | 0;
 if (($33 | 0) == (HEAP32[$call + 20 >> 2] | 0)) {
  __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($call + 12 | 0, $p);
  $lastPosition23 = $this + 8 | 0;
  $38 = $lastPosition23;
  $39 = $p;
  HEAP32[$38 >> 2] = HEAP32[$39 >> 2];
  HEAP32[$38 + 4 >> 2] = HEAP32[$39 + 4 >> 2];
  HEAP32[$38 + 8 >> 2] = HEAP32[$39 + 8 >> 2];
  HEAP32[$38 + 12 >> 2] = HEAP32[$39 + 12 >> 2];
  STACKTOP = __stackBase__;
  return;
 }
 if (($33 | 0) == 0) {
  $37 = 0;
 } else {
  $35 = $33;
  $36 = $p;
  HEAP32[$35 >> 2] = HEAP32[$36 >> 2];
  HEAP32[$35 + 4 >> 2] = HEAP32[$36 + 4 >> 2];
  HEAP32[$35 + 8 >> 2] = HEAP32[$36 + 8 >> 2];
  HEAP32[$35 + 12 >> 2] = HEAP32[$36 + 12 >> 2];
  $37 = HEAP32[$__end__i >> 2] | 0;
 }
 HEAP32[$__end__i >> 2] = $37 + 16;
 $lastPosition23 = $this + 8 | 0;
 $38 = $lastPosition23;
 $39 = $p;
 HEAP32[$38 >> 2] = HEAP32[$39 >> 2];
 HEAP32[$38 + 4 >> 2] = HEAP32[$39 + 4 >> 2];
 HEAP32[$38 + 8 >> 2] = HEAP32[$39 + 8 >> 2];
 HEAP32[$38 + 12 >> 2] = HEAP32[$39 + 12 >> 2];
 STACKTOP = __stackBase__;
 return;
}
function __ZN12GCodePlanner23getLatestPathWithConfigEP15GCodePathConfig($this, $config) {
 $this = $this | 0;
 $config = $config | 0;
 var $ref_tmp = 0, $paths = 0, $__end__i = 0, $0 = 0, $__begin__i = 0, $1 = 0, $arrayidx_i45 = 0, $__end__i_i_i_i_i = 0, $_pre22 = 0, $9 = 0, $15 = 0, $sub18 = 0, $arrayidx_i = 0, $retval_0 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 $ref_tmp = __stackBase__ | 0;
 $paths = $this + 24 | 0;
 $__end__i = $this + 28 | 0;
 $0 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i = $paths | 0;
 $1 = HEAP32[$__begin__i >> 2] | 0;
 do {
  if (($0 | 0) != ($1 | 0)) {
   $arrayidx_i45 = $1 + (((($0 - $1 | 0) / 24 & -1) - 1 | 0) * 24 & -1) | 0;
   if ((HEAP32[$arrayidx_i45 >> 2] | 0) == ($config | 0)) {
    $retval_0 = $arrayidx_i45;
   } else {
    break;
   }
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  }
 } while (0);
 $__end__i_i_i_i_i = $ref_tmp + 16 | 0;
 _memset($ref_tmp | 0, 0, 24);
 do {
  if (($0 | 0) == (HEAP32[$this + 32 >> 2] | 0)) {
   __ZNSt3__16vectorI9GCodePathNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($paths, $ref_tmp);
   $_pre22 = HEAP32[$ref_tmp + 12 >> 2] | 0;
   if (($_pre22 | 0) == 0) {
    break;
   }
   $9 = HEAP32[$__end__i_i_i_i_i >> 2] | 0;
   if (($_pre22 | 0) != ($9 | 0)) {
    HEAP32[$__end__i_i_i_i_i >> 2] = $9 + ((($9 - 16 + (-$_pre22 | 0) | 0) >>> 4 ^ -1) << 4);
   }
   __ZdlPv($_pre22);
  } else {
   if (($0 | 0) != 0) {
    HEAP32[$0 >> 2] = 0;
    HEAP8[$0 + 4 | 0] = 0;
    _memset($0 + 8 | 0, 0, 16);
   }
   HEAP32[$__end__i >> 2] = (HEAP32[$__end__i >> 2] | 0) + 24;
  }
 } while (0);
 $15 = HEAP32[$__begin__i >> 2] | 0;
 $sub18 = (((HEAP32[$__end__i >> 2] | 0) - $15 | 0) / 24 & -1) - 1 | 0;
 $arrayidx_i = $15 + ($sub18 * 24 & -1) | 0;
 HEAP8[$15 + ($sub18 * 24 & -1) + 4 | 0] = 0;
 HEAP32[$arrayidx_i >> 2] = $config;
 HEAP32[$15 + ($sub18 * 24 & -1) + 8 >> 2] = HEAP32[$this + 56 >> 2];
 $retval_0 = $arrayidx_i;
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __ZNSt3__16vectorI9GCodePathNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_058 = 0, $retval_i_059 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $incdec_ptr = 0, $9 = 0, $10 = 0, $__v_sroa_1_4_load4452 = 0, $__end1_addr_i_015_i = 0, $add_ptr_i_i13 = 0, $incdec_ptr_i_i = 0, $_pre_i = 0, $_pre = 0, $15 = 0, $incdec_ptr_i_i_i_i_i18 = 0, $16 = 0, $17 = 0, $__end__i_i_i_i_i_i_i_i_i_i24 = 0, $18 = 0, $23 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = ((HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 24 & -1;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 178956970) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_div_i_i_i = ((HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 24 & -1;
 if ($sub_ptr_div_i_i_i >>> 0 > 89478484) {
  $retval_i_058 = 178956970;
  label = 3003;
 } else {
  $mul_i = $sub_ptr_div_i_i_i << 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_059 = 0;
  } else {
   $retval_i_058 = $_sroa_speculated;
   label = 3003;
  }
 }
 if ((label | 0) == 3003) {
  $cond_i_i = __Znwj($retval_i_058 * 24 & -1) | 0;
  $retval_i_059 = $retval_i_058;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i * 24 & -1) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_059 * 24 & -1) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  HEAP32[$add_ptr_i_i >> 2] = HEAP32[$__x >> 2];
  HEAP8[$cond_i_i + ($sub_ptr_div_i * 24 & -1) + 4 | 0] = HEAP8[$__x + 4 | 0] & 1;
  HEAP32[$cond_i_i + ($sub_ptr_div_i * 24 & -1) + 8 >> 2] = HEAP32[$__x + 8 >> 2];
  __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($cond_i_i + ($sub_ptr_div_i * 24 & -1) + 12 | 0, $__x + 12 | 0);
 }
 $incdec_ptr = $cond_i_i + ($add * 24 & -1) | 0;
 $9 = HEAP32[$__begin__i >> 2] | 0;
 $10 = HEAP32[$__end__i >> 2] | 0;
 do {
  if (($10 | 0) == ($9 | 0)) {
   HEAP32[$__begin__i >> 2] = $add_ptr_i_i;
   HEAP32[$__end__i >> 2] = $incdec_ptr;
   HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
   $23 = $9;
  } else {
   $__end1_addr_i_015_i = $10;
   $__v_sroa_1_4_load4452 = $add_ptr_i_i;
   while (1) {
    $add_ptr_i_i13 = $__v_sroa_1_4_load4452 - 24 | 0;
    $incdec_ptr_i_i = $__end1_addr_i_015_i - 24 | 0;
    if (($add_ptr_i_i13 | 0) != 0) {
     HEAP32[$add_ptr_i_i13 >> 2] = HEAP32[$incdec_ptr_i_i >> 2];
     HEAP8[$__v_sroa_1_4_load4452 - 24 + 4 | 0] = HEAP8[$__end1_addr_i_015_i - 24 + 4 | 0] & 1;
     HEAP32[$__v_sroa_1_4_load4452 - 24 + 8 >> 2] = HEAP32[$__end1_addr_i_015_i - 24 + 8 >> 2];
     __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($__v_sroa_1_4_load4452 - 24 + 12 | 0, $__end1_addr_i_015_i - 24 + 12 | 0);
    }
    if (($incdec_ptr_i_i | 0) == ($9 | 0)) {
     break;
    } else {
     $__end1_addr_i_015_i = $incdec_ptr_i_i;
     $__v_sroa_1_4_load4452 = $add_ptr_i_i13;
    }
   }
   $_pre_i = HEAP32[$__begin__i >> 2] | 0;
   $_pre = HEAP32[$__end__i >> 2] | 0;
   HEAP32[$__begin__i >> 2] = $add_ptr_i_i13;
   HEAP32[$__end__i >> 2] = $incdec_ptr;
   HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
   if (($_pre_i | 0) == ($_pre | 0)) {
    $23 = $_pre_i;
    break;
   } else {
    $15 = $_pre;
   }
   while (1) {
    $incdec_ptr_i_i_i_i_i18 = $15 - 24 | 0;
    $16 = HEAP32[$15 - 24 + 12 >> 2] | 0;
    $17 = $16;
    if (($16 | 0) != 0) {
     $__end__i_i_i_i_i_i_i_i_i_i24 = $15 - 24 + 16 | 0;
     $18 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i24 >> 2] | 0;
     if (($16 | 0) != ($18 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i_i_i24 >> 2] = $18 + ((($18 - 16 + (-$17 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($16);
    }
    if (($_pre_i | 0) == ($incdec_ptr_i_i_i_i_i18 | 0)) {
     $23 = $_pre_i;
     break;
    } else {
     $15 = $incdec_ptr_i_i_i_i_i18;
    }
   }
  }
 } while (0);
 if (($23 | 0) == 0) {
  return;
 }
 __ZdlPv($23);
 return;
}
function __ZN4Comb4calcEN10ClipperLib8IntPointES1_RNSt3__16vectorIS1_NS2_9allocatorIS1_EEEE($this, $startPoint, $endPoint, $combPoints) {
 $this = $this | 0;
 $startPoint = $startPoint | 0;
 $endPoint = $endPoint | 0;
 $combPoints = $combPoints | 0;
 var $agg_tmp_i = 0, $agg_tmp2_i = 0, $pointList = 0, $ref_tmp27 = 0, $ref_tmp68 = 0, $ref_tmp118 = 0, $ref_tmp136 = 0, $p0 = 0, $agg_tmp154 = 0, $agg_tmp155 = 0, $agg_tmp161 = 0, $agg_tmp162 = 0, $endPoint_idx = 0, $endPoint_idx_val$0 = 0, $endPoint_idx_val$1 = 0, $endPoint_idx49 = 0, $endPoint_idx49_val$0 = 0, $endPoint_idx49_val$1 = 0, $startPoint_idx = 0, $startPoint_idx_val$0 = 0, $startPoint_idx_val$1 = 0, $startPoint_idx50 = 0, $startPoint_idx50_val$0 = 0, $startPoint_idx50_val$1 = 0, $sub_i$0 = 0, $sub_i$1 = 0, $sub3_i$0 = 0, $sub3_i$1 = 0, $sub_i_off$0 = 0, $sub_i_off$1 = 0, $$etemp$9$1 = 0, $sub3_i_off$0 = 0, $sub3_i_off$1 = 0, $$etemp$11$1 = 0, $mul_i_i$0 = 0, $mul_i_i$1 = 0, $mul3_i_i$0 = 0, $add_i_i$0 = 0, $add_i_i$1 = 0, $$etemp$12$1 = 0, $2 = 0, $boundery_i = 0, $ref37_i = 0, $3 = 0, $4 = 0, $sub_ptr_div_i_i = 0, $crossings_046_i = 0, $n_045_i = 0, $6 = 0, $7 = 0, $sub_ptr_div_i111_i = 0, $sub_i54 = 0, $p0_sroa_1_8__idx14_i = 0, $p0_sroa_0_0__idx_i = 0, $crossings_136_i = 0, $i_035_i = 0, $p0_sroa_0_034_i$0 = 0, $p0_sroa_0_034_i$1 = 0, $p0_sroa_1_033_i$0 = 0, $p0_sroa_1_033_i$1 = 0, $p1_sroa_0_0__idx1_i = 0, $p1_sroa_0_0_copyload2_i$0 = 0, $p1_sroa_0_0_copyload2_i$1 = 0, $p1_sroa_1_8__idx6_i = 0, $p1_sroa_1_8_copyload7_i$0 = 0, $p1_sroa_1_8_copyload7_i$1 = 0, $sub41_i$0 = 0, $sub41_i$1 = 0, $sub44_i$0 = 0, $mul_i$0 = 0, $mul_i$1 = 0, $sub47_i$0 = 0, $div_i$0 = 0, $add_i$0 = 0, $add_i$1 = 0, $crossings_2_i = 0, $inc53_i = 0, $crossings_3_i = 0, $inc55_i = 0, $__end__i = 0, $8 = 0, $10 = 0, $11 = 0, $12 = 0, $ref37_i60 = 0, $13 = 0, $14 = 0, $sub_ptr_div_i_i66 = 0, $crossings_046_i70 = 0, $n_045_i71 = 0, $16 = 0, $17 = 0, $sub_ptr_div_i111_i77 = 0, $sub_i80 = 0, $p0_sroa_1_8__idx14_i83 = 0, $p0_sroa_0_0__idx_i84 = 0, $crossings_136_i88 = 0, $i_035_i89 = 0, $p0_sroa_0_034_i90$0 = 0, $p0_sroa_0_034_i90$1 = 0, $p0_sroa_1_033_i91$0 = 0, $p0_sroa_1_033_i91$1 = 0, $p1_sroa_0_0__idx1_i92 = 0, $p1_sroa_0_0_copyload2_i93$0 = 0, $p1_sroa_0_0_copyload2_i93$1 = 0, $p1_sroa_1_8__idx6_i94 = 0, $p1_sroa_1_8_copyload7_i95$0 = 0, $p1_sroa_1_8_copyload7_i95$1 = 0, $sub41_i104$0 = 0, $sub41_i104$1 = 0, $sub44_i105$0 = 0, $mul_i106$0 = 0, $mul_i106$1 = 0, $sub47_i107$0 = 0, $div_i108$0 = 0, $add_i109$0 = 0, $add_i109$1 = 0, $crossings_2_i114 = 0, $inc53_i115 = 0, $crossings_3_i118 = 0, $inc55_i119 = 0, $addEndpoint_0_off0 = 0, $18 = 0, $19 = 0, $X = 0, $22$0 = 0, $22$1 = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $__first__i_i_i_i_i_i = 0, $ref6_i221 = 0, $23 = 0, $24 = 0, $minX_i = 0, $Y = 0, $arrayidx_i158 = 0, $arrayidx4_i = 0, $arrayidx10_i = 0, $arrayidx15_i = 0, $X_i_i_i161 = 0, $Y_i_i_i162 = 0, $minIdx = 0, $maxIdx = 0, $maxX = 0, $X_i_i_i184 = 0, $Y_i_i_i185 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $x_0224$0 = 0, $x_0224$1 = 0, $32 = 0, $sub_ptr_div_i_i135 = 0, $n_016_i = 0, $ret_015_i = 0, $min_014_i$0 = 0, $min_014_i$1 = 0, $arrayidx_i = 0, $33$0 = 0, $33$1 = 0, $or_cond_i138 = 0, $ret_1_i = 0, $inc_i139 = 0, $arrayidx = 0, $sub$0 = 0, $conv_i = 0.0, $conv2_i = 0.0, $add_i160 = 0.0, $conv6_i$1 = 0, $add17_i = 0.0, $conv18_i$1 = 0, $47 = 0, $49 = 0, $arrayidx33 = 0, $51 = 0, $53 = 0, $54 = 0, $sub_ptr_div_i305 = 0, $i_0217 = 0, $57 = 0, $59 = 0, $60 = 0, $arrayidx82 = 0, $67 = 0, $arrayidx95 = 0, $arrayidx98 = 0, $73 = 0, $74 = 0, $77 = 0, $79 = 0, $i110_0210 = 0, $80 = 0, $82 = 0, $83 = 0, $_sink = 0, $arrayidx139 = 0, $add140$0 = 0, $conv_i169 = 0.0, $conv2_i173 = 0.0, $add_i176 = 0.0, $conv6_i177$1 = 0, $add17_i182 = 0.0, $conv18_i183$1 = 0, $95 = 0, $97 = 0, $ref6_i = 0, $98 = 0, $99 = 0, $arrayidx147 = 0, $103 = 0, $105 = 0, $incdec_ptr_i371 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $__end__i277 = 0, $__first__i_i_i_i282 = 0, $113 = 0, $n149_0204 = 0, $114 = 0, $sub163 = 0, $116 = 0, $118 = 0, $119 = 0, $121 = 0, $122 = 0, $inc = 0, $124 = 0, $__end__i207 = 0, $125 = 0, $127 = 0, $128 = 0, $retval_0 = 0, $129 = 0, $131 = 0, $retval_1 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 tempParam = $startPoint;
 $startPoint = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[$startPoint >> 2] = HEAP32[tempParam >> 2];
 HEAP32[$startPoint + 4 >> 2] = HEAP32[tempParam + 4 >> 2];
 HEAP32[$startPoint + 8 >> 2] = HEAP32[tempParam + 8 >> 2];
 HEAP32[$startPoint + 12 >> 2] = HEAP32[tempParam + 12 >> 2];
 tempParam = $endPoint;
 $endPoint = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[$endPoint >> 2] = HEAP32[tempParam >> 2];
 HEAP32[$endPoint + 4 >> 2] = HEAP32[tempParam + 4 >> 2];
 HEAP32[$endPoint + 8 >> 2] = HEAP32[tempParam + 8 >> 2];
 HEAP32[$endPoint + 12 >> 2] = HEAP32[tempParam + 12 >> 2];
 $agg_tmp_i = __stackBase__ | 0;
 $agg_tmp2_i = __stackBase__ + 16 | 0;
 $pointList = __stackBase__ + 32 | 0;
 $ref_tmp27 = __stackBase__ + 48 | 0;
 $ref_tmp68 = __stackBase__ + 64 | 0;
 $ref_tmp118 = __stackBase__ + 80 | 0;
 $ref_tmp136 = __stackBase__ + 96 | 0;
 $p0 = __stackBase__ + 112 | 0;
 $agg_tmp154 = __stackBase__ + 128 | 0;
 $agg_tmp155 = __stackBase__ + 144 | 0;
 $agg_tmp161 = __stackBase__ + 160 | 0;
 $agg_tmp162 = __stackBase__ + 176 | 0;
 $endPoint_idx = $endPoint | 0;
 $endPoint_idx_val$0 = HEAP32[$endPoint_idx >> 2] | 0;
 $endPoint_idx_val$1 = HEAP32[$endPoint_idx + 4 >> 2] | 0;
 $endPoint_idx49 = $endPoint + 8 | 0;
 $endPoint_idx49_val$0 = HEAP32[$endPoint_idx49 >> 2] | 0;
 $endPoint_idx49_val$1 = HEAP32[$endPoint_idx49 + 4 >> 2] | 0;
 $startPoint_idx = $startPoint | 0;
 $startPoint_idx_val$0 = HEAP32[$startPoint_idx >> 2] | 0;
 $startPoint_idx_val$1 = HEAP32[$startPoint_idx + 4 >> 2] | 0;
 $startPoint_idx50 = $startPoint + 8 | 0;
 $startPoint_idx50_val$0 = HEAP32[$startPoint_idx50 >> 2] | 0;
 $startPoint_idx50_val$1 = HEAP32[$startPoint_idx50 + 4 >> 2] | 0;
 $sub_i$0 = _i64Subtract($endPoint_idx_val$0, $endPoint_idx_val$1, $startPoint_idx_val$0, $startPoint_idx_val$1) | 0;
 $sub_i$1 = tempRet0;
 $sub3_i$0 = _i64Subtract($endPoint_idx49_val$0, $endPoint_idx49_val$1, $startPoint_idx50_val$0, $startPoint_idx50_val$1) | 0;
 $sub3_i$1 = tempRet0;
 $sub_i_off$0 = _i64Add($sub_i$0, $sub_i$1, 1500, 0) | 0;
 $sub_i_off$1 = tempRet0;
 $$etemp$9$1 = 0;
 do {
  if (!($sub_i_off$1 >>> 0 > $$etemp$9$1 >>> 0 | $sub_i_off$1 >>> 0 == $$etemp$9$1 >>> 0 & $sub_i_off$0 >>> 0 > 3e3 >>> 0)) {
   $sub3_i_off$0 = _i64Add($sub3_i$0, $sub3_i$1, 1500, 0) | 0;
   $sub3_i_off$1 = tempRet0;
   $$etemp$11$1 = 0;
   if ($sub3_i_off$1 >>> 0 > $$etemp$11$1 >>> 0 | $sub3_i_off$1 >>> 0 == $$etemp$11$1 >>> 0 & $sub3_i_off$0 >>> 0 > 3e3 >>> 0) {
    break;
   }
   $mul_i_i$0 = ___muldi3($sub_i$0, $sub_i$1, $sub_i$0, $sub_i$1) | 0;
   $mul_i_i$1 = tempRet0;
   $mul3_i_i$0 = ___muldi3($sub3_i$0, $sub3_i$1, $sub3_i$0, $sub3_i$1) | 0;
   $add_i_i$0 = _i64Add($mul3_i_i$0, tempRet0, $mul_i_i$0, $mul_i_i$1) | 0;
   $add_i_i$1 = tempRet0;
   $$etemp$12$1 = 0;
   if (($add_i_i$1 | 0) < ($$etemp$12$1 | 0) | ($add_i_i$1 | 0) == ($$etemp$12$1 | 0) & $add_i_i$0 >>> 0 < 2250001 >>> 0) {
    $retval_1 = 1;
   } else {
    break;
   }
   STACKTOP = __stackBase__;
   return $retval_1 | 0;
  }
 } while (0);
 $2 = $startPoint;
 $boundery_i = $this | 0;
 $ref37_i = HEAP32[$boundery_i >> 2] | 0;
 $3 = HEAP32[$ref37_i + 4 >> 2] | 0;
 $4 = HEAP32[$ref37_i >> 2] | 0;
 if (($3 | 0) == ($4 | 0)) {
  label = 3046;
 } else {
  $sub_ptr_div_i_i = ($3 - $4 | 0) / 12 & -1;
  $n_045_i = 0;
  $crossings_046_i = 0;
  while (1) {
   $6 = HEAP32[$4 + ($n_045_i * 12 & -1) + 4 >> 2] | 0;
   $7 = HEAP32[$4 + ($n_045_i * 12 & -1) >> 2] | 0;
   $sub_ptr_div_i111_i = $6 - $7 >> 4;
   do {
    if (($sub_ptr_div_i111_i | 0) == 0) {
     $crossings_3_i = $crossings_046_i;
    } else {
     $sub_i54 = $sub_ptr_div_i111_i - 1 | 0;
     if (($6 | 0) == ($7 | 0)) {
      $crossings_3_i = $crossings_046_i;
      break;
     }
     $p0_sroa_1_8__idx14_i = $7 + ($sub_i54 << 4) + 8 | 0;
     $p0_sroa_0_0__idx_i = $7 + ($sub_i54 << 4) | 0;
     $p0_sroa_1_033_i$1 = HEAP32[$p0_sroa_1_8__idx14_i + 4 >> 2] | 0;
     $p0_sroa_1_033_i$0 = HEAP32[$p0_sroa_1_8__idx14_i >> 2] | 0;
     $p0_sroa_0_034_i$1 = HEAP32[$p0_sroa_0_0__idx_i + 4 >> 2] | 0;
     $p0_sroa_0_034_i$0 = HEAP32[$p0_sroa_0_0__idx_i >> 2] | 0;
     $i_035_i = 0;
     $crossings_136_i = $crossings_046_i;
     while (1) {
      $p1_sroa_0_0__idx1_i = $7 + ($i_035_i << 4) | 0;
      $p1_sroa_0_0_copyload2_i$0 = HEAP32[$p1_sroa_0_0__idx1_i >> 2] | 0;
      $p1_sroa_0_0_copyload2_i$1 = HEAP32[$p1_sroa_0_0__idx1_i + 4 >> 2] | 0;
      $p1_sroa_1_8__idx6_i = $7 + ($i_035_i << 4) + 8 | 0;
      $p1_sroa_1_8_copyload7_i$0 = HEAP32[$p1_sroa_1_8__idx6_i >> 2] | 0;
      $p1_sroa_1_8_copyload7_i$1 = HEAP32[$p1_sroa_1_8__idx6_i + 4 >> 2] | 0;
      if ((($p0_sroa_1_033_i$1 | 0) > ($startPoint_idx50_val$1 | 0) | ($p0_sroa_1_033_i$1 | 0) == ($startPoint_idx50_val$1 | 0) & $p0_sroa_1_033_i$0 >>> 0 > $startPoint_idx50_val$0 >>> 0) & (($p1_sroa_1_8_copyload7_i$1 | 0) < ($startPoint_idx50_val$1 | 0) | ($p1_sroa_1_8_copyload7_i$1 | 0) == ($startPoint_idx50_val$1 | 0) & $p1_sroa_1_8_copyload7_i$0 >>> 0 < $startPoint_idx50_val$0 >>> 0)) {
       label = 3042;
      } else {
       if ((($p1_sroa_1_8_copyload7_i$1 | 0) > ($startPoint_idx50_val$1 | 0) | ($p1_sroa_1_8_copyload7_i$1 | 0) == ($startPoint_idx50_val$1 | 0) & $p1_sroa_1_8_copyload7_i$0 >>> 0 > $startPoint_idx50_val$0 >>> 0) & (($p0_sroa_1_033_i$1 | 0) < ($startPoint_idx50_val$1 | 0) | ($p0_sroa_1_033_i$1 | 0) == ($startPoint_idx50_val$1 | 0) & $p0_sroa_1_033_i$0 >>> 0 < $startPoint_idx50_val$0 >>> 0)) {
        label = 3042;
       } else {
        $crossings_2_i = $crossings_136_i;
       }
      }
      if ((label | 0) == 3042) {
       label = 0;
       $sub41_i$0 = _i64Subtract($p1_sroa_0_0_copyload2_i$0, $p1_sroa_0_0_copyload2_i$1, $p0_sroa_0_034_i$0, $p0_sroa_0_034_i$1) | 0;
       $sub41_i$1 = tempRet0;
       $sub44_i$0 = _i64Subtract($startPoint_idx50_val$0, $startPoint_idx50_val$1, $p0_sroa_1_033_i$0, $p0_sroa_1_033_i$1) | 0;
       $mul_i$0 = ___muldi3($sub41_i$0, $sub41_i$1, $sub44_i$0, tempRet0) | 0;
       $mul_i$1 = tempRet0;
       $sub47_i$0 = _i64Subtract($p1_sroa_1_8_copyload7_i$0, $p1_sroa_1_8_copyload7_i$1, $p0_sroa_1_033_i$0, $p0_sroa_1_033_i$1) | 0;
       $div_i$0 = ___divdi3($mul_i$0, $mul_i$1, $sub47_i$0, tempRet0) | 0;
       $add_i$0 = _i64Add($div_i$0, tempRet0, $p0_sroa_0_034_i$0, $p0_sroa_0_034_i$1) | 0;
       $add_i$1 = tempRet0;
       $crossings_2_i = (($add_i$1 | 0) >= ($startPoint_idx_val$1 | 0) & (($add_i$1 | 0) > ($startPoint_idx_val$1 | 0) | $add_i$0 >>> 0 >= $startPoint_idx_val$0 >>> 0) & 1) + $crossings_136_i | 0;
      }
      $inc53_i = $i_035_i + 1 | 0;
      if ($inc53_i >>> 0 < $sub_ptr_div_i111_i >>> 0) {
       $p0_sroa_1_033_i$1 = $p1_sroa_1_8_copyload7_i$1;
       $p0_sroa_1_033_i$0 = $p1_sroa_1_8_copyload7_i$0;
       $p0_sroa_0_034_i$1 = $p1_sroa_0_0_copyload2_i$1;
       $p0_sroa_0_034_i$0 = $p1_sroa_0_0_copyload2_i$0;
       $i_035_i = $inc53_i;
       $crossings_136_i = $crossings_2_i;
      } else {
       $crossings_3_i = $crossings_2_i;
       break;
      }
     }
    }
   } while (0);
   $inc55_i = $n_045_i + 1 | 0;
   if ($inc55_i >>> 0 < $sub_ptr_div_i_i >>> 0) {
    $n_045_i = $inc55_i;
    $crossings_046_i = $crossings_3_i;
   } else {
    break;
   }
  }
  if (($crossings_3_i & 1 | 0) == 0) {
   label = 3046;
  }
 }
 do {
  if ((label | 0) == 3046) {
   if (!(__ZN4Comb10moveInsideERN10ClipperLib8IntPointE($this, $startPoint) | 0)) {
    $retval_1 = 0;
    STACKTOP = __stackBase__;
    return $retval_1 | 0;
   }
   $__end__i = $combPoints + 4 | 0;
   $8 = HEAP32[$__end__i >> 2] | 0;
   if (($8 | 0) == (HEAP32[$combPoints + 8 >> 2] | 0)) {
    __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($combPoints, $startPoint);
    break;
   }
   if (($8 | 0) == 0) {
    $11 = 0;
   } else {
    $10 = $8;
    HEAP32[$10 >> 2] = HEAP32[$2 >> 2];
    HEAP32[$10 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
    HEAP32[$10 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
    HEAP32[$10 + 12 >> 2] = HEAP32[$2 + 12 >> 2];
    $11 = HEAP32[$__end__i >> 2] | 0;
   }
   HEAP32[$__end__i >> 2] = $11 + 16;
  }
 } while (0);
 $12 = $endPoint;
 $ref37_i60 = HEAP32[$boundery_i >> 2] | 0;
 $13 = HEAP32[$ref37_i60 + 4 >> 2] | 0;
 $14 = HEAP32[$ref37_i60 >> 2] | 0;
 if (($13 | 0) == ($14 | 0)) {
  label = 3063;
 } else {
  $sub_ptr_div_i_i66 = ($13 - $14 | 0) / 12 & -1;
  $n_045_i71 = 0;
  $crossings_046_i70 = 0;
  while (1) {
   $16 = HEAP32[$14 + ($n_045_i71 * 12 & -1) + 4 >> 2] | 0;
   $17 = HEAP32[$14 + ($n_045_i71 * 12 & -1) >> 2] | 0;
   $sub_ptr_div_i111_i77 = $16 - $17 >> 4;
   do {
    if (($sub_ptr_div_i111_i77 | 0) == 0) {
     $crossings_3_i118 = $crossings_046_i70;
    } else {
     $sub_i80 = $sub_ptr_div_i111_i77 - 1 | 0;
     if (($16 | 0) == ($17 | 0)) {
      $crossings_3_i118 = $crossings_046_i70;
      break;
     }
     $p0_sroa_1_8__idx14_i83 = $17 + ($sub_i80 << 4) + 8 | 0;
     $p0_sroa_0_0__idx_i84 = $17 + ($sub_i80 << 4) | 0;
     $p0_sroa_1_033_i91$1 = HEAP32[$p0_sroa_1_8__idx14_i83 + 4 >> 2] | 0;
     $p0_sroa_1_033_i91$0 = HEAP32[$p0_sroa_1_8__idx14_i83 >> 2] | 0;
     $p0_sroa_0_034_i90$1 = HEAP32[$p0_sroa_0_0__idx_i84 + 4 >> 2] | 0;
     $p0_sroa_0_034_i90$0 = HEAP32[$p0_sroa_0_0__idx_i84 >> 2] | 0;
     $i_035_i89 = 0;
     $crossings_136_i88 = $crossings_046_i70;
     while (1) {
      $p1_sroa_0_0__idx1_i92 = $17 + ($i_035_i89 << 4) | 0;
      $p1_sroa_0_0_copyload2_i93$0 = HEAP32[$p1_sroa_0_0__idx1_i92 >> 2] | 0;
      $p1_sroa_0_0_copyload2_i93$1 = HEAP32[$p1_sroa_0_0__idx1_i92 + 4 >> 2] | 0;
      $p1_sroa_1_8__idx6_i94 = $17 + ($i_035_i89 << 4) + 8 | 0;
      $p1_sroa_1_8_copyload7_i95$0 = HEAP32[$p1_sroa_1_8__idx6_i94 >> 2] | 0;
      $p1_sroa_1_8_copyload7_i95$1 = HEAP32[$p1_sroa_1_8__idx6_i94 + 4 >> 2] | 0;
      if ((($p0_sroa_1_033_i91$1 | 0) > ($endPoint_idx49_val$1 | 0) | ($p0_sroa_1_033_i91$1 | 0) == ($endPoint_idx49_val$1 | 0) & $p0_sroa_1_033_i91$0 >>> 0 > $endPoint_idx49_val$0 >>> 0) & (($p1_sroa_1_8_copyload7_i95$1 | 0) < ($endPoint_idx49_val$1 | 0) | ($p1_sroa_1_8_copyload7_i95$1 | 0) == ($endPoint_idx49_val$1 | 0) & $p1_sroa_1_8_copyload7_i95$0 >>> 0 < $endPoint_idx49_val$0 >>> 0)) {
       label = 3059;
      } else {
       if ((($p1_sroa_1_8_copyload7_i95$1 | 0) > ($endPoint_idx49_val$1 | 0) | ($p1_sroa_1_8_copyload7_i95$1 | 0) == ($endPoint_idx49_val$1 | 0) & $p1_sroa_1_8_copyload7_i95$0 >>> 0 > $endPoint_idx49_val$0 >>> 0) & (($p0_sroa_1_033_i91$1 | 0) < ($endPoint_idx49_val$1 | 0) | ($p0_sroa_1_033_i91$1 | 0) == ($endPoint_idx49_val$1 | 0) & $p0_sroa_1_033_i91$0 >>> 0 < $endPoint_idx49_val$0 >>> 0)) {
        label = 3059;
       } else {
        $crossings_2_i114 = $crossings_136_i88;
       }
      }
      if ((label | 0) == 3059) {
       label = 0;
       $sub41_i104$0 = _i64Subtract($p1_sroa_0_0_copyload2_i93$0, $p1_sroa_0_0_copyload2_i93$1, $p0_sroa_0_034_i90$0, $p0_sroa_0_034_i90$1) | 0;
       $sub41_i104$1 = tempRet0;
       $sub44_i105$0 = _i64Subtract($endPoint_idx49_val$0, $endPoint_idx49_val$1, $p0_sroa_1_033_i91$0, $p0_sroa_1_033_i91$1) | 0;
       $mul_i106$0 = ___muldi3($sub41_i104$0, $sub41_i104$1, $sub44_i105$0, tempRet0) | 0;
       $mul_i106$1 = tempRet0;
       $sub47_i107$0 = _i64Subtract($p1_sroa_1_8_copyload7_i95$0, $p1_sroa_1_8_copyload7_i95$1, $p0_sroa_1_033_i91$0, $p0_sroa_1_033_i91$1) | 0;
       $div_i108$0 = ___divdi3($mul_i106$0, $mul_i106$1, $sub47_i107$0, tempRet0) | 0;
       $add_i109$0 = _i64Add($div_i108$0, tempRet0, $p0_sroa_0_034_i90$0, $p0_sroa_0_034_i90$1) | 0;
       $add_i109$1 = tempRet0;
       $crossings_2_i114 = (($add_i109$1 | 0) >= ($endPoint_idx_val$1 | 0) & (($add_i109$1 | 0) > ($endPoint_idx_val$1 | 0) | $add_i109$0 >>> 0 >= $endPoint_idx_val$0 >>> 0) & 1) + $crossings_136_i88 | 0;
      }
      $inc53_i115 = $i_035_i89 + 1 | 0;
      if ($inc53_i115 >>> 0 < $sub_ptr_div_i111_i77 >>> 0) {
       $p0_sroa_1_033_i91$1 = $p1_sroa_1_8_copyload7_i95$1;
       $p0_sroa_1_033_i91$0 = $p1_sroa_1_8_copyload7_i95$0;
       $p0_sroa_0_034_i90$1 = $p1_sroa_0_0_copyload2_i93$1;
       $p0_sroa_0_034_i90$0 = $p1_sroa_0_0_copyload2_i93$0;
       $i_035_i89 = $inc53_i115;
       $crossings_136_i88 = $crossings_2_i114;
      } else {
       $crossings_3_i118 = $crossings_2_i114;
       break;
      }
     }
    }
   } while (0);
   $inc55_i119 = $n_045_i71 + 1 | 0;
   if ($inc55_i119 >>> 0 < $sub_ptr_div_i_i66 >>> 0) {
    $n_045_i71 = $inc55_i119;
    $crossings_046_i70 = $crossings_3_i118;
   } else {
    break;
   }
  }
  if (($crossings_3_i118 & 1 | 0) == 0) {
   label = 3063;
  } else {
   $addEndpoint_0_off0 = 0;
  }
 }
 do {
  if ((label | 0) == 3063) {
   if (__ZN4Comb10moveInsideERN10ClipperLib8IntPointE($this, $endPoint) | 0) {
    $addEndpoint_0_off0 = 1;
    break;
   } else {
    $retval_1 = 0;
   }
   STACKTOP = __stackBase__;
   return $retval_1 | 0;
  }
 } while (0);
 $18 = $agg_tmp_i;
 $19 = $agg_tmp2_i;
 HEAP32[$18 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$18 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$18 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$18 + 12 >> 2] = HEAP32[$2 + 12 >> 2];
 HEAP32[$19 >> 2] = HEAP32[$12 >> 2];
 HEAP32[$19 + 4 >> 2] = HEAP32[$12 + 4 >> 2];
 HEAP32[$19 + 8 >> 2] = HEAP32[$12 + 8 >> 2];
 HEAP32[$19 + 12 >> 2] = HEAP32[$12 + 12 >> 2];
 do {
  if (!(__ZN4Comb13collisionTestEN10ClipperLib8IntPointES1_($this, $agg_tmp_i, $agg_tmp2_i) | 0 | $addEndpoint_0_off0)) {
   if ((HEAP32[$combPoints + 4 >> 2] | 0) == (HEAP32[$combPoints >> 2] | 0)) {
    $retval_1 = 1;
   } else {
    break;
   }
   STACKTOP = __stackBase__;
   return $retval_1 | 0;
  }
 } while (0);
 __ZN4Comb10calcMinMaxEv($this);
 $X = $this + 56 | 0;
 $22$0 = HEAP32[$X >> 2] | 0;
 $22$1 = HEAP32[$X + 4 >> 2] | 0;
 $__begin__i_i_i = $pointList | 0;
 HEAP32[$__begin__i_i_i >> 2] = 0;
 $__end__i_i_i = $pointList + 4 | 0;
 HEAP32[$__end__i_i_i >> 2] = 0;
 $__first__i_i_i_i_i_i = $pointList + 8 | 0;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = 0;
 $ref6_i221 = HEAP32[$boundery_i >> 2] | 0;
 $23 = HEAP32[$ref6_i221 + 4 >> 2] | 0;
 $24 = HEAP32[$ref6_i221 >> 2] | 0;
 L3305 : do {
  if (($23 | 0) != ($24 | 0)) {
   $minX_i = $this + 4 | 0;
   $Y = $this + 64 | 0;
   $arrayidx_i158 = $this + 24 | 0;
   $arrayidx4_i = $this + 40 | 0;
   $arrayidx10_i = $this + 32 | 0;
   $arrayidx15_i = $this + 48 | 0;
   $X_i_i_i161 = $ref_tmp27 | 0;
   $Y_i_i_i162 = $ref_tmp27 + 8 | 0;
   $minIdx = $this + 12 | 0;
   $maxIdx = $this + 16 | 0;
   $maxX = $this + 8 | 0;
   $X_i_i_i184 = $ref_tmp136 | 0;
   $Y_i_i_i185 = $ref_tmp136 + 8 | 0;
   $26 = $ref_tmp136;
   $27 = $ref_tmp118;
   $28 = $ref_tmp68;
   $29 = $ref_tmp27;
   $x_0224$1 = $22$1;
   $x_0224$0 = $22$0;
   $31 = $23;
   $30 = $24;
   while (1) {
    $32 = HEAP32[$minX_i >> 2] | 0;
    $sub_ptr_div_i_i135 = ($31 - $30 | 0) / 12 & -1;
    $min_014_i$1 = 2147483647;
    $min_014_i$0 = -1;
    $ret_015_i = -1;
    $n_016_i = 0;
    while (1) {
     $arrayidx_i = $32 + ($n_016_i << 3) | 0;
     $33$0 = HEAP32[$arrayidx_i >> 2] | 0;
     $33$1 = HEAP32[$arrayidx_i + 4 >> 2] | 0;
     $or_cond_i138 = (($33$1 | 0) > ($x_0224$1 | 0) | ($33$1 | 0) == ($x_0224$1 | 0) & $33$0 >>> 0 > $x_0224$0 >>> 0) & (($33$1 | 0) < ($min_014_i$1 | 0) | ($33$1 | 0) == ($min_014_i$1 | 0) & $33$0 >>> 0 < $min_014_i$0 >>> 0);
     $ret_1_i = $or_cond_i138 ? $n_016_i : $ret_015_i;
     $inc_i139 = $n_016_i + 1 | 0;
     if ($inc_i139 >>> 0 < $sub_ptr_div_i_i135 >>> 0) {
      $min_014_i$1 = $or_cond_i138 ? $33$1 : $min_014_i$1;
      $min_014_i$0 = $or_cond_i138 ? $33$0 : $min_014_i$0;
      $ret_015_i = $ret_1_i;
      $n_016_i = $inc_i139;
     } else {
      break;
     }
    }
    if (($ret_1_i | 0) == -1) {
     break L3305;
    }
    $arrayidx = $32 + ($ret_1_i << 3) | 0;
    $sub$0 = _i64Add(HEAP32[$arrayidx >> 2] | 0, HEAP32[$arrayidx + 4 >> 2] | 0, -200, -1) | 0;
    $conv_i = +($sub$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
    $conv2_i = +((HEAP32[$Y >> 2] | 0) >>> 0) + +(HEAP32[$Y + 4 >> 2] | 0) * 4294967296.0;
    $add_i160 = $conv_i * +HEAPF64[$arrayidx_i158 >> 3] + $conv2_i * +HEAPF64[$arrayidx4_i >> 3];
    $conv6_i$1 = (Math_min(+Math_floor($add_i160 / 4294967296.0), 4294967295.0) | 0) >>> 0;
    $add17_i = $conv_i * +HEAPF64[$arrayidx10_i >> 3] + $conv2_i * +HEAPF64[$arrayidx15_i >> 3];
    $conv18_i$1 = (Math_min(+Math_floor($add17_i / 4294967296.0), 4294967295.0) | 0) >>> 0;
    HEAP32[$X_i_i_i161 >> 2] = ~~$add_i160 >>> 0;
    HEAP32[$X_i_i_i161 + 4 >> 2] = $conv6_i$1;
    HEAP32[$Y_i_i_i162 >> 2] = ~~$add17_i >>> 0;
    HEAP32[$Y_i_i_i162 + 4 >> 2] = $conv18_i$1;
    $47 = HEAP32[$__end__i_i_i >> 2] | 0;
    if (($47 | 0) == (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0)) {
     __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($pointList, $ref_tmp27);
    } else {
     if (($47 | 0) != 0) {
      $49 = $47;
      HEAP32[$49 >> 2] = HEAP32[$29 >> 2];
      HEAP32[$49 + 4 >> 2] = HEAP32[$29 + 4 >> 2];
      HEAP32[$49 + 8 >> 2] = HEAP32[$29 + 8 >> 2];
      HEAP32[$49 + 12 >> 2] = HEAP32[$29 + 12 >> 2];
     }
     HEAP32[$__end__i_i_i >> 2] = $47 + 16;
    }
    $arrayidx33 = (HEAP32[$minIdx >> 2] | 0) + ($ret_1_i << 2) | 0;
    $51 = HEAP32[$arrayidx33 >> 2] | 0;
    $53 = HEAP32[(HEAP32[$maxIdx >> 2] | 0) + ($ret_1_i << 2) >> 2] | 0;
    $54 = HEAP32[HEAP32[$boundery_i >> 2] >> 2] | 0;
    $sub_ptr_div_i305 = (HEAP32[$54 + ($ret_1_i * 12 & -1) + 4 >> 2] | 0) - (HEAP32[$54 + ($ret_1_i * 12 & -1) >> 2] | 0) >> 4;
    do {
     if ((($51 - $53 + $sub_ptr_div_i305 | 0) >>> 0) % ($sub_ptr_div_i305 >>> 0) >>> 0 >>> 0 > (($53 - $51 + $sub_ptr_div_i305 | 0) >>> 0) % ($sub_ptr_div_i305 >>> 0) >>> 0 >>> 0) {
      if (($51 | 0) == ($53 | 0)) {
       break;
      } else {
       $i_0217 = $51;
      }
      do {
       __ZN4Comb26getBounderyPointWithOffsetEjj($ref_tmp68, $this, $ret_1_i, $i_0217);
       $57 = HEAP32[$__end__i_i_i >> 2] | 0;
       if (($57 | 0) == (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0)) {
        __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($pointList, $ref_tmp68);
       } else {
        if (($57 | 0) != 0) {
         $59 = $57;
         HEAP32[$59 >> 2] = HEAP32[$28 >> 2];
         HEAP32[$59 + 4 >> 2] = HEAP32[$28 + 4 >> 2];
         HEAP32[$59 + 8 >> 2] = HEAP32[$28 + 8 >> 2];
         HEAP32[$59 + 12 >> 2] = HEAP32[$28 + 12 >> 2];
        }
        HEAP32[$__end__i_i_i >> 2] = $57 + 16;
       }
       $60 = HEAP32[HEAP32[$boundery_i >> 2] >> 2] | 0;
       $i_0217 = $i_0217 >>> 0 < (((HEAP32[$60 + ($ret_1_i * 12 & -1) + 4 >> 2] | 0) - (HEAP32[$60 + ($ret_1_i * 12 & -1) >> 2] | 0) >> 4) - 1 | 0) >>> 0 ? $i_0217 + 1 | 0 : 0;
      } while (($i_0217 | 0) != (HEAP32[(HEAP32[$maxIdx >> 2] | 0) + ($ret_1_i << 2) >> 2] | 0));
     } else {
      HEAP32[$arrayidx33 >> 2] = $51 - 1;
      $arrayidx82 = (HEAP32[$minIdx >> 2] | 0) + ($ret_1_i << 2) | 0;
      if ((HEAP32[$arrayidx82 >> 2] | 0) == -1) {
       $67 = HEAP32[HEAP32[$boundery_i >> 2] >> 2] | 0;
       HEAP32[$arrayidx82 >> 2] = ((HEAP32[$67 + ($ret_1_i * 12 & -1) + 4 >> 2] | 0) - (HEAP32[$67 + ($ret_1_i * 12 & -1) >> 2] | 0) >> 4) - 1;
      }
      $arrayidx95 = (HEAP32[$maxIdx >> 2] | 0) + ($ret_1_i << 2) | 0;
      HEAP32[$arrayidx95 >> 2] = (HEAP32[$arrayidx95 >> 2] | 0) - 1;
      $arrayidx98 = (HEAP32[$maxIdx >> 2] | 0) + ($ret_1_i << 2) | 0;
      $73 = HEAP32[$arrayidx98 >> 2] | 0;
      if (($73 | 0) == -1) {
       $74 = HEAP32[HEAP32[$boundery_i >> 2] >> 2] | 0;
       HEAP32[$arrayidx98 >> 2] = ((HEAP32[$74 + ($ret_1_i * 12 & -1) + 4 >> 2] | 0) - (HEAP32[$74 + ($ret_1_i * 12 & -1) >> 2] | 0) >> 4) - 1;
       $77 = HEAP32[(HEAP32[$maxIdx >> 2] | 0) + ($ret_1_i << 2) >> 2] | 0;
      } else {
       $77 = $73;
      }
      $79 = HEAP32[(HEAP32[$minIdx >> 2] | 0) + ($ret_1_i << 2) >> 2] | 0;
      if (($79 | 0) == ($77 | 0)) {
       break;
      } else {
       $i110_0210 = $79;
      }
      do {
       __ZN4Comb26getBounderyPointWithOffsetEjj($ref_tmp118, $this, $ret_1_i, $i110_0210);
       $80 = HEAP32[$__end__i_i_i >> 2] | 0;
       if (($80 | 0) == (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0)) {
        __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($pointList, $ref_tmp118);
       } else {
        if (($80 | 0) != 0) {
         $82 = $80;
         HEAP32[$82 >> 2] = HEAP32[$27 >> 2];
         HEAP32[$82 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
         HEAP32[$82 + 8 >> 2] = HEAP32[$27 + 8 >> 2];
         HEAP32[$82 + 12 >> 2] = HEAP32[$27 + 12 >> 2];
        }
        HEAP32[$__end__i_i_i >> 2] = $80 + 16;
       }
       if (($i110_0210 | 0) == 0) {
        $83 = HEAP32[HEAP32[$boundery_i >> 2] >> 2] | 0;
        $_sink = (HEAP32[$83 + ($ret_1_i * 12 & -1) + 4 >> 2] | 0) - (HEAP32[$83 + ($ret_1_i * 12 & -1) >> 2] | 0) >> 4;
       } else {
        $_sink = $i110_0210;
       }
       $i110_0210 = $_sink - 1 | 0;
      } while (($i110_0210 | 0) != (HEAP32[(HEAP32[$maxIdx >> 2] | 0) + ($ret_1_i << 2) >> 2] | 0));
     }
    } while (0);
    $arrayidx139 = (HEAP32[$maxX >> 2] | 0) + ($ret_1_i << 3) | 0;
    $add140$0 = _i64Add(HEAP32[$arrayidx139 >> 2] | 0, HEAP32[$arrayidx139 + 4 >> 2] | 0, 200, 0) | 0;
    $conv_i169 = +($add140$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
    $conv2_i173 = +((HEAP32[$Y >> 2] | 0) >>> 0) + +(HEAP32[$Y + 4 >> 2] | 0) * 4294967296.0;
    $add_i176 = $conv_i169 * +HEAPF64[$arrayidx_i158 >> 3] + $conv2_i173 * +HEAPF64[$arrayidx4_i >> 3];
    $conv6_i177$1 = (Math_min(+Math_floor($add_i176 / 4294967296.0), 4294967295.0) | 0) >>> 0;
    $add17_i182 = $conv_i169 * +HEAPF64[$arrayidx10_i >> 3] + $conv2_i173 * +HEAPF64[$arrayidx15_i >> 3];
    $conv18_i183$1 = (Math_min(+Math_floor($add17_i182 / 4294967296.0), 4294967295.0) | 0) >>> 0;
    HEAP32[$X_i_i_i184 >> 2] = ~~$add_i176 >>> 0;
    HEAP32[$X_i_i_i184 + 4 >> 2] = $conv6_i177$1;
    HEAP32[$Y_i_i_i185 >> 2] = ~~$add17_i182 >>> 0;
    HEAP32[$Y_i_i_i185 + 4 >> 2] = $conv18_i183$1;
    $95 = HEAP32[$__end__i_i_i >> 2] | 0;
    if (($95 | 0) == (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0)) {
     __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($pointList, $ref_tmp136);
    } else {
     if (($95 | 0) != 0) {
      $97 = $95;
      HEAP32[$97 >> 2] = HEAP32[$26 >> 2];
      HEAP32[$97 + 4 >> 2] = HEAP32[$26 + 4 >> 2];
      HEAP32[$97 + 8 >> 2] = HEAP32[$26 + 8 >> 2];
      HEAP32[$97 + 12 >> 2] = HEAP32[$26 + 12 >> 2];
     }
     HEAP32[$__end__i_i_i >> 2] = $95 + 16;
    }
    $ref6_i = HEAP32[$boundery_i >> 2] | 0;
    $98 = HEAP32[$ref6_i + 4 >> 2] | 0;
    $99 = HEAP32[$ref6_i >> 2] | 0;
    if (($98 | 0) == ($99 | 0)) {
     break L3305;
    }
    $arrayidx147 = (HEAP32[$maxX >> 2] | 0) + ($ret_1_i << 3) | 0;
    $x_0224$1 = HEAP32[$arrayidx147 + 4 >> 2] | 0;
    $x_0224$0 = HEAP32[$arrayidx147 >> 2] | 0;
    $31 = $98;
    $30 = $99;
   }
  }
 } while (0);
 $103 = HEAP32[$__end__i_i_i >> 2] | 0;
 if (($103 | 0) == (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0)) {
  __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($pointList, $endPoint);
  $106 = HEAP32[$__end__i_i_i >> 2] | 0;
 } else {
  if (($103 | 0) != 0) {
   $105 = $103;
   HEAP32[$105 >> 2] = HEAP32[$12 >> 2];
   HEAP32[$105 + 4 >> 2] = HEAP32[$12 + 4 >> 2];
   HEAP32[$105 + 8 >> 2] = HEAP32[$12 + 8 >> 2];
   HEAP32[$105 + 12 >> 2] = HEAP32[$12 + 12 >> 2];
  }
  $incdec_ptr_i371 = $103 + 16 | 0;
  HEAP32[$__end__i_i_i >> 2] = $incdec_ptr_i371;
  $106 = $incdec_ptr_i371;
 }
 $107 = $p0;
 HEAP32[$107 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$107 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$107 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$107 + 12 >> 2] = HEAP32[$2 + 12 >> 2];
 $108 = HEAP32[$__begin__i_i_i >> 2] | 0;
 L3368 : do {
  if ($106 - $108 >> 4 >>> 0 > 1) {
   $109 = $agg_tmp154;
   $110 = $agg_tmp155;
   $111 = $agg_tmp161;
   $112 = $agg_tmp162;
   $__end__i277 = $combPoints + 4 | 0;
   $__first__i_i_i_i282 = $combPoints + 8 | 0;
   $n149_0204 = 1;
   $113 = $108;
   while (1) {
    HEAP32[$109 >> 2] = HEAP32[$107 >> 2];
    HEAP32[$109 + 4 >> 2] = HEAP32[$107 + 4 >> 2];
    HEAP32[$109 + 8 >> 2] = HEAP32[$107 + 8 >> 2];
    HEAP32[$109 + 12 >> 2] = HEAP32[$107 + 12 >> 2];
    $114 = $113 + ($n149_0204 << 4) | 0;
    HEAP32[$110 >> 2] = HEAP32[$114 >> 2];
    HEAP32[$110 + 4 >> 2] = HEAP32[$114 + 4 >> 2];
    HEAP32[$110 + 8 >> 2] = HEAP32[$114 + 8 >> 2];
    HEAP32[$110 + 12 >> 2] = HEAP32[$114 + 12 >> 2];
    do {
     if (__ZN4Comb13collisionTestEN10ClipperLib8IntPointES1_($this, $agg_tmp154, $agg_tmp155) | 0) {
      HEAP32[$111 >> 2] = HEAP32[$107 >> 2];
      HEAP32[$111 + 4 >> 2] = HEAP32[$107 + 4 >> 2];
      HEAP32[$111 + 8 >> 2] = HEAP32[$107 + 8 >> 2];
      HEAP32[$111 + 12 >> 2] = HEAP32[$107 + 12 >> 2];
      $sub163 = $n149_0204 - 1 | 0;
      $116 = (HEAP32[$__begin__i_i_i >> 2] | 0) + ($sub163 << 4) | 0;
      HEAP32[$112 >> 2] = HEAP32[$116 >> 2];
      HEAP32[$112 + 4 >> 2] = HEAP32[$116 + 4 >> 2];
      HEAP32[$112 + 8 >> 2] = HEAP32[$116 + 8 >> 2];
      HEAP32[$112 + 12 >> 2] = HEAP32[$116 + 12 >> 2];
      if (__ZN4Comb13collisionTestEN10ClipperLib8IntPointES1_($this, $agg_tmp161, $agg_tmp162) | 0) {
       $retval_0 = 0;
       break L3368;
      }
      $118 = (HEAP32[$__begin__i_i_i >> 2] | 0) + ($sub163 << 4) | 0;
      HEAP32[$107 >> 2] = HEAP32[$118 >> 2];
      HEAP32[$107 + 4 >> 2] = HEAP32[$118 + 4 >> 2];
      HEAP32[$107 + 8 >> 2] = HEAP32[$118 + 8 >> 2];
      HEAP32[$107 + 12 >> 2] = HEAP32[$118 + 12 >> 2];
      $119 = HEAP32[$__end__i277 >> 2] | 0;
      if (($119 | 0) == (HEAP32[$__first__i_i_i_i282 >> 2] | 0)) {
       __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($combPoints, $p0);
       break;
      }
      if (($119 | 0) == 0) {
       $122 = 0;
      } else {
       $121 = $119;
       HEAP32[$121 >> 2] = HEAP32[$107 >> 2];
       HEAP32[$121 + 4 >> 2] = HEAP32[$107 + 4 >> 2];
       HEAP32[$121 + 8 >> 2] = HEAP32[$107 + 8 >> 2];
       HEAP32[$121 + 12 >> 2] = HEAP32[$107 + 12 >> 2];
       $122 = HEAP32[$__end__i277 >> 2] | 0;
      }
      HEAP32[$__end__i277 >> 2] = $122 + 16;
     }
    } while (0);
    $inc = $n149_0204 + 1 | 0;
    $124 = HEAP32[$__begin__i_i_i >> 2] | 0;
    if ($inc >>> 0 < (HEAP32[$__end__i_i_i >> 2] | 0) - $124 >> 4 >>> 0) {
     $n149_0204 = $inc;
     $113 = $124;
    } else {
     label = 3129;
     break;
    }
   }
  } else {
   label = 3129;
  }
 } while (0);
 do {
  if ((label | 0) == 3129) {
   if (!$addEndpoint_0_off0) {
    $retval_0 = 1;
    break;
   }
   $__end__i207 = $combPoints + 4 | 0;
   $125 = HEAP32[$__end__i207 >> 2] | 0;
   if (($125 | 0) == (HEAP32[$combPoints + 8 >> 2] | 0)) {
    __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($combPoints, $endPoint);
    $retval_0 = 1;
    break;
   }
   if (($125 | 0) == 0) {
    $128 = 0;
   } else {
    $127 = $125;
    HEAP32[$127 >> 2] = HEAP32[$12 >> 2];
    HEAP32[$127 + 4 >> 2] = HEAP32[$12 + 4 >> 2];
    HEAP32[$127 + 8 >> 2] = HEAP32[$12 + 8 >> 2];
    HEAP32[$127 + 12 >> 2] = HEAP32[$12 + 12 >> 2];
    $128 = HEAP32[$__end__i207 >> 2] | 0;
   }
   HEAP32[$__end__i207 >> 2] = $128 + 16;
   $retval_0 = 1;
  }
 } while (0);
 $129 = HEAP32[$__begin__i_i_i >> 2] | 0;
 if (($129 | 0) == 0) {
  $retval_1 = $retval_0;
  STACKTOP = __stackBase__;
  return $retval_1 | 0;
 }
 $131 = HEAP32[$__end__i_i_i >> 2] | 0;
 if (($129 | 0) != ($131 | 0)) {
  HEAP32[$__end__i_i_i >> 2] = $131 + ((($131 - 16 + (-$129 | 0) | 0) >>> 4 ^ -1) << 4);
 }
 __ZdlPv($129);
 $retval_1 = $retval_0;
 STACKTOP = __stackBase__;
 return $retval_1 | 0;
}
function __ZN4Comb10calcMinMaxEv($this) {
 $this = $this | 0;
 var $boundery = 0, $ref73 = 0, $minX = 0, $maxX = 0, $arrayidx_i = 0, $arrayidx4_i = 0, $arrayidx10_i = 0, $arrayidx15_i = 0, $Y24 = 0, $X50 = 0, $X53 = 0, $minIdx = 0, $maxIdx = 0, $n_081 = 0, $arrayidx = 0, $arrayidx2 = 0, $ref4 = 0, $5 = 0, $6 = 0, $7 = 0, $sub = 0, $agg_tmp_sroa_0_0__idx = 0, $agg_tmp_sroa_1_8__idx52 = 0, $conv_i = 0.0, $conv2_i = 0.0, $8 = 0.0, $9 = 0.0, $10 = 0.0, $11 = 0.0, $add17_i = 0.0, $add_i = 0.0, $conv18_i$1 = 0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0, $i_072 = 0, $p0_sroa_0_0_load5871$0 = 0, $p0_sroa_0_0_load5871$1 = 0, $p0_sroa_1_8_load505970$0 = 0, $p0_sroa_1_8_load505970$1 = 0, $agg_tmp19_sroa_0_0__idx = 0, $agg_tmp19_sroa_1_8__idx54 = 0, $conv_i29 = 0.0, $conv2_i33 = 0.0, $add_i36 = 0.0, $conv6_i37$0 = 0, $conv6_i37$1 = 0, $add17_i42 = 0.0, $conv18_i43$0 = 0, $conv18_i43$1 = 0, $17$0 = 0, $17$1 = 0, $sub41$0 = 0, $sub41$1 = 0, $sub45$0 = 0, $mul$0 = 0, $mul$1 = 0, $sub48$0 = 0, $div$0 = 0, $add$0 = 0, $add$1 = 0, $18$1 = 0, $19$1 = 0, $arrayidx57 = 0, $21$1 = 0, $arrayidx64 = 0, $24$1 = 0, $inc = 0, $ref13 = 0, $26 = 0, $28 = 0, $29 = 0, $ref = 0, label = 0;
 $boundery = $this | 0;
 $ref73 = HEAP32[$boundery >> 2] | 0;
 if ((HEAP32[$ref73 + 4 >> 2] | 0) == (HEAP32[$ref73 >> 2] | 0)) {
  return;
 }
 $minX = $this + 4 | 0;
 $maxX = $this + 8 | 0;
 $arrayidx_i = $this + 24 | 0;
 $arrayidx4_i = $this + 32 | 0;
 $arrayidx10_i = $this + 40 | 0;
 $arrayidx15_i = $this + 48 | 0;
 $Y24 = $this + 64 | 0;
 $X50 = $this + 56 | 0;
 $X53 = $this + 72 | 0;
 $minIdx = $this + 12 | 0;
 $maxIdx = $this + 16 | 0;
 $n_081 = 0;
 do {
  $arrayidx = (HEAP32[$minX >> 2] | 0) + ($n_081 << 3) | 0;
  HEAP32[$arrayidx >> 2] = -1;
  HEAP32[$arrayidx + 4 >> 2] = 2147483647;
  $arrayidx2 = (HEAP32[$maxX >> 2] | 0) + ($n_081 << 3) | 0;
  HEAP32[$arrayidx2 >> 2] = 0;
  HEAP32[$arrayidx2 + 4 >> 2] = -2147483648;
  $ref4 = HEAP32[$boundery >> 2] | 0;
  $5 = HEAP32[$ref4 >> 2] | 0;
  $6 = HEAP32[$5 + ($n_081 * 12 & -1) + 4 >> 2] | 0;
  $7 = HEAP32[$5 + ($n_081 * 12 & -1) >> 2] | 0;
  $sub = ($6 - $7 >> 4) - 1 | 0;
  $agg_tmp_sroa_0_0__idx = $7 + ($sub << 4) | 0;
  $agg_tmp_sroa_1_8__idx52 = $7 + ($sub << 4) + 8 | 0;
  $conv_i = +((HEAP32[$agg_tmp_sroa_0_0__idx >> 2] | 0) >>> 0) + +(HEAP32[$agg_tmp_sroa_0_0__idx + 4 >> 2] | 0) * 4294967296.0;
  $conv2_i = +((HEAP32[$agg_tmp_sroa_1_8__idx52 >> 2] | 0) >>> 0) + +(HEAP32[$agg_tmp_sroa_1_8__idx52 + 4 >> 2] | 0) * 4294967296.0;
  L3405 : do {
   if (($6 | 0) == ($7 | 0)) {
    $ref = $ref4;
    $29 = $5;
   } else {
    $8 = +HEAPF64[$arrayidx15_i >> 3];
    $9 = +HEAPF64[$arrayidx10_i >> 3];
    $10 = +HEAPF64[$arrayidx4_i >> 3];
    $11 = +HEAPF64[$arrayidx_i >> 3];
    $add17_i = $conv_i * $9 + $conv2_i * $8;
    $add_i = $conv_i * $11 + $conv2_i * $10;
    $conv18_i$1 = (Math_min(+Math_floor($add17_i / 4294967296.0), 4294967295.0) | 0) >>> 0;
    $p0_sroa_1_8_load505970$1 = $conv18_i$1;
    $p0_sroa_1_8_load505970$0 = ~~$add17_i >>> 0;
    $p0_sroa_0_0_load5871$1 = (Math_min(+Math_floor($add_i / 4294967296.0), 4294967295.0) | 0) >>> 0;
    $p0_sroa_0_0_load5871$0 = ~~$add_i >>> 0;
    $i_072 = 0;
    $16 = $7;
    $15 = $11;
    $14 = $10;
    $13 = $9;
    $12 = $8;
    while (1) {
     $agg_tmp19_sroa_0_0__idx = $16 + ($i_072 << 4) | 0;
     $agg_tmp19_sroa_1_8__idx54 = $16 + ($i_072 << 4) + 8 | 0;
     $conv_i29 = +((HEAP32[$agg_tmp19_sroa_0_0__idx >> 2] | 0) >>> 0) + +(HEAP32[$agg_tmp19_sroa_0_0__idx + 4 >> 2] | 0) * 4294967296.0;
     $conv2_i33 = +((HEAP32[$agg_tmp19_sroa_1_8__idx54 >> 2] | 0) >>> 0) + +(HEAP32[$agg_tmp19_sroa_1_8__idx54 + 4 >> 2] | 0) * 4294967296.0;
     $add_i36 = $conv_i29 * $15 + $conv2_i33 * $14;
     $conv6_i37$0 = ~~$add_i36 >>> 0;
     $conv6_i37$1 = (Math_min(+Math_floor($add_i36 / 4294967296.0), 4294967295.0) | 0) >>> 0;
     $add17_i42 = $conv_i29 * $13 + $conv2_i33 * $12;
     $conv18_i43$0 = ~~$add17_i42 >>> 0;
     $conv18_i43$1 = (Math_min(+Math_floor($add17_i42 / 4294967296.0), 4294967295.0) | 0) >>> 0;
     $17$0 = HEAP32[$Y24 >> 2] | 0;
     $17$1 = HEAP32[$Y24 + 4 >> 2] | 0;
     if ((($p0_sroa_1_8_load505970$1 | 0) > ($17$1 | 0) | ($p0_sroa_1_8_load505970$1 | 0) == ($17$1 | 0) & $p0_sroa_1_8_load505970$0 >>> 0 > $17$0 >>> 0) & (($conv18_i43$1 | 0) < ($17$1 | 0) | ($conv18_i43$1 | 0) == ($17$1 | 0) & $conv18_i43$0 >>> 0 < $17$0 >>> 0)) {
      label = 3153;
     } else {
      if ((($conv18_i43$1 | 0) > ($17$1 | 0) | ($conv18_i43$1 | 0) == ($17$1 | 0) & $conv18_i43$0 >>> 0 > $17$0 >>> 0) & (($p0_sroa_1_8_load505970$1 | 0) < ($17$1 | 0) | ($p0_sroa_1_8_load505970$1 | 0) == ($17$1 | 0) & $p0_sroa_1_8_load505970$0 >>> 0 < $17$0 >>> 0)) {
       label = 3153;
      }
     }
     do {
      if ((label | 0) == 3153) {
       label = 0;
       $sub41$0 = _i64Subtract($conv6_i37$0, $conv6_i37$1, $p0_sroa_0_0_load5871$0, $p0_sroa_0_0_load5871$1) | 0;
       $sub41$1 = tempRet0;
       $sub45$0 = _i64Subtract($17$0, $17$1, $p0_sroa_1_8_load505970$0, $p0_sroa_1_8_load505970$1) | 0;
       $mul$0 = ___muldi3($sub45$0, tempRet0, $sub41$0, $sub41$1) | 0;
       $mul$1 = tempRet0;
       $sub48$0 = _i64Subtract($conv18_i43$0, $conv18_i43$1, $p0_sroa_1_8_load505970$0, $p0_sroa_1_8_load505970$1) | 0;
       $div$0 = ___divdi3($mul$0, $mul$1, $sub48$0, tempRet0) | 0;
       $add$0 = _i64Add($div$0, tempRet0, $p0_sroa_0_0_load5871$0, $p0_sroa_0_0_load5871$1) | 0;
       $add$1 = tempRet0;
       $18$1 = HEAP32[$X50 + 4 >> 2] | 0;
       if (($add$1 | 0) < ($18$1 | 0) | ($add$1 | 0) == ($18$1 | 0) & $add$0 >>> 0 < (HEAP32[$X50 >> 2] | 0) >>> 0) {
        break;
       }
       $19$1 = HEAP32[$X53 + 4 >> 2] | 0;
       if (($add$1 | 0) > ($19$1 | 0) | ($add$1 | 0) == ($19$1 | 0) & $add$0 >>> 0 > (HEAP32[$X53 >> 2] | 0) >>> 0) {
        break;
       }
       $arrayidx57 = (HEAP32[$minX >> 2] | 0) + ($n_081 << 3) | 0;
       $21$1 = HEAP32[$arrayidx57 + 4 >> 2] | 0;
       if (($add$1 | 0) < ($21$1 | 0) | ($add$1 | 0) == ($21$1 | 0) & $add$0 >>> 0 < (HEAP32[$arrayidx57 >> 2] | 0) >>> 0) {
        HEAP32[$arrayidx57 >> 2] = $add$0;
        HEAP32[$arrayidx57 + 4 >> 2] = $add$1;
        HEAP32[(HEAP32[$minIdx >> 2] | 0) + ($n_081 << 2) >> 2] = $i_072;
       }
       $arrayidx64 = (HEAP32[$maxX >> 2] | 0) + ($n_081 << 3) | 0;
       $24$1 = HEAP32[$arrayidx64 + 4 >> 2] | 0;
       if (!(($add$1 | 0) > ($24$1 | 0) | ($add$1 | 0) == ($24$1 | 0) & $add$0 >>> 0 > (HEAP32[$arrayidx64 >> 2] | 0) >>> 0)) {
        break;
       }
       HEAP32[$arrayidx64 >> 2] = $add$0;
       HEAP32[$arrayidx64 + 4 >> 2] = $add$1;
       HEAP32[(HEAP32[$maxIdx >> 2] | 0) + ($n_081 << 2) >> 2] = $i_072;
      }
     } while (0);
     $inc = $i_072 + 1 | 0;
     $ref13 = HEAP32[$boundery >> 2] | 0;
     $26 = HEAP32[$ref13 >> 2] | 0;
     $28 = HEAP32[$26 + ($n_081 * 12 & -1) >> 2] | 0;
     if ($inc >>> 0 >= (HEAP32[$26 + ($n_081 * 12 & -1) + 4 >> 2] | 0) - $28 >> 4 >>> 0) {
      $ref = $ref13;
      $29 = $26;
      break L3405;
     }
     $p0_sroa_1_8_load505970$1 = $conv18_i43$1;
     $p0_sroa_1_8_load505970$0 = $conv18_i43$0;
     $p0_sroa_0_0_load5871$1 = $conv6_i37$1;
     $p0_sroa_0_0_load5871$0 = $conv6_i37$0;
     $i_072 = $inc;
     $16 = $28;
     $15 = +HEAPF64[$arrayidx_i >> 3];
     $14 = +HEAPF64[$arrayidx4_i >> 3];
     $13 = +HEAPF64[$arrayidx10_i >> 3];
     $12 = +HEAPF64[$arrayidx15_i >> 3];
    }
   }
  } while (0);
  $n_081 = $n_081 + 1 | 0;
 } while ($n_081 >>> 0 < (((HEAP32[$ref + 4 >> 2] | 0) - $29 | 0) / 12 & -1) >>> 0);
 return;
}
function __ZN4Comb10moveInsideERN10ClipperLib8IntPointE($this, $p) {
 $this = $this | 0;
 $p = $p | 0;
 var $ret_sroa_0_0__idx104 = 0, $ret_sroa_0_0_copyload105$0 = 0, $ret_sroa_0_0_copyload105$1 = 0, $ret_sroa_1_8__idx107 = 0, $ret_sroa_1_8_copyload108$0 = 0, $ret_sroa_1_8_copyload108$1 = 0, $ref138 = 0, $0 = 0, $1 = 0, $sub_ptr_div_i = 0, $bestDist_0149$0 = 0, $bestDist_0149$1 = 0, $n_0148 = 0, $ret_sroa_0_0_copyload105116147$0 = 0, $ret_sroa_0_0_copyload105116147$1 = 0, $ret_sroa_1_8_copyload108120146$0 = 0, $ret_sroa_1_8_copyload108120146$1 = 0, $3 = 0, $4 = 0, $sub_ptr_div_i65 = 0, $sub = 0, $p0_sroa_1_8__idx103 = 0, $p0_sroa_0_0__idx = 0, $bestDist_1135$0 = 0, $bestDist_1135$1 = 0, $i_0134 = 0, $p0_sroa_0_0_copyload111133$0 = 0, $p0_sroa_0_0_copyload111133$1 = 0, $p0_sroa_1_8_copyload112132$0 = 0, $p0_sroa_1_8_copyload112132$1 = 0, $ret_sroa_0_0_copyload105114131$0 = 0, $ret_sroa_0_0_copyload105114131$1 = 0, $ret_sroa_1_8_copyload108118130$0 = 0, $ret_sroa_1_8_copyload108118130$1 = 0, $p1_sroa_0_0__idx91 = 0, $p1_sroa_0_0_copyload92$0 = 0, $p1_sroa_0_0_copyload92$1 = 0, $p1_sroa_1_8__idx95 = 0, $p1_sroa_1_8_copyload96$0 = 0, $p1_sroa_1_8_copyload96$1 = 0, $sub_i$0 = 0, $sub_i$1 = 0, $sub3_i$0 = 0, $sub3_i$1 = 0, $mul_i_i55$0 = 0, $mul_i_i55$1 = 0, $mul3_i_i$0 = 0, $add_i_i$0 = 0, $conv2_i = 0, $conv$0 = 0, $conv$1 = 0, $sub_i56$0 = 0, $sub_i56$1 = 0, $sub3_i57$0 = 0, $sub3_i57$1 = 0, $mul_i80$0 = 0, $mul_i80$1 = 0, $mul3_i81$0 = 0, $add_i82$0 = 0, $div$0 = 0, $div$1 = 0, $$etemp$12$1 = 0, $cmp28 = 0, $_div$0 = 0, $_div$1 = 0, $sub31$0 = 0, $sub31$1 = 0, $cmp32 = 0, $sext$1 = 0, $conv_i76$0 = 0, $conv_i76$1 = 0, $mul_i77$0 = 0, $mul_i77$1 = 0, $mul2_i$0 = 0, $mul2_i$1 = 0, $div_i$0 = 0, $div_i$1 = 0, $div2_i$0 = 0, $div2_i$1 = 0, $add_i69$0 = 0, $add_i69$1 = 0, $add3_i70$0 = 0, $add3_i70$1 = 0, $sub_i65$0 = 0, $sub_i65$1 = 0, $sub3_i66$0 = 0, $sub3_i66$1 = 0, $mul_i$0 = 0, $mul_i$1 = 0, $mul3_i$0 = 0, $add_i64$0 = 0, $add_i64$1 = 0, $mul_i_i$0 = 0, $mul_i_i$1 = 0, $mul2_i_i$0 = 0, $mul2_i_i$1 = 0, $div_i_i$0 = 0, $div_i_i$1 = 0, $div2_i_i$0 = 0, $ref_tmp46_sroa_1_8_load110$0 = 0, $ref_tmp46_sroa_1_8_load110$1 = 0, $ref_tmp46_sroa_0_0_load109$0 = 0, $ref_tmp46_sroa_0_0_load109$1 = 0, $add_i$0 = 0, $add_i$1 = 0, $add3_i$0 = 0, $ret_sroa_1_8_copyload108117$0 = 0, $ret_sroa_1_8_copyload108117$1 = 0, $ret_sroa_0_0_copyload105113$0 = 0, $ret_sroa_0_0_copyload105113$1 = 0, $bestDist_2$0 = 0, $bestDist_2$1 = 0, $inc = 0, $ret_sroa_1_8_copyload108119$0 = 0, $ret_sroa_1_8_copyload108119$1 = 0, $ret_sroa_0_0_copyload105115$0 = 0, $ret_sroa_0_0_copyload105115$1 = 0, $bestDist_3$0 = 0, $bestDist_3$1 = 0, $inc50 = 0, $$etemp$17$1 = 0, $retval_0 = 0;
 $ret_sroa_0_0__idx104 = $p | 0;
 $ret_sroa_0_0_copyload105$0 = HEAP32[$ret_sroa_0_0__idx104 >> 2] | 0;
 $ret_sroa_0_0_copyload105$1 = HEAP32[$ret_sroa_0_0__idx104 + 4 >> 2] | 0;
 $ret_sroa_1_8__idx107 = $p + 8 | 0;
 $ret_sroa_1_8_copyload108$0 = HEAP32[$ret_sroa_1_8__idx107 >> 2] | 0;
 $ret_sroa_1_8_copyload108$1 = HEAP32[$ret_sroa_1_8__idx107 + 4 >> 2] | 0;
 $ref138 = HEAP32[$this >> 2] | 0;
 $0 = HEAP32[$ref138 + 4 >> 2] | 0;
 $1 = HEAP32[$ref138 >> 2] | 0;
 if (($0 | 0) == ($1 | 0)) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 $sub_ptr_div_i = ($0 - $1 | 0) / 12 & -1;
 $ret_sroa_1_8_copyload108120146$1 = $ret_sroa_1_8_copyload108$1;
 $ret_sroa_1_8_copyload108120146$0 = $ret_sroa_1_8_copyload108$0;
 $ret_sroa_0_0_copyload105116147$1 = $ret_sroa_0_0_copyload105$1;
 $ret_sroa_0_0_copyload105116147$0 = $ret_sroa_0_0_copyload105$0;
 $n_0148 = 0;
 $bestDist_0149$1 = 0;
 $bestDist_0149$0 = 1e8;
 while (1) {
  $3 = HEAP32[$1 + ($n_0148 * 12 & -1) + 4 >> 2] | 0;
  $4 = HEAP32[$1 + ($n_0148 * 12 & -1) >> 2] | 0;
  $sub_ptr_div_i65 = $3 - $4 >> 4;
  do {
   if (($sub_ptr_div_i65 | 0) == 0) {
    $bestDist_3$1 = $bestDist_0149$1;
    $bestDist_3$0 = $bestDist_0149$0;
    $ret_sroa_0_0_copyload105115$1 = $ret_sroa_0_0_copyload105116147$1;
    $ret_sroa_0_0_copyload105115$0 = $ret_sroa_0_0_copyload105116147$0;
    $ret_sroa_1_8_copyload108119$1 = $ret_sroa_1_8_copyload108120146$1;
    $ret_sroa_1_8_copyload108119$0 = $ret_sroa_1_8_copyload108120146$0;
   } else {
    $sub = $sub_ptr_div_i65 - 1 | 0;
    if (($3 | 0) == ($4 | 0)) {
     $bestDist_3$1 = $bestDist_0149$1;
     $bestDist_3$0 = $bestDist_0149$0;
     $ret_sroa_0_0_copyload105115$1 = $ret_sroa_0_0_copyload105116147$1;
     $ret_sroa_0_0_copyload105115$0 = $ret_sroa_0_0_copyload105116147$0;
     $ret_sroa_1_8_copyload108119$1 = $ret_sroa_1_8_copyload108120146$1;
     $ret_sroa_1_8_copyload108119$0 = $ret_sroa_1_8_copyload108120146$0;
     break;
    }
    $p0_sroa_1_8__idx103 = $4 + ($sub << 4) + 8 | 0;
    $p0_sroa_0_0__idx = $4 + ($sub << 4) | 0;
    $ret_sroa_1_8_copyload108118130$1 = $ret_sroa_1_8_copyload108120146$1;
    $ret_sroa_1_8_copyload108118130$0 = $ret_sroa_1_8_copyload108120146$0;
    $ret_sroa_0_0_copyload105114131$1 = $ret_sroa_0_0_copyload105116147$1;
    $ret_sroa_0_0_copyload105114131$0 = $ret_sroa_0_0_copyload105116147$0;
    $p0_sroa_1_8_copyload112132$1 = HEAP32[$p0_sroa_1_8__idx103 + 4 >> 2] | 0;
    $p0_sroa_1_8_copyload112132$0 = HEAP32[$p0_sroa_1_8__idx103 >> 2] | 0;
    $p0_sroa_0_0_copyload111133$1 = HEAP32[$p0_sroa_0_0__idx + 4 >> 2] | 0;
    $p0_sroa_0_0_copyload111133$0 = HEAP32[$p0_sroa_0_0__idx >> 2] | 0;
    $i_0134 = 0;
    $bestDist_1135$1 = $bestDist_0149$1;
    $bestDist_1135$0 = $bestDist_0149$0;
    while (1) {
     $p1_sroa_0_0__idx91 = $4 + ($i_0134 << 4) | 0;
     $p1_sroa_0_0_copyload92$0 = HEAP32[$p1_sroa_0_0__idx91 >> 2] | 0;
     $p1_sroa_0_0_copyload92$1 = HEAP32[$p1_sroa_0_0__idx91 + 4 >> 2] | 0;
     $p1_sroa_1_8__idx95 = $4 + ($i_0134 << 4) + 8 | 0;
     $p1_sroa_1_8_copyload96$0 = HEAP32[$p1_sroa_1_8__idx95 >> 2] | 0;
     $p1_sroa_1_8_copyload96$1 = HEAP32[$p1_sroa_1_8__idx95 + 4 >> 2] | 0;
     $sub_i$0 = _i64Subtract($p1_sroa_0_0_copyload92$0, $p1_sroa_0_0_copyload92$1, $p0_sroa_0_0_copyload111133$0, $p0_sroa_0_0_copyload111133$1) | 0;
     $sub_i$1 = tempRet0;
     $sub3_i$0 = _i64Subtract($p1_sroa_1_8_copyload96$0, $p1_sroa_1_8_copyload96$1, $p0_sroa_1_8_copyload112132$0, $p0_sroa_1_8_copyload112132$1) | 0;
     $sub3_i$1 = tempRet0;
     $mul_i_i55$0 = ___muldi3($sub_i$0, $sub_i$1, $sub_i$0, $sub_i$1) | 0;
     $mul_i_i55$1 = tempRet0;
     $mul3_i_i$0 = ___muldi3($sub3_i$0, $sub3_i$1, $sub3_i$0, $sub3_i$1) | 0;
     $add_i_i$0 = _i64Add($mul3_i_i$0, tempRet0, $mul_i_i55$0, $mul_i_i55$1) | 0;
     $conv2_i = ~~+Math_sqrt(+(+($add_i_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0));
     $conv$0 = $conv2_i;
     $conv$1 = ($conv2_i | 0) < 0 ? -1 : 0;
     $sub_i56$0 = _i64Subtract($ret_sroa_0_0_copyload105$0, $ret_sroa_0_0_copyload105$1, $p0_sroa_0_0_copyload111133$0, $p0_sroa_0_0_copyload111133$1) | 0;
     $sub_i56$1 = tempRet0;
     $sub3_i57$0 = _i64Subtract($ret_sroa_1_8_copyload108$0, $ret_sroa_1_8_copyload108$1, $p0_sroa_1_8_copyload112132$0, $p0_sroa_1_8_copyload112132$1) | 0;
     $sub3_i57$1 = tempRet0;
     $mul_i80$0 = ___muldi3($sub_i56$0, $sub_i56$1, $sub_i$0, $sub_i$1) | 0;
     $mul_i80$1 = tempRet0;
     $mul3_i81$0 = ___muldi3($sub3_i57$0, $sub3_i57$1, $sub3_i$0, $sub3_i$1) | 0;
     $add_i82$0 = _i64Add($mul3_i81$0, tempRet0, $mul_i80$0, $mul_i80$1) | 0;
     $div$0 = ___divdi3($add_i82$0, tempRet0, $conv$0, $conv$1) | 0;
     $div$1 = tempRet0;
     $$etemp$12$1 = 0;
     $cmp28 = ($div$1 | 0) < ($$etemp$12$1 | 0) | ($div$1 | 0) == ($$etemp$12$1 | 0) & $div$0 >>> 0 < 10 >>> 0;
     $_div$0 = $cmp28 ? 10 : $div$0;
     $_div$1 = $cmp28 ? 0 : $div$1;
     $sub31$0 = _i64Add($conv$0, $conv$1, -10, -1) | 0;
     $sub31$1 = tempRet0;
     $cmp32 = ($_div$1 | 0) > ($sub31$1 | 0) | ($_div$1 | 0) == ($sub31$1 | 0) & $_div$0 >>> 0 > $sub31$0 >>> 0;
     $cmp32 ? $sub31$1 : $_div$1;
     $sext$1 = $cmp32 ? $sub31$0 : $_div$0;
     $conv_i76$0 = $sext$1;
     $conv_i76$1 = ($sext$1 | 0) < 0 ? -1 : 0;
     $mul_i77$0 = ___muldi3($conv_i76$0, $conv_i76$1, $sub_i$0, $sub_i$1) | 0;
     $mul_i77$1 = tempRet0;
     $mul2_i$0 = ___muldi3($conv_i76$0, $conv_i76$1, $sub3_i$0, $sub3_i$1) | 0;
     $mul2_i$1 = tempRet0;
     $div_i$0 = ___divdi3($mul_i77$0, $mul_i77$1, $conv$0, $conv$1) | 0;
     $div_i$1 = tempRet0;
     $div2_i$0 = ___divdi3($mul2_i$0, $mul2_i$1, $conv$0, $conv$1) | 0;
     $div2_i$1 = tempRet0;
     $add_i69$0 = _i64Add($div_i$0, $div_i$1, $p0_sroa_0_0_copyload111133$0, $p0_sroa_0_0_copyload111133$1) | 0;
     $add_i69$1 = tempRet0;
     $add3_i70$0 = _i64Add($div2_i$0, $div2_i$1, $p0_sroa_1_8_copyload112132$0, $p0_sroa_1_8_copyload112132$1) | 0;
     $add3_i70$1 = tempRet0;
     $sub_i65$0 = _i64Subtract($add_i69$0, $add_i69$1, $ret_sroa_0_0_copyload105$0, $ret_sroa_0_0_copyload105$1) | 0;
     $sub_i65$1 = tempRet0;
     $sub3_i66$0 = _i64Subtract($add3_i70$0, $add3_i70$1, $ret_sroa_1_8_copyload108$0, $ret_sroa_1_8_copyload108$1) | 0;
     $sub3_i66$1 = tempRet0;
     $mul_i$0 = ___muldi3($sub_i65$0, $sub_i65$1, $sub_i65$0, $sub_i65$1) | 0;
     $mul_i$1 = tempRet0;
     $mul3_i$0 = ___muldi3($sub3_i66$0, $sub3_i66$1, $sub3_i66$0, $sub3_i66$1) | 0;
     $add_i64$0 = _i64Add($mul3_i$0, tempRet0, $mul_i$0, $mul_i$1) | 0;
     $add_i64$1 = tempRet0;
     if (($add_i64$1 | 0) < ($bestDist_1135$1 | 0) | ($add_i64$1 | 0) == ($bestDist_1135$1 | 0) & $add_i64$0 >>> 0 < $bestDist_1135$0 >>> 0) {
      if (($conv2_i | 0) < 1) {
       $ref_tmp46_sroa_0_0_load109$1 = 0;
       $ref_tmp46_sroa_0_0_load109$0 = 100;
       $ref_tmp46_sroa_1_8_load110$1 = 0;
       $ref_tmp46_sroa_1_8_load110$0 = 0;
      } else {
       $mul_i_i$0 = ___muldi3($sub_i$0, $sub_i$1, 100, 0) | 0;
       $mul_i_i$1 = tempRet0;
       $mul2_i_i$0 = ___muldi3($sub3_i$0, $sub3_i$1, 100, 0) | 0;
       $mul2_i_i$1 = tempRet0;
       $div_i_i$0 = ___divdi3($mul_i_i$0, $mul_i_i$1, $conv$0, $conv$1) | 0;
       $div_i_i$1 = tempRet0;
       $div2_i_i$0 = ___divdi3($mul2_i_i$0, $mul2_i_i$1, $conv$0, $conv$1) | 0;
       $ref_tmp46_sroa_0_0_load109$1 = $div_i_i$1;
       $ref_tmp46_sroa_0_0_load109$0 = $div_i_i$0;
       $ref_tmp46_sroa_1_8_load110$1 = tempRet0;
       $ref_tmp46_sroa_1_8_load110$0 = $div2_i_i$0;
      }
      $add_i$0 = _i64Subtract($add_i69$0, $add_i69$1, $ref_tmp46_sroa_1_8_load110$0, $ref_tmp46_sroa_1_8_load110$1) | 0;
      $add_i$1 = tempRet0;
      $add3_i$0 = _i64Add($ref_tmp46_sroa_0_0_load109$0, $ref_tmp46_sroa_0_0_load109$1, $add3_i70$0, $add3_i70$1) | 0;
      $bestDist_2$1 = $add_i64$1;
      $bestDist_2$0 = $add_i64$0;
      $ret_sroa_0_0_copyload105113$1 = $add_i$1;
      $ret_sroa_0_0_copyload105113$0 = $add_i$0;
      $ret_sroa_1_8_copyload108117$1 = tempRet0;
      $ret_sroa_1_8_copyload108117$0 = $add3_i$0;
     } else {
      $bestDist_2$1 = $bestDist_1135$1;
      $bestDist_2$0 = $bestDist_1135$0;
      $ret_sroa_0_0_copyload105113$1 = $ret_sroa_0_0_copyload105114131$1;
      $ret_sroa_0_0_copyload105113$0 = $ret_sroa_0_0_copyload105114131$0;
      $ret_sroa_1_8_copyload108117$1 = $ret_sroa_1_8_copyload108118130$1;
      $ret_sroa_1_8_copyload108117$0 = $ret_sroa_1_8_copyload108118130$0;
     }
     $inc = $i_0134 + 1 | 0;
     if ($inc >>> 0 < $sub_ptr_div_i65 >>> 0) {
      $ret_sroa_1_8_copyload108118130$1 = $ret_sroa_1_8_copyload108117$1;
      $ret_sroa_1_8_copyload108118130$0 = $ret_sroa_1_8_copyload108117$0;
      $ret_sroa_0_0_copyload105114131$1 = $ret_sroa_0_0_copyload105113$1;
      $ret_sroa_0_0_copyload105114131$0 = $ret_sroa_0_0_copyload105113$0;
      $p0_sroa_1_8_copyload112132$1 = $p1_sroa_1_8_copyload96$1;
      $p0_sroa_1_8_copyload112132$0 = $p1_sroa_1_8_copyload96$0;
      $p0_sroa_0_0_copyload111133$1 = $p1_sroa_0_0_copyload92$1;
      $p0_sroa_0_0_copyload111133$0 = $p1_sroa_0_0_copyload92$0;
      $i_0134 = $inc;
      $bestDist_1135$1 = $bestDist_2$1;
      $bestDist_1135$0 = $bestDist_2$0;
     } else {
      $bestDist_3$1 = $bestDist_2$1;
      $bestDist_3$0 = $bestDist_2$0;
      $ret_sroa_0_0_copyload105115$1 = $ret_sroa_0_0_copyload105113$1;
      $ret_sroa_0_0_copyload105115$0 = $ret_sroa_0_0_copyload105113$0;
      $ret_sroa_1_8_copyload108119$1 = $ret_sroa_1_8_copyload108117$1;
      $ret_sroa_1_8_copyload108119$0 = $ret_sroa_1_8_copyload108117$0;
      break;
     }
    }
   }
  } while (0);
  $inc50 = $n_0148 + 1 | 0;
  if ($inc50 >>> 0 < $sub_ptr_div_i >>> 0) {
   $ret_sroa_1_8_copyload108120146$1 = $ret_sroa_1_8_copyload108119$1;
   $ret_sroa_1_8_copyload108120146$0 = $ret_sroa_1_8_copyload108119$0;
   $ret_sroa_0_0_copyload105116147$1 = $ret_sroa_0_0_copyload105115$1;
   $ret_sroa_0_0_copyload105116147$0 = $ret_sroa_0_0_copyload105115$0;
   $n_0148 = $inc50;
   $bestDist_0149$1 = $bestDist_3$1;
   $bestDist_0149$0 = $bestDist_3$0;
  } else {
   break;
  }
 }
 $$etemp$17$1 = 0;
 if (!(($bestDist_3$1 | 0) < ($$etemp$17$1 | 0) | ($bestDist_3$1 | 0) == ($$etemp$17$1 | 0) & $bestDist_3$0 >>> 0 < 1e8 >>> 0)) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 HEAP32[$ret_sroa_0_0__idx104 >> 2] = $ret_sroa_0_0_copyload105115$0;
 HEAP32[$ret_sroa_0_0__idx104 + 4 >> 2] = $ret_sroa_0_0_copyload105115$1;
 HEAP32[$ret_sroa_1_8__idx107 >> 2] = $ret_sroa_1_8_copyload108119$0;
 HEAP32[$ret_sroa_1_8__idx107 + 4 >> 2] = $ret_sroa_1_8_copyload108119$1;
 $retval_0 = 1;
 return $retval_0 | 0;
}
function __ZN4Comb26getBounderyPointWithOffsetEjj($agg_result, $this, $polygonNr, $idx) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $polygonNr = $polygonNr | 0;
 $idx = $idx | 0;
 var $0 = 0, $arrayidx_i = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $_sink = 0, $sub = 0, $p0_sroa_0_0__idx = 0, $p0_sroa_1_8__idx86 = 0, $p0_sroa_1_8_copyload$0 = 0, $p0_sroa_1_8_copyload$1 = 0, $p1_sroa_0_0__idx = 0, $p1_sroa_0_0_copyload$0 = 0, $p1_sroa_0_0_copyload$1 = 0, $p1_sroa_1_8__idx85 = 0, $p1_sroa_1_8_copyload$0 = 0, $p1_sroa_1_8_copyload$1 = 0, $add_ = 0, $p2_sroa_0_0__idx = 0, $p2_sroa_0_0_copyload$0 = 0, $p2_sroa_0_0_copyload$1 = 0, $p2_sroa_1_8__idx80 = 0, $p2_sroa_1_8_copyload$0 = 0, $p2_sroa_1_8_copyload$1 = 0, $sub_i$0 = 0, $sub_i$1 = 0, $sub3_i$0 = 0, $sub3_i$1 = 0, $mul_i_i_i28$0 = 0, $mul_i_i_i28$1 = 0, $mul3_i_i_i29$0 = 0, $add_i_i_i30$0 = 0, $conv2_i_i33 = 0, $mul_i_i38$0 = 0, $mul_i_i38$1 = 0, $mul2_i_i39$0 = 0, $mul2_i_i39$1 = 0, $conv_i8_i40$0 = 0, $conv_i8_i40$1 = 0, $div_i_i41$0 = 0, $div_i_i41$1 = 0, $div2_i_i42$0 = 0, $ref_tmp_sroa_1_8_load92$0 = 0, $ref_tmp_sroa_1_8_load92$1 = 0, $ref_tmp_sroa_0_0_load91$0 = 0, $ref_tmp_sroa_0_0_load91$1 = 0, $sub_i76$0 = 0, $sub_i76$1 = 0, $sub3_i77$0 = 0, $sub3_i77$1 = 0, $mul_i_i_i57$0 = 0, $mul_i_i_i57$1 = 0, $mul3_i_i_i58$0 = 0, $add_i_i_i59$0 = 0, $conv2_i_i62 = 0, $mul_i_i67$0 = 0, $mul_i_i67$1 = 0, $mul2_i_i68$0 = 0, $mul2_i_i68$1 = 0, $conv_i8_i69$0 = 0, $conv_i8_i69$1 = 0, $div_i_i70$0 = 0, $div_i_i70$1 = 0, $div2_i_i71$0 = 0, $ref_tmp27_sroa_1_8_load90$0 = 0, $ref_tmp27_sroa_1_8_load90$1 = 0, $ref_tmp27_sroa_0_0_load89$0 = 0, $ref_tmp27_sroa_0_0_load89$1 = 0, $sum$0 = 0, $sum$1 = 0, $add3_i51$0 = 0, $add3_i51$1 = 0, $mul_i_i_i$0 = 0, $mul_i_i_i$1 = 0, $mul3_i_i_i$0 = 0, $add_i_i_i$0 = 0, $conv2_i_i = 0, $mul_i_i$0 = 0, $mul_i_i$1 = 0, $mul2_i_i$0 = 0, $mul2_i_i$1 = 0, $conv_i8_i$0 = 0, $conv_i8_i$1 = 0, $div_i_i$0 = 0, $div_i_i$1 = 0, $div2_i_i$0 = 0, $n_sroa_1_8_load88$0 = 0, $n_sroa_1_8_load88$1 = 0, $n_sroa_0_0_load87$0 = 0, $n_sroa_0_0_load87$1 = 0, $add_i$0 = 0, $add_i$1 = 0, $add3_i$0 = 0, $add3_i$1 = 0, $X_i_i_i24 = 0, $st$18$0 = 0, $st$19$1 = 0, $Y_i_i_i25 = 0, $st$20$0 = 0, $st$21$1 = 0;
 $0 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 $arrayidx_i = $0 + ($polygonNr * 12 & -1) | 0;
 if (($idx | 0) == 0) {
  $1 = HEAP32[$0 + ($polygonNr * 12 & -1) + 4 >> 2] | 0;
  $2 = HEAP32[$arrayidx_i >> 2] | 0;
  $_sink = $1 - $2 >> 4;
  $4 = $2;
  $3 = $1;
 } else {
  $_sink = $idx;
  $4 = HEAP32[$arrayidx_i >> 2] | 0;
  $3 = HEAP32[$0 + ($polygonNr * 12 & -1) + 4 >> 2] | 0;
 }
 $sub = $_sink - 1 | 0;
 $p0_sroa_0_0__idx = $4 + ($sub << 4) | 0;
 $p0_sroa_1_8__idx86 = $4 + ($sub << 4) + 8 | 0;
 $p0_sroa_1_8_copyload$0 = HEAP32[$p0_sroa_1_8__idx86 >> 2] | 0;
 $p0_sroa_1_8_copyload$1 = HEAP32[$p0_sroa_1_8__idx86 + 4 >> 2] | 0;
 $p1_sroa_0_0__idx = $4 + ($idx << 4) | 0;
 $p1_sroa_0_0_copyload$0 = HEAP32[$p1_sroa_0_0__idx >> 2] | 0;
 $p1_sroa_0_0_copyload$1 = HEAP32[$p1_sroa_0_0__idx + 4 >> 2] | 0;
 $p1_sroa_1_8__idx85 = $4 + ($idx << 4) + 8 | 0;
 $p1_sroa_1_8_copyload$0 = HEAP32[$p1_sroa_1_8__idx85 >> 2] | 0;
 $p1_sroa_1_8_copyload$1 = HEAP32[$p1_sroa_1_8__idx85 + 4 >> 2] | 0;
 $add_ = (($3 - $4 >> 4) - 1 | 0) >>> 0 > $idx >>> 0 ? $idx + 1 | 0 : 0;
 $p2_sroa_0_0__idx = $4 + ($add_ << 4) | 0;
 $p2_sroa_0_0_copyload$0 = HEAP32[$p2_sroa_0_0__idx >> 2] | 0;
 $p2_sroa_0_0_copyload$1 = HEAP32[$p2_sroa_0_0__idx + 4 >> 2] | 0;
 $p2_sroa_1_8__idx80 = $4 + ($add_ << 4) + 8 | 0;
 $p2_sroa_1_8_copyload$0 = HEAP32[$p2_sroa_1_8__idx80 >> 2] | 0;
 $p2_sroa_1_8_copyload$1 = HEAP32[$p2_sroa_1_8__idx80 + 4 >> 2] | 0;
 $sub_i$0 = _i64Subtract($p1_sroa_0_0_copyload$0, $p1_sroa_0_0_copyload$1, HEAP32[$p0_sroa_0_0__idx >> 2] | 0, HEAP32[$p0_sroa_0_0__idx + 4 >> 2] | 0) | 0;
 $sub_i$1 = tempRet0;
 $sub3_i$0 = _i64Subtract($p1_sroa_1_8_copyload$0, $p1_sroa_1_8_copyload$1, $p0_sroa_1_8_copyload$0, $p0_sroa_1_8_copyload$1) | 0;
 $sub3_i$1 = tempRet0;
 $mul_i_i_i28$0 = ___muldi3($sub_i$0, $sub_i$1, $sub_i$0, $sub_i$1) | 0;
 $mul_i_i_i28$1 = tempRet0;
 $mul3_i_i_i29$0 = ___muldi3($sub3_i$0, $sub3_i$1, $sub3_i$0, $sub3_i$1) | 0;
 $add_i_i_i30$0 = _i64Add($mul3_i_i_i29$0, tempRet0, $mul_i_i_i28$0, $mul_i_i_i28$1) | 0;
 $conv2_i_i33 = ~~+Math_sqrt(+(+($add_i_i_i30$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0));
 if (($conv2_i_i33 | 0) < 1) {
  $ref_tmp_sroa_0_0_load91$1 = 0;
  $ref_tmp_sroa_0_0_load91$0 = 1e3;
  $ref_tmp_sroa_1_8_load92$1 = 0;
  $ref_tmp_sroa_1_8_load92$0 = 0;
 } else {
  $mul_i_i38$0 = ___muldi3($sub_i$0, $sub_i$1, 1e3, 0) | 0;
  $mul_i_i38$1 = tempRet0;
  $mul2_i_i39$0 = ___muldi3($sub3_i$0, $sub3_i$1, 1e3, 0) | 0;
  $mul2_i_i39$1 = tempRet0;
  $conv_i8_i40$0 = $conv2_i_i33;
  $conv_i8_i40$1 = ($conv2_i_i33 | 0) < 0 ? -1 : 0;
  $div_i_i41$0 = ___divdi3($mul_i_i38$0, $mul_i_i38$1, $conv_i8_i40$0, $conv_i8_i40$1) | 0;
  $div_i_i41$1 = tempRet0;
  $div2_i_i42$0 = ___divdi3($mul2_i_i39$0, $mul2_i_i39$1, $conv_i8_i40$0, $conv_i8_i40$1) | 0;
  $ref_tmp_sroa_0_0_load91$1 = $div_i_i41$1;
  $ref_tmp_sroa_0_0_load91$0 = $div_i_i41$0;
  $ref_tmp_sroa_1_8_load92$1 = tempRet0;
  $ref_tmp_sroa_1_8_load92$0 = $div2_i_i42$0;
 }
 $sub_i76$0 = _i64Subtract($p2_sroa_0_0_copyload$0, $p2_sroa_0_0_copyload$1, $p1_sroa_0_0_copyload$0, $p1_sroa_0_0_copyload$1) | 0;
 $sub_i76$1 = tempRet0;
 $sub3_i77$0 = _i64Subtract($p2_sroa_1_8_copyload$0, $p2_sroa_1_8_copyload$1, $p1_sroa_1_8_copyload$0, $p1_sroa_1_8_copyload$1) | 0;
 $sub3_i77$1 = tempRet0;
 $mul_i_i_i57$0 = ___muldi3($sub_i76$0, $sub_i76$1, $sub_i76$0, $sub_i76$1) | 0;
 $mul_i_i_i57$1 = tempRet0;
 $mul3_i_i_i58$0 = ___muldi3($sub3_i77$0, $sub3_i77$1, $sub3_i77$0, $sub3_i77$1) | 0;
 $add_i_i_i59$0 = _i64Add($mul3_i_i_i58$0, tempRet0, $mul_i_i_i57$0, $mul_i_i_i57$1) | 0;
 $conv2_i_i62 = ~~+Math_sqrt(+(+($add_i_i_i59$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0));
 if (($conv2_i_i62 | 0) < 1) {
  $ref_tmp27_sroa_0_0_load89$1 = 0;
  $ref_tmp27_sroa_0_0_load89$0 = 1e3;
  $ref_tmp27_sroa_1_8_load90$1 = 0;
  $ref_tmp27_sroa_1_8_load90$0 = 0;
 } else {
  $mul_i_i67$0 = ___muldi3($sub_i76$0, $sub_i76$1, 1e3, 0) | 0;
  $mul_i_i67$1 = tempRet0;
  $mul2_i_i68$0 = ___muldi3($sub3_i77$0, $sub3_i77$1, 1e3, 0) | 0;
  $mul2_i_i68$1 = tempRet0;
  $conv_i8_i69$0 = $conv2_i_i62;
  $conv_i8_i69$1 = ($conv2_i_i62 | 0) < 0 ? -1 : 0;
  $div_i_i70$0 = ___divdi3($mul_i_i67$0, $mul_i_i67$1, $conv_i8_i69$0, $conv_i8_i69$1) | 0;
  $div_i_i70$1 = tempRet0;
  $div2_i_i71$0 = ___divdi3($mul2_i_i68$0, $mul2_i_i68$1, $conv_i8_i69$0, $conv_i8_i69$1) | 0;
  $ref_tmp27_sroa_0_0_load89$1 = $div_i_i70$1;
  $ref_tmp27_sroa_0_0_load89$0 = $div_i_i70$0;
  $ref_tmp27_sroa_1_8_load90$1 = tempRet0;
  $ref_tmp27_sroa_1_8_load90$0 = $div2_i_i71$0;
 }
 $sum$0 = _i64Add($ref_tmp27_sroa_1_8_load90$0, $ref_tmp27_sroa_1_8_load90$1, $ref_tmp_sroa_1_8_load92$0, $ref_tmp_sroa_1_8_load92$1) | 0;
 $sum$1 = tempRet0;
 $add3_i51$0 = _i64Add($ref_tmp27_sroa_0_0_load89$0, $ref_tmp27_sroa_0_0_load89$1, $ref_tmp_sroa_0_0_load91$0, $ref_tmp_sroa_0_0_load91$1) | 0;
 $add3_i51$1 = tempRet0;
 $mul_i_i_i$0 = ___muldi3($sum$0, $sum$1, $sum$0, $sum$1) | 0;
 $mul_i_i_i$1 = tempRet0;
 $mul3_i_i_i$0 = ___muldi3($add3_i51$0, $add3_i51$1, $add3_i51$0, $add3_i51$1) | 0;
 $add_i_i_i$0 = _i64Add($mul3_i_i_i$0, tempRet0, $mul_i_i_i$0, $mul_i_i_i$1) | 0;
 $conv2_i_i = ~~+Math_sqrt(+(+($add_i_i_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0));
 if (($conv2_i_i | 0) < 1) {
  $n_sroa_0_0_load87$1 = 0;
  $n_sroa_0_0_load87$0 = 200;
  $n_sroa_1_8_load88$1 = 0;
  $n_sroa_1_8_load88$0 = 0;
  $add_i$0 = _i64Add($n_sroa_0_0_load87$0, $n_sroa_0_0_load87$1, $p1_sroa_0_0_copyload$0, $p1_sroa_0_0_copyload$1) | 0;
  $add_i$1 = tempRet0;
  $add3_i$0 = _i64Add($n_sroa_1_8_load88$0, $n_sroa_1_8_load88$1, $p1_sroa_1_8_copyload$0, $p1_sroa_1_8_copyload$1) | 0;
  $add3_i$1 = tempRet0;
  $X_i_i_i24 = $agg_result | 0;
  $st$18$0 = $X_i_i_i24 | 0;
  HEAP32[$st$18$0 >> 2] = $add_i$0;
  $st$19$1 = $X_i_i_i24 + 4 | 0;
  HEAP32[$st$19$1 >> 2] = $add_i$1;
  $Y_i_i_i25 = $agg_result + 8 | 0;
  $st$20$0 = $Y_i_i_i25 | 0;
  HEAP32[$st$20$0 >> 2] = $add3_i$0;
  $st$21$1 = $Y_i_i_i25 + 4 | 0;
  HEAP32[$st$21$1 >> 2] = $add3_i$1;
  return;
 }
 $mul_i_i$0 = ___muldi3($sum$0, $sum$1, -200, -1) | 0;
 $mul_i_i$1 = tempRet0;
 $mul2_i_i$0 = ___muldi3($add3_i51$0, $add3_i51$1, 200, 0) | 0;
 $mul2_i_i$1 = tempRet0;
 $conv_i8_i$0 = $conv2_i_i;
 $conv_i8_i$1 = ($conv2_i_i | 0) < 0 ? -1 : 0;
 $div_i_i$0 = ___divdi3($mul_i_i$0, $mul_i_i$1, $conv_i8_i$0, $conv_i8_i$1) | 0;
 $div_i_i$1 = tempRet0;
 $div2_i_i$0 = ___divdi3($mul2_i_i$0, $mul2_i_i$1, $conv_i8_i$0, $conv_i8_i$1) | 0;
 $n_sroa_0_0_load87$1 = $div_i_i$1;
 $n_sroa_0_0_load87$0 = $div_i_i$0;
 $n_sroa_1_8_load88$1 = tempRet0;
 $n_sroa_1_8_load88$0 = $div2_i_i$0;
 $add_i$0 = _i64Add($n_sroa_0_0_load87$0, $n_sroa_0_0_load87$1, $p1_sroa_0_0_copyload$0, $p1_sroa_0_0_copyload$1) | 0;
 $add_i$1 = tempRet0;
 $add3_i$0 = _i64Add($n_sroa_1_8_load88$0, $n_sroa_1_8_load88$1, $p1_sroa_1_8_copyload$0, $p1_sroa_1_8_copyload$1) | 0;
 $add3_i$1 = tempRet0;
 $X_i_i_i24 = $agg_result | 0;
 $st$18$0 = $X_i_i_i24 | 0;
 HEAP32[$st$18$0 >> 2] = $add_i$0;
 $st$19$1 = $X_i_i_i24 + 4 | 0;
 HEAP32[$st$19$1 >> 2] = $add_i$1;
 $Y_i_i_i25 = $agg_result + 8 | 0;
 $st$20$0 = $Y_i_i_i25 | 0;
 HEAP32[$st$20$0 >> 2] = $add3_i$0;
 $st$21$1 = $Y_i_i_i25 + 4 | 0;
 HEAP32[$st$21$1 >> 2] = $add3_i$1;
 return;
}
function __ZN4Comb13collisionTestEN10ClipperLib8IntPointES1_($this, $startPoint, $endPoint) {
 $this = $this | 0;
 $startPoint = $startPoint | 0;
 $endPoint = $endPoint | 0;
 var $endPoint_idx = 0, $endPoint_idx_val$0 = 0, $endPoint_idx_val$1 = 0, $endPoint_idx10 = 0, $endPoint_idx10_val$0 = 0, $endPoint_idx10_val$1 = 0, $startPoint_idx = 0, $startPoint_idx_val$0 = 0, $startPoint_idx_val$1 = 0, $startPoint_idx11 = 0, $startPoint_idx11_val$0 = 0, $startPoint_idx11_val$1 = 0, $sub_i$0 = 0, $sub_i$1 = 0, $sub3_i$0 = 0, $conv_i_i = 0.0, $conv2_i_i = 0.0, $call_i_i = 0.0, $div_i_i = 0.0, $div18_i_i = 0.0, $sub_i_i = 0.0, $conv_i62 = 0.0, $conv2_i66 = 0.0, $add_i69 = 0.0, $conv6_i70$0 = 0, $conv6_i70$1 = 0, $add17_i75 = 0.0, $conv18_i76$0 = 0, $conv18_i76$1 = 0, $ref_tmp2_sroa_0_0__idx = 0, $ref_tmp2_sroa_1_8__idx88 = 0, $conv_i41 = 0.0, $conv2_i45 = 0.0, $add_i48 = 0.0, $conv6_i49$0 = 0, $conv6_i49$1 = 0, $add17_i54 = 0.0, $conv18_i55$1 = 0, $ref_tmp5_sroa_0_0__idx = 0, $ref_tmp5_sroa_1_8__idx87 = 0, $ref121 = 0, $0 = 0, $1 = 0, $n_0129 = 0, $3 = 0, $4 = 0, $sub_ptr_div_i109 = 0, $sub = 0, $agg_tmp14_sroa_0_0__idx = 0, $agg_tmp14_sroa_1_8__idx97 = 0, $conv_i20 = 0.0, $conv2_i24 = 0.0, $add17_i33 = 0.0, $add_i27 = 0.0, $conv18_i34$1 = 0, $i_0119 = 0, $p0_sroa_0_0_load105118$0 = 0, $p0_sroa_0_0_load105118$1 = 0, $p0_sroa_1_8_load86106117$0 = 0, $p0_sroa_1_8_load86106117$1 = 0, $agg_tmp31_sroa_0_0__idx = 0, $agg_tmp31_sroa_1_8__idx95 = 0, $conv_i = 0.0, $conv2_i = 0.0, $add_i = 0.0, $conv6_i$0 = 0, $conv6_i$1 = 0, $add17_i = 0.0, $conv18_i$0 = 0, $conv18_i$1 = 0, $sub55$0 = 0, $sub55$1 = 0, $sub59$0 = 0, $mul$0 = 0, $mul$1 = 0, $sub62$0 = 0, $div$0 = 0, $add$0 = 0, $add$1 = 0, $inc = 0, $inc74 = 0, $retval_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 tempParam = $startPoint;
 $startPoint = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[$startPoint >> 2] = HEAP32[tempParam >> 2];
 HEAP32[$startPoint + 4 >> 2] = HEAP32[tempParam + 4 >> 2];
 HEAP32[$startPoint + 8 >> 2] = HEAP32[tempParam + 8 >> 2];
 HEAP32[$startPoint + 12 >> 2] = HEAP32[tempParam + 12 >> 2];
 tempParam = $endPoint;
 $endPoint = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[$endPoint >> 2] = HEAP32[tempParam >> 2];
 HEAP32[$endPoint + 4 >> 2] = HEAP32[tempParam + 4 >> 2];
 HEAP32[$endPoint + 8 >> 2] = HEAP32[tempParam + 8 >> 2];
 HEAP32[$endPoint + 12 >> 2] = HEAP32[tempParam + 12 >> 2];
 $endPoint_idx = $endPoint | 0;
 $endPoint_idx_val$0 = HEAP32[$endPoint_idx >> 2] | 0;
 $endPoint_idx_val$1 = HEAP32[$endPoint_idx + 4 >> 2] | 0;
 $endPoint_idx10 = $endPoint + 8 | 0;
 $endPoint_idx10_val$0 = HEAP32[$endPoint_idx10 >> 2] | 0;
 $endPoint_idx10_val$1 = HEAP32[$endPoint_idx10 + 4 >> 2] | 0;
 $startPoint_idx = $startPoint | 0;
 $startPoint_idx_val$0 = HEAP32[$startPoint_idx >> 2] | 0;
 $startPoint_idx_val$1 = HEAP32[$startPoint_idx + 4 >> 2] | 0;
 $startPoint_idx11 = $startPoint + 8 | 0;
 $startPoint_idx11_val$0 = HEAP32[$startPoint_idx11 >> 2] | 0;
 $startPoint_idx11_val$1 = HEAP32[$startPoint_idx11 + 4 >> 2] | 0;
 $sub_i$0 = _i64Subtract($endPoint_idx_val$0, $endPoint_idx_val$1, $startPoint_idx_val$0, $startPoint_idx_val$1) | 0;
 $sub_i$1 = tempRet0;
 $sub3_i$0 = _i64Subtract($endPoint_idx10_val$0, $endPoint_idx10_val$1, $startPoint_idx11_val$0, $startPoint_idx11_val$1) | 0;
 $conv_i_i = +($sub_i$0 >>> 0) + +($sub_i$1 | 0) * 4294967296.0;
 $conv2_i_i = +($sub3_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
 $call_i_i = +Math_sqrt(+($conv_i_i * $conv_i_i + $conv2_i_i * $conv2_i_i));
 $div_i_i = $conv_i_i / $call_i_i;
 $div18_i_i = $conv2_i_i / $call_i_i;
 $sub_i_i = -0.0 - $div18_i_i;
 HEAPF64[$this + 24 >> 3] = $div_i_i;
 HEAPF64[$this + 32 >> 3] = $div18_i_i;
 HEAPF64[$this + 40 >> 3] = $sub_i_i;
 HEAPF64[$this + 48 >> 3] = $div_i_i;
 $conv_i62 = +($startPoint_idx_val$0 >>> 0) + +($startPoint_idx_val$1 | 0) * 4294967296.0;
 $conv2_i66 = +($startPoint_idx11_val$0 >>> 0) + +($startPoint_idx11_val$1 | 0) * 4294967296.0;
 $add_i69 = $conv_i62 * $div_i_i + $conv2_i66 * $div18_i_i;
 $conv6_i70$0 = ~~$add_i69 >>> 0;
 $conv6_i70$1 = (Math_min(+Math_floor($add_i69 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $add17_i75 = $conv_i62 * $sub_i_i + $conv2_i66 * $div_i_i;
 $conv18_i76$0 = ~~$add17_i75 >>> 0;
 $conv18_i76$1 = (Math_min(+Math_floor($add17_i75 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $ref_tmp2_sroa_0_0__idx = $this + 56 | 0;
 HEAP32[$ref_tmp2_sroa_0_0__idx >> 2] = $conv6_i70$0;
 HEAP32[$ref_tmp2_sroa_0_0__idx + 4 >> 2] = $conv6_i70$1;
 $ref_tmp2_sroa_1_8__idx88 = $this + 64 | 0;
 HEAP32[$ref_tmp2_sroa_1_8__idx88 >> 2] = $conv18_i76$0;
 HEAP32[$ref_tmp2_sroa_1_8__idx88 + 4 >> 2] = $conv18_i76$1;
 $conv_i41 = +($endPoint_idx_val$0 >>> 0) + +($endPoint_idx_val$1 | 0) * 4294967296.0;
 $conv2_i45 = +($endPoint_idx10_val$0 >>> 0) + +($endPoint_idx10_val$1 | 0) * 4294967296.0;
 $add_i48 = $conv_i41 * $div_i_i + $conv2_i45 * $div18_i_i;
 $conv6_i49$0 = ~~$add_i48 >>> 0;
 $conv6_i49$1 = (Math_min(+Math_floor($add_i48 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $add17_i54 = $conv_i41 * $sub_i_i + $conv2_i45 * $div_i_i;
 $conv18_i55$1 = (Math_min(+Math_floor($add17_i54 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $ref_tmp5_sroa_0_0__idx = $this + 72 | 0;
 HEAP32[$ref_tmp5_sroa_0_0__idx >> 2] = $conv6_i49$0;
 HEAP32[$ref_tmp5_sroa_0_0__idx + 4 >> 2] = $conv6_i49$1;
 $ref_tmp5_sroa_1_8__idx87 = $this + 80 | 0;
 HEAP32[$ref_tmp5_sroa_1_8__idx87 >> 2] = ~~$add17_i54 >>> 0;
 HEAP32[$ref_tmp5_sroa_1_8__idx87 + 4 >> 2] = $conv18_i55$1;
 $ref121 = HEAP32[$this >> 2] | 0;
 $0 = HEAP32[$ref121 + 4 >> 2] | 0;
 $1 = HEAP32[$ref121 >> 2] | 0;
 if (($0 | 0) == ($1 | 0)) {
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else {
  $n_0129 = 0;
 }
 L3464 : while (1) {
  $3 = HEAP32[$1 + ($n_0129 * 12 & -1) + 4 >> 2] | 0;
  $4 = HEAP32[$1 + ($n_0129 * 12 & -1) >> 2] | 0;
  $sub_ptr_div_i109 = $3 - $4 >> 4;
  do {
   if (($sub_ptr_div_i109 | 0) != 0) {
    $sub = $sub_ptr_div_i109 - 1 | 0;
    $agg_tmp14_sroa_0_0__idx = $4 + ($sub << 4) | 0;
    $agg_tmp14_sroa_1_8__idx97 = $4 + ($sub << 4) + 8 | 0;
    $conv_i20 = +((HEAP32[$agg_tmp14_sroa_0_0__idx >> 2] | 0) >>> 0) + +(HEAP32[$agg_tmp14_sroa_0_0__idx + 4 >> 2] | 0) * 4294967296.0;
    $conv2_i24 = +((HEAP32[$agg_tmp14_sroa_1_8__idx97 >> 2] | 0) >>> 0) + +(HEAP32[$agg_tmp14_sroa_1_8__idx97 + 4 >> 2] | 0) * 4294967296.0;
    if (($3 | 0) == ($4 | 0)) {
     break;
    }
    $add17_i33 = $conv_i20 * $sub_i_i + $conv2_i24 * $div_i_i;
    $add_i27 = $conv_i20 * $div_i_i + $conv2_i24 * $div18_i_i;
    $conv18_i34$1 = (Math_min(+Math_floor($add17_i33 / 4294967296.0), 4294967295.0) | 0) >>> 0;
    $p0_sroa_1_8_load86106117$1 = $conv18_i34$1;
    $p0_sroa_1_8_load86106117$0 = ~~$add17_i33 >>> 0;
    $p0_sroa_0_0_load105118$1 = (Math_min(+Math_floor($add_i27 / 4294967296.0), 4294967295.0) | 0) >>> 0;
    $p0_sroa_0_0_load105118$0 = ~~$add_i27 >>> 0;
    $i_0119 = 0;
    while (1) {
     $agg_tmp31_sroa_0_0__idx = $4 + ($i_0119 << 4) | 0;
     $agg_tmp31_sroa_1_8__idx95 = $4 + ($i_0119 << 4) + 8 | 0;
     $conv_i = +((HEAP32[$agg_tmp31_sroa_0_0__idx >> 2] | 0) >>> 0) + +(HEAP32[$agg_tmp31_sroa_0_0__idx + 4 >> 2] | 0) * 4294967296.0;
     $conv2_i = +((HEAP32[$agg_tmp31_sroa_1_8__idx95 >> 2] | 0) >>> 0) + +(HEAP32[$agg_tmp31_sroa_1_8__idx95 + 4 >> 2] | 0) * 4294967296.0;
     $add_i = $conv_i * $div_i_i + $conv2_i * $div18_i_i;
     $conv6_i$0 = ~~$add_i >>> 0;
     $conv6_i$1 = (Math_min(+Math_floor($add_i / 4294967296.0), 4294967295.0) | 0) >>> 0;
     $add17_i = $conv_i * $sub_i_i + $conv2_i * $div_i_i;
     $conv18_i$0 = ~~$add17_i >>> 0;
     $conv18_i$1 = (Math_min(+Math_floor($add17_i / 4294967296.0), 4294967295.0) | 0) >>> 0;
     if ((($p0_sroa_1_8_load86106117$1 | 0) > ($conv18_i76$1 | 0) | ($p0_sroa_1_8_load86106117$1 | 0) == ($conv18_i76$1 | 0) & $p0_sroa_1_8_load86106117$0 >>> 0 > $conv18_i76$0 >>> 0) & (($conv18_i$1 | 0) < ($conv18_i76$1 | 0) | ($conv18_i$1 | 0) == ($conv18_i76$1 | 0) & $conv18_i$0 >>> 0 < $conv18_i76$0 >>> 0)) {
      label = 3200;
     } else {
      if ((($conv18_i$1 | 0) > ($conv18_i76$1 | 0) | ($conv18_i$1 | 0) == ($conv18_i76$1 | 0) & $conv18_i$0 >>> 0 > $conv18_i76$0 >>> 0) & (($p0_sroa_1_8_load86106117$1 | 0) < ($conv18_i76$1 | 0) | ($p0_sroa_1_8_load86106117$1 | 0) == ($conv18_i76$1 | 0) & $p0_sroa_1_8_load86106117$0 >>> 0 < $conv18_i76$0 >>> 0)) {
       label = 3200;
      }
     }
     if ((label | 0) == 3200) {
      label = 0;
      $sub55$0 = _i64Subtract($conv6_i$0, $conv6_i$1, $p0_sroa_0_0_load105118$0, $p0_sroa_0_0_load105118$1) | 0;
      $sub55$1 = tempRet0;
      $sub59$0 = _i64Subtract($conv18_i76$0, $conv18_i76$1, $p0_sroa_1_8_load86106117$0, $p0_sroa_1_8_load86106117$1) | 0;
      $mul$0 = ___muldi3($sub59$0, tempRet0, $sub55$0, $sub55$1) | 0;
      $mul$1 = tempRet0;
      $sub62$0 = _i64Subtract($conv18_i$0, $conv18_i$1, $p0_sroa_1_8_load86106117$0, $p0_sroa_1_8_load86106117$1) | 0;
      $div$0 = ___divdi3($mul$0, $mul$1, $sub62$0, tempRet0) | 0;
      $add$0 = _i64Add($div$0, tempRet0, $p0_sroa_0_0_load105118$0, $p0_sroa_0_0_load105118$1) | 0;
      $add$1 = tempRet0;
      if ((($add$1 | 0) > ($conv6_i70$1 | 0) | ($add$1 | 0) == ($conv6_i70$1 | 0) & $add$0 >>> 0 > $conv6_i70$0 >>> 0) & (($add$1 | 0) < ($conv6_i49$1 | 0) | ($add$1 | 0) == ($conv6_i49$1 | 0) & $add$0 >>> 0 < $conv6_i49$0 >>> 0)) {
       $retval_0 = 1;
       label = 3204;
       break L3464;
      }
     }
     $inc = $i_0119 + 1 | 0;
     if ($inc >>> 0 < $sub_ptr_div_i109 >>> 0) {
      $p0_sroa_1_8_load86106117$1 = $conv18_i$1;
      $p0_sroa_1_8_load86106117$0 = $conv18_i$0;
      $p0_sroa_0_0_load105118$1 = $conv6_i$1;
      $p0_sroa_0_0_load105118$0 = $conv6_i$0;
      $i_0119 = $inc;
     } else {
      break;
     }
    }
   }
  } while (0);
  $inc74 = $n_0129 + 1 | 0;
  if ($inc74 >>> 0 < (($0 - $1 | 0) / 12 & -1) >>> 0) {
   $n_0129 = $inc74;
  } else {
   $retval_0 = 0;
   label = 3206;
   break;
  }
 }
 if ((label | 0) == 3204) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else if ((label | 0) == 3206) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZN11SlicerLayerD2Ev($this) {
 $this = $this | 0;
 var $__begin__i_i_i = 0, $0 = 0, $__end__i_i_i_i_i_i = 0, $1 = 0, $2 = 0, $incdec_ptr_i_i_i_i_i_i = 0, $3 = 0, $4 = 0, $5 = 0, $__end__i_i_i_i_i_i_i_i_i = 0, $6 = 0, $11 = 0, $__begin__i_i_i1 = 0, $13 = 0, $__end__i_i_i_i_i_i3 = 0, $14 = 0, $15 = 0, $incdec_ptr_i_i_i_i_i_i6 = 0, $16 = 0, $17 = 0, $18 = 0, $__end__i_i_i_i_i_i_i_i_i12 = 0, $19 = 0, $24 = 0, $28 = 0, $__end__i_i_i_i_i_i29 = 0, $30 = 0;
 $__begin__i_i_i = $this + 36 | 0;
 $0 = HEAP32[$__begin__i_i_i >> 2] | 0;
 if (($0 | 0) != 0) {
  $__end__i_i_i_i_i_i = $this + 40 | 0;
  $1 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
  if (($0 | 0) == ($1 | 0)) {
   $11 = $0;
  } else {
   $2 = $1;
   while (1) {
    $incdec_ptr_i_i_i_i_i_i = $2 - 12 | 0;
    HEAP32[$__end__i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i;
    $3 = HEAP32[$incdec_ptr_i_i_i_i_i_i >> 2] | 0;
    $4 = $3;
    if (($3 | 0) == 0) {
     $5 = $incdec_ptr_i_i_i_i_i_i;
    } else {
     $__end__i_i_i_i_i_i_i_i_i = $2 - 12 + 4 | 0;
     $6 = HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] | 0;
     if (($3 | 0) != ($6 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] = $6 + ((($6 - 16 + (-$4 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($3);
     $5 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
    }
    if (($0 | 0) == ($5 | 0)) {
     break;
    } else {
     $2 = $5;
    }
   }
   $11 = HEAP32[$__begin__i_i_i >> 2] | 0;
  }
  __ZdlPv($11);
 }
 $__begin__i_i_i1 = $this + 24 | 0;
 $13 = HEAP32[$__begin__i_i_i1 >> 2] | 0;
 if (($13 | 0) != 0) {
  $__end__i_i_i_i_i_i3 = $this + 28 | 0;
  $14 = HEAP32[$__end__i_i_i_i_i_i3 >> 2] | 0;
  if (($13 | 0) == ($14 | 0)) {
   $24 = $13;
  } else {
   $15 = $14;
   while (1) {
    $incdec_ptr_i_i_i_i_i_i6 = $15 - 12 | 0;
    HEAP32[$__end__i_i_i_i_i_i3 >> 2] = $incdec_ptr_i_i_i_i_i_i6;
    $16 = HEAP32[$incdec_ptr_i_i_i_i_i_i6 >> 2] | 0;
    $17 = $16;
    if (($16 | 0) == 0) {
     $18 = $incdec_ptr_i_i_i_i_i_i6;
    } else {
     $__end__i_i_i_i_i_i_i_i_i12 = $15 - 12 + 4 | 0;
     $19 = HEAP32[$__end__i_i_i_i_i_i_i_i_i12 >> 2] | 0;
     if (($16 | 0) != ($19 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i_i12 >> 2] = $19 + ((($19 - 16 + (-$17 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($16);
     $18 = HEAP32[$__end__i_i_i_i_i_i3 >> 2] | 0;
    }
    if (($13 | 0) == ($18 | 0)) {
     break;
    } else {
     $15 = $18;
    }
   }
   $24 = HEAP32[$__begin__i_i_i1 >> 2] | 0;
  }
  __ZdlPv($24);
 }
 __ZNSt3__16__treeINS_4pairIiiEENS_19__map_value_compareIiiNS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE($this + 12 | 0, HEAP32[$this + 16 >> 2] | 0);
 $28 = HEAP32[$this >> 2] | 0;
 if (($28 | 0) == 0) {
  return;
 }
 $__end__i_i_i_i_i_i29 = $this + 4 | 0;
 $30 = HEAP32[$__end__i_i_i_i_i_i29 >> 2] | 0;
 if (($28 | 0) != ($30 | 0)) {
  HEAP32[$__end__i_i_i_i_i_i29 >> 2] = $30 + (((($30 - 40 + (-$28 | 0) | 0) >>> 0) / 40 >>> 0 ^ -1) * 40 & -1);
 }
 __ZdlPv($28);
 return;
}
function __ZNSt3__16__treeINS_4pairIiiEENS_19__map_value_compareIiiNS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (($__nd | 0) == 0) {
  return;
 } else {
  __ZNSt3__16__treeINS_4pairIiiEENS_19__map_value_compareIiiNS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_4pairIiiEENS_19__map_value_compareIiiNS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}
function __ZN15OptimizedVolumeD1Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $__end__i_i_i_i_i_i_i = 0, $2 = 0, $__begin__i_i_i = 0, $7 = 0, $__end__i_i_i_i_i_i = 0, $8 = 0, $9 = 0, $incdec_ptr_i_i_i_i_i_i = 0, $10 = 0, $11 = 0, $12 = 0, $__end__i_i_i_i_i_i_i_i_i_i_i = 0, $13 = 0, $18 = 0;
 $0 = HEAP32[$this + 16 >> 2] | 0;
 $1 = $0;
 if (($0 | 0) != 0) {
  $__end__i_i_i_i_i_i_i = $this + 20 | 0;
  $2 = HEAP32[$__end__i_i_i_i_i_i_i >> 2] | 0;
  if (($0 | 0) != ($2 | 0)) {
   HEAP32[$__end__i_i_i_i_i_i_i >> 2] = $2 + (((($2 - 24 + (-$1 | 0) | 0) >>> 0) / 24 >>> 0 ^ -1) * 24 & -1);
  }
  __ZdlPv($0);
 }
 $__begin__i_i_i = $this + 4 | 0;
 $7 = HEAP32[$__begin__i_i_i >> 2] | 0;
 if (($7 | 0) == 0) {
  return;
 }
 $__end__i_i_i_i_i_i = $this + 8 | 0;
 $8 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
 if (($7 | 0) == ($8 | 0)) {
  $18 = $7;
 } else {
  $9 = $8;
  while (1) {
   $incdec_ptr_i_i_i_i_i_i = $9 - 24 | 0;
   HEAP32[$__end__i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i;
   $10 = HEAP32[$9 - 24 + 12 >> 2] | 0;
   $11 = $10;
   if (($10 | 0) == 0) {
    $12 = $incdec_ptr_i_i_i_i_i_i;
   } else {
    $__end__i_i_i_i_i_i_i_i_i_i_i = $9 - 24 + 16 | 0;
    $13 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i >> 2] | 0;
    if (($10 | 0) != ($13 | 0)) {
     HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i >> 2] = $13 + ((($13 - 4 + (-$11 | 0) | 0) >>> 2 ^ -1) << 2);
    }
    __ZdlPv($10);
    $12 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
   }
   if (($7 | 0) == ($12 | 0)) {
    break;
   } else {
    $9 = $12;
   }
  }
  $18 = HEAP32[$__begin__i_i_i >> 2] | 0;
 }
 __ZdlPv($18);
 return;
}
function __ZN6SlicerC2EP15OptimizedVolumeiibb($this, $ov, $initial, $thickness, $keepNoneClosed, $extensiveStitching) {
 $this = $this | 0;
 $ov = $ov | 0;
 $initial = $initial | 0;
 $thickness = $thickness | 0;
 $keepNoneClosed = $keepNoneClosed | 0;
 $extensiveStitching = $extensiveStitching | 0;
 var $tv_i280 = 0, $tv_i = 0, $tv_i2_i = 0, $tv_i_i = 0, $s = 0, $ref_tmp_sroa_4 = 0, $ref_tmp90_sroa_4 = 0, $ref_tmp102_sroa_4 = 0, $ref_tmp114_sroa_4 = 0, $ref_tmp126_sroa_4 = 0, $ref_tmp138_sroa_4 = 0, $ref_tmp154 = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $model = 0, $1 = 0, $2 = 0, $4 = 0, $5 = 0, $add = 0, $8 = 0, $9 = 0, $sub_ptr_div_i_i = 0, $add_ptr_i = 0, $__end__i = 0, $10 = 0, $__begin__i = 0, $11 = 0, $__begin__i212 = 0, $13 = 0, $ref_tmp90_sroa_0_0__idx = 0, $ref_tmp90_sroa_1_8__idx302 = 0, $ref_tmp90_sroa_2_16__idx303 = 0, $ref_tmp90_sroa_3_24__idx304 = 0, $ref_tmp90_sroa_4_32__idx = 0, $ref_tmp90_sroa_4_32__cast = 0, $ref_tmp90_sroa_4_32_idx = 0, $ref_tmp114_sroa_4_32_idx = 0, $ref_tmp138_sroa_4_32_idx = 0, $ref_tmp126_sroa_4_32_idx = 0, $ref_tmp102_sroa_4_32_idx = 0, $addedToPolygon = 0, $ref_tmp_sroa_4_32_idx = 0, $14 = 0, $incdec_ptr_i_i_i_i = 0, $17 = 0, $18 = 0, $i_0416 = 0, $19 = 0, $20 = 0, $p0_sroa_0_0_copyload = 0, $p0_sroa_1_4_copyload = 0, $p0_sroa_2_8_copyload = 0, $21 = 0, $p1_sroa_0_0_copyload = 0, $p1_sroa_1_4_copyload = 0, $p1_sroa_2_8_copyload = 0, $22 = 0, $p2_sroa_0_0_copyload = 0, $p2_sroa_1_4_copyload = 0, $p2_sroa_2_8_copyload = 0, $_ = 0, $minZ_1 = 0, $_62 = 0, $div57 = 0, $div60 = 0, $conv_i72$0 = 0, $conv_i72$1 = 0, $sub_i74 = 0, $conv4_i75$0 = 0, $conv4_i75$1 = 0, $sub10_i81 = 0, $conv11_i82$0 = 0, $conv11_i82$1 = 0, $conv12_i87$0 = 0, $conv12_i87$1 = 0, $sub15_i89 = 0, $conv16_i90$0 = 0, $conv16_i90$1 = 0, $sub32_i96 = 0, $conv33_i97$0 = 0, $conv33_i97$1 = 0, $sub40_i100 = 0, $conv41_i101$0 = 0, $conv41_i101$1 = 0, $sub49_i106 = 0, $conv50_i107$0 = 0, $conv50_i107$1 = 0, $conv_i154$0 = 0, $conv_i154$1 = 0, $sub_i156 = 0, $conv4_i157$0 = 0, $conv4_i157$1 = 0, $sub10_i163 = 0, $conv11_i164$0 = 0, $conv11_i164$1 = 0, $conv12_i169$0 = 0, $conv12_i169$1 = 0, $sub15_i171 = 0, $conv16_i172$0 = 0, $conv16_i172$1 = 0, $sub32_i178 = 0, $conv33_i179$0 = 0, $conv33_i179$1 = 0, $sub40_i182 = 0, $conv41_i183$0 = 0, $conv41_i183$1 = 0, $sub49_i188 = 0, $conv50_i189$0 = 0, $conv50_i189$1 = 0, $conv_i240$0 = 0, $conv_i240$1 = 0, $sub_i242 = 0, $conv4_i243$0 = 0, $conv4_i243$1 = 0, $sub10_i249 = 0, $conv11_i250$0 = 0, $conv11_i250$1 = 0, $conv12_i255$0 = 0, $conv12_i255$1 = 0, $sub15_i257 = 0, $conv16_i258$0 = 0, $conv16_i258$1 = 0, $sub32_i264 = 0, $conv33_i265$0 = 0, $conv33_i265$1 = 0, $sub40_i268 = 0, $conv41_i269$0 = 0, $conv41_i269$1 = 0, $sub49_i274 = 0, $conv50_i275$0 = 0, $conv50_i275$1 = 0, $layerNr_0409 = 0, $add64 = 0, $cmp73 = 0, $cmp73_not = 0, $cmp75 = 0, $cmp78 = 0, $sub6_i = 0, $conv7_i$0 = 0, $conv7_i$1 = 0, $mul_i$0 = 0, $div_i$0 = 0, $add_i$0 = 0, $add_i$1 = 0, $mul20_i$0 = 0, $div25_i$0 = 0, $add26_i$0 = 0, $add26_i$1 = 0, $mul37_i$0 = 0, $div42_i$0 = 0, $add43_i$0 = 0, $add43_i$1 = 0, $mul54_i$0 = 0, $div59_i$0 = 0, $add60_i$0 = 0, $sub6_i77 = 0, $conv7_i78$0 = 0, $conv7_i78$1 = 0, $mul_i79$0 = 0, $div_i83$0 = 0, $add_i84$0 = 0, $add_i84$1 = 0, $mul20_i91$0 = 0, $div25_i92$0 = 0, $add26_i93$0 = 0, $add26_i93$1 = 0, $mul37_i98$0 = 0, $div42_i102$0 = 0, $add43_i103$0 = 0, $add43_i103$1 = 0, $mul54_i108$0 = 0, $div59_i109$0 = 0, $add60_i110$0 = 0, $cmp94_not = 0, $sub6_i118 = 0, $conv7_i119$0 = 0, $conv7_i119$1 = 0, $mul_i120$0 = 0, $div_i124$0 = 0, $add_i125$0 = 0, $add_i125$1 = 0, $mul20_i132$0 = 0, $div25_i133$0 = 0, $add26_i134$0 = 0, $add26_i134$1 = 0, $mul37_i139$0 = 0, $div42_i143$0 = 0, $add43_i144$0 = 0, $add43_i144$1 = 0, $mul54_i149$0 = 0, $div59_i150$0 = 0, $add60_i151$0 = 0, $sub6_i159 = 0, $conv7_i160$0 = 0, $conv7_i160$1 = 0, $mul_i161$0 = 0, $div_i165$0 = 0, $add_i166$0 = 0, $add_i166$1 = 0, $mul20_i173$0 = 0, $div25_i174$0 = 0, $add26_i175$0 = 0, $add26_i175$1 = 0, $mul37_i180$0 = 0, $div42_i184$0 = 0, $add43_i185$0 = 0, $add43_i185$1 = 0, $mul54_i190$0 = 0, $div59_i191$0 = 0, $add60_i192$0 = 0, $sub6_i200 = 0, $conv7_i201$0 = 0, $conv7_i201$1 = 0, $mul_i202$0 = 0, $div_i206$0 = 0, $add_i207$0 = 0, $add_i207$1 = 0, $mul20_i214$0 = 0, $div25_i215$0 = 0, $add26_i216$0 = 0, $add26_i216$1 = 0, $mul37_i221$0 = 0, $div42_i225$0 = 0, $add43_i226$0 = 0, $add43_i226$1 = 0, $mul54_i231$0 = 0, $div59_i232$0 = 0, $add60_i233$0 = 0, $sub6_i245 = 0, $conv7_i246$0 = 0, $conv7_i246$1 = 0, $mul_i247$0 = 0, $div_i251$0 = 0, $add_i252$0 = 0, $add_i252$1 = 0, $mul20_i259$0 = 0, $div25_i260$0 = 0, $add26_i261$0 = 0, $add26_i261$1 = 0, $mul37_i266$0 = 0, $div42_i270$0 = 0, $add43_i271$0 = 0, $add43_i271$1 = 0, $mul54_i276$0 = 0, $div59_i277$0 = 0, $add60_i278$0 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $__end__i240 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $inc163 = 0, $add_i286 = 0.0, $42 = 0, $43 = 0, $tv_sec_i = 0, $tv_usec_i = 0, $sub_ptr_div_i229404 = 0, $layerNr167_0403 = 0, $48 = 0, $52 = 0, $54 = 0, $55 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $tv_i280 = __stackBase__ | 0;
 $tv_i = __stackBase__ + 8 | 0;
 $tv_i2_i = __stackBase__ + 16 | 0;
 $tv_i_i = __stackBase__ + 24 | 0;
 $s = __stackBase__ + 32 | 0;
 $ref_tmp_sroa_4 = __stackBase__ + 72 | 0;
 $ref_tmp90_sroa_4 = __stackBase__ + 80 | 0;
 $ref_tmp102_sroa_4 = __stackBase__ + 88 | 0;
 $ref_tmp114_sroa_4 = __stackBase__ + 96 | 0;
 $ref_tmp126_sroa_4 = __stackBase__ + 104 | 0;
 $ref_tmp138_sroa_4 = __stackBase__ + 112 | 0;
 $ref_tmp154 = __stackBase__ + 120 | 0;
 $__begin__i_i_i = $this | 0;
 HEAP32[$__begin__i_i_i >> 2] = 0;
 $__end__i_i_i = $this + 4 | 0;
 HEAP32[$__end__i_i_i >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 $model = $ov | 0;
 $1 = $this + 12 | 0;
 $2 = (HEAP32[$model >> 2] | 0) + 12 | 0;
 HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$1 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 $4 = $this + 24 | 0;
 $5 = (HEAP32[$model >> 2] | 0) + 24 | 0;
 HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
 $add = (((HEAP32[$this + 20 >> 2] | 0) - $initial | 0) / ($thickness | 0) & -1) + 1 | 0;
 _fprintf(HEAP32[_stdout >> 2] | 0, 3280, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $add, tempInt) | 0) | 0;
 $8 = HEAP32[$__end__i_i_i >> 2] | 0;
 $9 = HEAP32[$__begin__i_i_i >> 2] | 0;
 $sub_ptr_div_i_i = ($8 - $9 | 0) / 48 & -1;
 do {
  if ($sub_ptr_div_i_i >>> 0 < $add >>> 0) {
   __ZNSt3__16vectorI11SlicerLayerNS_9allocatorIS1_EEE8__appendEj($this | 0, $add - $sub_ptr_div_i_i | 0);
  } else {
   if ($sub_ptr_div_i_i >>> 0 <= $add >>> 0) {
    break;
   }
   $add_ptr_i = $9 + ($add * 48 & -1) | 0;
   if (($add_ptr_i | 0) == ($8 | 0)) {
    break;
   } else {
    $14 = $8;
   }
   do {
    $incdec_ptr_i_i_i_i = $14 - 48 | 0;
    HEAP32[$__end__i_i_i >> 2] = $incdec_ptr_i_i_i_i;
    __ZN11SlicerLayerD2Ev($incdec_ptr_i_i_i_i);
    $14 = HEAP32[$__end__i_i_i >> 2] | 0;
   } while (($add_ptr_i | 0) != ($14 | 0));
  }
 } while (0);
 $__end__i = $ov + 20 | 0;
 $10 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i = $ov + 16 | 0;
 $11 = HEAP32[$__begin__i >> 2] | 0;
 if (($10 | 0) != ($11 | 0)) {
  $__begin__i212 = $ov + 4 | 0;
  $13 = $s;
  $ref_tmp90_sroa_0_0__idx = $s | 0;
  $ref_tmp90_sroa_1_8__idx302 = $s + 8 | 0;
  $ref_tmp90_sroa_2_16__idx303 = $s + 16 | 0;
  $ref_tmp90_sroa_3_24__idx304 = $s + 24 | 0;
  $ref_tmp90_sroa_4_32__idx = $s + 32 | 0;
  $ref_tmp90_sroa_4_32__cast = $ref_tmp90_sroa_4_32__idx;
  $ref_tmp90_sroa_4_32_idx = $ref_tmp90_sroa_4 | 0;
  $ref_tmp114_sroa_4_32_idx = $ref_tmp114_sroa_4 | 0;
  $ref_tmp138_sroa_4_32_idx = $ref_tmp138_sroa_4 | 0;
  $ref_tmp126_sroa_4_32_idx = $ref_tmp126_sroa_4 | 0;
  $ref_tmp102_sroa_4_32_idx = $ref_tmp102_sroa_4 | 0;
  $addedToPolygon = $s + 36 | 0;
  $ref_tmp_sroa_4_32_idx = $ref_tmp_sroa_4 | 0;
  $i_0416 = 0;
  $18 = $11;
  $17 = $10;
  while (1) {
   $19 = HEAP32[$18 + ($i_0416 * 24 & -1) >> 2] | 0;
   $20 = HEAP32[$__begin__i212 >> 2] | 0;
   $p0_sroa_0_0_copyload = HEAP32[$20 + ($19 * 24 & -1) >> 2] | 0;
   $p0_sroa_1_4_copyload = HEAP32[$20 + ($19 * 24 & -1) + 4 >> 2] | 0;
   $p0_sroa_2_8_copyload = HEAP32[$20 + ($19 * 24 & -1) + 8 >> 2] | 0;
   $21 = HEAP32[$18 + ($i_0416 * 24 & -1) + 4 >> 2] | 0;
   $p1_sroa_0_0_copyload = HEAP32[$20 + ($21 * 24 & -1) >> 2] | 0;
   $p1_sroa_1_4_copyload = HEAP32[$20 + ($21 * 24 & -1) + 4 >> 2] | 0;
   $p1_sroa_2_8_copyload = HEAP32[$20 + ($21 * 24 & -1) + 8 >> 2] | 0;
   $22 = HEAP32[$18 + ($i_0416 * 24 & -1) + 8 >> 2] | 0;
   $p2_sroa_0_0_copyload = HEAP32[$20 + ($22 * 24 & -1) >> 2] | 0;
   $p2_sroa_1_4_copyload = HEAP32[$20 + ($22 * 24 & -1) + 4 >> 2] | 0;
   $p2_sroa_2_8_copyload = HEAP32[$20 + ($22 * 24 & -1) + 8 >> 2] | 0;
   $_ = ($p1_sroa_2_8_copyload | 0) < ($p0_sroa_2_8_copyload | 0) ? $p1_sroa_2_8_copyload : $p0_sroa_2_8_copyload;
   $minZ_1 = ($p2_sroa_2_8_copyload | 0) < ($_ | 0) ? $p2_sroa_2_8_copyload : $_;
   $_62 = ($p1_sroa_2_8_copyload | 0) > ($p0_sroa_2_8_copyload | 0) ? $p1_sroa_2_8_copyload : $p0_sroa_2_8_copyload;
   $div57 = ($minZ_1 - $initial | 0) / ($thickness | 0) & -1;
   $div60 = ((($p2_sroa_2_8_copyload | 0) > ($_62 | 0) ? $p2_sroa_2_8_copyload : $_62) - $initial | 0) / ($thickness | 0) & -1;
   if (($div57 | 0) > ($div60 | 0)) {
    $38 = $17;
    $37 = $18;
   } else {
    $conv_i72$0 = $p0_sroa_0_0_copyload;
    $conv_i72$1 = ($p0_sroa_0_0_copyload | 0) < 0 ? -1 : 0;
    $sub_i74 = $p1_sroa_0_0_copyload - $p0_sroa_0_0_copyload | 0;
    $conv4_i75$0 = $sub_i74;
    $conv4_i75$1 = ($sub_i74 | 0) < 0 ? -1 : 0;
    $sub10_i81 = $p1_sroa_2_8_copyload - $p0_sroa_2_8_copyload | 0;
    $conv11_i82$0 = $sub10_i81;
    $conv11_i82$1 = ($sub10_i81 | 0) < 0 ? -1 : 0;
    $conv12_i87$0 = $p0_sroa_1_4_copyload;
    $conv12_i87$1 = ($p0_sroa_1_4_copyload | 0) < 0 ? -1 : 0;
    $sub15_i89 = $p1_sroa_1_4_copyload - $p0_sroa_1_4_copyload | 0;
    $conv16_i90$0 = $sub15_i89;
    $conv16_i90$1 = ($sub15_i89 | 0) < 0 ? -1 : 0;
    $sub32_i96 = $p2_sroa_0_0_copyload - $p0_sroa_0_0_copyload | 0;
    $conv33_i97$0 = $sub32_i96;
    $conv33_i97$1 = ($sub32_i96 | 0) < 0 ? -1 : 0;
    $sub40_i100 = $p2_sroa_2_8_copyload - $p0_sroa_2_8_copyload | 0;
    $conv41_i101$0 = $sub40_i100;
    $conv41_i101$1 = ($sub40_i100 | 0) < 0 ? -1 : 0;
    $sub49_i106 = $p2_sroa_1_4_copyload - $p0_sroa_1_4_copyload | 0;
    $conv50_i107$0 = $sub49_i106;
    $conv50_i107$1 = ($sub49_i106 | 0) < 0 ? -1 : 0;
    $conv_i154$0 = $p1_sroa_0_0_copyload;
    $conv_i154$1 = ($p1_sroa_0_0_copyload | 0) < 0 ? -1 : 0;
    $sub_i156 = $p2_sroa_0_0_copyload - $p1_sroa_0_0_copyload | 0;
    $conv4_i157$0 = $sub_i156;
    $conv4_i157$1 = ($sub_i156 | 0) < 0 ? -1 : 0;
    $sub10_i163 = $p2_sroa_2_8_copyload - $p1_sroa_2_8_copyload | 0;
    $conv11_i164$0 = $sub10_i163;
    $conv11_i164$1 = ($sub10_i163 | 0) < 0 ? -1 : 0;
    $conv12_i169$0 = $p1_sroa_1_4_copyload;
    $conv12_i169$1 = ($p1_sroa_1_4_copyload | 0) < 0 ? -1 : 0;
    $sub15_i171 = $p2_sroa_1_4_copyload - $p1_sroa_1_4_copyload | 0;
    $conv16_i172$0 = $sub15_i171;
    $conv16_i172$1 = ($sub15_i171 | 0) < 0 ? -1 : 0;
    $sub32_i178 = $p0_sroa_0_0_copyload - $p1_sroa_0_0_copyload | 0;
    $conv33_i179$0 = $sub32_i178;
    $conv33_i179$1 = ($sub32_i178 | 0) < 0 ? -1 : 0;
    $sub40_i182 = $p0_sroa_2_8_copyload - $p1_sroa_2_8_copyload | 0;
    $conv41_i183$0 = $sub40_i182;
    $conv41_i183$1 = ($sub40_i182 | 0) < 0 ? -1 : 0;
    $sub49_i188 = $p0_sroa_1_4_copyload - $p1_sroa_1_4_copyload | 0;
    $conv50_i189$0 = $sub49_i188;
    $conv50_i189$1 = ($sub49_i188 | 0) < 0 ? -1 : 0;
    $conv_i240$0 = $p2_sroa_0_0_copyload;
    $conv_i240$1 = ($p2_sroa_0_0_copyload | 0) < 0 ? -1 : 0;
    $sub_i242 = $p0_sroa_0_0_copyload - $p2_sroa_0_0_copyload | 0;
    $conv4_i243$0 = $sub_i242;
    $conv4_i243$1 = ($sub_i242 | 0) < 0 ? -1 : 0;
    $sub10_i249 = $p0_sroa_2_8_copyload - $p2_sroa_2_8_copyload | 0;
    $conv11_i250$0 = $sub10_i249;
    $conv11_i250$1 = ($sub10_i249 | 0) < 0 ? -1 : 0;
    $conv12_i255$0 = $p2_sroa_1_4_copyload;
    $conv12_i255$1 = ($p2_sroa_1_4_copyload | 0) < 0 ? -1 : 0;
    $sub15_i257 = $p0_sroa_1_4_copyload - $p2_sroa_1_4_copyload | 0;
    $conv16_i258$0 = $sub15_i257;
    $conv16_i258$1 = ($sub15_i257 | 0) < 0 ? -1 : 0;
    $sub32_i264 = $p1_sroa_0_0_copyload - $p2_sroa_0_0_copyload | 0;
    $conv33_i265$0 = $sub32_i264;
    $conv33_i265$1 = ($sub32_i264 | 0) < 0 ? -1 : 0;
    $sub40_i268 = $p1_sroa_2_8_copyload - $p2_sroa_2_8_copyload | 0;
    $conv41_i269$0 = $sub40_i268;
    $conv41_i269$1 = ($sub40_i268 | 0) < 0 ? -1 : 0;
    $sub49_i274 = $p1_sroa_1_4_copyload - $p2_sroa_1_4_copyload | 0;
    $conv50_i275$0 = $sub49_i274;
    $conv50_i275$1 = ($sub49_i274 | 0) < 0 ? -1 : 0;
    $layerNr_0409 = $div57;
    do {
     $add64 = (Math_imul($layerNr_0409, $thickness) | 0) + $initial | 0;
     L3559 : do {
      if (!(($add64 | 0) < ($minZ_1 | 0) | ($layerNr_0409 | 0) < 0)) {
       _memset($13 | 0, 0, 32);
       $cmp73 = ($p0_sroa_2_8_copyload | 0) < ($add64 | 0);
       $cmp73_not = $cmp73 ^ 1;
       $cmp75 = ($p1_sroa_2_8_copyload | 0) < ($add64 | 0);
       $cmp78 = ($p2_sroa_2_8_copyload | 0) < ($add64 | 0);
       do {
        if ($cmp75 | $cmp73_not | $cmp78) {
         if (($p0_sroa_2_8_copyload | 0) > ($add64 | 0) & $cmp75 & $cmp78) {
          $sub6_i77 = $add64 - $p0_sroa_2_8_copyload | 0;
          $conv7_i78$0 = $sub6_i77;
          $conv7_i78$1 = ($sub6_i77 | 0) < 0 ? -1 : 0;
          $mul_i79$0 = ___muldi3($conv7_i78$0, $conv7_i78$1, $conv4_i75$0, $conv4_i75$1) | 0;
          $div_i83$0 = ___divdi3($mul_i79$0, tempRet0, $conv11_i82$0, $conv11_i82$1) | 0;
          $add_i84$0 = _i64Add($div_i83$0, tempRet0, $conv_i72$0, $conv_i72$1) | 0;
          $add_i84$1 = tempRet0;
          $mul20_i91$0 = ___muldi3($conv7_i78$0, $conv7_i78$1, $conv16_i90$0, $conv16_i90$1) | 0;
          $div25_i92$0 = ___divdi3($mul20_i91$0, tempRet0, $conv11_i82$0, $conv11_i82$1) | 0;
          $add26_i93$0 = _i64Add($div25_i92$0, tempRet0, $conv12_i87$0, $conv12_i87$1) | 0;
          $add26_i93$1 = tempRet0;
          $mul37_i98$0 = ___muldi3($conv7_i78$0, $conv7_i78$1, $conv33_i97$0, $conv33_i97$1) | 0;
          $div42_i102$0 = ___divdi3($mul37_i98$0, tempRet0, $conv41_i101$0, $conv41_i101$1) | 0;
          $add43_i103$0 = _i64Add($div42_i102$0, tempRet0, $conv_i72$0, $conv_i72$1) | 0;
          $add43_i103$1 = tempRet0;
          $mul54_i108$0 = ___muldi3($conv7_i78$0, $conv7_i78$1, $conv50_i107$0, $conv50_i107$1) | 0;
          $div59_i109$0 = ___divdi3($mul54_i108$0, tempRet0, $conv41_i101$0, $conv41_i101$1) | 0;
          $add60_i110$0 = _i64Add($div59_i109$0, tempRet0, $conv12_i87$0, $conv12_i87$1) | 0;
          HEAP32[$ref_tmp90_sroa_0_0__idx >> 2] = $add_i84$0;
          HEAP32[$ref_tmp90_sroa_0_0__idx + 4 >> 2] = $add_i84$1;
          HEAP32[$ref_tmp90_sroa_1_8__idx302 >> 2] = $add26_i93$0;
          HEAP32[$ref_tmp90_sroa_1_8__idx302 + 4 >> 2] = $add26_i93$1;
          HEAP32[$ref_tmp90_sroa_2_16__idx303 >> 2] = $add43_i103$0;
          HEAP32[$ref_tmp90_sroa_2_16__idx303 + 4 >> 2] = $add43_i103$1;
          HEAP32[$ref_tmp90_sroa_3_24__idx304 >> 2] = $add60_i110$0;
          HEAP32[$ref_tmp90_sroa_3_24__idx304 + 4 >> 2] = tempRet0;
          HEAP32[$ref_tmp90_sroa_4_32__cast >> 2] = HEAP32[$ref_tmp90_sroa_4_32_idx >> 2];
          HEAP8[$ref_tmp90_sroa_4_32__cast + 4 | 0] = HEAP8[$ref_tmp90_sroa_4_32_idx + 4 | 0] | 0;
          break;
         }
         $cmp94_not = $cmp75 ^ 1;
         if (!($cmp73 | $cmp94_not | $cmp78)) {
          $sub6_i118 = $add64 - $p1_sroa_2_8_copyload | 0;
          $conv7_i119$0 = $sub6_i118;
          $conv7_i119$1 = ($sub6_i118 | 0) < 0 ? -1 : 0;
          $mul_i120$0 = ___muldi3($conv7_i119$0, $conv7_i119$1, $conv33_i179$0, $conv33_i179$1) | 0;
          $div_i124$0 = ___divdi3($mul_i120$0, tempRet0, $conv41_i183$0, $conv41_i183$1) | 0;
          $add_i125$0 = _i64Add($div_i124$0, tempRet0, $conv_i154$0, $conv_i154$1) | 0;
          $add_i125$1 = tempRet0;
          $mul20_i132$0 = ___muldi3($conv7_i119$0, $conv7_i119$1, $conv50_i189$0, $conv50_i189$1) | 0;
          $div25_i133$0 = ___divdi3($mul20_i132$0, tempRet0, $conv41_i183$0, $conv41_i183$1) | 0;
          $add26_i134$0 = _i64Add($div25_i133$0, tempRet0, $conv12_i169$0, $conv12_i169$1) | 0;
          $add26_i134$1 = tempRet0;
          $mul37_i139$0 = ___muldi3($conv7_i119$0, $conv7_i119$1, $conv4_i157$0, $conv4_i157$1) | 0;
          $div42_i143$0 = ___divdi3($mul37_i139$0, tempRet0, $conv11_i164$0, $conv11_i164$1) | 0;
          $add43_i144$0 = _i64Add($div42_i143$0, tempRet0, $conv_i154$0, $conv_i154$1) | 0;
          $add43_i144$1 = tempRet0;
          $mul54_i149$0 = ___muldi3($conv7_i119$0, $conv7_i119$1, $conv16_i172$0, $conv16_i172$1) | 0;
          $div59_i150$0 = ___divdi3($mul54_i149$0, tempRet0, $conv11_i164$0, $conv11_i164$1) | 0;
          $add60_i151$0 = _i64Add($div59_i150$0, tempRet0, $conv12_i169$0, $conv12_i169$1) | 0;
          HEAP32[$ref_tmp90_sroa_0_0__idx >> 2] = $add_i125$0;
          HEAP32[$ref_tmp90_sroa_0_0__idx + 4 >> 2] = $add_i125$1;
          HEAP32[$ref_tmp90_sroa_1_8__idx302 >> 2] = $add26_i134$0;
          HEAP32[$ref_tmp90_sroa_1_8__idx302 + 4 >> 2] = $add26_i134$1;
          HEAP32[$ref_tmp90_sroa_2_16__idx303 >> 2] = $add43_i144$0;
          HEAP32[$ref_tmp90_sroa_2_16__idx303 + 4 >> 2] = $add43_i144$1;
          HEAP32[$ref_tmp90_sroa_3_24__idx304 >> 2] = $add60_i151$0;
          HEAP32[$ref_tmp90_sroa_3_24__idx304 + 4 >> 2] = tempRet0;
          HEAP32[$ref_tmp90_sroa_4_32__cast >> 2] = HEAP32[$ref_tmp102_sroa_4_32_idx >> 2];
          HEAP8[$ref_tmp90_sroa_4_32__cast + 4 | 0] = HEAP8[$ref_tmp102_sroa_4_32_idx + 4 | 0] | 0;
          break;
         }
         if ($cmp73 & ($p1_sroa_2_8_copyload | 0) > ($add64 | 0) & $cmp78) {
          $sub6_i159 = $add64 - $p1_sroa_2_8_copyload | 0;
          $conv7_i160$0 = $sub6_i159;
          $conv7_i160$1 = ($sub6_i159 | 0) < 0 ? -1 : 0;
          $mul_i161$0 = ___muldi3($conv7_i160$0, $conv7_i160$1, $conv4_i157$0, $conv4_i157$1) | 0;
          $div_i165$0 = ___divdi3($mul_i161$0, tempRet0, $conv11_i164$0, $conv11_i164$1) | 0;
          $add_i166$0 = _i64Add($div_i165$0, tempRet0, $conv_i154$0, $conv_i154$1) | 0;
          $add_i166$1 = tempRet0;
          $mul20_i173$0 = ___muldi3($conv7_i160$0, $conv7_i160$1, $conv16_i172$0, $conv16_i172$1) | 0;
          $div25_i174$0 = ___divdi3($mul20_i173$0, tempRet0, $conv11_i164$0, $conv11_i164$1) | 0;
          $add26_i175$0 = _i64Add($div25_i174$0, tempRet0, $conv12_i169$0, $conv12_i169$1) | 0;
          $add26_i175$1 = tempRet0;
          $mul37_i180$0 = ___muldi3($conv7_i160$0, $conv7_i160$1, $conv33_i179$0, $conv33_i179$1) | 0;
          $div42_i184$0 = ___divdi3($mul37_i180$0, tempRet0, $conv41_i183$0, $conv41_i183$1) | 0;
          $add43_i185$0 = _i64Add($div42_i184$0, tempRet0, $conv_i154$0, $conv_i154$1) | 0;
          $add43_i185$1 = tempRet0;
          $mul54_i190$0 = ___muldi3($conv7_i160$0, $conv7_i160$1, $conv50_i189$0, $conv50_i189$1) | 0;
          $div59_i191$0 = ___divdi3($mul54_i190$0, tempRet0, $conv41_i183$0, $conv41_i183$1) | 0;
          $add60_i192$0 = _i64Add($div59_i191$0, tempRet0, $conv12_i169$0, $conv12_i169$1) | 0;
          HEAP32[$ref_tmp90_sroa_0_0__idx >> 2] = $add_i166$0;
          HEAP32[$ref_tmp90_sroa_0_0__idx + 4 >> 2] = $add_i166$1;
          HEAP32[$ref_tmp90_sroa_1_8__idx302 >> 2] = $add26_i175$0;
          HEAP32[$ref_tmp90_sroa_1_8__idx302 + 4 >> 2] = $add26_i175$1;
          HEAP32[$ref_tmp90_sroa_2_16__idx303 >> 2] = $add43_i185$0;
          HEAP32[$ref_tmp90_sroa_2_16__idx303 + 4 >> 2] = $add43_i185$1;
          HEAP32[$ref_tmp90_sroa_3_24__idx304 >> 2] = $add60_i192$0;
          HEAP32[$ref_tmp90_sroa_3_24__idx304 + 4 >> 2] = tempRet0;
          HEAP32[$ref_tmp90_sroa_4_32__cast >> 2] = HEAP32[$ref_tmp114_sroa_4_32_idx >> 2];
          HEAP8[$ref_tmp90_sroa_4_32__cast + 4 | 0] = HEAP8[$ref_tmp114_sroa_4_32_idx + 4 | 0] | 0;
          break;
         }
         if (!(($p2_sroa_2_8_copyload | 0) >= ($add64 | 0) | $cmp75 | $cmp73)) {
          $sub6_i200 = $add64 - $p2_sroa_2_8_copyload | 0;
          $conv7_i201$0 = $sub6_i200;
          $conv7_i201$1 = ($sub6_i200 | 0) < 0 ? -1 : 0;
          $mul_i202$0 = ___muldi3($conv7_i201$0, $conv7_i201$1, $conv33_i265$0, $conv33_i265$1) | 0;
          $div_i206$0 = ___divdi3($mul_i202$0, tempRet0, $conv41_i269$0, $conv41_i269$1) | 0;
          $add_i207$0 = _i64Add($div_i206$0, tempRet0, $conv_i240$0, $conv_i240$1) | 0;
          $add_i207$1 = tempRet0;
          $mul20_i214$0 = ___muldi3($conv7_i201$0, $conv7_i201$1, $conv50_i275$0, $conv50_i275$1) | 0;
          $div25_i215$0 = ___divdi3($mul20_i214$0, tempRet0, $conv41_i269$0, $conv41_i269$1) | 0;
          $add26_i216$0 = _i64Add($div25_i215$0, tempRet0, $conv12_i255$0, $conv12_i255$1) | 0;
          $add26_i216$1 = tempRet0;
          $mul37_i221$0 = ___muldi3($conv7_i201$0, $conv7_i201$1, $conv4_i243$0, $conv4_i243$1) | 0;
          $div42_i225$0 = ___divdi3($mul37_i221$0, tempRet0, $conv11_i250$0, $conv11_i250$1) | 0;
          $add43_i226$0 = _i64Add($div42_i225$0, tempRet0, $conv_i240$0, $conv_i240$1) | 0;
          $add43_i226$1 = tempRet0;
          $mul54_i231$0 = ___muldi3($conv7_i201$0, $conv7_i201$1, $conv16_i258$0, $conv16_i258$1) | 0;
          $div59_i232$0 = ___divdi3($mul54_i231$0, tempRet0, $conv11_i250$0, $conv11_i250$1) | 0;
          $add60_i233$0 = _i64Add($div59_i232$0, tempRet0, $conv12_i255$0, $conv12_i255$1) | 0;
          HEAP32[$ref_tmp90_sroa_0_0__idx >> 2] = $add_i207$0;
          HEAP32[$ref_tmp90_sroa_0_0__idx + 4 >> 2] = $add_i207$1;
          HEAP32[$ref_tmp90_sroa_1_8__idx302 >> 2] = $add26_i216$0;
          HEAP32[$ref_tmp90_sroa_1_8__idx302 + 4 >> 2] = $add26_i216$1;
          HEAP32[$ref_tmp90_sroa_2_16__idx303 >> 2] = $add43_i226$0;
          HEAP32[$ref_tmp90_sroa_2_16__idx303 + 4 >> 2] = $add43_i226$1;
          HEAP32[$ref_tmp90_sroa_3_24__idx304 >> 2] = $add60_i233$0;
          HEAP32[$ref_tmp90_sroa_3_24__idx304 + 4 >> 2] = tempRet0;
          HEAP32[$ref_tmp90_sroa_4_32__cast >> 2] = HEAP32[$ref_tmp126_sroa_4_32_idx >> 2];
          HEAP8[$ref_tmp90_sroa_4_32__cast + 4 | 0] = HEAP8[$ref_tmp126_sroa_4_32_idx + 4 | 0] | 0;
          break;
         }
         if (($p2_sroa_2_8_copyload | 0) <= ($add64 | 0) | $cmp94_not | $cmp73_not) {
          break L3559;
         }
         $sub6_i245 = $add64 - $p2_sroa_2_8_copyload | 0;
         $conv7_i246$0 = $sub6_i245;
         $conv7_i246$1 = ($sub6_i245 | 0) < 0 ? -1 : 0;
         $mul_i247$0 = ___muldi3($conv7_i246$0, $conv7_i246$1, $conv4_i243$0, $conv4_i243$1) | 0;
         $div_i251$0 = ___divdi3($mul_i247$0, tempRet0, $conv11_i250$0, $conv11_i250$1) | 0;
         $add_i252$0 = _i64Add($div_i251$0, tempRet0, $conv_i240$0, $conv_i240$1) | 0;
         $add_i252$1 = tempRet0;
         $mul20_i259$0 = ___muldi3($conv7_i246$0, $conv7_i246$1, $conv16_i258$0, $conv16_i258$1) | 0;
         $div25_i260$0 = ___divdi3($mul20_i259$0, tempRet0, $conv11_i250$0, $conv11_i250$1) | 0;
         $add26_i261$0 = _i64Add($div25_i260$0, tempRet0, $conv12_i255$0, $conv12_i255$1) | 0;
         $add26_i261$1 = tempRet0;
         $mul37_i266$0 = ___muldi3($conv7_i246$0, $conv7_i246$1, $conv33_i265$0, $conv33_i265$1) | 0;
         $div42_i270$0 = ___divdi3($mul37_i266$0, tempRet0, $conv41_i269$0, $conv41_i269$1) | 0;
         $add43_i271$0 = _i64Add($div42_i270$0, tempRet0, $conv_i240$0, $conv_i240$1) | 0;
         $add43_i271$1 = tempRet0;
         $mul54_i276$0 = ___muldi3($conv7_i246$0, $conv7_i246$1, $conv50_i275$0, $conv50_i275$1) | 0;
         $div59_i277$0 = ___divdi3($mul54_i276$0, tempRet0, $conv41_i269$0, $conv41_i269$1) | 0;
         $add60_i278$0 = _i64Add($div59_i277$0, tempRet0, $conv12_i255$0, $conv12_i255$1) | 0;
         HEAP32[$ref_tmp90_sroa_0_0__idx >> 2] = $add_i252$0;
         HEAP32[$ref_tmp90_sroa_0_0__idx + 4 >> 2] = $add_i252$1;
         HEAP32[$ref_tmp90_sroa_1_8__idx302 >> 2] = $add26_i261$0;
         HEAP32[$ref_tmp90_sroa_1_8__idx302 + 4 >> 2] = $add26_i261$1;
         HEAP32[$ref_tmp90_sroa_2_16__idx303 >> 2] = $add43_i271$0;
         HEAP32[$ref_tmp90_sroa_2_16__idx303 + 4 >> 2] = $add43_i271$1;
         HEAP32[$ref_tmp90_sroa_3_24__idx304 >> 2] = $add60_i278$0;
         HEAP32[$ref_tmp90_sroa_3_24__idx304 + 4 >> 2] = tempRet0;
         HEAP32[$ref_tmp90_sroa_4_32__cast >> 2] = HEAP32[$ref_tmp138_sroa_4_32_idx >> 2];
         HEAP8[$ref_tmp90_sroa_4_32__cast + 4 | 0] = HEAP8[$ref_tmp138_sroa_4_32_idx + 4 | 0] | 0;
        } else {
         $sub6_i = $add64 - $p0_sroa_2_8_copyload | 0;
         $conv7_i$0 = $sub6_i;
         $conv7_i$1 = ($sub6_i | 0) < 0 ? -1 : 0;
         $mul_i$0 = ___muldi3($conv7_i$0, $conv7_i$1, $conv33_i97$0, $conv33_i97$1) | 0;
         $div_i$0 = ___divdi3($mul_i$0, tempRet0, $conv41_i101$0, $conv41_i101$1) | 0;
         $add_i$0 = _i64Add($div_i$0, tempRet0, $conv_i72$0, $conv_i72$1) | 0;
         $add_i$1 = tempRet0;
         $mul20_i$0 = ___muldi3($conv7_i$0, $conv7_i$1, $conv50_i107$0, $conv50_i107$1) | 0;
         $div25_i$0 = ___divdi3($mul20_i$0, tempRet0, $conv41_i101$0, $conv41_i101$1) | 0;
         $add26_i$0 = _i64Add($div25_i$0, tempRet0, $conv12_i87$0, $conv12_i87$1) | 0;
         $add26_i$1 = tempRet0;
         $mul37_i$0 = ___muldi3($conv7_i$0, $conv7_i$1, $conv4_i75$0, $conv4_i75$1) | 0;
         $div42_i$0 = ___divdi3($mul37_i$0, tempRet0, $conv11_i82$0, $conv11_i82$1) | 0;
         $add43_i$0 = _i64Add($div42_i$0, tempRet0, $conv_i72$0, $conv_i72$1) | 0;
         $add43_i$1 = tempRet0;
         $mul54_i$0 = ___muldi3($conv7_i$0, $conv7_i$1, $conv16_i90$0, $conv16_i90$1) | 0;
         $div59_i$0 = ___divdi3($mul54_i$0, tempRet0, $conv11_i82$0, $conv11_i82$1) | 0;
         $add60_i$0 = _i64Add($div59_i$0, tempRet0, $conv12_i87$0, $conv12_i87$1) | 0;
         HEAP32[$ref_tmp90_sroa_0_0__idx >> 2] = $add_i$0;
         HEAP32[$ref_tmp90_sroa_0_0__idx + 4 >> 2] = $add_i$1;
         HEAP32[$ref_tmp90_sroa_1_8__idx302 >> 2] = $add26_i$0;
         HEAP32[$ref_tmp90_sroa_1_8__idx302 + 4 >> 2] = $add26_i$1;
         HEAP32[$ref_tmp90_sroa_2_16__idx303 >> 2] = $add43_i$0;
         HEAP32[$ref_tmp90_sroa_2_16__idx303 + 4 >> 2] = $add43_i$1;
         HEAP32[$ref_tmp90_sroa_3_24__idx304 >> 2] = $add60_i$0;
         HEAP32[$ref_tmp90_sroa_3_24__idx304 + 4 >> 2] = tempRet0;
         HEAP32[$ref_tmp90_sroa_4_32__cast >> 2] = HEAP32[$ref_tmp_sroa_4_32_idx >> 2];
         HEAP8[$ref_tmp90_sroa_4_32__cast + 4 | 0] = HEAP8[$ref_tmp_sroa_4_32_idx + 4 | 0] | 0;
        }
       } while (0);
       $29 = HEAP32[$__begin__i_i_i >> 2] | 0;
       $30 = HEAP32[$29 + ($layerNr_0409 * 48 & -1) + 4 >> 2] | 0;
       $31 = HEAP32[$29 + ($layerNr_0409 * 48 & -1) >> 2] | 0;
       HEAP32[$ref_tmp154 >> 2] = $i_0416;
       HEAP32[(__ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEixERS5_($29 + ($layerNr_0409 * 48 & -1) + 12 | 0, $ref_tmp154) | 0) >> 2] = ($30 - $31 | 0) / 40 & -1;
       HEAP32[$ref_tmp90_sroa_4_32__idx >> 2] = $i_0416;
       HEAP8[$addedToPolygon] = 0;
       $32 = HEAP32[$__begin__i_i_i >> 2] | 0;
       $__end__i240 = $32 + ($layerNr_0409 * 48 & -1) + 4 | 0;
       $33 = HEAP32[$__end__i240 >> 2] | 0;
       if (($33 | 0) == (HEAP32[$32 + ($layerNr_0409 * 48 & -1) + 8 >> 2] | 0)) {
        __ZNSt3__16vectorI13SlicerSegmentNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($32 + ($layerNr_0409 * 48 & -1) | 0, $s);
        break;
       }
       if (($33 | 0) == 0) {
        $36 = 0;
       } else {
        $35 = $33;
        HEAP32[$35 >> 2] = HEAP32[$13 >> 2];
        HEAP32[$35 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
        HEAP32[$35 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
        HEAP32[$35 + 12 >> 2] = HEAP32[$13 + 12 >> 2];
        HEAP32[$35 + 16 >> 2] = HEAP32[$13 + 16 >> 2];
        HEAP32[$35 + 20 >> 2] = HEAP32[$13 + 20 >> 2];
        HEAP32[$35 + 24 >> 2] = HEAP32[$13 + 24 >> 2];
        HEAP32[$35 + 28 >> 2] = HEAP32[$13 + 28 >> 2];
        HEAP32[$35 + 32 >> 2] = HEAP32[$13 + 32 >> 2];
        HEAP32[$35 + 36 >> 2] = HEAP32[$13 + 36 >> 2];
        $36 = HEAP32[$__end__i240 >> 2] | 0;
       }
       HEAP32[$__end__i240 >> 2] = $36 + 40;
      }
     } while (0);
     $layerNr_0409 = $layerNr_0409 + 1 | 0;
    } while (($layerNr_0409 | 0) <= ($div60 | 0));
    $38 = HEAP32[$__end__i >> 2] | 0;
    $37 = HEAP32[$__begin__i >> 2] | 0;
   }
   $inc163 = $i_0416 + 1 | 0;
   if ($inc163 >>> 0 < (($38 - $37 | 0) / 24 & -1) >>> 0) {
    $i_0416 = $inc163;
    $18 = $37;
    $17 = $38;
   } else {
    break;
   }
  }
 }
 _gettimeofday($tv_i280 | 0, 0) | 0;
 $add_i286 = +(HEAP32[$tv_i280 >> 2] | 0) + +(HEAP32[$tv_i280 + 4 >> 2] | 0) / 1.0e6;
 $42 = HEAP32[$__end__i_i_i >> 2] | 0;
 $43 = HEAP32[$__begin__i_i_i >> 2] | 0;
 if (($42 | 0) != ($43 | 0)) {
  $tv_sec_i = $tv_i | 0;
  $tv_usec_i = $tv_i + 4 | 0;
  $layerNr167_0403 = 0;
  $sub_ptr_div_i229404 = ($42 - $43 | 0) / 48 & -1;
  do {
   _gettimeofday($tv_i | 0, 0) | 0;
   if (+(HEAP32[$tv_sec_i >> 2] | 0) + +(HEAP32[$tv_usec_i >> 2] | 0) / 1.0e6 - $add_i286 > 2.0) {
    $48 = HEAP32[_stdout >> 2] | 0;
    _fprintf($48 | 0, 3240, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (($layerNr167_0403 * 100 & -1) >>> 0) / ($sub_ptr_div_i229404 >>> 0) >>> 0, tempInt) | 0) | 0;
   }
   __ZN11SlicerLayer12makePolygonsEP15OptimizedVolumebb((HEAP32[$__begin__i_i_i >> 2] | 0) + ($layerNr167_0403 * 48 & -1) | 0, $ov, $keepNoneClosed, $extensiveStitching);
   $layerNr167_0403 = $layerNr167_0403 + 1 | 0;
   $sub_ptr_div_i229404 = ((HEAP32[$__end__i_i_i >> 2] | 0) - (HEAP32[$__begin__i_i_i >> 2] | 0) | 0) / 48 & -1;
  } while ($layerNr167_0403 >>> 0 < $sub_ptr_div_i229404 >>> 0);
 }
 $52 = HEAP32[_stdout >> 2] | 0;
 _gettimeofday($tv_i_i | 0, 0) | 0;
 $54 = HEAP32[$tv_i_i >> 2] | 0;
 $55 = HEAP32[$tv_i_i + 4 >> 2] | 0;
 _gettimeofday($tv_i2_i | 0, 0) | 0;
 _fprintf($52 | 0, 3168, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = +($54 | 0) + +($55 | 0) / 1.0e6 - $add_i286, tempInt) | 0) | 0;
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEixERS5_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $__parent = 0, $__first__i_i_i_i_i = 0, $__left__i_i = 0, $0 = 0, $1 = 0, $__nd_0_in_i = 0, $2 = 0, $__left__i = 0, $3 = 0, $__right__i = 0, $4 = 0, $5 = 0, $__parent_0_load = 0, $retval_0_i = 0, $6 = 0, $call_i_i_i = 0, $__value__i33 = 0, $second_i = 0, $12 = 0, $__begin_node__i43_i = 0, $16 = 0, $18 = 0, $__first__i_i_i_i = 0, $__r_0 = 0, $second = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__parent = __stackBase__ | 0;
 $__first__i_i_i_i_i = $this + 4 | 0;
 $__left__i_i = $__first__i_i_i_i_i | 0;
 $0 = HEAP32[$__left__i_i >> 2] | 0;
 do {
  if (($0 | 0) == 0) {
   $5 = $__first__i_i_i_i_i;
   HEAP32[$__parent >> 2] = $5;
   $retval_0_i = $__left__i_i;
   $__parent_0_load = $5;
  } else {
   $1 = HEAP32[$__k >> 2] | 0;
   $__nd_0_in_i = $0;
   while (1) {
    $2 = HEAP32[$__nd_0_in_i + 16 >> 2] | 0;
    if (($1 | 0) < ($2 | 0)) {
     $__left__i = $__nd_0_in_i | 0;
     $3 = HEAP32[$__left__i >> 2] | 0;
     if (($3 | 0) == 0) {
      label = 3308;
      break;
     } else {
      $__nd_0_in_i = $3;
      continue;
     }
    }
    if (($2 | 0) >= ($1 | 0)) {
     label = 3312;
     break;
    }
    $__right__i = $__nd_0_in_i + 4 | 0;
    $4 = HEAP32[$__right__i >> 2] | 0;
    if (($4 | 0) == 0) {
     label = 3311;
     break;
    } else {
     $__nd_0_in_i = $4;
    }
   }
   if ((label | 0) == 3311) {
    HEAP32[$__parent >> 2] = $__nd_0_in_i;
    $retval_0_i = $__right__i;
    $__parent_0_load = $__nd_0_in_i;
    break;
   } else if ((label | 0) == 3308) {
    HEAP32[$__parent >> 2] = $__nd_0_in_i;
    $retval_0_i = $__left__i;
    $__parent_0_load = $__nd_0_in_i;
    break;
   } else if ((label | 0) == 3312) {
    HEAP32[$__parent >> 2] = $__nd_0_in_i;
    $retval_0_i = $__parent;
    $__parent_0_load = $__nd_0_in_i;
    break;
   }
  }
 } while (0);
 $6 = HEAP32[$retval_0_i >> 2] | 0;
 if (($6 | 0) != 0) {
  $__r_0 = $6;
  $second = $__r_0 + 20 | 0;
  STACKTOP = __stackBase__;
  return $second | 0;
 }
 $call_i_i_i = __Znwj(24) | 0;
 $__value__i33 = $call_i_i_i + 16 | 0;
 if (($__value__i33 | 0) != 0) {
  HEAP32[$__value__i33 >> 2] = HEAP32[$__k >> 2];
 }
 $second_i = $call_i_i_i + 20 | 0;
 if (($second_i | 0) != 0) {
  HEAP32[$second_i >> 2] = 0;
 }
 $12 = $call_i_i_i;
 HEAP32[$call_i_i_i >> 2] = 0;
 HEAP32[$call_i_i_i + 4 >> 2] = 0;
 HEAP32[$call_i_i_i + 8 >> 2] = $__parent_0_load;
 HEAP32[$retval_0_i >> 2] = $12;
 $__begin_node__i43_i = $this | 0;
 $16 = HEAP32[HEAP32[$__begin_node__i43_i >> 2] >> 2] | 0;
 if (($16 | 0) == 0) {
  $18 = $12;
 } else {
  HEAP32[$__begin_node__i43_i >> 2] = $16;
  $18 = HEAP32[$retval_0_i >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $18);
 $__first__i_i_i_i = $this + 8 | 0;
 HEAP32[$__first__i_i_i_i >> 2] = (HEAP32[$__first__i_i_i_i >> 2] | 0) + 1;
 $__r_0 = $call_i_i_i;
 $second = $__r_0 + 20 | 0;
 STACKTOP = __stackBase__;
 return $second | 0;
}
function __ZN11SlicerLayer12makePolygonsEP15OptimizedVolumebb($this, $ov, $keepNoneClosed, $extensiveStitching) {
 $this = $this | 0;
 $ov = $ov | 0;
 $keepNoneClosed = $keepNoneClosed | 0;
 $extensiveStitching = $extensiveStitching | 0;
 var $poly = 0, $p0 = 0, $res = 0, $agg_tmp316 = 0, $agg_tmp320 = 0, $res351 = 0, $agg_tmp352 = 0, $agg_tmp356 = 0, $ref_tmp399 = 0, $poly502 = 0, $__end__i = 0, $__begin__i = 0, $1 = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $__first__i_i_i_i_i_i = 0, $3 = 0, $__begin__i938 = 0, $faceToSegmentIndex = 0, $__first__i_i_i_i_i292 = 0, $4 = 0, $__left__i_i = 0, $p0_idx = 0, $p0_idx285 = 0, $__end__i1144 = 0, $__first__i_i_i_i1149 = 0, $polygonList = 0, $__end__i1179 = 0, $__first__i_i_i_i1184 = 0, $openPolygonList = 0, $8 = 0, $startSegment_0836 = 0, $segmentIndex_0 = 0, $13 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $i_0776 = 0, $nextIndex_0775 = 0, $canClose_0_off0774 = 0, $arrayidx = 0, $20 = 0, $21 = 0, $__result_addr_0_ph11_i_i = 0, $__root_addr_0_ph10_i_in_i = 0, $__root_addr_06_i_in_i = 0, $__root_addr_06_i_i = 0, $24 = 0, $26 = 0, $__result_addr_0_ph8_i_i = 0, $28 = 0, $29 = 0, $p1_sroa_0_0__idx = 0, $p1_sroa_1_8__idx551 = 0, $p1_sroa_1_8_copyload$0 = 0, $p1_sroa_1_8_copyload$1 = 0, $p0_idx285_val$0 = 0, $p0_idx285_val$1 = 0, $sub_i$0 = 0, $sub_i$1 = 0, $sub3_i$0 = 0, $sub3_i$1 = 0, $sub_i_off$0 = 0, $sub_i_off$1 = 0, $$etemp$9$1 = 0, $sub3_i_off$0 = 0, $sub3_i_off$1 = 0, $$etemp$11$1 = 0, $mul_i_i$0 = 0, $mul_i_i$1 = 0, $mul3_i_i$0 = 0, $add_i_i$0 = 0, $add_i_i$1 = 0, $$etemp$12$1 = 0, $_canClose_0_off0 = 0, $42 = 0, $canClose_2_off0 = 0, $nextIndex_1 = 0, $inc = 0, $47 = 0, $__begin__i_i = 0, $__end__i_i = 0, $__first__i_i_i_i_i313 = 0, $sub_ptr_sub_i_i = 0, $sub_ptr_div_i_i = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $__first_addr_04_i_i = 0, $55 = 0, $56 = 0, $57 = 0, $66 = 0, $__begin__i_i321 = 0, $__end__i_i322 = 0, $__first__i_i_i_i_i323 = 0, $sub_ptr_sub_i_i328 = 0, $sub_ptr_div_i_i329 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $__first_addr_04_i_i340 = 0, $74 = 0, $75 = 0, $76 = 0, $85 = 0, $87 = 0, $inc83 = 0, $92 = 0, $93 = 0, $__end__i1246 = 0, $94 = 0, $__begin__i1247 = 0, $95 = 0, $__end__i3197_pre = 0, $__first__i_i_i_i3202_pre = 0, $polygonList243_pre = 0, $_pre9901009 = 0, $97 = 0, $98 = 0, $99 = 0, $indvars_iv925 = 0, $indvars_iv = 0, $100 = 0, $i86_0757 = 0, $add_ptr_i_i2158_sum = 0, $104 = 0, $105 = 0, $j_0743 = 0, $107 = 0, $108 = 0, $109 = 0, $sub = 0, $arrayidx_i1801_idx = 0, $arrayidx_i1801_idx282 = 0, $arrayidx_i1801_idx282_val$0 = 0, $arrayidx_i1801_idx282_val$1 = 0, $_idx283 = 0, $_idx284 = 0, $_idx284_val$0 = 0, $_idx284_val$1 = 0, $sub_i378$0 = 0, $sub_i378$1 = 0, $sub3_i379$0 = 0, $sub3_i379$1 = 0, $mul_i$0 = 0, $mul_i$1 = 0, $mul3_i$0 = 0, $add_i$0 = 0, $add_i$1 = 0, $$etemp$21$1 = 0, $arrayidx_i2104 = 0, $110 = 0, $112 = 0, $113 = 0, $add_ptr_i_i2158 = 0, $add_ptr_i2351 = 0, $114 = 0, $117 = 0, $__first_addr_i_i_i2308_0734 = 0, $__result_addr_i_i_i2310_0733 = 0, $incdec_ptr_i_i_i2365 = 0, $120 = 0, $__result_addr_i_i_i2310_0_lcssa = 0, $121 = 0, $incdec_ptr_i_i_i_i2382 = 0, $122 = 0, $123 = 0, $124 = 0, $__end__i_i_i_i_i_i384 = 0, $125 = 0, $130 = 0, $131 = 0, $132 = 0, $n_0728 = 0, $arrayidx_i2478 = 0, $__end__i2527 = 0, $134 = 0, $135 = 0, $136 = 0, $inc145 = 0, $137 = 0, $__end__i2397 = 0, $138 = 0, $139 = 0, $142 = 0, $inc152 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $inc155 = 0, $_pre9901008 = 0, $147 = 0, $bestScore_0$0 = 0, $bestScore_0$1 = 0, $bestA_0 = 0, $bestB_0 = 0, $reversed_0_off0 = 0, $i164_0 = 0, $sub_ptr_div_i2718 = 0, $148 = 0, $149 = 0, $j177_0715 = 0, $reversed_1_off0714 = 0, $bestB_1713 = 0, $bestA_1712 = 0, $bestScore_1711$0 = 0, $bestScore_1711$1 = 0, $151 = 0, $152 = 0, $sub196 = 0, $arrayidx_i3221_idx = 0, $arrayidx_i3221_idx_val$0 = 0, $arrayidx_i3221_idx_val$1 = 0, $arrayidx_i3221_idx280 = 0, $arrayidx_i3221_idx280_val$0 = 0, $arrayidx_i3221_idx280_val$1 = 0, $_idx = 0, $_idx281 = 0, $_idx281_val$0 = 0, $_idx281_val$1 = 0, $sub_i395$0 = 0, $sub_i395$1 = 0, $sub3_i396$0 = 0, $sub3_i396$1 = 0, $mul_i399$0 = 0, $mul_i399$1 = 0, $mul3_i400$0 = 0, $add_i401$0 = 0, $add_i401$1 = 0, $cmp204 = 0, $call203_bestScore_1$0 = 0, $call203_bestScore_1$1 = 0, $i164_0_bestA_1 = 0, $j177_0_bestB_1 = 0, $_reversed_1_off0 = 0, $sub223 = 0, $arrayidx_i3246_idx = 0, $arrayidx_i3246_idx279 = 0, $arrayidx_i3246_idx279_val$0 = 0, $arrayidx_i3246_idx279_val$1 = 0, $sub_i402$0 = 0, $sub_i402$1 = 0, $sub3_i403$0 = 0, $sub3_i403$1 = 0, $mul_i409$0 = 0, $mul_i409$1 = 0, $mul3_i410$0 = 0, $add_i411$0 = 0, $add_i411$1 = 0, $cmp228 = 0, $bestScore_3$0 = 0, $bestScore_3$1 = 0, $bestA_3 = 0, $bestB_3 = 0, $reversed_3_off0 = 0, $inc233 = 0, $bestScore_4$0 = 0, $bestScore_4$1 = 0, $bestA_4 = 0, $bestB_4 = 0, $reversed_4_off0 = 0, $_pre = 0, $bestScore_0_be$0 = 0, $bestScore_0_be$1 = 0, $bestA_0_be = 0, $bestB_0_be = 0, $reversed_0_off0_be = 0, $i164_0_be = 0, $$etemp$34$1 = 0, $arrayidx_i3231 = 0, $153 = 0, $155 = 0, $156 = 0, $add_ptr_i_i3170 = 0, $add_ptr_i3094 = 0, $157 = 0, $161 = 0, $__first_addr_i_i_i3051_0702 = 0, $__result_addr_i_i_i3053_0701 = 0, $incdec_ptr_i_i_i3108 = 0, $164 = 0, $__result_addr_i_i_i3053_0_lcssa = 0, $165 = 0, $incdec_ptr_i_i_i_i3125 = 0, $166 = 0, $167 = 0, $168 = 0, $__end__i_i_i_i_i_i431 = 0, $169 = 0, $174 = 0, $175 = 0, $n256_0696 = 0, $176 = 0, $n256_0698 = 0, $arrayidx_i3013 = 0, $__end__i2981 = 0, $178 = 0, $180 = 0, $181 = 0, $182 = 0, $n256_0 = 0, $_pre1010 = 0, $183 = 0, $184 = 0, $n273_0694 = 0, $arrayidx_i2944 = 0, $__end__i2915 = 0, $185 = 0, $187 = 0, $188 = 0, $189 = 0, $inc286 = 0, $190 = 0, $192 = 0, $193 = 0, $194 = 0, $__end__i_i_i_i2883 = 0, $195 = 0, $199 = 0, $200 = 0, $len328 = 0, $bestResult_sroa_1_8__idx68 = 0, $bestResult_sroa_2_12__idx75 = 0, $bestResult_sroa_3_16__idx82 = 0, $bestResult_sroa_4_20__idx85 = 0, $201 = 0, $202 = 0, $len364 = 0, $bestResult_sroa_1_8__idx67 = 0, $bestResult_sroa_2_12__idx74 = 0, $bestResult_sroa_3_16__idx81 = 0, $bestResult_sroa_4_20__idx = 0, $__begin__i2624 = 0, $__begin__i_i_i2613 = 0, $__end__i_i_i2614 = 0, $__first__i_i_i_i_i_i2620 = 0, $__begin__i_i_i1829 = 0, $__end__i_i_i1830 = 0, $__first__i_i_i_i_i_i1836 = 0, $__begin__i1810 = 0, $203 = 0, $204 = 0, $206 = 0, $207 = 0, $bestA298_0 = 0, $bestB300_0 = 0, $bestResult_sroa_4_1_off0 = 0, $bestResult_sroa_3_0 = 0, $bestResult_sroa_2_1 = 0, $bestResult_sroa_1_0 = 0, $bestResult_sroa_0_0$0 = 0, $bestResult_sroa_0_0$1 = 0, $i303_0 = 0, $__end__i2834 = 0, $__begin__i2835 = 0, $209 = 0, $210 = 0, $212 = 0, $213 = 0, $214$0 = 0, $214$1 = 0, $$etemp$37$1 = 0, $bestA298_2_ph = 0, $bestB300_2_ph = 0, $bestResult_sroa_4_3_off0_ph = 0, $bestResult_sroa_3_2_ph = 0, $bestResult_sroa_2_3_ph = 0, $bestResult_sroa_1_2_ph = 0, $bestResult_sroa_0_2_ph$0 = 0, $bestResult_sroa_0_2_ph$1 = 0, $217 = 0, $219 = 0, $j337_0657 = 0, $bestResult_sroa_0_2656$0 = 0, $bestResult_sroa_0_2656$1 = 0, $bestResult_sroa_1_2655 = 0, $bestResult_sroa_2_3654 = 0, $bestResult_sroa_3_2653 = 0, $bestResult_sroa_4_3_off0652 = 0, $bestB300_2651 = 0, $bestA298_2650 = 0, $220 = 0, $221 = 0, $223 = 0, $224 = 0, $225$0 = 0, $225$1 = 0, $$etemp$40$1 = 0, $bestA298_3 = 0, $bestB300_3 = 0, $bestResult_sroa_4_4_off0 = 0, $bestResult_sroa_3_3 = 0, $bestResult_sroa_2_4 = 0, $bestResult_sroa_1_3 = 0, $bestResult_sroa_0_3$0 = 0, $bestResult_sroa_0_3$1 = 0, $inc373 = 0, $228 = 0, $bestA298_4 = 0, $bestB300_4 = 0, $bestResult_sroa_4_5_off0 = 0, $bestResult_sroa_3_4 = 0, $bestResult_sroa_2_5 = 0, $bestResult_sroa_1_4 = 0, $bestResult_sroa_0_4$0 = 0, $bestResult_sroa_0_4$1 = 0, $bestA298_0_be = 0, $bestB300_0_be = 0, $bestResult_sroa_4_1_off0_be = 0, $bestResult_sroa_3_0_be = 0, $bestResult_sroa_2_1_be = 0, $bestResult_sroa_1_0_be = 0, $bestResult_sroa_0_0_be$0 = 0, $bestResult_sroa_0_0_be$1 = 0, $i303_0_be = 0, $cmp384 = 0, $arrayidx_i2728 = 0, $229 = 0, $231 = 0, $232 = 0, $233 = 0, $__end__i_i_i_i2659 = 0, $234 = 0, $238 = 0, $sub_ptr_div_i2628 = 0, $_pre1000 = 0, $243 = 0, $_pre968 = 0, $248 = 0, $249 = 0, $j404_0637 = 0, $arrayidx_i2463 = 0, $__end__i2434 = 0, $250 = 0, $252 = 0, $253 = 0, $254 = 0, $267 = 0, $268 = 0, $269 = 0, $j423_0638 = 0, $270 = 0, $j423_0640 = 0, $271 = 0, $arrayidx_i2270 = 0, $__end__i2234 = 0, $272 = 0, $274 = 0, $275 = 0, $276 = 0, $_pre1001 = 0, $277 = 0, $278 = 0, $279 = 0, $arrayidx_i2163 = 0, $284 = 0, $_pre972 = 0, $285 = 0, $286 = 0, $j450_0633 = 0, $arrayidx_i2056 = 0, $__end__i2027 = 0, $287 = 0, $289 = 0, $290 = 0, $291 = 0, $295 = 0, $296 = 0, $__end__i_i_i_i1982 = 0, $297 = 0, $302 = 0, $303 = 0, $304 = 0, $n480_0627 = 0, $arrayidx_i1928 = 0, $__end__i1899 = 0, $305 = 0, $307 = 0, $308 = 0, $309 = 0, $__end__i1941 = 0, $311 = 0, $315 = 0, $316 = 0, $317 = 0, $n504_0598 = 0, $arrayidx_i1806 = 0, $318 = 0, $319 = 0, $320 = 0, $322 = 0, $rem525 = 0, $_pre975 = 0, $_pre976 = 0, $n528_0602 = 0, $332 = 0, $n528_0604 = 0, $333 = 0, $arrayidx_i1728 = 0, $__end__i1698 = 0, $334 = 0, $336 = 0, $337 = 0, $338 = 0, $n528_0 = 0, $339 = 0, $341 = 0, $342 = 0, $343 = 0, $n544_0615 = 0, $arrayidx_i1661 = 0, $__end__i1631 = 0, $344 = 0, $346 = 0, $347 = 0, $348 = 0, $__end__i1674 = 0, $350 = 0, $354 = 0, $356 = 0, $361 = 0, $362 = 0, $n570_0586 = 0, $arrayidx_i1550 = 0, $__end__i1521 = 0, $363 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $373 = 0, $n591_0590 = 0, $374 = 0, $375 = 0, $n591_0593 = 0, $arrayidx_i1471 = 0, $__end__i1439 = 0, $376 = 0, $378 = 0, $379 = 0, $380 = 0, $n591_0 = 0, $381 = 0, $382 = 0, $_lcssa589 = 0, $_lcssa588 = 0, $__end__i_i_i_i1408 = 0, $383 = 0, $386 = 0, $387 = 0, $i618_0583 = 0, $q_0582 = 0, $389 = 0, $390 = 0, $X = 0, $conv637 = 0.0, $Y = 0, $conv642 = 0.0, $393 = 0, $395 = 0, $sub649 = 0, $X651 = 0, $conv653 = 0.0, $Y661 = 0, $conv663 = 0.0, $398 = 0, $399 = 0, $q_1 = 0, $inc666 = 0, $400 = 0, $401 = 0, $403 = 0, $406 = 0, $409 = 0, $411 = 0, $412 = 0, $413 = 0, $__first_addr_i_i_i980_0570 = 0, $416 = 0, $__first_addr_i_i_i980_0574 = 0, $__result_addr_i_i_i982_0572 = 0, $__first_addr_i_i_i980_0 = 0, $419 = 0, $__result_addr_i_i_i982_0_lcssa = 0, $420 = 0, $incdec_ptr_i_i_i_i1054 = 0, $421 = 0, $422 = 0, $423 = 0, $__end__i_i_i_i_i_i540 = 0, $424 = 0, $429 = 0, $__begin__i889 = 0, $430 = 0, $432 = 0, $incdec_ptr_i_i_i_i928 = 0, $433 = 0, $434 = 0, $435 = 0, $__end__i_i_i_i_i_i418 = 0, $436 = 0, $441 = 0, $442 = 0, $443 = 0, $i694_0567 = 0, $445 = 0, $sub_ptr_div_i880 = 0, $length_0 = 0, $n702_0 = 0, $sub715 = 0, $arrayidx_i867_idx = 0, $arrayidx_i867_idx276 = 0, $arrayidx_i867_idx276_val$0 = 0, $arrayidx_i867_idx276_val$1 = 0, $arrayidx_i857_idx = 0, $arrayidx_i857_idx277 = 0, $arrayidx_i857_idx277_val$0 = 0, $arrayidx_i857_idx277_val$1 = 0, $sub_i412$0 = 0, $sub_i412$1 = 0, $sub3_i413$0 = 0, $sub3_i413$1 = 0, $mul_i_i406$0 = 0, $mul_i_i406$1 = 0, $mul3_i_i407$0 = 0, $add_i_i408$0 = 0, $add718 = 0, $add_ptr_i_i = 0, $add_ptr_i = 0, $449 = 0, $__first_addr_i_i_i_0560 = 0, $__result_addr_i_i_i_0559 = 0, $incdec_ptr_i_i_i = 0, $452 = 0, $__result_addr_i_i_i_0_lcssa = 0, $453 = 0, $incdec_ptr_i_i_i_i = 0, $454 = 0, $455 = 0, $456 = 0, $__end__i_i_i_i_i_i = 0, $457 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $i694_1 = 0, $inc736 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $poly = __stackBase__ | 0;
 $p0 = __stackBase__ + 16 | 0;
 $res = __stackBase__ + 32 | 0;
 $agg_tmp316 = __stackBase__ + 56 | 0;
 $agg_tmp320 = __stackBase__ + 72 | 0;
 $res351 = __stackBase__ + 88 | 0;
 $agg_tmp352 = __stackBase__ + 112 | 0;
 $agg_tmp356 = __stackBase__ + 128 | 0;
 $ref_tmp399 = __stackBase__ + 144 | 0;
 $poly502 = __stackBase__ + 160 | 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $1 = HEAP32[$__begin__i >> 2] | 0;
 do {
  if ((HEAP32[$__end__i >> 2] | 0) != ($1 | 0)) {
   $__begin__i_i_i = $poly | 0;
   $__end__i_i_i = $poly + 4 | 0;
   $__first__i_i_i_i_i_i = $poly + 8 | 0;
   $3 = $p0;
   $__begin__i938 = $ov + 16 | 0;
   $faceToSegmentIndex = $this + 12 | 0;
   $__first__i_i_i_i_i292 = $this + 16 | 0;
   $4 = $__first__i_i_i_i_i292;
   $__left__i_i = $__first__i_i_i_i_i292 | 0;
   $p0_idx = $p0 | 0;
   $p0_idx285 = $p0 + 8 | 0;
   $__end__i1144 = $this + 28 | 0;
   $__first__i_i_i_i1149 = $this + 32 | 0;
   $polygonList = $this + 24 | 0;
   $__end__i1179 = $this + 40 | 0;
   $__first__i_i_i_i1184 = $this + 44 | 0;
   $openPolygonList = $this + 36 | 0;
   $startSegment_0836 = 0;
   $8 = $1;
   L3633 : while (1) {
    do {
     if ((HEAP8[$8 + ($startSegment_0836 * 40 & -1) + 36 | 0] & 1) == 0) {
      HEAP32[$__begin__i_i_i >> 2] = 0;
      HEAP32[$__end__i_i_i >> 2] = 0;
      HEAP32[$__first__i_i_i_i_i_i >> 2] = 0;
      __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($poly, $8 + ($startSegment_0836 * 40 & -1) | 0);
      $segmentIndex_0 = $startSegment_0836;
      while (1) {
       HEAP8[(HEAP32[$__begin__i >> 2] | 0) + ($segmentIndex_0 * 40 & -1) + 36 | 0] = 1;
       $13 = (HEAP32[$__begin__i >> 2] | 0) + ($segmentIndex_0 * 40 & -1) + 16 | 0;
       HEAP32[$3 >> 2] = HEAP32[$13 >> 2];
       HEAP32[$3 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
       HEAP32[$3 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
       HEAP32[$3 + 12 >> 2] = HEAP32[$13 + 12 >> 2];
       $14 = HEAP32[$__end__i_i_i >> 2] | 0;
       if (($14 | 0) == (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0)) {
        __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($poly, $p0);
       } else {
        if (($14 | 0) != 0) {
         $16 = $14;
         HEAP32[$16 >> 2] = HEAP32[$3 >> 2];
         HEAP32[$16 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
         HEAP32[$16 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
         HEAP32[$16 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
        }
        HEAP32[$__end__i_i_i >> 2] = $14 + 16;
       }
       $18 = HEAP32[(HEAP32[$__begin__i >> 2] | 0) + ($segmentIndex_0 * 40 & -1) + 32 >> 2] | 0;
       $19 = HEAP32[$__begin__i938 >> 2] | 0;
       $canClose_0_off0774 = 0;
       $nextIndex_0775 = -1;
       $i_0776 = 0;
       while (1) {
        $arrayidx = $19 + ($18 * 24 & -1) + 12 + ($i_0776 << 2) | 0;
        $20 = HEAP32[$arrayidx >> 2] | 0;
        do {
         if (($20 | 0) > -1) {
          $21 = HEAP32[$__left__i_i >> 2] | 0;
          if (($21 | 0) == 0) {
           $nextIndex_1 = $nextIndex_0775;
           $canClose_2_off0 = $canClose_0_off0774;
           break;
          } else {
           $__root_addr_0_ph10_i_in_i = $21;
           $__result_addr_0_ph11_i_i = $4;
          }
          L3650 : while (1) {
           $__root_addr_06_i_in_i = $__root_addr_0_ph10_i_in_i;
           while (1) {
            $__root_addr_06_i_i = $__root_addr_06_i_in_i;
            if ((HEAP32[$__root_addr_06_i_in_i + 16 >> 2] | 0) >= ($20 | 0)) {
             break;
            }
            $26 = HEAP32[$__root_addr_06_i_in_i + 4 >> 2] | 0;
            if (($26 | 0) == 0) {
             $__result_addr_0_ph8_i_i = $__result_addr_0_ph11_i_i;
             break L3650;
            } else {
             $__root_addr_06_i_in_i = $26;
            }
           }
           $24 = HEAP32[$__root_addr_06_i_in_i >> 2] | 0;
           if (($24 | 0) == 0) {
            $__result_addr_0_ph8_i_i = $__root_addr_06_i_i;
            break;
           } else {
            $__root_addr_0_ph10_i_in_i = $24;
            $__result_addr_0_ph11_i_i = $__root_addr_06_i_i;
           }
          }
          if (($__result_addr_0_ph8_i_i | 0) == ($4 | 0)) {
           $nextIndex_1 = $nextIndex_0775;
           $canClose_2_off0 = $canClose_0_off0774;
           break;
          }
          if (($20 | 0) < (HEAP32[$__result_addr_0_ph8_i_i + 16 >> 2] | 0)) {
           $nextIndex_1 = $nextIndex_0775;
           $canClose_2_off0 = $canClose_0_off0774;
           break;
          }
          $28 = HEAP32[(__ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEixERS5_($faceToSegmentIndex, $arrayidx) | 0) >> 2] | 0;
          $29 = HEAP32[$__begin__i >> 2] | 0;
          $p1_sroa_0_0__idx = $29 + ($28 * 40 & -1) | 0;
          $p1_sroa_1_8__idx551 = $29 + ($28 * 40 & -1) + 8 | 0;
          $p1_sroa_1_8_copyload$0 = HEAP32[$p1_sroa_1_8__idx551 >> 2] | 0;
          $p1_sroa_1_8_copyload$1 = HEAP32[$p1_sroa_1_8__idx551 + 4 >> 2] | 0;
          $p0_idx285_val$0 = HEAP32[$p0_idx285 >> 2] | 0;
          $p0_idx285_val$1 = HEAP32[$p0_idx285 + 4 >> 2] | 0;
          $sub_i$0 = _i64Subtract(HEAP32[$p0_idx >> 2] | 0, HEAP32[$p0_idx + 4 >> 2] | 0, HEAP32[$p1_sroa_0_0__idx >> 2] | 0, HEAP32[$p1_sroa_0_0__idx + 4 >> 2] | 0) | 0;
          $sub_i$1 = tempRet0;
          $sub3_i$0 = _i64Subtract($p0_idx285_val$0, $p0_idx285_val$1, $p1_sroa_1_8_copyload$0, $p1_sroa_1_8_copyload$1) | 0;
          $sub3_i$1 = tempRet0;
          $sub_i_off$0 = _i64Add($sub_i$0, $sub_i$1, 10, 0) | 0;
          $sub_i_off$1 = tempRet0;
          $$etemp$9$1 = 0;
          if ($sub_i_off$1 >>> 0 > $$etemp$9$1 >>> 0 | $sub_i_off$1 >>> 0 == $$etemp$9$1 >>> 0 & $sub_i_off$0 >>> 0 > 20 >>> 0) {
           $nextIndex_1 = $nextIndex_0775;
           $canClose_2_off0 = $canClose_0_off0774;
           break;
          }
          $sub3_i_off$0 = _i64Add($sub3_i$0, $sub3_i$1, 10, 0) | 0;
          $sub3_i_off$1 = tempRet0;
          $$etemp$11$1 = 0;
          if ($sub3_i_off$1 >>> 0 > $$etemp$11$1 >>> 0 | $sub3_i_off$1 >>> 0 == $$etemp$11$1 >>> 0 & $sub3_i_off$0 >>> 0 > 20 >>> 0) {
           $nextIndex_1 = $nextIndex_0775;
           $canClose_2_off0 = $canClose_0_off0774;
           break;
          }
          $mul_i_i$0 = ___muldi3($sub_i$0, $sub_i$1, $sub_i$0, $sub_i$1) | 0;
          $mul_i_i$1 = tempRet0;
          $mul3_i_i$0 = ___muldi3($sub3_i$0, $sub3_i$1, $sub3_i$0, $sub3_i$1) | 0;
          $add_i_i$0 = _i64Add($mul3_i_i$0, tempRet0, $mul_i_i$0, $mul_i_i$1) | 0;
          $add_i_i$1 = tempRet0;
          $$etemp$12$1 = 0;
          if (!(($add_i_i$1 | 0) < ($$etemp$12$1 | 0) | ($add_i_i$1 | 0) == ($$etemp$12$1 | 0) & $add_i_i$0 >>> 0 < 101 >>> 0)) {
           $nextIndex_1 = $nextIndex_0775;
           $canClose_2_off0 = $canClose_0_off0774;
           break;
          }
          $_canClose_0_off0 = (HEAP32[(__ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEixERS5_($faceToSegmentIndex, $arrayidx) | 0) >> 2] | 0) == ($startSegment_0836 | 0) | $canClose_0_off0774;
          $42 = HEAP32[(__ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEixERS5_($faceToSegmentIndex, $arrayidx) | 0) >> 2] | 0;
          if ((HEAP8[(HEAP32[$__begin__i >> 2] | 0) + ($42 * 40 & -1) + 36 | 0] & 1) != 0) {
           $nextIndex_1 = $nextIndex_0775;
           $canClose_2_off0 = $_canClose_0_off0;
           break;
          }
          $nextIndex_1 = HEAP32[(__ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEixERS5_($faceToSegmentIndex, $arrayidx) | 0) >> 2] | 0;
          $canClose_2_off0 = $_canClose_0_off0;
         } else {
          $nextIndex_1 = $nextIndex_0775;
          $canClose_2_off0 = $canClose_0_off0774;
         }
        } while (0);
        $inc = $i_0776 + 1 | 0;
        if ($inc >>> 0 < 3) {
         $canClose_0_off0774 = $canClose_2_off0;
         $nextIndex_0775 = $nextIndex_1;
         $i_0776 = $inc;
        } else {
         break;
        }
       }
       if (($nextIndex_1 | 0) == -1) {
        break;
       } else {
        $segmentIndex_0 = $nextIndex_1;
       }
      }
      do {
       if ($canClose_2_off0) {
        $47 = HEAP32[$__end__i1144 >> 2] | 0;
        if (($47 | 0) == (HEAP32[$__first__i_i_i_i1149 >> 2] | 0)) {
         __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($polygonList, $poly);
         break;
        }
        do {
         if (($47 | 0) != 0) {
          $__begin__i_i = $47 | 0;
          HEAP32[$__begin__i_i >> 2] = 0;
          $__end__i_i = $47 + 4 | 0;
          HEAP32[$__end__i_i >> 2] = 0;
          $__first__i_i_i_i_i313 = $47 + 8 | 0;
          HEAP32[$__first__i_i_i_i_i313 >> 2] = 0;
          $sub_ptr_sub_i_i = (HEAP32[$__end__i_i_i >> 2] | 0) - (HEAP32[$__begin__i_i_i >> 2] | 0) | 0;
          $sub_ptr_div_i_i = $sub_ptr_sub_i_i >> 4;
          if (($sub_ptr_div_i_i | 0) == 0) {
           break;
          }
          if ($sub_ptr_div_i_i >>> 0 > 268435455) {
           label = 3368;
           break L3633;
          }
          $51 = __Znwj($sub_ptr_sub_i_i) | 0;
          HEAP32[$__end__i_i >> 2] = $51;
          HEAP32[$__begin__i_i >> 2] = $51;
          HEAP32[$__first__i_i_i_i_i313 >> 2] = $51 + ($sub_ptr_div_i_i << 4);
          $52 = HEAP32[$__begin__i_i_i >> 2] | 0;
          $53 = HEAP32[$__end__i_i_i >> 2] | 0;
          if (($52 | 0) == ($53 | 0)) {
           break;
          } else {
           $__first_addr_04_i_i = $52;
           $54 = $51;
          }
          do {
           if (($54 | 0) == 0) {
            $57 = 0;
           } else {
            $55 = $54;
            $56 = $__first_addr_04_i_i;
            HEAP32[$55 >> 2] = HEAP32[$56 >> 2];
            HEAP32[$55 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
            HEAP32[$55 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
            HEAP32[$55 + 12 >> 2] = HEAP32[$56 + 12 >> 2];
            $57 = HEAP32[$__end__i_i >> 2] | 0;
           }
           $54 = $57 + 16 | 0;
           HEAP32[$__end__i_i >> 2] = $54;
           $__first_addr_04_i_i = $__first_addr_04_i_i + 16 | 0;
          } while (($__first_addr_04_i_i | 0) != ($53 | 0));
         }
        } while (0);
        HEAP32[$__end__i1144 >> 2] = (HEAP32[$__end__i1144 >> 2] | 0) + 12;
       } else {
        $66 = HEAP32[$__end__i1179 >> 2] | 0;
        if (($66 | 0) == (HEAP32[$__first__i_i_i_i1184 >> 2] | 0)) {
         __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($openPolygonList, $poly);
         break;
        }
        do {
         if (($66 | 0) != 0) {
          $__begin__i_i321 = $66 | 0;
          HEAP32[$__begin__i_i321 >> 2] = 0;
          $__end__i_i322 = $66 + 4 | 0;
          HEAP32[$__end__i_i322 >> 2] = 0;
          $__first__i_i_i_i_i323 = $66 + 8 | 0;
          HEAP32[$__first__i_i_i_i_i323 >> 2] = 0;
          $sub_ptr_sub_i_i328 = (HEAP32[$__end__i_i_i >> 2] | 0) - (HEAP32[$__begin__i_i_i >> 2] | 0) | 0;
          $sub_ptr_div_i_i329 = $sub_ptr_sub_i_i328 >> 4;
          if (($sub_ptr_div_i_i329 | 0) == 0) {
           break;
          }
          if ($sub_ptr_div_i_i329 >>> 0 > 268435455) {
           label = 3387;
           break L3633;
          }
          $70 = __Znwj($sub_ptr_sub_i_i328) | 0;
          HEAP32[$__end__i_i322 >> 2] = $70;
          HEAP32[$__begin__i_i321 >> 2] = $70;
          HEAP32[$__first__i_i_i_i_i323 >> 2] = $70 + ($sub_ptr_div_i_i329 << 4);
          $71 = HEAP32[$__begin__i_i_i >> 2] | 0;
          $72 = HEAP32[$__end__i_i_i >> 2] | 0;
          if (($71 | 0) == ($72 | 0)) {
           break;
          } else {
           $__first_addr_04_i_i340 = $71;
           $73 = $70;
          }
          do {
           if (($73 | 0) == 0) {
            $76 = 0;
           } else {
            $74 = $73;
            $75 = $__first_addr_04_i_i340;
            HEAP32[$74 >> 2] = HEAP32[$75 >> 2];
            HEAP32[$74 + 4 >> 2] = HEAP32[$75 + 4 >> 2];
            HEAP32[$74 + 8 >> 2] = HEAP32[$75 + 8 >> 2];
            HEAP32[$74 + 12 >> 2] = HEAP32[$75 + 12 >> 2];
            $76 = HEAP32[$__end__i_i322 >> 2] | 0;
           }
           $73 = $76 + 16 | 0;
           HEAP32[$__end__i_i322 >> 2] = $73;
           $__first_addr_04_i_i340 = $__first_addr_04_i_i340 + 16 | 0;
          } while (($__first_addr_04_i_i340 | 0) != ($72 | 0));
         }
        } while (0);
        HEAP32[$__end__i1179 >> 2] = (HEAP32[$__end__i1179 >> 2] | 0) + 12;
       }
      } while (0);
      $85 = HEAP32[$__begin__i_i_i >> 2] | 0;
      if (($85 | 0) == 0) {
       break;
      }
      $87 = HEAP32[$__end__i_i_i >> 2] | 0;
      if (($85 | 0) != ($87 | 0)) {
       HEAP32[$__end__i_i_i >> 2] = $87 + ((($87 - 16 + (-$85 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($85);
     }
    } while (0);
    $inc83 = $startSegment_0836 + 1 | 0;
    $92 = HEAP32[$__end__i >> 2] | 0;
    $93 = HEAP32[$__begin__i >> 2] | 0;
    if ($inc83 >>> 0 < (($92 - $93 | 0) / 40 & -1) >>> 0) {
     $startSegment_0836 = $inc83;
     $8 = $93;
    } else {
     label = 3327;
     break;
    }
   }
   if ((label | 0) == 3327) {
    if (($93 | 0) == ($92 | 0)) {
     break;
    }
    HEAP32[$__end__i >> 2] = $92 + (((($92 - 40 + (-$93 | 0) | 0) >>> 0) / 40 >>> 0 ^ -1) * 40 & -1);
    break;
   } else if ((label | 0) == 3368) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
   } else if ((label | 0) == 3387) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
   }
  }
 } while (0);
 $__end__i1246 = $this + 40 | 0;
 $94 = HEAP32[$__end__i1246 >> 2] | 0;
 $__begin__i1247 = $this + 36 | 0;
 $95 = HEAP32[$__begin__i1247 >> 2] | 0;
 $__end__i3197_pre = $this + 28 | 0;
 $__first__i_i_i_i3202_pre = $this + 32 | 0;
 $polygonList243_pre = $this + 24 | 0;
 if (($94 | 0) == ($95 | 0)) {
  $97 = $94;
  $_pre9901009 = $94;
 } else {
  $i86_0757 = 0;
  $100 = $95;
  $indvars_iv = 1;
  $indvars_iv925 = -2;
  $99 = $94;
  $98 = $94;
  while (1) {
   do {
    if ((HEAP32[$100 + ($i86_0757 * 12 & -1) + 4 >> 2] | 0) == (HEAP32[$100 + ($i86_0757 * 12 & -1) >> 2] | 0)) {
     $146 = $99;
     $145 = $100;
     $144 = $98;
    } else {
     if (($99 | 0) == ($100 | 0)) {
      $146 = $99;
      $145 = $99;
      $144 = $98;
      break;
     }
     $add_ptr_i_i2158_sum = $i86_0757 + 1 | 0;
     $j_0743 = 0;
     $105 = $100;
     $104 = $98;
     while (1) {
      $107 = HEAP32[$105 + ($j_0743 * 12 & -1) >> 2] | 0;
      do {
       if ((HEAP32[$105 + ($j_0743 * 12 & -1) + 4 >> 2] | 0) == ($107 | 0)) {
        $142 = $104;
       } else {
        $108 = HEAP32[$105 + ($i86_0757 * 12 & -1) + 4 >> 2] | 0;
        $109 = HEAP32[$105 + ($i86_0757 * 12 & -1) >> 2] | 0;
        $sub = ($108 - $109 >> 4) - 1 | 0;
        $arrayidx_i1801_idx = $109 + ($sub << 4) | 0;
        $arrayidx_i1801_idx282 = $109 + ($sub << 4) + 8 | 0;
        $arrayidx_i1801_idx282_val$0 = HEAP32[$arrayidx_i1801_idx282 >> 2] | 0;
        $arrayidx_i1801_idx282_val$1 = HEAP32[$arrayidx_i1801_idx282 + 4 >> 2] | 0;
        $_idx283 = $107 | 0;
        $_idx284 = $107 + 8 | 0;
        $_idx284_val$0 = HEAP32[$_idx284 >> 2] | 0;
        $_idx284_val$1 = HEAP32[$_idx284 + 4 >> 2] | 0;
        $sub_i378$0 = _i64Subtract(HEAP32[$arrayidx_i1801_idx >> 2] | 0, HEAP32[$arrayidx_i1801_idx + 4 >> 2] | 0, HEAP32[$_idx283 >> 2] | 0, HEAP32[$_idx283 + 4 >> 2] | 0) | 0;
        $sub_i378$1 = tempRet0;
        $sub3_i379$0 = _i64Subtract($arrayidx_i1801_idx282_val$0, $arrayidx_i1801_idx282_val$1, $_idx284_val$0, $_idx284_val$1) | 0;
        $sub3_i379$1 = tempRet0;
        $mul_i$0 = ___muldi3($sub_i378$0, $sub_i378$1, $sub_i378$0, $sub_i378$1) | 0;
        $mul_i$1 = tempRet0;
        $mul3_i$0 = ___muldi3($sub3_i379$0, $sub3_i379$1, $sub3_i379$0, $sub3_i379$1) | 0;
        $add_i$0 = _i64Add($mul3_i$0, tempRet0, $mul_i$0, $mul_i$1) | 0;
        $add_i$1 = tempRet0;
        $$etemp$21$1 = 0;
        if (!(($add_i$1 | 0) < ($$etemp$21$1 | 0) | ($add_i$1 | 0) == ($$etemp$21$1 | 0) & $add_i$0 >>> 0 < 4 >>> 0)) {
         $142 = $104;
         break;
        }
        if (($i86_0757 | 0) != ($j_0743 | 0)) {
         $n_0728 = 0;
         $132 = $105;
         $131 = $107;
         $130 = $108;
         while (1) {
          $arrayidx_i2478 = $131 + ($n_0728 << 4) | 0;
          $__end__i2527 = $132 + ($i86_0757 * 12 & -1) + 4 | 0;
          if (($130 | 0) == (HEAP32[$132 + ($i86_0757 * 12 & -1) + 8 >> 2] | 0)) {
           __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($132 + ($i86_0757 * 12 & -1) | 0, $arrayidx_i2478);
          } else {
           if (($130 | 0) == 0) {
            $136 = 0;
           } else {
            $134 = $130;
            $135 = $arrayidx_i2478;
            HEAP32[$134 >> 2] = HEAP32[$135 >> 2];
            HEAP32[$134 + 4 >> 2] = HEAP32[$135 + 4 >> 2];
            HEAP32[$134 + 8 >> 2] = HEAP32[$135 + 8 >> 2];
            HEAP32[$134 + 12 >> 2] = HEAP32[$135 + 12 >> 2];
            $136 = HEAP32[$__end__i2527 >> 2] | 0;
           }
           HEAP32[$__end__i2527 >> 2] = $136 + 16;
          }
          $inc145 = $n_0728 + 1 | 0;
          $137 = HEAP32[$__begin__i1247 >> 2] | 0;
          $__end__i2397 = $137 + ($j_0743 * 12 & -1) + 4 | 0;
          $138 = HEAP32[$__end__i2397 >> 2] | 0;
          $139 = HEAP32[$137 + ($j_0743 * 12 & -1) >> 2] | 0;
          if ($inc145 >>> 0 >= $138 - $139 >> 4 >>> 0) {
           break;
          }
          $n_0728 = $inc145;
          $132 = $137;
          $131 = $139;
          $130 = HEAP32[$137 + ($i86_0757 * 12 & -1) + 4 >> 2] | 0;
         }
         if (($139 | 0) != ($138 | 0)) {
          HEAP32[$__end__i2397 >> 2] = $138 + ((($138 - 16 + (-$139 | 0) | 0) >>> 4 ^ -1) << 4);
         }
         $142 = HEAP32[$__end__i1246 >> 2] | 0;
         break;
        }
        $arrayidx_i2104 = $105 + ($i86_0757 * 12 & -1) | 0;
        $110 = HEAP32[$__end__i3197_pre >> 2] | 0;
        if (($110 | 0) == (HEAP32[$__first__i_i_i_i3202_pre >> 2] | 0)) {
         __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($polygonList243_pre, $arrayidx_i2104);
        } else {
         if (($110 | 0) == 0) {
          $112 = 0;
         } else {
          __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($110, $arrayidx_i2104);
          $112 = HEAP32[$__end__i3197_pre >> 2] | 0;
         }
         HEAP32[$__end__i3197_pre >> 2] = $112 + 12;
        }
        $113 = HEAP32[$__begin__i1247 >> 2] | 0;
        $add_ptr_i_i2158 = $113 + ($i86_0757 * 12 & -1) | 0;
        $add_ptr_i2351 = $113 + ($add_ptr_i_i2158_sum * 12 & -1) | 0;
        $114 = HEAP32[$__end__i1246 >> 2] | 0;
        if (($add_ptr_i2351 | 0) == ($114 | 0)) {
         $__result_addr_i_i_i2310_0_lcssa = $add_ptr_i_i2158;
         $120 = $add_ptr_i2351;
        } else {
         $117 = (($114 + ($indvars_iv925 * 12 & -1) + (-$113 | 0) | 0) >>> 0) / 12 >>> 0;
         $__result_addr_i_i_i2310_0733 = $add_ptr_i_i2158;
         $__first_addr_i_i_i2308_0734 = $add_ptr_i2351;
         while (1) {
          __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($__result_addr_i_i_i2310_0733, HEAP32[$__first_addr_i_i_i2308_0734 >> 2] | 0, HEAP32[$__first_addr_i_i_i2308_0734 + 4 >> 2] | 0);
          $incdec_ptr_i_i_i2365 = $__first_addr_i_i_i2308_0734 + 12 | 0;
          if (($incdec_ptr_i_i_i2365 | 0) == ($114 | 0)) {
           break;
          } else {
           $__result_addr_i_i_i2310_0733 = $__result_addr_i_i_i2310_0733 + 12 | 0;
           $__first_addr_i_i_i2308_0734 = $incdec_ptr_i_i_i2365;
          }
         }
         $__result_addr_i_i_i2310_0_lcssa = $113 + (($indvars_iv + $117 | 0) * 12 & -1) | 0;
         $120 = HEAP32[$__end__i1246 >> 2] | 0;
        }
        if (($__result_addr_i_i_i2310_0_lcssa | 0) == ($120 | 0)) {
         $142 = $120;
         break;
        } else {
         $121 = $120;
        }
        while (1) {
         $incdec_ptr_i_i_i_i2382 = $121 - 12 | 0;
         HEAP32[$__end__i1246 >> 2] = $incdec_ptr_i_i_i_i2382;
         $122 = HEAP32[$incdec_ptr_i_i_i_i2382 >> 2] | 0;
         $123 = $122;
         if (($122 | 0) == 0) {
          $124 = $incdec_ptr_i_i_i_i2382;
         } else {
          $__end__i_i_i_i_i_i384 = $121 - 12 + 4 | 0;
          $125 = HEAP32[$__end__i_i_i_i_i_i384 >> 2] | 0;
          if (($122 | 0) != ($125 | 0)) {
           HEAP32[$__end__i_i_i_i_i_i384 >> 2] = $125 + ((($125 - 16 + (-$123 | 0) | 0) >>> 4 ^ -1) << 4);
          }
          __ZdlPv($122);
          $124 = HEAP32[$__end__i1246 >> 2] | 0;
         }
         if (($__result_addr_i_i_i2310_0_lcssa | 0) == ($124 | 0)) {
          $142 = $__result_addr_i_i_i2310_0_lcssa;
          break;
         } else {
          $121 = $124;
         }
        }
       }
      } while (0);
      $inc152 = $j_0743 + 1 | 0;
      $143 = HEAP32[$__begin__i1247 >> 2] | 0;
      if ($inc152 >>> 0 < (($142 - $143 | 0) / 12 & -1) >>> 0) {
       $j_0743 = $inc152;
       $105 = $143;
       $104 = $142;
      } else {
       $146 = $142;
       $145 = $143;
       $144 = $142;
       break;
      }
     }
    }
   } while (0);
   $inc155 = $i86_0757 + 1 | 0;
   if ($inc155 >>> 0 < (($146 - $145 | 0) / 12 & -1) >>> 0) {
    $i86_0757 = $inc155;
    $100 = $145;
    $indvars_iv = $indvars_iv + 1 | 0;
    $indvars_iv925 = $indvars_iv925 - 1 | 0;
    $99 = $146;
    $98 = $144;
   } else {
    $97 = $146;
    $_pre9901009 = $145;
    break;
   }
  }
 }
 $i164_0 = 0;
 $reversed_0_off0 = 0;
 $bestB_0 = -1;
 $bestA_0 = -1;
 $bestScore_0$1 = 0;
 $bestScore_0$0 = 1e8;
 $147 = $97;
 $_pre9901008 = $_pre9901009;
 L3766 : while (1) {
  $sub_ptr_div_i2718 = ($147 - $_pre9901008 | 0) / 12 & -1;
  L3768 : do {
   if ($i164_0 >>> 0 < $sub_ptr_div_i2718 >>> 0) {
    $148 = HEAP32[$_pre9901008 + ($i164_0 * 12 & -1) + 4 >> 2] | 0;
    $149 = HEAP32[$_pre9901008 + ($i164_0 * 12 & -1) >> 2] | 0;
    if (($148 | 0) == ($149 | 0) | ($147 | 0) == ($_pre9901008 | 0)) {
     $reversed_4_off0 = $reversed_0_off0;
     $bestB_4 = $bestB_0;
     $bestA_4 = $bestA_0;
     $bestScore_4$1 = $bestScore_0$1;
     $bestScore_4$0 = $bestScore_0$0;
    } else {
     $bestScore_1711$1 = $bestScore_0$1;
     $bestScore_1711$0 = $bestScore_0$0;
     $bestA_1712 = $bestA_0;
     $bestB_1713 = $bestB_0;
     $reversed_1_off0714 = $reversed_0_off0;
     $j177_0715 = 0;
     while (1) {
      $151 = HEAP32[$_pre9901008 + ($j177_0715 * 12 & -1) + 4 >> 2] | 0;
      $152 = HEAP32[$_pre9901008 + ($j177_0715 * 12 & -1) >> 2] | 0;
      do {
       if (($151 | 0) == ($152 | 0)) {
        $reversed_3_off0 = $reversed_1_off0714;
        $bestB_3 = $bestB_1713;
        $bestA_3 = $bestA_1712;
        $bestScore_3$1 = $bestScore_1711$1;
        $bestScore_3$0 = $bestScore_1711$0;
       } else {
        $sub196 = ($148 - $149 >> 4) - 1 | 0;
        $arrayidx_i3221_idx = $149 + ($sub196 << 4) | 0;
        $arrayidx_i3221_idx_val$0 = HEAP32[$arrayidx_i3221_idx >> 2] | 0;
        $arrayidx_i3221_idx_val$1 = HEAP32[$arrayidx_i3221_idx + 4 >> 2] | 0;
        $arrayidx_i3221_idx280 = $149 + ($sub196 << 4) + 8 | 0;
        $arrayidx_i3221_idx280_val$0 = HEAP32[$arrayidx_i3221_idx280 >> 2] | 0;
        $arrayidx_i3221_idx280_val$1 = HEAP32[$arrayidx_i3221_idx280 + 4 >> 2] | 0;
        $_idx = $152 | 0;
        $_idx281 = $152 + 8 | 0;
        $_idx281_val$0 = HEAP32[$_idx281 >> 2] | 0;
        $_idx281_val$1 = HEAP32[$_idx281 + 4 >> 2] | 0;
        $sub_i395$0 = _i64Subtract($arrayidx_i3221_idx_val$0, $arrayidx_i3221_idx_val$1, HEAP32[$_idx >> 2] | 0, HEAP32[$_idx + 4 >> 2] | 0) | 0;
        $sub_i395$1 = tempRet0;
        $sub3_i396$0 = _i64Subtract($arrayidx_i3221_idx280_val$0, $arrayidx_i3221_idx280_val$1, $_idx281_val$0, $_idx281_val$1) | 0;
        $sub3_i396$1 = tempRet0;
        $mul_i399$0 = ___muldi3($sub_i395$0, $sub_i395$1, $sub_i395$0, $sub_i395$1) | 0;
        $mul_i399$1 = tempRet0;
        $mul3_i400$0 = ___muldi3($sub3_i396$0, $sub3_i396$1, $sub3_i396$0, $sub3_i396$1) | 0;
        $add_i401$0 = _i64Add($mul3_i400$0, tempRet0, $mul_i399$0, $mul_i399$1) | 0;
        $add_i401$1 = tempRet0;
        $cmp204 = ($add_i401$1 | 0) < ($bestScore_1711$1 | 0) | ($add_i401$1 | 0) == ($bestScore_1711$1 | 0) & $add_i401$0 >>> 0 < $bestScore_1711$0 >>> 0;
        $call203_bestScore_1$0 = $cmp204 ? $add_i401$0 : $bestScore_1711$0;
        $call203_bestScore_1$1 = $cmp204 ? $add_i401$1 : $bestScore_1711$1;
        $i164_0_bestA_1 = $cmp204 ? $i164_0 : $bestA_1712;
        $j177_0_bestB_1 = $cmp204 ? $j177_0715 : $bestB_1713;
        $_reversed_1_off0 = $reversed_1_off0714 & ($cmp204 ^ 1);
        if (($i164_0 | 0) == ($j177_0715 | 0)) {
         $reversed_3_off0 = $_reversed_1_off0;
         $bestB_3 = $j177_0_bestB_1;
         $bestA_3 = $i164_0_bestA_1;
         $bestScore_3$1 = $call203_bestScore_1$1;
         $bestScore_3$0 = $call203_bestScore_1$0;
         break;
        }
        $sub223 = ($151 - $152 >> 4) - 1 | 0;
        $arrayidx_i3246_idx = $152 + ($sub223 << 4) | 0;
        $arrayidx_i3246_idx279 = $152 + ($sub223 << 4) + 8 | 0;
        $arrayidx_i3246_idx279_val$0 = HEAP32[$arrayidx_i3246_idx279 >> 2] | 0;
        $arrayidx_i3246_idx279_val$1 = HEAP32[$arrayidx_i3246_idx279 + 4 >> 2] | 0;
        $sub_i402$0 = _i64Subtract($arrayidx_i3221_idx_val$0, $arrayidx_i3221_idx_val$1, HEAP32[$arrayidx_i3246_idx >> 2] | 0, HEAP32[$arrayidx_i3246_idx + 4 >> 2] | 0) | 0;
        $sub_i402$1 = tempRet0;
        $sub3_i403$0 = _i64Subtract($arrayidx_i3221_idx280_val$0, $arrayidx_i3221_idx280_val$1, $arrayidx_i3246_idx279_val$0, $arrayidx_i3246_idx279_val$1) | 0;
        $sub3_i403$1 = tempRet0;
        $mul_i409$0 = ___muldi3($sub_i402$0, $sub_i402$1, $sub_i402$0, $sub_i402$1) | 0;
        $mul_i409$1 = tempRet0;
        $mul3_i410$0 = ___muldi3($sub3_i403$0, $sub3_i403$1, $sub3_i403$0, $sub3_i403$1) | 0;
        $add_i411$0 = _i64Add($mul3_i410$0, tempRet0, $mul_i409$0, $mul_i409$1) | 0;
        $add_i411$1 = tempRet0;
        $cmp228 = ($add_i411$1 | 0) < ($call203_bestScore_1$1 | 0) | ($add_i411$1 | 0) == ($call203_bestScore_1$1 | 0) & $add_i411$0 >>> 0 < $call203_bestScore_1$0 >>> 0;
        $reversed_3_off0 = $cmp228 | $_reversed_1_off0;
        $bestB_3 = $cmp228 ? $j177_0715 : $j177_0_bestB_1;
        $bestA_3 = $cmp228 ? $i164_0 : $i164_0_bestA_1;
        $bestScore_3$1 = $cmp228 ? $add_i411$1 : $call203_bestScore_1$1;
        $bestScore_3$0 = $cmp228 ? $add_i411$0 : $call203_bestScore_1$0;
       }
      } while (0);
      $inc233 = $j177_0715 + 1 | 0;
      if ($inc233 >>> 0 < $sub_ptr_div_i2718 >>> 0) {
       $bestScore_1711$1 = $bestScore_3$1;
       $bestScore_1711$0 = $bestScore_3$0;
       $bestA_1712 = $bestA_3;
       $bestB_1713 = $bestB_3;
       $reversed_1_off0714 = $reversed_3_off0;
       $j177_0715 = $inc233;
      } else {
       $reversed_4_off0 = $reversed_3_off0;
       $bestB_4 = $bestB_3;
       $bestA_4 = $bestA_3;
       $bestScore_4$1 = $bestScore_3$1;
       $bestScore_4$0 = $bestScore_3$0;
       break;
      }
     }
    }
    $i164_0_be = $i164_0 + 1 | 0;
    $reversed_0_off0_be = $reversed_4_off0;
    $bestB_0_be = $bestB_4;
    $bestA_0_be = $bestA_4;
    $bestScore_0_be$1 = $bestScore_4$1;
    $bestScore_0_be$0 = $bestScore_4$0;
    $_pre = $147;
   } else {
    $$etemp$34$1 = 0;
    if (($bestScore_0$1 | 0) > ($$etemp$34$1 | 0) | ($bestScore_0$1 | 0) == ($$etemp$34$1 | 0) & $bestScore_0$0 >>> 0 > 99999999 >>> 0) {
     break L3766;
    }
    if (($bestA_0 | 0) == ($bestB_0 | 0)) {
     $arrayidx_i3231 = $_pre9901008 + ($bestA_0 * 12 & -1) | 0;
     $153 = HEAP32[$__end__i3197_pre >> 2] | 0;
     if (($153 | 0) == (HEAP32[$__first__i_i_i_i3202_pre >> 2] | 0)) {
      __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($polygonList243_pre, $arrayidx_i3231);
     } else {
      if (($153 | 0) == 0) {
       $155 = 0;
      } else {
       __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($153, $arrayidx_i3231);
       $155 = HEAP32[$__end__i3197_pre >> 2] | 0;
      }
      HEAP32[$__end__i3197_pre >> 2] = $155 + 12;
     }
     $156 = HEAP32[$__begin__i1247 >> 2] | 0;
     $add_ptr_i_i3170 = $156 + ($bestA_0 * 12 & -1) | 0;
     $add_ptr_i3094 = $156 + (($bestA_0 + 1 | 0) * 12 & -1) | 0;
     $157 = HEAP32[$__end__i1246 >> 2] | 0;
     if (($add_ptr_i3094 | 0) == ($157 | 0)) {
      $__result_addr_i_i_i3053_0_lcssa = $add_ptr_i_i3170;
      $164 = $add_ptr_i3094;
     } else {
      $161 = $bestA_0 + ((($157 + ((-2 - $bestA_0 | 0) * 12 & -1) + (-$156 | 0) | 0) >>> 0) / 12 >>> 0) | 0;
      $__result_addr_i_i_i3053_0701 = $add_ptr_i_i3170;
      $__first_addr_i_i_i3051_0702 = $add_ptr_i3094;
      while (1) {
       __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($__result_addr_i_i_i3053_0701, HEAP32[$__first_addr_i_i_i3051_0702 >> 2] | 0, HEAP32[$__first_addr_i_i_i3051_0702 + 4 >> 2] | 0);
       $incdec_ptr_i_i_i3108 = $__first_addr_i_i_i3051_0702 + 12 | 0;
       if (($incdec_ptr_i_i_i3108 | 0) == ($157 | 0)) {
        break;
       } else {
        $__result_addr_i_i_i3053_0701 = $__result_addr_i_i_i3053_0701 + 12 | 0;
        $__first_addr_i_i_i3051_0702 = $incdec_ptr_i_i_i3108;
       }
      }
      $__result_addr_i_i_i3053_0_lcssa = $156 + (($161 + 1 | 0) * 12 & -1) | 0;
      $164 = HEAP32[$__end__i1246 >> 2] | 0;
     }
     if (($__result_addr_i_i_i3053_0_lcssa | 0) == ($164 | 0)) {
      $i164_0_be = 0;
      $reversed_0_off0_be = 0;
      $bestB_0_be = -1;
      $bestA_0_be = -1;
      $bestScore_0_be$1 = 0;
      $bestScore_0_be$0 = 1e8;
      $_pre = $164;
      break;
     } else {
      $165 = $164;
     }
     while (1) {
      $incdec_ptr_i_i_i_i3125 = $165 - 12 | 0;
      HEAP32[$__end__i1246 >> 2] = $incdec_ptr_i_i_i_i3125;
      $166 = HEAP32[$incdec_ptr_i_i_i_i3125 >> 2] | 0;
      $167 = $166;
      if (($166 | 0) == 0) {
       $168 = $incdec_ptr_i_i_i_i3125;
      } else {
       $__end__i_i_i_i_i_i431 = $165 - 12 + 4 | 0;
       $169 = HEAP32[$__end__i_i_i_i_i_i431 >> 2] | 0;
       if (($166 | 0) != ($169 | 0)) {
        HEAP32[$__end__i_i_i_i_i_i431 >> 2] = $169 + ((($169 - 16 + (-$167 | 0) | 0) >>> 4 ^ -1) << 4);
       }
       __ZdlPv($166);
       $168 = HEAP32[$__end__i1246 >> 2] | 0;
      }
      if (($__result_addr_i_i_i3053_0_lcssa | 0) == ($168 | 0)) {
       $i164_0_be = 0;
       $reversed_0_off0_be = 0;
       $bestB_0_be = -1;
       $bestA_0_be = -1;
       $bestScore_0_be$1 = 0;
       $bestScore_0_be$0 = 1e8;
       $_pre = $__result_addr_i_i_i3053_0_lcssa;
       break L3768;
      } else {
       $165 = $168;
      }
     }
    }
    $174 = HEAP32[$_pre9901008 + ($bestB_0 * 12 & -1) + 4 >> 2] | 0;
    $175 = HEAP32[$_pre9901008 + ($bestB_0 * 12 & -1) >> 2] | 0;
    do {
     if ($reversed_0_off0) {
      $n256_0696 = ($174 - $175 >> 4) - 1 | 0;
      if (($n256_0696 | 0) > -1) {
       $n256_0698 = $n256_0696;
       $176 = $_pre9901008;
      } else {
       $193 = $_pre9901008;
       break;
      }
      while (1) {
       $arrayidx_i3013 = (HEAP32[$176 + ($bestB_0 * 12 & -1) >> 2] | 0) + ($n256_0698 << 4) | 0;
       $__end__i2981 = $176 + ($bestA_0 * 12 & -1) + 4 | 0;
       $178 = HEAP32[$__end__i2981 >> 2] | 0;
       if (($178 | 0) == (HEAP32[$176 + ($bestA_0 * 12 & -1) + 8 >> 2] | 0)) {
        __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($176 + ($bestA_0 * 12 & -1) | 0, $arrayidx_i3013);
       } else {
        if (($178 | 0) == 0) {
         $182 = 0;
        } else {
         $180 = $178;
         $181 = $arrayidx_i3013;
         HEAP32[$180 >> 2] = HEAP32[$181 >> 2];
         HEAP32[$180 + 4 >> 2] = HEAP32[$181 + 4 >> 2];
         HEAP32[$180 + 8 >> 2] = HEAP32[$181 + 8 >> 2];
         HEAP32[$180 + 12 >> 2] = HEAP32[$181 + 12 >> 2];
         $182 = HEAP32[$__end__i2981 >> 2] | 0;
        }
        HEAP32[$__end__i2981 >> 2] = $182 + 16;
       }
       $n256_0 = $n256_0698 - 1 | 0;
       $_pre1010 = HEAP32[$__begin__i1247 >> 2] | 0;
       if (($n256_0 | 0) > -1) {
        $n256_0698 = $n256_0;
        $176 = $_pre1010;
       } else {
        $193 = $_pre1010;
        break;
       }
      }
     } else {
      if (($174 | 0) == ($175 | 0)) {
       $193 = $_pre9901008;
       break;
      } else {
       $n273_0694 = 0;
       $184 = $_pre9901008;
       $183 = $175;
      }
      while (1) {
       $arrayidx_i2944 = $183 + ($n273_0694 << 4) | 0;
       $__end__i2915 = $184 + ($bestA_0 * 12 & -1) + 4 | 0;
       $185 = HEAP32[$__end__i2915 >> 2] | 0;
       if (($185 | 0) == (HEAP32[$184 + ($bestA_0 * 12 & -1) + 8 >> 2] | 0)) {
        __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($184 + ($bestA_0 * 12 & -1) | 0, $arrayidx_i2944);
       } else {
        if (($185 | 0) == 0) {
         $189 = 0;
        } else {
         $187 = $185;
         $188 = $arrayidx_i2944;
         HEAP32[$187 >> 2] = HEAP32[$188 >> 2];
         HEAP32[$187 + 4 >> 2] = HEAP32[$188 + 4 >> 2];
         HEAP32[$187 + 8 >> 2] = HEAP32[$188 + 8 >> 2];
         HEAP32[$187 + 12 >> 2] = HEAP32[$188 + 12 >> 2];
         $189 = HEAP32[$__end__i2915 >> 2] | 0;
        }
        HEAP32[$__end__i2915 >> 2] = $189 + 16;
       }
       $inc286 = $n273_0694 + 1 | 0;
       $190 = HEAP32[$__begin__i1247 >> 2] | 0;
       $192 = HEAP32[$190 + ($bestB_0 * 12 & -1) >> 2] | 0;
       if ($inc286 >>> 0 < (HEAP32[$190 + ($bestB_0 * 12 & -1) + 4 >> 2] | 0) - $192 >> 4 >>> 0) {
        $n273_0694 = $inc286;
        $184 = $190;
        $183 = $192;
       } else {
        $193 = $190;
        break;
       }
      }
     }
    } while (0);
    $194 = HEAP32[$193 + ($bestB_0 * 12 & -1) >> 2] | 0;
    $__end__i_i_i_i2883 = $193 + ($bestB_0 * 12 & -1) + 4 | 0;
    $195 = HEAP32[$__end__i_i_i_i2883 >> 2] | 0;
    if (($194 | 0) != ($195 | 0)) {
     HEAP32[$__end__i_i_i_i2883 >> 2] = $195 + ((($195 - 16 + (-$194 | 0) | 0) >>> 4 ^ -1) << 4);
    }
    $i164_0_be = 0;
    $reversed_0_off0_be = 0;
    $bestB_0_be = -1;
    $bestA_0_be = -1;
    $bestScore_0_be$1 = 0;
    $bestScore_0_be$0 = 1e8;
    $_pre = HEAP32[$__end__i1246 >> 2] | 0;
   }
  } while (0);
  $i164_0 = $i164_0_be;
  $reversed_0_off0 = $reversed_0_off0_be;
  $bestB_0 = $bestB_0_be;
  $bestA_0 = $bestA_0_be;
  $bestScore_0$1 = $bestScore_0_be$1;
  $bestScore_0$0 = $bestScore_0_be$0;
  $147 = $_pre;
  $_pre9901008 = HEAP32[$__begin__i1247 >> 2] | 0;
 }
 L3831 : do {
  if ($extensiveStitching) {
   $199 = $agg_tmp316;
   $200 = $agg_tmp320;
   $len328 = $res | 0;
   $bestResult_sroa_1_8__idx68 = $res + 8 | 0;
   $bestResult_sroa_2_12__idx75 = $res + 12 | 0;
   $bestResult_sroa_3_16__idx82 = $res + 16 | 0;
   $bestResult_sroa_4_20__idx85 = $res + 20 | 0;
   $201 = $agg_tmp352;
   $202 = $agg_tmp356;
   $len364 = $res351 | 0;
   $bestResult_sroa_1_8__idx67 = $res351 + 8 | 0;
   $bestResult_sroa_2_12__idx74 = $res351 + 12 | 0;
   $bestResult_sroa_3_16__idx81 = $res351 + 16 | 0;
   $bestResult_sroa_4_20__idx = $res351 + 20 | 0;
   $__begin__i2624 = $polygonList243_pre | 0;
   $__begin__i_i_i2613 = $ref_tmp399 | 0;
   $__end__i_i_i2614 = $ref_tmp399 + 4 | 0;
   $__first__i_i_i_i_i_i2620 = $ref_tmp399 + 8 | 0;
   $__begin__i_i_i1829 = $poly502 | 0;
   $__end__i_i_i1830 = $poly502 + 4 | 0;
   $__first__i_i_i_i_i_i1836 = $poly502 + 8 | 0;
   $__begin__i1810 = $this + 24 | 0;
   $i303_0 = 0;
   $bestResult_sroa_0_0$1 = 2147483647;
   $bestResult_sroa_0_0$0 = -1;
   $bestResult_sroa_1_0 = -1;
   $bestResult_sroa_2_1 = 0;
   $bestResult_sroa_3_0 = -1;
   $bestResult_sroa_4_1_off0 = 0;
   $bestB300_0 = -1;
   $bestA298_0 = -1;
   $207 = $147;
   $206 = $_pre9901008;
   while (1) {
    do {
     if ($i303_0 >>> 0 < (($207 - $206 | 0) / 12 & -1) >>> 0) {
      $__end__i2834 = $206 + ($i303_0 * 12 & -1) + 4 | 0;
      $__begin__i2835 = $206 + ($i303_0 * 12 & -1) | 0;
      $209 = HEAP32[$__begin__i2835 >> 2] | 0;
      do {
       if ((HEAP32[$__end__i2834 >> 2] | 0) == ($209 | 0)) {
        $bestResult_sroa_0_4$1 = $bestResult_sroa_0_0$1;
        $bestResult_sroa_0_4$0 = $bestResult_sroa_0_0$0;
        $bestResult_sroa_1_4 = $bestResult_sroa_1_0;
        $bestResult_sroa_2_5 = $bestResult_sroa_2_1;
        $bestResult_sroa_3_4 = $bestResult_sroa_3_0;
        $bestResult_sroa_4_5_off0 = $bestResult_sroa_4_1_off0;
        $bestB300_4 = $bestB300_0;
        $bestA298_4 = $bestA298_0;
       } else {
        $210 = $209;
        HEAP32[$199 >> 2] = HEAP32[$210 >> 2];
        HEAP32[$199 + 4 >> 2] = HEAP32[$210 + 4 >> 2];
        HEAP32[$199 + 8 >> 2] = HEAP32[$210 + 8 >> 2];
        HEAP32[$199 + 12 >> 2] = HEAP32[$210 + 12 >> 2];
        $212 = HEAP32[$__begin__i2835 >> 2] | 0;
        $213 = $212 + (((HEAP32[$__end__i2834 >> 2] | 0) - $212 >> 4) - 1 << 4) | 0;
        HEAP32[$200 >> 2] = HEAP32[$213 >> 2];
        HEAP32[$200 + 4 >> 2] = HEAP32[$213 + 4 >> 2];
        HEAP32[$200 + 8 >> 2] = HEAP32[$213 + 8 >> 2];
        HEAP32[$200 + 12 >> 2] = HEAP32[$213 + 12 >> 2];
        __ZN11SlicerLayer20findPolygonGapCloserEN10ClipperLib8IntPointES1_($res, $this, $agg_tmp316, $agg_tmp320);
        $214$0 = HEAP32[$len328 >> 2] | 0;
        $214$1 = HEAP32[$len328 + 4 >> 2] | 0;
        $$etemp$37$1 = 0;
        if ((($214$1 | 0) > ($$etemp$37$1 | 0) | ($214$1 | 0) == ($$etemp$37$1 | 0) & $214$0 >>> 0 > 0 >>> 0) & (($214$1 | 0) < ($bestResult_sroa_0_0$1 | 0) | ($214$1 | 0) == ($bestResult_sroa_0_0$1 | 0) & $214$0 >>> 0 < $bestResult_sroa_0_0$0 >>> 0)) {
         $bestResult_sroa_0_2_ph$1 = $214$1;
         $bestResult_sroa_0_2_ph$0 = $214$0;
         $bestResult_sroa_1_2_ph = HEAP32[$bestResult_sroa_1_8__idx68 >> 2] | 0;
         $bestResult_sroa_2_3_ph = HEAP32[$bestResult_sroa_2_12__idx75 >> 2] | 0;
         $bestResult_sroa_3_2_ph = HEAP32[$bestResult_sroa_3_16__idx82 >> 2] | 0;
         $bestResult_sroa_4_3_off0_ph = (HEAP8[$bestResult_sroa_4_20__idx85] & 1) != 0;
         $bestB300_2_ph = $i303_0;
         $bestA298_2_ph = $i303_0;
        } else {
         $bestResult_sroa_0_2_ph$1 = $bestResult_sroa_0_0$1;
         $bestResult_sroa_0_2_ph$0 = $bestResult_sroa_0_0$0;
         $bestResult_sroa_1_2_ph = $bestResult_sroa_1_0;
         $bestResult_sroa_2_3_ph = $bestResult_sroa_2_1;
         $bestResult_sroa_3_2_ph = $bestResult_sroa_3_0;
         $bestResult_sroa_4_3_off0_ph = $bestResult_sroa_4_1_off0;
         $bestB300_2_ph = $bestB300_0;
         $bestA298_2_ph = $bestA298_0;
        }
        $217 = HEAP32[$__begin__i1247 >> 2] | 0;
        if ((HEAP32[$__end__i1246 >> 2] | 0) == ($217 | 0)) {
         $bestResult_sroa_0_4$1 = $bestResult_sroa_0_2_ph$1;
         $bestResult_sroa_0_4$0 = $bestResult_sroa_0_2_ph$0;
         $bestResult_sroa_1_4 = $bestResult_sroa_1_2_ph;
         $bestResult_sroa_2_5 = $bestResult_sroa_2_3_ph;
         $bestResult_sroa_3_4 = $bestResult_sroa_3_2_ph;
         $bestResult_sroa_4_5_off0 = $bestResult_sroa_4_3_off0_ph;
         $bestB300_4 = $bestB300_2_ph;
         $bestA298_4 = $bestA298_2_ph;
         break;
        } else {
         $bestA298_2650 = $bestA298_2_ph;
         $bestB300_2651 = $bestB300_2_ph;
         $bestResult_sroa_4_3_off0652 = $bestResult_sroa_4_3_off0_ph;
         $bestResult_sroa_3_2653 = $bestResult_sroa_3_2_ph;
         $bestResult_sroa_2_3654 = $bestResult_sroa_2_3_ph;
         $bestResult_sroa_1_2655 = $bestResult_sroa_1_2_ph;
         $bestResult_sroa_0_2656$1 = $bestResult_sroa_0_2_ph$1;
         $bestResult_sroa_0_2656$0 = $bestResult_sroa_0_2_ph$0;
         $j337_0657 = 0;
         $219 = $217;
        }
        while (1) {
         $220 = HEAP32[$219 + ($j337_0657 * 12 & -1) + 4 >> 2] | 0;
         $221 = HEAP32[$219 + ($j337_0657 * 12 & -1) >> 2] | 0;
         do {
          if (($220 | 0) == ($221 | 0) | ($i303_0 | 0) == ($j337_0657 | 0)) {
           $bestResult_sroa_0_3$1 = $bestResult_sroa_0_2656$1;
           $bestResult_sroa_0_3$0 = $bestResult_sroa_0_2656$0;
           $bestResult_sroa_1_3 = $bestResult_sroa_1_2655;
           $bestResult_sroa_2_4 = $bestResult_sroa_2_3654;
           $bestResult_sroa_3_3 = $bestResult_sroa_3_2653;
           $bestResult_sroa_4_4_off0 = $bestResult_sroa_4_3_off0652;
           $bestB300_3 = $bestB300_2651;
           $bestA298_3 = $bestA298_2650;
          } else {
           $223 = HEAP32[$219 + ($i303_0 * 12 & -1) >> 2] | 0;
           HEAP32[$201 >> 2] = HEAP32[$223 >> 2];
           HEAP32[$201 + 4 >> 2] = HEAP32[$223 + 4 >> 2];
           HEAP32[$201 + 8 >> 2] = HEAP32[$223 + 8 >> 2];
           HEAP32[$201 + 12 >> 2] = HEAP32[$223 + 12 >> 2];
           $224 = $221 + (($220 - $221 >> 4) - 1 << 4) | 0;
           HEAP32[$202 >> 2] = HEAP32[$224 >> 2];
           HEAP32[$202 + 4 >> 2] = HEAP32[$224 + 4 >> 2];
           HEAP32[$202 + 8 >> 2] = HEAP32[$224 + 8 >> 2];
           HEAP32[$202 + 12 >> 2] = HEAP32[$224 + 12 >> 2];
           __ZN11SlicerLayer20findPolygonGapCloserEN10ClipperLib8IntPointES1_($res351, $this, $agg_tmp352, $agg_tmp356);
           $225$0 = HEAP32[$len364 >> 2] | 0;
           $225$1 = HEAP32[$len364 + 4 >> 2] | 0;
           $$etemp$40$1 = 0;
           if (!((($225$1 | 0) > ($$etemp$40$1 | 0) | ($225$1 | 0) == ($$etemp$40$1 | 0) & $225$0 >>> 0 > 0 >>> 0) & (($225$1 | 0) < ($bestResult_sroa_0_2656$1 | 0) | ($225$1 | 0) == ($bestResult_sroa_0_2656$1 | 0) & $225$0 >>> 0 < $bestResult_sroa_0_2656$0 >>> 0))) {
            $bestResult_sroa_0_3$1 = $bestResult_sroa_0_2656$1;
            $bestResult_sroa_0_3$0 = $bestResult_sroa_0_2656$0;
            $bestResult_sroa_1_3 = $bestResult_sroa_1_2655;
            $bestResult_sroa_2_4 = $bestResult_sroa_2_3654;
            $bestResult_sroa_3_3 = $bestResult_sroa_3_2653;
            $bestResult_sroa_4_4_off0 = $bestResult_sroa_4_3_off0652;
            $bestB300_3 = $bestB300_2651;
            $bestA298_3 = $bestA298_2650;
            break;
           }
           $bestResult_sroa_0_3$1 = $225$1;
           $bestResult_sroa_0_3$0 = $225$0;
           $bestResult_sroa_1_3 = HEAP32[$bestResult_sroa_1_8__idx67 >> 2] | 0;
           $bestResult_sroa_2_4 = HEAP32[$bestResult_sroa_2_12__idx74 >> 2] | 0;
           $bestResult_sroa_3_3 = HEAP32[$bestResult_sroa_3_16__idx81 >> 2] | 0;
           $bestResult_sroa_4_4_off0 = (HEAP8[$bestResult_sroa_4_20__idx] & 1) != 0;
           $bestB300_3 = $j337_0657;
           $bestA298_3 = $i303_0;
          }
         } while (0);
         $inc373 = $j337_0657 + 1 | 0;
         $228 = HEAP32[$__begin__i1247 >> 2] | 0;
         if ($inc373 >>> 0 < (((HEAP32[$__end__i1246 >> 2] | 0) - $228 | 0) / 12 & -1) >>> 0) {
          $bestA298_2650 = $bestA298_3;
          $bestB300_2651 = $bestB300_3;
          $bestResult_sroa_4_3_off0652 = $bestResult_sroa_4_4_off0;
          $bestResult_sroa_3_2653 = $bestResult_sroa_3_3;
          $bestResult_sroa_2_3654 = $bestResult_sroa_2_4;
          $bestResult_sroa_1_2655 = $bestResult_sroa_1_3;
          $bestResult_sroa_0_2656$1 = $bestResult_sroa_0_3$1;
          $bestResult_sroa_0_2656$0 = $bestResult_sroa_0_3$0;
          $j337_0657 = $inc373;
          $219 = $228;
         } else {
          $bestResult_sroa_0_4$1 = $bestResult_sroa_0_3$1;
          $bestResult_sroa_0_4$0 = $bestResult_sroa_0_3$0;
          $bestResult_sroa_1_4 = $bestResult_sroa_1_3;
          $bestResult_sroa_2_5 = $bestResult_sroa_2_4;
          $bestResult_sroa_3_4 = $bestResult_sroa_3_3;
          $bestResult_sroa_4_5_off0 = $bestResult_sroa_4_4_off0;
          $bestB300_4 = $bestB300_3;
          $bestA298_4 = $bestA298_3;
          break;
         }
        }
       }
      } while (0);
      $i303_0_be = $i303_0 + 1 | 0;
      $bestResult_sroa_0_0_be$1 = $bestResult_sroa_0_4$1;
      $bestResult_sroa_0_0_be$0 = $bestResult_sroa_0_4$0;
      $bestResult_sroa_1_0_be = $bestResult_sroa_1_4;
      $bestResult_sroa_2_1_be = $bestResult_sroa_2_5;
      $bestResult_sroa_3_0_be = $bestResult_sroa_3_4;
      $bestResult_sroa_4_1_off0_be = $bestResult_sroa_4_5_off0;
      $bestB300_0_be = $bestB300_4;
      $bestA298_0_be = $bestA298_4;
     } else {
      if (($bestResult_sroa_0_0$0 | 0) == (-1 | 0) & ($bestResult_sroa_0_0$1 | 0) == 2147483647) {
       $204 = $207;
       $203 = $206;
       break L3831;
      }
      $cmp384 = ($bestResult_sroa_2_1 | 0) == ($bestResult_sroa_3_0 | 0);
      if (($bestA298_0 | 0) == ($bestB300_0 | 0)) {
       if ($cmp384) {
        $arrayidx_i2728 = $206 + ($bestA298_0 * 12 & -1) | 0;
        $229 = HEAP32[$__end__i3197_pre >> 2] | 0;
        if (($229 | 0) == (HEAP32[$__first__i_i_i_i3202_pre >> 2] | 0)) {
         __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($polygonList243_pre, $arrayidx_i2728);
        } else {
         if (($229 | 0) == 0) {
          $231 = 0;
         } else {
          __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($229, $arrayidx_i2728);
          $231 = HEAP32[$__end__i3197_pre >> 2] | 0;
         }
         HEAP32[$__end__i3197_pre >> 2] = $231 + 12;
        }
        $232 = HEAP32[$__begin__i1247 >> 2] | 0;
        $233 = HEAP32[$232 + ($bestA298_0 * 12 & -1) >> 2] | 0;
        $__end__i_i_i_i2659 = $232 + ($bestA298_0 * 12 & -1) + 4 | 0;
        $234 = HEAP32[$__end__i_i_i_i2659 >> 2] | 0;
        if (($233 | 0) == ($234 | 0)) {
         $i303_0_be = 0;
         $bestResult_sroa_0_0_be$1 = 2147483647;
         $bestResult_sroa_0_0_be$0 = -1;
         $bestResult_sroa_1_0_be = -1;
         $bestResult_sroa_2_1_be = $bestResult_sroa_3_0;
         $bestResult_sroa_3_0_be = -1;
         $bestResult_sroa_4_1_off0_be = $bestResult_sroa_4_1_off0;
         $bestB300_0_be = -1;
         $bestA298_0_be = -1;
         break;
        }
        HEAP32[$__end__i_i_i_i2659 >> 2] = $234 + ((($234 - 16 + (-$233 | 0) | 0) >>> 4 ^ -1) << 4);
        $i303_0_be = 0;
        $bestResult_sroa_0_0_be$1 = 2147483647;
        $bestResult_sroa_0_0_be$0 = -1;
        $bestResult_sroa_1_0_be = -1;
        $bestResult_sroa_2_1_be = $bestResult_sroa_3_0;
        $bestResult_sroa_3_0_be = -1;
        $bestResult_sroa_4_1_off0_be = $bestResult_sroa_4_1_off0;
        $bestB300_0_be = -1;
        $bestA298_0_be = -1;
        break;
       }
       $238 = HEAP32[$__end__i3197_pre >> 2] | 0;
       $sub_ptr_div_i2628 = ($238 - (HEAP32[$__begin__i2624 >> 2] | 0) | 0) / 12 & -1;
       if (!$bestResult_sroa_4_1_off0) {
        $arrayidx_i2163 = $206 + ($bestA298_0 * 12 & -1) | 0;
        if (($238 | 0) == (HEAP32[$__first__i_i_i_i3202_pre >> 2] | 0)) {
         __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($polygonList243_pre, $arrayidx_i2163);
        } else {
         if (($238 | 0) == 0) {
          $284 = 0;
         } else {
          __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($238, $arrayidx_i2163);
          $284 = HEAP32[$__end__i3197_pre >> 2] | 0;
         }
         HEAP32[$__end__i3197_pre >> 2] = $284 + 12;
        }
        $_pre972 = HEAP32[$__begin__i2624 >> 2] | 0;
        $j450_0633 = $bestResult_sroa_3_0;
        $286 = $_pre972;
        $285 = HEAP32[$_pre972 + ($bestResult_sroa_1_0 * 12 & -1) >> 2] | 0;
        do {
         $arrayidx_i2056 = $285 + ($j450_0633 << 4) | 0;
         $__end__i2027 = $286 + ($sub_ptr_div_i2628 * 12 & -1) + 4 | 0;
         $287 = HEAP32[$__end__i2027 >> 2] | 0;
         if (($287 | 0) == (HEAP32[$286 + ($sub_ptr_div_i2628 * 12 & -1) + 8 >> 2] | 0)) {
          __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($286 + ($sub_ptr_div_i2628 * 12 & -1) | 0, $arrayidx_i2056);
         } else {
          if (($287 | 0) == 0) {
           $291 = 0;
          } else {
           $289 = $287;
           $290 = $arrayidx_i2056;
           HEAP32[$289 >> 2] = HEAP32[$290 >> 2];
           HEAP32[$289 + 4 >> 2] = HEAP32[$290 + 4 >> 2];
           HEAP32[$289 + 8 >> 2] = HEAP32[$290 + 8 >> 2];
           HEAP32[$289 + 12 >> 2] = HEAP32[$290 + 12 >> 2];
           $291 = HEAP32[$__end__i2027 >> 2] | 0;
          }
          HEAP32[$__end__i2027 >> 2] = $291 + 16;
         }
         $286 = HEAP32[$__begin__i2624 >> 2] | 0;
         $285 = HEAP32[$286 + ($bestResult_sroa_1_0 * 12 & -1) >> 2] | 0;
         $j450_0633 = (($j450_0633 + 1 | 0) >>> 0) % ((HEAP32[$286 + ($bestResult_sroa_1_0 * 12 & -1) + 4 >> 2] | 0) - $285 >> 4 >>> 0) >>> 0;
        } while (($j450_0633 | 0) != ($bestResult_sroa_2_1 | 0));
        $295 = HEAP32[$__begin__i1247 >> 2] | 0;
        $296 = HEAP32[$295 + ($bestA298_0 * 12 & -1) >> 2] | 0;
        $__end__i_i_i_i1982 = $295 + ($bestA298_0 * 12 & -1) + 4 | 0;
        $297 = HEAP32[$__end__i_i_i_i1982 >> 2] | 0;
        if (($296 | 0) == ($297 | 0)) {
         $i303_0_be = 0;
         $bestResult_sroa_0_0_be$1 = 2147483647;
         $bestResult_sroa_0_0_be$0 = -1;
         $bestResult_sroa_1_0_be = -1;
         $bestResult_sroa_2_1_be = $bestResult_sroa_2_1;
         $bestResult_sroa_3_0_be = -1;
         $bestResult_sroa_4_1_off0_be = 0;
         $bestB300_0_be = -1;
         $bestA298_0_be = -1;
         break;
        }
        HEAP32[$__end__i_i_i_i1982 >> 2] = $297 + ((($297 - 16 + (-$296 | 0) | 0) >>> 4 ^ -1) << 4);
        $i303_0_be = 0;
        $bestResult_sroa_0_0_be$1 = 2147483647;
        $bestResult_sroa_0_0_be$0 = -1;
        $bestResult_sroa_1_0_be = -1;
        $bestResult_sroa_2_1_be = $bestResult_sroa_2_1;
        $bestResult_sroa_3_0_be = -1;
        $bestResult_sroa_4_1_off0_be = 0;
        $bestB300_0_be = -1;
        $bestA298_0_be = -1;
        break;
       }
       HEAP32[$__begin__i_i_i2613 >> 2] = 0;
       HEAP32[$__end__i_i_i2614 >> 2] = 0;
       HEAP32[$__first__i_i_i_i_i_i2620 >> 2] = 0;
       do {
        if (($238 | 0) == (HEAP32[$__first__i_i_i_i3202_pre >> 2] | 0)) {
         __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($polygonList243_pre, $ref_tmp399);
         $_pre1000 = HEAP32[$__begin__i_i_i2613 >> 2] | 0;
         if (($_pre1000 | 0) == 0) {
          break;
         }
         $243 = HEAP32[$__end__i_i_i2614 >> 2] | 0;
         if (($_pre1000 | 0) != ($243 | 0)) {
          HEAP32[$__end__i_i_i2614 >> 2] = $243 + ((($243 - 16 + (-$_pre1000 | 0) | 0) >>> 4 ^ -1) << 4);
         }
         __ZdlPv($_pre1000);
        } else {
         if (($238 | 0) != 0) {
          HEAP32[$238 >> 2] = 0;
          HEAP32[$238 + 4 >> 2] = 0;
          HEAP32[$238 + 8 >> 2] = 0;
         }
         HEAP32[$__end__i3197_pre >> 2] = (HEAP32[$__end__i3197_pre >> 2] | 0) + 12;
        }
       } while (0);
       $_pre968 = HEAP32[$__begin__i2624 >> 2] | 0;
       $j404_0637 = $bestResult_sroa_2_1;
       $249 = $_pre968;
       $248 = HEAP32[$_pre968 + ($bestResult_sroa_1_0 * 12 & -1) >> 2] | 0;
       do {
        $arrayidx_i2463 = $248 + ($j404_0637 << 4) | 0;
        $__end__i2434 = $249 + ($sub_ptr_div_i2628 * 12 & -1) + 4 | 0;
        $250 = HEAP32[$__end__i2434 >> 2] | 0;
        if (($250 | 0) == (HEAP32[$249 + ($sub_ptr_div_i2628 * 12 & -1) + 8 >> 2] | 0)) {
         __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($249 + ($sub_ptr_div_i2628 * 12 & -1) | 0, $arrayidx_i2463);
        } else {
         if (($250 | 0) == 0) {
          $254 = 0;
         } else {
          $252 = $250;
          $253 = $arrayidx_i2463;
          HEAP32[$252 >> 2] = HEAP32[$253 >> 2];
          HEAP32[$252 + 4 >> 2] = HEAP32[$253 + 4 >> 2];
          HEAP32[$252 + 8 >> 2] = HEAP32[$253 + 8 >> 2];
          HEAP32[$252 + 12 >> 2] = HEAP32[$253 + 12 >> 2];
          $254 = HEAP32[$__end__i2434 >> 2] | 0;
         }
         HEAP32[$__end__i2434 >> 2] = $254 + 16;
        }
        $249 = HEAP32[$__begin__i2624 >> 2] | 0;
        $248 = HEAP32[$249 + ($bestResult_sroa_1_0 * 12 & -1) >> 2] | 0;
        $j404_0637 = (($j404_0637 + 1 | 0) >>> 0) % ((HEAP32[$249 + ($bestResult_sroa_1_0 * 12 & -1) + 4 >> 2] | 0) - $248 >> 4 >>> 0) >>> 0;
       } while (($j404_0637 | 0) != ($bestResult_sroa_3_0 | 0));
       $267 = HEAP32[$__begin__i1247 >> 2] | 0;
       $268 = HEAP32[$267 + ($bestA298_0 * 12 & -1) + 4 >> 2] | 0;
       $269 = HEAP32[$267 + ($bestA298_0 * 12 & -1) >> 2] | 0;
       $j423_0638 = ($268 - $269 >> 4) - 1 | 0;
       if (($j423_0638 | 0) > -1) {
        $j423_0640 = $j423_0638;
        $270 = $269;
        do {
         $271 = HEAP32[$__begin__i2624 >> 2] | 0;
         $arrayidx_i2270 = $270 + ($j423_0640 << 4) | 0;
         $__end__i2234 = $271 + ($sub_ptr_div_i2628 * 12 & -1) + 4 | 0;
         $272 = HEAP32[$__end__i2234 >> 2] | 0;
         if (($272 | 0) == (HEAP32[$271 + ($sub_ptr_div_i2628 * 12 & -1) + 8 >> 2] | 0)) {
          __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($271 + ($sub_ptr_div_i2628 * 12 & -1) | 0, $arrayidx_i2270);
         } else {
          if (($272 | 0) == 0) {
           $276 = 0;
          } else {
           $274 = $272;
           $275 = $arrayidx_i2270;
           HEAP32[$274 >> 2] = HEAP32[$275 >> 2];
           HEAP32[$274 + 4 >> 2] = HEAP32[$275 + 4 >> 2];
           HEAP32[$274 + 8 >> 2] = HEAP32[$275 + 8 >> 2];
           HEAP32[$274 + 12 >> 2] = HEAP32[$275 + 12 >> 2];
           $276 = HEAP32[$__end__i2234 >> 2] | 0;
          }
          HEAP32[$__end__i2234 >> 2] = $276 + 16;
         }
         $j423_0640 = $j423_0640 - 1 | 0;
         $_pre1001 = HEAP32[$__begin__i1247 >> 2] | 0;
         $270 = HEAP32[$_pre1001 + ($bestA298_0 * 12 & -1) >> 2] | 0;
        } while (($j423_0640 | 0) > -1);
        $279 = $_pre1001;
        $278 = $270;
        $277 = HEAP32[$_pre1001 + ($bestA298_0 * 12 & -1) + 4 >> 2] | 0;
       } else {
        $279 = $267;
        $278 = $269;
        $277 = $268;
       }
       if (($278 | 0) == ($277 | 0)) {
        $i303_0_be = 0;
        $bestResult_sroa_0_0_be$1 = 2147483647;
        $bestResult_sroa_0_0_be$0 = -1;
        $bestResult_sroa_1_0_be = -1;
        $bestResult_sroa_2_1_be = $bestResult_sroa_2_1;
        $bestResult_sroa_3_0_be = -1;
        $bestResult_sroa_4_1_off0_be = 1;
        $bestB300_0_be = -1;
        $bestA298_0_be = -1;
        break;
       }
       HEAP32[$279 + ($bestA298_0 * 12 & -1) + 4 >> 2] = $277 + ((($277 - 16 + (-$278 | 0) | 0) >>> 4 ^ -1) << 4);
       $i303_0_be = 0;
       $bestResult_sroa_0_0_be$1 = 2147483647;
       $bestResult_sroa_0_0_be$0 = -1;
       $bestResult_sroa_1_0_be = -1;
       $bestResult_sroa_2_1_be = $bestResult_sroa_2_1;
       $bestResult_sroa_3_0_be = -1;
       $bestResult_sroa_4_1_off0_be = 1;
       $bestB300_0_be = -1;
       $bestA298_0_be = -1;
       break;
      }
      if ($cmp384) {
       $302 = HEAP32[$206 + ($bestA298_0 * 12 & -1) >> 2] | 0;
       if ((HEAP32[$206 + ($bestA298_0 * 12 & -1) + 4 >> 2] | 0) == ($302 | 0)) {
        $i303_0_be = 0;
        $bestResult_sroa_0_0_be$1 = 2147483647;
        $bestResult_sroa_0_0_be$0 = -1;
        $bestResult_sroa_1_0_be = -1;
        $bestResult_sroa_2_1_be = $bestResult_sroa_3_0;
        $bestResult_sroa_3_0_be = -1;
        $bestResult_sroa_4_1_off0_be = $bestResult_sroa_4_1_off0;
        $bestB300_0_be = -1;
        $bestA298_0_be = -1;
        break;
       } else {
        $n480_0627 = 0;
        $304 = $206;
        $303 = $302;
       }
       do {
        $arrayidx_i1928 = $303 + ($n480_0627 << 4) | 0;
        $__end__i1899 = $304 + ($bestB300_0 * 12 & -1) + 4 | 0;
        $305 = HEAP32[$__end__i1899 >> 2] | 0;
        if (($305 | 0) == (HEAP32[$304 + ($bestB300_0 * 12 & -1) + 8 >> 2] | 0)) {
         __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($304 + ($bestB300_0 * 12 & -1) | 0, $arrayidx_i1928);
        } else {
         if (($305 | 0) == 0) {
          $309 = 0;
         } else {
          $307 = $305;
          $308 = $arrayidx_i1928;
          HEAP32[$307 >> 2] = HEAP32[$308 >> 2];
          HEAP32[$307 + 4 >> 2] = HEAP32[$308 + 4 >> 2];
          HEAP32[$307 + 8 >> 2] = HEAP32[$308 + 8 >> 2];
          HEAP32[$307 + 12 >> 2] = HEAP32[$308 + 12 >> 2];
          $309 = HEAP32[$__end__i1899 >> 2] | 0;
         }
         HEAP32[$__end__i1899 >> 2] = $309 + 16;
        }
        $n480_0627 = $n480_0627 + 1 | 0;
        $304 = HEAP32[$__begin__i1247 >> 2] | 0;
        $__end__i1941 = $304 + ($bestA298_0 * 12 & -1) + 4 | 0;
        $311 = HEAP32[$__end__i1941 >> 2] | 0;
        $303 = HEAP32[$304 + ($bestA298_0 * 12 & -1) >> 2] | 0;
       } while ($n480_0627 >>> 0 < $311 - $303 >> 4 >>> 0);
       if (($303 | 0) == ($311 | 0)) {
        $i303_0_be = 0;
        $bestResult_sroa_0_0_be$1 = 2147483647;
        $bestResult_sroa_0_0_be$0 = -1;
        $bestResult_sroa_1_0_be = -1;
        $bestResult_sroa_2_1_be = $bestResult_sroa_3_0;
        $bestResult_sroa_3_0_be = -1;
        $bestResult_sroa_4_1_off0_be = $bestResult_sroa_4_1_off0;
        $bestB300_0_be = -1;
        $bestA298_0_be = -1;
        break;
       }
       HEAP32[$__end__i1941 >> 2] = $311 + ((($311 - 16 + (-$303 | 0) | 0) >>> 4 ^ -1) << 4);
       $i303_0_be = 0;
       $bestResult_sroa_0_0_be$1 = 2147483647;
       $bestResult_sroa_0_0_be$0 = -1;
       $bestResult_sroa_1_0_be = -1;
       $bestResult_sroa_2_1_be = $bestResult_sroa_3_0;
       $bestResult_sroa_3_0_be = -1;
       $bestResult_sroa_4_1_off0_be = $bestResult_sroa_4_1_off0;
       $bestB300_0_be = -1;
       $bestA298_0_be = -1;
       break;
      }
      if (!$bestResult_sroa_4_1_off0) {
       $n570_0586 = $bestResult_sroa_3_0;
       $362 = $206;
       $361 = HEAP32[(HEAP32[$__begin__i1810 >> 2] | 0) + ($bestResult_sroa_1_0 * 12 & -1) >> 2] | 0;
       do {
        $arrayidx_i1550 = $361 + ($n570_0586 << 4) | 0;
        $__end__i1521 = $362 + ($bestB300_0 * 12 & -1) + 4 | 0;
        $363 = HEAP32[$__end__i1521 >> 2] | 0;
        if (($363 | 0) == (HEAP32[$362 + ($bestB300_0 * 12 & -1) + 8 >> 2] | 0)) {
         __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($362 + ($bestB300_0 * 12 & -1) | 0, $arrayidx_i1550);
        } else {
         if (($363 | 0) == 0) {
          $367 = 0;
         } else {
          $365 = $363;
          $366 = $arrayidx_i1550;
          HEAP32[$365 >> 2] = HEAP32[$366 >> 2];
          HEAP32[$365 + 4 >> 2] = HEAP32[$366 + 4 >> 2];
          HEAP32[$365 + 8 >> 2] = HEAP32[$366 + 8 >> 2];
          HEAP32[$365 + 12 >> 2] = HEAP32[$366 + 12 >> 2];
          $367 = HEAP32[$__end__i1521 >> 2] | 0;
         }
         HEAP32[$__end__i1521 >> 2] = $367 + 16;
        }
        $368 = HEAP32[$__begin__i1810 >> 2] | 0;
        $361 = HEAP32[$368 + ($bestResult_sroa_1_0 * 12 & -1) >> 2] | 0;
        $n570_0586 = (($n570_0586 + 1 | 0) >>> 0) % ((HEAP32[$368 + ($bestResult_sroa_1_0 * 12 & -1) + 4 >> 2] | 0) - $361 >> 4 >>> 0) >>> 0;
        $362 = HEAP32[$__begin__i1247 >> 2] | 0;
       } while (($n570_0586 | 0) != ($bestResult_sroa_2_1 | 0));
       $373 = HEAP32[$362 + ($bestA298_0 * 12 & -1) >> 2] | 0;
       $n591_0590 = ((HEAP32[$362 + ($bestA298_0 * 12 & -1) + 4 >> 2] | 0) - $373 >> 4) - 1 | 0;
       if (($n591_0590 | 0) > -1) {
        $n591_0593 = $n591_0590;
        $375 = $362;
        $374 = $373;
        while (1) {
         $arrayidx_i1471 = $374 + ($n591_0593 << 4) | 0;
         $__end__i1439 = $375 + ($bestB300_0 * 12 & -1) + 4 | 0;
         $376 = HEAP32[$__end__i1439 >> 2] | 0;
         if (($376 | 0) == (HEAP32[$375 + ($bestB300_0 * 12 & -1) + 8 >> 2] | 0)) {
          __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($375 + ($bestB300_0 * 12 & -1) | 0, $arrayidx_i1471);
         } else {
          if (($376 | 0) == 0) {
           $380 = 0;
          } else {
           $378 = $376;
           $379 = $arrayidx_i1471;
           HEAP32[$378 >> 2] = HEAP32[$379 >> 2];
           HEAP32[$378 + 4 >> 2] = HEAP32[$379 + 4 >> 2];
           HEAP32[$378 + 8 >> 2] = HEAP32[$379 + 8 >> 2];
           HEAP32[$378 + 12 >> 2] = HEAP32[$379 + 12 >> 2];
           $380 = HEAP32[$__end__i1439 >> 2] | 0;
          }
          HEAP32[$__end__i1439 >> 2] = $380 + 16;
         }
         $n591_0 = $n591_0593 - 1 | 0;
         $381 = HEAP32[$__begin__i1247 >> 2] | 0;
         $382 = HEAP32[$381 + ($bestA298_0 * 12 & -1) >> 2] | 0;
         if (($n591_0 | 0) > -1) {
          $n591_0593 = $n591_0;
          $375 = $381;
          $374 = $382;
         } else {
          $_lcssa588 = $381;
          $_lcssa589 = $382;
          break;
         }
        }
       } else {
        $_lcssa588 = $362;
        $_lcssa589 = $373;
       }
       $__end__i_i_i_i1408 = $_lcssa588 + ($bestA298_0 * 12 & -1) + 4 | 0;
       $383 = HEAP32[$__end__i_i_i_i1408 >> 2] | 0;
       if (($_lcssa589 | 0) == ($383 | 0)) {
        $i303_0_be = 0;
        $bestResult_sroa_0_0_be$1 = 2147483647;
        $bestResult_sroa_0_0_be$0 = -1;
        $bestResult_sroa_1_0_be = -1;
        $bestResult_sroa_2_1_be = $bestResult_sroa_2_1;
        $bestResult_sroa_3_0_be = -1;
        $bestResult_sroa_4_1_off0_be = 0;
        $bestB300_0_be = -1;
        $bestA298_0_be = -1;
        break;
       }
       HEAP32[$__end__i_i_i_i1408 >> 2] = $383 + ((($383 - 16 + (-$_lcssa589 | 0) | 0) >>> 4 ^ -1) << 4);
       $i303_0_be = 0;
       $bestResult_sroa_0_0_be$1 = 2147483647;
       $bestResult_sroa_0_0_be$0 = -1;
       $bestResult_sroa_1_0_be = -1;
       $bestResult_sroa_2_1_be = $bestResult_sroa_2_1;
       $bestResult_sroa_3_0_be = -1;
       $bestResult_sroa_4_1_off0_be = 0;
       $bestB300_0_be = -1;
       $bestA298_0_be = -1;
       break;
      }
      HEAP32[$__begin__i_i_i1829 >> 2] = 0;
      HEAP32[$__end__i_i_i1830 >> 2] = 0;
      HEAP32[$__first__i_i_i_i_i_i1836 >> 2] = 0;
      $n504_0598 = $bestResult_sroa_2_1;
      $317 = HEAP32[(HEAP32[$__begin__i1810 >> 2] | 0) + ($bestResult_sroa_1_0 * 12 & -1) >> 2] | 0;
      $316 = 0;
      $315 = 0;
      while (1) {
       $arrayidx_i1806 = $317 + ($n504_0598 << 4) | 0;
       if (($316 | 0) == ($315 | 0)) {
        __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($poly502, $arrayidx_i1806);
       } else {
        if (($316 | 0) != 0) {
         $318 = $316;
         $319 = $arrayidx_i1806;
         HEAP32[$318 >> 2] = HEAP32[$319 >> 2];
         HEAP32[$318 + 4 >> 2] = HEAP32[$319 + 4 >> 2];
         HEAP32[$318 + 8 >> 2] = HEAP32[$319 + 8 >> 2];
         HEAP32[$318 + 12 >> 2] = HEAP32[$319 + 12 >> 2];
        }
        HEAP32[$__end__i_i_i1830 >> 2] = $316 + 16;
       }
       $320 = HEAP32[$__begin__i1810 >> 2] | 0;
       $322 = HEAP32[$320 + ($bestResult_sroa_1_0 * 12 & -1) >> 2] | 0;
       $rem525 = (($n504_0598 + 1 | 0) >>> 0) % ((HEAP32[$320 + ($bestResult_sroa_1_0 * 12 & -1) + 4 >> 2] | 0) - $322 >> 4 >>> 0) >>> 0;
       $_pre975 = HEAP32[$__end__i_i_i1830 >> 2] | 0;
       if (($rem525 | 0) == ($bestResult_sroa_3_0 | 0)) {
        break;
       }
       $n504_0598 = $rem525;
       $317 = $322;
       $316 = $_pre975;
       $315 = HEAP32[$__first__i_i_i_i_i_i1836 >> 2] | 0;
      }
      $_pre976 = HEAP32[$__begin__i_i_i1829 >> 2] | 0;
      $n528_0602 = ($_pre975 - $_pre976 >> 4) - 1 | 0;
      L3958 : do {
       if (($n528_0602 | 0) > -1) {
        $n528_0604 = $n528_0602;
        $332 = $_pre976;
        while (1) {
         $333 = HEAP32[$__begin__i1247 >> 2] | 0;
         $arrayidx_i1728 = $332 + ($n528_0604 << 4) | 0;
         $__end__i1698 = $333 + ($bestB300_0 * 12 & -1) + 4 | 0;
         $334 = HEAP32[$__end__i1698 >> 2] | 0;
         if (($334 | 0) == (HEAP32[$333 + ($bestB300_0 * 12 & -1) + 8 >> 2] | 0)) {
          __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($333 + ($bestB300_0 * 12 & -1) | 0, $arrayidx_i1728);
         } else {
          if (($334 | 0) == 0) {
           $338 = 0;
          } else {
           $336 = $334;
           $337 = $arrayidx_i1728;
           HEAP32[$336 >> 2] = HEAP32[$337 >> 2];
           HEAP32[$336 + 4 >> 2] = HEAP32[$337 + 4 >> 2];
           HEAP32[$336 + 8 >> 2] = HEAP32[$337 + 8 >> 2];
           HEAP32[$336 + 12 >> 2] = HEAP32[$337 + 12 >> 2];
           $338 = HEAP32[$__end__i1698 >> 2] | 0;
          }
          HEAP32[$__end__i1698 >> 2] = $338 + 16;
         }
         $n528_0 = $n528_0604 - 1 | 0;
         if (($n528_0 | 0) <= -1) {
          break L3958;
         }
         $n528_0604 = $n528_0;
         $332 = HEAP32[$__begin__i_i_i1829 >> 2] | 0;
        }
       }
      } while (0);
      $339 = HEAP32[$__begin__i1247 >> 2] | 0;
      $341 = HEAP32[$339 + ($bestA298_0 * 12 & -1) >> 2] | 0;
      do {
       if ((HEAP32[$339 + ($bestA298_0 * 12 & -1) + 4 >> 2] | 0) != ($341 | 0)) {
        $n544_0615 = 0;
        $343 = $339;
        $342 = $341;
        do {
         $arrayidx_i1661 = $342 + ($n544_0615 << 4) | 0;
         $__end__i1631 = $343 + ($bestB300_0 * 12 & -1) + 4 | 0;
         $344 = HEAP32[$__end__i1631 >> 2] | 0;
         if (($344 | 0) == (HEAP32[$343 + ($bestB300_0 * 12 & -1) + 8 >> 2] | 0)) {
          __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($343 + ($bestB300_0 * 12 & -1) | 0, $arrayidx_i1661);
         } else {
          if (($344 | 0) == 0) {
           $348 = 0;
          } else {
           $346 = $344;
           $347 = $arrayidx_i1661;
           HEAP32[$346 >> 2] = HEAP32[$347 >> 2];
           HEAP32[$346 + 4 >> 2] = HEAP32[$347 + 4 >> 2];
           HEAP32[$346 + 8 >> 2] = HEAP32[$347 + 8 >> 2];
           HEAP32[$346 + 12 >> 2] = HEAP32[$347 + 12 >> 2];
           $348 = HEAP32[$__end__i1631 >> 2] | 0;
          }
          HEAP32[$__end__i1631 >> 2] = $348 + 16;
         }
         $n544_0615 = $n544_0615 + 1 | 0;
         $343 = HEAP32[$__begin__i1247 >> 2] | 0;
         $__end__i1674 = $343 + ($bestA298_0 * 12 & -1) + 4 | 0;
         $350 = HEAP32[$__end__i1674 >> 2] | 0;
         $342 = HEAP32[$343 + ($bestA298_0 * 12 & -1) >> 2] | 0;
        } while ($n544_0615 >>> 0 < $350 - $342 >> 4 >>> 0);
        if (($342 | 0) == ($350 | 0)) {
         break;
        }
        HEAP32[$__end__i1674 >> 2] = $350 + ((($350 - 16 + (-$342 | 0) | 0) >>> 4 ^ -1) << 4);
       }
      } while (0);
      $354 = HEAP32[$__begin__i_i_i1829 >> 2] | 0;
      if (($354 | 0) == 0) {
       $i303_0_be = 0;
       $bestResult_sroa_0_0_be$1 = 2147483647;
       $bestResult_sroa_0_0_be$0 = -1;
       $bestResult_sroa_1_0_be = -1;
       $bestResult_sroa_2_1_be = $bestResult_sroa_2_1;
       $bestResult_sroa_3_0_be = -1;
       $bestResult_sroa_4_1_off0_be = 1;
       $bestB300_0_be = -1;
       $bestA298_0_be = -1;
       break;
      }
      $356 = HEAP32[$__end__i_i_i1830 >> 2] | 0;
      if (($354 | 0) != ($356 | 0)) {
       HEAP32[$__end__i_i_i1830 >> 2] = $356 + ((($356 - 16 + (-$354 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($354);
      $i303_0_be = 0;
      $bestResult_sroa_0_0_be$1 = 2147483647;
      $bestResult_sroa_0_0_be$0 = -1;
      $bestResult_sroa_1_0_be = -1;
      $bestResult_sroa_2_1_be = $bestResult_sroa_2_1;
      $bestResult_sroa_3_0_be = -1;
      $bestResult_sroa_4_1_off0_be = 1;
      $bestB300_0_be = -1;
      $bestA298_0_be = -1;
     }
    } while (0);
    $i303_0 = $i303_0_be;
    $bestResult_sroa_0_0$1 = $bestResult_sroa_0_0_be$1;
    $bestResult_sroa_0_0$0 = $bestResult_sroa_0_0_be$0;
    $bestResult_sroa_1_0 = $bestResult_sroa_1_0_be;
    $bestResult_sroa_2_1 = $bestResult_sroa_2_1_be;
    $bestResult_sroa_3_0 = $bestResult_sroa_3_0_be;
    $bestResult_sroa_4_1_off0 = $bestResult_sroa_4_1_off0_be;
    $bestB300_0 = $bestB300_0_be;
    $bestA298_0 = $bestA298_0_be;
    $207 = HEAP32[$__end__i1246 >> 2] | 0;
    $206 = HEAP32[$__begin__i1247 >> 2] | 0;
   }
  } else {
   $204 = $147;
   $203 = $_pre9901008;
  }
 } while (0);
 if (($204 | 0) == ($203 | 0)) {
  $401 = $203;
  $400 = $203;
 } else {
  $q_0582 = 0;
  $i618_0583 = 0;
  $387 = $203;
  $386 = $204;
  while (1) {
   $389 = HEAP32[$387 + ($i618_0583 * 12 & -1) >> 2] | 0;
   if ((HEAP32[$387 + ($i618_0583 * 12 & -1) + 4 >> 2] | 0) - $389 >> 4 >>> 0 < 2) {
    $q_1 = $q_0582;
    $399 = $386;
    $398 = $387;
   } else {
    if (($q_0582 | 0) == 0) {
     _puts(152) | 0;
     $390 = HEAP32[(HEAP32[$__begin__i1247 >> 2] | 0) + ($i618_0583 * 12 & -1) >> 2] | 0;
    } else {
     $390 = $389;
    }
    $X = $390 | 0;
    $conv637 = +((HEAP32[$X >> 2] | 0) >>> 0) + +(HEAP32[$X + 4 >> 2] | 0) * 4294967296.0;
    $Y = $390 + 8 | 0;
    $conv642 = +((HEAP32[$Y >> 2] | 0) >>> 0) + +(HEAP32[$Y + 4 >> 2] | 0) * 4294967296.0;
    _printf(3152, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAPF64[tempInt >> 3] = $conv637, HEAPF64[tempInt + 8 >> 3] = $conv642, tempInt) | 0) | 0;
    $393 = HEAP32[$__begin__i1247 >> 2] | 0;
    $395 = HEAP32[$393 + ($i618_0583 * 12 & -1) >> 2] | 0;
    $sub649 = ((HEAP32[$393 + ($i618_0583 * 12 & -1) + 4 >> 2] | 0) - $395 >> 4) - 1 | 0;
    $X651 = $395 + ($sub649 << 4) | 0;
    $conv653 = +((HEAP32[$X651 >> 2] | 0) >>> 0) + +(HEAP32[$X651 + 4 >> 2] | 0) * 4294967296.0;
    $Y661 = $395 + ($sub649 << 4) + 8 | 0;
    $conv663 = +((HEAP32[$Y661 >> 2] | 0) >>> 0) + +(HEAP32[$Y661 + 4 >> 2] | 0) * 4294967296.0;
    _printf(3136, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAPF64[tempInt >> 3] = $conv653, HEAPF64[tempInt + 8 >> 3] = $conv663, tempInt) | 0) | 0;
    $q_1 = 1;
    $399 = HEAP32[$__end__i1246 >> 2] | 0;
    $398 = HEAP32[$__begin__i1247 >> 2] | 0;
   }
   $inc666 = $i618_0583 + 1 | 0;
   if ($inc666 >>> 0 < (($399 - $398 | 0) / 12 & -1) >>> 0) {
    $q_0582 = $q_1;
    $i618_0583 = $inc666;
    $387 = $398;
    $386 = $399;
   } else {
    $401 = $398;
    $400 = $399;
    break;
   }
  }
 }
 do {
  if ($keepNoneClosed) {
   if (($400 | 0) == ($401 | 0)) {
    break;
   } else {
    $406 = $401;
   }
   do {
    do {
     if ((HEAP32[$406 + 4 >> 2] | 0) != (HEAP32[$406 >> 2] | 0)) {
      $409 = HEAP32[$__end__i3197_pre >> 2] | 0;
      if (($409 | 0) == (HEAP32[$__first__i_i_i_i3202_pre >> 2] | 0)) {
       __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($polygonList243_pre, $406);
       break;
      }
      if (($409 | 0) == 0) {
       $411 = 0;
      } else {
       __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($409, $406);
       $411 = HEAP32[$__end__i3197_pre >> 2] | 0;
      }
      HEAP32[$__end__i3197_pre >> 2] = $411 + 12;
     }
    } while (0);
    $412 = HEAP32[$__begin__i1247 >> 2] | 0;
    $413 = HEAP32[$__end__i1246 >> 2] | 0;
    $__first_addr_i_i_i980_0570 = $412 + 12 | 0;
    if (($__first_addr_i_i_i980_0570 | 0) == ($413 | 0)) {
     $__result_addr_i_i_i982_0_lcssa = $412;
     $419 = $413;
    } else {
     $416 = (($413 - 24 + (-$412 | 0) | 0) >>> 0) / 12 >>> 0;
     $__result_addr_i_i_i982_0572 = $412;
     $__first_addr_i_i_i980_0574 = $__first_addr_i_i_i980_0570;
     while (1) {
      __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($__result_addr_i_i_i982_0572, HEAP32[$__first_addr_i_i_i980_0574 >> 2] | 0, HEAP32[$__result_addr_i_i_i982_0572 + 16 >> 2] | 0);
      $__first_addr_i_i_i980_0 = $__first_addr_i_i_i980_0574 + 12 | 0;
      if (($__first_addr_i_i_i980_0 | 0) == ($413 | 0)) {
       break;
      } else {
       $__result_addr_i_i_i982_0572 = $__result_addr_i_i_i982_0572 + 12 | 0;
       $__first_addr_i_i_i980_0574 = $__first_addr_i_i_i980_0;
      }
     }
     $__result_addr_i_i_i982_0_lcssa = $412 + (($416 + 1 | 0) * 12 & -1) | 0;
     $419 = HEAP32[$__end__i1246 >> 2] | 0;
    }
    if (($__result_addr_i_i_i982_0_lcssa | 0) == ($419 | 0)) {
     $403 = $419;
    } else {
     $420 = $419;
     while (1) {
      $incdec_ptr_i_i_i_i1054 = $420 - 12 | 0;
      HEAP32[$__end__i1246 >> 2] = $incdec_ptr_i_i_i_i1054;
      $421 = HEAP32[$incdec_ptr_i_i_i_i1054 >> 2] | 0;
      $422 = $421;
      if (($421 | 0) == 0) {
       $423 = $incdec_ptr_i_i_i_i1054;
      } else {
       $__end__i_i_i_i_i_i540 = $420 - 12 + 4 | 0;
       $424 = HEAP32[$__end__i_i_i_i_i_i540 >> 2] | 0;
       if (($421 | 0) != ($424 | 0)) {
        HEAP32[$__end__i_i_i_i_i_i540 >> 2] = $424 + ((($424 - 16 + (-$422 | 0) | 0) >>> 4 ^ -1) << 4);
       }
       __ZdlPv($421);
       $423 = HEAP32[$__end__i1246 >> 2] | 0;
      }
      if (($__result_addr_i_i_i982_0_lcssa | 0) == ($423 | 0)) {
       $403 = $__result_addr_i_i_i982_0_lcssa;
       break;
      } else {
       $420 = $423;
      }
     }
    }
    $406 = HEAP32[$__begin__i1247 >> 2] | 0;
   } while (($403 | 0) != ($406 | 0));
  } else {
   if (($401 | 0) == ($400 | 0)) {
    break;
   } else {
    $432 = $400;
   }
   while (1) {
    $incdec_ptr_i_i_i_i928 = $432 - 12 | 0;
    HEAP32[$__end__i1246 >> 2] = $incdec_ptr_i_i_i_i928;
    $433 = HEAP32[$incdec_ptr_i_i_i_i928 >> 2] | 0;
    $434 = $433;
    if (($433 | 0) == 0) {
     $435 = $incdec_ptr_i_i_i_i928;
    } else {
     $__end__i_i_i_i_i_i418 = $432 - 12 + 4 | 0;
     $436 = HEAP32[$__end__i_i_i_i_i_i418 >> 2] | 0;
     if (($433 | 0) != ($436 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i418 >> 2] = $436 + ((($436 - 16 + (-$434 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($433);
     $435 = HEAP32[$__end__i1246 >> 2] | 0;
    }
    if (($401 | 0) == ($435 | 0)) {
     break;
    } else {
     $432 = $435;
    }
   }
  }
 } while (0);
 $429 = HEAP32[$__end__i3197_pre >> 2] | 0;
 $__begin__i889 = $polygonList243_pre | 0;
 $430 = HEAP32[$__begin__i889 >> 2] | 0;
 if (($429 | 0) == ($430 | 0)) {
  __Z16optimizePolygonsRNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEE($polygonList243_pre);
  STACKTOP = __stackBase__;
  return;
 } else {
  $i694_0567 = 0;
  $443 = $430;
  $442 = $429;
  $441 = $429;
 }
 while (1) {
  $445 = HEAP32[$443 + ($i694_0567 * 12 & -1) >> 2] | 0;
  $sub_ptr_div_i880 = (HEAP32[$443 + ($i694_0567 * 12 & -1) + 4 >> 2] | 0) - $445 >> 4;
  $n702_0 = 1;
  $length_0 = 0;
  while (1) {
   if ($n702_0 >>> 0 >= $sub_ptr_div_i880 >>> 0) {
    label = 3651;
    break;
   }
   $sub715 = $n702_0 - 1 | 0;
   $arrayidx_i867_idx = $445 + ($n702_0 << 4) | 0;
   $arrayidx_i867_idx276 = $445 + ($n702_0 << 4) + 8 | 0;
   $arrayidx_i867_idx276_val$0 = HEAP32[$arrayidx_i867_idx276 >> 2] | 0;
   $arrayidx_i867_idx276_val$1 = HEAP32[$arrayidx_i867_idx276 + 4 >> 2] | 0;
   $arrayidx_i857_idx = $445 + ($sub715 << 4) | 0;
   $arrayidx_i857_idx277 = $445 + ($sub715 << 4) + 8 | 0;
   $arrayidx_i857_idx277_val$0 = HEAP32[$arrayidx_i857_idx277 >> 2] | 0;
   $arrayidx_i857_idx277_val$1 = HEAP32[$arrayidx_i857_idx277 + 4 >> 2] | 0;
   $sub_i412$0 = _i64Subtract(HEAP32[$arrayidx_i867_idx >> 2] | 0, HEAP32[$arrayidx_i867_idx + 4 >> 2] | 0, HEAP32[$arrayidx_i857_idx >> 2] | 0, HEAP32[$arrayidx_i857_idx + 4 >> 2] | 0) | 0;
   $sub_i412$1 = tempRet0;
   $sub3_i413$0 = _i64Subtract($arrayidx_i867_idx276_val$0, $arrayidx_i867_idx276_val$1, $arrayidx_i857_idx277_val$0, $arrayidx_i857_idx277_val$1) | 0;
   $sub3_i413$1 = tempRet0;
   $mul_i_i406$0 = ___muldi3($sub_i412$0, $sub_i412$1, $sub_i412$0, $sub_i412$1) | 0;
   $mul_i_i406$1 = tempRet0;
   $mul3_i_i407$0 = ___muldi3($sub3_i413$0, $sub3_i413$1, $sub3_i413$0, $sub3_i413$1) | 0;
   $add_i_i408$0 = _i64Add($mul3_i_i407$0, tempRet0, $mul_i_i406$0, $mul_i_i406$1) | 0;
   $add718 = ~~+Math_sqrt(+(+($add_i_i408$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0)) + $length_0 | 0;
   if (($add718 | 0) > 1e3) {
    $i694_1 = $i694_0567;
    $465 = $442;
    $464 = $443;
    $463 = $441;
    break;
   } else {
    $n702_0 = $n702_0 + 1 | 0;
    $length_0 = $add718;
   }
  }
  do {
   if ((label | 0) == 3651) {
    label = 0;
    if (($length_0 | 0) >= 1e3) {
     $i694_1 = $i694_0567;
     $465 = $442;
     $464 = $443;
     $463 = $441;
     break;
    }
    $add_ptr_i_i = $443 + ($i694_0567 * 12 & -1) | 0;
    $add_ptr_i = $443 + (($i694_0567 + 1 | 0) * 12 & -1) | 0;
    if (($add_ptr_i | 0) == ($442 | 0)) {
     $__result_addr_i_i_i_0_lcssa = $add_ptr_i_i;
     $452 = $441;
    } else {
     $449 = $i694_0567 + ((($442 + ((-2 - $i694_0567 | 0) * 12 & -1) + (-$443 | 0) | 0) >>> 0) / 12 >>> 0) | 0;
     $__result_addr_i_i_i_0559 = $add_ptr_i_i;
     $__first_addr_i_i_i_0560 = $add_ptr_i;
     while (1) {
      __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($__result_addr_i_i_i_0559, HEAP32[$__first_addr_i_i_i_0560 >> 2] | 0, HEAP32[$__first_addr_i_i_i_0560 + 4 >> 2] | 0);
      $incdec_ptr_i_i_i = $__first_addr_i_i_i_0560 + 12 | 0;
      if (($incdec_ptr_i_i_i | 0) == ($442 | 0)) {
       break;
      } else {
       $__result_addr_i_i_i_0559 = $__result_addr_i_i_i_0559 + 12 | 0;
       $__first_addr_i_i_i_0560 = $incdec_ptr_i_i_i;
      }
     }
     $__result_addr_i_i_i_0_lcssa = $443 + (($449 + 1 | 0) * 12 & -1) | 0;
     $452 = HEAP32[$__end__i3197_pre >> 2] | 0;
    }
    if (($__result_addr_i_i_i_0_lcssa | 0) == ($452 | 0)) {
     $462 = $452;
    } else {
     $453 = $452;
     while (1) {
      $incdec_ptr_i_i_i_i = $453 - 12 | 0;
      HEAP32[$__end__i3197_pre >> 2] = $incdec_ptr_i_i_i_i;
      $454 = HEAP32[$incdec_ptr_i_i_i_i >> 2] | 0;
      $455 = $454;
      if (($454 | 0) == 0) {
       $456 = $incdec_ptr_i_i_i_i;
      } else {
       $__end__i_i_i_i_i_i = $453 - 12 + 4 | 0;
       $457 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
       if (($454 | 0) != ($457 | 0)) {
        HEAP32[$__end__i_i_i_i_i_i >> 2] = $457 + ((($457 - 16 + (-$455 | 0) | 0) >>> 4 ^ -1) << 4);
       }
       __ZdlPv($454);
       $456 = HEAP32[$__end__i3197_pre >> 2] | 0;
      }
      if (($__result_addr_i_i_i_0_lcssa | 0) == ($456 | 0)) {
       $462 = $__result_addr_i_i_i_0_lcssa;
       break;
      } else {
       $453 = $456;
      }
     }
    }
    $i694_1 = $i694_0567 - 1 | 0;
    $465 = $__result_addr_i_i_i_0_lcssa;
    $464 = HEAP32[$__begin__i889 >> 2] | 0;
    $463 = $462;
   }
  } while (0);
  $inc736 = $i694_1 + 1 | 0;
  if ($inc736 >>> 0 < (($465 - $464 | 0) / 12 & -1) >>> 0) {
   $i694_0567 = $inc736;
   $443 = $464;
   $442 = $465;
   $441 = $463;
  } else {
   break;
  }
 }
 __Z16optimizePolygonsRNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEE($polygonList243_pre);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_($__root, $__x) {
 $__root = $__root | 0;
 $__x = $__x | 0;
 var $cmp = 0, $__x_addr_090 = 0, $__parent_ = 0, $0 = 0, $__is_black_2 = 0, $__parent__i = 0, $3 = 0, $4 = 0, $5 = 0, $__is_black_9 = 0, $__right__i = 0, $9 = 0, $__left__i42 = 0, $10 = 0, $11 = 0, $__parent_6_i = 0, $12 = 0, $__left__i_i = 0, $14 = 0, $15 = 0, $__left__i72 = 0, $16 = 0, $__right__i73 = 0, $17 = 0, $__parent_5_i77 = 0, $19 = 0, $__left__i_i79 = 0, $__is_black_38 = 0, $__left__i61 = 0, $__right__i60 = 0, $24 = 0, $25 = 0, $26 = 0, $__left__i_i66 = 0, $28 = 0, $29 = 0, $__right__i45 = 0, $30 = 0, $__left__i46 = 0, $31 = 0, $__parent_5_i50 = 0, $33 = 0, $__left__i_i52 = 0, label = 0;
 $cmp = ($__x | 0) == ($__root | 0);
 HEAP8[$__x + 12 | 0] = $cmp & 1;
 if ($cmp) {
  return;
 } else {
  $__x_addr_090 = $__x;
 }
 while (1) {
  $__parent_ = $__x_addr_090 + 8 | 0;
  $0 = HEAP32[$__parent_ >> 2] | 0;
  $__is_black_2 = $0 + 12 | 0;
  if ((HEAP8[$__is_black_2] & 1) != 0) {
   label = 3705;
   break;
  }
  $__parent__i = $0 + 8 | 0;
  $3 = HEAP32[$__parent__i >> 2] | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($0 | 0) == ($4 | 0)) {
   $5 = HEAP32[$3 + 4 >> 2] | 0;
   if (($5 | 0) == 0) {
    label = 3674;
    break;
   }
   $__is_black_9 = $5 + 12 | 0;
   if ((HEAP8[$__is_black_9] & 1) != 0) {
    label = 3674;
    break;
   }
   HEAP8[$__is_black_2] = 1;
   HEAP8[$3 + 12 | 0] = ($3 | 0) == ($__root | 0) & 1;
   HEAP8[$__is_black_9] = 1;
  } else {
   if (($4 | 0) == 0) {
    label = 3691;
    break;
   }
   $__is_black_38 = $4 + 12 | 0;
   if ((HEAP8[$__is_black_38] & 1) != 0) {
    label = 3691;
    break;
   }
   HEAP8[$__is_black_2] = 1;
   HEAP8[$3 + 12 | 0] = ($3 | 0) == ($__root | 0) & 1;
   HEAP8[$__is_black_38] = 1;
  }
  if (($3 | 0) == ($__root | 0)) {
   label = 3706;
   break;
  } else {
   $__x_addr_090 = $3;
  }
 }
 if ((label | 0) == 3674) {
  if (($__x_addr_090 | 0) == (HEAP32[$0 >> 2] | 0)) {
   $15 = $0;
   $14 = $3;
  } else {
   $__right__i = $0 + 4 | 0;
   $9 = HEAP32[$__right__i >> 2] | 0;
   $__left__i42 = $9 | 0;
   $10 = HEAP32[$__left__i42 >> 2] | 0;
   HEAP32[$__right__i >> 2] = $10;
   if (($10 | 0) == 0) {
    $11 = $3;
   } else {
    HEAP32[$10 + 8 >> 2] = $0;
    $11 = HEAP32[$__parent__i >> 2] | 0;
   }
   $__parent_6_i = $9 + 8 | 0;
   HEAP32[$__parent_6_i >> 2] = $11;
   $12 = HEAP32[$__parent__i >> 2] | 0;
   $__left__i_i = $12 | 0;
   if ((HEAP32[$__left__i_i >> 2] | 0) == ($0 | 0)) {
    HEAP32[$__left__i_i >> 2] = $9;
   } else {
    HEAP32[$12 + 4 >> 2] = $9;
   }
   HEAP32[$__left__i42 >> 2] = $0;
   HEAP32[$__parent__i >> 2] = $9;
   $15 = $9;
   $14 = HEAP32[$__parent_6_i >> 2] | 0;
  }
  HEAP8[$15 + 12 | 0] = 1;
  HEAP8[$14 + 12 | 0] = 0;
  $__left__i72 = $14 | 0;
  $16 = HEAP32[$__left__i72 >> 2] | 0;
  $__right__i73 = $16 + 4 | 0;
  $17 = HEAP32[$__right__i73 >> 2] | 0;
  HEAP32[$__left__i72 >> 2] = $17;
  if (($17 | 0) != 0) {
   HEAP32[$17 + 8 >> 2] = $14;
  }
  $__parent_5_i77 = $14 + 8 | 0;
  HEAP32[$16 + 8 >> 2] = HEAP32[$__parent_5_i77 >> 2];
  $19 = HEAP32[$__parent_5_i77 >> 2] | 0;
  $__left__i_i79 = $19 | 0;
  if ((HEAP32[$__left__i_i79 >> 2] | 0) == ($14 | 0)) {
   HEAP32[$__left__i_i79 >> 2] = $16;
  } else {
   HEAP32[$19 + 4 >> 2] = $16;
  }
  HEAP32[$__right__i73 >> 2] = $14;
  HEAP32[$__parent_5_i77 >> 2] = $16;
  return;
 } else if ((label | 0) == 3691) {
  $__left__i61 = $0 | 0;
  if (($__x_addr_090 | 0) == (HEAP32[$__left__i61 >> 2] | 0)) {
   $__right__i60 = $__x_addr_090 + 4 | 0;
   $24 = HEAP32[$__right__i60 >> 2] | 0;
   HEAP32[$__left__i61 >> 2] = $24;
   if (($24 | 0) == 0) {
    $25 = $3;
   } else {
    HEAP32[$24 + 8 >> 2] = $0;
    $25 = HEAP32[$__parent__i >> 2] | 0;
   }
   HEAP32[$__parent_ >> 2] = $25;
   $26 = HEAP32[$__parent__i >> 2] | 0;
   $__left__i_i66 = $26 | 0;
   if ((HEAP32[$__left__i_i66 >> 2] | 0) == ($0 | 0)) {
    HEAP32[$__left__i_i66 >> 2] = $__x_addr_090;
   } else {
    HEAP32[$26 + 4 >> 2] = $__x_addr_090;
   }
   HEAP32[$__right__i60 >> 2] = $0;
   HEAP32[$__parent__i >> 2] = $__x_addr_090;
   $29 = $__x_addr_090;
   $28 = HEAP32[$__parent_ >> 2] | 0;
  } else {
   $29 = $0;
   $28 = $3;
  }
  HEAP8[$29 + 12 | 0] = 1;
  HEAP8[$28 + 12 | 0] = 0;
  $__right__i45 = $28 + 4 | 0;
  $30 = HEAP32[$__right__i45 >> 2] | 0;
  $__left__i46 = $30 | 0;
  $31 = HEAP32[$__left__i46 >> 2] | 0;
  HEAP32[$__right__i45 >> 2] = $31;
  if (($31 | 0) != 0) {
   HEAP32[$31 + 8 >> 2] = $28;
  }
  $__parent_5_i50 = $28 + 8 | 0;
  HEAP32[$30 + 8 >> 2] = HEAP32[$__parent_5_i50 >> 2];
  $33 = HEAP32[$__parent_5_i50 >> 2] | 0;
  $__left__i_i52 = $33 | 0;
  if ((HEAP32[$__left__i_i52 >> 2] | 0) == ($28 | 0)) {
   HEAP32[$__left__i_i52 >> 2] = $30;
  } else {
   HEAP32[$33 + 4 >> 2] = $30;
  }
  HEAP32[$__left__i46 >> 2] = $28;
  HEAP32[$__parent_5_i50 >> 2] = $30;
  return;
 } else if ((label | 0) == 3705) {
  return;
 } else if ((label | 0) == 3706) {
  return;
 }
}
function __ZN11SlicerLayer20findPolygonGapCloserEN10ClipperLib8IntPointES1_($agg_result, $this, $ip0, $ip1) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $ip0 = $ip0 | 0;
 $ip1 = $ip1 | 0;
 var $c1 = 0, $agg_tmp = 0, $c2 = 0, $agg_tmp2 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $len = 0, $6 = 0, $7 = 0, $AtoB = 0, $ip0_idx30 = 0, $ip0_idx31 = 0, $ip0_idx31_val$0 = 0, $ip0_idx31_val$1 = 0, $ip1_idx32 = 0, $ip1_idx33 = 0, $ip1_idx33_val$0 = 0, $ip1_idx33_val$1 = 0, $sub_i$0 = 0, $sub_i$1 = 0, $sub3_i$0 = 0, $sub3_i$1 = 0, $mul_i_i41$0 = 0, $mul_i_i41$1 = 0, $mul3_i_i42$0 = 0, $add_i_i43$0 = 0, $conv2_i46 = 0, $len13 = 0, $8 = 0, $9 = 0, $p0_sroa_0_0__idx116 = 0, $p0_sroa_0_0_copyload117$0 = 0, $p0_sroa_0_0_copyload117$1 = 0, $p0_sroa_1_8__idx124 = 0, $p0_sroa_1_8_copyload125$0 = 0, $p0_sroa_1_8_copyload125$1 = 0, $ip0_idx28 = 0, $ip0_idx28_val$0 = 0, $ip0_idx28_val$1 = 0, $ip0_idx29 = 0, $ip0_idx29_val$0 = 0, $ip0_idx29_val$1 = 0, $sub_i47$0 = 0, $sub_i47$1 = 0, $sub3_i48$0 = 0, $sub3_i48$1 = 0, $mul_i_i61$0 = 0, $mul_i_i61$1 = 0, $mul3_i_i62$0 = 0, $add_i_i63$0 = 0, $conv2_i66 = 0, $sub_ptr_div_i129 = 0, $p1_sroa_1_8_copyload110$0 = 0, $p1_sroa_1_8_copyload110$1 = 0, $p1_sroa_0_0_copyload107$0 = 0, $p1_sroa_0_0_copyload107$1 = 0, $i_0141 = 0, $lenA_0140$0 = 0, $lenA_0140$1 = 0, $p0_sroa_0_0_copyload117126139$0 = 0, $p0_sroa_0_0_copyload117126139$1 = 0, $p0_sroa_1_8_copyload125128138$0 = 0, $p0_sroa_1_8_copyload125128138$1 = 0, $sub_i67$0 = 0, $sub_i67$1 = 0, $sub3_i68$0 = 0, $sub3_i68$1 = 0, $mul_i_i81$0 = 0, $mul_i_i81$1 = 0, $mul3_i_i82$0 = 0, $add_i_i83$0 = 0, $conv2_i86 = 0, $add$0 = 0, $add$1 = 0, $rem = 0, $p1_sroa_0_0__idx106_phi_trans_insert = 0, $p1_sroa_1_8__idx109_phi_trans_insert = 0, $ip1_idx21 = 0, $ip1_idx21_val$0 = 0, $ip1_idx21_val$1 = 0, $ip1_idx22 = 0, $ip1_idx22_val$0 = 0, $ip1_idx22_val$1 = 0, $sub_i87$0 = 0, $sub_i87$1 = 0, $sub3_i88$0 = 0, $sub3_i88$1 = 0, $mul_i_i95$0 = 0, $mul_i_i95$1 = 0, $mul3_i_i96$0 = 0, $add_i_i97$0 = 0, $conv2_i100 = 0, $add39$0 = 0, $add39$1 = 0, $p0_sroa_0_0__idx = 0, $p0_sroa_0_0_copyload$0 = 0, $p0_sroa_0_0_copyload$1 = 0, $p0_sroa_1_8__idx123 = 0, $p0_sroa_1_8_copyload$0 = 0, $p0_sroa_1_8_copyload$1 = 0, $sub_i91$0 = 0, $sub_i91$1 = 0, $sub3_i92$0 = 0, $sub3_i92$1 = 0, $mul_i_i75$0 = 0, $mul_i_i75$1 = 0, $mul3_i_i76$0 = 0, $add_i_i77$0 = 0, $conv2_i80 = 0, $sub_ptr_div_i = 0, $p154_sroa_1_8_copyload105$0 = 0, $p154_sroa_1_8_copyload105$1 = 0, $p154_sroa_0_0_copyload102$0 = 0, $p154_sroa_0_0_copyload102$1 = 0, $i48_0134 = 0, $lenB_0133$0 = 0, $lenB_0133$1 = 0, $p0_sroa_0_0_copyload117127132$0 = 0, $p0_sroa_0_0_copyload117127132$1 = 0, $p0_sroa_1_8_copyload125129131$0 = 0, $p0_sroa_1_8_copyload125129131$1 = 0, $sub_i71$0 = 0, $sub_i71$1 = 0, $sub3_i72$0 = 0, $sub3_i72$1 = 0, $mul_i_i55$0 = 0, $mul_i_i55$1 = 0, $mul3_i_i56$0 = 0, $add_i_i57$0 = 0, $conv2_i60 = 0, $add62$0 = 0, $add62$1 = 0, $rem69 = 0, $p154_sroa_0_0__idx101_phi_trans_insert = 0, $p154_sroa_1_8__idx104_phi_trans_insert = 0, $sub_i51$0 = 0, $sub_i51$1 = 0, $sub3_i52$0 = 0, $sub3_i52$1 = 0, $mul_i_i$0 = 0, $mul_i_i$1 = 0, $mul3_i_i$0 = 0, $add_i_i$0 = 0, $conv2_i = 0, $add74$0 = 0, $add74$1 = 0, $len78 = 0, $len81 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 tempParam = $ip0;
 $ip0 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[$ip0 >> 2] = HEAP32[tempParam >> 2];
 HEAP32[$ip0 + 4 >> 2] = HEAP32[tempParam + 4 >> 2];
 HEAP32[$ip0 + 8 >> 2] = HEAP32[tempParam + 8 >> 2];
 HEAP32[$ip0 + 12 >> 2] = HEAP32[tempParam + 12 >> 2];
 tempParam = $ip1;
 $ip1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[$ip1 >> 2] = HEAP32[tempParam >> 2];
 HEAP32[$ip1 + 4 >> 2] = HEAP32[tempParam + 4 >> 2];
 HEAP32[$ip1 + 8 >> 2] = HEAP32[tempParam + 8 >> 2];
 HEAP32[$ip1 + 12 >> 2] = HEAP32[tempParam + 12 >> 2];
 $c1 = __stackBase__ | 0;
 $agg_tmp = __stackBase__ + 24 | 0;
 $c2 = __stackBase__ + 40 | 0;
 $agg_tmp2 = __stackBase__ + 64 | 0;
 $0 = $agg_tmp;
 $1 = $ip0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$0 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
 __ZN11SlicerLayer25findPolygonPointClosestToEN10ClipperLib8IntPointE($c1, $this, $agg_tmp);
 $2 = $agg_tmp2;
 $3 = $ip1;
 HEAP32[$2 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 HEAP32[$2 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
 HEAP32[$2 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
 __ZN11SlicerLayer25findPolygonPointClosestToEN10ClipperLib8IntPointE($c2, $this, $agg_tmp2);
 $4 = HEAP32[$c1 + 16 >> 2] | 0;
 do {
  if (($4 | 0) >= 0) {
   if (($4 | 0) != (HEAP32[$c2 + 16 >> 2] | 0)) {
    break;
   }
   HEAP32[$agg_result + 8 >> 2] = $4;
   $6 = HEAP32[$c1 + 20 >> 2] | 0;
   HEAP32[$agg_result + 12 >> 2] = $6;
   $7 = HEAP32[$c2 + 20 >> 2] | 0;
   HEAP32[$agg_result + 16 >> 2] = $7;
   $AtoB = $agg_result + 20 | 0;
   HEAP8[$AtoB] = 1;
   if (($6 | 0) == ($7 | 0)) {
    $ip0_idx30 = $ip0 | 0;
    $ip0_idx31 = $ip0 + 8 | 0;
    $ip0_idx31_val$0 = HEAP32[$ip0_idx31 >> 2] | 0;
    $ip0_idx31_val$1 = HEAP32[$ip0_idx31 + 4 >> 2] | 0;
    $ip1_idx32 = $ip1 | 0;
    $ip1_idx33 = $ip1 + 8 | 0;
    $ip1_idx33_val$0 = HEAP32[$ip1_idx33 >> 2] | 0;
    $ip1_idx33_val$1 = HEAP32[$ip1_idx33 + 4 >> 2] | 0;
    $sub_i$0 = _i64Subtract(HEAP32[$ip0_idx30 >> 2] | 0, HEAP32[$ip0_idx30 + 4 >> 2] | 0, HEAP32[$ip1_idx32 >> 2] | 0, HEAP32[$ip1_idx32 + 4 >> 2] | 0) | 0;
    $sub_i$1 = tempRet0;
    $sub3_i$0 = _i64Subtract($ip0_idx31_val$0, $ip0_idx31_val$1, $ip1_idx33_val$0, $ip1_idx33_val$1) | 0;
    $sub3_i$1 = tempRet0;
    $mul_i_i41$0 = ___muldi3($sub_i$0, $sub_i$1, $sub_i$0, $sub_i$1) | 0;
    $mul_i_i41$1 = tempRet0;
    $mul3_i_i42$0 = ___muldi3($sub3_i$0, $sub3_i$1, $sub3_i$0, $sub3_i$1) | 0;
    $add_i_i43$0 = _i64Add($mul3_i_i42$0, tempRet0, $mul_i_i41$0, $mul_i_i41$1) | 0;
    $conv2_i46 = ~~+Math_sqrt(+(+($add_i_i43$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0));
    $len13 = $agg_result | 0;
    HEAP32[$len13 >> 2] = $conv2_i46;
    HEAP32[$len13 + 4 >> 2] = ($conv2_i46 | 0) < 0 ? -1 : 0;
    STACKTOP = __stackBase__;
    return;
   }
   $8 = HEAP32[$this + 24 >> 2] | 0;
   $9 = HEAP32[$8 + ($4 * 12 & -1) >> 2] | 0;
   $p0_sroa_0_0__idx116 = $9 + ($6 << 4) | 0;
   $p0_sroa_0_0_copyload117$0 = HEAP32[$p0_sroa_0_0__idx116 >> 2] | 0;
   $p0_sroa_0_0_copyload117$1 = HEAP32[$p0_sroa_0_0__idx116 + 4 >> 2] | 0;
   $p0_sroa_1_8__idx124 = $9 + ($6 << 4) + 8 | 0;
   $p0_sroa_1_8_copyload125$0 = HEAP32[$p0_sroa_1_8__idx124 >> 2] | 0;
   $p0_sroa_1_8_copyload125$1 = HEAP32[$p0_sroa_1_8__idx124 + 4 >> 2] | 0;
   $ip0_idx28 = $ip0 | 0;
   $ip0_idx28_val$0 = HEAP32[$ip0_idx28 >> 2] | 0;
   $ip0_idx28_val$1 = HEAP32[$ip0_idx28 + 4 >> 2] | 0;
   $ip0_idx29 = $ip0 + 8 | 0;
   $ip0_idx29_val$0 = HEAP32[$ip0_idx29 >> 2] | 0;
   $ip0_idx29_val$1 = HEAP32[$ip0_idx29 + 4 >> 2] | 0;
   $sub_i47$0 = _i64Subtract($p0_sroa_0_0_copyload117$0, $p0_sroa_0_0_copyload117$1, $ip0_idx28_val$0, $ip0_idx28_val$1) | 0;
   $sub_i47$1 = tempRet0;
   $sub3_i48$0 = _i64Subtract($p0_sroa_1_8_copyload125$0, $p0_sroa_1_8_copyload125$1, $ip0_idx29_val$0, $ip0_idx29_val$1) | 0;
   $sub3_i48$1 = tempRet0;
   $mul_i_i61$0 = ___muldi3($sub_i47$0, $sub_i47$1, $sub_i47$0, $sub_i47$1) | 0;
   $mul_i_i61$1 = tempRet0;
   $mul3_i_i62$0 = ___muldi3($sub3_i48$0, $sub3_i48$1, $sub3_i48$0, $sub3_i48$1) | 0;
   $add_i_i63$0 = _i64Add($mul3_i_i62$0, tempRet0, $mul_i_i61$0, $mul_i_i61$1) | 0;
   $conv2_i66 = ~~+Math_sqrt(+(+($add_i_i63$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0));
   $sub_ptr_div_i129 = (HEAP32[$8 + ($4 * 12 & -1) + 4 >> 2] | 0) - $9 >> 4;
   $p0_sroa_1_8_copyload125128138$1 = $p0_sroa_1_8_copyload125$1;
   $p0_sroa_1_8_copyload125128138$0 = $p0_sroa_1_8_copyload125$0;
   $p0_sroa_0_0_copyload117126139$1 = $p0_sroa_0_0_copyload117$1;
   $p0_sroa_0_0_copyload117126139$0 = $p0_sroa_0_0_copyload117$0;
   $lenA_0140$1 = ($conv2_i66 | 0) < 0 ? -1 : 0;
   $lenA_0140$0 = $conv2_i66;
   $i_0141 = $6;
   $p1_sroa_0_0_copyload107$1 = $p0_sroa_0_0_copyload117$1;
   $p1_sroa_0_0_copyload107$0 = $p0_sroa_0_0_copyload117$0;
   $p1_sroa_1_8_copyload110$1 = $p0_sroa_1_8_copyload125$1;
   $p1_sroa_1_8_copyload110$0 = $p0_sroa_1_8_copyload125$0;
   while (1) {
    $sub_i67$0 = _i64Subtract($p0_sroa_0_0_copyload117126139$0, $p0_sroa_0_0_copyload117126139$1, $p1_sroa_0_0_copyload107$0, $p1_sroa_0_0_copyload107$1) | 0;
    $sub_i67$1 = tempRet0;
    $sub3_i68$0 = _i64Subtract($p0_sroa_1_8_copyload125128138$0, $p0_sroa_1_8_copyload125128138$1, $p1_sroa_1_8_copyload110$0, $p1_sroa_1_8_copyload110$1) | 0;
    $sub3_i68$1 = tempRet0;
    $mul_i_i81$0 = ___muldi3($sub_i67$0, $sub_i67$1, $sub_i67$0, $sub_i67$1) | 0;
    $mul_i_i81$1 = tempRet0;
    $mul3_i_i82$0 = ___muldi3($sub3_i68$0, $sub3_i68$1, $sub3_i68$0, $sub3_i68$1) | 0;
    $add_i_i83$0 = _i64Add($mul3_i_i82$0, tempRet0, $mul_i_i81$0, $mul_i_i81$1) | 0;
    $conv2_i86 = ~~+Math_sqrt(+(+($add_i_i83$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0));
    $add$0 = _i64Add($conv2_i86, ($conv2_i86 | 0) < 0 ? -1 : 0, $lenA_0140$0, $lenA_0140$1) | 0;
    $add$1 = tempRet0;
    $rem = (($i_0141 + 1 | 0) >>> 0) % ($sub_ptr_div_i129 >>> 0) >>> 0;
    if (($rem | 0) == ($7 | 0)) {
     break;
    }
    $p1_sroa_0_0__idx106_phi_trans_insert = $9 + ($rem << 4) | 0;
    $p1_sroa_1_8__idx109_phi_trans_insert = $9 + ($rem << 4) + 8 | 0;
    $p0_sroa_1_8_copyload125128138$1 = $p1_sroa_1_8_copyload110$1;
    $p0_sroa_1_8_copyload125128138$0 = $p1_sroa_1_8_copyload110$0;
    $p0_sroa_0_0_copyload117126139$1 = $p1_sroa_0_0_copyload107$1;
    $p0_sroa_0_0_copyload117126139$0 = $p1_sroa_0_0_copyload107$0;
    $lenA_0140$1 = $add$1;
    $lenA_0140$0 = $add$0;
    $i_0141 = $rem;
    $p1_sroa_0_0_copyload107$1 = HEAP32[$p1_sroa_0_0__idx106_phi_trans_insert + 4 >> 2] | 0;
    $p1_sroa_0_0_copyload107$0 = HEAP32[$p1_sroa_0_0__idx106_phi_trans_insert >> 2] | 0;
    $p1_sroa_1_8_copyload110$1 = HEAP32[$p1_sroa_1_8__idx109_phi_trans_insert + 4 >> 2] | 0;
    $p1_sroa_1_8_copyload110$0 = HEAP32[$p1_sroa_1_8__idx109_phi_trans_insert >> 2] | 0;
   }
   $ip1_idx21 = $ip1 | 0;
   $ip1_idx21_val$0 = HEAP32[$ip1_idx21 >> 2] | 0;
   $ip1_idx21_val$1 = HEAP32[$ip1_idx21 + 4 >> 2] | 0;
   $ip1_idx22 = $ip1 + 8 | 0;
   $ip1_idx22_val$0 = HEAP32[$ip1_idx22 >> 2] | 0;
   $ip1_idx22_val$1 = HEAP32[$ip1_idx22 + 4 >> 2] | 0;
   $sub_i87$0 = _i64Subtract($p1_sroa_0_0_copyload107$0, $p1_sroa_0_0_copyload107$1, $ip1_idx21_val$0, $ip1_idx21_val$1) | 0;
   $sub_i87$1 = tempRet0;
   $sub3_i88$0 = _i64Subtract($p1_sroa_1_8_copyload110$0, $p1_sroa_1_8_copyload110$1, $ip1_idx22_val$0, $ip1_idx22_val$1) | 0;
   $sub3_i88$1 = tempRet0;
   $mul_i_i95$0 = ___muldi3($sub_i87$0, $sub_i87$1, $sub_i87$0, $sub_i87$1) | 0;
   $mul_i_i95$1 = tempRet0;
   $mul3_i_i96$0 = ___muldi3($sub3_i88$0, $sub3_i88$1, $sub3_i88$0, $sub3_i88$1) | 0;
   $add_i_i97$0 = _i64Add($mul3_i_i96$0, tempRet0, $mul_i_i95$0, $mul_i_i95$1) | 0;
   $conv2_i100 = ~~+Math_sqrt(+(+($add_i_i97$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0));
   $add39$0 = _i64Add($conv2_i100, ($conv2_i100 | 0) < 0 ? -1 : 0, $add$0, $add$1) | 0;
   $add39$1 = tempRet0;
   $p0_sroa_0_0__idx = $9 + ($7 << 4) | 0;
   $p0_sroa_0_0_copyload$0 = HEAP32[$p0_sroa_0_0__idx >> 2] | 0;
   $p0_sroa_0_0_copyload$1 = HEAP32[$p0_sroa_0_0__idx + 4 >> 2] | 0;
   $p0_sroa_1_8__idx123 = $9 + ($7 << 4) + 8 | 0;
   $p0_sroa_1_8_copyload$0 = HEAP32[$p0_sroa_1_8__idx123 >> 2] | 0;
   $p0_sroa_1_8_copyload$1 = HEAP32[$p0_sroa_1_8__idx123 + 4 >> 2] | 0;
   $sub_i91$0 = _i64Subtract($p0_sroa_0_0_copyload$0, $p0_sroa_0_0_copyload$1, $ip1_idx21_val$0, $ip1_idx21_val$1) | 0;
   $sub_i91$1 = tempRet0;
   $sub3_i92$0 = _i64Subtract($p0_sroa_1_8_copyload$0, $p0_sroa_1_8_copyload$1, $ip1_idx22_val$0, $ip1_idx22_val$1) | 0;
   $sub3_i92$1 = tempRet0;
   $mul_i_i75$0 = ___muldi3($sub_i91$0, $sub_i91$1, $sub_i91$0, $sub_i91$1) | 0;
   $mul_i_i75$1 = tempRet0;
   $mul3_i_i76$0 = ___muldi3($sub3_i92$0, $sub3_i92$1, $sub3_i92$0, $sub3_i92$1) | 0;
   $add_i_i77$0 = _i64Add($mul3_i_i76$0, tempRet0, $mul_i_i75$0, $mul_i_i75$1) | 0;
   $conv2_i80 = ~~+Math_sqrt(+(+($add_i_i77$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0));
   $sub_ptr_div_i = (HEAP32[$8 + ($4 * 12 & -1) + 4 >> 2] | 0) - $9 >> 4;
   $p0_sroa_1_8_copyload125129131$1 = $p0_sroa_1_8_copyload$1;
   $p0_sroa_1_8_copyload125129131$0 = $p0_sroa_1_8_copyload$0;
   $p0_sroa_0_0_copyload117127132$1 = $p0_sroa_0_0_copyload$1;
   $p0_sroa_0_0_copyload117127132$0 = $p0_sroa_0_0_copyload$0;
   $lenB_0133$1 = ($conv2_i80 | 0) < 0 ? -1 : 0;
   $lenB_0133$0 = $conv2_i80;
   $i48_0134 = $7;
   $p154_sroa_0_0_copyload102$1 = $p0_sroa_0_0_copyload$1;
   $p154_sroa_0_0_copyload102$0 = $p0_sroa_0_0_copyload$0;
   $p154_sroa_1_8_copyload105$1 = $p0_sroa_1_8_copyload$1;
   $p154_sroa_1_8_copyload105$0 = $p0_sroa_1_8_copyload$0;
   while (1) {
    $sub_i71$0 = _i64Subtract($p0_sroa_0_0_copyload117127132$0, $p0_sroa_0_0_copyload117127132$1, $p154_sroa_0_0_copyload102$0, $p154_sroa_0_0_copyload102$1) | 0;
    $sub_i71$1 = tempRet0;
    $sub3_i72$0 = _i64Subtract($p0_sroa_1_8_copyload125129131$0, $p0_sroa_1_8_copyload125129131$1, $p154_sroa_1_8_copyload105$0, $p154_sroa_1_8_copyload105$1) | 0;
    $sub3_i72$1 = tempRet0;
    $mul_i_i55$0 = ___muldi3($sub_i71$0, $sub_i71$1, $sub_i71$0, $sub_i71$1) | 0;
    $mul_i_i55$1 = tempRet0;
    $mul3_i_i56$0 = ___muldi3($sub3_i72$0, $sub3_i72$1, $sub3_i72$0, $sub3_i72$1) | 0;
    $add_i_i57$0 = _i64Add($mul3_i_i56$0, tempRet0, $mul_i_i55$0, $mul_i_i55$1) | 0;
    $conv2_i60 = ~~+Math_sqrt(+(+($add_i_i57$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0));
    $add62$0 = _i64Add($conv2_i60, ($conv2_i60 | 0) < 0 ? -1 : 0, $lenB_0133$0, $lenB_0133$1) | 0;
    $add62$1 = tempRet0;
    $rem69 = (($i48_0134 + 1 | 0) >>> 0) % ($sub_ptr_div_i >>> 0) >>> 0;
    if (($rem69 | 0) == ($6 | 0)) {
     break;
    }
    $p154_sroa_0_0__idx101_phi_trans_insert = $9 + ($rem69 << 4) | 0;
    $p154_sroa_1_8__idx104_phi_trans_insert = $9 + ($rem69 << 4) + 8 | 0;
    $p0_sroa_1_8_copyload125129131$1 = $p154_sroa_1_8_copyload105$1;
    $p0_sroa_1_8_copyload125129131$0 = $p154_sroa_1_8_copyload105$0;
    $p0_sroa_0_0_copyload117127132$1 = $p154_sroa_0_0_copyload102$1;
    $p0_sroa_0_0_copyload117127132$0 = $p154_sroa_0_0_copyload102$0;
    $lenB_0133$1 = $add62$1;
    $lenB_0133$0 = $add62$0;
    $i48_0134 = $rem69;
    $p154_sroa_0_0_copyload102$1 = HEAP32[$p154_sroa_0_0__idx101_phi_trans_insert + 4 >> 2] | 0;
    $p154_sroa_0_0_copyload102$0 = HEAP32[$p154_sroa_0_0__idx101_phi_trans_insert >> 2] | 0;
    $p154_sroa_1_8_copyload105$1 = HEAP32[$p154_sroa_1_8__idx104_phi_trans_insert + 4 >> 2] | 0;
    $p154_sroa_1_8_copyload105$0 = HEAP32[$p154_sroa_1_8__idx104_phi_trans_insert >> 2] | 0;
   }
   $sub_i51$0 = _i64Subtract($p154_sroa_0_0_copyload102$0, $p154_sroa_0_0_copyload102$1, $ip0_idx28_val$0, $ip0_idx28_val$1) | 0;
   $sub_i51$1 = tempRet0;
   $sub3_i52$0 = _i64Subtract($p154_sroa_1_8_copyload105$0, $p154_sroa_1_8_copyload105$1, $ip0_idx29_val$0, $ip0_idx29_val$1) | 0;
   $sub3_i52$1 = tempRet0;
   $mul_i_i$0 = ___muldi3($sub_i51$0, $sub_i51$1, $sub_i51$0, $sub_i51$1) | 0;
   $mul_i_i$1 = tempRet0;
   $mul3_i_i$0 = ___muldi3($sub3_i52$0, $sub3_i52$1, $sub3_i52$0, $sub3_i52$1) | 0;
   $add_i_i$0 = _i64Add($mul3_i_i$0, tempRet0, $mul_i_i$0, $mul_i_i$1) | 0;
   $conv2_i = ~~+Math_sqrt(+(+($add_i_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0));
   $add74$0 = _i64Add($conv2_i, ($conv2_i | 0) < 0 ? -1 : 0, $add62$0, $add62$1) | 0;
   $add74$1 = tempRet0;
   if (($add39$1 | 0) < ($add74$1 | 0) | ($add39$1 | 0) == ($add74$1 | 0) & $add39$0 >>> 0 < $add74$0 >>> 0) {
    HEAP8[$AtoB] = 1;
    $len78 = $agg_result | 0;
    HEAP32[$len78 >> 2] = $add39$0;
    HEAP32[$len78 + 4 >> 2] = $add39$1;
    STACKTOP = __stackBase__;
    return;
   } else {
    HEAP8[$AtoB] = 0;
    $len81 = $agg_result | 0;
    HEAP32[$len81 >> 2] = $add74$0;
    HEAP32[$len81 + 4 >> 2] = $add74$1;
    STACKTOP = __stackBase__;
    return;
   }
  }
 } while (0);
 $len = $agg_result | 0;
 HEAP32[$len >> 2] = -1;
 HEAP32[$len + 4 >> 2] = -1;
 STACKTOP = __stackBase__;
 return;
}
function __ZN11SlicerLayer25findPolygonPointClosestToEN10ClipperLib8IntPointE($agg_result, $this, $input) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $input = $input | 0;
 var $1 = 0, $2 = 0, $input_idx17 = 0, $input_idx17_val$0 = 0, $input_idx17_val$1 = 0, $input_idx18 = 0, $input_idx18_val$0 = 0, $input_idx18_val$1 = 0, $n_090 = 0, $__end__i46 = 0, $__begin__i47 = 0, $5 = 0, $sub_ptr_div_i51 = 0, $sub = 0, $7 = 0, $p0_sroa_1_8__idx69 = 0, $p0_sroa_0_0__idx = 0, $8 = 0, $i_083 = 0, $p0_sroa_0_0_copyload7082$0 = 0, $p0_sroa_0_0_copyload7082$1 = 0, $p0_sroa_1_8_copyload7181$0 = 0, $p0_sroa_1_8_copyload7181$1 = 0, $p1_sroa_0_0__idx60 = 0, $p1_sroa_0_0_copyload61$0 = 0, $p1_sroa_0_0_copyload61$1 = 0, $p1_sroa_1_8__idx63 = 0, $p1_sroa_1_8_copyload64$0 = 0, $p1_sroa_1_8_copyload64$1 = 0, $sub_i51$0 = 0, $sub_i51$1 = 0, $sub3_i52$0 = 0, $sub3_i52$1 = 0, $mul_i_i47$0 = 0, $mul_i_i47$1 = 0, $mul3_i_i48$0 = 0, $add_i_i49$0 = 0, $conv2_i = 0, $conv$0 = 0, $conv$1 = 0, $sub_i43$0 = 0, $sub_i43$1 = 0, $sub3_i44$0 = 0, $sub3_i44$1 = 0, $mul_i41$0 = 0, $mul_i41$1 = 0, $mul3_i$0 = 0, $add_i42$0 = 0, $div$0 = 0, $div$1 = 0, $$etemp$12$1 = 0, $sext$1 = 0, $conv_i38$0 = 0, $conv_i38$1 = 0, $mul_i$0 = 0, $mul_i$1 = 0, $mul2_i$0 = 0, $mul2_i$1 = 0, $div_i$0 = 0, $div_i$1 = 0, $div2_i$0 = 0, $div2_i$1 = 0, $add_i$0 = 0, $add_i$1 = 0, $add3_i$0 = 0, $add3_i$1 = 0, $sub_i$0 = 0, $sub_i$1 = 0, $sub3_i$0 = 0, $sub3_i$1 = 0, $sub_i_off$0 = 0, $sub_i_off$1 = 0, $$etemp$14$1 = 0, $sub3_i_off$0 = 0, $sub3_i_off$1 = 0, $$etemp$16$1 = 0, $mul_i_i$0 = 0, $mul_i_i$1 = 0, $mul3_i_i$0 = 0, $add_i_i$0 = 0, $add_i_i$1 = 0, $$etemp$17$1 = 0, $q_sroa_0_0__idx = 0, $q_sroa_1_8__idx55 = 0, $inc = 0, $inc33 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 tempParam = $input;
 $input = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[$input >> 2] = HEAP32[tempParam >> 2];
 HEAP32[$input + 4 >> 2] = HEAP32[tempParam + 4 >> 2];
 HEAP32[$input + 8 >> 2] = HEAP32[tempParam + 8 >> 2];
 HEAP32[$input + 12 >> 2] = HEAP32[tempParam + 12 >> 2];
 _memset($agg_result | 0, 0, 16);
 $1 = HEAP32[$this + 28 >> 2] | 0;
 $2 = HEAP32[$this + 24 >> 2] | 0;
 L4158 : do {
  if (($1 | 0) != ($2 | 0)) {
   $input_idx17 = $input | 0;
   $input_idx17_val$0 = HEAP32[$input_idx17 >> 2] | 0;
   $input_idx17_val$1 = HEAP32[$input_idx17 + 4 >> 2] | 0;
   $input_idx18 = $input + 8 | 0;
   $input_idx18_val$0 = HEAP32[$input_idx18 >> 2] | 0;
   $input_idx18_val$1 = HEAP32[$input_idx18 + 4 >> 2] | 0;
   $n_090 = 0;
   L4160 : while (1) {
    $__end__i46 = $2 + ($n_090 * 12 & -1) + 4 | 0;
    $__begin__i47 = $2 + ($n_090 * 12 & -1) | 0;
    $5 = HEAP32[$__begin__i47 >> 2] | 0;
    $sub_ptr_div_i51 = (HEAP32[$__end__i46 >> 2] | 0) - $5 >> 4;
    $sub = $sub_ptr_div_i51 - 1 | 0;
    $7 = HEAP32[$__begin__i47 >> 2] | 0;
    if ((HEAP32[$__end__i46 >> 2] | 0) != ($7 | 0)) {
     $p0_sroa_1_8__idx69 = $5 + ($sub << 4) + 8 | 0;
     $p0_sroa_0_0__idx = $5 + ($sub << 4) | 0;
     $p0_sroa_1_8_copyload7181$1 = HEAP32[$p0_sroa_1_8__idx69 + 4 >> 2] | 0;
     $p0_sroa_1_8_copyload7181$0 = HEAP32[$p0_sroa_1_8__idx69 >> 2] | 0;
     $p0_sroa_0_0_copyload7082$1 = HEAP32[$p0_sroa_0_0__idx + 4 >> 2] | 0;
     $p0_sroa_0_0_copyload7082$0 = HEAP32[$p0_sroa_0_0__idx >> 2] | 0;
     $i_083 = 0;
     $8 = $7;
     while (1) {
      $p1_sroa_0_0__idx60 = $8 + ($i_083 << 4) | 0;
      $p1_sroa_0_0_copyload61$0 = HEAP32[$p1_sroa_0_0__idx60 >> 2] | 0;
      $p1_sroa_0_0_copyload61$1 = HEAP32[$p1_sroa_0_0__idx60 + 4 >> 2] | 0;
      $p1_sroa_1_8__idx63 = $8 + ($i_083 << 4) + 8 | 0;
      $p1_sroa_1_8_copyload64$0 = HEAP32[$p1_sroa_1_8__idx63 >> 2] | 0;
      $p1_sroa_1_8_copyload64$1 = HEAP32[$p1_sroa_1_8__idx63 + 4 >> 2] | 0;
      $sub_i51$0 = _i64Subtract($p1_sroa_0_0_copyload61$0, $p1_sroa_0_0_copyload61$1, $p0_sroa_0_0_copyload7082$0, $p0_sroa_0_0_copyload7082$1) | 0;
      $sub_i51$1 = tempRet0;
      $sub3_i52$0 = _i64Subtract($p1_sroa_1_8_copyload64$0, $p1_sroa_1_8_copyload64$1, $p0_sroa_1_8_copyload7181$0, $p0_sroa_1_8_copyload7181$1) | 0;
      $sub3_i52$1 = tempRet0;
      $mul_i_i47$0 = ___muldi3($sub_i51$0, $sub_i51$1, $sub_i51$0, $sub_i51$1) | 0;
      $mul_i_i47$1 = tempRet0;
      $mul3_i_i48$0 = ___muldi3($sub3_i52$0, $sub3_i52$1, $sub3_i52$0, $sub3_i52$1) | 0;
      $add_i_i49$0 = _i64Add($mul3_i_i48$0, tempRet0, $mul_i_i47$0, $mul_i_i47$1) | 0;
      $conv2_i = ~~+Math_sqrt(+(+($add_i_i49$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0));
      $conv$0 = $conv2_i;
      $conv$1 = ($conv2_i | 0) < 0 ? -1 : 0;
      do {
       if (($conv2_i | 0) > 1) {
        $sub_i43$0 = _i64Subtract($input_idx17_val$0, $input_idx17_val$1, $p0_sroa_0_0_copyload7082$0, $p0_sroa_0_0_copyload7082$1) | 0;
        $sub_i43$1 = tempRet0;
        $sub3_i44$0 = _i64Subtract($input_idx18_val$0, $input_idx18_val$1, $p0_sroa_1_8_copyload7181$0, $p0_sroa_1_8_copyload7181$1) | 0;
        $sub3_i44$1 = tempRet0;
        $mul_i41$0 = ___muldi3($sub_i43$0, $sub_i43$1, $sub_i51$0, $sub_i51$1) | 0;
        $mul_i41$1 = tempRet0;
        $mul3_i$0 = ___muldi3($sub3_i44$0, $sub3_i44$1, $sub3_i52$0, $sub3_i52$1) | 0;
        $add_i42$0 = _i64Add($mul3_i$0, tempRet0, $mul_i41$0, $mul_i41$1) | 0;
        $div$0 = ___divdi3($add_i42$0, tempRet0, $conv$0, $conv$1) | 0;
        $div$1 = tempRet0;
        $$etemp$12$1 = 0;
        if (($div$1 | 0) < ($$etemp$12$1 | 0) | ($div$1 | 0) == ($$etemp$12$1 | 0) & $div$0 >>> 0 < 0 >>> 0 | (($div$1 | 0) > ($conv$1 | 0) | ($div$1 | 0) == ($conv$1 | 0) & $div$0 >>> 0 > $conv$0 >>> 0)) {
         break;
        }
        $sext$1 = $div$0;
        $conv_i38$0 = $sext$1;
        $conv_i38$1 = ($sext$1 | 0) < 0 ? -1 : 0;
        $mul_i$0 = ___muldi3($conv_i38$0, $conv_i38$1, $sub_i51$0, $sub_i51$1) | 0;
        $mul_i$1 = tempRet0;
        $mul2_i$0 = ___muldi3($conv_i38$0, $conv_i38$1, $sub3_i52$0, $sub3_i52$1) | 0;
        $mul2_i$1 = tempRet0;
        $div_i$0 = ___divdi3($mul_i$0, $mul_i$1, $conv$0, $conv$1) | 0;
        $div_i$1 = tempRet0;
        $div2_i$0 = ___divdi3($mul2_i$0, $mul2_i$1, $conv$0, $conv$1) | 0;
        $div2_i$1 = tempRet0;
        $add_i$0 = _i64Add($div_i$0, $div_i$1, $p0_sroa_0_0_copyload7082$0, $p0_sroa_0_0_copyload7082$1) | 0;
        $add_i$1 = tempRet0;
        $add3_i$0 = _i64Add($div2_i$0, $div2_i$1, $p0_sroa_1_8_copyload7181$0, $p0_sroa_1_8_copyload7181$1) | 0;
        $add3_i$1 = tempRet0;
        $sub_i$0 = _i64Subtract($add_i$0, $add_i$1, $input_idx17_val$0, $input_idx17_val$1) | 0;
        $sub_i$1 = tempRet0;
        $sub3_i$0 = _i64Subtract($add3_i$0, $add3_i$1, $input_idx18_val$0, $input_idx18_val$1) | 0;
        $sub3_i$1 = tempRet0;
        $sub_i_off$0 = _i64Add($sub_i$0, $sub_i$1, 100, 0) | 0;
        $sub_i_off$1 = tempRet0;
        $$etemp$14$1 = 0;
        if ($sub_i_off$1 >>> 0 > $$etemp$14$1 >>> 0 | $sub_i_off$1 >>> 0 == $$etemp$14$1 >>> 0 & $sub_i_off$0 >>> 0 > 200 >>> 0) {
         break;
        }
        $sub3_i_off$0 = _i64Add($sub3_i$0, $sub3_i$1, 100, 0) | 0;
        $sub3_i_off$1 = tempRet0;
        $$etemp$16$1 = 0;
        if ($sub3_i_off$1 >>> 0 > $$etemp$16$1 >>> 0 | $sub3_i_off$1 >>> 0 == $$etemp$16$1 >>> 0 & $sub3_i_off$0 >>> 0 > 200 >>> 0) {
         break;
        }
        $mul_i_i$0 = ___muldi3($sub_i$0, $sub_i$1, $sub_i$0, $sub_i$1) | 0;
        $mul_i_i$1 = tempRet0;
        $mul3_i_i$0 = ___muldi3($sub3_i$0, $sub3_i$1, $sub3_i$0, $sub3_i$1) | 0;
        $add_i_i$0 = _i64Add($mul3_i_i$0, tempRet0, $mul_i_i$0, $mul_i_i$1) | 0;
        $add_i_i$1 = tempRet0;
        $$etemp$17$1 = 0;
        if (($add_i_i$1 | 0) < ($$etemp$17$1 | 0) | ($add_i_i$1 | 0) == ($$etemp$17$1 | 0) & $add_i_i$0 >>> 0 < 10001 >>> 0) {
         break L4160;
        }
       }
      } while (0);
      $inc = $i_083 + 1 | 0;
      if ($inc >>> 0 < $sub_ptr_div_i51 >>> 0) {
       $p0_sroa_1_8_copyload7181$1 = $p1_sroa_1_8_copyload64$1;
       $p0_sroa_1_8_copyload7181$0 = $p1_sroa_1_8_copyload64$0;
       $p0_sroa_0_0_copyload7082$1 = $p1_sroa_0_0_copyload61$1;
       $p0_sroa_0_0_copyload7082$0 = $p1_sroa_0_0_copyload61$0;
       $i_083 = $inc;
       $8 = $5;
      } else {
       break;
      }
     }
    }
    $inc33 = $n_090 + 1 | 0;
    if ($inc33 >>> 0 < (($1 - $2 | 0) / 12 & -1) >>> 0) {
     $n_090 = $inc33;
    } else {
     break L4158;
    }
   }
   $q_sroa_0_0__idx = $agg_result | 0;
   HEAP32[$q_sroa_0_0__idx >> 2] = $add_i$0;
   HEAP32[$q_sroa_0_0__idx + 4 >> 2] = $add_i$1;
   $q_sroa_1_8__idx55 = $agg_result + 8 | 0;
   HEAP32[$q_sroa_1_8__idx55 >> 2] = $add3_i$0;
   HEAP32[$q_sroa_1_8__idx55 + 4 >> 2] = $add3_i$1;
   HEAP32[$agg_result + 16 >> 2] = $n_090;
   HEAP32[$agg_result + 20 >> 2] = $i_083;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 HEAP32[$agg_result + 16 >> 2] = -1;
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__16vectorI13SlicerSegmentNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_022 = 0, $retval_i_023 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $4 = 0, $5 = 0, $incdec_ptr = 0, $6 = 0, $sub_ptr_sub_i_i = 0, $add_ptr_i_i13 = 0, $8 = 0, $9 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = ((HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 40 & -1;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 107374182) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_div_i_i_i = ((HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 40 & -1;
 if ($sub_ptr_div_i_i_i >>> 0 > 53687090) {
  $retval_i_022 = 107374182;
  label = 3749;
 } else {
  $mul_i = $sub_ptr_div_i_i_i << 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_023 = 0;
  } else {
   $retval_i_022 = $_sroa_speculated;
   label = 3749;
  }
 }
 if ((label | 0) == 3749) {
  $cond_i_i = __Znwj($retval_i_022 * 40 & -1) | 0;
  $retval_i_023 = $retval_i_022;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i * 40 & -1) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_023 * 40 & -1) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  $4 = $add_ptr_i_i;
  $5 = $__x;
  HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  HEAP32[$4 + 12 >> 2] = HEAP32[$5 + 12 >> 2];
  HEAP32[$4 + 16 >> 2] = HEAP32[$5 + 16 >> 2];
  HEAP32[$4 + 20 >> 2] = HEAP32[$5 + 20 >> 2];
  HEAP32[$4 + 24 >> 2] = HEAP32[$5 + 24 >> 2];
  HEAP32[$4 + 28 >> 2] = HEAP32[$5 + 28 >> 2];
  HEAP32[$4 + 32 >> 2] = HEAP32[$5 + 32 >> 2];
  HEAP32[$4 + 36 >> 2] = HEAP32[$5 + 36 >> 2];
 }
 $incdec_ptr = $cond_i_i + ($add * 40 & -1) | 0;
 $6 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i_i = (HEAP32[$__end__i >> 2] | 0) - $6 | 0;
 $add_ptr_i_i13 = $cond_i_i + (((($sub_ptr_sub_i_i | 0) / -40 & -1) + $sub_ptr_div_i | 0) * 40 & -1) | 0;
 $8 = $add_ptr_i_i13;
 $9 = $6;
 _memcpy($8 | 0, $9 | 0, $sub_ptr_sub_i_i) | 0;
 HEAP32[$__begin__i >> 2] = $add_ptr_i_i13;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 if (($6 | 0) == 0) {
  return;
 }
 __ZdlPv($9);
 return;
}
function __ZN11SlicerLayerC2ERKS_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $__parent_i = 0, $agg_tmp_i = 0, $ref_tmp_i_i_i_i = 0, $faceToSegmentIndex = 0, $__tree__i_i = 0, $__begin_node__i_i = 0, $__first__i_i_i46_i_i = 0, $__first__i_i_i23_i_i = 0, $1 = 0, $2 = 0, $__first__i_i_i_i_i_i_i = 0, $first_i_i_i_i_i_i = 0, $second_i_i_i_i_i_i = 0, $6 = 0, $__left_12_i_i = 0, $agg_tmp30_i_i_sroa_0_032 = 0, $call_i = 0, $call_i_i_i_i17 = 0, $__value__i_i = 0, $14 = 0, $15 = 0, $19 = 0, $21 = 0, $24 = 0, $__x_addr_i9_0_i = 0, $26 = 0, $__x_addr_0_i = 0, $27 = 0, $retval_0_i = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 $__parent_i = __stackBase__ | 0;
 $agg_tmp_i = __stackBase__ + 8 | 0;
 $ref_tmp_i_i_i_i = __stackBase__ + 16 | 0;
 __ZNSt3__16vectorI13SlicerSegmentNS_9allocatorIS1_EEEC2ERKS4_($this | 0, $0 | 0);
 $faceToSegmentIndex = $this + 12 | 0;
 $__tree__i_i = $faceToSegmentIndex | 0;
 $__begin_node__i_i = $faceToSegmentIndex | 0;
 $__first__i_i_i46_i_i = $this + 16 | 0;
 HEAP32[$__first__i_i_i46_i_i >> 2] = 0;
 $__first__i_i_i23_i_i = $this + 20 | 0;
 HEAP32[$__first__i_i_i23_i_i >> 2] = 0;
 $1 = $__first__i_i_i46_i_i;
 HEAP32[$__begin_node__i_i >> 2] = $1;
 $2 = HEAP32[$0 + 12 >> 2] | 0;
 $__first__i_i_i_i_i_i_i = $0 + 16 | 0;
 if (($2 | 0) != ($__first__i_i_i_i_i_i_i | 0)) {
  $first_i_i_i_i_i_i = $ref_tmp_i_i_i_i | 0;
  $second_i_i_i_i_i_i = $ref_tmp_i_i_i_i + 4 | 0;
  $6 = $agg_tmp_i | 0;
  $__left_12_i_i = $this + 16 | 0;
  $agg_tmp30_i_i_sroa_0_032 = $2;
  while (1) {
   HEAP32[$first_i_i_i_i_i_i >> 2] = HEAP32[$agg_tmp30_i_i_sroa_0_032 + 16 >> 2];
   HEAP32[$second_i_i_i_i_i_i >> 2] = HEAP32[$agg_tmp30_i_i_sroa_0_032 + 20 >> 2];
   HEAP32[$6 >> 2] = $1;
   $call_i = __ZNSt3__16__treeINS_4pairIiiEENS_19__map_value_compareIiiNS_4lessIiEELb1EEENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PKNS_11__tree_nodeIS2_SC_EEiEESF_RKT_($__tree__i_i, $agg_tmp_i, $__parent_i, $ref_tmp_i_i_i_i) | 0;
   if ((HEAP32[$call_i >> 2] | 0) == 0) {
    $call_i_i_i_i17 = __Znwj(24) | 0;
    $__value__i_i = $call_i_i_i_i17 + 16 | 0;
    if (($__value__i_i | 0) != 0) {
     HEAP32[$__value__i_i >> 2] = HEAP32[$first_i_i_i_i_i_i >> 2];
     HEAP32[$call_i_i_i_i17 + 20 >> 2] = HEAP32[$second_i_i_i_i_i_i >> 2];
    }
    $14 = HEAP32[$__parent_i >> 2] | 0;
    $15 = $call_i_i_i_i17;
    HEAP32[$call_i_i_i_i17 >> 2] = 0;
    HEAP32[$call_i_i_i_i17 + 4 >> 2] = 0;
    HEAP32[$call_i_i_i_i17 + 8 >> 2] = $14;
    HEAP32[$call_i >> 2] = $15;
    $19 = HEAP32[HEAP32[$__begin_node__i_i >> 2] >> 2] | 0;
    if (($19 | 0) == 0) {
     $21 = $15;
    } else {
     HEAP32[$__begin_node__i_i >> 2] = $19;
     $21 = HEAP32[$call_i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$__left_12_i_i >> 2] | 0, $21);
    HEAP32[$__first__i_i_i23_i_i >> 2] = (HEAP32[$__first__i_i_i23_i_i >> 2] | 0) + 1;
   }
   $24 = HEAP32[$agg_tmp30_i_i_sroa_0_032 + 4 >> 2] | 0;
   if (($24 | 0) == 0) {
    $__x_addr_0_i = $agg_tmp30_i_i_sroa_0_032 | 0;
    while (1) {
     $27 = HEAP32[$__x_addr_0_i + 8 >> 2] | 0;
     if (($__x_addr_0_i | 0) == (HEAP32[$27 >> 2] | 0)) {
      $retval_0_i = $27;
      break;
     } else {
      $__x_addr_0_i = $27;
     }
    }
   } else {
    $__x_addr_i9_0_i = $24;
    while (1) {
     $26 = HEAP32[$__x_addr_i9_0_i >> 2] | 0;
     if (($26 | 0) == 0) {
      $retval_0_i = $__x_addr_i9_0_i;
      break;
     } else {
      $__x_addr_i9_0_i = $26;
     }
    }
   }
   if (($retval_0_i | 0) == ($__first__i_i_i_i_i_i_i | 0)) {
    break;
   } else {
    $agg_tmp30_i_i_sroa_0_032 = $retval_0_i;
   }
  }
 }
 __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($this + 24 | 0, $0 + 24 | 0);
 __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($this + 36 | 0, $0 + 36 | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__16vectorI11SlicerLayerNS_9allocatorIS1_EEE8__appendEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $__first__i_i_i = 0, $__end_ = 0, $1 = 0, $sub_ptr_lhs_cast = 0, $sub_ptr_rhs_cast = 0, $2 = 0, $__n_addr_0_i = 0, $__first__i_i_i_i_i_i_i_i = 0, $6 = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_065 = 0, $retval_i_066 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $9 = 0, $__n_addr_0_i16 = 0, $__first__i_i_i_i_i_i_i_i22 = 0, $13 = 0, $add_ptr6_i_i = 0, $14 = 0, $15 = 0, $__v_sroa_1_4_load5459 = 0, $__end1_addr_i_015_i = 0, $16 = 0, $17 = 0, $18 = 0, $__v_sroa_2_8_load5861 = 0, $incdec_ptr_i_i_i_i_i42 = 0, label = 0;
 $__first__i_i_i = $this + 8 | 0;
 $__end_ = $this + 4 | 0;
 $1 = HEAP32[$__end_ >> 2] | 0;
 $sub_ptr_lhs_cast = HEAP32[$__first__i_i_i >> 2] | 0;
 $sub_ptr_rhs_cast = $1;
 if ((($sub_ptr_lhs_cast - $sub_ptr_rhs_cast | 0) / 48 & -1) >>> 0 >= $__n >>> 0) {
  $__n_addr_0_i = $__n;
  $2 = $1;
  do {
   if (($2 | 0) == 0) {
    $6 = 0;
   } else {
    _memset($2 | 0, 0, 20);
    HEAP32[$2 >> 2] = 0;
    HEAP32[$2 + 4 >> 2] = 0;
    HEAP32[$2 + 8 >> 2] = 0;
    $__first__i_i_i_i_i_i_i_i = $2 + 16 | 0;
    HEAP32[$__first__i_i_i_i_i_i_i_i >> 2] = 0;
    HEAP32[$2 + 20 >> 2] = 0;
    HEAP32[$2 + 12 >> 2] = $__first__i_i_i_i_i_i_i_i;
    _memset($2 + 24 | 0, 0, 24);
    $6 = HEAP32[$__end_ >> 2] | 0;
   }
   $2 = $6 + 48 | 0;
   HEAP32[$__end_ >> 2] = $2;
   $__n_addr_0_i = $__n_addr_0_i - 1 | 0;
  } while (($__n_addr_0_i | 0) != 0);
  return;
 }
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = ($sub_ptr_rhs_cast - $sub_ptr_rhs_cast_i | 0) / 48 & -1;
 $add = $sub_ptr_div_i + $__n | 0;
 if ($add >>> 0 > 89478485) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $sub_ptr_div_i_i_i = ($sub_ptr_lhs_cast - $sub_ptr_rhs_cast_i | 0) / 48 & -1;
 if ($sub_ptr_div_i_i_i >>> 0 > 44739241) {
  $retval_i_065 = 89478485;
  label = 3799;
 } else {
  $mul_i = $sub_ptr_div_i_i_i << 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_066 = 0;
  } else {
   $retval_i_065 = $_sroa_speculated;
   label = 3799;
  }
 }
 if ((label | 0) == 3799) {
  $cond_i_i = __Znwj($retval_i_065 * 48 & -1) | 0;
  $retval_i_066 = $retval_i_065;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i * 48 & -1) | 0;
 $__n_addr_0_i16 = $__n;
 $9 = $add_ptr_i_i;
 do {
  if (($9 | 0) == 0) {
   $13 = 0;
  } else {
   _memset($9 | 0, 0, 20);
   HEAP32[$9 >> 2] = 0;
   HEAP32[$9 + 4 >> 2] = 0;
   HEAP32[$9 + 8 >> 2] = 0;
   $__first__i_i_i_i_i_i_i_i22 = $9 + 16 | 0;
   HEAP32[$__first__i_i_i_i_i_i_i_i22 >> 2] = 0;
   HEAP32[$9 + 20 >> 2] = 0;
   HEAP32[$9 + 12 >> 2] = $__first__i_i_i_i_i_i_i_i22;
   _memset($9 + 24 | 0, 0, 24);
   $13 = $9;
  }
  $9 = $13 + 48 | 0;
  $__n_addr_0_i16 = $__n_addr_0_i16 - 1 | 0;
 } while (($__n_addr_0_i16 | 0) != 0);
 $add_ptr6_i_i = $cond_i_i + ($retval_i_066 * 48 & -1) | 0;
 $14 = HEAP32[$__begin__i >> 2] | 0;
 $15 = HEAP32[$__end_ >> 2] | 0;
 if (($15 | 0) == ($14 | 0)) {
  $18 = $14;
  $17 = $add_ptr_i_i;
  $16 = $14;
 } else {
  $__end1_addr_i_015_i = $15;
  $__v_sroa_1_4_load5459 = $add_ptr_i_i;
  do {
   $__v_sroa_1_4_load5459 = $__v_sroa_1_4_load5459 - 48 | 0;
   $__end1_addr_i_015_i = $__end1_addr_i_015_i - 48 | 0;
   if (($__v_sroa_1_4_load5459 | 0) != 0) {
    __ZN11SlicerLayerC2ERKS_($__v_sroa_1_4_load5459, $__end1_addr_i_015_i);
   }
  } while (($__end1_addr_i_015_i | 0) != ($14 | 0));
  $18 = HEAP32[$__begin__i >> 2] | 0;
  $17 = $__v_sroa_1_4_load5459;
  $16 = HEAP32[$__end_ >> 2] | 0;
 }
 HEAP32[$__begin__i >> 2] = $17;
 HEAP32[$__end_ >> 2] = $9;
 HEAP32[$__first__i_i_i >> 2] = $add_ptr6_i_i;
 $__v_sroa_2_8_load5861 = $16;
 while (1) {
  if (($18 | 0) == ($__v_sroa_2_8_load5861 | 0)) {
   break;
  }
  $incdec_ptr_i_i_i_i_i42 = $__v_sroa_2_8_load5861 - 48 | 0;
  __ZN11SlicerLayerD2Ev($incdec_ptr_i_i_i_i_i42);
  $__v_sroa_2_8_load5861 = $incdec_ptr_i_i_i_i_i42;
 }
 if (($18 | 0) == 0) {
  return;
 }
 __ZdlPv($18);
 return;
}
function __ZNSt3__16__treeINS_4pairIiiEENS_19__map_value_compareIiiNS_4lessIiEELb1EEENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PKNS_11__tree_nodeIS2_SC_EEiEESF_RKT_($this, $__hint, $__parent, $__v) {
 $this = $this | 0;
 $__hint = $__hint | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $__first__i_i_i_i = 0, $1 = 0, $2 = 0, $3 = 0, $_pre = 0, $__x_addr_i9_0_i = 0, $6 = 0, $__x_addr_0_i = 0, $7 = 0, $retval_0_i = 0, $11 = 0, $__prior_sroa_0_0 = 0, $__left__i_i48 = 0, $14 = 0, $__nd_0_in_i52 = 0, $15 = 0, $__left__i57 = 0, $16 = 0, $__right__i63 = 0, $17 = 0, $__right__i38 = 0, $19 = 0, $cmp_i39 = 0, $__x_addr_i9_0_i40 = 0, $21 = 0, $__x_addr_0_i42 = 0, $22 = 0, $retval_0_i46 = 0, $24 = 0, $__left__i_i34 = 0, $28 = 0, $__nd_0_in_i = 0, $29 = 0, $__left__i36 = 0, $30 = 0, $__right__i = 0, $31 = 0, $retval_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 tempParam = $__hint;
 $__hint = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__hint >> 2] = HEAP32[tempParam >> 2];
 $__first__i_i_i_i = $this + 4 | 0;
 $1 = HEAP32[$__hint >> 2] | 0;
 do {
  if (($1 | 0) != ($__first__i_i_i_i | 0)) {
   $2 = HEAP32[$__v >> 2] | 0;
   $3 = HEAP32[$1 + 16 >> 2] | 0;
   if (($2 | 0) < ($3 | 0)) {
    break;
   }
   if (($3 | 0) >= ($2 | 0)) {
    HEAP32[$__parent >> 2] = $1;
    $retval_0 = $__parent;
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   }
   $__right__i38 = $1 + 4 | 0;
   $19 = HEAP32[$__right__i38 >> 2] | 0;
   $cmp_i39 = ($19 | 0) == 0;
   if ($cmp_i39) {
    $__x_addr_0_i42 = $1 | 0;
    while (1) {
     $22 = HEAP32[$__x_addr_0_i42 + 8 >> 2] | 0;
     if (($__x_addr_0_i42 | 0) == (HEAP32[$22 >> 2] | 0)) {
      $retval_0_i46 = $22;
      break;
     } else {
      $__x_addr_0_i42 = $22;
     }
    }
   } else {
    $__x_addr_i9_0_i40 = $19;
    while (1) {
     $21 = HEAP32[$__x_addr_i9_0_i40 >> 2] | 0;
     if (($21 | 0) == 0) {
      $retval_0_i46 = $__x_addr_i9_0_i40;
      break;
     } else {
      $__x_addr_i9_0_i40 = $21;
     }
    }
   }
   $24 = $__first__i_i_i_i;
   do {
    if (($retval_0_i46 | 0) != ($24 | 0)) {
     if (($2 | 0) < (HEAP32[$retval_0_i46 + 16 >> 2] | 0)) {
      break;
     }
     $__left__i_i34 = $__first__i_i_i_i | 0;
     $28 = HEAP32[$__left__i_i34 >> 2] | 0;
     if (($28 | 0) == 0) {
      HEAP32[$__parent >> 2] = $24;
      $retval_0 = $__left__i_i34;
      STACKTOP = __stackBase__;
      return $retval_0 | 0;
     } else {
      $__nd_0_in_i = $28;
     }
     while (1) {
      $29 = HEAP32[$__nd_0_in_i + 16 >> 2] | 0;
      if (($2 | 0) < ($29 | 0)) {
       $__left__i36 = $__nd_0_in_i | 0;
       $30 = HEAP32[$__left__i36 >> 2] | 0;
       if (($30 | 0) == 0) {
        label = 3859;
        break;
       } else {
        $__nd_0_in_i = $30;
        continue;
       }
      }
      if (($29 | 0) >= ($2 | 0)) {
       label = 3863;
       break;
      }
      $__right__i = $__nd_0_in_i + 4 | 0;
      $31 = HEAP32[$__right__i >> 2] | 0;
      if (($31 | 0) == 0) {
       label = 3862;
       break;
      } else {
       $__nd_0_in_i = $31;
      }
     }
     if ((label | 0) == 3862) {
      HEAP32[$__parent >> 2] = $__nd_0_in_i;
      $retval_0 = $__right__i;
      STACKTOP = __stackBase__;
      return $retval_0 | 0;
     } else if ((label | 0) == 3863) {
      HEAP32[$__parent >> 2] = $__nd_0_in_i;
      $retval_0 = $__parent;
      STACKTOP = __stackBase__;
      return $retval_0 | 0;
     } else if ((label | 0) == 3859) {
      HEAP32[$__parent >> 2] = $__nd_0_in_i;
      $retval_0 = $__left__i36;
      STACKTOP = __stackBase__;
      return $retval_0 | 0;
     }
    }
   } while (0);
   if ($cmp_i39) {
    HEAP32[$__parent >> 2] = $1;
    $retval_0 = $__right__i38;
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   } else {
    HEAP32[$__parent >> 2] = $retval_0_i46;
    $retval_0 = $retval_0_i46 | 0;
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   }
  }
 } while (0);
 $_pre = HEAP32[$1 >> 2] | 0;
 do {
  if (($1 | 0) == (HEAP32[$this >> 2] | 0)) {
   $__prior_sroa_0_0 = $1;
  } else {
   if (($_pre | 0) == 0) {
    $__x_addr_0_i = $1 | 0;
    while (1) {
     $7 = HEAP32[$__x_addr_0_i + 8 >> 2] | 0;
     if (($__x_addr_0_i | 0) == (HEAP32[$7 >> 2] | 0)) {
      $__x_addr_0_i = $7;
     } else {
      $retval_0_i = $7;
      break;
     }
    }
   } else {
    $__x_addr_i9_0_i = $_pre;
    while (1) {
     $6 = HEAP32[$__x_addr_i9_0_i + 4 >> 2] | 0;
     if (($6 | 0) == 0) {
      $retval_0_i = $__x_addr_i9_0_i;
      break;
     } else {
      $__x_addr_i9_0_i = $6;
     }
    }
   }
   $11 = HEAP32[$__v >> 2] | 0;
   if ((HEAP32[$retval_0_i + 16 >> 2] | 0) < ($11 | 0)) {
    $__prior_sroa_0_0 = $retval_0_i;
    break;
   }
   $__left__i_i48 = $__first__i_i_i_i | 0;
   $14 = HEAP32[$__left__i_i48 >> 2] | 0;
   if (($14 | 0) == 0) {
    HEAP32[$__parent >> 2] = $__first__i_i_i_i;
    $retval_0 = $__left__i_i48;
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   } else {
    $__nd_0_in_i52 = $14;
   }
   while (1) {
    $15 = HEAP32[$__nd_0_in_i52 + 16 >> 2] | 0;
    if (($11 | 0) < ($15 | 0)) {
     $__left__i57 = $__nd_0_in_i52 | 0;
     $16 = HEAP32[$__left__i57 >> 2] | 0;
     if (($16 | 0) == 0) {
      label = 3840;
      break;
     } else {
      $__nd_0_in_i52 = $16;
      continue;
     }
    }
    if (($15 | 0) >= ($11 | 0)) {
     label = 3844;
     break;
    }
    $__right__i63 = $__nd_0_in_i52 + 4 | 0;
    $17 = HEAP32[$__right__i63 >> 2] | 0;
    if (($17 | 0) == 0) {
     label = 3843;
     break;
    } else {
     $__nd_0_in_i52 = $17;
    }
   }
   if ((label | 0) == 3840) {
    HEAP32[$__parent >> 2] = $__nd_0_in_i52;
    $retval_0 = $__left__i57;
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   } else if ((label | 0) == 3844) {
    HEAP32[$__parent >> 2] = $__nd_0_in_i52;
    $retval_0 = $__parent;
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   } else if ((label | 0) == 3843) {
    HEAP32[$__parent >> 2] = $__nd_0_in_i52;
    $retval_0 = $__right__i63;
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   }
  }
 } while (0);
 if (($_pre | 0) == 0) {
  HEAP32[$__parent >> 2] = $1;
  $retval_0 = $1 | 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else {
  HEAP32[$__parent >> 2] = $__prior_sroa_0_0;
  $retval_0 = $__prior_sroa_0_0 + 4 | 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNSt3__16vectorI13SlicerSegmentNS_9allocatorIS1_EEEC2ERKS4_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__begin__i = 0, $__end__i = 0, $__first__i_i_i_i = 0, $__end__i18 = 0, $0 = 0, $__begin__i19 = 0, $1 = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__first_addr_04_i = 0, $7 = 0, $8 = 0, $9 = 0;
 $__begin__i = $this | 0;
 HEAP32[$__begin__i >> 2] = 0;
 $__end__i = $this + 4 | 0;
 HEAP32[$__end__i >> 2] = 0;
 $__first__i_i_i_i = $this + 8 | 0;
 HEAP32[$__first__i_i_i_i >> 2] = 0;
 $__end__i18 = $__x + 4 | 0;
 $0 = HEAP32[$__end__i18 >> 2] | 0;
 $__begin__i19 = $__x | 0;
 $1 = HEAP32[$__begin__i19 >> 2] | 0;
 if (($0 | 0) == ($1 | 0)) {
  return;
 }
 $sub_ptr_sub_i = $0 - $1 | 0;
 $sub_ptr_div_i = ($sub_ptr_sub_i | 0) / 40 & -1;
 if ($sub_ptr_div_i >>> 0 > 107374182) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $3 = __Znwj($sub_ptr_sub_i) | 0;
 HEAP32[$__end__i >> 2] = $3;
 HEAP32[$__begin__i >> 2] = $3;
 HEAP32[$__first__i_i_i_i >> 2] = $3 + ($sub_ptr_div_i * 40 & -1);
 $4 = HEAP32[$__begin__i19 >> 2] | 0;
 $5 = HEAP32[$__end__i18 >> 2] | 0;
 if (($4 | 0) == ($5 | 0)) {
  return;
 } else {
  $__first_addr_04_i = $4;
  $6 = $3;
 }
 do {
  if (($6 | 0) == 0) {
   $9 = 0;
  } else {
   $7 = $6;
   $8 = $__first_addr_04_i;
   HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
   HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
   HEAP32[$7 + 12 >> 2] = HEAP32[$8 + 12 >> 2];
   HEAP32[$7 + 16 >> 2] = HEAP32[$8 + 16 >> 2];
   HEAP32[$7 + 20 >> 2] = HEAP32[$8 + 20 >> 2];
   HEAP32[$7 + 24 >> 2] = HEAP32[$8 + 24 >> 2];
   HEAP32[$7 + 28 >> 2] = HEAP32[$8 + 28 >> 2];
   HEAP32[$7 + 32 >> 2] = HEAP32[$8 + 32 >> 2];
   HEAP32[$7 + 36 >> 2] = HEAP32[$8 + 36 >> 2];
   $9 = HEAP32[$__end__i >> 2] | 0;
  }
  $6 = $9 + 40 | 0;
  HEAP32[$__end__i >> 2] = $6;
  $__first_addr_04_i = $__first_addr_04_i + 40 | 0;
 } while (($__first_addr_04_i | 0) != ($5 | 0));
 return;
}
function __ZN14OptimizedModelC2EP11SimpleModel6Point3($this, $model, $center) {
 $this = $this | 0;
 $model = $model | 0;
 $center = $center | 0;
 var $v_i59 = 0, $v_i = 0, $ref_tmp = 0, $ref_tmp15 = 0, $ref_tmp18 = 0, $volumes = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $__first__i_i_i_i_i_i = 0, $vMin = 0, $vMax = 0, $__end__i = 0, $0 = 0, $__begin__i = 0, $1 = 0, $__begin__i_i_i_i_i13 = 0, $__begin__i_i_i_i = 0, $__end__i_i_i_i_i_i_i = 0, $__end__i_i_i_i_i_i_i_i15 = 0, $model2_i_i = 0, $points3_i_i = 0, $3 = 0, $i_0181 = 0, $4 = 0, $__begin__i_i126 = 0, $__end__i_i127 = 0, $__first__i_i_i_i_i = 0, $7 = 0, $8 = 0, $sub_ptr_sub_i_i130 = 0, $sub_ptr_div_i_i131 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $__first_addr_04_i_i = 0, $14 = 0, $15 = 0, $16 = 0, $38 = 0, $39 = 0, $40 = 0, $45 = 0, $46 = 0, $47 = 0, $incdec_ptr_i_i_i_i_i_i_i = 0, $48 = 0, $49 = 0, $50 = 0, $__end__i_i_i_i_i_i_i_i_i_i_i_i = 0, $51 = 0, $56 = 0, $inc = 0, $59 = 0, $86 = 0, $89 = 0, $x_i = 0, $x6_i = 0, $y_i = 0, $y11_i = 0, $z_i = 0, $z19_i = 0, $91 = 0, $i_09_i = 0, $92 = 0, $94 = 0, $96 = 0, $100 = 0, $101 = 0, $105 = 0, $x_i62 = 0, $x6_i63 = 0, $y_i64 = 0, $y11_i65 = 0, $z_i66 = 0, $z19_i67 = 0, $107 = 0, $i_09_i69 = 0, $108 = 0, $110 = 0, $112 = 0, $116 = 0, $117 = 0, $x = 0, $118 = 0, $x22 = 0, $119 = 0, $y = 0, $120 = 0, $y25 = 0, $121 = 0, $z = 0, $122 = 0, $sub_i = 0, $sub4_i = 0, $sub6_i = 0, $126 = 0, $127 = 0, $129 = 0, $130 = 0, $i32_0158 = 0, $132 = 0, $134 = 0, $n_0152 = 0, $x2_i91 = 0, $y3_i94 = 0, $z5_i97 = 0, $138 = 0, $141 = 0, $142 = 0, $inc57 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $sub_i101 = 0, $sub4_i104 = 0, $z_i105 = 0, $148 = 0, $sub6_i107 = 0, $ref_tmp60_sroa_0_0__idx = 0, $ref_tmp60_sroa_1_4__idx134 = 0, $ref_tmp60_sroa_2_8__idx135 = 0, $sub_i110 = 0, $sub4_i113 = 0, $sub6_i116 = 0, $sub_i119 = 0, $sub4_i122 = 0, $sub6_i125 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 tempParam = $center;
 $center = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$center >> 2] = HEAP32[tempParam >> 2];
 HEAP32[$center + 4 >> 2] = HEAP32[tempParam + 4 >> 2];
 HEAP32[$center + 8 >> 2] = HEAP32[tempParam + 8 >> 2];
 $v_i59 = __stackBase__ | 0;
 $v_i = __stackBase__ + 16 | 0;
 $ref_tmp = __stackBase__ + 32 | 0;
 $ref_tmp15 = __stackBase__ + 64 | 0;
 $ref_tmp18 = __stackBase__ + 80 | 0;
 $volumes = $this | 0;
 $__begin__i_i_i = $this | 0;
 HEAP32[$__begin__i_i_i >> 2] = 0;
 $__end__i_i_i = $this + 4 | 0;
 HEAP32[$__end__i_i_i >> 2] = 0;
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = 0;
 $vMin = $this + 24 | 0;
 $vMax = $this + 36 | 0;
 $__end__i = $model + 4 | 0;
 $0 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i = $model | 0;
 $1 = HEAP32[$__begin__i >> 2] | 0;
 L4348 : do {
  if (($0 | 0) == ($1 | 0)) {
   $86 = $0;
  } else {
   $__begin__i_i_i_i_i13 = $ref_tmp + 16 | 0;
   $__begin__i_i_i_i = $ref_tmp + 4 | 0;
   $__end__i_i_i_i_i_i_i = $ref_tmp + 8 | 0;
   $__end__i_i_i_i_i_i_i_i15 = $ref_tmp + 20 | 0;
   $model2_i_i = $ref_tmp | 0;
   $points3_i_i = $ref_tmp + 4 | 0;
   $i_0181 = 0;
   $3 = $1;
   L4350 : while (1) {
    __ZN15OptimizedVolumeC2EP12SimpleVolumeP14OptimizedModel($ref_tmp, $3 + ($i_0181 * 12 & -1) | 0, $this);
    $4 = HEAP32[$__end__i_i_i >> 2] | 0;
    if (($4 | 0) == (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0)) {
     __ZNSt3__16vectorI15OptimizedVolumeNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($volumes, $ref_tmp);
    } else {
     do {
      if (($4 | 0) != 0) {
       HEAP32[$4 >> 2] = HEAP32[$model2_i_i >> 2];
       __ZNSt3__16vectorI15OptimizedPoint3NS_9allocatorIS1_EEEC2ERKS4_($4 + 4 | 0, $points3_i_i);
       $__begin__i_i126 = $4 + 16 | 0;
       HEAP32[$__begin__i_i126 >> 2] = 0;
       $__end__i_i127 = $4 + 20 | 0;
       HEAP32[$__end__i_i127 >> 2] = 0;
       $__first__i_i_i_i_i = $4 + 24 | 0;
       HEAP32[$__first__i_i_i_i_i >> 2] = 0;
       $7 = HEAP32[$__end__i_i_i_i_i_i_i_i15 >> 2] | 0;
       $8 = HEAP32[$__begin__i_i_i_i_i13 >> 2] | 0;
       if (($7 | 0) == ($8 | 0)) {
        break;
       }
       $sub_ptr_sub_i_i130 = $7 - $8 | 0;
       $sub_ptr_div_i_i131 = ($sub_ptr_sub_i_i130 | 0) / 24 & -1;
       if ($sub_ptr_div_i_i131 >>> 0 > 178956970) {
        break L4350;
       }
       $10 = __Znwj($sub_ptr_sub_i_i130) | 0;
       HEAP32[$__end__i_i127 >> 2] = $10;
       HEAP32[$__begin__i_i126 >> 2] = $10;
       HEAP32[$__first__i_i_i_i_i >> 2] = $10 + ($sub_ptr_div_i_i131 * 24 & -1);
       $11 = HEAP32[$__begin__i_i_i_i_i13 >> 2] | 0;
       $12 = HEAP32[$__end__i_i_i_i_i_i_i_i15 >> 2] | 0;
       if (($11 | 0) == ($12 | 0)) {
        break;
       } else {
        $__first_addr_04_i_i = $11;
        $13 = $10;
       }
       do {
        if (($13 | 0) == 0) {
         $16 = 0;
        } else {
         $14 = $13;
         $15 = $__first_addr_04_i_i;
         HEAP32[$14 >> 2] = HEAP32[$15 >> 2];
         HEAP32[$14 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
         HEAP32[$14 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
         HEAP32[$14 + 12 >> 2] = HEAP32[$15 + 12 >> 2];
         HEAP32[$14 + 16 >> 2] = HEAP32[$15 + 16 >> 2];
         HEAP32[$14 + 20 >> 2] = HEAP32[$15 + 20 >> 2];
         $16 = HEAP32[$__end__i_i127 >> 2] | 0;
        }
        $13 = $16 + 24 | 0;
        HEAP32[$__end__i_i127 >> 2] = $13;
        $__first_addr_04_i_i = $__first_addr_04_i_i + 24 | 0;
       } while (($__first_addr_04_i_i | 0) != ($12 | 0));
      }
     } while (0);
     HEAP32[$__end__i_i_i >> 2] = (HEAP32[$__end__i_i_i >> 2] | 0) + 28;
    }
    $38 = HEAP32[$__begin__i_i_i_i_i13 >> 2] | 0;
    $39 = $38;
    if (($38 | 0) != 0) {
     $40 = HEAP32[$__end__i_i_i_i_i_i_i_i15 >> 2] | 0;
     if (($38 | 0) != ($40 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i15 >> 2] = $40 + (((($40 - 24 + (-$39 | 0) | 0) >>> 0) / 24 >>> 0 ^ -1) * 24 & -1);
     }
     __ZdlPv($38);
    }
    $45 = HEAP32[$__begin__i_i_i_i >> 2] | 0;
    if (($45 | 0) != 0) {
     $46 = HEAP32[$__end__i_i_i_i_i_i_i >> 2] | 0;
     if (($45 | 0) == ($46 | 0)) {
      $56 = $45;
     } else {
      $47 = $46;
      while (1) {
       $incdec_ptr_i_i_i_i_i_i_i = $47 - 24 | 0;
       HEAP32[$__end__i_i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i_i;
       $48 = HEAP32[$47 - 24 + 12 >> 2] | 0;
       $49 = $48;
       if (($48 | 0) == 0) {
        $50 = $incdec_ptr_i_i_i_i_i_i_i;
       } else {
        $__end__i_i_i_i_i_i_i_i_i_i_i_i = $47 - 24 + 16 | 0;
        $51 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i_i >> 2] | 0;
        if (($48 | 0) != ($51 | 0)) {
         HEAP32[$__end__i_i_i_i_i_i_i_i_i_i_i_i >> 2] = $51 + ((($51 - 4 + (-$49 | 0) | 0) >>> 2 ^ -1) << 2);
        }
        __ZdlPv($48);
        $50 = HEAP32[$__end__i_i_i_i_i_i_i >> 2] | 0;
       }
       if (($45 | 0) == ($50 | 0)) {
        break;
       } else {
        $47 = $50;
       }
      }
      $56 = HEAP32[$__begin__i_i_i_i >> 2] | 0;
     }
     __ZdlPv($56);
    }
    $inc = $i_0181 + 1 | 0;
    $59 = HEAP32[$__begin__i >> 2] | 0;
    if ($inc >>> 0 < (((HEAP32[$__end__i >> 2] | 0) - $59 | 0) / 12 & -1) >>> 0) {
     $i_0181 = $inc;
     $3 = $59;
    } else {
     $86 = $59;
     break L4348;
    }
   }
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
  }
 } while (0);
 __ZN12SimpleVolume3minEv($ref_tmp15, $86);
 $89 = HEAP32[$__begin__i >> 2] | 0;
 if ((HEAP32[$__end__i >> 2] | 0) != ($89 | 0)) {
  $x_i = $v_i | 0;
  $x6_i = $ref_tmp15 | 0;
  $y_i = $v_i + 4 | 0;
  $y11_i = $ref_tmp15 + 4 | 0;
  $z_i = $v_i + 8 | 0;
  $z19_i = $ref_tmp15 + 8 | 0;
  $i_09_i = 0;
  $91 = $89;
  do {
   __ZN12SimpleVolume3minEv($v_i, $91 + ($i_09_i * 12 & -1) | 0);
   $92 = HEAP32[$x_i >> 2] | 0;
   if (($92 | 0) < (HEAP32[$x6_i >> 2] | 0)) {
    HEAP32[$x6_i >> 2] = $92;
   }
   $94 = HEAP32[$y_i >> 2] | 0;
   if (($94 | 0) < (HEAP32[$y11_i >> 2] | 0)) {
    HEAP32[$y11_i >> 2] = $94;
   }
   $96 = HEAP32[$z_i >> 2] | 0;
   if (($96 | 0) < (HEAP32[$z19_i >> 2] | 0)) {
    HEAP32[$z19_i >> 2] = $96;
   }
   $i_09_i = $i_09_i + 1 | 0;
   $91 = HEAP32[$__begin__i >> 2] | 0;
  } while ($i_09_i >>> 0 < (((HEAP32[$__end__i >> 2] | 0) - $91 | 0) / 12 & -1) >>> 0);
 }
 $100 = $vMin;
 $101 = $ref_tmp15;
 HEAP32[$100 >> 2] = HEAP32[$101 >> 2];
 HEAP32[$100 + 4 >> 2] = HEAP32[$101 + 4 >> 2];
 HEAP32[$100 + 8 >> 2] = HEAP32[$101 + 8 >> 2];
 __ZN12SimpleVolume3maxEv($ref_tmp18, HEAP32[$__begin__i >> 2] | 0);
 $105 = HEAP32[$__begin__i >> 2] | 0;
 if ((HEAP32[$__end__i >> 2] | 0) != ($105 | 0)) {
  $x_i62 = $v_i59 | 0;
  $x6_i63 = $ref_tmp18 | 0;
  $y_i64 = $v_i59 + 4 | 0;
  $y11_i65 = $ref_tmp18 + 4 | 0;
  $z_i66 = $v_i59 + 8 | 0;
  $z19_i67 = $ref_tmp18 + 8 | 0;
  $i_09_i69 = 0;
  $107 = $105;
  do {
   __ZN12SimpleVolume3maxEv($v_i59, $107 + ($i_09_i69 * 12 & -1) | 0);
   $108 = HEAP32[$x_i62 >> 2] | 0;
   if (($108 | 0) > (HEAP32[$x6_i63 >> 2] | 0)) {
    HEAP32[$x6_i63 >> 2] = $108;
   }
   $110 = HEAP32[$y_i64 >> 2] | 0;
   if (($110 | 0) > (HEAP32[$y11_i65 >> 2] | 0)) {
    HEAP32[$y11_i65 >> 2] = $110;
   }
   $112 = HEAP32[$z_i66 >> 2] | 0;
   if (($112 | 0) > (HEAP32[$z19_i67 >> 2] | 0)) {
    HEAP32[$z19_i67 >> 2] = $112;
   }
   $i_09_i69 = $i_09_i69 + 1 | 0;
   $107 = HEAP32[$__begin__i >> 2] | 0;
  } while ($i_09_i69 >>> 0 < (((HEAP32[$__end__i >> 2] | 0) - $107 | 0) / 12 & -1) >>> 0);
 }
 $116 = $vMax;
 $117 = $ref_tmp18;
 HEAP32[$116 >> 2] = HEAP32[$117 >> 2];
 HEAP32[$116 + 4 >> 2] = HEAP32[$117 + 4 >> 2];
 HEAP32[$116 + 8 >> 2] = HEAP32[$117 + 8 >> 2];
 $x = $vMin | 0;
 $118 = HEAP32[$x >> 2] | 0;
 $x22 = $vMax | 0;
 $119 = HEAP32[$x22 >> 2] | 0;
 $y = $this + 28 | 0;
 $120 = HEAP32[$y >> 2] | 0;
 $y25 = $this + 40 | 0;
 $121 = HEAP32[$y25 >> 2] | 0;
 $z = $this + 32 | 0;
 $122 = HEAP32[$z >> 2] | 0;
 $sub_i = (($119 + $118 | 0) / 2 & -1) - (HEAP32[$center >> 2] | 0) | 0;
 $sub4_i = (($121 + $120 | 0) / 2 & -1) - (HEAP32[$center + 4 >> 2] | 0) | 0;
 $sub6_i = $122 - (HEAP32[$center + 8 >> 2] | 0) | 0;
 $126 = HEAP32[$__end__i_i_i >> 2] | 0;
 $127 = HEAP32[$__begin__i_i_i >> 2] | 0;
 if (($126 | 0) == ($127 | 0)) {
  $147 = $119;
  $146 = $118;
  $145 = $121;
  $144 = $120;
  $143 = $122;
  $sub_i101 = $147 - $146 | 0;
  $sub4_i104 = $145 - $144 | 0;
  $z_i105 = $this + 44 | 0;
  $148 = HEAP32[$z_i105 >> 2] | 0;
  $sub6_i107 = $148 - $143 | 0;
  $ref_tmp60_sroa_0_0__idx = $this + 12 | 0;
  HEAP32[$ref_tmp60_sroa_0_0__idx >> 2] = $sub_i101;
  $ref_tmp60_sroa_1_4__idx134 = $this + 16 | 0;
  HEAP32[$ref_tmp60_sroa_1_4__idx134 >> 2] = $sub4_i104;
  $ref_tmp60_sroa_2_8__idx135 = $this + 20 | 0;
  HEAP32[$ref_tmp60_sroa_2_8__idx135 >> 2] = $sub6_i107;
  $sub_i110 = $146 - $sub_i | 0;
  HEAP32[$x >> 2] = $sub_i110;
  $sub4_i113 = $144 - $sub4_i | 0;
  HEAP32[$y >> 2] = $sub4_i113;
  $sub6_i116 = $143 - $sub6_i | 0;
  HEAP32[$z >> 2] = $sub6_i116;
  $sub_i119 = $147 - $sub_i | 0;
  HEAP32[$x22 >> 2] = $sub_i119;
  $sub4_i122 = $145 - $sub4_i | 0;
  HEAP32[$y25 >> 2] = $sub4_i122;
  $sub6_i125 = $148 - $sub6_i | 0;
  HEAP32[$z_i105 >> 2] = $sub6_i125;
  STACKTOP = __stackBase__;
  return;
 } else {
  $i32_0158 = 0;
  $130 = $127;
  $129 = $126;
 }
 while (1) {
  $132 = HEAP32[$130 + ($i32_0158 * 28 & -1) + 4 >> 2] | 0;
  if ((HEAP32[$130 + ($i32_0158 * 28 & -1) + 8 >> 2] | 0) == ($132 | 0)) {
   $142 = $129;
   $141 = $130;
  } else {
   $n_0152 = 0;
   $134 = $132;
   do {
    $x2_i91 = $134 + ($n_0152 * 24 & -1) | 0;
    HEAP32[$x2_i91 >> 2] = (HEAP32[$x2_i91 >> 2] | 0) - $sub_i;
    $y3_i94 = $134 + ($n_0152 * 24 & -1) + 4 | 0;
    HEAP32[$y3_i94 >> 2] = (HEAP32[$y3_i94 >> 2] | 0) - $sub4_i;
    $z5_i97 = $134 + ($n_0152 * 24 & -1) + 8 | 0;
    HEAP32[$z5_i97 >> 2] = (HEAP32[$z5_i97 >> 2] | 0) - $sub6_i;
    $n_0152 = $n_0152 + 1 | 0;
    $138 = HEAP32[$__begin__i_i_i >> 2] | 0;
    $134 = HEAP32[$138 + ($i32_0158 * 28 & -1) + 4 >> 2] | 0;
   } while ($n_0152 >>> 0 < (((HEAP32[$138 + ($i32_0158 * 28 & -1) + 8 >> 2] | 0) - $134 | 0) / 24 & -1) >>> 0);
   $142 = HEAP32[$__end__i_i_i >> 2] | 0;
   $141 = $138;
  }
  $inc57 = $i32_0158 + 1 | 0;
  if ($inc57 >>> 0 < (($142 - $141 | 0) / 28 & -1) >>> 0) {
   $i32_0158 = $inc57;
   $130 = $141;
   $129 = $142;
  } else {
   break;
  }
 }
 $147 = HEAP32[$x22 >> 2] | 0;
 $146 = HEAP32[$x >> 2] | 0;
 $145 = HEAP32[$y25 >> 2] | 0;
 $144 = HEAP32[$y >> 2] | 0;
 $143 = HEAP32[$z >> 2] | 0;
 $sub_i101 = $147 - $146 | 0;
 $sub4_i104 = $145 - $144 | 0;
 $z_i105 = $this + 44 | 0;
 $148 = HEAP32[$z_i105 >> 2] | 0;
 $sub6_i107 = $148 - $143 | 0;
 $ref_tmp60_sroa_0_0__idx = $this + 12 | 0;
 HEAP32[$ref_tmp60_sroa_0_0__idx >> 2] = $sub_i101;
 $ref_tmp60_sroa_1_4__idx134 = $this + 16 | 0;
 HEAP32[$ref_tmp60_sroa_1_4__idx134 >> 2] = $sub4_i104;
 $ref_tmp60_sroa_2_8__idx135 = $this + 20 | 0;
 HEAP32[$ref_tmp60_sroa_2_8__idx135 >> 2] = $sub6_i107;
 $sub_i110 = $146 - $sub_i | 0;
 HEAP32[$x >> 2] = $sub_i110;
 $sub4_i113 = $144 - $sub4_i | 0;
 HEAP32[$y >> 2] = $sub4_i113;
 $sub6_i116 = $143 - $sub6_i | 0;
 HEAP32[$z >> 2] = $sub6_i116;
 $sub_i119 = $147 - $sub_i | 0;
 HEAP32[$x22 >> 2] = $sub_i119;
 $sub4_i122 = $145 - $sub4_i | 0;
 HEAP32[$y25 >> 2] = $sub4_i122;
 $sub6_i125 = $148 - $sub6_i | 0;
 HEAP32[$z_i105 >> 2] = $sub6_i125;
 STACKTOP = __stackBase__;
 return;
}
function __ZN12SimpleVolume3maxEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $x8 = 0, $y21 = 0, $z37 = 0, $sub_ptr_div_i = 0, $5 = 0, $i_025 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $inc = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = $agg_result;
 $2 = $0;
 HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$1 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 $3 = HEAP32[$this + 4 >> 2] | 0;
 if (($3 | 0) == ($0 | 0)) {
  return;
 }
 $x8 = $agg_result | 0;
 $y21 = $agg_result + 4 | 0;
 $z37 = $agg_result + 8 | 0;
 $sub_ptr_div_i = ($3 - $0 | 0) / 36 & -1;
 $i_025 = 0;
 $5 = HEAP32[$x8 >> 2] | 0;
 while (1) {
  $6 = HEAP32[$0 + ($i_025 * 36 & -1) >> 2] | 0;
  if (($6 | 0) > ($5 | 0)) {
   HEAP32[$x8 >> 2] = $6;
   $7 = $6;
  } else {
   $7 = $5;
  }
  $8 = HEAP32[$0 + ($i_025 * 36 & -1) + 4 >> 2] | 0;
  $9 = HEAP32[$y21 >> 2] | 0;
  if (($8 | 0) > ($9 | 0)) {
   HEAP32[$y21 >> 2] = $8;
   $10 = $8;
  } else {
   $10 = $9;
  }
  $11 = HEAP32[$0 + ($i_025 * 36 & -1) + 8 >> 2] | 0;
  $12 = HEAP32[$z37 >> 2] | 0;
  if (($11 | 0) > ($12 | 0)) {
   HEAP32[$z37 >> 2] = $11;
   $13 = $11;
  } else {
   $13 = $12;
  }
  $14 = HEAP32[$0 + ($i_025 * 36 & -1) + 12 >> 2] | 0;
  if (($14 | 0) > ($7 | 0)) {
   HEAP32[$x8 >> 2] = $14;
   $15 = $14;
  } else {
   $15 = $7;
  }
  $16 = HEAP32[$0 + ($i_025 * 36 & -1) + 16 >> 2] | 0;
  if (($16 | 0) > ($10 | 0)) {
   HEAP32[$y21 >> 2] = $16;
   $17 = $16;
  } else {
   $17 = $10;
  }
  $18 = HEAP32[$0 + ($i_025 * 36 & -1) + 20 >> 2] | 0;
  if (($18 | 0) > ($13 | 0)) {
   HEAP32[$z37 >> 2] = $18;
   $19 = $18;
  } else {
   $19 = $13;
  }
  $20 = HEAP32[$0 + ($i_025 * 36 & -1) + 24 >> 2] | 0;
  if (($20 | 0) > ($15 | 0)) {
   HEAP32[$x8 >> 2] = $20;
   $21 = $20;
  } else {
   $21 = $15;
  }
  $22 = HEAP32[$0 + ($i_025 * 36 & -1) + 28 >> 2] | 0;
  if (($22 | 0) > ($17 | 0)) {
   HEAP32[$y21 >> 2] = $22;
  }
  $23 = HEAP32[$0 + ($i_025 * 36 & -1) + 32 >> 2] | 0;
  if (($23 | 0) > ($19 | 0)) {
   HEAP32[$z37 >> 2] = $23;
  }
  $inc = $i_025 + 1 | 0;
  if ($inc >>> 0 < $sub_ptr_div_i >>> 0) {
   $i_025 = $inc;
   $5 = $21;
  } else {
   break;
  }
 }
 return;
}
function __ZN12SimpleVolume3minEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $x8 = 0, $y21 = 0, $z37 = 0, $sub_ptr_div_i = 0, $5 = 0, $i_025 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $inc = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = $agg_result;
 $2 = $0;
 HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$1 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 $3 = HEAP32[$this + 4 >> 2] | 0;
 if (($3 | 0) == ($0 | 0)) {
  return;
 }
 $x8 = $agg_result | 0;
 $y21 = $agg_result + 4 | 0;
 $z37 = $agg_result + 8 | 0;
 $sub_ptr_div_i = ($3 - $0 | 0) / 36 & -1;
 $i_025 = 0;
 $5 = HEAP32[$x8 >> 2] | 0;
 while (1) {
  $6 = HEAP32[$0 + ($i_025 * 36 & -1) >> 2] | 0;
  if (($6 | 0) < ($5 | 0)) {
   HEAP32[$x8 >> 2] = $6;
   $7 = $6;
  } else {
   $7 = $5;
  }
  $8 = HEAP32[$0 + ($i_025 * 36 & -1) + 4 >> 2] | 0;
  $9 = HEAP32[$y21 >> 2] | 0;
  if (($8 | 0) < ($9 | 0)) {
   HEAP32[$y21 >> 2] = $8;
   $10 = $8;
  } else {
   $10 = $9;
  }
  $11 = HEAP32[$0 + ($i_025 * 36 & -1) + 8 >> 2] | 0;
  $12 = HEAP32[$z37 >> 2] | 0;
  if (($11 | 0) < ($12 | 0)) {
   HEAP32[$z37 >> 2] = $11;
   $13 = $11;
  } else {
   $13 = $12;
  }
  $14 = HEAP32[$0 + ($i_025 * 36 & -1) + 12 >> 2] | 0;
  if (($14 | 0) < ($7 | 0)) {
   HEAP32[$x8 >> 2] = $14;
   $15 = $14;
  } else {
   $15 = $7;
  }
  $16 = HEAP32[$0 + ($i_025 * 36 & -1) + 16 >> 2] | 0;
  if (($16 | 0) < ($10 | 0)) {
   HEAP32[$y21 >> 2] = $16;
   $17 = $16;
  } else {
   $17 = $10;
  }
  $18 = HEAP32[$0 + ($i_025 * 36 & -1) + 20 >> 2] | 0;
  if (($18 | 0) < ($13 | 0)) {
   HEAP32[$z37 >> 2] = $18;
   $19 = $18;
  } else {
   $19 = $13;
  }
  $20 = HEAP32[$0 + ($i_025 * 36 & -1) + 24 >> 2] | 0;
  if (($20 | 0) < ($15 | 0)) {
   HEAP32[$x8 >> 2] = $20;
   $21 = $20;
  } else {
   $21 = $15;
  }
  $22 = HEAP32[$0 + ($i_025 * 36 & -1) + 28 >> 2] | 0;
  if (($22 | 0) < ($17 | 0)) {
   HEAP32[$y21 >> 2] = $22;
  }
  $23 = HEAP32[$0 + ($i_025 * 36 & -1) + 32 >> 2] | 0;
  if (($23 | 0) < ($19 | 0)) {
   HEAP32[$z37 >> 2] = $23;
  }
  $inc = $i_025 + 1 | 0;
  if ($inc >>> 0 < $sub_ptr_div_i >>> 0) {
   $i_025 = $inc;
   $5 = $21;
  } else {
   break;
  }
 }
 return;
}
function __ZN15OptimizedVolumeC2EP12SimpleVolumeP14OptimizedModel($this, $volume, $model) {
 $this = $this | 0;
 $volume = $volume | 0;
 $model = $model | 0;
 var $tv_i61 = 0, $tv_i = 0, $indexMap = 0, $f = 0, $ref_tmp39 = 0, $ref_tmp46 = 0, $ref_tmp58 = 0, $ref_tmp65 = 0, $ref_tmp70 = 0, $ref_tmp75 = 0, $ref_tmp193 = 0, $ref_tmp203 = 0, $ref_tmp213 = 0, $points = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $__first__i_i_i_i_i_i = 0, $faces = 0, $__begin__i_i_i303 = 0, $__end__i_i_i304 = 0, $__first__i_i_i_i_i_i310 = 0, $__end__i = 0, $__begin__i = 0, $3 = 0, $4 = 0, $sub_ptr_div_i320 = 0, $6 = 0, $sub_ptr_rhs_cast_i_i_i = 0, $7 = 0, $sub_ptr_div_i_i = 0, $9 = 0, $10 = 0, $11 = 0, $cond_i_i_i = 0, $add_ptr_i_i_i = 0, $add_ptr6_i_i_i = 0, $sub_ptr_sub_i_i7_i = 0, $add_ptr_i_i8_i = 0, $12 = 0, $13 = 0, $__tree__i_i = 0, $__first__i_i_i_i_i = 0, $add_i = 0.0, $tv_sec_i62 = 0, $tv_usec_i64 = 0, $agg_tmp78_sroa_0_0__idx = 0, $agg_tmp78_sroa_1_4__idx201 = 0, $agg_tmp78_sroa_2_8__idx202 = 0, $__begin__i_i_i_i_i = 0, $__end__i_i_i_i_i = 0, $__first__i_i_i_i_i_i_i_i = 0, $22 = 0, $arrayidx87 = 0, $arrayidx89 = 0, $arrayidx95 = 0, $23 = 0, $25 = 0, $__begin__i_i104 = 0, $i_0285 = 0, $sub_ptr_div_i344 = 0, $add = 0, $32 = 0, $33 = 0, $j_0240 = 0, $39 = 0, $p_sroa_0_0_copyload190 = 0, $p_sroa_1_4_copyload194 = 0, $p_sroa_2_8_copyload198 = 0, $xor36 = 0, $n_0 = 0, $call41 = 0, $43 = 0, $44 = 0, $sub_i = 0, $sub4_i = 0, $sub6_i = 0, $conv_i_i$0 = 0, $conv_i_i$1 = 0, $mul_i_i$0 = 0, $mul_i_i$1 = 0, $conv4_i_i$0 = 0, $conv4_i_i$1 = 0, $mul7_i_i$0 = 0, $add_i_i$0 = 0, $add_i_i$1 = 0, $conv8_i_i$0 = 0, $conv8_i_i$1 = 0, $mul11_i_i$0 = 0, $add12_i_i$0 = 0, $add12_i_i$1 = 0, $$etemp$0$1 = 0, $call67 = 0, $sub_ptr_div_i526 = 0, $__end__i632 = 0, $55 = 0, $57 = 0, $58 = 0, $sub_ptr_div_i660 = 0, $61 = 0, $_pre301 = 0, $64 = 0, $idx_3 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $faceIndexList262 = 0, $__end__i608263 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $cmp124256 = 0, $sub_ptr_div_i613 = 0, $_idx0_0271 = 0, $duplicate_0_off0270 = 0, $86 = 0, $87 = 0, $cmp135247 = 0, $sub_ptr_div_i600 = 0, $_idx1_0258 = 0, $duplicate_1_off0257 = 0, $sub_ptr_div_i587 = 0, $_pre304 = 0, $_pre305 = 0, $_idx2_0249 = 0, $duplicate_2_off0248 = 0, $duplicate_3_off0 = 0, $inc175 = 0, $duplicate_2_off0_lcssa = 0, $inc178 = 0, $duplicate_1_off0_lcssa = 0, $inc181 = 0, $sub_ptr_div_i534 = 0, $92 = 0, $93 = 0, $sub_ptr_div_i479 = 0, $__end__i446 = 0, $96 = 0, $98 = 0, $99 = 0, $sub_ptr_div_i427 = 0, $__end__i396 = 0, $102 = 0, $104 = 0, $105 = 0, $107 = 0, $108 = 0, $111 = 0, $i224_0219 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $sub_ptr_div_i63_i = 0, $__end__i_i106 = 0, $__begin__i40_i = 0, $i_019_i = 0, $117 = 0, $119 = 0, $sub_ptr_div_i_i110 = 0, $j_0_i = 0, $120 = 0, $inc26_i = 0, $retval_0_i113 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $sub_ptr_div_i63_i142 = 0, $__end__i_i122 = 0, $__begin__i40_i123 = 0, $i_019_i118 = 0, $125 = 0, $127 = 0, $sub_ptr_div_i_i127 = 0, $j_0_i129 = 0, $128 = 0, $inc26_i138 = 0, $retval_0_i145 = 0, $129 = 0, $130 = 0, $131 = 0, $sub_ptr_div_i63_i175 = 0, $__end__i_i155 = 0, $__begin__i40_i156 = 0, $i_019_i151 = 0, $132 = 0, $134 = 0, $sub_ptr_div_i_i160 = 0, $j_0_i162 = 0, $135 = 0, $inc26_i171 = 0, $retval_0_i178 = 0, $__left__i_i_i_i_i = 0, $138 = 0, $139 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $tv_i61 = __stackBase__ | 0;
 $tv_i = __stackBase__ + 8 | 0;
 $indexMap = __stackBase__ + 16 | 0;
 $f = __stackBase__ + 32 | 0;
 $ref_tmp39 = __stackBase__ + 56 | 0;
 $ref_tmp46 = __stackBase__ + 64 | 0;
 $ref_tmp58 = __stackBase__ + 72 | 0;
 $ref_tmp65 = __stackBase__ + 80 | 0;
 $ref_tmp70 = __stackBase__ + 88 | 0;
 $ref_tmp75 = __stackBase__ + 96 | 0;
 $ref_tmp193 = __stackBase__ + 120 | 0;
 $ref_tmp203 = __stackBase__ + 128 | 0;
 $ref_tmp213 = __stackBase__ + 136 | 0;
 HEAP32[$this >> 2] = $model;
 $points = $this + 4 | 0;
 $__begin__i_i_i = $points | 0;
 $__end__i_i_i = $this + 8 | 0;
 $__first__i_i_i_i_i_i = $this + 12 | 0;
 $faces = $this + 16 | 0;
 $__begin__i_i_i303 = $faces | 0;
 $__end__i_i_i304 = $this + 20 | 0;
 $__first__i_i_i_i_i_i310 = $this + 24 | 0;
 $__end__i = $volume + 4 | 0;
 _memset($points | 0, 0, 24);
 $__begin__i = $volume | 0;
 __ZNSt3__16vectorI15OptimizedPoint3NS_9allocatorIS1_EEE7reserveEj($points, (((HEAP32[$__end__i >> 2] | 0) - (HEAP32[$__begin__i >> 2] | 0) | 0) / 36 & -1) * 3 & -1);
 $3 = HEAP32[$__end__i >> 2] | 0;
 $4 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i320 = ($3 - $4 | 0) / 36 & -1;
 $6 = HEAP32[$__begin__i_i_i303 >> 2] | 0;
 $sub_ptr_rhs_cast_i_i_i = $6;
 do {
  if ((((HEAP32[$__first__i_i_i_i_i_i310 >> 2] | 0) - $sub_ptr_rhs_cast_i_i_i | 0) / 24 & -1) >>> 0 < $sub_ptr_div_i320 >>> 0) {
   $7 = HEAP32[$__end__i_i_i304 >> 2] | 0;
   $sub_ptr_div_i_i = ($7 - $sub_ptr_rhs_cast_i_i_i | 0) / 24 & -1;
   if (($3 | 0) == ($4 | 0)) {
    $cond_i_i_i = 0;
    $11 = $6;
    $10 = $7;
   } else {
    $9 = __Znwj($sub_ptr_div_i320 * 24 & -1) | 0;
    $cond_i_i_i = $9;
    $11 = HEAP32[$__begin__i_i_i303 >> 2] | 0;
    $10 = HEAP32[$__end__i_i_i304 >> 2] | 0;
   }
   $add_ptr_i_i_i = $cond_i_i_i + ($sub_ptr_div_i_i * 24 & -1) | 0;
   $add_ptr6_i_i_i = $cond_i_i_i + ($sub_ptr_div_i320 * 24 & -1) | 0;
   $sub_ptr_sub_i_i7_i = $10 - $11 | 0;
   $add_ptr_i_i8_i = $cond_i_i_i + (((($sub_ptr_sub_i_i7_i | 0) / -24 & -1) + $sub_ptr_div_i_i | 0) * 24 & -1) | 0;
   $12 = $add_ptr_i_i8_i;
   $13 = $11;
   _memcpy($12 | 0, $13 | 0, $sub_ptr_sub_i_i7_i) | 0;
   HEAP32[$__begin__i_i_i303 >> 2] = $add_ptr_i_i8_i;
   HEAP32[$__end__i_i_i304 >> 2] = $add_ptr_i_i_i;
   HEAP32[$__first__i_i_i_i_i_i310 >> 2] = $add_ptr6_i_i_i;
   if (($11 | 0) == 0) {
    break;
   }
   __ZdlPv($13);
  }
 } while (0);
 $__tree__i_i = $indexMap | 0;
 $__first__i_i_i_i_i = $indexMap + 4 | 0;
 HEAP32[$__first__i_i_i_i_i >> 2] = 0;
 HEAP32[$indexMap + 8 >> 2] = 0;
 HEAP32[$indexMap >> 2] = $__first__i_i_i_i_i;
 _gettimeofday($tv_i | 0, 0) | 0;
 $add_i = +(HEAP32[$tv_i >> 2] | 0) + +(HEAP32[$tv_i + 4 >> 2] | 0) / 1.0e6;
 if ((HEAP32[$__end__i >> 2] | 0) != (HEAP32[$__begin__i >> 2] | 0)) {
  $tv_sec_i62 = $tv_i61 | 0;
  $tv_usec_i64 = $tv_i61 + 4 | 0;
  $agg_tmp78_sroa_0_0__idx = $ref_tmp75 | 0;
  $agg_tmp78_sroa_1_4__idx201 = $ref_tmp75 + 4 | 0;
  $agg_tmp78_sroa_2_8__idx202 = $ref_tmp75 + 8 | 0;
  $__begin__i_i_i_i_i = $ref_tmp75 + 12 | 0;
  $__end__i_i_i_i_i = $ref_tmp75 + 16 | 0;
  $__first__i_i_i_i_i_i_i_i = $ref_tmp75 + 20 | 0;
  $22 = $ref_tmp75;
  $arrayidx87 = $f | 0;
  $arrayidx89 = $f + 4 | 0;
  $arrayidx95 = $f + 8 | 0;
  $23 = $f;
  $i_0285 = 0;
  do {
   do {
    if ((($i_0285 >>> 0) % 1e3 >>> 0 | 0) == 0) {
     _gettimeofday($tv_i61 | 0, 0) | 0;
     if (+(HEAP32[$tv_sec_i62 >> 2] | 0) + +(HEAP32[$tv_usec_i64 >> 2] | 0) / 1.0e6 - $add_i <= 2.0 | (HEAP32[2] | 0) < 2) {
      $j_0240 = 0;
      break;
     }
     $sub_ptr_div_i344 = ((HEAP32[$__end__i >> 2] | 0) - (HEAP32[$__begin__i >> 2] | 0) | 0) / 36 & -1;
     $add = $i_0285 + 1 | 0;
     $32 = HEAP32[_stdout >> 2] | 0;
     _fprintf($32 | 0, 6160, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = 3112, HEAP32[tempInt + 8 >> 2] = $add, HEAP32[tempInt + 16 >> 2] = $sub_ptr_div_i344, tempInt) | 0) | 0;
     $33 = HEAP32[_stdout >> 2] | 0;
     _fflush($33 | 0) | 0;
     $j_0240 = 0;
    } else {
     $j_0240 = 0;
    }
   } while (0);
   do {
    $39 = HEAP32[$__begin__i >> 2] | 0;
    $p_sroa_0_0_copyload190 = HEAP32[$39 + ($i_0285 * 36 & -1) + ($j_0240 * 12 & -1) >> 2] | 0;
    $p_sroa_1_4_copyload194 = HEAP32[$39 + ($i_0285 * 36 & -1) + ($j_0240 * 12 & -1) + 4 >> 2] | 0;
    $p_sroa_2_8_copyload198 = HEAP32[$39 + ($i_0285 * 36 & -1) + ($j_0240 * 12 & -1) + 8 >> 2] | 0;
    $xor36 = (($p_sroa_1_4_copyload194 + 15 | 0) / 30 & -1) << 10 ^ ($p_sroa_0_0_copyload190 + 15 | 0) / 30 & -1 ^ (($p_sroa_2_8_copyload198 + 15 | 0) / 30 & -1) << 20;
    $n_0 = 0;
    L4520 : while (1) {
     HEAP32[$ref_tmp39 >> 2] = $xor36;
     $call41 = __ZNSt3__13mapIjNS_6vectorIjNS_9allocatorIjEEEENS_4lessIjEENS2_INS_4pairIKjS4_EEEEEixERS8_($indexMap, $ref_tmp39) | 0;
     if ($n_0 >>> 0 >= (HEAP32[$call41 + 4 >> 2] | 0) - (HEAP32[$call41 >> 2] | 0) >> 2 >>> 0) {
      label = 4073;
      break;
     }
     HEAP32[$ref_tmp46 >> 2] = $xor36;
     $43 = HEAP32[(HEAP32[(__ZNSt3__13mapIjNS_6vectorIjNS_9allocatorIjEEEENS_4lessIjEENS2_INS_4pairIKjS4_EEEEEixERS8_($indexMap, $ref_tmp46) | 0) >> 2] | 0) + ($n_0 << 2) >> 2] | 0;
     $44 = HEAP32[$__begin__i_i_i >> 2] | 0;
     $sub_i = (HEAP32[$44 + ($43 * 24 & -1) >> 2] | 0) - $p_sroa_0_0_copyload190 | 0;
     $sub4_i = (HEAP32[$44 + ($43 * 24 & -1) + 4 >> 2] | 0) - $p_sroa_1_4_copyload194 | 0;
     $sub6_i = (HEAP32[$44 + ($43 * 24 & -1) + 8 >> 2] | 0) - $p_sroa_2_8_copyload198 | 0;
     do {
      if (($sub_i + 30 | 0) >>> 0 <= 60) {
       if (($sub4_i + 30 | 0) >>> 0 > 60) {
        break;
       }
       if (($sub6_i + 30 | 0) >>> 0 > 60) {
        break;
       }
       $conv_i_i$0 = $sub_i;
       $conv_i_i$1 = ($sub_i | 0) < 0 ? -1 : 0;
       $mul_i_i$0 = ___muldi3($conv_i_i$0, $conv_i_i$1, $conv_i_i$0, $conv_i_i$1) | 0;
       $mul_i_i$1 = tempRet0;
       $conv4_i_i$0 = $sub4_i;
       $conv4_i_i$1 = ($sub4_i | 0) < 0 ? -1 : 0;
       $mul7_i_i$0 = ___muldi3($conv4_i_i$0, $conv4_i_i$1, $conv4_i_i$0, $conv4_i_i$1) | 0;
       $add_i_i$0 = _i64Add($mul7_i_i$0, tempRet0, $mul_i_i$0, $mul_i_i$1) | 0;
       $add_i_i$1 = tempRet0;
       $conv8_i_i$0 = $sub6_i;
       $conv8_i_i$1 = ($sub6_i | 0) < 0 ? -1 : 0;
       $mul11_i_i$0 = ___muldi3($conv8_i_i$0, $conv8_i_i$1, $conv8_i_i$0, $conv8_i_i$1) | 0;
       $add12_i_i$0 = _i64Add($add_i_i$0, $add_i_i$1, $mul11_i_i$0, tempRet0) | 0;
       $add12_i_i$1 = tempRet0;
       $$etemp$0$1 = 0;
       if (($add12_i_i$1 | 0) < ($$etemp$0$1 | 0) | ($add12_i_i$1 | 0) == ($$etemp$0$1 | 0) & $add12_i_i$0 >>> 0 < 901 >>> 0) {
        label = 4070;
        break L4520;
       }
      }
     } while (0);
     $n_0 = $n_0 + 1 | 0;
    }
    do {
     if ((label | 0) == 4070) {
      label = 0;
      HEAP32[$ref_tmp58 >> 2] = $xor36;
      $idx_3 = HEAP32[(HEAP32[(__ZNSt3__13mapIjNS_6vectorIjNS_9allocatorIjEEEENS_4lessIjEENS2_INS_4pairIKjS4_EEEEEixERS8_($indexMap, $ref_tmp58) | 0) >> 2] | 0) + ($n_0 << 2) >> 2] | 0;
     } else if ((label | 0) == 4073) {
      label = 0;
      HEAP32[$ref_tmp65 >> 2] = $xor36;
      $call67 = __ZNSt3__13mapIjNS_6vectorIjNS_9allocatorIjEEEENS_4lessIjEENS2_INS_4pairIKjS4_EEEEEixERS8_($indexMap, $ref_tmp65) | 0;
      $sub_ptr_div_i526 = ((HEAP32[$__end__i_i_i >> 2] | 0) - (HEAP32[$__begin__i_i_i >> 2] | 0) | 0) / 24 & -1;
      HEAP32[$ref_tmp70 >> 2] = $sub_ptr_div_i526;
      $__end__i632 = $call67 + 4 | 0;
      $55 = HEAP32[$__end__i632 >> 2] | 0;
      if (($55 | 0) == (HEAP32[$call67 + 8 >> 2] | 0)) {
       __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($call67, $ref_tmp70);
      } else {
       if (($55 | 0) == 0) {
        $57 = 0;
       } else {
        HEAP32[$55 >> 2] = $sub_ptr_div_i526;
        $57 = HEAP32[$__end__i632 >> 2] | 0;
       }
       HEAP32[$__end__i632 >> 2] = $57 + 4;
      }
      $58 = HEAP32[$__end__i_i_i >> 2] | 0;
      $sub_ptr_div_i660 = ($58 - (HEAP32[$__begin__i_i_i >> 2] | 0) | 0) / 24 & -1;
      HEAP32[$agg_tmp78_sroa_0_0__idx >> 2] = $p_sroa_0_0_copyload190;
      HEAP32[$agg_tmp78_sroa_1_4__idx201 >> 2] = $p_sroa_1_4_copyload194;
      HEAP32[$agg_tmp78_sroa_2_8__idx202 >> 2] = $p_sroa_2_8_copyload198;
      HEAP32[$__begin__i_i_i_i_i >> 2] = 0;
      HEAP32[$__end__i_i_i_i_i >> 2] = 0;
      HEAP32[$__first__i_i_i_i_i_i_i_i >> 2] = 0;
      if (($58 | 0) != (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0)) {
       if (($58 | 0) != 0) {
        $61 = $58;
        HEAP32[$61 >> 2] = HEAP32[$22 >> 2];
        HEAP32[$61 + 4 >> 2] = HEAP32[$22 + 4 >> 2];
        HEAP32[$61 + 8 >> 2] = HEAP32[$22 + 8 >> 2];
        HEAP32[$58 + 12 >> 2] = 0;
        HEAP32[$58 + 16 >> 2] = 0;
        HEAP32[$58 + 20 >> 2] = 0;
       }
       HEAP32[$__end__i_i_i >> 2] = (HEAP32[$__end__i_i_i >> 2] | 0) + 24;
       $idx_3 = $sub_ptr_div_i660;
       break;
      }
      __ZNSt3__16vectorI15OptimizedPoint3NS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($points, $ref_tmp75);
      $_pre301 = HEAP32[$__begin__i_i_i_i_i >> 2] | 0;
      if (($_pre301 | 0) == 0) {
       $idx_3 = $sub_ptr_div_i660;
       break;
      }
      $64 = HEAP32[$__end__i_i_i_i_i >> 2] | 0;
      if (($_pre301 | 0) != ($64 | 0)) {
       HEAP32[$__end__i_i_i_i_i >> 2] = $64 + ((($64 - 4 + (-$_pre301 | 0) | 0) >>> 2 ^ -1) << 2);
      }
      __ZdlPv($_pre301);
      $idx_3 = $sub_ptr_div_i660;
     }
    } while (0);
    HEAP32[$f + ($j_0240 << 2) >> 2] = $idx_3;
    $j_0240 = $j_0240 + 1 | 0;
   } while ($j_0240 >>> 0 < 3);
   $78 = HEAP32[$arrayidx87 >> 2] | 0;
   $79 = HEAP32[$arrayidx89 >> 2] | 0;
   do {
    if (($78 | 0) != ($79 | 0)) {
     $80 = HEAP32[$arrayidx95 >> 2] | 0;
     if (($78 | 0) == ($80 | 0) | ($79 | 0) == ($80 | 0)) {
      break;
     }
     $81 = HEAP32[$__begin__i_i_i >> 2] | 0;
     $faceIndexList262 = $81 + ($78 * 24 & -1) + 12 | 0;
     $__end__i608263 = $81 + ($78 * 24 & -1) + 16 | 0;
     $82 = HEAP32[$__end__i608263 >> 2] | 0;
     $83 = HEAP32[$faceIndexList262 >> 2] | 0;
     if (($82 | 0) != ($83 | 0)) {
      $84 = HEAP32[$81 + ($79 * 24 & -1) + 16 >> 2] | 0;
      $85 = HEAP32[$81 + ($79 * 24 & -1) + 12 >> 2] | 0;
      $cmp124256 = ($84 | 0) == ($85 | 0);
      $sub_ptr_div_i613 = $82 - $83 >> 2;
      $duplicate_0_off0270 = 0;
      $_idx0_0271 = 0;
      while (1) {
       if ($cmp124256) {
        $duplicate_1_off0_lcssa = $duplicate_0_off0270;
       } else {
        $86 = HEAP32[$81 + ($80 * 24 & -1) + 16 >> 2] | 0;
        $87 = HEAP32[$81 + ($80 * 24 & -1) + 12 >> 2] | 0;
        $cmp135247 = ($86 | 0) == ($87 | 0);
        $sub_ptr_div_i600 = $84 - $85 >> 2;
        $duplicate_1_off0257 = $duplicate_0_off0270;
        $_idx1_0258 = 0;
        while (1) {
         if ($cmp135247) {
          $duplicate_2_off0_lcssa = $duplicate_1_off0257;
         } else {
          $sub_ptr_div_i587 = $86 - $87 >> 2;
          $_pre304 = HEAP32[$83 + ($_idx0_0271 << 2) >> 2] | 0;
          $_pre305 = HEAP32[$85 + ($_idx1_0258 << 2) >> 2] | 0;
          $duplicate_2_off0248 = $duplicate_1_off0257;
          $_idx2_0249 = 0;
          while (1) {
           if (($_pre304 | 0) == ($_pre305 | 0)) {
            $duplicate_3_off0 = ($_pre304 | 0) == (HEAP32[$87 + ($_idx2_0249 << 2) >> 2] | 0) | $duplicate_2_off0248;
           } else {
            $duplicate_3_off0 = $duplicate_2_off0248;
           }
           $inc175 = $_idx2_0249 + 1 | 0;
           if ($inc175 >>> 0 < $sub_ptr_div_i587 >>> 0) {
            $duplicate_2_off0248 = $duplicate_3_off0;
            $_idx2_0249 = $inc175;
           } else {
            $duplicate_2_off0_lcssa = $duplicate_3_off0;
            break;
           }
          }
         }
         $inc178 = $_idx1_0258 + 1 | 0;
         if ($inc178 >>> 0 < $sub_ptr_div_i600 >>> 0) {
          $duplicate_1_off0257 = $duplicate_2_off0_lcssa;
          $_idx1_0258 = $inc178;
         } else {
          $duplicate_1_off0_lcssa = $duplicate_2_off0_lcssa;
          break;
         }
        }
       }
       $inc181 = $_idx0_0271 + 1 | 0;
       if ($inc181 >>> 0 < $sub_ptr_div_i613 >>> 0) {
        $duplicate_0_off0270 = $duplicate_1_off0_lcssa;
        $_idx0_0271 = $inc181;
       } else {
        break;
       }
      }
      if ($duplicate_1_off0_lcssa) {
       break;
      }
     }
     $sub_ptr_div_i534 = ((HEAP32[$__end__i_i_i304 >> 2] | 0) - (HEAP32[$__begin__i_i_i303 >> 2] | 0) | 0) / 24 & -1;
     HEAP32[$ref_tmp193 >> 2] = $sub_ptr_div_i534;
     if (($82 | 0) == (HEAP32[$81 + ($78 * 24 & -1) + 20 >> 2] | 0)) {
      __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($faceIndexList262, $ref_tmp193);
     } else {
      if (($82 | 0) == 0) {
       $92 = 0;
      } else {
       HEAP32[$82 >> 2] = $sub_ptr_div_i534;
       $92 = HEAP32[$__end__i608263 >> 2] | 0;
      }
      HEAP32[$__end__i608263 >> 2] = $92 + 4;
     }
     $93 = HEAP32[$__begin__i_i_i >> 2] | 0;
     $sub_ptr_div_i479 = ((HEAP32[$__end__i_i_i304 >> 2] | 0) - (HEAP32[$__begin__i_i_i303 >> 2] | 0) | 0) / 24 & -1;
     HEAP32[$ref_tmp203 >> 2] = $sub_ptr_div_i479;
     $__end__i446 = $93 + ($79 * 24 & -1) + 16 | 0;
     $96 = HEAP32[$__end__i446 >> 2] | 0;
     if (($96 | 0) == (HEAP32[$93 + ($79 * 24 & -1) + 20 >> 2] | 0)) {
      __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($93 + ($79 * 24 & -1) + 12 | 0, $ref_tmp203);
     } else {
      if (($96 | 0) == 0) {
       $98 = 0;
      } else {
       HEAP32[$96 >> 2] = $sub_ptr_div_i479;
       $98 = HEAP32[$__end__i446 >> 2] | 0;
      }
      HEAP32[$__end__i446 >> 2] = $98 + 4;
     }
     $99 = HEAP32[$__begin__i_i_i >> 2] | 0;
     $sub_ptr_div_i427 = ((HEAP32[$__end__i_i_i304 >> 2] | 0) - (HEAP32[$__begin__i_i_i303 >> 2] | 0) | 0) / 24 & -1;
     HEAP32[$ref_tmp213 >> 2] = $sub_ptr_div_i427;
     $__end__i396 = $99 + ($80 * 24 & -1) + 16 | 0;
     $102 = HEAP32[$__end__i396 >> 2] | 0;
     if (($102 | 0) == (HEAP32[$99 + ($80 * 24 & -1) + 20 >> 2] | 0)) {
      __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($99 + ($80 * 24 & -1) + 12 | 0, $ref_tmp213);
     } else {
      if (($102 | 0) == 0) {
       $104 = 0;
      } else {
       HEAP32[$102 >> 2] = $sub_ptr_div_i427;
       $104 = HEAP32[$__end__i396 >> 2] | 0;
      }
      HEAP32[$__end__i396 >> 2] = $104 + 4;
     }
     $105 = HEAP32[$__end__i_i_i304 >> 2] | 0;
     if (($105 | 0) == (HEAP32[$__first__i_i_i_i_i_i310 >> 2] | 0)) {
      __ZNSt3__16vectorI13OptimizedFaceNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($faces, $f);
      break;
     }
     if (($105 | 0) == 0) {
      $108 = 0;
     } else {
      $107 = $105;
      HEAP32[$107 >> 2] = HEAP32[$23 >> 2];
      HEAP32[$107 + 4 >> 2] = HEAP32[$23 + 4 >> 2];
      HEAP32[$107 + 8 >> 2] = HEAP32[$23 + 8 >> 2];
      HEAP32[$107 + 12 >> 2] = HEAP32[$23 + 12 >> 2];
      HEAP32[$107 + 16 >> 2] = HEAP32[$23 + 16 >> 2];
      HEAP32[$107 + 20 >> 2] = HEAP32[$23 + 20 >> 2];
      $108 = HEAP32[$__end__i_i_i304 >> 2] | 0;
     }
     HEAP32[$__end__i_i_i304 >> 2] = $108 + 24;
    }
   } while (0);
   $i_0285 = $i_0285 + 1 | 0;
  } while ($i_0285 >>> 0 < (((HEAP32[$__end__i >> 2] | 0) - (HEAP32[$__begin__i >> 2] | 0) | 0) / 36 & -1) >>> 0);
 }
 $25 = HEAP32[$__begin__i_i_i303 >> 2] | 0;
 if ((HEAP32[$__end__i_i_i304 >> 2] | 0) == ($25 | 0)) {
  $__left__i_i_i_i_i = $indexMap + 4 | 0;
  $138 = HEAP32[$__left__i_i_i_i_i >> 2] | 0;
  $139 = $138;
  __ZNSt3__16__treeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS3_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($__tree__i_i, $139);
  STACKTOP = __stackBase__;
  return;
 }
 $__begin__i_i104 = $this + 4 | 0;
 $i224_0219 = 0;
 $111 = $25;
 do {
  $112 = HEAP32[$111 + ($i224_0219 * 24 & -1) >> 2] | 0;
  $113 = HEAP32[$111 + ($i224_0219 * 24 & -1) + 4 >> 2] | 0;
  $114 = HEAP32[$__begin__i_i104 >> 2] | 0;
  $115 = HEAP32[$114 + ($112 * 24 & -1) + 16 >> 2] | 0;
  $116 = HEAP32[$114 + ($112 * 24 & -1) + 12 >> 2] | 0;
  L4611 : do {
   if (($115 | 0) == ($116 | 0)) {
    $retval_0_i113 = -1;
   } else {
    $sub_ptr_div_i63_i = $115 - $116 >> 2;
    $__end__i_i106 = $114 + ($113 * 24 & -1) + 16 | 0;
    $__begin__i40_i = $114 + ($113 * 24 & -1) + 12 | 0;
    $i_019_i = 0;
    while (1) {
     $117 = HEAP32[$116 + ($i_019_i << 2) >> 2] | 0;
     L4615 : do {
      if (($117 | 0) != ($i224_0219 | 0)) {
       $119 = HEAP32[$__begin__i40_i >> 2] | 0;
       $sub_ptr_div_i_i110 = (HEAP32[$__end__i_i106 >> 2] | 0) - $119 >> 2;
       $j_0_i = 0;
       while (1) {
        if ($j_0_i >>> 0 >= $sub_ptr_div_i_i110 >>> 0) {
         break L4615;
        }
        $120 = HEAP32[$119 + ($j_0_i << 2) >> 2] | 0;
        if (($120 | 0) != ($i224_0219 | 0) & ($117 | 0) == ($120 | 0)) {
         $retval_0_i113 = $117;
         break L4611;
        } else {
         $j_0_i = $j_0_i + 1 | 0;
        }
       }
      }
     } while (0);
     $inc26_i = $i_019_i + 1 | 0;
     if ($inc26_i >>> 0 < $sub_ptr_div_i63_i >>> 0) {
      $i_019_i = $inc26_i;
     } else {
      $retval_0_i113 = -1;
      break;
     }
    }
   }
  } while (0);
  HEAP32[$111 + ($i224_0219 * 24 & -1) + 12 >> 2] = $retval_0_i113;
  $121 = HEAP32[$111 + ($i224_0219 * 24 & -1) + 8 >> 2] | 0;
  $122 = HEAP32[$__begin__i_i104 >> 2] | 0;
  $123 = HEAP32[$122 + ($113 * 24 & -1) + 16 >> 2] | 0;
  $124 = HEAP32[$122 + ($113 * 24 & -1) + 12 >> 2] | 0;
  L4622 : do {
   if (($123 | 0) == ($124 | 0)) {
    $retval_0_i145 = -1;
   } else {
    $sub_ptr_div_i63_i142 = $123 - $124 >> 2;
    $__end__i_i122 = $122 + ($121 * 24 & -1) + 16 | 0;
    $__begin__i40_i123 = $122 + ($121 * 24 & -1) + 12 | 0;
    $i_019_i118 = 0;
    while (1) {
     $125 = HEAP32[$124 + ($i_019_i118 << 2) >> 2] | 0;
     L4626 : do {
      if (($125 | 0) != ($i224_0219 | 0)) {
       $127 = HEAP32[$__begin__i40_i123 >> 2] | 0;
       $sub_ptr_div_i_i127 = (HEAP32[$__end__i_i122 >> 2] | 0) - $127 >> 2;
       $j_0_i129 = 0;
       while (1) {
        if ($j_0_i129 >>> 0 >= $sub_ptr_div_i_i127 >>> 0) {
         break L4626;
        }
        $128 = HEAP32[$127 + ($j_0_i129 << 2) >> 2] | 0;
        if (($128 | 0) != ($i224_0219 | 0) & ($125 | 0) == ($128 | 0)) {
         $retval_0_i145 = $125;
         break L4622;
        } else {
         $j_0_i129 = $j_0_i129 + 1 | 0;
        }
       }
      }
     } while (0);
     $inc26_i138 = $i_019_i118 + 1 | 0;
     if ($inc26_i138 >>> 0 < $sub_ptr_div_i63_i142 >>> 0) {
      $i_019_i118 = $inc26_i138;
     } else {
      $retval_0_i145 = -1;
      break;
     }
    }
   }
  } while (0);
  HEAP32[$111 + ($i224_0219 * 24 & -1) + 16 >> 2] = $retval_0_i145;
  $129 = HEAP32[$__begin__i_i104 >> 2] | 0;
  $130 = HEAP32[$129 + ($121 * 24 & -1) + 16 >> 2] | 0;
  $131 = HEAP32[$129 + ($121 * 24 & -1) + 12 >> 2] | 0;
  L4633 : do {
   if (($130 | 0) == ($131 | 0)) {
    $retval_0_i178 = -1;
   } else {
    $sub_ptr_div_i63_i175 = $130 - $131 >> 2;
    $__end__i_i155 = $129 + ($112 * 24 & -1) + 16 | 0;
    $__begin__i40_i156 = $129 + ($112 * 24 & -1) + 12 | 0;
    $i_019_i151 = 0;
    while (1) {
     $132 = HEAP32[$131 + ($i_019_i151 << 2) >> 2] | 0;
     L4637 : do {
      if (($132 | 0) != ($i224_0219 | 0)) {
       $134 = HEAP32[$__begin__i40_i156 >> 2] | 0;
       $sub_ptr_div_i_i160 = (HEAP32[$__end__i_i155 >> 2] | 0) - $134 >> 2;
       $j_0_i162 = 0;
       while (1) {
        if ($j_0_i162 >>> 0 >= $sub_ptr_div_i_i160 >>> 0) {
         break L4637;
        }
        $135 = HEAP32[$134 + ($j_0_i162 << 2) >> 2] | 0;
        if (($135 | 0) != ($i224_0219 | 0) & ($132 | 0) == ($135 | 0)) {
         $retval_0_i178 = $132;
         break L4633;
        } else {
         $j_0_i162 = $j_0_i162 + 1 | 0;
        }
       }
      }
     } while (0);
     $inc26_i171 = $i_019_i151 + 1 | 0;
     if ($inc26_i171 >>> 0 < $sub_ptr_div_i63_i175 >>> 0) {
      $i_019_i151 = $inc26_i171;
     } else {
      $retval_0_i178 = -1;
      break;
     }
    }
   }
  } while (0);
  HEAP32[$111 + ($i224_0219 * 24 & -1) + 20 >> 2] = $retval_0_i178;
  $i224_0219 = $i224_0219 + 1 | 0;
  $111 = HEAP32[$__begin__i_i_i303 >> 2] | 0;
 } while ($i224_0219 >>> 0 < (((HEAP32[$__end__i_i_i304 >> 2] | 0) - $111 | 0) / 24 & -1) >>> 0);
 $__left__i_i_i_i_i = $indexMap + 4 | 0;
 $138 = HEAP32[$__left__i_i_i_i_i >> 2] | 0;
 $139 = $138;
 __ZNSt3__16__treeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS3_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($__tree__i_i, $139);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__16vectorI15OptimizedPoint3NS_9allocatorIS1_EEE7reserveEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $__first__i_i_i_i_i = 0, $__begin__i_i = 0, $1 = 0, $sub_ptr_rhs_cast_i_i = 0, $__end__i = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $6 = 0, $__end1_addr_i_015_i = 0, $add_ptr_i_i5 = 0, $incdec_ptr_i_i = 0, $7 = 0, $8 = 0, $_pre_i = 0, $_pre47 = 0, $9 = 0, $incdec_ptr_i_i_i_i_i = 0, $10 = 0, $11 = 0, $__end__i_i_i_i_i_i_i_i_i_i = 0, $12 = 0, $17 = 0;
 $__first__i_i_i_i_i = $this + 8 | 0;
 $__begin__i_i = $this | 0;
 $1 = HEAP32[$__begin__i_i >> 2] | 0;
 $sub_ptr_rhs_cast_i_i = $1;
 if ((((HEAP32[$__first__i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i_i | 0) / 24 & -1) >>> 0 >= $__n >>> 0) {
  return;
 }
 $__end__i = $this + 4 | 0;
 $2 = HEAP32[$__end__i >> 2] | 0;
 if (($__n | 0) == 0) {
  $cond_i_i = 0;
  $5 = $1;
  $4 = $2;
 } else {
  $3 = __Znwj($__n * 24 & -1) | 0;
  $cond_i_i = $3;
  $5 = HEAP32[$__begin__i_i >> 2] | 0;
  $4 = HEAP32[$__end__i >> 2] | 0;
 }
 $add_ptr_i_i = $cond_i_i + ((($2 - $sub_ptr_rhs_cast_i_i | 0) / 24 & -1) * 24 & -1) | 0;
 $add_ptr6_i_i = $cond_i_i + ($__n * 24 & -1) | 0;
 do {
  if (($4 | 0) == ($5 | 0)) {
   HEAP32[$__begin__i_i >> 2] = $add_ptr_i_i;
   HEAP32[$__end__i >> 2] = $add_ptr_i_i;
   HEAP32[$__first__i_i_i_i_i >> 2] = $add_ptr6_i_i;
   $17 = $4;
  } else {
   $__end1_addr_i_015_i = $4;
   $6 = $add_ptr_i_i;
   while (1) {
    $add_ptr_i_i5 = $6 - 24 | 0;
    $incdec_ptr_i_i = $__end1_addr_i_015_i - 24 | 0;
    if (($add_ptr_i_i5 | 0) != 0) {
     $7 = $add_ptr_i_i5;
     $8 = $incdec_ptr_i_i;
     HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
     HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
     HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
     __ZNSt3__16vectorIjNS_9allocatorIjEEEC2ERKS3_($6 - 24 + 12 | 0, $__end1_addr_i_015_i - 24 + 12 | 0);
    }
    if (($incdec_ptr_i_i | 0) == ($5 | 0)) {
     break;
    } else {
     $__end1_addr_i_015_i = $incdec_ptr_i_i;
     $6 = $add_ptr_i_i5;
    }
   }
   $_pre_i = HEAP32[$__begin__i_i >> 2] | 0;
   $_pre47 = HEAP32[$__end__i >> 2] | 0;
   HEAP32[$__begin__i_i >> 2] = $add_ptr_i_i5;
   HEAP32[$__end__i >> 2] = $add_ptr_i_i;
   HEAP32[$__first__i_i_i_i_i >> 2] = $add_ptr6_i_i;
   if (($_pre_i | 0) == ($_pre47 | 0)) {
    $17 = $_pre_i;
    break;
   } else {
    $9 = $_pre47;
   }
   while (1) {
    $incdec_ptr_i_i_i_i_i = $9 - 24 | 0;
    $10 = HEAP32[$9 - 24 + 12 >> 2] | 0;
    $11 = $10;
    if (($10 | 0) != 0) {
     $__end__i_i_i_i_i_i_i_i_i_i = $9 - 24 + 16 | 0;
     $12 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i >> 2] | 0;
     if (($10 | 0) != ($12 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i_i_i >> 2] = $12 + ((($12 - 4 + (-$11 | 0) | 0) >>> 2 ^ -1) << 2);
     }
     __ZdlPv($10);
    }
    if (($_pre_i | 0) == ($incdec_ptr_i_i_i_i_i | 0)) {
     $17 = $_pre_i;
     break;
    } else {
     $9 = $incdec_ptr_i_i_i_i_i;
    }
   }
  }
 } while (0);
 if (($17 | 0) == 0) {
  return;
 }
 __ZdlPv($17);
 return;
}
function __ZNSt3__13mapIjNS_6vectorIjNS_9allocatorIjEEEENS_4lessIjEENS2_INS_4pairIKjS4_EEEEEixERS8_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $__parent = 0, $__first__i_i_i_i_i = 0, $__left__i_i = 0, $0 = 0, $1 = 0, $__nd_0_in_i = 0, $2 = 0, $__left__i = 0, $3 = 0, $__right__i = 0, $4 = 0, $5 = 0, $__parent_0_load = 0, $retval_0_i = 0, $6 = 0, $call_i_i_i = 0, $__value__i33 = 0, $second_i = 0, $12 = 0, $__begin_node__i43_i = 0, $16 = 0, $18 = 0, $__first__i_i_i_i = 0, $__r_0 = 0, $second = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__parent = __stackBase__ | 0;
 $__first__i_i_i_i_i = $this + 4 | 0;
 $__left__i_i = $__first__i_i_i_i_i | 0;
 $0 = HEAP32[$__left__i_i >> 2] | 0;
 do {
  if (($0 | 0) == 0) {
   $5 = $__first__i_i_i_i_i;
   HEAP32[$__parent >> 2] = $5;
   $retval_0_i = $__left__i_i;
   $__parent_0_load = $5;
  } else {
   $1 = HEAP32[$__k >> 2] | 0;
   $__nd_0_in_i = $0;
   while (1) {
    $2 = HEAP32[$__nd_0_in_i + 16 >> 2] | 0;
    if ($1 >>> 0 < $2 >>> 0) {
     $__left__i = $__nd_0_in_i | 0;
     $3 = HEAP32[$__left__i >> 2] | 0;
     if (($3 | 0) == 0) {
      label = 4201;
      break;
     } else {
      $__nd_0_in_i = $3;
      continue;
     }
    }
    if ($2 >>> 0 >= $1 >>> 0) {
     label = 4205;
     break;
    }
    $__right__i = $__nd_0_in_i + 4 | 0;
    $4 = HEAP32[$__right__i >> 2] | 0;
    if (($4 | 0) == 0) {
     label = 4204;
     break;
    } else {
     $__nd_0_in_i = $4;
    }
   }
   if ((label | 0) == 4204) {
    HEAP32[$__parent >> 2] = $__nd_0_in_i;
    $retval_0_i = $__right__i;
    $__parent_0_load = $__nd_0_in_i;
    break;
   } else if ((label | 0) == 4205) {
    HEAP32[$__parent >> 2] = $__nd_0_in_i;
    $retval_0_i = $__parent;
    $__parent_0_load = $__nd_0_in_i;
    break;
   } else if ((label | 0) == 4201) {
    HEAP32[$__parent >> 2] = $__nd_0_in_i;
    $retval_0_i = $__left__i;
    $__parent_0_load = $__nd_0_in_i;
    break;
   }
  }
 } while (0);
 $6 = HEAP32[$retval_0_i >> 2] | 0;
 if (($6 | 0) != 0) {
  $__r_0 = $6;
  $second = $__r_0 + 20 | 0;
  STACKTOP = __stackBase__;
  return $second | 0;
 }
 $call_i_i_i = __Znwj(32) | 0;
 $__value__i33 = $call_i_i_i + 16 | 0;
 if (($__value__i33 | 0) != 0) {
  HEAP32[$__value__i33 >> 2] = HEAP32[$__k >> 2];
 }
 $second_i = $call_i_i_i + 20 | 0;
 if (($second_i | 0) != 0) {
  HEAP32[$second_i >> 2] = 0;
  HEAP32[$call_i_i_i + 24 >> 2] = 0;
  HEAP32[$call_i_i_i + 28 >> 2] = 0;
 }
 $12 = $call_i_i_i;
 HEAP32[$call_i_i_i >> 2] = 0;
 HEAP32[$call_i_i_i + 4 >> 2] = 0;
 HEAP32[$call_i_i_i + 8 >> 2] = $__parent_0_load;
 HEAP32[$retval_0_i >> 2] = $12;
 $__begin_node__i43_i = $this | 0;
 $16 = HEAP32[HEAP32[$__begin_node__i43_i >> 2] >> 2] | 0;
 if (($16 | 0) == 0) {
  $18 = $12;
 } else {
  HEAP32[$__begin_node__i43_i >> 2] = $16;
  $18 = HEAP32[$retval_0_i >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $18);
 $__first__i_i_i_i = $this + 8 | 0;
 HEAP32[$__first__i_i_i_i >> 2] = (HEAP32[$__first__i_i_i_i >> 2] | 0) + 1;
 $__r_0 = $call_i_i_i;
 $second = $__r_0 + 20 | 0;
 STACKTOP = __stackBase__;
 return $second | 0;
}
function __ZNSt3__16__treeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS3_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 var $4 = 0, $5 = 0, $__end__i_i_i_i_i_i_i_i = 0, $6 = 0;
 if (($__nd | 0) == 0) {
  return;
 }
 __ZNSt3__16__treeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS3_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, HEAP32[$__nd >> 2] | 0);
 __ZNSt3__16__treeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS3_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
 $4 = HEAP32[$__nd + 20 >> 2] | 0;
 $5 = $4;
 if (($4 | 0) != 0) {
  $__end__i_i_i_i_i_i_i_i = $__nd + 24 | 0;
  $6 = HEAP32[$__end__i_i_i_i_i_i_i_i >> 2] | 0;
  if (($4 | 0) != ($6 | 0)) {
   HEAP32[$__end__i_i_i_i_i_i_i_i >> 2] = $6 + ((($6 - 4 + (-$5 | 0) | 0) >>> 2 ^ -1) << 2);
  }
  __ZdlPv($4);
 }
 __ZdlPv($__nd);
 return;
}
function __ZNSt3__16vectorI13OptimizedFaceNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_022 = 0, $retval_i_023 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $4 = 0, $5 = 0, $incdec_ptr = 0, $6 = 0, $sub_ptr_sub_i_i = 0, $add_ptr_i_i13 = 0, $8 = 0, $9 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = ((HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 24 & -1;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 178956970) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_div_i_i_i = ((HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 24 & -1;
 if ($sub_ptr_div_i_i_i >>> 0 > 89478484) {
  $retval_i_022 = 178956970;
  label = 4231;
 } else {
  $mul_i = $sub_ptr_div_i_i_i << 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_023 = 0;
  } else {
   $retval_i_022 = $_sroa_speculated;
   label = 4231;
  }
 }
 if ((label | 0) == 4231) {
  $cond_i_i = __Znwj($retval_i_022 * 24 & -1) | 0;
  $retval_i_023 = $retval_i_022;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i * 24 & -1) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_023 * 24 & -1) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  $4 = $add_ptr_i_i;
  $5 = $__x;
  HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  HEAP32[$4 + 12 >> 2] = HEAP32[$5 + 12 >> 2];
  HEAP32[$4 + 16 >> 2] = HEAP32[$5 + 16 >> 2];
  HEAP32[$4 + 20 >> 2] = HEAP32[$5 + 20 >> 2];
 }
 $incdec_ptr = $cond_i_i + ($add * 24 & -1) | 0;
 $6 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i_i = (HEAP32[$__end__i >> 2] | 0) - $6 | 0;
 $add_ptr_i_i13 = $cond_i_i + (((($sub_ptr_sub_i_i | 0) / -24 & -1) + $sub_ptr_div_i | 0) * 24 & -1) | 0;
 $8 = $add_ptr_i_i13;
 $9 = $6;
 _memcpy($8 | 0, $9 | 0, $sub_ptr_sub_i_i) | 0;
 HEAP32[$__begin__i >> 2] = $add_ptr_i_i13;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 if (($6 | 0) == 0) {
  return;
 }
 __ZdlPv($9);
 return;
}
function __ZNSt3__16vectorI15OptimizedPoint3NS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_058 = 0, $retval_i_059 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $4 = 0, $5 = 0, $incdec_ptr = 0, $7 = 0, $8 = 0, $__v_sroa_1_4_load4452 = 0, $__end1_addr_i_015_i = 0, $add_ptr_i_i13 = 0, $incdec_ptr_i_i = 0, $9 = 0, $10 = 0, $_pre_i = 0, $_pre = 0, $11 = 0, $incdec_ptr_i_i_i_i_i18 = 0, $12 = 0, $13 = 0, $__end__i_i_i_i_i_i_i_i_i_i24 = 0, $14 = 0, $19 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = ((HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 24 & -1;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 178956970) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_div_i_i_i = ((HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 24 & -1;
 if ($sub_ptr_div_i_i_i >>> 0 > 89478484) {
  $retval_i_058 = 178956970;
  label = 4243;
 } else {
  $mul_i = $sub_ptr_div_i_i_i << 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_059 = 0;
  } else {
   $retval_i_058 = $_sroa_speculated;
   label = 4243;
  }
 }
 if ((label | 0) == 4243) {
  $cond_i_i = __Znwj($retval_i_058 * 24 & -1) | 0;
  $retval_i_059 = $retval_i_058;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i * 24 & -1) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_059 * 24 & -1) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  $4 = $add_ptr_i_i;
  $5 = $__x;
  HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  __ZNSt3__16vectorIjNS_9allocatorIjEEEC2ERKS3_($cond_i_i + ($sub_ptr_div_i * 24 & -1) + 12 | 0, $__x + 12 | 0);
 }
 $incdec_ptr = $cond_i_i + ($add * 24 & -1) | 0;
 $7 = HEAP32[$__begin__i >> 2] | 0;
 $8 = HEAP32[$__end__i >> 2] | 0;
 do {
  if (($8 | 0) == ($7 | 0)) {
   HEAP32[$__begin__i >> 2] = $add_ptr_i_i;
   HEAP32[$__end__i >> 2] = $incdec_ptr;
   HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
   $19 = $7;
  } else {
   $__end1_addr_i_015_i = $8;
   $__v_sroa_1_4_load4452 = $add_ptr_i_i;
   while (1) {
    $add_ptr_i_i13 = $__v_sroa_1_4_load4452 - 24 | 0;
    $incdec_ptr_i_i = $__end1_addr_i_015_i - 24 | 0;
    if (($add_ptr_i_i13 | 0) != 0) {
     $9 = $add_ptr_i_i13;
     $10 = $incdec_ptr_i_i;
     HEAP32[$9 >> 2] = HEAP32[$10 >> 2];
     HEAP32[$9 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
     HEAP32[$9 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
     __ZNSt3__16vectorIjNS_9allocatorIjEEEC2ERKS3_($__v_sroa_1_4_load4452 - 24 + 12 | 0, $__end1_addr_i_015_i - 24 + 12 | 0);
    }
    if (($incdec_ptr_i_i | 0) == ($7 | 0)) {
     break;
    } else {
     $__end1_addr_i_015_i = $incdec_ptr_i_i;
     $__v_sroa_1_4_load4452 = $add_ptr_i_i13;
    }
   }
   $_pre_i = HEAP32[$__begin__i >> 2] | 0;
   $_pre = HEAP32[$__end__i >> 2] | 0;
   HEAP32[$__begin__i >> 2] = $add_ptr_i_i13;
   HEAP32[$__end__i >> 2] = $incdec_ptr;
   HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
   if (($_pre_i | 0) == ($_pre | 0)) {
    $19 = $_pre_i;
    break;
   } else {
    $11 = $_pre;
   }
   while (1) {
    $incdec_ptr_i_i_i_i_i18 = $11 - 24 | 0;
    $12 = HEAP32[$11 - 24 + 12 >> 2] | 0;
    $13 = $12;
    if (($12 | 0) != 0) {
     $__end__i_i_i_i_i_i_i_i_i_i24 = $11 - 24 + 16 | 0;
     $14 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i24 >> 2] | 0;
     if (($12 | 0) != ($14 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i_i_i24 >> 2] = $14 + ((($14 - 4 + (-$13 | 0) | 0) >>> 2 ^ -1) << 2);
     }
     __ZdlPv($12);
    }
    if (($_pre_i | 0) == ($incdec_ptr_i_i_i_i_i18 | 0)) {
     $19 = $_pre_i;
     break;
    } else {
     $11 = $incdec_ptr_i_i_i_i_i18;
    }
   }
  }
 } while (0);
 if (($19 | 0) == 0) {
  return;
 }
 __ZdlPv($19);
 return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEEC2ERKS3_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__begin__i = 0, $__end__i = 0, $__first__i_i_i_i = 0, $__end__i18 = 0, $__begin__i19 = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__first_addr_04_i = 0, $7 = 0;
 $__begin__i = $this | 0;
 HEAP32[$__begin__i >> 2] = 0;
 $__end__i = $this + 4 | 0;
 HEAP32[$__end__i >> 2] = 0;
 $__first__i_i_i_i = $this + 8 | 0;
 HEAP32[$__first__i_i_i_i >> 2] = 0;
 $__end__i18 = $__x + 4 | 0;
 $__begin__i19 = $__x | 0;
 $sub_ptr_sub_i = (HEAP32[$__end__i18 >> 2] | 0) - (HEAP32[$__begin__i19 >> 2] | 0) | 0;
 $sub_ptr_div_i = $sub_ptr_sub_i >> 2;
 if (($sub_ptr_div_i | 0) == 0) {
  return;
 }
 if ($sub_ptr_div_i >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $2 = __Znwj($sub_ptr_sub_i) | 0;
 HEAP32[$__end__i >> 2] = $2;
 HEAP32[$__begin__i >> 2] = $2;
 HEAP32[$__first__i_i_i_i >> 2] = $2 + ($sub_ptr_div_i << 2);
 $3 = HEAP32[$__begin__i19 >> 2] | 0;
 $4 = HEAP32[$__end__i18 >> 2] | 0;
 if (($3 | 0) == ($4 | 0)) {
  return;
 } else {
  $__first_addr_04_i = $3;
  $5 = $2;
 }
 do {
  if (($5 | 0) == 0) {
   $7 = 0;
  } else {
   HEAP32[$5 >> 2] = HEAP32[$__first_addr_04_i >> 2];
   $7 = HEAP32[$__end__i >> 2] | 0;
  }
  $5 = $7 + 4 | 0;
  HEAP32[$__end__i >> 2] = $5;
  $__first_addr_04_i = $__first_addr_04_i + 4 | 0;
 } while (($__first_addr_04_i | 0) != ($4 | 0));
 return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_sub_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_022 = 0, $retval_i_023 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $incdec_ptr = 0, $5 = 0, $sub_ptr_sub_i_i = 0, $add_ptr_i_i13 = 0, $7 = 0, $8 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = (HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i >> 2;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_sub_i_i_i = (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0;
 if ($sub_ptr_sub_i_i_i >> 2 >>> 0 > 536870910) {
  $retval_i_022 = 1073741823;
  label = 4294;
 } else {
  $mul_i = $sub_ptr_sub_i_i_i >> 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_023 = 0;
  } else {
   $retval_i_022 = $_sroa_speculated;
   label = 4294;
  }
 }
 if ((label | 0) == 4294) {
  $cond_i_i = __Znwj($retval_i_022 << 2) | 0;
  $retval_i_023 = $retval_i_022;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i << 2) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_023 << 2) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  HEAP32[$add_ptr_i_i >> 2] = HEAP32[$__x >> 2];
 }
 $incdec_ptr = $cond_i_i + ($add << 2) | 0;
 $5 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i_i = (HEAP32[$__end__i >> 2] | 0) - $5 | 0;
 $add_ptr_i_i13 = $cond_i_i + ($sub_ptr_div_i - ($sub_ptr_sub_i_i >> 2) << 2) | 0;
 $7 = $add_ptr_i_i13;
 $8 = $5;
 _memcpy($7 | 0, $8 | 0, $sub_ptr_sub_i_i) | 0;
 HEAP32[$__begin__i >> 2] = $add_ptr_i_i13;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 if (($5 | 0) == 0) {
  return;
 }
 __ZdlPv($8);
 return;
}
function __ZN4AABBC2ENSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEE($this, $polys) {
 $this = $this | 0;
 $polys = $polys | 0;
 var $agg_tmp = 0, $X_i_i = 0, $Y_i_i = 0, $X_i_i1 = 0, $Y_i_i2 = 0, $__begin__i_i_i = 0, $0 = 0, $__end__i_i_i_i_i_i = 0, $1 = 0, $2 = 0, $incdec_ptr_i_i_i_i_i_i = 0, $3 = 0, $4 = 0, $5 = 0, $__end__i_i_i_i_i_i_i_i_i = 0, $6 = 0, $_pre3_i_i_i = 0, $11 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $agg_tmp = __stackBase__ | 0;
 $X_i_i = $this | 0;
 HEAP32[$X_i_i >> 2] = 0;
 HEAP32[$X_i_i + 4 >> 2] = -2147483648;
 $Y_i_i = $this + 8 | 0;
 HEAP32[$Y_i_i >> 2] = 0;
 HEAP32[$Y_i_i + 4 >> 2] = -2147483648;
 $X_i_i1 = $this + 16 | 0;
 HEAP32[$X_i_i1 >> 2] = 0;
 HEAP32[$X_i_i1 + 4 >> 2] = -2147483648;
 $Y_i_i2 = $this + 24 | 0;
 HEAP32[$Y_i_i2 >> 2] = 0;
 HEAP32[$Y_i_i2 + 4 >> 2] = -2147483648;
 __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($agg_tmp, $polys);
 __ZN4AABB9calculateENSt3__16vectorINS1_IN10ClipperLib8IntPointENS0_9allocatorIS3_EEEENS4_IS6_EEEE($this, $agg_tmp);
 $__begin__i_i_i = $agg_tmp | 0;
 $0 = HEAP32[$__begin__i_i_i >> 2] | 0;
 if (($0 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 $__end__i_i_i_i_i_i = $agg_tmp + 4 | 0;
 $1 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
 if (($0 | 0) == ($1 | 0)) {
  $11 = $0;
 } else {
  $2 = $1;
  while (1) {
   $incdec_ptr_i_i_i_i_i_i = $2 - 12 | 0;
   HEAP32[$__end__i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i;
   $3 = HEAP32[$incdec_ptr_i_i_i_i_i_i >> 2] | 0;
   $4 = $3;
   if (($3 | 0) == 0) {
    $5 = $incdec_ptr_i_i_i_i_i_i;
   } else {
    $__end__i_i_i_i_i_i_i_i_i = $2 - 12 + 4 | 0;
    $6 = HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] | 0;
    if (($3 | 0) == ($6 | 0)) {
     $_pre3_i_i_i = $incdec_ptr_i_i_i_i_i_i;
    } else {
     HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] = $6 + ((($6 - 16 + (-$4 | 0) | 0) >>> 4 ^ -1) << 4);
     $_pre3_i_i_i = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
    }
    __ZdlPv($3);
    $5 = $_pre3_i_i_i;
   }
   if (($0 | 0) == ($5 | 0)) {
    break;
   } else {
    $2 = $5;
   }
  }
  $11 = HEAP32[$__begin__i_i_i >> 2] | 0;
 }
 __ZdlPv($11);
 STACKTOP = __stackBase__;
 return;
}
function __ZN10ClipperLib9ExPolygonD2Ev($this) {
 $this = $this | 0;
 var $__begin__i_i_i = 0, $0 = 0, $__end__i_i_i_i_i_i = 0, $1 = 0, $2 = 0, $incdec_ptr_i_i_i_i_i_i = 0, $3 = 0, $4 = 0, $5 = 0, $__end__i_i_i_i_i_i_i_i_i = 0, $6 = 0, $11 = 0, $13 = 0, $__end__i_i_i_i_i_i3 = 0, $15 = 0;
 $__begin__i_i_i = $this + 12 | 0;
 $0 = HEAP32[$__begin__i_i_i >> 2] | 0;
 if (($0 | 0) != 0) {
  $__end__i_i_i_i_i_i = $this + 16 | 0;
  $1 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
  if (($0 | 0) == ($1 | 0)) {
   $11 = $0;
  } else {
   $2 = $1;
   while (1) {
    $incdec_ptr_i_i_i_i_i_i = $2 - 12 | 0;
    HEAP32[$__end__i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i;
    $3 = HEAP32[$incdec_ptr_i_i_i_i_i_i >> 2] | 0;
    $4 = $3;
    if (($3 | 0) == 0) {
     $5 = $incdec_ptr_i_i_i_i_i_i;
    } else {
     $__end__i_i_i_i_i_i_i_i_i = $2 - 12 + 4 | 0;
     $6 = HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] | 0;
     if (($3 | 0) != ($6 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] = $6 + ((($6 - 16 + (-$4 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($3);
     $5 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
    }
    if (($0 | 0) == ($5 | 0)) {
     break;
    } else {
     $2 = $5;
    }
   }
   $11 = HEAP32[$__begin__i_i_i >> 2] | 0;
  }
  __ZdlPv($11);
 }
 $13 = HEAP32[$this >> 2] | 0;
 if (($13 | 0) == 0) {
  return;
 }
 $__end__i_i_i_i_i_i3 = $this + 4 | 0;
 $15 = HEAP32[$__end__i_i_i_i_i_i3 >> 2] | 0;
 if (($13 | 0) != ($15 | 0)) {
  HEAP32[$__end__i_i_i_i_i_i3 >> 2] = $15 + ((($15 - 16 + (-$13 | 0) | 0) >>> 4 ^ -1) << 4);
 }
 __ZdlPv($13);
 return;
}
function __ZNSt3__16vectorI15OptimizedVolumeNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_093 = 0, $retval_i_094 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $incdec_ptr = 0, $19 = 0, $20 = 0, $__v_sroa_1_4_load7078 = 0, $__end1_addr_i_015_i = 0, $add_ptr_i_i14 = 0, $incdec_ptr_i_i = 0, $36 = 0, $37 = 0, $38 = 0, $__v_sroa_2_8_load7483 = 0, $incdec_ptr_i_i_i_i_i58 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = ((HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 28 & -1;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 153391689) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_div_i_i_i = ((HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 28 & -1;
 if ($sub_ptr_div_i_i_i >>> 0 > 76695843) {
  $retval_i_093 = 153391689;
  label = 4334;
 } else {
  $mul_i = $sub_ptr_div_i_i_i << 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_094 = 0;
  } else {
   $retval_i_093 = $_sroa_speculated;
   label = 4334;
  }
 }
 if ((label | 0) == 4334) {
  $cond_i_i = __Znwj($retval_i_093 * 28 & -1) | 0;
  $retval_i_094 = $retval_i_093;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i * 28 & -1) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_094 * 28 & -1) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  HEAP32[$add_ptr_i_i >> 2] = HEAP32[$__x >> 2];
  __ZNSt3__16vectorI15OptimizedPoint3NS_9allocatorIS1_EEEC2ERKS4_($cond_i_i + ($sub_ptr_div_i * 28 & -1) + 4 | 0, $__x + 4 | 0);
  __ZNSt3__16vectorI13OptimizedFaceNS_9allocatorIS1_EEEC2ERKS4_($cond_i_i + ($sub_ptr_div_i * 28 & -1) + 16 | 0, $__x + 16 | 0);
 }
 $incdec_ptr = $cond_i_i + ($add * 28 & -1) | 0;
 $19 = HEAP32[$__begin__i >> 2] | 0;
 $20 = HEAP32[$__end__i >> 2] | 0;
 if (($20 | 0) == ($19 | 0)) {
  $38 = $19;
  $37 = $add_ptr_i_i;
  $36 = $19;
 } else {
  $__end1_addr_i_015_i = $20;
  $__v_sroa_1_4_load7078 = $add_ptr_i_i;
  while (1) {
   $add_ptr_i_i14 = $__v_sroa_1_4_load7078 - 28 | 0;
   $incdec_ptr_i_i = $__end1_addr_i_015_i - 28 | 0;
   if (($add_ptr_i_i14 | 0) != 0) {
    HEAP32[$add_ptr_i_i14 >> 2] = HEAP32[$incdec_ptr_i_i >> 2];
    __ZNSt3__16vectorI15OptimizedPoint3NS_9allocatorIS1_EEEC2ERKS4_($__v_sroa_1_4_load7078 - 28 + 4 | 0, $__end1_addr_i_015_i - 28 + 4 | 0);
    __ZNSt3__16vectorI13OptimizedFaceNS_9allocatorIS1_EEEC2ERKS4_($__v_sroa_1_4_load7078 - 28 + 16 | 0, $__end1_addr_i_015_i - 28 + 16 | 0);
   }
   if (($incdec_ptr_i_i | 0) == ($19 | 0)) {
    break;
   } else {
    $__end1_addr_i_015_i = $incdec_ptr_i_i;
    $__v_sroa_1_4_load7078 = $add_ptr_i_i14;
   }
  }
  $38 = HEAP32[$__begin__i >> 2] | 0;
  $37 = $add_ptr_i_i14;
  $36 = HEAP32[$__end__i >> 2] | 0;
 }
 HEAP32[$__begin__i >> 2] = $37;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 $__v_sroa_2_8_load7483 = $36;
 while (1) {
  if (($38 | 0) == ($__v_sroa_2_8_load7483 | 0)) {
   break;
  }
  $incdec_ptr_i_i_i_i_i58 = $__v_sroa_2_8_load7483 - 28 | 0;
  __ZN15OptimizedVolumeD1Ev($incdec_ptr_i_i_i_i_i58);
  $__v_sroa_2_8_load7483 = $incdec_ptr_i_i_i_i_i58;
 }
 if (($38 | 0) == 0) {
  return;
 }
 __ZdlPv($38);
 return;
}
function __ZNSt3__16vectorI13OptimizedFaceNS_9allocatorIS1_EEEC2ERKS4_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__begin__i = 0, $__end__i = 0, $__first__i_i_i_i = 0, $__end__i18 = 0, $0 = 0, $__begin__i19 = 0, $1 = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__first_addr_04_i = 0, $7 = 0, $8 = 0, $9 = 0;
 $__begin__i = $this | 0;
 HEAP32[$__begin__i >> 2] = 0;
 $__end__i = $this + 4 | 0;
 HEAP32[$__end__i >> 2] = 0;
 $__first__i_i_i_i = $this + 8 | 0;
 HEAP32[$__first__i_i_i_i >> 2] = 0;
 $__end__i18 = $__x + 4 | 0;
 $0 = HEAP32[$__end__i18 >> 2] | 0;
 $__begin__i19 = $__x | 0;
 $1 = HEAP32[$__begin__i19 >> 2] | 0;
 if (($0 | 0) == ($1 | 0)) {
  return;
 }
 $sub_ptr_sub_i = $0 - $1 | 0;
 $sub_ptr_div_i = ($sub_ptr_sub_i | 0) / 24 & -1;
 if ($sub_ptr_div_i >>> 0 > 178956970) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $3 = __Znwj($sub_ptr_sub_i) | 0;
 HEAP32[$__end__i >> 2] = $3;
 HEAP32[$__begin__i >> 2] = $3;
 HEAP32[$__first__i_i_i_i >> 2] = $3 + ($sub_ptr_div_i * 24 & -1);
 $4 = HEAP32[$__begin__i19 >> 2] | 0;
 $5 = HEAP32[$__end__i18 >> 2] | 0;
 if (($4 | 0) == ($5 | 0)) {
  return;
 } else {
  $__first_addr_04_i = $4;
  $6 = $3;
 }
 do {
  if (($6 | 0) == 0) {
   $9 = 0;
  } else {
   $7 = $6;
   $8 = $__first_addr_04_i;
   HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
   HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
   HEAP32[$7 + 12 >> 2] = HEAP32[$8 + 12 >> 2];
   HEAP32[$7 + 16 >> 2] = HEAP32[$8 + 16 >> 2];
   HEAP32[$7 + 20 >> 2] = HEAP32[$8 + 20 >> 2];
   $9 = HEAP32[$__end__i >> 2] | 0;
  }
  $6 = $9 + 24 | 0;
  HEAP32[$__end__i >> 2] = $6;
  $__first_addr_04_i = $__first_addr_04_i + 24 | 0;
 } while (($__first_addr_04_i | 0) != ($5 | 0));
 return;
}
function __ZNSt3__16vectorI15OptimizedPoint3NS_9allocatorIS1_EEEC2ERKS4_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__begin__i = 0, $__end__i = 0, $__first__i_i_i_i = 0, $__end__i18 = 0, $0 = 0, $__begin__i19 = 0, $1 = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__first_addr_04_i = 0, $7 = 0, $8 = 0, $9 = 0;
 $__begin__i = $this | 0;
 HEAP32[$__begin__i >> 2] = 0;
 $__end__i = $this + 4 | 0;
 HEAP32[$__end__i >> 2] = 0;
 $__first__i_i_i_i = $this + 8 | 0;
 HEAP32[$__first__i_i_i_i >> 2] = 0;
 $__end__i18 = $__x + 4 | 0;
 $0 = HEAP32[$__end__i18 >> 2] | 0;
 $__begin__i19 = $__x | 0;
 $1 = HEAP32[$__begin__i19 >> 2] | 0;
 if (($0 | 0) == ($1 | 0)) {
  return;
 }
 $sub_ptr_sub_i = $0 - $1 | 0;
 $sub_ptr_div_i = ($sub_ptr_sub_i | 0) / 24 & -1;
 if ($sub_ptr_div_i >>> 0 > 178956970) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $3 = __Znwj($sub_ptr_sub_i) | 0;
 HEAP32[$__end__i >> 2] = $3;
 HEAP32[$__begin__i >> 2] = $3;
 HEAP32[$__first__i_i_i_i >> 2] = $3 + ($sub_ptr_div_i * 24 & -1);
 $4 = HEAP32[$__begin__i19 >> 2] | 0;
 $5 = HEAP32[$__end__i18 >> 2] | 0;
 if (($4 | 0) == ($5 | 0)) {
  return;
 } else {
  $__first_addr_04_i = $4;
  $6 = $3;
 }
 do {
  if (($6 | 0) == 0) {
   $9 = 0;
  } else {
   $7 = $6;
   $8 = $__first_addr_04_i;
   HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
   HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
   __ZNSt3__16vectorIjNS_9allocatorIjEEEC2ERKS3_($6 + 12 | 0, $__first_addr_04_i + 12 | 0);
   $9 = HEAP32[$__end__i >> 2] | 0;
  }
  $6 = $9 + 24 | 0;
  HEAP32[$__end__i >> 2] = $6;
  $__first_addr_04_i = $__first_addr_04_i + 24 | 0;
 } while (($__first_addr_04_i | 0) != ($5 | 0));
 return;
}
function __ZN14SliceLayerPartD2Ev($this) {
 $this = $this | 0;
 var $__begin__i_i_i = 0, $0 = 0, $__end__i_i_i_i_i_i = 0, $1 = 0, $2 = 0, $incdec_ptr_i_i_i_i_i_i = 0, $3 = 0, $4 = 0, $5 = 0, $__end__i_i_i_i_i_i_i_i_i = 0, $6 = 0, $11 = 0, $__begin__i_i_i1 = 0, $13 = 0, $__end__i_i_i_i_i_i3 = 0, $14 = 0, $15 = 0, $incdec_ptr_i_i_i_i_i_i6 = 0, $16 = 0, $17 = 0, $18 = 0, $__end__i_i_i_i_i_i_i_i_i12 = 0, $19 = 0, $24 = 0, $__begin__i_i_i27 = 0, $27 = 0, $__end__i_i_i_i_i_i29 = 0, $28 = 0, $29 = 0, $incdec_ptr_i_i_i_i_i_i32 = 0, $30 = 0, $31 = 0, $32 = 0, $__end__i_i_i_i_i_i_i_i_i38 = 0, $33 = 0, $38 = 0, $__begin__i_i_i53 = 0, $40 = 0, $__end__i_i_i_i_i_i55 = 0, $41 = 0, $42 = 0, $incdec_ptr_i_i_i_i_i_i58 = 0, $43 = 0, $44 = 0, $45 = 0, $__end__i_i_i_i_i_i_i_i_i64 = 0, $46 = 0, $51 = 0;
 $__begin__i_i_i = $this + 80 | 0;
 $0 = HEAP32[$__begin__i_i_i >> 2] | 0;
 if (($0 | 0) != 0) {
  $__end__i_i_i_i_i_i = $this + 84 | 0;
  $1 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
  if (($0 | 0) == ($1 | 0)) {
   $11 = $0;
  } else {
   $2 = $1;
   while (1) {
    $incdec_ptr_i_i_i_i_i_i = $2 - 12 | 0;
    HEAP32[$__end__i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i;
    $3 = HEAP32[$incdec_ptr_i_i_i_i_i_i >> 2] | 0;
    $4 = $3;
    if (($3 | 0) == 0) {
     $5 = $incdec_ptr_i_i_i_i_i_i;
    } else {
     $__end__i_i_i_i_i_i_i_i_i = $2 - 12 + 4 | 0;
     $6 = HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] | 0;
     if (($3 | 0) != ($6 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] = $6 + ((($6 - 16 + (-$4 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($3);
     $5 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
    }
    if (($0 | 0) == ($5 | 0)) {
     break;
    } else {
     $2 = $5;
    }
   }
   $11 = HEAP32[$__begin__i_i_i >> 2] | 0;
  }
  __ZdlPv($11);
 }
 $__begin__i_i_i1 = $this + 68 | 0;
 $13 = HEAP32[$__begin__i_i_i1 >> 2] | 0;
 if (($13 | 0) != 0) {
  $__end__i_i_i_i_i_i3 = $this + 72 | 0;
  $14 = HEAP32[$__end__i_i_i_i_i_i3 >> 2] | 0;
  if (($13 | 0) == ($14 | 0)) {
   $24 = $13;
  } else {
   $15 = $14;
   while (1) {
    $incdec_ptr_i_i_i_i_i_i6 = $15 - 12 | 0;
    HEAP32[$__end__i_i_i_i_i_i3 >> 2] = $incdec_ptr_i_i_i_i_i_i6;
    $16 = HEAP32[$incdec_ptr_i_i_i_i_i_i6 >> 2] | 0;
    $17 = $16;
    if (($16 | 0) == 0) {
     $18 = $incdec_ptr_i_i_i_i_i_i6;
    } else {
     $__end__i_i_i_i_i_i_i_i_i12 = $15 - 12 + 4 | 0;
     $19 = HEAP32[$__end__i_i_i_i_i_i_i_i_i12 >> 2] | 0;
     if (($16 | 0) != ($19 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i_i12 >> 2] = $19 + ((($19 - 16 + (-$17 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($16);
     $18 = HEAP32[$__end__i_i_i_i_i_i3 >> 2] | 0;
    }
    if (($13 | 0) == ($18 | 0)) {
     break;
    } else {
     $15 = $18;
    }
   }
   $24 = HEAP32[$__begin__i_i_i1 >> 2] | 0;
  }
  __ZdlPv($24);
 }
 __ZNSt3__113__vector_baseINS_6vectorINS1_IN10ClipperLib8IntPointENS_9allocatorIS3_EEEENS4_IS6_EEEENS4_IS8_EEED2Ev($this + 56 | 0);
 $__begin__i_i_i27 = $this + 44 | 0;
 $27 = HEAP32[$__begin__i_i_i27 >> 2] | 0;
 if (($27 | 0) != 0) {
  $__end__i_i_i_i_i_i29 = $this + 48 | 0;
  $28 = HEAP32[$__end__i_i_i_i_i_i29 >> 2] | 0;
  if (($27 | 0) == ($28 | 0)) {
   $38 = $27;
  } else {
   $29 = $28;
   while (1) {
    $incdec_ptr_i_i_i_i_i_i32 = $29 - 12 | 0;
    HEAP32[$__end__i_i_i_i_i_i29 >> 2] = $incdec_ptr_i_i_i_i_i_i32;
    $30 = HEAP32[$incdec_ptr_i_i_i_i_i_i32 >> 2] | 0;
    $31 = $30;
    if (($30 | 0) == 0) {
     $32 = $incdec_ptr_i_i_i_i_i_i32;
    } else {
     $__end__i_i_i_i_i_i_i_i_i38 = $29 - 12 + 4 | 0;
     $33 = HEAP32[$__end__i_i_i_i_i_i_i_i_i38 >> 2] | 0;
     if (($30 | 0) != ($33 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i_i38 >> 2] = $33 + ((($33 - 16 + (-$31 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($30);
     $32 = HEAP32[$__end__i_i_i_i_i_i29 >> 2] | 0;
    }
    if (($27 | 0) == ($32 | 0)) {
     break;
    } else {
     $29 = $32;
    }
   }
   $38 = HEAP32[$__begin__i_i_i27 >> 2] | 0;
  }
  __ZdlPv($38);
 }
 $__begin__i_i_i53 = $this + 32 | 0;
 $40 = HEAP32[$__begin__i_i_i53 >> 2] | 0;
 if (($40 | 0) == 0) {
  return;
 }
 $__end__i_i_i_i_i_i55 = $this + 36 | 0;
 $41 = HEAP32[$__end__i_i_i_i_i_i55 >> 2] | 0;
 if (($40 | 0) == ($41 | 0)) {
  $51 = $40;
 } else {
  $42 = $41;
  while (1) {
   $incdec_ptr_i_i_i_i_i_i58 = $42 - 12 | 0;
   HEAP32[$__end__i_i_i_i_i_i55 >> 2] = $incdec_ptr_i_i_i_i_i_i58;
   $43 = HEAP32[$incdec_ptr_i_i_i_i_i_i58 >> 2] | 0;
   $44 = $43;
   if (($43 | 0) == 0) {
    $45 = $incdec_ptr_i_i_i_i_i_i58;
   } else {
    $__end__i_i_i_i_i_i_i_i_i64 = $42 - 12 + 4 | 0;
    $46 = HEAP32[$__end__i_i_i_i_i_i_i_i_i64 >> 2] | 0;
    if (($43 | 0) != ($46 | 0)) {
     HEAP32[$__end__i_i_i_i_i_i_i_i_i64 >> 2] = $46 + ((($46 - 16 + (-$44 | 0) | 0) >>> 4 ^ -1) << 4);
    }
    __ZdlPv($43);
    $45 = HEAP32[$__end__i_i_i_i_i_i55 >> 2] | 0;
   }
   if (($40 | 0) == ($45 | 0)) {
    break;
   } else {
    $42 = $45;
   }
  }
  $51 = HEAP32[$__begin__i_i_i53 >> 2] | 0;
 }
 __ZdlPv($51);
 return;
}
function __GLOBAL__I_a() {
 var $tv_i_i = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $tv_i_i = __stackBase__ | 0;
 _gettimeofday($tv_i_i | 0, 0) | 0;
 HEAPF64[2] = +(HEAP32[$tv_i_i >> 2] | 0) + +(HEAP32[$tv_i_i + 4 >> 2] | 0) / 1.0e6;
 STACKTOP = __stackBase__;
 return;
}
function __Z18loadModelSTL_asciiPKcR10FMatrix3x3($filename, $matrix) {
 $filename = $filename | 0;
 $matrix = $matrix | 0;
 var $ref_tmp_i = 0, $ref_tmp = 0, $buffer = 0, $vertex = 0, $call = 0, $0 = 0, $1 = 0, $__begin__i_i_i_i_i = 0, $4 = 0, $__begin__i_i_i_i_i8 = 0, $__end__i_i_i_i_i9 = 0, $_pre181 = 0, $5 = 0, $6 = 0, $11 = 0, $call6 = 0, $arraydecay = 0, $x = 0, $y = 0, $z = 0, $arrayidx2_i = 0, $arrayidx5_i = 0, $arrayidx9_i = 0, $arrayidx16_i = 0, $arrayidx21_i = 0, $arrayidx27_i = 0, $arrayidx35_i = 0, $arrayidx40_i = 0, $arrayidx46_i = 0, $12 = 0, $v0_sroa_0_0__idx = 0, $v0_sroa_1_4__idx133 = 0, $v0_sroa_2_8__idx134 = 0, $v1_sroa_0_0__idx = 0, $v1_sroa_1_4__idx131 = 0, $v1_sroa_2_8__idx132 = 0, $v2_sroa_0_0__idx = 0, $v2_sroa_1_4__idx129 = 0, $v2_sroa_2_8__idx130 = 0, $__end__i_i = 0, $__first__i_i_i_i_i = 0, $faces_i = 0, $v0_sroa_2_8_copyload152_ph = 0, $v0_sroa_1_4_copyload151_ph = 0, $v0_sroa_0_0_copyload150_ph = 0, $v1_sroa_2_8_copyload149_ph = 0, $v1_sroa_1_4_copyload148_ph = 0, $v1_sroa_0_0_copyload147_ph = 0, $n_0_ph = 0, $v1_sroa_2_8_copyload149_ph157 = 0, $v1_sroa_1_4_copyload148_ph158 = 0, $v1_sroa_0_0_copyload147_ph159 = 0, $n_0_ph160 = 0, $n_0_ph162 = 0, $len_addr_010_i = 0, $ptr_addr_09_i = 0, $13 = 0, $inc_i = 0, $inc = 0, $agg_tmp_sroa_0_0_copyload = 0.0, $agg_tmp_sroa_1_8_copyload = 0.0, $agg_tmp_sroa_2_16_copyload = 0.0, $agg_tmp13_sroa_0_0_copyload = 0.0, $agg_tmp13_sroa_1_8_copyload = 0.0, $agg_tmp13_sroa_2_16_copyload = 0.0, $agg_tmp16_sroa_0_0_copyload = 0.0, $agg_tmp16_sroa_1_8_copyload = 0.0, $agg_tmp16_sroa_2_16_copyload = 0.0, $conv_i = 0, $conv31_i = 0, $conv50_i = 0, $48 = 0, $50 = 0, $51 = 0, $call17 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 1104 | 0;
 $ref_tmp_i = __stackBase__ | 0;
 $ref_tmp = __stackBase__ + 40 | 0;
 $buffer = __stackBase__ + 56 | 0;
 $vertex = __stackBase__ + 1080 | 0;
 $call = __Znwj(12) | 0;
 $0 = $call;
 $1 = $call;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 $__begin__i_i_i_i_i = $call;
 HEAP32[$__begin__i_i_i_i_i >> 2] = 0;
 HEAP32[$call + 4 >> 2] = 0;
 HEAP32[$call + 8 >> 2] = 0;
 $4 = $ref_tmp;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $__begin__i_i_i_i_i8 = $ref_tmp | 0;
 HEAP32[$__begin__i_i_i_i_i8 >> 2] = 0;
 $__end__i_i_i_i_i9 = $ref_tmp + 4 | 0;
 HEAP32[$__end__i_i_i_i_i9 >> 2] = 0;
 HEAP32[$ref_tmp + 8 >> 2] = 0;
 __ZNSt3__16vectorI12SimpleVolumeNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($call, $ref_tmp);
 $_pre181 = HEAP32[$__begin__i_i_i_i_i8 >> 2] | 0;
 $5 = $_pre181;
 if (($_pre181 | 0) != 0) {
  $6 = HEAP32[$__end__i_i_i_i_i9 >> 2] | 0;
  if (($_pre181 | 0) != ($6 | 0)) {
   HEAP32[$__end__i_i_i_i_i9 >> 2] = $6 + (((($6 - 36 + (-$5 | 0) | 0) >>> 0) / 36 >>> 0 ^ -1) * 36 & -1);
  }
  __ZdlPv($_pre181);
 }
 $11 = HEAP32[$__begin__i_i_i_i_i >> 2] | 0;
 $call6 = _fopen($filename | 0, 3104) | 0;
 $arraydecay = $buffer | 0;
 $x = $vertex | 0;
 $y = $vertex + 8 | 0;
 $z = $vertex + 16 | 0;
 $arrayidx2_i = $matrix | 0;
 $arrayidx5_i = $matrix + 24 | 0;
 $arrayidx9_i = $matrix + 48 | 0;
 $arrayidx16_i = $matrix + 8 | 0;
 $arrayidx21_i = $matrix + 32 | 0;
 $arrayidx27_i = $matrix + 56 | 0;
 $arrayidx35_i = $matrix + 16 | 0;
 $arrayidx40_i = $matrix + 40 | 0;
 $arrayidx46_i = $matrix + 64 | 0;
 $12 = $ref_tmp_i;
 $v0_sroa_0_0__idx = $ref_tmp_i | 0;
 $v0_sroa_1_4__idx133 = $ref_tmp_i + 4 | 0;
 $v0_sroa_2_8__idx134 = $ref_tmp_i + 8 | 0;
 $v1_sroa_0_0__idx = $ref_tmp_i + 12 | 0;
 $v1_sroa_1_4__idx131 = $ref_tmp_i + 16 | 0;
 $v1_sroa_2_8__idx132 = $ref_tmp_i + 20 | 0;
 $v2_sroa_0_0__idx = $ref_tmp_i + 24 | 0;
 $v2_sroa_1_4__idx129 = $ref_tmp_i + 28 | 0;
 $v2_sroa_2_8__idx130 = $ref_tmp_i + 32 | 0;
 $__end__i_i = $11 + 4 | 0;
 $__first__i_i_i_i_i = $11 + 8 | 0;
 $faces_i = $11 | 0;
 $n_0_ph = 0;
 $v1_sroa_0_0_copyload147_ph = 0;
 $v1_sroa_1_4_copyload148_ph = 0;
 $v1_sroa_2_8_copyload149_ph = 0;
 $v0_sroa_0_0_copyload150_ph = 0;
 $v0_sroa_1_4_copyload151_ph = 0;
 $v0_sroa_2_8_copyload152_ph = 0;
 L4964 : while (1) {
  $n_0_ph160 = $n_0_ph;
  $v1_sroa_0_0_copyload147_ph159 = $v1_sroa_0_0_copyload147_ph;
  $v1_sroa_1_4_copyload148_ph158 = $v1_sroa_1_4_copyload148_ph;
  $v1_sroa_2_8_copyload149_ph157 = $v1_sroa_2_8_copyload149_ph;
  L4966 : while (1) {
   $n_0_ph162 = $n_0_ph160;
   while (1) {
    $ptr_addr_09_i = $arraydecay;
    $len_addr_010_i = 1024;
    while (1) {
     if ((_fread($ptr_addr_09_i | 0, 1, 1, $call6 | 0) | 0) == 0) {
      label = 4494;
      break L4964;
     }
     $13 = HEAP8[$ptr_addr_09_i] | 0;
     if (!(($13 << 24 >> 24 | 0) == 10 | ($13 << 24 >> 24 | 0) == 13)) {
      $inc_i = $len_addr_010_i + 1 | 0;
      if (($inc_i | 0) == 0) {
       label = 4492;
       break L4964;
      } else {
       $ptr_addr_09_i = $ptr_addr_09_i + 1 | 0;
       $len_addr_010_i = $inc_i;
       continue;
      }
     }
     HEAP8[$ptr_addr_09_i] = 0;
     if (($ptr_addr_09_i | 0) == 0) {
      label = 4493;
      break L4964;
     }
     if ((_sscanf($arraydecay | 0, 5320, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $x, HEAP32[tempInt + 8 >> 2] = $y, HEAP32[tempInt + 16 >> 2] = $z, tempInt) | 0) | 0) == 3) {
      break;
     } else {
      $ptr_addr_09_i = $arraydecay;
      $len_addr_010_i = 1024;
     }
    }
    $inc = $n_0_ph162 + 1 | 0;
    if (($n_0_ph162 | 0) == 0) {
     break L4966;
    } else if (($n_0_ph162 | 0) == 1) {
     break;
    } else if (($n_0_ph162 | 0) != 2) {
     $n_0_ph162 = $inc;
     continue;
    }
    $agg_tmp16_sroa_0_0_copyload = +HEAPF64[$x >> 3];
    $agg_tmp16_sroa_1_8_copyload = +HEAPF64[$y >> 3];
    $agg_tmp16_sroa_2_16_copyload = +HEAPF64[$z >> 3];
    $conv_i = ~~(($agg_tmp16_sroa_0_0_copyload * +HEAPF64[$arrayidx2_i >> 3] + $agg_tmp16_sroa_1_8_copyload * +HEAPF64[$arrayidx5_i >> 3] + $agg_tmp16_sroa_2_16_copyload * +HEAPF64[$arrayidx9_i >> 3]) * 1.0e3);
    $conv31_i = ~~(($agg_tmp16_sroa_0_0_copyload * +HEAPF64[$arrayidx16_i >> 3] + $agg_tmp16_sroa_1_8_copyload * +HEAPF64[$arrayidx21_i >> 3] + $agg_tmp16_sroa_2_16_copyload * +HEAPF64[$arrayidx27_i >> 3]) * 1.0e3);
    $conv50_i = ~~(($agg_tmp16_sroa_0_0_copyload * +HEAPF64[$arrayidx35_i >> 3] + $agg_tmp16_sroa_1_8_copyload * +HEAPF64[$arrayidx40_i >> 3] + $agg_tmp16_sroa_2_16_copyload * +HEAPF64[$arrayidx46_i >> 3]) * 1.0e3);
    HEAP32[$v0_sroa_0_0__idx >> 2] = $v0_sroa_0_0_copyload150_ph;
    HEAP32[$v0_sroa_1_4__idx133 >> 2] = $v0_sroa_1_4_copyload151_ph;
    HEAP32[$v0_sroa_2_8__idx134 >> 2] = $v0_sroa_2_8_copyload152_ph;
    HEAP32[$v1_sroa_0_0__idx >> 2] = $v1_sroa_0_0_copyload147_ph159;
    HEAP32[$v1_sroa_1_4__idx131 >> 2] = $v1_sroa_1_4_copyload148_ph158;
    HEAP32[$v1_sroa_2_8__idx132 >> 2] = $v1_sroa_2_8_copyload149_ph157;
    HEAP32[$v2_sroa_0_0__idx >> 2] = $conv_i;
    HEAP32[$v2_sroa_1_4__idx129 >> 2] = $conv31_i;
    HEAP32[$v2_sroa_2_8__idx130 >> 2] = $conv50_i;
    $48 = HEAP32[$__end__i_i >> 2] | 0;
    if (($48 | 0) == (HEAP32[$__first__i_i_i_i_i >> 2] | 0)) {
     __ZNSt3__16vectorI10SimpleFaceNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($faces_i, $ref_tmp_i);
     $n_0_ph162 = 0;
     continue;
    }
    if (($48 | 0) == 0) {
     $51 = 0;
    } else {
     $50 = $48;
     _memcpy($50 | 0, $12 | 0, 36) | 0;
     $51 = HEAP32[$__end__i_i >> 2] | 0;
    }
    HEAP32[$__end__i_i >> 2] = $51 + 36;
    $n_0_ph162 = 0;
   }
   $agg_tmp13_sroa_0_0_copyload = +HEAPF64[$x >> 3];
   $agg_tmp13_sroa_1_8_copyload = +HEAPF64[$y >> 3];
   $agg_tmp13_sroa_2_16_copyload = +HEAPF64[$z >> 3];
   $n_0_ph160 = $inc;
   $v1_sroa_0_0_copyload147_ph159 = ~~(($agg_tmp13_sroa_0_0_copyload * +HEAPF64[$arrayidx2_i >> 3] + $agg_tmp13_sroa_1_8_copyload * +HEAPF64[$arrayidx5_i >> 3] + $agg_tmp13_sroa_2_16_copyload * +HEAPF64[$arrayidx9_i >> 3]) * 1.0e3);
   $v1_sroa_1_4_copyload148_ph158 = ~~(($agg_tmp13_sroa_0_0_copyload * +HEAPF64[$arrayidx16_i >> 3] + $agg_tmp13_sroa_1_8_copyload * +HEAPF64[$arrayidx21_i >> 3] + $agg_tmp13_sroa_2_16_copyload * +HEAPF64[$arrayidx27_i >> 3]) * 1.0e3);
   $v1_sroa_2_8_copyload149_ph157 = ~~(($agg_tmp13_sroa_0_0_copyload * +HEAPF64[$arrayidx35_i >> 3] + $agg_tmp13_sroa_1_8_copyload * +HEAPF64[$arrayidx40_i >> 3] + $agg_tmp13_sroa_2_16_copyload * +HEAPF64[$arrayidx46_i >> 3]) * 1.0e3);
  }
  $agg_tmp_sroa_0_0_copyload = +HEAPF64[$x >> 3];
  $agg_tmp_sroa_1_8_copyload = +HEAPF64[$y >> 3];
  $agg_tmp_sroa_2_16_copyload = +HEAPF64[$z >> 3];
  $n_0_ph = $inc;
  $v1_sroa_0_0_copyload147_ph = $v1_sroa_0_0_copyload147_ph159;
  $v1_sroa_1_4_copyload148_ph = $v1_sroa_1_4_copyload148_ph158;
  $v1_sroa_2_8_copyload149_ph = $v1_sroa_2_8_copyload149_ph157;
  $v0_sroa_0_0_copyload150_ph = ~~(($agg_tmp_sroa_0_0_copyload * +HEAPF64[$arrayidx2_i >> 3] + $agg_tmp_sroa_1_8_copyload * +HEAPF64[$arrayidx5_i >> 3] + $agg_tmp_sroa_2_16_copyload * +HEAPF64[$arrayidx9_i >> 3]) * 1.0e3);
  $v0_sroa_1_4_copyload151_ph = ~~(($agg_tmp_sroa_0_0_copyload * +HEAPF64[$arrayidx16_i >> 3] + $agg_tmp_sroa_1_8_copyload * +HEAPF64[$arrayidx21_i >> 3] + $agg_tmp_sroa_2_16_copyload * +HEAPF64[$arrayidx27_i >> 3]) * 1.0e3);
  $v0_sroa_2_8_copyload152_ph = ~~(($agg_tmp_sroa_0_0_copyload * +HEAPF64[$arrayidx35_i >> 3] + $agg_tmp_sroa_1_8_copyload * +HEAPF64[$arrayidx40_i >> 3] + $agg_tmp_sroa_2_16_copyload * +HEAPF64[$arrayidx46_i >> 3]) * 1.0e3);
 }
 if ((label | 0) == 4494) {
  $call17 = _fclose($call6 | 0) | 0;
  STACKTOP = __stackBase__;
  return $0 | 0;
 } else if ((label | 0) == 4493) {
  $call17 = _fclose($call6 | 0) | 0;
  STACKTOP = __stackBase__;
  return $0 | 0;
 } else if ((label | 0) == 4492) {
  $call17 = _fclose($call6 | 0) | 0;
  STACKTOP = __stackBase__;
  return $0 | 0;
 }
 return 0;
}
function __Z19loadModelSTL_binaryPKcR10FMatrix3x3($filename, $matrix) {
 $filename = $filename | 0;
 $matrix = $matrix | 0;
 var $ref_tmp_i = 0, $faceCount = 0, $ref_tmp = 0, $v = 0, $call = 0, $arraydecay = 0, $call8 = 0, $1 = 0, $2 = 0, $__begin__i_i_i_i_i = 0, $5 = 0, $__begin__i_i_i_i_i17 = 0, $__end__i_i_i_i_i18 = 0, $_pre141 = 0, $6 = 0, $7 = 0, $12 = 0, $13 = 0, $14 = 0, $arraydecay21 = 0, $arrayidx27 = 0, $arrayidx29 = 0, $arrayidx2_i68 = 0, $arrayidx5_i71 = 0, $arrayidx9_i75 = 0, $arrayidx16_i80 = 0, $arrayidx21_i82 = 0, $arrayidx27_i85 = 0, $arrayidx35_i90 = 0, $arrayidx40_i92 = 0, $arrayidx46_i95 = 0, $arrayidx32 = 0, $arrayidx34 = 0, $arrayidx36 = 0, $arrayidx39 = 0, $arrayidx41 = 0, $arrayidx43 = 0, $15 = 0, $v0_sroa_0_0__idx = 0, $v0_sroa_1_4__idx139 = 0, $v0_sroa_2_8__idx140 = 0, $v1_sroa_0_0__idx = 0, $v1_sroa_1_4__idx135 = 0, $v1_sroa_2_8__idx136 = 0, $v2_sroa_0_0__idx = 0, $v2_sroa_1_4__idx131 = 0, $v2_sroa_2_8__idx132 = 0, $__end__i_i = 0, $__first__i_i_i_i_i = 0, $faces_i = 0, $i_0 = 0, $conv = 0.0, $conv28 = 0.0, $conv30 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $conv33 = 0.0, $conv35 = 0.0, $conv37 = 0.0, $conv40 = 0.0, $conv42 = 0.0, $conv44 = 0.0, $41 = 0, $43 = 0, $44 = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 184 | 0;
 $ref_tmp_i = __stackBase__ | 0;
 $faceCount = __stackBase__ + 120 | 0;
 $ref_tmp = __stackBase__ + 128 | 0;
 $v = __stackBase__ + 144 | 0;
 $call = _fopen($filename | 0, 2912) | 0;
 $arraydecay = __stackBase__ + 40 | 0;
 if ((_fread($arraydecay | 0, 80, 1, $call | 0) | 0) != 1) {
  _fclose($call | 0) | 0;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 if ((_fread($faceCount | 0, 4, 1, $call | 0) | 0) != 1) {
  _fclose($call | 0) | 0;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $call8 = __Znwj(12) | 0;
 $1 = $call8;
 $2 = $call8;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 $__begin__i_i_i_i_i = $call8;
 HEAP32[$__begin__i_i_i_i_i >> 2] = 0;
 HEAP32[$call8 + 4 >> 2] = 0;
 HEAP32[$call8 + 8 >> 2] = 0;
 $5 = $ref_tmp;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 $__begin__i_i_i_i_i17 = $ref_tmp | 0;
 HEAP32[$__begin__i_i_i_i_i17 >> 2] = 0;
 $__end__i_i_i_i_i18 = $ref_tmp + 4 | 0;
 HEAP32[$__end__i_i_i_i_i18 >> 2] = 0;
 HEAP32[$ref_tmp + 8 >> 2] = 0;
 __ZNSt3__16vectorI12SimpleVolumeNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($call8, $ref_tmp);
 $_pre141 = HEAP32[$__begin__i_i_i_i_i17 >> 2] | 0;
 $6 = $_pre141;
 if (($_pre141 | 0) != 0) {
  $7 = HEAP32[$__end__i_i_i_i_i18 >> 2] | 0;
  if (($_pre141 | 0) != ($7 | 0)) {
   HEAP32[$__end__i_i_i_i_i18 >> 2] = $7 + (((($7 - 36 + (-$6 | 0) | 0) >>> 0) / 36 >>> 0 ^ -1) * 36 & -1);
  }
  __ZdlPv($_pre141);
 }
 $12 = HEAP32[$__begin__i_i_i_i_i >> 2] | 0;
 $13 = HEAP32[$faceCount >> 2] | 0;
 $14 = $v;
 $arraydecay21 = $v | 0;
 $arrayidx27 = $v + 4 | 0;
 $arrayidx29 = $v + 8 | 0;
 $arrayidx2_i68 = $matrix | 0;
 $arrayidx5_i71 = $matrix + 24 | 0;
 $arrayidx9_i75 = $matrix + 48 | 0;
 $arrayidx16_i80 = $matrix + 8 | 0;
 $arrayidx21_i82 = $matrix + 32 | 0;
 $arrayidx27_i85 = $matrix + 56 | 0;
 $arrayidx35_i90 = $matrix + 16 | 0;
 $arrayidx40_i92 = $matrix + 40 | 0;
 $arrayidx46_i95 = $matrix + 64 | 0;
 $arrayidx32 = $v + 12 | 0;
 $arrayidx34 = $v + 16 | 0;
 $arrayidx36 = $v + 20 | 0;
 $arrayidx39 = $v + 24 | 0;
 $arrayidx41 = $v + 28 | 0;
 $arrayidx43 = $v + 32 | 0;
 $15 = $ref_tmp_i;
 $v0_sroa_0_0__idx = $ref_tmp_i | 0;
 $v0_sroa_1_4__idx139 = $ref_tmp_i + 4 | 0;
 $v0_sroa_2_8__idx140 = $ref_tmp_i + 8 | 0;
 $v1_sroa_0_0__idx = $ref_tmp_i + 12 | 0;
 $v1_sroa_1_4__idx135 = $ref_tmp_i + 16 | 0;
 $v1_sroa_2_8__idx136 = $ref_tmp_i + 20 | 0;
 $v2_sroa_0_0__idx = $ref_tmp_i + 24 | 0;
 $v2_sroa_1_4__idx131 = $ref_tmp_i + 28 | 0;
 $v2_sroa_2_8__idx132 = $ref_tmp_i + 32 | 0;
 $__end__i_i = $12 + 4 | 0;
 $__first__i_i_i_i_i = $12 + 8 | 0;
 $faces_i = $12 | 0;
 $i_0 = 0;
 while (1) {
  if ($i_0 >>> 0 >= $13 >>> 0) {
   label = 4521;
   break;
  }
  if ((_fread($arraydecay | 0, 12, 1, $call | 0) | 0) != 1) {
   label = 4507;
   break;
  }
  if ((_fread($14 | 0, 36, 1, $call | 0) | 0) != 1) {
   label = 4513;
   break;
  }
  $conv = +HEAPF32[$arraydecay21 >> 2];
  $conv28 = +HEAPF32[$arrayidx27 >> 2];
  $conv30 = +HEAPF32[$arrayidx29 >> 2];
  $26 = +HEAPF64[$arrayidx2_i68 >> 3];
  $27 = +HEAPF64[$arrayidx5_i71 >> 3];
  $28 = +HEAPF64[$arrayidx9_i75 >> 3];
  $29 = +HEAPF64[$arrayidx16_i80 >> 3];
  $30 = +HEAPF64[$arrayidx21_i82 >> 3];
  $31 = +HEAPF64[$arrayidx27_i85 >> 3];
  $32 = +HEAPF64[$arrayidx35_i90 >> 3];
  $33 = +HEAPF64[$arrayidx40_i92 >> 3];
  $34 = +HEAPF64[$arrayidx46_i95 >> 3];
  $conv33 = +HEAPF32[$arrayidx32 >> 2];
  $conv35 = +HEAPF32[$arrayidx34 >> 2];
  $conv37 = +HEAPF32[$arrayidx36 >> 2];
  $conv40 = +HEAPF32[$arrayidx39 >> 2];
  $conv42 = +HEAPF32[$arrayidx41 >> 2];
  $conv44 = +HEAPF32[$arrayidx43 >> 2];
  HEAP32[$v0_sroa_0_0__idx >> 2] = ~~(($conv * $26 + $conv28 * $27 + $conv30 * $28) * 1.0e3);
  HEAP32[$v0_sroa_1_4__idx139 >> 2] = ~~(($conv * $29 + $conv28 * $30 + $conv30 * $31) * 1.0e3);
  HEAP32[$v0_sroa_2_8__idx140 >> 2] = ~~(($conv * $32 + $conv28 * $33 + $conv30 * $34) * 1.0e3);
  HEAP32[$v1_sroa_0_0__idx >> 2] = ~~(($26 * $conv33 + $27 * $conv35 + $28 * $conv37) * 1.0e3);
  HEAP32[$v1_sroa_1_4__idx135 >> 2] = ~~(($29 * $conv33 + $30 * $conv35 + $31 * $conv37) * 1.0e3);
  HEAP32[$v1_sroa_2_8__idx136 >> 2] = ~~(($32 * $conv33 + $33 * $conv35 + $34 * $conv37) * 1.0e3);
  HEAP32[$v2_sroa_0_0__idx >> 2] = ~~(($26 * $conv40 + $27 * $conv42 + $28 * $conv44) * 1.0e3);
  HEAP32[$v2_sroa_1_4__idx131 >> 2] = ~~(($29 * $conv40 + $30 * $conv42 + $31 * $conv44) * 1.0e3);
  HEAP32[$v2_sroa_2_8__idx132 >> 2] = ~~(($32 * $conv40 + $33 * $conv42 + $34 * $conv44) * 1.0e3);
  $41 = HEAP32[$__end__i_i >> 2] | 0;
  if (($41 | 0) == (HEAP32[$__first__i_i_i_i_i >> 2] | 0)) {
   __ZNSt3__16vectorI10SimpleFaceNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($faces_i, $ref_tmp_i);
  } else {
   if (($41 | 0) == 0) {
    $44 = 0;
   } else {
    $43 = $41;
    _memcpy($43 | 0, $15 | 0, 36) | 0;
    $44 = HEAP32[$__end__i_i >> 2] | 0;
   }
   HEAP32[$__end__i_i >> 2] = $44 + 36;
  }
  if ((_fread($arraydecay | 0, 2, 1, $call | 0) | 0) == 1) {
   $i_0 = $i_0 + 1 | 0;
  } else {
   label = 4520;
   break;
  }
 }
 if ((label | 0) == 4513) {
  _fclose($call | 0) | 0;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else if ((label | 0) == 4507) {
  _fclose($call | 0) | 0;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else if ((label | 0) == 4521) {
  _fclose($call | 0) | 0;
  $retval_0 = $1;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else if ((label | 0) == 4520) {
  _fclose($call | 0) | 0;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 return 0;
}
function __Z12loadModelSTLPKcR10FMatrix3x3($filename, $matrix) {
 $filename = $filename | 0;
 $matrix = $matrix | 0;
 var $buffer = 0, $call = 0, $arraydecay = 0, $cmp2 = 0, $retval_0 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $buffer = __stackBase__ | 0;
 $call = _fopen($filename | 0, 328) | 0;
 do {
  if (($call | 0) == 0) {
   $retval_0 = 0;
  } else {
   $arraydecay = $buffer | 0;
   $cmp2 = (_fread($arraydecay | 0, 5, 1, $call | 0) | 0) == 1;
   _fclose($call | 0) | 0;
   if (!$cmp2) {
    $retval_0 = 0;
    break;
   }
   HEAP8[$buffer + 5 | 0] = 0;
   if ((_strcasecmp($arraydecay | 0, 2160) | 0) == 0) {
    $retval_0 = __Z18loadModelSTL_asciiPKcR10FMatrix3x3($filename, $matrix) | 0;
    break;
   } else {
    $retval_0 = __Z19loadModelSTL_binaryPKcR10FMatrix3x3($filename, $matrix) | 0;
    break;
   }
  }
 } while (0);
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __Z9loadModelPKcR10FMatrix3x3($filename, $matrix) {
 $filename = $filename | 0;
 $matrix = $matrix | 0;
 var $ref_tmp_i = 0, $ref_tmp = 0, $n = 0, $v = 0, $f = 0, $call = 0, $call7 = 0, $2 = 0, $3 = 0, $__begin__i_i_i_i_i = 0, $4 = 0, $5 = 0, $__begin__i_i_i_i_i12 = 0, $__end__i_i_i_i_i13 = 0, $__first__i_i_i_i_i_i_i_i14 = 0, $volumes = 0, $7 = 0, $8 = 0, $arraydecay = 0, $arrayidx31 = 0, $arrayidx33 = 0, $arrayidx2_i = 0, $arrayidx5_i = 0, $arrayidx9_i = 0, $arrayidx16_i = 0, $arrayidx21_i = 0, $arrayidx27_i = 0, $arrayidx35_i = 0, $arrayidx40_i = 0, $arrayidx46_i = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $filename_addr_064 = 0, $incdec_ptr = 0, $18 = 0, $_pre70 = 0, $21 = 0, $27 = 0, $sub = 0, $36 = 0, $__end__i_i = 0, $__first__i_i_i_i_i = 0, $faces_i = 0, $37 = 0, $pNr_047 = 0, $conv30 = 0.0, $conv32 = 0.0, $conv34 = 0.0, $inc = 0, $conv31_i = 0, $conv50_i = 0, $51 = 0, $53 = 0, $54 = 0, $pNr_1 = 0, $dec = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 120 | 0;
 $ref_tmp_i = __stackBase__ | 0;
 $ref_tmp = __stackBase__ + 40 | 0;
 $n = __stackBase__ + 56 | 0;
 $v = __stackBase__ + 64 | 0;
 $f = __stackBase__ + 104 | 0;
 $call = _strrchr($filename | 0, 46) | 0;
 do {
  if (($call | 0) != 0) {
   if ((_strcasecmp($call | 0, 1936) | 0) != 0) {
    break;
   }
   $retval_0 = __Z12loadModelSTLPKcR10FMatrix3x3($filename, $matrix) | 0;
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  }
 } while (0);
 if (!((HEAP8[$filename] | 0) == 35 & (HEAP32[70] | 0) != 0)) {
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $call7 = __Znwj(12) | 0;
 $2 = $call7;
 $3 = $call7;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 $__begin__i_i_i_i_i = $call7;
 HEAP32[$__begin__i_i_i_i_i >> 2] = 0;
 $4 = $call7 + 4 | 0;
 HEAP32[$4 >> 2] = 0;
 $5 = $call7 + 8 | 0;
 HEAP32[$5 >> 2] = 0;
 if ((HEAP8[$filename] | 0) != 35) {
  $retval_0 = $2;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $__begin__i_i_i_i_i12 = $ref_tmp | 0;
 $__end__i_i_i_i_i13 = $ref_tmp + 4 | 0;
 $__first__i_i_i_i_i_i_i_i14 = $ref_tmp + 8 | 0;
 $volumes = $call7;
 $7 = $n;
 $8 = $f;
 $arraydecay = $f | 0;
 $arrayidx31 = $f + 4 | 0;
 $arrayidx33 = $f + 8 | 0;
 $arrayidx2_i = $matrix | 0;
 $arrayidx5_i = $matrix + 24 | 0;
 $arrayidx9_i = $matrix + 48 | 0;
 $arrayidx16_i = $matrix + 8 | 0;
 $arrayidx21_i = $matrix + 32 | 0;
 $arrayidx27_i = $matrix + 56 | 0;
 $arrayidx35_i = $matrix + 16 | 0;
 $arrayidx40_i = $matrix + 40 | 0;
 $arrayidx46_i = $matrix + 64 | 0;
 $9 = $ref_tmp_i;
 $10 = $v;
 $11 = $ref_tmp_i + 12 | 0;
 $12 = $v + 12 | 0;
 $13 = $ref_tmp_i + 24 | 0;
 $14 = $v + 24 | 0;
 $filename_addr_064 = $filename;
 $17 = 0;
 $16 = 0;
 L5048 : while (1) {
  $incdec_ptr = $filename_addr_064 + 1 | 0;
  $18 = $ref_tmp;
  HEAP32[$18 >> 2] = 0;
  HEAP32[$18 + 4 >> 2] = 0;
  HEAP32[$__begin__i_i_i_i_i12 >> 2] = 0;
  HEAP32[$__end__i_i_i_i_i13 >> 2] = 0;
  HEAP32[$__first__i_i_i_i_i_i_i_i14 >> 2] = 0;
  do {
   if (($17 | 0) == ($16 | 0)) {
    __ZNSt3__16vectorI12SimpleVolumeNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($volumes, $ref_tmp);
    $_pre70 = HEAP32[$__begin__i_i_i_i_i12 >> 2] | 0;
    if (($_pre70 | 0) == 0) {
     break;
    }
    $21 = HEAP32[$__end__i_i_i_i_i13 >> 2] | 0;
    if (($_pre70 | 0) != ($21 | 0)) {
     HEAP32[$__end__i_i_i_i_i13 >> 2] = $21 + (((($21 - 36 + (-$_pre70 | 0) | 0) >>> 0) / 36 >>> 0 ^ -1) * 36 & -1);
    }
    __ZdlPv($_pre70);
   } else {
    if (($17 | 0) != 0) {
     HEAP32[$17 >> 2] = 0;
     HEAP32[$17 + 4 >> 2] = 0;
     HEAP32[$17 + 8 >> 2] = 0;
    }
    HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 12;
   }
  } while (0);
  $27 = HEAP32[$__begin__i_i_i_i_i >> 2] | 0;
  $sub = (((HEAP32[$4 >> 2] | 0) - $27 | 0) / 12 & -1) - 1 | 0;
  if ((_fread($7 | 0, 1, 4, HEAP32[70] | 0) | 0) == 0) {
   $retval_0 = 0;
   label = 4573;
   break;
  }
  $36 = HEAP32[$n >> 2] | 0;
  _printf(1576, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $36, tempInt) | 0) | 0;
  if (($36 | 0) != 0) {
   $__end__i_i = $27 + ($sub * 12 & -1) + 4 | 0;
   $__first__i_i_i_i_i = $27 + ($sub * 12 & -1) + 8 | 0;
   $faces_i = $27 + ($sub * 12 & -1) | 0;
   $pNr_047 = 0;
   $37 = $36;
   while (1) {
    if ((_fread($8 | 0, 3, 4, HEAP32[70] | 0) | 0) == 0) {
     $retval_0 = 0;
     label = 4574;
     break L5048;
    }
    $conv30 = +HEAPF32[$arraydecay >> 2];
    $conv32 = +HEAPF32[$arrayidx31 >> 2];
    $conv34 = +HEAPF32[$arrayidx33 >> 2];
    $inc = $pNr_047 + 1 | 0;
    $conv31_i = ~~(($conv30 * +HEAPF64[$arrayidx16_i >> 3] + $conv32 * +HEAPF64[$arrayidx21_i >> 3] + $conv34 * +HEAPF64[$arrayidx27_i >> 3]) * 1.0e3);
    $conv50_i = ~~(($conv30 * +HEAPF64[$arrayidx35_i >> 3] + $conv32 * +HEAPF64[$arrayidx40_i >> 3] + $conv34 * +HEAPF64[$arrayidx46_i >> 3]) * 1.0e3);
    HEAP32[$v + ($pNr_047 * 12 & -1) >> 2] = ~~(($conv30 * +HEAPF64[$arrayidx2_i >> 3] + $conv32 * +HEAPF64[$arrayidx5_i >> 3] + $conv34 * +HEAPF64[$arrayidx9_i >> 3]) * 1.0e3);
    HEAP32[$v + ($pNr_047 * 12 & -1) + 4 >> 2] = $conv31_i;
    HEAP32[$v + ($pNr_047 * 12 & -1) + 8 >> 2] = $conv50_i;
    do {
     if (($inc | 0) == 3) {
      HEAP32[$9 >> 2] = HEAP32[$10 >> 2];
      HEAP32[$9 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
      HEAP32[$9 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
      HEAP32[$11 >> 2] = HEAP32[$12 >> 2];
      HEAP32[$11 + 4 >> 2] = HEAP32[$12 + 4 >> 2];
      HEAP32[$11 + 8 >> 2] = HEAP32[$12 + 8 >> 2];
      HEAP32[$13 >> 2] = HEAP32[$14 >> 2];
      HEAP32[$13 + 4 >> 2] = HEAP32[$14 + 4 >> 2];
      HEAP32[$13 + 8 >> 2] = HEAP32[$14 + 8 >> 2];
      $51 = HEAP32[$__end__i_i >> 2] | 0;
      if (($51 | 0) == (HEAP32[$__first__i_i_i_i_i >> 2] | 0)) {
       __ZNSt3__16vectorI10SimpleFaceNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($faces_i, $ref_tmp_i);
       $pNr_1 = 0;
       break;
      }
      if (($51 | 0) == 0) {
       $54 = 0;
      } else {
       $53 = $51;
       _memcpy($53 | 0, $9 | 0, 36) | 0;
       $54 = HEAP32[$__end__i_i >> 2] | 0;
      }
      HEAP32[$__end__i_i >> 2] = $54 + 36;
      $pNr_1 = 0;
     } else {
      $pNr_1 = $inc;
     }
    } while (0);
    $dec = $37 - 1 | 0;
    HEAP32[$n >> 2] = $dec;
    if (($dec | 0) == 0) {
     break;
    } else {
     $pNr_047 = $pNr_1;
     $37 = $dec;
    }
   }
  }
  if ((HEAP8[$incdec_ptr] | 0) != 35) {
   $retval_0 = $2;
   label = 4570;
   break;
  }
  $filename_addr_064 = $incdec_ptr;
  $17 = HEAP32[$4 >> 2] | 0;
  $16 = HEAP32[$5 >> 2] | 0;
 }
 if ((label | 0) == 4570) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else if ((label | 0) == 4573) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else if ((label | 0) == 4574) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNSt3__16vectorI12SimpleVolumeNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_058 = 0, $retval_i_059 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $incdec_ptr = 0, $5 = 0, $6 = 0, $__v_sroa_1_4_load4452 = 0, $__end1_addr_i_015_i = 0, $_pre_i = 0, $_pre = 0, $7 = 0, $incdec_ptr_i_i_i_i_i18 = 0, $8 = 0, $9 = 0, $__end__i_i_i_i_i_i_i_i_i_i24 = 0, $10 = 0, $15 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = ((HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 12 & -1;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 357913941) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_div_i_i_i = ((HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 12 & -1;
 if ($sub_ptr_div_i_i_i >>> 0 > 178956969) {
  $retval_i_058 = 357913941;
  label = 4580;
 } else {
  $mul_i = $sub_ptr_div_i_i_i << 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_059 = 0;
  } else {
   $retval_i_058 = $_sroa_speculated;
   label = 4580;
  }
 }
 if ((label | 0) == 4580) {
  $cond_i_i = __Znwj($retval_i_058 * 12 & -1) | 0;
  $retval_i_059 = $retval_i_058;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i * 12 & -1) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_059 * 12 & -1) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  __ZNSt3__16vectorI10SimpleFaceNS_9allocatorIS1_EEEC2ERKS4_($add_ptr_i_i | 0, $__x | 0);
 }
 $incdec_ptr = $cond_i_i + ($add * 12 & -1) | 0;
 $5 = HEAP32[$__begin__i >> 2] | 0;
 $6 = HEAP32[$__end__i >> 2] | 0;
 do {
  if (($6 | 0) == ($5 | 0)) {
   HEAP32[$__begin__i >> 2] = $add_ptr_i_i;
   HEAP32[$__end__i >> 2] = $incdec_ptr;
   HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
   $15 = $5;
  } else {
   $__end1_addr_i_015_i = $6;
   $__v_sroa_1_4_load4452 = $add_ptr_i_i;
   do {
    $__v_sroa_1_4_load4452 = $__v_sroa_1_4_load4452 - 12 | 0;
    $__end1_addr_i_015_i = $__end1_addr_i_015_i - 12 | 0;
    if (($__v_sroa_1_4_load4452 | 0) != 0) {
     __ZNSt3__16vectorI10SimpleFaceNS_9allocatorIS1_EEEC2ERKS4_($__v_sroa_1_4_load4452 | 0, $__end1_addr_i_015_i | 0);
    }
   } while (($__end1_addr_i_015_i | 0) != ($5 | 0));
   $_pre_i = HEAP32[$__begin__i >> 2] | 0;
   $_pre = HEAP32[$__end__i >> 2] | 0;
   HEAP32[$__begin__i >> 2] = $__v_sroa_1_4_load4452;
   HEAP32[$__end__i >> 2] = $incdec_ptr;
   HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
   if (($_pre_i | 0) == ($_pre | 0)) {
    $15 = $_pre_i;
    break;
   } else {
    $7 = $_pre;
   }
   while (1) {
    $incdec_ptr_i_i_i_i_i18 = $7 - 12 | 0;
    $8 = HEAP32[$incdec_ptr_i_i_i_i_i18 >> 2] | 0;
    $9 = $8;
    if (($8 | 0) != 0) {
     $__end__i_i_i_i_i_i_i_i_i_i24 = $7 - 12 + 4 | 0;
     $10 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i24 >> 2] | 0;
     if (($8 | 0) != ($10 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i_i_i24 >> 2] = $10 + (((($10 - 36 + (-$9 | 0) | 0) >>> 0) / 36 >>> 0 ^ -1) * 36 & -1);
     }
     __ZdlPv($8);
    }
    if (($_pre_i | 0) == ($incdec_ptr_i_i_i_i_i18 | 0)) {
     $15 = $_pre_i;
     break;
    } else {
     $7 = $incdec_ptr_i_i_i_i_i18;
    }
   }
  }
 } while (0);
 if (($15 | 0) == 0) {
  return;
 }
 __ZdlPv($15);
 return;
}
function __ZN10ClipperLib11OrientationEPNS_6OutRecEb($outRec, $UseFullInt64Range) {
 $outRec = $outRec | 0;
 $UseFullInt64Range = $UseFullInt64Range | 0;
 var $tmp = 0, $ref_tmp = 0, $tmp66 = 0, $ref_tmp67 = 0, $tmp68 = 0, $ref_tmp70 = 0, $0 = 0, $op_06471 = 0, $Y4_phi_trans_insert = 0, $1$0 = 0, $1$1 = 0, $op_06474 = 0, $opBottom_0_ph73 = 0, $X14 = 0, $op_066 = 0, $Y = 0, $2$0 = 0, $2$1 = 0, $op_0 = 0, $X = 0, $3$1 = 0, $4$1 = 0, $op_064 = 0, $opBottom_0_ph68 = 0, $6 = 0, $X_i = 0, $Y_i = 0, $opBottom_0_pn = 0, $opPrev_0 = 0, $X1_i = 0, $Y2_i = 0, $opPrev_0_lcssa = 0, $_pre$0 = 0, $_pre$1 = 0, $opNext_061 = 0, $X1_i37 = 0, $11$0 = 0, $11$1 = 0, $Y2_i40 = 0, $14 = 0, $15$0 = 0, $15$1 = 0, $opNext_0_lcssa = 0, $X42 = 0, $sub$0 = 0, $sub$1 = 0, $17$0 = 0, $17$1 = 0, $Y47 = 0, $sub48$0 = 0, $sub48$1 = 0, $sub54$0 = 0, $sub54$1 = 0, $Y57 = 0, $sub60$0 = 0, $sub60$1 = 0, $lo_i_i52 = 0, $hi_i_i53 = 0, $lo_i_i49 = 0, $hi_i_i50 = 0, $lo_i_i46 = 0, $hi_i_i47 = 0, $lo_i_i44 = 0, $hi_i_i45 = 0, $hi2_i_i_i = 0, $20$0 = 0, $20$1 = 0, $lo3_i_i_i = 0, $21$0 = 0, $21$1 = 0, $hi2_i_i_i_i = 0, $22$0 = 0, $22$1 = 0, $lo3_i_i_i_i = 0, $23$0 = 0, $23$1 = 0, $sub_i_i_i$0 = 0, $sub6_i_i_i$0 = 0, $24$0 = 0, $24$1 = 0, $25$0 = 0, $25$1 = 0, $add_i_i_i$0 = 0, $add_i_i_i$1 = 0, $tmp72_sroa_0_0_load59$0 = 0, $tmp72_sroa_0_0_load59$1 = 0, $$etemp$60$1 = 0, $mul$0 = 0, $mul$1 = 0, $mul79$0 = 0, $sub80$0 = 0, $sub80$1 = 0, $$etemp$61$1 = 0, $retval_0 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $tmp = __stackBase__ | 0;
 $ref_tmp = __stackBase__ + 16 | 0;
 $tmp66 = __stackBase__ + 32 | 0;
 $ref_tmp67 = __stackBase__ + 48 | 0;
 $tmp68 = __stackBase__ + 64 | 0;
 $ref_tmp70 = __stackBase__ + 80 | 0;
 $0 = HEAP32[$outRec + 16 >> 2] | 0;
 if (($0 | 0) == 0) {
  $retval_0 = 1;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $op_06471 = HEAP32[$0 + 24 >> 2] | 0;
 L5120 : do {
  if (($op_06471 | 0) == ($0 | 0)) {
   $opBottom_0_ph68 = $0;
  } else {
   $Y4_phi_trans_insert = $0 + 16 | 0;
   $opBottom_0_ph73 = $0;
   $op_06474 = $op_06471;
   $1$1 = HEAP32[$Y4_phi_trans_insert + 4 >> 2] | 0;
   $1$0 = HEAP32[$Y4_phi_trans_insert >> 2] | 0;
   while (1) {
    $X14 = $opBottom_0_ph73 + 8 | 0;
    $op_066 = $op_06474;
    while (1) {
     $Y = $op_066 + 16 | 0;
     $2$0 = HEAP32[$Y >> 2] | 0;
     $2$1 = HEAP32[$Y + 4 >> 2] | 0;
     if (!(($2$1 | 0) < ($1$1 | 0) | ($2$1 | 0) == ($1$1 | 0) & $2$0 >>> 0 < $1$0 >>> 0)) {
      if (($2$1 | 0) > ($1$1 | 0) | ($2$1 | 0) == ($1$1 | 0) & $2$0 >>> 0 > $1$0 >>> 0) {
       break;
      }
      $X = $op_066 + 8 | 0;
      $3$1 = HEAP32[$X + 4 >> 2] | 0;
      $4$1 = HEAP32[$X14 + 4 >> 2] | 0;
      if (($3$1 | 0) < ($4$1 | 0) | ($3$1 | 0) == ($4$1 | 0) & (HEAP32[$X >> 2] | 0) >>> 0 < (HEAP32[$X14 >> 2] | 0) >>> 0) {
       break;
      }
     }
     $op_0 = HEAP32[$op_066 + 24 >> 2] | 0;
     if (($op_0 | 0) == ($0 | 0)) {
      $opBottom_0_ph68 = $opBottom_0_ph73;
      break L5120;
     } else {
      $op_066 = $op_0;
     }
    }
    $op_064 = HEAP32[$op_066 + 24 >> 2] | 0;
    if (($op_064 | 0) == ($0 | 0)) {
     $opBottom_0_ph68 = $op_066;
     break;
    } else {
     $opBottom_0_ph73 = $op_066;
     $op_06474 = $op_064;
     $1$1 = $2$1;
     $1$0 = $2$0;
    }
   }
  }
 } while (0);
 HEAP32[$outRec + 20 >> 2] = $opBottom_0_ph68;
 HEAP32[$opBottom_0_ph68 >> 2] = HEAP32[$outRec >> 2];
 $6 = HEAP32[$opBottom_0_ph68 + 24 >> 2] | 0;
 $X_i = $opBottom_0_ph68 + 8 | 0;
 $Y_i = $opBottom_0_ph68 + 16 | 0;
 $opBottom_0_pn = $opBottom_0_ph68;
 while (1) {
  $opPrev_0 = HEAP32[$opBottom_0_pn + 28 >> 2] | 0;
  if (($opBottom_0_ph68 | 0) == ($opPrev_0 | 0)) {
   $opPrev_0_lcssa = $opBottom_0_ph68;
   break;
  }
  $X1_i = $opPrev_0 + 8 | 0;
  if (!((HEAP32[$X_i >> 2] | 0) == (HEAP32[$X1_i >> 2] | 0) & (HEAP32[$X_i + 4 >> 2] | 0) == (HEAP32[$X1_i + 4 >> 2] | 0))) {
   $opPrev_0_lcssa = $opPrev_0;
   break;
  }
  $Y2_i = $opPrev_0 + 16 | 0;
  if ((HEAP32[$Y_i >> 2] | 0) == (HEAP32[$Y2_i >> 2] | 0) & (HEAP32[$Y_i + 4 >> 2] | 0) == (HEAP32[$Y2_i + 4 >> 2] | 0)) {
   $opBottom_0_pn = $opPrev_0;
  } else {
   $opPrev_0_lcssa = $opPrev_0;
   break;
  }
 }
 $_pre$0 = HEAP32[$X_i >> 2] | 0;
 $_pre$1 = HEAP32[$X_i + 4 >> 2] | 0;
 L5137 : do {
  if (($opBottom_0_ph68 | 0) == ($6 | 0)) {
   $opNext_0_lcssa = $opBottom_0_ph68;
   $15$1 = $_pre$1;
   $15$0 = $_pre$0;
  } else {
   $opNext_061 = $6;
   while (1) {
    $X1_i37 = $opNext_061 + 8 | 0;
    $11$0 = HEAP32[$X1_i37 >> 2] | 0;
    $11$1 = HEAP32[$X1_i37 + 4 >> 2] | 0;
    if (!(($_pre$0 | 0) == ($11$0 | 0) & ($_pre$1 | 0) == ($11$1 | 0))) {
     $opNext_0_lcssa = $opNext_061;
     $15$1 = $11$1;
     $15$0 = $11$0;
     break L5137;
    }
    $Y2_i40 = $opNext_061 + 16 | 0;
    if (!((HEAP32[$Y_i >> 2] | 0) == (HEAP32[$Y2_i40 >> 2] | 0) & (HEAP32[$Y_i + 4 >> 2] | 0) == (HEAP32[$Y2_i40 + 4 >> 2] | 0))) {
     $opNext_0_lcssa = $opNext_061;
     $15$1 = $11$1;
     $15$0 = $11$0;
     break L5137;
    }
    $14 = HEAP32[$opNext_061 + 24 >> 2] | 0;
    if (($opBottom_0_ph68 | 0) == ($14 | 0)) {
     $opNext_0_lcssa = $opBottom_0_ph68;
     $15$1 = $_pre$1;
     $15$0 = $_pre$0;
     break;
    } else {
     $opNext_061 = $14;
    }
   }
  }
 } while (0);
 $X42 = $opPrev_0_lcssa + 8 | 0;
 $sub$0 = _i64Subtract($_pre$0, $_pre$1, HEAP32[$X42 >> 2] | 0, HEAP32[$X42 + 4 >> 2] | 0) | 0;
 $sub$1 = tempRet0;
 $17$0 = HEAP32[$Y_i >> 2] | 0;
 $17$1 = HEAP32[$Y_i + 4 >> 2] | 0;
 $Y47 = $opPrev_0_lcssa + 16 | 0;
 $sub48$0 = _i64Subtract($17$0, $17$1, HEAP32[$Y47 >> 2] | 0, HEAP32[$Y47 + 4 >> 2] | 0) | 0;
 $sub48$1 = tempRet0;
 $sub54$0 = _i64Subtract($15$0, $15$1, $_pre$0, $_pre$1) | 0;
 $sub54$1 = tempRet0;
 $Y57 = $opNext_0_lcssa + 16 | 0;
 $sub60$0 = _i64Subtract(HEAP32[$Y57 >> 2] | 0, HEAP32[$Y57 + 4 >> 2] | 0, $17$0, $17$1) | 0;
 $sub60$1 = tempRet0;
 if (!$UseFullInt64Range) {
  $mul$0 = ___muldi3($sub60$0, $sub60$1, $sub$0, $sub$1) | 0;
  $mul$1 = tempRet0;
  $mul79$0 = ___muldi3($sub54$0, $sub54$1, $sub48$0, $sub48$1) | 0;
  $sub80$0 = _i64Subtract($mul$0, $mul$1, $mul79$0, tempRet0) | 0;
  $sub80$1 = tempRet0;
  $$etemp$61$1 = -1;
  $retval_0 = ($sub80$1 | 0) > ($$etemp$61$1 | 0) | ($sub80$1 | 0) == ($$etemp$61$1 | 0) & $sub80$0 >>> 0 > -1 >>> 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $lo_i_i52 = $tmp + 8 | 0;
 HEAP32[$lo_i_i52 >> 2] = $sub$0;
 HEAP32[$lo_i_i52 + 4 >> 2] = $sub$1;
 $hi_i_i53 = $tmp | 0;
 HEAP32[$hi_i_i53 >> 2] = $sub$1 >> 31 | (($sub$1 | 0) < 0 ? -1 : 0) << 1;
 HEAP32[$hi_i_i53 + 4 >> 2] = (($sub$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub$1 | 0) < 0 ? -1 : 0) << 1;
 $lo_i_i49 = $ref_tmp + 8 | 0;
 HEAP32[$lo_i_i49 >> 2] = $sub60$0;
 HEAP32[$lo_i_i49 + 4 >> 2] = $sub60$1;
 $hi_i_i50 = $ref_tmp | 0;
 HEAP32[$hi_i_i50 >> 2] = $sub60$1 >> 31 | (($sub60$1 | 0) < 0 ? -1 : 0) << 1;
 HEAP32[$hi_i_i50 + 4 >> 2] = (($sub60$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub60$1 | 0) < 0 ? -1 : 0) << 1;
 __ZNK10ClipperLib6Int128mlERKS0_($tmp66, $tmp, $ref_tmp);
 $lo_i_i46 = $tmp68 + 8 | 0;
 HEAP32[$lo_i_i46 >> 2] = $sub54$0;
 HEAP32[$lo_i_i46 + 4 >> 2] = $sub54$1;
 $hi_i_i47 = $tmp68 | 0;
 HEAP32[$hi_i_i47 >> 2] = $sub54$1 >> 31 | (($sub54$1 | 0) < 0 ? -1 : 0) << 1;
 HEAP32[$hi_i_i47 + 4 >> 2] = (($sub54$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub54$1 | 0) < 0 ? -1 : 0) << 1;
 $lo_i_i44 = $ref_tmp70 + 8 | 0;
 HEAP32[$lo_i_i44 >> 2] = $sub48$0;
 HEAP32[$lo_i_i44 + 4 >> 2] = $sub48$1;
 $hi_i_i45 = $ref_tmp70 | 0;
 HEAP32[$hi_i_i45 >> 2] = $sub48$1 >> 31 | (($sub48$1 | 0) < 0 ? -1 : 0) << 1;
 HEAP32[$hi_i_i45 + 4 >> 2] = (($sub48$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub48$1 | 0) < 0 ? -1 : 0) << 1;
 __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp67, $tmp68, $ref_tmp70);
 $hi2_i_i_i = $tmp66 | 0;
 $20$0 = HEAP32[$hi2_i_i_i >> 2] | 0;
 $20$1 = HEAP32[$hi2_i_i_i + 4 >> 2] | 0;
 $lo3_i_i_i = $tmp66 + 8 | 0;
 $21$0 = HEAP32[$lo3_i_i_i >> 2] | 0;
 $21$1 = HEAP32[$lo3_i_i_i + 4 >> 2] | 0;
 $hi2_i_i_i_i = $ref_tmp67 | 0;
 $22$0 = HEAP32[$hi2_i_i_i_i >> 2] | 0;
 $22$1 = HEAP32[$hi2_i_i_i_i + 4 >> 2] | 0;
 $lo3_i_i_i_i = $ref_tmp67 + 8 | 0;
 $23$0 = HEAP32[$lo3_i_i_i_i >> 2] | 0;
 $23$1 = HEAP32[$lo3_i_i_i_i + 4 >> 2] | 0;
 if (($23$0 | 0) == 0 & ($23$1 | 0) == 0) {
  $sub_i_i_i$0 = _i64Subtract(0, 0, $22$0, $22$1) | 0;
  $25$1 = tempRet0;
  $25$0 = $sub_i_i_i$0;
  $24$1 = 0;
  $24$0 = 0;
 } else {
  $sub6_i_i_i$0 = _i64Subtract(0, 0, $23$0, $23$1) | 0;
  $25$1 = $22$1 ^ -1;
  $25$0 = $22$0 ^ -1;
  $24$1 = tempRet0;
  $24$0 = $sub6_i_i_i$0;
 }
 $add_i_i_i$0 = _i64Add($25$0, $25$1, $20$0, $20$1) | 0;
 $add_i_i_i$1 = tempRet0;
 _llvm_uadd_with_overflow_i64($21$0 | 0, $21$1 | 0, $24$0 | 0, $24$1 | 0) | 0;
 $tmp72_sroa_0_0_load59$0 = _i64Add($add_i_i_i$0, $add_i_i_i$1, tempRet1 & 1, 0) | 0;
 $tmp72_sroa_0_0_load59$1 = tempRet0;
 $$etemp$60$1 = -1;
 $retval_0 = ($tmp72_sroa_0_0_load59$1 | 0) > ($$etemp$60$1 | 0) | ($tmp72_sroa_0_0_load59$1 | 0) == ($$etemp$60$1 | 0) & $tmp72_sroa_0_0_load59$0 >>> 0 > -1 >>> 0;
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __ZNSt3__16vectorI10SimpleFaceNS_9allocatorIS1_EEEC2ERKS4_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__begin__i = 0, $__end__i = 0, $__first__i_i_i_i = 0, $__end__i18 = 0, $0 = 0, $__begin__i19 = 0, $1 = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__first_addr_04_i = 0, $7 = 0, $8 = 0, $9 = 0;
 $__begin__i = $this | 0;
 HEAP32[$__begin__i >> 2] = 0;
 $__end__i = $this + 4 | 0;
 HEAP32[$__end__i >> 2] = 0;
 $__first__i_i_i_i = $this + 8 | 0;
 HEAP32[$__first__i_i_i_i >> 2] = 0;
 $__end__i18 = $__x + 4 | 0;
 $0 = HEAP32[$__end__i18 >> 2] | 0;
 $__begin__i19 = $__x | 0;
 $1 = HEAP32[$__begin__i19 >> 2] | 0;
 if (($0 | 0) == ($1 | 0)) {
  return;
 }
 $sub_ptr_sub_i = $0 - $1 | 0;
 $sub_ptr_div_i = ($sub_ptr_sub_i | 0) / 36 & -1;
 if ($sub_ptr_div_i >>> 0 > 119304647) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $3 = __Znwj($sub_ptr_sub_i) | 0;
 HEAP32[$__end__i >> 2] = $3;
 HEAP32[$__begin__i >> 2] = $3;
 HEAP32[$__first__i_i_i_i >> 2] = $3 + ($sub_ptr_div_i * 36 & -1);
 $4 = HEAP32[$__begin__i19 >> 2] | 0;
 $5 = HEAP32[$__end__i18 >> 2] | 0;
 if (($4 | 0) == ($5 | 0)) {
  return;
 } else {
  $__first_addr_04_i = $4;
  $6 = $3;
 }
 do {
  if (($6 | 0) == 0) {
   $9 = 0;
  } else {
   $7 = $6;
   $8 = $__first_addr_04_i;
   _memcpy($7 | 0, $8 | 0, 36) | 0;
   $9 = HEAP32[$__end__i >> 2] | 0;
  }
  $6 = $9 + 36 | 0;
  HEAP32[$__end__i >> 2] = $6;
  $__first_addr_04_i = $__first_addr_04_i + 36 | 0;
 } while (($__first_addr_04_i | 0) != ($5 | 0));
 return;
}
function __ZNSt3__16vectorI10SimpleFaceNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_022 = 0, $retval_i_023 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $4 = 0, $5 = 0, $incdec_ptr = 0, $6 = 0, $sub_ptr_sub_i_i = 0, $add_ptr_i_i13 = 0, $8 = 0, $9 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = ((HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 36 & -1;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 119304647) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_div_i_i_i = ((HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 36 & -1;
 if ($sub_ptr_div_i_i_i >>> 0 > 59652322) {
  $retval_i_022 = 119304647;
  label = 4658;
 } else {
  $mul_i = $sub_ptr_div_i_i_i << 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_023 = 0;
  } else {
   $retval_i_022 = $_sroa_speculated;
   label = 4658;
  }
 }
 if ((label | 0) == 4658) {
  $cond_i_i = __Znwj($retval_i_022 * 36 & -1) | 0;
  $retval_i_023 = $retval_i_022;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i * 36 & -1) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_023 * 36 & -1) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  $4 = $add_ptr_i_i;
  $5 = $__x;
  _memcpy($4 | 0, $5 | 0, 36) | 0;
 }
 $incdec_ptr = $cond_i_i + ($add * 36 & -1) | 0;
 $6 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i_i = (HEAP32[$__end__i >> 2] | 0) - $6 | 0;
 $add_ptr_i_i13 = $cond_i_i + (((($sub_ptr_sub_i_i | 0) / -36 & -1) + $sub_ptr_div_i | 0) * 36 & -1) | 0;
 $8 = $add_ptr_i_i13;
 $9 = $6;
 _memcpy($8 | 0, $9 | 0, $sub_ptr_sub_i_i) | 0;
 HEAP32[$__begin__i >> 2] = $add_ptr_i_i13;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 if (($6 | 0) == 0) {
  return;
 }
 __ZdlPv($9);
 return;
}
function __ZN10ClipperLib11OrientationERKNSt3__16vectorINS_8IntPointENS0_9allocatorIS2_EEEE($poly) {
 $poly = $poly | 0;
 var $tmp = 0, $ref_tmp = 0, $tmp86 = 0, $ref_tmp87 = 0, $tmp88 = 0, $ref_tmp90 = 0, $1 = 0, $sub = 0, $i_087 = 0, $j_086 = 0, $Y = 0, $2$0 = 0, $2$1 = 0, $Y4 = 0, $3$0 = 0, $3$1 = 0, $X = 0, $4$1 = 0, $X15 = 0, $5$1 = 0, $j_1 = 0, $inc = 0, $jplus_0 = 0, $jminus_0 = 0, $X28 = 0, $6$0 = 0, $6$1 = 0, $X30 = 0, $sub31$0 = 0, $sub31$1 = 0, $Y34 = 0, $8$0 = 0, $8$1 = 0, $Y36 = 0, $sub37$0 = 0, $sub37$1 = 0, $X40 = 0, $sub43$0 = 0, $sub43$1 = 0, $Y46 = 0, $sub49$0 = 0, $sub49$1 = 0, $$etemp$20$1 = 0, $cmp_i = 0, $sub_i$0 = 0, $cond_i$0 = 0, $cond_i$1 = 0, $$etemp$22$1 = 0, $$etemp$23$1 = 0, $cmp_i68 = 0, $sub_i69$0 = 0, $sub_i69$1 = 0, $cond_i70$1 = 0, $$etemp$25$1 = 0, $$etemp$26$1 = 0, $cmp_i65 = 0, $sub_i66$0 = 0, $cond_i67$1 = 0, $$etemp$28$1 = 0, $$etemp$29$1 = 0, $cmp_i62 = 0, $sub_i63$0 = 0, $cond_i64$1 = 0, $$etemp$31$1 = 0, $$etemp$32$1 = 0, $sub_i57_pre$0 = 0, $sub_i57_pre_phi$0 = 0, $sub_i57_pre_phi$1 = 0, $$etemp$34$1 = 0, $cmp_i56 = 0, $cond_i58$1 = 0, $$etemp$35$1 = 0, $$etemp$36$1 = 0, $cmp_i53 = 0, $sub_i54$0 = 0, $cond_i55$1 = 0, $$etemp$38$1 = 0, $$etemp$39$1 = 0, $cmp_i50 = 0, $sub_i51$0 = 0, $cond_i52$1 = 0, $$etemp$41$1 = 0, $exception = 0, $12 = 0, $lo_i_i47 = 0, $hi_i_i48 = 0, $lo_i_i44 = 0, $hi_i_i45 = 0, $lo_i_i41 = 0, $hi_i_i42 = 0, $lo_i_i39 = 0, $hi_i_i40 = 0, $hi2_i_i_i = 0, $13$0 = 0, $13$1 = 0, $lo3_i_i_i = 0, $14$0 = 0, $14$1 = 0, $hi2_i_i_i_i = 0, $15$0 = 0, $15$1 = 0, $lo3_i_i_i_i = 0, $16$0 = 0, $16$1 = 0, $sub_i_i_i$0 = 0, $sub6_i_i_i$0 = 0, $17$0 = 0, $17$1 = 0, $18$0 = 0, $18$1 = 0, $add_i_i_i$0 = 0, $add_i_i_i$1 = 0, $cross_sroa_0_0_load83$0 = 0, $cross_sroa_0_0_load83$1 = 0, $$etemp$70$1 = 0, $mul$0 = 0, $mul$1 = 0, $mul99$0 = 0, $sub100$0 = 0, $sub100$1 = 0, $$etemp$71$1 = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $tmp = __stackBase__ | 0;
 $ref_tmp = __stackBase__ + 16 | 0;
 $tmp86 = __stackBase__ + 32 | 0;
 $ref_tmp87 = __stackBase__ + 48 | 0;
 $tmp88 = __stackBase__ + 64 | 0;
 $ref_tmp90 = __stackBase__ + 80 | 0;
 $1 = HEAP32[$poly >> 2] | 0;
 $sub = ((HEAP32[$poly + 4 >> 2] | 0) - $1 >> 4) - 1 | 0;
 if (($sub | 0) < 2) {
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else {
  $j_086 = 0;
  $i_087 = 0;
 }
 while (1) {
  $Y = $1 + ($i_087 << 4) + 8 | 0;
  $2$0 = HEAP32[$Y >> 2] | 0;
  $2$1 = HEAP32[$Y + 4 >> 2] | 0;
  $Y4 = $1 + ($j_086 << 4) + 8 | 0;
  $3$0 = HEAP32[$Y4 >> 2] | 0;
  $3$1 = HEAP32[$Y4 + 4 >> 2] | 0;
  do {
   if (($2$1 | 0) < ($3$1 | 0) | ($2$1 | 0) == ($3$1 | 0) & $2$0 >>> 0 < $3$0 >>> 0) {
    $j_1 = $j_086;
   } else {
    if (!(($2$1 | 0) > ($3$1 | 0) | ($2$1 | 0) == ($3$1 | 0) & $2$0 >>> 0 > $3$0 >>> 0)) {
     $X = $1 + ($i_087 << 4) | 0;
     $4$1 = HEAP32[$X + 4 >> 2] | 0;
     $X15 = $1 + ($j_086 << 4) | 0;
     $5$1 = HEAP32[$X15 + 4 >> 2] | 0;
     if (!(($4$1 | 0) < ($5$1 | 0) | ($4$1 | 0) == ($5$1 | 0) & (HEAP32[$X >> 2] | 0) >>> 0 < (HEAP32[$X15 >> 2] | 0) >>> 0)) {
      $j_1 = $j_086;
      break;
     }
    }
    $j_1 = $i_087;
   }
  } while (0);
  $inc = $i_087 + 1 | 0;
  if (($inc | 0) > ($sub | 0)) {
   break;
  } else {
   $j_086 = $j_1;
   $i_087 = $inc;
  }
 }
 $jplus_0 = ($j_1 | 0) == ($sub | 0) ? 0 : $j_1 + 1 | 0;
 $jminus_0 = ($j_1 | 0) == 0 ? $sub : $j_1 - 1 | 0;
 $X28 = $1 + ($j_1 << 4) | 0;
 $6$0 = HEAP32[$X28 >> 2] | 0;
 $6$1 = HEAP32[$X28 + 4 >> 2] | 0;
 $X30 = $1 + ($jminus_0 << 4) | 0;
 $sub31$0 = _i64Subtract($6$0, $6$1, HEAP32[$X30 >> 2] | 0, HEAP32[$X30 + 4 >> 2] | 0) | 0;
 $sub31$1 = tempRet0;
 $Y34 = $1 + ($j_1 << 4) + 8 | 0;
 $8$0 = HEAP32[$Y34 >> 2] | 0;
 $8$1 = HEAP32[$Y34 + 4 >> 2] | 0;
 $Y36 = $1 + ($jminus_0 << 4) + 8 | 0;
 $sub37$0 = _i64Subtract($8$0, $8$1, HEAP32[$Y36 >> 2] | 0, HEAP32[$Y36 + 4 >> 2] | 0) | 0;
 $sub37$1 = tempRet0;
 $X40 = $1 + ($jplus_0 << 4) | 0;
 $sub43$0 = _i64Subtract(HEAP32[$X40 >> 2] | 0, HEAP32[$X40 + 4 >> 2] | 0, $6$0, $6$1) | 0;
 $sub43$1 = tempRet0;
 $Y46 = $1 + ($jplus_0 << 4) + 8 | 0;
 $sub49$0 = _i64Subtract(HEAP32[$Y46 >> 2] | 0, HEAP32[$Y46 + 4 >> 2] | 0, $8$0, $8$1) | 0;
 $sub49$1 = tempRet0;
 $$etemp$20$1 = 0;
 $cmp_i = ($sub31$1 | 0) < ($$etemp$20$1 | 0) | ($sub31$1 | 0) == ($$etemp$20$1 | 0) & $sub31$0 >>> 0 < 0 >>> 0;
 $sub_i$0 = _i64Subtract(0, 0, $sub31$0, $sub31$1) | 0;
 $cond_i$0 = $cmp_i ? $sub_i$0 : $sub31$0;
 $cond_i$1 = $cmp_i ? tempRet0 : $sub31$1;
 $$etemp$22$1 = 0;
 do {
  if (($cond_i$1 | 0) > ($$etemp$22$1 | 0) | ($cond_i$1 | 0) == ($$etemp$22$1 | 0) & $cond_i$0 >>> 0 > 1073741823 >>> 0) {
   label = 4676;
  } else {
   $$etemp$23$1 = 0;
   $cmp_i68 = ($sub37$1 | 0) < ($$etemp$23$1 | 0) | ($sub37$1 | 0) == ($$etemp$23$1 | 0) & $sub37$0 >>> 0 < 0 >>> 0;
   $sub_i69$0 = _i64Subtract(0, 0, $sub37$0, $sub37$1) | 0;
   $sub_i69$1 = tempRet0;
   $cond_i70$1 = $cmp_i68 ? $sub_i69$1 : $sub37$1;
   $$etemp$25$1 = 0;
   if (($cond_i70$1 | 0) > ($$etemp$25$1 | 0) | ($cond_i70$1 | 0) == ($$etemp$25$1 | 0) & ($cmp_i68 ? $sub_i69$0 : $sub37$0) >>> 0 > 1073741823 >>> 0) {
    $sub_i57_pre_phi$1 = $sub_i69$1;
    $sub_i57_pre_phi$0 = $sub_i69$0;
    break;
   }
   $$etemp$26$1 = 0;
   $cmp_i65 = ($sub43$1 | 0) < ($$etemp$26$1 | 0) | ($sub43$1 | 0) == ($$etemp$26$1 | 0) & $sub43$0 >>> 0 < 0 >>> 0;
   $sub_i66$0 = _i64Subtract(0, 0, $sub43$0, $sub43$1) | 0;
   $cond_i67$1 = $cmp_i65 ? tempRet0 : $sub43$1;
   $$etemp$28$1 = 0;
   if (($cond_i67$1 | 0) > ($$etemp$28$1 | 0) | ($cond_i67$1 | 0) == ($$etemp$28$1 | 0) & ($cmp_i65 ? $sub_i66$0 : $sub43$0) >>> 0 > 1073741823 >>> 0) {
    label = 4676;
    break;
   }
   $$etemp$29$1 = 0;
   $cmp_i62 = ($sub49$1 | 0) < ($$etemp$29$1 | 0) | ($sub49$1 | 0) == ($$etemp$29$1 | 0) & $sub49$0 >>> 0 < 0 >>> 0;
   $sub_i63$0 = _i64Subtract(0, 0, $sub49$0, $sub49$1) | 0;
   $cond_i64$1 = $cmp_i62 ? tempRet0 : $sub49$1;
   $$etemp$31$1 = 0;
   if (($cond_i64$1 | 0) > ($$etemp$31$1 | 0) | ($cond_i64$1 | 0) == ($$etemp$31$1 | 0) & ($cmp_i62 ? $sub_i63$0 : $sub49$0) >>> 0 > 1073741823 >>> 0) {
    label = 4676;
    break;
   }
   $mul$0 = ___muldi3($sub49$0, $sub49$1, $sub31$0, $sub31$1) | 0;
   $mul$1 = tempRet0;
   $mul99$0 = ___muldi3($sub43$0, $sub43$1, $sub37$0, $sub37$1) | 0;
   $sub100$0 = _i64Subtract($mul$0, $mul$1, $mul99$0, tempRet0) | 0;
   $sub100$1 = tempRet0;
   $$etemp$71$1 = -1;
   $retval_0 = ($sub100$1 | 0) > ($$etemp$71$1 | 0) | ($sub100$1 | 0) == ($$etemp$71$1 | 0) & $sub100$0 >>> 0 > -1 >>> 0;
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  }
 } while (0);
 do {
  if ((label | 0) == 4676) {
   $$etemp$32$1 = 1073741823;
   if (($cond_i$1 | 0) > ($$etemp$32$1 | 0) | ($cond_i$1 | 0) == ($$etemp$32$1 | 0) & $cond_i$0 >>> 0 > -1 >>> 0) {
    $exception = ___cxa_allocate_exception(4) | 0;
    $12 = $exception;
    HEAP32[$12 >> 2] = 3040;
    ___cxa_throw($exception | 0, 15392, 0);
    return 0;
   } else {
    $sub_i57_pre$0 = _i64Subtract(0, 0, $sub37$0, $sub37$1) | 0;
    $sub_i57_pre_phi$1 = tempRet0;
    $sub_i57_pre_phi$0 = $sub_i57_pre$0;
    break;
   }
  }
 } while (0);
 $$etemp$34$1 = 0;
 $cmp_i56 = ($sub37$1 | 0) < ($$etemp$34$1 | 0) | ($sub37$1 | 0) == ($$etemp$34$1 | 0) & $sub37$0 >>> 0 < 0 >>> 0;
 $cond_i58$1 = $cmp_i56 ? $sub_i57_pre_phi$1 : $sub37$1;
 $$etemp$35$1 = 1073741823;
 if (($cond_i58$1 | 0) > ($$etemp$35$1 | 0) | ($cond_i58$1 | 0) == ($$etemp$35$1 | 0) & ($cmp_i56 ? $sub_i57_pre_phi$0 : $sub37$0) >>> 0 > -1 >>> 0) {
  $exception = ___cxa_allocate_exception(4) | 0;
  $12 = $exception;
  HEAP32[$12 >> 2] = 3040;
  ___cxa_throw($exception | 0, 15392, 0);
  return 0;
 }
 $$etemp$36$1 = 0;
 $cmp_i53 = ($sub43$1 | 0) < ($$etemp$36$1 | 0) | ($sub43$1 | 0) == ($$etemp$36$1 | 0) & $sub43$0 >>> 0 < 0 >>> 0;
 $sub_i54$0 = _i64Subtract(0, 0, $sub43$0, $sub43$1) | 0;
 $cond_i55$1 = $cmp_i53 ? tempRet0 : $sub43$1;
 $$etemp$38$1 = 1073741823;
 if (($cond_i55$1 | 0) > ($$etemp$38$1 | 0) | ($cond_i55$1 | 0) == ($$etemp$38$1 | 0) & ($cmp_i53 ? $sub_i54$0 : $sub43$0) >>> 0 > -1 >>> 0) {
  $exception = ___cxa_allocate_exception(4) | 0;
  $12 = $exception;
  HEAP32[$12 >> 2] = 3040;
  ___cxa_throw($exception | 0, 15392, 0);
  return 0;
 }
 $$etemp$39$1 = 0;
 $cmp_i50 = ($sub49$1 | 0) < ($$etemp$39$1 | 0) | ($sub49$1 | 0) == ($$etemp$39$1 | 0) & $sub49$0 >>> 0 < 0 >>> 0;
 $sub_i51$0 = _i64Subtract(0, 0, $sub49$0, $sub49$1) | 0;
 $cond_i52$1 = $cmp_i50 ? tempRet0 : $sub49$1;
 $$etemp$41$1 = 1073741823;
 if (($cond_i52$1 | 0) > ($$etemp$41$1 | 0) | ($cond_i52$1 | 0) == ($$etemp$41$1 | 0) & ($cmp_i50 ? $sub_i51$0 : $sub49$0) >>> 0 > -1 >>> 0) {
  $exception = ___cxa_allocate_exception(4) | 0;
  $12 = $exception;
  HEAP32[$12 >> 2] = 3040;
  ___cxa_throw($exception | 0, 15392, 0);
  return 0;
 }
 $lo_i_i47 = $tmp + 8 | 0;
 HEAP32[$lo_i_i47 >> 2] = $sub31$0;
 HEAP32[$lo_i_i47 + 4 >> 2] = $sub31$1;
 $hi_i_i48 = $tmp | 0;
 HEAP32[$hi_i_i48 >> 2] = $sub31$1 >> 31 | (($sub31$1 | 0) < 0 ? -1 : 0) << 1;
 HEAP32[$hi_i_i48 + 4 >> 2] = (($sub31$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub31$1 | 0) < 0 ? -1 : 0) << 1;
 $lo_i_i44 = $ref_tmp + 8 | 0;
 HEAP32[$lo_i_i44 >> 2] = $sub49$0;
 HEAP32[$lo_i_i44 + 4 >> 2] = $sub49$1;
 $hi_i_i45 = $ref_tmp | 0;
 HEAP32[$hi_i_i45 >> 2] = $sub49$1 >> 31 | (($sub49$1 | 0) < 0 ? -1 : 0) << 1;
 HEAP32[$hi_i_i45 + 4 >> 2] = (($sub49$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub49$1 | 0) < 0 ? -1 : 0) << 1;
 __ZNK10ClipperLib6Int128mlERKS0_($tmp86, $tmp, $ref_tmp);
 $lo_i_i41 = $tmp88 + 8 | 0;
 HEAP32[$lo_i_i41 >> 2] = $sub43$0;
 HEAP32[$lo_i_i41 + 4 >> 2] = $sub43$1;
 $hi_i_i42 = $tmp88 | 0;
 HEAP32[$hi_i_i42 >> 2] = $sub43$1 >> 31 | (($sub43$1 | 0) < 0 ? -1 : 0) << 1;
 HEAP32[$hi_i_i42 + 4 >> 2] = (($sub43$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub43$1 | 0) < 0 ? -1 : 0) << 1;
 $lo_i_i39 = $ref_tmp90 + 8 | 0;
 HEAP32[$lo_i_i39 >> 2] = $sub37$0;
 HEAP32[$lo_i_i39 + 4 >> 2] = $sub37$1;
 $hi_i_i40 = $ref_tmp90 | 0;
 HEAP32[$hi_i_i40 >> 2] = $sub37$1 >> 31 | (($sub37$1 | 0) < 0 ? -1 : 0) << 1;
 HEAP32[$hi_i_i40 + 4 >> 2] = (($sub37$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub37$1 | 0) < 0 ? -1 : 0) << 1;
 __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp87, $tmp88, $ref_tmp90);
 $hi2_i_i_i = $tmp86 | 0;
 $13$0 = HEAP32[$hi2_i_i_i >> 2] | 0;
 $13$1 = HEAP32[$hi2_i_i_i + 4 >> 2] | 0;
 $lo3_i_i_i = $tmp86 + 8 | 0;
 $14$0 = HEAP32[$lo3_i_i_i >> 2] | 0;
 $14$1 = HEAP32[$lo3_i_i_i + 4 >> 2] | 0;
 $hi2_i_i_i_i = $ref_tmp87 | 0;
 $15$0 = HEAP32[$hi2_i_i_i_i >> 2] | 0;
 $15$1 = HEAP32[$hi2_i_i_i_i + 4 >> 2] | 0;
 $lo3_i_i_i_i = $ref_tmp87 + 8 | 0;
 $16$0 = HEAP32[$lo3_i_i_i_i >> 2] | 0;
 $16$1 = HEAP32[$lo3_i_i_i_i + 4 >> 2] | 0;
 if (($16$0 | 0) == 0 & ($16$1 | 0) == 0) {
  $sub_i_i_i$0 = _i64Subtract(0, 0, $15$0, $15$1) | 0;
  $18$1 = tempRet0;
  $18$0 = $sub_i_i_i$0;
  $17$1 = 0;
  $17$0 = 0;
 } else {
  $sub6_i_i_i$0 = _i64Subtract(0, 0, $16$0, $16$1) | 0;
  $18$1 = $15$1 ^ -1;
  $18$0 = $15$0 ^ -1;
  $17$1 = tempRet0;
  $17$0 = $sub6_i_i_i$0;
 }
 $add_i_i_i$0 = _i64Add($18$0, $18$1, $13$0, $13$1) | 0;
 $add_i_i_i$1 = tempRet0;
 _llvm_uadd_with_overflow_i64($14$0 | 0, $14$1 | 0, $17$0 | 0, $17$1 | 0) | 0;
 $cross_sroa_0_0_load83$0 = _i64Add($add_i_i_i$0, $add_i_i_i$1, tempRet1 & 1, 0) | 0;
 $cross_sroa_0_0_load83$1 = tempRet0;
 $$etemp$70$1 = -1;
 $retval_0 = ($cross_sroa_0_0_load83$1 | 0) > ($$etemp$70$1 | 0) | ($cross_sroa_0_0_load83$1 | 0) == ($$etemp$70$1 | 0) & $cross_sroa_0_0_load83$0 >>> 0 > -1 >>> 0;
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __ZNK10ClipperLib6Int128mlERKS0_($agg_result, $this, $rhs) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $hi = 0, $0$0 = 0, $0$1 = 0, $hi5 = 0, $1$0 = 0, $1$1 = 0, $exception = 0, $2 = 0, $cmp15 = 0, $hi_i_i = 0, $lo_i_i = 0, $lo3_i_i = 0, $5$0 = 0, $5$1 = 0, $$etemp$14$1 = 0, $sub_i28$0 = 0, $sub6_i30$0 = 0, $sub6_i30$1 = 0, $6$0 = 0, $6$1 = 0, $shr$0 = 0, $shr$1 = 0, $and$0 = 0, $and$1 = 0, $7 = 0, $8 = 0, $9$0 = 0, $9$1 = 0, $$etemp$28$1 = 0, $10$0 = 0, $10$1 = 0, $sub_i16$0 = 0, $sub6_i18$0 = 0, $sub6_i18$1 = 0, $11$0 = 0, $11$1 = 0, $shr26$0 = 0, $shr26$1 = 0, $and28$0 = 0, $and28$1 = 0, $mul$0 = 0, $mul$1 = 0, $mul29$0 = 0, $mul29$1 = 0, $mul30$0 = 0, $mul30$1 = 0, $mul31$0 = 0, $add$0 = 0, $add33$0 = 0, $add33$1 = 0, $uadd$0 = 0, $12$0 = 0, $12$1 = 0, $inc$0 = 0, $inc$1 = 0, $13$0 = 0, $13$1 = 0, $sub_i$0 = 0, $sub6_i$0 = 0;
 $hi = $this | 0;
 $0$0 = HEAP32[$hi >> 2] | 0;
 $0$1 = HEAP32[$hi + 4 >> 2] | 0;
 if (!(($0$0 | 0) == 0 & ($0$1 | 0) == 0 | ($0$0 | 0) == (-1 | 0) & ($0$1 | 0) == (-1 | 0))) {
  $exception = ___cxa_allocate_exception(4) | 0;
  $2 = $exception;
  HEAP32[$2 >> 2] = 5112;
  ___cxa_throw($exception | 0, 15392, 0);
 }
 $hi5 = $rhs | 0;
 $1$0 = HEAP32[$hi5 >> 2] | 0;
 $1$1 = HEAP32[$hi5 + 4 >> 2] | 0;
 if (!(($1$0 | 0) == 0 & ($1$1 | 0) == 0 | ($1$0 | 0) == (-1 | 0) & ($1$1 | 0) == (-1 | 0))) {
  $exception = ___cxa_allocate_exception(4) | 0;
  $2 = $exception;
  HEAP32[$2 >> 2] = 5112;
  ___cxa_throw($exception | 0, 15392, 0);
 }
 $cmp15 = ($0$1 >>> 31 | 0 << 1 | 0) == ($1$1 >>> 31 | 0 << 1 | 0);
 $hi_i_i = $agg_result | 0;
 HEAP32[$hi_i_i >> 2] = $0$0;
 HEAP32[$hi_i_i + 4 >> 2] = $0$1;
 $lo_i_i = $agg_result + 8 | 0;
 $lo3_i_i = $this + 8 | 0;
 $5$0 = HEAP32[$lo3_i_i >> 2] | 0;
 $5$1 = HEAP32[$lo3_i_i + 4 >> 2] | 0;
 HEAP32[$lo_i_i >> 2] = $5$0;
 HEAP32[$lo_i_i + 4 >> 2] = $5$1;
 $$etemp$14$1 = 0;
 do {
  if (($0$1 | 0) < ($$etemp$14$1 | 0) | ($0$1 | 0) == ($$etemp$14$1 | 0) & $0$0 >>> 0 < 0 >>> 0) {
   if (($5$0 | 0) == 0 & ($5$1 | 0) == 0) {
    $sub_i28$0 = _i64Subtract(0, 0, $0$0, $0$1) | 0;
    HEAP32[$hi_i_i >> 2] = $sub_i28$0;
    HEAP32[$hi_i_i + 4 >> 2] = tempRet0;
    $6$1 = 0;
    $6$0 = 0;
    break;
   } else {
    $sub6_i30$0 = _i64Subtract(0, 0, $5$0, $5$1) | 0;
    $sub6_i30$1 = tempRet0;
    HEAP32[$lo_i_i >> 2] = $sub6_i30$0;
    HEAP32[$lo_i_i + 4 >> 2] = $sub6_i30$1;
    HEAP32[$hi_i_i >> 2] = $0$0 ^ -1;
    HEAP32[$hi_i_i + 4 >> 2] = $0$1 ^ -1;
    $6$1 = $sub6_i30$1;
    $6$0 = $sub6_i30$0;
    break;
   }
  } else {
   $6$1 = $5$1;
   $6$0 = $5$0;
  }
 } while (0);
 $shr$0 = $6$1;
 $shr$1 = 0;
 $and$0 = $6$0 & -1;
 $and$1 = $6$1 & 0;
 $7 = $agg_result;
 $8 = $rhs;
 HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
 HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
 HEAP32[$7 + 12 >> 2] = HEAP32[$8 + 12 >> 2];
 $9$0 = HEAP32[$hi_i_i >> 2] | 0;
 $9$1 = HEAP32[$hi_i_i + 4 >> 2] | 0;
 $$etemp$28$1 = 0;
 $10$0 = HEAP32[$lo_i_i >> 2] | 0;
 $10$1 = HEAP32[$lo_i_i + 4 >> 2] | 0;
 do {
  if (($9$1 | 0) < ($$etemp$28$1 | 0) | ($9$1 | 0) == ($$etemp$28$1 | 0) & $9$0 >>> 0 < 0 >>> 0) {
   if (($10$0 | 0) == 0 & ($10$1 | 0) == 0) {
    $sub_i16$0 = _i64Subtract(0, 0, $9$0, $9$1) | 0;
    HEAP32[$hi_i_i >> 2] = $sub_i16$0;
    HEAP32[$hi_i_i + 4 >> 2] = tempRet0;
    $11$1 = 0;
    $11$0 = 0;
    break;
   } else {
    $sub6_i18$0 = _i64Subtract(0, 0, $10$0, $10$1) | 0;
    $sub6_i18$1 = tempRet0;
    HEAP32[$lo_i_i >> 2] = $sub6_i18$0;
    HEAP32[$lo_i_i + 4 >> 2] = $sub6_i18$1;
    HEAP32[$hi_i_i >> 2] = $9$0 ^ -1;
    HEAP32[$hi_i_i + 4 >> 2] = $9$1 ^ -1;
    $11$1 = $sub6_i18$1;
    $11$0 = $sub6_i18$0;
    break;
   }
  } else {
   $11$1 = $10$1;
   $11$0 = $10$0;
  }
 } while (0);
 $shr26$0 = $11$1;
 $shr26$1 = 0;
 $and28$0 = $11$0 & -1;
 $and28$1 = $11$1 & 0;
 $mul$0 = ___muldi3($shr26$0, $shr26$1, $shr$0, $shr$1) | 0;
 $mul$1 = tempRet0;
 $mul29$0 = ___muldi3($and28$0, $and28$1, $and$0, $and$1) | 0;
 $mul29$1 = tempRet0;
 $mul30$0 = ___muldi3($and28$0, $and28$1, $shr$0, $shr$1) | 0;
 $mul30$1 = tempRet0;
 $mul31$0 = ___muldi3($shr26$0, $shr26$1, $and$0, $and$1) | 0;
 $add$0 = _i64Add($mul30$0, $mul30$1, $mul31$0, tempRet0) | 0;
 $add33$0 = _i64Add(tempRet0, 0, $mul$0, $mul$1) | 0;
 $add33$1 = tempRet0;
 HEAP32[$hi_i_i >> 2] = $add33$0;
 HEAP32[$hi_i_i + 4 >> 2] = $add33$1;
 $uadd$0 = _llvm_uadd_with_overflow_i64(0, $add$0 | 0, $mul29$0 | 0, $mul29$1 | 0) | 0;
 $12$0 = $uadd$0;
 $12$1 = tempRet0;
 HEAP32[$lo_i_i >> 2] = $12$0;
 HEAP32[$lo_i_i + 4 >> 2] = $12$1;
 if (tempRet1) {
  $inc$0 = _i64Add($add33$0, $add33$1, 1, 0) | 0;
  $inc$1 = tempRet0;
  HEAP32[$hi_i_i >> 2] = $inc$0;
  HEAP32[$hi_i_i + 4 >> 2] = $inc$1;
  $13$1 = $inc$1;
  $13$0 = $inc$0;
 } else {
  $13$1 = $add33$1;
  $13$0 = $add33$0;
 }
 if ($cmp15) {
  return;
 }
 if (!(($12$0 | 0) == 0 & ($12$1 | 0) == 0)) {
  $sub6_i$0 = _i64Subtract(0, 0, $12$0, $12$1) | 0;
  HEAP32[$lo_i_i >> 2] = $sub6_i$0;
  HEAP32[$lo_i_i + 4 >> 2] = tempRet0;
  HEAP32[$hi_i_i >> 2] = $13$0 ^ -1;
  HEAP32[$hi_i_i + 4 >> 2] = $13$1 ^ -1;
  return;
 }
 if (($13$0 | 0) == 0 & ($13$1 | 0) == 0) {
  return;
 }
 $sub_i$0 = _i64Subtract(0, 0, $13$0, $13$1) | 0;
 HEAP32[$hi_i_i >> 2] = $sub_i$0;
 HEAP32[$hi_i_i + 4 >> 2] = tempRet0;
 return;
}
function __ZN10ClipperLib4AreaERKNS_6OutRecEb($outRec, $UseFullInt64Range) {
 $outRec = $outRec | 0;
 $UseFullInt64Range = $UseFullInt64Range | 0;
 var $tmp = 0, $ref_tmp3 = 0, $tmp5 = 0, $ref_tmp6 = 0, $tmp7 = 0, $ref_tmp10 = 0, $pts = 0, $0 = 0, $lo_i_i21 = 0, $hi_i_i22 = 0, $lo_i_i29 = 0, $hi_i_i30 = 0, $lo_i_i26 = 0, $hi_i_i27 = 0, $lo_i_i23 = 0, $hi_i_i24 = 0, $hi2_i_i_i = 0, $lo3_i_i_i = 0, $hi2_i_i_i_i = 0, $lo3_i_i_i_i = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $op_0 = 0, $prev = 0, $X = 0, $4$1 = 0, $Y = 0, $5$1 = 0, $X9 = 0, $6$1 = 0, $Y13 = 0, $8$1 = 0, $9$0 = 0, $9$1 = 0, $10$0 = 0, $10$1 = 0, $11$0 = 0, $11$1 = 0, $12$0 = 0, $12$1 = 0, $sub_i_i_i$0 = 0, $sub6_i_i_i$0 = 0, $13$0 = 0, $13$1 = 0, $14$0 = 0, $14$1 = 0, $uadd_i_i$0 = 0, $inc_i_i_i$0 = 0, $uadd$0 = 0, $inc_i$0 = 0, $add_i_i_i$0 = 0, $ref_tmp_sroa_0_0_load35$0 = 0, $add_i17$0 = 0, $$etemp$36$1 = 0, $sub_i$0 = 0, $retval_0_i = 0.0, $op_1 = 0, $a17_0 = 0.0, $20 = 0, $X21 = 0, $Y23 = 0, $mul$0 = 0, $mul$1 = 0, $X25 = 0, $Y28 = 0, $mul29$0 = 0, $sub$0 = 0, $retval_0 = 0.0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $tmp = __stackBase__ | 0;
 $ref_tmp3 = __stackBase__ + 16 | 0;
 $tmp5 = __stackBase__ + 32 | 0;
 $ref_tmp6 = __stackBase__ + 48 | 0;
 $tmp7 = __stackBase__ + 64 | 0;
 $ref_tmp10 = __stackBase__ + 80 | 0;
 $pts = $outRec + 16 | 0;
 $0 = HEAP32[$pts >> 2] | 0;
 if (($0 | 0) == 0) {
  $retval_0 = 0.0;
  STACKTOP = __stackBase__;
  return +$retval_0;
 }
 if (!$UseFullInt64Range) {
  $a17_0 = 0.0;
  $op_1 = $0;
  do {
   $20 = HEAP32[$op_1 + 28 >> 2] | 0;
   $X21 = $20 + 8 | 0;
   $Y23 = $op_1 + 16 | 0;
   $mul$0 = ___muldi3(HEAP32[$Y23 >> 2] | 0, HEAP32[$Y23 + 4 >> 2] | 0, HEAP32[$X21 >> 2] | 0, HEAP32[$X21 + 4 >> 2] | 0) | 0;
   $mul$1 = tempRet0;
   $X25 = $op_1 + 8 | 0;
   $Y28 = $20 + 16 | 0;
   $mul29$0 = ___muldi3(HEAP32[$Y28 >> 2] | 0, HEAP32[$Y28 + 4 >> 2] | 0, HEAP32[$X25 >> 2] | 0, HEAP32[$X25 + 4 >> 2] | 0) | 0;
   $sub$0 = _i64Subtract($mul$0, $mul$1, $mul29$0, tempRet0) | 0;
   $a17_0 = $a17_0 + (+($sub$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0);
   $op_1 = HEAP32[$op_1 + 24 >> 2] | 0;
  } while (($op_1 | 0) != ($0 | 0));
  $retval_0 = $a17_0 * .5;
  STACKTOP = __stackBase__;
  return +$retval_0;
 }
 $lo_i_i21 = $tmp + 8 | 0;
 $hi_i_i22 = $tmp | 0;
 $lo_i_i29 = $ref_tmp3 + 8 | 0;
 $hi_i_i30 = $ref_tmp3 | 0;
 $lo_i_i26 = $tmp7 + 8 | 0;
 $hi_i_i27 = $tmp7 | 0;
 $lo_i_i23 = $ref_tmp10 + 8 | 0;
 $hi_i_i24 = $ref_tmp10 | 0;
 $hi2_i_i_i = $tmp5 | 0;
 $lo3_i_i_i = $tmp5 + 8 | 0;
 $hi2_i_i_i_i = $ref_tmp6 | 0;
 $lo3_i_i_i_i = $ref_tmp6 + 8 | 0;
 $op_0 = $0;
 $2$1 = 0;
 $2$0 = 0;
 $1$1 = 0;
 $1$0 = 0;
 do {
  $prev = $op_0 + 28 | 0;
  $X = (HEAP32[$prev >> 2] | 0) + 8 | 0;
  $4$1 = HEAP32[$X + 4 >> 2] | 0;
  HEAP32[$lo_i_i21 >> 2] = HEAP32[$X >> 2];
  HEAP32[$lo_i_i21 + 4 >> 2] = $4$1;
  HEAP32[$hi_i_i22 >> 2] = $4$1 >> 31 | (($4$1 | 0) < 0 ? -1 : 0) << 1;
  HEAP32[$hi_i_i22 + 4 >> 2] = (($4$1 | 0) < 0 ? -1 : 0) >> 31 | (($4$1 | 0) < 0 ? -1 : 0) << 1;
  $Y = $op_0 + 16 | 0;
  $5$1 = HEAP32[$Y + 4 >> 2] | 0;
  HEAP32[$lo_i_i29 >> 2] = HEAP32[$Y >> 2];
  HEAP32[$lo_i_i29 + 4 >> 2] = $5$1;
  HEAP32[$hi_i_i30 >> 2] = $5$1 >> 31 | (($5$1 | 0) < 0 ? -1 : 0) << 1;
  HEAP32[$hi_i_i30 + 4 >> 2] = (($5$1 | 0) < 0 ? -1 : 0) >> 31 | (($5$1 | 0) < 0 ? -1 : 0) << 1;
  __ZNK10ClipperLib6Int128mlERKS0_($tmp5, $tmp, $ref_tmp3);
  $X9 = $op_0 + 8 | 0;
  $6$1 = HEAP32[$X9 + 4 >> 2] | 0;
  HEAP32[$lo_i_i26 >> 2] = HEAP32[$X9 >> 2];
  HEAP32[$lo_i_i26 + 4 >> 2] = $6$1;
  HEAP32[$hi_i_i27 >> 2] = $6$1 >> 31 | (($6$1 | 0) < 0 ? -1 : 0) << 1;
  HEAP32[$hi_i_i27 + 4 >> 2] = (($6$1 | 0) < 0 ? -1 : 0) >> 31 | (($6$1 | 0) < 0 ? -1 : 0) << 1;
  $Y13 = (HEAP32[$prev >> 2] | 0) + 16 | 0;
  $8$1 = HEAP32[$Y13 + 4 >> 2] | 0;
  HEAP32[$lo_i_i23 >> 2] = HEAP32[$Y13 >> 2];
  HEAP32[$lo_i_i23 + 4 >> 2] = $8$1;
  HEAP32[$hi_i_i24 >> 2] = $8$1 >> 31 | (($8$1 | 0) < 0 ? -1 : 0) << 1;
  HEAP32[$hi_i_i24 + 4 >> 2] = (($8$1 | 0) < 0 ? -1 : 0) >> 31 | (($8$1 | 0) < 0 ? -1 : 0) << 1;
  __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp6, $tmp7, $ref_tmp10);
  $9$0 = HEAP32[$hi2_i_i_i >> 2] | 0;
  $9$1 = HEAP32[$hi2_i_i_i + 4 >> 2] | 0;
  $10$0 = HEAP32[$lo3_i_i_i >> 2] | 0;
  $10$1 = HEAP32[$lo3_i_i_i + 4 >> 2] | 0;
  $11$0 = HEAP32[$hi2_i_i_i_i >> 2] | 0;
  $11$1 = HEAP32[$hi2_i_i_i_i + 4 >> 2] | 0;
  $12$0 = HEAP32[$lo3_i_i_i_i >> 2] | 0;
  $12$1 = HEAP32[$lo3_i_i_i_i + 4 >> 2] | 0;
  if (($12$0 | 0) == 0 & ($12$1 | 0) == 0) {
   $sub_i_i_i$0 = _i64Subtract(0, 0, $11$0, $11$1) | 0;
   $14$1 = tempRet0;
   $14$0 = $sub_i_i_i$0;
   $13$1 = 0;
   $13$0 = 0;
  } else {
   $sub6_i_i_i$0 = _i64Subtract(0, 0, $12$0, $12$1) | 0;
   $14$1 = $11$1 ^ -1;
   $14$0 = $11$0 ^ -1;
   $13$1 = tempRet0;
   $13$0 = $sub6_i_i_i$0;
  }
  $uadd_i_i$0 = _llvm_uadd_with_overflow_i64($10$0 | 0, $10$1 | 0, $13$0 | 0, $13$1 | 0) | 0;
  $inc_i_i_i$0 = tempRet1 & 1;
  $uadd$0 = _llvm_uadd_with_overflow_i64($1$0 | 0, $1$1 | 0, $uadd_i_i$0 | 0, tempRet0 | 0) | 0;
  $1$0 = $uadd$0;
  $1$1 = tempRet0;
  $inc_i$0 = tempRet1 & 1;
  $add_i_i_i$0 = _i64Add($9$0, $9$1, $2$0, $2$1) | 0;
  $ref_tmp_sroa_0_0_load35$0 = _i64Add($add_i_i_i$0, tempRet0, $14$0, $14$1) | 0;
  $add_i17$0 = _i64Add($ref_tmp_sroa_0_0_load35$0, tempRet0, $inc_i_i_i$0, 0) | 0;
  $2$0 = _i64Add($add_i17$0, tempRet0, $inc_i$0, 0) | 0;
  $2$1 = tempRet0;
  $op_0 = HEAP32[$op_0 + 24 >> 2] | 0;
 } while (($op_0 | 0) != (HEAP32[$pts >> 2] | 0));
 $$etemp$36$1 = 0;
 do {
  if (($2$1 | 0) < ($$etemp$36$1 | 0) | ($2$1 | 0) == ($$etemp$36$1 | 0) & $2$0 >>> 0 < 0 >>> 0) {
   if (($1$0 | 0) == 0 & ($1$1 | 0) == 0) {
    $retval_0_i = (+($2$0 >>> 0) + +($2$1 | 0) * 4294967296.0) * 18446744073709552000.0;
    break;
   } else {
    $sub_i$0 = _i64Subtract(0, 0, $1$0, $1$1) | 0;
    $retval_0_i = -0.0 - (+($sub_i$0 >>> 0) + +(tempRet0 >>> 0) * 4294967296.0 + (+(($2$0 ^ -1) >>> 0) + +($2$1 ^ -1 | 0) * 4294967296.0) * 18446744073709552000.0);
    break;
   }
  } else {
   $retval_0_i = +($1$0 >>> 0) + +($1$1 >>> 0) * 4294967296.0 + (+($2$0 >>> 0) + +($2$1 | 0) * 4294967296.0) * 18446744073709552000.0;
  }
 } while (0);
 $retval_0 = $retval_0_i * .5;
 STACKTOP = __stackBase__;
 return +$retval_0;
}
function __ZN10ClipperLib14PointInPolygonERKNS_8IntPointEPNS_5OutPtEb($pt, $pp, $UseFullInt64Range) {
 $pt = $pt | 0;
 $pp = $pp | 0;
 $UseFullInt64Range = $UseFullInt64Range | 0;
 var $ref_tmp = 0, $tmp20 = 0, $ref_tmp27 = 0, $tmp32 = 0, $ref_tmp33 = 0, $Y2 = 0, $0$0 = 0, $0$1 = 0, $X67 = 0, $X = 0, $lo_i_i45 = 0, $hi_i_i46 = 0, $lo_i_i51 = 0, $hi_i_i52 = 0, $lo_i_i48 = 0, $hi_i_i49 = 0, $hi2_i = 0, $lo6_i = 0, $pp2_0 = 0, $result_0 = 0, $Y = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $cmp = 0, $_pre = 0, $Y9_phi_trans_insert = 0, $_pre55$0 = 0, $_pre55$1 = 0, $X19 = 0, $4$0 = 0, $4$1 = 0, $sub$0 = 0, $sub$1 = 0, $_lo_lobit_i_i$0 = 0, $_lo_lobit_i_i$1 = 0, $X23 = 0, $sub26$0 = 0, $sub26$1 = 0, $sub31$0 = 0, $sub31$1 = 0, $Y36 = 0, $sub39$0 = 0, $sub39$1 = 0, $9$0 = 0, $9$1 = 0, $10$1 = 0, $result_1 = 0, $13 = 0, $pp2_1 = 0, $result_2_off0 = 0, $Y46 = 0, $14$0 = 0, $14$1 = 0, $cmp48 = 0, $_pre56 = 0, $Y58_phi_trans_insert = 0, $_pre57$0 = 0, $_pre57$1 = 0, $15$0 = 0, $15$1 = 0, $X70 = 0, $X72 = 0, $17$0 = 0, $17$1 = 0, $sub73$0 = 0, $sub73$1 = 0, $sub77$0 = 0, $mul$0 = 0, $mul$1 = 0, $sub83$0 = 0, $div$0 = 0, $add$0 = 0, $add$1 = 0, $result_3_off0 = 0, $18 = 0, $result_4_off0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $ref_tmp = __stackBase__ | 0;
 $tmp20 = __stackBase__ + 16 | 0;
 $ref_tmp27 = __stackBase__ + 32 | 0;
 $tmp32 = __stackBase__ + 48 | 0;
 $ref_tmp33 = __stackBase__ + 64 | 0;
 $Y2 = $pt + 8 | 0;
 if (!$UseFullInt64Range) {
  $0$0 = HEAP32[$Y2 >> 2] | 0;
  $0$1 = HEAP32[$Y2 + 4 >> 2] | 0;
  $X67 = $pt | 0;
  $result_2_off0 = 0;
  $pp2_1 = $pp;
  while (1) {
   $Y46 = $pp2_1 + 16 | 0;
   $14$0 = HEAP32[$Y46 >> 2] | 0;
   $14$1 = HEAP32[$Y46 + 4 >> 2] | 0;
   $cmp48 = ($14$1 | 0) > ($0$1 | 0) | ($14$1 | 0) == ($0$1 | 0) & $14$0 >>> 0 > $0$0 >>> 0;
   $_pre56 = HEAP32[$pp2_1 + 28 >> 2] | 0;
   $Y58_phi_trans_insert = $_pre56 + 16 | 0;
   $_pre57$0 = HEAP32[$Y58_phi_trans_insert >> 2] | 0;
   $_pre57$1 = HEAP32[$Y58_phi_trans_insert + 4 >> 2] | 0;
   if ((($0$1 | 0) < ($_pre57$1 | 0) | ($0$1 | 0) == ($_pre57$1 | 0) & $0$0 >>> 0 < $_pre57$0 >>> 0) & ($cmp48 ^ 1)) {
    label = 4751;
   } else {
    if (($_pre57$1 | 0) > ($0$1 | 0) | ($_pre57$1 | 0) == ($0$1 | 0) & $_pre57$0 >>> 0 > $0$0 >>> 0 | $cmp48 ^ 1) {
     $result_3_off0 = $result_2_off0;
    } else {
     label = 4751;
    }
   }
   if ((label | 0) == 4751) {
    label = 0;
    $15$0 = HEAP32[$X67 >> 2] | 0;
    $15$1 = HEAP32[$X67 + 4 >> 2] | 0;
    $X70 = $_pre56 + 8 | 0;
    $X72 = $pp2_1 + 8 | 0;
    $17$0 = HEAP32[$X72 >> 2] | 0;
    $17$1 = HEAP32[$X72 + 4 >> 2] | 0;
    $sub73$0 = _i64Subtract(HEAP32[$X70 >> 2] | 0, HEAP32[$X70 + 4 >> 2] | 0, $17$0, $17$1) | 0;
    $sub73$1 = tempRet0;
    $sub77$0 = _i64Subtract($0$0, $0$1, $14$0, $14$1) | 0;
    $mul$0 = ___muldi3($sub77$0, tempRet0, $sub73$0, $sub73$1) | 0;
    $mul$1 = tempRet0;
    $sub83$0 = _i64Subtract($_pre57$0, $_pre57$1, $14$0, $14$1) | 0;
    $div$0 = ___divdi3($mul$0, $mul$1, $sub83$0, tempRet0) | 0;
    $add$0 = _i64Add($div$0, tempRet0, $17$0, $17$1) | 0;
    $add$1 = tempRet0;
    $result_3_off0 = $result_2_off0 ^ (($15$1 | 0) < ($add$1 | 0) | ($15$1 | 0) == ($add$1 | 0) & $15$0 >>> 0 < $add$0 >>> 0);
   }
   $18 = HEAP32[$pp2_1 + 24 >> 2] | 0;
   if (($18 | 0) == ($pp | 0)) {
    $result_4_off0 = $result_3_off0;
    break;
   } else {
    $result_2_off0 = $result_3_off0;
    $pp2_1 = $18;
   }
  }
  STACKTOP = __stackBase__;
  return $result_4_off0 | 0;
 }
 $X = $pt | 0;
 $lo_i_i45 = $tmp20 + 8 | 0;
 $hi_i_i46 = $tmp20 | 0;
 $lo_i_i51 = $ref_tmp27 + 8 | 0;
 $hi_i_i52 = $ref_tmp27 | 0;
 $lo_i_i48 = $ref_tmp33 + 8 | 0;
 $hi_i_i49 = $ref_tmp33 | 0;
 $hi2_i = $ref_tmp | 0;
 $lo6_i = $ref_tmp + 8 | 0;
 $result_0 = 0;
 $pp2_0 = $pp;
 while (1) {
  $Y = $pp2_0 + 16 | 0;
  $1$0 = HEAP32[$Y >> 2] | 0;
  $1$1 = HEAP32[$Y + 4 >> 2] | 0;
  $2$0 = HEAP32[$Y2 >> 2] | 0;
  $2$1 = HEAP32[$Y2 + 4 >> 2] | 0;
  $cmp = ($1$1 | 0) > ($2$1 | 0) | ($1$1 | 0) == ($2$1 | 0) & $1$0 >>> 0 > $2$0 >>> 0;
  $_pre = HEAP32[$pp2_0 + 28 >> 2] | 0;
  $Y9_phi_trans_insert = $_pre + 16 | 0;
  $_pre55$0 = HEAP32[$Y9_phi_trans_insert >> 2] | 0;
  $_pre55$1 = HEAP32[$Y9_phi_trans_insert + 4 >> 2] | 0;
  if ((($2$1 | 0) < ($_pre55$1 | 0) | ($2$1 | 0) == ($_pre55$1 | 0) & $2$0 >>> 0 < $_pre55$0 >>> 0) & ($cmp ^ 1)) {
   label = 4744;
  } else {
   if (($_pre55$1 | 0) > ($2$1 | 0) | ($_pre55$1 | 0) == ($2$1 | 0) & $_pre55$0 >>> 0 > $2$0 >>> 0 | $cmp ^ 1) {
    $result_1 = $result_0;
   } else {
    label = 4744;
   }
  }
  do {
   if ((label | 0) == 4744) {
    label = 0;
    $X19 = $pp2_0 + 8 | 0;
    $4$0 = HEAP32[$X19 >> 2] | 0;
    $4$1 = HEAP32[$X19 + 4 >> 2] | 0;
    $sub$0 = _i64Subtract(HEAP32[$X >> 2] | 0, HEAP32[$X + 4 >> 2] | 0, $4$0, $4$1) | 0;
    $sub$1 = tempRet0;
    $_lo_lobit_i_i$0 = $sub$1 >> 31 | (($sub$1 | 0) < 0 ? -1 : 0) << 1;
    $_lo_lobit_i_i$1 = (($sub$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub$1 | 0) < 0 ? -1 : 0) << 1;
    $X23 = $_pre + 8 | 0;
    $sub26$0 = _i64Subtract(HEAP32[$X23 >> 2] | 0, HEAP32[$X23 + 4 >> 2] | 0, $4$0, $4$1) | 0;
    $sub26$1 = tempRet0;
    HEAP32[$lo_i_i45 >> 2] = $sub26$0;
    HEAP32[$lo_i_i45 + 4 >> 2] = $sub26$1;
    HEAP32[$hi_i_i46 >> 2] = $sub26$1 >> 31 | (($sub26$1 | 0) < 0 ? -1 : 0) << 1;
    HEAP32[$hi_i_i46 + 4 >> 2] = (($sub26$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub26$1 | 0) < 0 ? -1 : 0) << 1;
    $sub31$0 = _i64Subtract($2$0, $2$1, $1$0, $1$1) | 0;
    $sub31$1 = tempRet0;
    HEAP32[$lo_i_i51 >> 2] = $sub31$0;
    HEAP32[$lo_i_i51 + 4 >> 2] = $sub31$1;
    HEAP32[$hi_i_i52 >> 2] = $sub31$1 >> 31 | (($sub31$1 | 0) < 0 ? -1 : 0) << 1;
    HEAP32[$hi_i_i52 + 4 >> 2] = (($sub31$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub31$1 | 0) < 0 ? -1 : 0) << 1;
    __ZNK10ClipperLib6Int128mlERKS0_($tmp32, $tmp20, $ref_tmp27);
    $Y36 = (HEAP32[$pp2_0 + 28 >> 2] | 0) + 16 | 0;
    $sub39$0 = _i64Subtract(HEAP32[$Y36 >> 2] | 0, HEAP32[$Y36 + 4 >> 2] | 0, HEAP32[$Y >> 2] | 0, HEAP32[$Y + 4 >> 2] | 0) | 0;
    $sub39$1 = tempRet0;
    HEAP32[$lo_i_i48 >> 2] = $sub39$0;
    HEAP32[$lo_i_i48 + 4 >> 2] = $sub39$1;
    HEAP32[$hi_i_i49 >> 2] = $sub39$1 >> 31 | (($sub39$1 | 0) < 0 ? -1 : 0) << 1;
    HEAP32[$hi_i_i49 + 4 >> 2] = (($sub39$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub39$1 | 0) < 0 ? -1 : 0) << 1;
    __ZNK10ClipperLib6Int128dvERKS0_($ref_tmp, $tmp32, $ref_tmp33);
    $9$0 = HEAP32[$hi2_i >> 2] | 0;
    $9$1 = HEAP32[$hi2_i + 4 >> 2] | 0;
    if (($_lo_lobit_i_i$0 | 0) == ($9$0 | 0) & ($_lo_lobit_i_i$1 | 0) == ($9$1 | 0)) {
     $10$1 = HEAP32[$lo6_i + 4 >> 2] | 0;
     if (!($sub$1 >>> 0 < $10$1 >>> 0 | $sub$1 >>> 0 == $10$1 >>> 0 & $sub$0 >>> 0 < (HEAP32[$lo6_i >> 2] | 0) >>> 0)) {
      $result_1 = $result_0;
      break;
     }
    } else {
     if (!(($_lo_lobit_i_i$1 | 0) < ($9$1 | 0) | ($_lo_lobit_i_i$1 | 0) == ($9$1 | 0) & $_lo_lobit_i_i$0 >>> 0 < $9$0 >>> 0)) {
      $result_1 = $result_0;
      break;
     }
    }
    $result_1 = $result_0 & 1 ^ 1;
   }
  } while (0);
  $13 = HEAP32[$pp2_0 + 24 >> 2] | 0;
  if (($13 | 0) == ($pp | 0)) {
   break;
  } else {
   $result_0 = $result_1;
   $pp2_0 = $13;
  }
 }
 $result_4_off0 = ($result_1 & 1) != 0;
 STACKTOP = __stackBase__;
 return $result_4_off0 | 0;
}
function __ZN10ClipperLib4AreaERKNSt3__16vectorINS_8IntPointENS0_9allocatorIS2_EEEE($poly) {
 $poly = $poly | 0;
 var $tmp = 0, $ref_tmp4 = 0, $tmp6 = 0, $ref_tmp7 = 0, $tmp8 = 0, $ref_tmp11 = 0, $tmp17 = 0, $ref_tmp20 = 0, $tmp23 = 0, $ref_tmp24 = 0, $tmp25 = 0, $ref_tmp29 = 0, $0 = 0, $__begin__i = 0, $1 = 0, $sub_ptr_div_i = 0, $sub = 0, $i_027_i = 0, $result_0_off026_i = 0, $X_i = 0, $2$0 = 0, $2$1 = 0, $$etemp$2$1 = 0, $cmp_i_i = 0, $sub_i_i$0 = 0, $cond_i_i$0 = 0, $cond_i_i$1 = 0, $$etemp$4$1 = 0, $Y_i = 0, $3$0 = 0, $3$1 = 0, $$etemp$7$1 = 0, $cmp_i17_i = 0, $sub_i18_i$0 = 0, $cond_i19_i$0 = 0, $cond_i19_i$1 = 0, $$etemp$9$1 = 0, $exception_i = 0, $4 = 0, $$etemp$10$1 = 0, $$etemp$11$1 = 0, $_result_0_off0_i = 0, $inc_i = 0, $X = 0, $5$1 = 0, $lo_i_i35 = 0, $hi_i_i36 = 0, $Y = 0, $6$1 = 0, $lo_i_i46 = 0, $hi_i_i47 = 0, $7 = 0, $X10 = 0, $8$1 = 0, $lo_i_i55 = 0, $hi_i_i56 = 0, $Y13 = 0, $9$1 = 0, $lo_i_i83 = 0, $hi_i_i84 = 0, $hi2_i_i_i65 = 0, $10$0 = 0, $10$1 = 0, $lo3_i_i_i67 = 0, $11$0 = 0, $11$1 = 0, $hi2_i_i_i_i68 = 0, $12$0 = 0, $12$1 = 0, $lo3_i_i_i_i69 = 0, $13$0 = 0, $13$1 = 0, $sub_i_i_i71$0 = 0, $sub6_i_i_i73$0 = 0, $14$0 = 0, $14$1 = 0, $15$0 = 0, $15$1 = 0, $add_i_i_i76$0 = 0, $add_i_i_i76$1 = 0, $uadd_i_i77$0 = 0, $16$0 = 0, $16$1 = 0, $_ph$0 = 0, $_ph$1 = 0, $lo_i_i61 = 0, $hi_i_i62 = 0, $lo_i_i58 = 0, $hi_i_i59 = 0, $lo_i_i52 = 0, $hi_i_i53 = 0, $lo_i_i49 = 0, $hi_i_i50 = 0, $hi2_i_i_i = 0, $lo3_i_i_i = 0, $hi2_i_i_i_i = 0, $lo3_i_i_i_i = 0, $i_097 = 0, $17$0 = 0, $17$1 = 0, $18$0 = 0, $18$1 = 0, $19 = 0, $X19 = 0, $20$1 = 0, $add = 0, $Y22 = 0, $21$1 = 0, $22 = 0, $X28 = 0, $23$1 = 0, $Y31 = 0, $24$1 = 0, $25$0 = 0, $25$1 = 0, $26$0 = 0, $26$1 = 0, $27$0 = 0, $27$1 = 0, $28$0 = 0, $28$1 = 0, $sub_i_i_i$0 = 0, $sub6_i_i_i$0 = 0, $29$0 = 0, $29$1 = 0, $30$0 = 0, $30$1 = 0, $uadd_i_i$0 = 0, $31$1 = 0, $inc_i_i_i$0 = 0, $add_i_i_i$0 = 0, $ref_tmp16_sroa_0_0_load90$0 = 0, $add_i41$0 = 0, $add_i41$1 = 0, $uadd$0 = 0, $32$0 = 0, $32$1 = 0, $_be$0 = 0, $_be$1 = 0, $_lcssa95$0 = 0, $_lcssa95$1 = 0, $_lcssa$0 = 0, $_lcssa$1 = 0, $$etemp$84$1 = 0, $sub_i$0 = 0, $retval_0_i = 0.0, $X37 = 0, $Y39 = 0, $34$0 = 0, $34$1 = 0, $X42 = 0, $35$0 = 0, $35$1 = 0, $Y45 = 0, $sub48 = 0.0, $37$0 = 0, $37$1 = 0, $38$0 = 0, $38$1 = 0, $i50_094 = 0, $a35_093 = 0.0, $add57 = 0, $Y59 = 0, $39$0 = 0, $39$1 = 0, $X64 = 0, $40$0 = 0, $40$1 = 0, $add71 = 0.0, $a35_0_lcssa = 0.0, $retval_0 = 0.0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $tmp = __stackBase__ | 0;
 $ref_tmp4 = __stackBase__ + 16 | 0;
 $tmp6 = __stackBase__ + 32 | 0;
 $ref_tmp7 = __stackBase__ + 48 | 0;
 $tmp8 = __stackBase__ + 64 | 0;
 $ref_tmp11 = __stackBase__ + 80 | 0;
 $tmp17 = __stackBase__ + 96 | 0;
 $ref_tmp20 = __stackBase__ + 112 | 0;
 $tmp23 = __stackBase__ + 128 | 0;
 $ref_tmp24 = __stackBase__ + 144 | 0;
 $tmp25 = __stackBase__ + 160 | 0;
 $ref_tmp29 = __stackBase__ + 176 | 0;
 $0 = HEAP32[$poly + 4 >> 2] | 0;
 $__begin__i = $poly | 0;
 $1 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = $0 - $1 >> 4;
 $sub = $sub_ptr_div_i - 1 | 0;
 if (($sub | 0) < 2) {
  $retval_0 = 0.0;
  STACKTOP = __stackBase__;
  return +$retval_0;
 }
 do {
  if (($0 | 0) != ($1 | 0)) {
   $result_0_off026_i = 0;
   $i_027_i = 0;
   while (1) {
    $X_i = $1 + ($i_027_i << 4) | 0;
    $2$0 = HEAP32[$X_i >> 2] | 0;
    $2$1 = HEAP32[$X_i + 4 >> 2] | 0;
    $$etemp$2$1 = 0;
    $cmp_i_i = ($2$1 | 0) < ($$etemp$2$1 | 0) | ($2$1 | 0) == ($$etemp$2$1 | 0) & $2$0 >>> 0 < 0 >>> 0;
    $sub_i_i$0 = _i64Subtract(0, 0, $2$0, $2$1) | 0;
    $cond_i_i$0 = $cmp_i_i ? $sub_i_i$0 : $2$0;
    $cond_i_i$1 = $cmp_i_i ? tempRet0 : $2$1;
    $$etemp$4$1 = 1073741823;
    if (($cond_i_i$1 | 0) > ($$etemp$4$1 | 0) | ($cond_i_i$1 | 0) == ($$etemp$4$1 | 0) & $cond_i_i$0 >>> 0 > -1 >>> 0) {
     label = 4787;
     break;
    }
    $Y_i = $1 + ($i_027_i << 4) + 8 | 0;
    $3$0 = HEAP32[$Y_i >> 2] | 0;
    $3$1 = HEAP32[$Y_i + 4 >> 2] | 0;
    $$etemp$7$1 = 0;
    $cmp_i17_i = ($3$1 | 0) < ($$etemp$7$1 | 0) | ($3$1 | 0) == ($$etemp$7$1 | 0) & $3$0 >>> 0 < 0 >>> 0;
    $sub_i18_i$0 = _i64Subtract(0, 0, $3$0, $3$1) | 0;
    $cond_i19_i$0 = $cmp_i17_i ? $sub_i18_i$0 : $3$0;
    $cond_i19_i$1 = $cmp_i17_i ? tempRet0 : $3$1;
    $$etemp$9$1 = 1073741823;
    if (($cond_i19_i$1 | 0) > ($$etemp$9$1 | 0) | ($cond_i19_i$1 | 0) == ($$etemp$9$1 | 0) & $cond_i19_i$0 >>> 0 > -1 >>> 0) {
     label = 4786;
     break;
    }
    $$etemp$10$1 = 0;
    $$etemp$11$1 = 0;
    $_result_0_off0_i = ($cond_i_i$1 | 0) > ($$etemp$10$1 | 0) | ($cond_i_i$1 | 0) == ($$etemp$10$1 | 0) & $cond_i_i$0 >>> 0 > 1073741823 >>> 0 | (($cond_i19_i$1 | 0) > ($$etemp$11$1 | 0) | ($cond_i19_i$1 | 0) == ($$etemp$11$1 | 0) & $cond_i19_i$0 >>> 0 > 1073741823 >>> 0) | $result_0_off026_i;
    $inc_i = $i_027_i + 1 | 0;
    if ($inc_i >>> 0 < $sub_ptr_div_i >>> 0) {
     $result_0_off026_i = $_result_0_off0_i;
     $i_027_i = $inc_i;
    } else {
     label = 4763;
     break;
    }
   }
   if ((label | 0) == 4763) {
    if (!$_result_0_off0_i) {
     break;
    }
    $X = $1 + ($sub << 4) | 0;
    $5$1 = HEAP32[$X + 4 >> 2] | 0;
    $lo_i_i35 = $tmp + 8 | 0;
    HEAP32[$lo_i_i35 >> 2] = HEAP32[$X >> 2];
    HEAP32[$lo_i_i35 + 4 >> 2] = $5$1;
    $hi_i_i36 = $tmp | 0;
    HEAP32[$hi_i_i36 >> 2] = $5$1 >> 31 | (($5$1 | 0) < 0 ? -1 : 0) << 1;
    HEAP32[$hi_i_i36 + 4 >> 2] = (($5$1 | 0) < 0 ? -1 : 0) >> 31 | (($5$1 | 0) < 0 ? -1 : 0) << 1;
    $Y = $1 + 8 | 0;
    $6$1 = HEAP32[$Y + 4 >> 2] | 0;
    $lo_i_i46 = $ref_tmp4 + 8 | 0;
    HEAP32[$lo_i_i46 >> 2] = HEAP32[$Y >> 2];
    HEAP32[$lo_i_i46 + 4 >> 2] = $6$1;
    $hi_i_i47 = $ref_tmp4 | 0;
    HEAP32[$hi_i_i47 >> 2] = $6$1 >> 31 | (($6$1 | 0) < 0 ? -1 : 0) << 1;
    HEAP32[$hi_i_i47 + 4 >> 2] = (($6$1 | 0) < 0 ? -1 : 0) >> 31 | (($6$1 | 0) < 0 ? -1 : 0) << 1;
    __ZNK10ClipperLib6Int128mlERKS0_($tmp6, $tmp, $ref_tmp4);
    $7 = HEAP32[$__begin__i >> 2] | 0;
    $X10 = $7 | 0;
    $8$1 = HEAP32[$X10 + 4 >> 2] | 0;
    $lo_i_i55 = $tmp8 + 8 | 0;
    HEAP32[$lo_i_i55 >> 2] = HEAP32[$X10 >> 2];
    HEAP32[$lo_i_i55 + 4 >> 2] = $8$1;
    $hi_i_i56 = $tmp8 | 0;
    HEAP32[$hi_i_i56 >> 2] = $8$1 >> 31 | (($8$1 | 0) < 0 ? -1 : 0) << 1;
    HEAP32[$hi_i_i56 + 4 >> 2] = (($8$1 | 0) < 0 ? -1 : 0) >> 31 | (($8$1 | 0) < 0 ? -1 : 0) << 1;
    $Y13 = $7 + ($sub << 4) + 8 | 0;
    $9$1 = HEAP32[$Y13 + 4 >> 2] | 0;
    $lo_i_i83 = $ref_tmp11 + 8 | 0;
    HEAP32[$lo_i_i83 >> 2] = HEAP32[$Y13 >> 2];
    HEAP32[$lo_i_i83 + 4 >> 2] = $9$1;
    $hi_i_i84 = $ref_tmp11 | 0;
    HEAP32[$hi_i_i84 >> 2] = $9$1 >> 31 | (($9$1 | 0) < 0 ? -1 : 0) << 1;
    HEAP32[$hi_i_i84 + 4 >> 2] = (($9$1 | 0) < 0 ? -1 : 0) >> 31 | (($9$1 | 0) < 0 ? -1 : 0) << 1;
    __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp7, $tmp8, $ref_tmp11);
    $hi2_i_i_i65 = $tmp6 | 0;
    $10$0 = HEAP32[$hi2_i_i_i65 >> 2] | 0;
    $10$1 = HEAP32[$hi2_i_i_i65 + 4 >> 2] | 0;
    $lo3_i_i_i67 = $tmp6 + 8 | 0;
    $11$0 = HEAP32[$lo3_i_i_i67 >> 2] | 0;
    $11$1 = HEAP32[$lo3_i_i_i67 + 4 >> 2] | 0;
    $hi2_i_i_i_i68 = $ref_tmp7 | 0;
    $12$0 = HEAP32[$hi2_i_i_i_i68 >> 2] | 0;
    $12$1 = HEAP32[$hi2_i_i_i_i68 + 4 >> 2] | 0;
    $lo3_i_i_i_i69 = $ref_tmp7 + 8 | 0;
    $13$0 = HEAP32[$lo3_i_i_i_i69 >> 2] | 0;
    $13$1 = HEAP32[$lo3_i_i_i_i69 + 4 >> 2] | 0;
    if (($13$0 | 0) == 0 & ($13$1 | 0) == 0) {
     $sub_i_i_i71$0 = _i64Subtract(0, 0, $12$0, $12$1) | 0;
     $15$1 = tempRet0;
     $15$0 = $sub_i_i_i71$0;
     $14$1 = 0;
     $14$0 = 0;
    } else {
     $sub6_i_i_i73$0 = _i64Subtract(0, 0, $13$0, $13$1) | 0;
     $15$1 = $12$1 ^ -1;
     $15$0 = $12$0 ^ -1;
     $14$1 = tempRet0;
     $14$0 = $sub6_i_i_i73$0;
    }
    $add_i_i_i76$0 = _i64Add($15$0, $15$1, $10$0, $10$1) | 0;
    $add_i_i_i76$1 = tempRet0;
    $uadd_i_i77$0 = _llvm_uadd_with_overflow_i64($11$0 | 0, $11$1 | 0, $14$0 | 0, $14$1 | 0) | 0;
    $16$0 = $uadd_i_i77$0;
    $16$1 = tempRet0;
    $_ph$0 = _i64Add($add_i_i_i76$0, $add_i_i_i76$1, tempRet1 & 1, 0) | 0;
    $_ph$1 = tempRet0;
    if (($sub | 0) > 0) {
     $lo_i_i61 = $tmp17 + 8 | 0;
     $hi_i_i62 = $tmp17 | 0;
     $lo_i_i58 = $ref_tmp20 + 8 | 0;
     $hi_i_i59 = $ref_tmp20 | 0;
     $lo_i_i52 = $tmp25 + 8 | 0;
     $hi_i_i53 = $tmp25 | 0;
     $lo_i_i49 = $ref_tmp29 + 8 | 0;
     $hi_i_i50 = $ref_tmp29 | 0;
     $hi2_i_i_i = $tmp23 | 0;
     $lo3_i_i_i = $tmp23 + 8 | 0;
     $hi2_i_i_i_i = $ref_tmp24 | 0;
     $lo3_i_i_i_i = $ref_tmp24 + 8 | 0;
     $18$1 = $16$1;
     $18$0 = $16$0;
     $17$1 = $_ph$1;
     $17$0 = $_ph$0;
     $i_097 = 0;
     while (1) {
      $19 = HEAP32[$__begin__i >> 2] | 0;
      $X19 = $19 + ($i_097 << 4) | 0;
      $20$1 = HEAP32[$X19 + 4 >> 2] | 0;
      HEAP32[$lo_i_i61 >> 2] = HEAP32[$X19 >> 2];
      HEAP32[$lo_i_i61 + 4 >> 2] = $20$1;
      HEAP32[$hi_i_i62 >> 2] = $20$1 >> 31 | (($20$1 | 0) < 0 ? -1 : 0) << 1;
      HEAP32[$hi_i_i62 + 4 >> 2] = (($20$1 | 0) < 0 ? -1 : 0) >> 31 | (($20$1 | 0) < 0 ? -1 : 0) << 1;
      $add = $i_097 + 1 | 0;
      $Y22 = $19 + ($add << 4) + 8 | 0;
      $21$1 = HEAP32[$Y22 + 4 >> 2] | 0;
      HEAP32[$lo_i_i58 >> 2] = HEAP32[$Y22 >> 2];
      HEAP32[$lo_i_i58 + 4 >> 2] = $21$1;
      HEAP32[$hi_i_i59 >> 2] = $21$1 >> 31 | (($21$1 | 0) < 0 ? -1 : 0) << 1;
      HEAP32[$hi_i_i59 + 4 >> 2] = (($21$1 | 0) < 0 ? -1 : 0) >> 31 | (($21$1 | 0) < 0 ? -1 : 0) << 1;
      __ZNK10ClipperLib6Int128mlERKS0_($tmp23, $tmp17, $ref_tmp20);
      $22 = HEAP32[$__begin__i >> 2] | 0;
      $X28 = $22 + ($add << 4) | 0;
      $23$1 = HEAP32[$X28 + 4 >> 2] | 0;
      HEAP32[$lo_i_i52 >> 2] = HEAP32[$X28 >> 2];
      HEAP32[$lo_i_i52 + 4 >> 2] = $23$1;
      HEAP32[$hi_i_i53 >> 2] = $23$1 >> 31 | (($23$1 | 0) < 0 ? -1 : 0) << 1;
      HEAP32[$hi_i_i53 + 4 >> 2] = (($23$1 | 0) < 0 ? -1 : 0) >> 31 | (($23$1 | 0) < 0 ? -1 : 0) << 1;
      $Y31 = $22 + ($i_097 << 4) + 8 | 0;
      $24$1 = HEAP32[$Y31 + 4 >> 2] | 0;
      HEAP32[$lo_i_i49 >> 2] = HEAP32[$Y31 >> 2];
      HEAP32[$lo_i_i49 + 4 >> 2] = $24$1;
      HEAP32[$hi_i_i50 >> 2] = $24$1 >> 31 | (($24$1 | 0) < 0 ? -1 : 0) << 1;
      HEAP32[$hi_i_i50 + 4 >> 2] = (($24$1 | 0) < 0 ? -1 : 0) >> 31 | (($24$1 | 0) < 0 ? -1 : 0) << 1;
      __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp24, $tmp25, $ref_tmp29);
      $25$0 = HEAP32[$hi2_i_i_i >> 2] | 0;
      $25$1 = HEAP32[$hi2_i_i_i + 4 >> 2] | 0;
      $26$0 = HEAP32[$lo3_i_i_i >> 2] | 0;
      $26$1 = HEAP32[$lo3_i_i_i + 4 >> 2] | 0;
      $27$0 = HEAP32[$hi2_i_i_i_i >> 2] | 0;
      $27$1 = HEAP32[$hi2_i_i_i_i + 4 >> 2] | 0;
      $28$0 = HEAP32[$lo3_i_i_i_i >> 2] | 0;
      $28$1 = HEAP32[$lo3_i_i_i_i + 4 >> 2] | 0;
      if (($28$0 | 0) == 0 & ($28$1 | 0) == 0) {
       $sub_i_i_i$0 = _i64Subtract(0, 0, $27$0, $27$1) | 0;
       $30$1 = tempRet0;
       $30$0 = $sub_i_i_i$0;
       $29$1 = 0;
       $29$0 = 0;
      } else {
       $sub6_i_i_i$0 = _i64Subtract(0, 0, $28$0, $28$1) | 0;
       $30$1 = $27$1 ^ -1;
       $30$0 = $27$0 ^ -1;
       $29$1 = tempRet0;
       $29$0 = $sub6_i_i_i$0;
      }
      $uadd_i_i$0 = _llvm_uadd_with_overflow_i64($26$0 | 0, $26$1 | 0, $29$0 | 0, $29$1 | 0) | 0;
      $31$1 = tempRet0;
      $inc_i_i_i$0 = tempRet1 & 1;
      $add_i_i_i$0 = _i64Add($25$0, $25$1, $17$0, $17$1) | 0;
      $ref_tmp16_sroa_0_0_load90$0 = _i64Add($add_i_i_i$0, tempRet0, $30$0, $30$1) | 0;
      $add_i41$0 = _i64Add($ref_tmp16_sroa_0_0_load90$0, tempRet0, $inc_i_i_i$0, 0) | 0;
      $add_i41$1 = tempRet0;
      $uadd$0 = _llvm_uadd_with_overflow_i64($18$0 | 0, $18$1 | 0, $uadd_i_i$0 | 0, $31$1 | 0) | 0;
      $32$0 = $uadd$0;
      $32$1 = tempRet0;
      $_be$0 = _i64Add($add_i41$0, $add_i41$1, tempRet1 & 1, 0) | 0;
      $_be$1 = tempRet0;
      if (($add | 0) < ($sub | 0)) {
       $18$1 = $32$1;
       $18$0 = $32$0;
       $17$1 = $_be$1;
       $17$0 = $_be$0;
       $i_097 = $add;
      } else {
       $_lcssa$1 = $32$1;
       $_lcssa$0 = $32$0;
       $_lcssa95$1 = $_be$1;
       $_lcssa95$0 = $_be$0;
       break;
      }
     }
    } else {
     $_lcssa$1 = $16$1;
     $_lcssa$0 = $16$0;
     $_lcssa95$1 = $_ph$1;
     $_lcssa95$0 = $_ph$0;
    }
    $$etemp$84$1 = 0;
    do {
     if (($_lcssa95$1 | 0) < ($$etemp$84$1 | 0) | ($_lcssa95$1 | 0) == ($$etemp$84$1 | 0) & $_lcssa95$0 >>> 0 < 0 >>> 0) {
      if (($_lcssa$0 | 0) == 0 & ($_lcssa$1 | 0) == 0) {
       $retval_0_i = (+($_lcssa95$0 >>> 0) + +($_lcssa95$1 | 0) * 4294967296.0) * 18446744073709552000.0;
       break;
      } else {
       $sub_i$0 = _i64Subtract(0, 0, $_lcssa$0, $_lcssa$1) | 0;
       $retval_0_i = -0.0 - (+($sub_i$0 >>> 0) + +(tempRet0 >>> 0) * 4294967296.0 + (+(($_lcssa95$0 ^ -1) >>> 0) + +($_lcssa95$1 ^ -1 | 0) * 4294967296.0) * 18446744073709552000.0);
       break;
      }
     } else {
      $retval_0_i = +($_lcssa$0 >>> 0) + +($_lcssa$1 >>> 0) * 4294967296.0 + (+($_lcssa95$0 >>> 0) + +($_lcssa95$1 | 0) * 4294967296.0) * 18446744073709552000.0;
     }
    } while (0);
    $retval_0 = $retval_0_i * .5;
    STACKTOP = __stackBase__;
    return +$retval_0;
   } else if ((label | 0) == 4786) {
    $exception_i = ___cxa_allocate_exception(4) | 0;
    $4 = $exception_i;
    HEAP32[$4 >> 2] = 3040;
    ___cxa_throw($exception_i | 0, 15392, 0);
    return 0.0;
   } else if ((label | 0) == 4787) {
    $exception_i = ___cxa_allocate_exception(4) | 0;
    $4 = $exception_i;
    HEAP32[$4 >> 2] = 3040;
    ___cxa_throw($exception_i | 0, 15392, 0);
    return 0.0;
   }
  }
 } while (0);
 $X37 = $1 + ($sub << 4) | 0;
 $Y39 = $1 + 8 | 0;
 $34$0 = HEAP32[$Y39 >> 2] | 0;
 $34$1 = HEAP32[$Y39 + 4 >> 2] | 0;
 $X42 = $1 | 0;
 $35$0 = HEAP32[$X42 >> 2] | 0;
 $35$1 = HEAP32[$X42 + 4 >> 2] | 0;
 $Y45 = $1 + ($sub << 4) + 8 | 0;
 $sub48 = (+((HEAP32[$X37 >> 2] | 0) >>> 0) + +(HEAP32[$X37 + 4 >> 2] | 0) * 4294967296.0) * (+($34$0 >>> 0) + +($34$1 | 0) * 4294967296.0) - (+($35$0 >>> 0) + +($35$1 | 0) * 4294967296.0) * (+((HEAP32[$Y45 >> 2] | 0) >>> 0) + +(HEAP32[$Y45 + 4 >> 2] | 0) * 4294967296.0);
 if (($sub | 0) > 0) {
  $a35_093 = $sub48;
  $i50_094 = 0;
  $38$1 = $35$1;
  $38$0 = $35$0;
  $37$1 = $34$1;
  $37$0 = $34$0;
  while (1) {
   $add57 = $i50_094 + 1 | 0;
   $Y59 = $1 + ($add57 << 4) + 8 | 0;
   $39$0 = HEAP32[$Y59 >> 2] | 0;
   $39$1 = HEAP32[$Y59 + 4 >> 2] | 0;
   $X64 = $1 + ($add57 << 4) | 0;
   $40$0 = HEAP32[$X64 >> 2] | 0;
   $40$1 = HEAP32[$X64 + 4 >> 2] | 0;
   $add71 = $a35_093 + ((+($38$0 >>> 0) + +($38$1 | 0) * 4294967296.0) * (+($39$0 >>> 0) + +($39$1 | 0) * 4294967296.0) - (+($40$0 >>> 0) + +($40$1 | 0) * 4294967296.0) * (+($37$0 >>> 0) + +($37$1 | 0) * 4294967296.0));
   if (($add57 | 0) < ($sub | 0)) {
    $a35_093 = $add71;
    $i50_094 = $add57;
    $38$1 = $40$1;
    $38$0 = $40$0;
    $37$1 = $39$1;
    $37$0 = $39$0;
   } else {
    $a35_0_lcssa = $add71;
    break;
   }
  }
 } else {
  $a35_0_lcssa = $sub48;
 }
 $retval_0 = $a35_0_lcssa * .5;
 STACKTOP = __stackBase__;
 return +$retval_0;
}
function __ZNK10ClipperLib6Int128dvERKS0_($agg_result, $this, $rhs) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $lo = 0, $0$0 = 0, $0$1 = 0, $cmp = 0, $hi = 0, $1$0 = 0, $1$1 = 0, $exception = 0, $hi5 = 0, $6$0 = 0, $6$1 = 0, $cmp8 = 0, $lo3_i_i = 0, $8$0 = 0, $8$1 = 0, $$etemp$10$1 = 0, $sub_i60$0 = 0, $sub6_i62$0 = 0, $result_sroa_1_8_load101123$0 = 0, $result_sroa_1_8_load101123$1 = 0, $result_sroa_0_0_load95117$0 = 0, $result_sroa_0_0_load95117$1 = 0, $$etemp$15$1 = 0, $sub_i48$0 = 0, $sub6_i50$0 = 0, $denom_sroa_1_8_load87113$0 = 0, $denom_sroa_1_8_load87113$1 = 0, $denom_sroa_0_0_load83110$0 = 0, $denom_sroa_0_0_load83110$1 = 0, $sub_i28$0 = 0, $sub6_i30$0 = 0, $denom_sroa_1_8_load87112$0 = 0, $denom_sroa_1_8_load87112$1 = 0, $denom_sroa_0_0_load83109$0 = 0, $denom_sroa_0_0_load83109$1 = 0, $i_0132 = 0, $p_sroa_0_0_load74102131$0 = 0, $p_sroa_0_0_load74102131$1 = 0, $p_sroa_1_8_load77106130$0 = 0, $p_sroa_1_8_load77106130$1 = 0, $result_sroa_0_0_load95115129$0 = 0, $result_sroa_0_0_load95115129$1 = 0, $result_sroa_1_8_load101121128$0 = 0, $result_sroa_1_8_load101121128$1 = 0, $p_sroa_0_0_load74105$0 = 0, $p_sroa_0_0_load74105$1 = 0, $p_sroa_1_8_load77108$0 = 0, $p_sroa_1_8_load77108$1 = 0, $result_sroa_0_0_load95116$0 = 0, $result_sroa_0_0_load95116$1 = 0, $add_i$0 = 0, $add_i$1 = 0, $uadd$0 = 0, $11$1 = 0, $p_sroa_0_0_load74104$0 = 0, $p_sroa_0_0_load74104$1 = 0, $$etemp$23$1 = 0, $cmp50 = 0, $shl46$0 = 0, $shl46$1 = 0, $shl46_inc53$0 = 0, $shl46_inc53$1 = 0, $inc55 = 0, $sub_i$0 = 0, $sub6_i$0 = 0, $result_sroa_1_8_load101125$0 = 0, $result_sroa_1_8_load101125$1 = 0, $result_sroa_0_0_load95119$0 = 0, $result_sroa_0_0_load95119$1 = 0, $hi_i_i9 = 0, $lo_i_i11 = 0, label = 0;
 $lo = $rhs + 8 | 0;
 $0$0 = HEAP32[$lo >> 2] | 0;
 $0$1 = HEAP32[$lo + 4 >> 2] | 0;
 $cmp = ($0$0 | 0) == 0 & ($0$1 | 0) == 0;
 $hi = $rhs | 0;
 $1$0 = HEAP32[$hi >> 2] | 0;
 $1$1 = HEAP32[$hi + 4 >> 2] | 0;
 if (($0$0 | $1$0 | 0) == 0 & ($0$1 | $1$1 | 0) == 0) {
  $exception = ___cxa_allocate_exception(4) | 0;
  HEAP32[$exception >> 2] = 5584;
  ___cxa_throw($exception | 0, 15392, 0);
 }
 $hi5 = $this | 0;
 $6$0 = HEAP32[$hi5 >> 2] | 0;
 $6$1 = HEAP32[$hi5 + 4 >> 2] | 0;
 $cmp8 = ($1$1 >>> 31 | 0 << 1 | 0) == ($6$1 >>> 31 | 0 << 1 | 0);
 $lo3_i_i = $this + 8 | 0;
 $8$0 = HEAP32[$lo3_i_i >> 2] | 0;
 $8$1 = HEAP32[$lo3_i_i + 4 >> 2] | 0;
 $$etemp$10$1 = 0;
 do {
  if (($6$1 | 0) < ($$etemp$10$1 | 0) | ($6$1 | 0) == ($$etemp$10$1 | 0) & $6$0 >>> 0 < 0 >>> 0) {
   if (($8$0 | 0) == 0 & ($8$1 | 0) == 0) {
    $sub_i60$0 = _i64Subtract(0, 0, $6$0, $6$1) | 0;
    $result_sroa_0_0_load95117$1 = tempRet0;
    $result_sroa_0_0_load95117$0 = $sub_i60$0;
    $result_sroa_1_8_load101123$1 = 0;
    $result_sroa_1_8_load101123$0 = 0;
    break;
   } else {
    $sub6_i62$0 = _i64Subtract(0, 0, $8$0, $8$1) | 0;
    $result_sroa_0_0_load95117$1 = $6$1 ^ -1;
    $result_sroa_0_0_load95117$0 = $6$0 ^ -1;
    $result_sroa_1_8_load101123$1 = tempRet0;
    $result_sroa_1_8_load101123$0 = $sub6_i62$0;
    break;
   }
  } else {
   $result_sroa_0_0_load95117$1 = $6$1;
   $result_sroa_0_0_load95117$0 = $6$0;
   $result_sroa_1_8_load101123$1 = $8$1;
   $result_sroa_1_8_load101123$0 = $8$0;
  }
 } while (0);
 $$etemp$15$1 = 0;
 do {
  if (($1$1 | 0) < ($$etemp$15$1 | 0) | ($1$1 | 0) == ($$etemp$15$1 | 0) & $1$0 >>> 0 < 0 >>> 0) {
   if ($cmp) {
    $sub_i48$0 = _i64Subtract(0, 0, $1$0, $1$1) | 0;
    $denom_sroa_0_0_load83110$1 = tempRet0;
    $denom_sroa_0_0_load83110$0 = $sub_i48$0;
    $denom_sroa_1_8_load87113$1 = 0;
    $denom_sroa_1_8_load87113$0 = 0;
    break;
   } else {
    $sub6_i50$0 = _i64Subtract(0, 0, $0$0, $0$1) | 0;
    $denom_sroa_0_0_load83110$1 = $1$1 ^ -1;
    $denom_sroa_0_0_load83110$0 = $1$0 ^ -1;
    $denom_sroa_1_8_load87113$1 = tempRet0;
    $denom_sroa_1_8_load87113$0 = $sub6_i50$0;
    break;
   }
  } else {
   $denom_sroa_0_0_load83110$1 = $1$1;
   $denom_sroa_0_0_load83110$0 = $1$0;
   $denom_sroa_1_8_load87113$1 = $0$1;
   $denom_sroa_1_8_load87113$0 = $0$0;
  }
 } while (0);
 if (($denom_sroa_0_0_load83110$0 | 0) == ($result_sroa_0_0_load95117$0 | 0) & ($denom_sroa_0_0_load83110$1 | 0) == ($result_sroa_0_0_load95117$1 | 0)) {
  if ($denom_sroa_1_8_load87113$1 >>> 0 > $result_sroa_1_8_load101123$1 >>> 0 | $denom_sroa_1_8_load87113$1 >>> 0 == $result_sroa_1_8_load101123$1 >>> 0 & $denom_sroa_1_8_load87113$0 >>> 0 > $result_sroa_1_8_load101123$0 >>> 0) {
   label = 4801;
  }
 } else {
  if (($denom_sroa_0_0_load83110$1 | 0) > ($result_sroa_0_0_load95117$1 | 0) | ($denom_sroa_0_0_load83110$1 | 0) == ($result_sroa_0_0_load95117$1 | 0) & $denom_sroa_0_0_load83110$0 >>> 0 > $result_sroa_0_0_load95117$0 >>> 0) {
   label = 4801;
  }
 }
 if ((label | 0) == 4801) {
  _memset($agg_result | 0, 0, 16);
  return;
 }
 if (($denom_sroa_1_8_load87113$0 | 0) == 0 & ($denom_sroa_1_8_load87113$1 | 0) == 0) {
  $sub_i28$0 = _i64Subtract(0, 0, $denom_sroa_0_0_load83110$0, $denom_sroa_0_0_load83110$1) | 0;
  $denom_sroa_0_0_load83109$1 = tempRet0;
  $denom_sroa_0_0_load83109$0 = $sub_i28$0;
  $denom_sroa_1_8_load87112$1 = 0;
  $denom_sroa_1_8_load87112$0 = 0;
 } else {
  $sub6_i30$0 = _i64Subtract(0, 0, $denom_sroa_1_8_load87113$0, $denom_sroa_1_8_load87113$1) | 0;
  $denom_sroa_0_0_load83109$1 = $denom_sroa_0_0_load83110$1 ^ -1;
  $denom_sroa_0_0_load83109$0 = $denom_sroa_0_0_load83110$0 ^ -1;
  $denom_sroa_1_8_load87112$1 = tempRet0;
  $denom_sroa_1_8_load87112$0 = $sub6_i30$0;
 }
 $result_sroa_1_8_load101121128$1 = $result_sroa_1_8_load101123$1;
 $result_sroa_1_8_load101121128$0 = $result_sroa_1_8_load101123$0;
 $result_sroa_0_0_load95115129$1 = $result_sroa_0_0_load95117$1;
 $result_sroa_0_0_load95115129$0 = $result_sroa_0_0_load95117$0;
 $p_sroa_1_8_load77106130$1 = 0;
 $p_sroa_1_8_load77106130$0 = 0;
 $p_sroa_0_0_load74102131$1 = 0;
 $p_sroa_0_0_load74102131$0 = 0;
 $i_0132 = 0;
 while (1) {
  $p_sroa_0_0_load74105$0 = $p_sroa_0_0_load74102131$0 << 1 | 0 >>> 31 | ($p_sroa_1_8_load77106130$1 >>> 31 | 0 << 1);
  $p_sroa_0_0_load74105$1 = $p_sroa_0_0_load74102131$1 << 1 | $p_sroa_0_0_load74102131$0 >>> 31 | (0 >>> 31 | 0 << 1);
  $p_sroa_1_8_load77108$0 = $p_sroa_1_8_load77106130$0 << 1 | 0 >>> 31 | ($result_sroa_0_0_load95115129$1 >>> 31 | 0 << 1);
  $p_sroa_1_8_load77108$1 = $p_sroa_1_8_load77106130$1 << 1 | $p_sroa_1_8_load77106130$0 >>> 31 | (0 >>> 31 | 0 << 1);
  $result_sroa_0_0_load95116$0 = $result_sroa_0_0_load95115129$0 << 1 | 0 >>> 31 | ($result_sroa_1_8_load101121128$1 >>> 31 | 0 << 1);
  $result_sroa_0_0_load95116$1 = $result_sroa_0_0_load95115129$1 << 1 | $result_sroa_0_0_load95115129$0 >>> 31 | (0 >>> 31 | 0 << 1);
  $add_i$0 = _i64Add($p_sroa_0_0_load74105$0, $p_sroa_0_0_load74105$1, $denom_sroa_0_0_load83109$0, $denom_sroa_0_0_load83109$1) | 0;
  $add_i$1 = tempRet0;
  $uadd$0 = _llvm_uadd_with_overflow_i64($p_sroa_1_8_load77108$0 | 0, $p_sroa_1_8_load77108$1 | 0, $denom_sroa_1_8_load87112$0 | 0, $denom_sroa_1_8_load87112$1 | 0) | 0;
  $11$1 = tempRet0;
  $p_sroa_0_0_load74104$0 = _i64Add($add_i$0, $add_i$1, tempRet1 & 1, 0) | 0;
  $p_sroa_0_0_load74104$1 = tempRet0;
  $$etemp$23$1 = 0;
  $cmp50 = ($p_sroa_0_0_load74104$1 | 0) < ($$etemp$23$1 | 0) | ($p_sroa_0_0_load74104$1 | 0) == ($$etemp$23$1 | 0) & $p_sroa_0_0_load74104$0 >>> 0 < 0 >>> 0;
  $shl46$0 = $p_sroa_0_0_load74104$1 >>> 31 | 0 << 1 | ($result_sroa_1_8_load101121128$0 << 1 | 0 >>> 31);
  $shl46$1 = 0 >>> 31 | 0 << 1 | ($result_sroa_1_8_load101121128$1 << 1 | $result_sroa_1_8_load101121128$0 >>> 31);
  $shl46_inc53$0 = $shl46$0 ^ 1;
  $shl46_inc53$1 = $shl46$1 ^ 0;
  $inc55 = $i_0132 + 1 | 0;
  if (($inc55 | 0) < 128) {
   $result_sroa_1_8_load101121128$1 = $shl46_inc53$1;
   $result_sroa_1_8_load101121128$0 = $shl46_inc53$0;
   $result_sroa_0_0_load95115129$1 = $result_sroa_0_0_load95116$1;
   $result_sroa_0_0_load95115129$0 = $result_sroa_0_0_load95116$0;
   $p_sroa_1_8_load77106130$1 = $cmp50 ? $p_sroa_1_8_load77108$1 : $11$1;
   $p_sroa_1_8_load77106130$0 = $cmp50 ? $p_sroa_1_8_load77108$0 : $uadd$0;
   $p_sroa_0_0_load74102131$1 = $cmp50 ? $p_sroa_0_0_load74105$1 : $p_sroa_0_0_load74104$1;
   $p_sroa_0_0_load74102131$0 = $cmp50 ? $p_sroa_0_0_load74105$0 : $p_sroa_0_0_load74104$0;
   $i_0132 = $inc55;
  } else {
   break;
  }
 }
 do {
  if ($cmp8) {
   $result_sroa_0_0_load95119$1 = $result_sroa_0_0_load95116$1;
   $result_sroa_0_0_load95119$0 = $result_sroa_0_0_load95116$0;
   $result_sroa_1_8_load101125$1 = $shl46_inc53$1;
   $result_sroa_1_8_load101125$0 = $shl46_inc53$0;
  } else {
   if (($shl46$0 | 0) == 1 & ($shl46$1 | 0) == 0) {
    $sub_i$0 = _i64Subtract(0, 0, $result_sroa_0_0_load95116$0, $result_sroa_0_0_load95116$1) | 0;
    $result_sroa_0_0_load95119$1 = tempRet0;
    $result_sroa_0_0_load95119$0 = $sub_i$0;
    $result_sroa_1_8_load101125$1 = 0;
    $result_sroa_1_8_load101125$0 = 0;
    break;
   } else {
    $sub6_i$0 = _i64Subtract(0, 0, $shl46_inc53$0, $shl46_inc53$1) | 0;
    $result_sroa_0_0_load95119$1 = $result_sroa_0_0_load95116$1 ^ -1;
    $result_sroa_0_0_load95119$0 = $result_sroa_0_0_load95116$0 ^ -1;
    $result_sroa_1_8_load101125$1 = tempRet0;
    $result_sroa_1_8_load101125$0 = $sub6_i$0;
    break;
   }
  }
 } while (0);
 $hi_i_i9 = $agg_result | 0;
 HEAP32[$hi_i_i9 >> 2] = $result_sroa_0_0_load95119$0;
 HEAP32[$hi_i_i9 + 4 >> 2] = $result_sroa_0_0_load95119$1;
 $lo_i_i11 = $agg_result + 8 | 0;
 HEAP32[$lo_i_i11 >> 2] = $result_sroa_1_8_load101125$0;
 HEAP32[$lo_i_i11 + 4 >> 2] = $result_sroa_1_8_load101125$1;
 return;
}
function __ZN10ClipperLib14IntersectPointERNS_5TEdgeES1_RNS_8IntPointEb($edge1, $edge2, $ip, $UseFullInt64Range) {
 $edge1 = $edge1 | 0;
 $edge2 = $edge2 | 0;
 $ip = $ip | 0;
 $UseFullInt64Range = $UseFullInt64Range | 0;
 var $tmp_i = 0, $ref_tmp_i = 0, $tmp1_i = 0, $ref_tmp2_i = 0, $tmp3_i = 0, $ref_tmp5_i = 0, $deltaY_i = 0, $6$0 = 0, $6$1 = 0, $lo_i_i_i = 0, $hi_i_i_i = 0, $deltaX_i = 0, $7$1 = 0, $lo_i_i6_i = 0, $hi_i_i7_i = 0, $deltaX4_i = 0, $8$1 = 0, $lo_i_i12_i = 0, $hi_i_i13_i = 0, $deltaY6_i = 0, $9$1 = 0, $lo_i_i9_i = 0, $hi_i_i10_i = 0, $hi_i_i = 0, $hi2_i_i = 0, $lo_i_i = 0, $lo3_i_i = 0, $deltaX8_i = 0, $mul_i$0 = 0, $mul_i$1 = 0, $deltaX9_i = 0, $deltaY10_i = 0, $mul11_i$0 = 0, $retval_0_i = 0, $dx = 0, $17 = 0.0, $xbot = 0, $18$0 = 0, $18$1 = 0, $X = 0, $19 = 0.0, $sub = 0.0, $ybot = 0, $20$0 = 0, $20$1 = 0, $Y = 0, $xbot13 = 0, $add = 0.0, $sub_sink_i = 0.0, $conv_i$0 = 0, $conv_i$1 = 0, $Y22 = 0, $dx24 = 0, $22 = 0.0, $xbot30 = 0, $23$0 = 0, $23$1 = 0, $X31 = 0, $24 = 0.0, $sub33 = 0.0, $ybot40 = 0, $25$0 = 0, $25$1 = 0, $Y41 = 0, $xbot45 = 0, $add54 = 0.0, $sub_sink_i78 = 0.0, $conv_i79$0 = 0, $conv_i79$1 = 0, $Y56 = 0, $xbot59 = 0, $ybot61 = 0, $sub64 = 0.0, $xbot65 = 0, $ybot67 = 0, $sub71 = 0.0, $div76 = 0.0, $sub_sink_i132 = 0.0, $conv_i133$0 = 0, $conv_i133$1 = 0, $Y78 = 0, $31 = 0.0, $call80 = 0.0, $32 = 0.0, $add87 = 0.0, $sub_sink_i124 = 0.0, $conv_i125$1 = 0, $X89 = 0, $add93 = 0.0, $sub_sink_i116 = 0.0, $conv_i117$1 = 0, $X95 = 0, $33$0 = 0, $33$1 = 0, $Y100 = 0, $ytop = 0, $34$0 = 0, $34$1 = 0, $ytop107_phi_trans_insert = 0, $_pre$0 = 0, $_pre$1 = 0, $ytop107 = 0, $xtop = 0, $35$1 = 0, $X110 = 0, $36$1 = 0, $37$0 = 0, $37$1 = 0, $xtop_i91 = 0, $xbot_i93 = 0, $40$0 = 0, $40$1 = 0, $41 = 0.0, $ybot_i95 = 0, $sub_i96$0 = 0, $mul_i98 = 0.0, $sub_sink_i_i105 = 0.0, $add_i107$0 = 0, $cond_i109$0 = 0, $cond_i109$1 = 0, $43$1 = 0, $xtop118 = 0, $44$1 = 0, $X119 = 0, $45$1 = 0, $46$0 = 0, $46$1 = 0, $xtop_i = 0, $xbot_i = 0, $49$0 = 0, $49$1 = 0, $50 = 0.0, $ybot_i = 0, $sub_i83$0 = 0, $mul_i85 = 0.0, $sub_sink_i_i = 0.0, $add_i88$0 = 0, $cond_i$0 = 0, $cond_i$1 = 0, $52$1 = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $tmp_i = __stackBase__ | 0;
 $ref_tmp_i = __stackBase__ + 16 | 0;
 $tmp1_i = __stackBase__ + 32 | 0;
 $ref_tmp2_i = __stackBase__ + 48 | 0;
 $tmp3_i = __stackBase__ + 64 | 0;
 $ref_tmp5_i = __stackBase__ + 80 | 0;
 $deltaY_i = $edge1 + 64 | 0;
 $6$0 = HEAP32[$deltaY_i >> 2] | 0;
 $6$1 = HEAP32[$deltaY_i + 4 >> 2] | 0;
 do {
  if ($UseFullInt64Range) {
   $lo_i_i_i = $tmp_i + 8 | 0;
   HEAP32[$lo_i_i_i >> 2] = $6$0;
   HEAP32[$lo_i_i_i + 4 >> 2] = $6$1;
   $hi_i_i_i = $tmp_i | 0;
   HEAP32[$hi_i_i_i >> 2] = $6$1 >> 31 | (($6$1 | 0) < 0 ? -1 : 0) << 1;
   HEAP32[$hi_i_i_i + 4 >> 2] = (($6$1 | 0) < 0 ? -1 : 0) >> 31 | (($6$1 | 0) < 0 ? -1 : 0) << 1;
   $deltaX_i = $edge2 + 56 | 0;
   $7$1 = HEAP32[$deltaX_i + 4 >> 2] | 0;
   $lo_i_i6_i = $ref_tmp_i + 8 | 0;
   HEAP32[$lo_i_i6_i >> 2] = HEAP32[$deltaX_i >> 2];
   HEAP32[$lo_i_i6_i + 4 >> 2] = $7$1;
   $hi_i_i7_i = $ref_tmp_i | 0;
   HEAP32[$hi_i_i7_i >> 2] = $7$1 >> 31 | (($7$1 | 0) < 0 ? -1 : 0) << 1;
   HEAP32[$hi_i_i7_i + 4 >> 2] = (($7$1 | 0) < 0 ? -1 : 0) >> 31 | (($7$1 | 0) < 0 ? -1 : 0) << 1;
   __ZNK10ClipperLib6Int128mlERKS0_($tmp1_i, $tmp_i, $ref_tmp_i);
   $deltaX4_i = $edge1 + 56 | 0;
   $8$1 = HEAP32[$deltaX4_i + 4 >> 2] | 0;
   $lo_i_i12_i = $tmp3_i + 8 | 0;
   HEAP32[$lo_i_i12_i >> 2] = HEAP32[$deltaX4_i >> 2];
   HEAP32[$lo_i_i12_i + 4 >> 2] = $8$1;
   $hi_i_i13_i = $tmp3_i | 0;
   HEAP32[$hi_i_i13_i >> 2] = $8$1 >> 31 | (($8$1 | 0) < 0 ? -1 : 0) << 1;
   HEAP32[$hi_i_i13_i + 4 >> 2] = (($8$1 | 0) < 0 ? -1 : 0) >> 31 | (($8$1 | 0) < 0 ? -1 : 0) << 1;
   $deltaY6_i = $edge2 + 64 | 0;
   $9$1 = HEAP32[$deltaY6_i + 4 >> 2] | 0;
   $lo_i_i9_i = $ref_tmp5_i + 8 | 0;
   HEAP32[$lo_i_i9_i >> 2] = HEAP32[$deltaY6_i >> 2];
   HEAP32[$lo_i_i9_i + 4 >> 2] = $9$1;
   $hi_i_i10_i = $ref_tmp5_i | 0;
   HEAP32[$hi_i_i10_i >> 2] = $9$1 >> 31 | (($9$1 | 0) < 0 ? -1 : 0) << 1;
   HEAP32[$hi_i_i10_i + 4 >> 2] = (($9$1 | 0) < 0 ? -1 : 0) >> 31 | (($9$1 | 0) < 0 ? -1 : 0) << 1;
   __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp2_i, $tmp3_i, $ref_tmp5_i);
   $hi_i_i = $tmp1_i | 0;
   $hi2_i_i = $ref_tmp2_i | 0;
   if (!((HEAP32[$hi_i_i >> 2] | 0) == (HEAP32[$hi2_i_i >> 2] | 0) & (HEAP32[$hi_i_i + 4 >> 2] | 0) == (HEAP32[$hi2_i_i + 4 >> 2] | 0))) {
    break;
   }
   $lo_i_i = $tmp1_i + 8 | 0;
   $lo3_i_i = $ref_tmp2_i + 8 | 0;
   $retval_0_i = (HEAP32[$lo_i_i >> 2] | 0) == (HEAP32[$lo3_i_i >> 2] | 0) & (HEAP32[$lo_i_i + 4 >> 2] | 0) == (HEAP32[$lo3_i_i + 4 >> 2] | 0);
   label = 4819;
  } else {
   $deltaX8_i = $edge2 + 56 | 0;
   $mul_i$0 = ___muldi3(HEAP32[$deltaX8_i >> 2] | 0, HEAP32[$deltaX8_i + 4 >> 2] | 0, $6$0, $6$1) | 0;
   $mul_i$1 = tempRet0;
   $deltaX9_i = $edge1 + 56 | 0;
   $deltaY10_i = $edge2 + 64 | 0;
   $mul11_i$0 = ___muldi3(HEAP32[$deltaY10_i >> 2] | 0, HEAP32[$deltaY10_i + 4 >> 2] | 0, HEAP32[$deltaX9_i >> 2] | 0, HEAP32[$deltaX9_i + 4 >> 2] | 0) | 0;
   $retval_0_i = ($mul_i$0 | 0) == ($mul11_i$0 | 0) & ($mul_i$1 | 0) == (tempRet0 | 0);
   label = 4819;
  }
 } while (0);
 do {
  if ((label | 0) == 4819) {
   if ($retval_0_i) {
    $retval_0 = 0;
   } else {
    break;
   }
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  }
 } while (0);
 $dx = $edge1 + 48 | 0;
 $17 = +HEAPF64[$dx >> 3];
 do {
  if ($17 > -1.0e-20 & $17 < 1.0e-20) {
   $xbot = $edge1 | 0;
   $18$0 = HEAP32[$xbot >> 2] | 0;
   $18$1 = HEAP32[$xbot + 4 >> 2] | 0;
   $X = $ip | 0;
   HEAP32[$X >> 2] = $18$0;
   HEAP32[$X + 4 >> 2] = $18$1;
   $19 = +HEAPF64[$edge2 + 48 >> 3];
   $sub = $19 + 1.0e+40;
   $ybot = $edge2 + 8 | 0;
   $20$0 = HEAP32[$ybot >> 2] | 0;
   $20$1 = HEAP32[$ybot + 4 >> 2] | 0;
   if ($sub > -1.0e-20 & $sub < 1.0e-20) {
    $Y = $ip + 8 | 0;
    HEAP32[$Y >> 2] = $20$0;
    HEAP32[$Y + 4 >> 2] = $20$1;
    $33$1 = $20$1;
    $33$0 = $20$0;
    break;
   }
   $xbot13 = $edge2 | 0;
   $add = (+($18$0 >>> 0) + +($18$1 | 0) * 4294967296.0) / $19 + (+($20$0 >>> 0) + +($20$1 | 0) * 4294967296.0 - (+((HEAP32[$xbot13 >> 2] | 0) >>> 0) + +(HEAP32[$xbot13 + 4 >> 2] | 0) * 4294967296.0) / $19);
   if ($add < 0.0) {
    $sub_sink_i = $add + -.5;
   } else {
    $sub_sink_i = $add + .5;
   }
   $conv_i$0 = ~~$sub_sink_i >>> 0;
   $conv_i$1 = (Math_min(+Math_floor($sub_sink_i / 4294967296.0), 4294967295.0) | 0) >>> 0;
   $Y22 = $ip + 8 | 0;
   HEAP32[$Y22 >> 2] = $conv_i$0;
   HEAP32[$Y22 + 4 >> 2] = $conv_i$1;
   $33$1 = $conv_i$1;
   $33$0 = $conv_i$0;
  } else {
   $dx24 = $edge2 + 48 | 0;
   $22 = +HEAPF64[$dx24 >> 3];
   if ($22 > -1.0e-20 & $22 < 1.0e-20) {
    $xbot30 = $edge2 | 0;
    $23$0 = HEAP32[$xbot30 >> 2] | 0;
    $23$1 = HEAP32[$xbot30 + 4 >> 2] | 0;
    $X31 = $ip | 0;
    HEAP32[$X31 >> 2] = $23$0;
    HEAP32[$X31 + 4 >> 2] = $23$1;
    $24 = +HEAPF64[$dx >> 3];
    $sub33 = $24 + 1.0e+40;
    $ybot40 = $edge1 + 8 | 0;
    $25$0 = HEAP32[$ybot40 >> 2] | 0;
    $25$1 = HEAP32[$ybot40 + 4 >> 2] | 0;
    if ($sub33 > -1.0e-20 & $sub33 < 1.0e-20) {
     $Y41 = $ip + 8 | 0;
     HEAP32[$Y41 >> 2] = $25$0;
     HEAP32[$Y41 + 4 >> 2] = $25$1;
     $33$1 = $25$1;
     $33$0 = $25$0;
     break;
    }
    $xbot45 = $edge1 | 0;
    $add54 = (+($23$0 >>> 0) + +($23$1 | 0) * 4294967296.0) / $24 + (+($25$0 >>> 0) + +($25$1 | 0) * 4294967296.0 - (+((HEAP32[$xbot45 >> 2] | 0) >>> 0) + +(HEAP32[$xbot45 + 4 >> 2] | 0) * 4294967296.0) / $24);
    if ($add54 < 0.0) {
     $sub_sink_i78 = $add54 + -.5;
    } else {
     $sub_sink_i78 = $add54 + .5;
    }
    $conv_i79$0 = ~~$sub_sink_i78 >>> 0;
    $conv_i79$1 = (Math_min(+Math_floor($sub_sink_i78 / 4294967296.0), 4294967295.0) | 0) >>> 0;
    $Y56 = $ip + 8 | 0;
    HEAP32[$Y56 >> 2] = $conv_i79$0;
    HEAP32[$Y56 + 4 >> 2] = $conv_i79$1;
    $33$1 = $conv_i79$1;
    $33$0 = $conv_i79$0;
    break;
   }
   $xbot59 = $edge1 | 0;
   $ybot61 = $edge1 + 8 | 0;
   $sub64 = +((HEAP32[$xbot59 >> 2] | 0) >>> 0) + +(HEAP32[$xbot59 + 4 >> 2] | 0) * 4294967296.0 - $17 * (+((HEAP32[$ybot61 >> 2] | 0) >>> 0) + +(HEAP32[$ybot61 + 4 >> 2] | 0) * 4294967296.0);
   $xbot65 = $edge2 | 0;
   $ybot67 = $edge2 + 8 | 0;
   $sub71 = +((HEAP32[$xbot65 >> 2] | 0) >>> 0) + +(HEAP32[$xbot65 + 4 >> 2] | 0) * 4294967296.0 - $22 * (+((HEAP32[$ybot67 >> 2] | 0) >>> 0) + +(HEAP32[$ybot67 + 4 >> 2] | 0) * 4294967296.0);
   $div76 = ($sub71 - $sub64) / ($17 - $22);
   if ($div76 < 0.0) {
    $sub_sink_i132 = $div76 + -.5;
   } else {
    $sub_sink_i132 = $div76 + .5;
   }
   $conv_i133$0 = ~~$sub_sink_i132 >>> 0;
   $conv_i133$1 = (Math_min(+Math_floor($sub_sink_i132 / 4294967296.0), 4294967295.0) | 0) >>> 0;
   $Y78 = $ip + 8 | 0;
   HEAP32[$Y78 >> 2] = $conv_i133$0;
   HEAP32[$Y78 + 4 >> 2] = $conv_i133$1;
   $31 = +HEAPF64[$dx >> 3];
   $call80 = +Math_abs(+$31);
   $32 = +HEAPF64[$dx24 >> 3];
   if ($call80 < +Math_abs(+$32)) {
    $add87 = $sub64 + $div76 * $31;
    if ($add87 < 0.0) {
     $sub_sink_i124 = $add87 + -.5;
    } else {
     $sub_sink_i124 = $add87 + .5;
    }
    $conv_i125$1 = (Math_min(+Math_floor($sub_sink_i124 / 4294967296.0), 4294967295.0) | 0) >>> 0;
    $X89 = $ip | 0;
    HEAP32[$X89 >> 2] = ~~$sub_sink_i124 >>> 0;
    HEAP32[$X89 + 4 >> 2] = $conv_i125$1;
    $33$1 = $conv_i133$1;
    $33$0 = $conv_i133$0;
    break;
   } else {
    $add93 = $sub71 + $div76 * $32;
    if ($add93 < 0.0) {
     $sub_sink_i116 = $add93 + -.5;
    } else {
     $sub_sink_i116 = $add93 + .5;
    }
    $conv_i117$1 = (Math_min(+Math_floor($sub_sink_i116 / 4294967296.0), 4294967295.0) | 0) >>> 0;
    $X95 = $ip | 0;
    HEAP32[$X95 >> 2] = ~~$sub_sink_i116 >>> 0;
    HEAP32[$X95 + 4 >> 2] = $conv_i117$1;
    $33$1 = $conv_i133$1;
    $33$0 = $conv_i133$0;
    break;
   }
  }
 } while (0);
 $Y100 = $ip + 8 | 0;
 $ytop = $edge1 + 40 | 0;
 $34$0 = HEAP32[$ytop >> 2] | 0;
 $34$1 = HEAP32[$ytop + 4 >> 2] | 0;
 $ytop107_phi_trans_insert = $edge2 + 40 | 0;
 $_pre$0 = HEAP32[$ytop107_phi_trans_insert >> 2] | 0;
 $_pre$1 = HEAP32[$ytop107_phi_trans_insert + 4 >> 2] | 0;
 if (!(($33$1 | 0) < ($34$1 | 0) | ($33$1 | 0) == ($34$1 | 0) & $33$0 >>> 0 < $34$0 >>> 0 | (($33$1 | 0) < ($_pre$1 | 0) | ($33$1 | 0) == ($_pre$1 | 0) & $33$0 >>> 0 < $_pre$0 >>> 0))) {
  $retval_0 = 1;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $ytop107 = $edge2 + 40 | 0;
 if (($34$1 | 0) > ($_pre$1 | 0) | ($34$1 | 0) == ($_pre$1 | 0) & $34$0 >>> 0 > $_pre$0 >>> 0) {
  $xtop = $edge1 + 32 | 0;
  $35$1 = HEAP32[$xtop + 4 >> 2] | 0;
  $X110 = $ip | 0;
  HEAP32[$X110 >> 2] = HEAP32[$xtop >> 2];
  HEAP32[$X110 + 4 >> 2] = $35$1;
  $36$1 = HEAP32[$ytop + 4 >> 2] | 0;
  HEAP32[$Y100 >> 2] = HEAP32[$ytop >> 2];
  HEAP32[$Y100 + 4 >> 2] = $36$1;
  $37$0 = HEAP32[$ytop >> 2] | 0;
  $37$1 = HEAP32[$ytop + 4 >> 2] | 0;
  if ((HEAP32[$ytop107 >> 2] | 0) == ($37$0 | 0) & (HEAP32[$ytop107 + 4 >> 2] | 0) == ($37$1 | 0)) {
   $xtop_i91 = $edge2 + 32 | 0;
   $cond_i109$1 = HEAP32[$xtop_i91 + 4 >> 2] | 0;
   $cond_i109$0 = HEAP32[$xtop_i91 >> 2] | 0;
  } else {
   $xbot_i93 = $edge2 | 0;
   $40$0 = HEAP32[$xbot_i93 >> 2] | 0;
   $40$1 = HEAP32[$xbot_i93 + 4 >> 2] | 0;
   $41 = +HEAPF64[$edge2 + 48 >> 3];
   $ybot_i95 = $edge2 + 8 | 0;
   $sub_i96$0 = _i64Subtract($37$0, $37$1, HEAP32[$ybot_i95 >> 2] | 0, HEAP32[$ybot_i95 + 4 >> 2] | 0) | 0;
   $mul_i98 = $41 * (+($sub_i96$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0);
   if ($mul_i98 < 0.0) {
    $sub_sink_i_i105 = $mul_i98 + -.5;
   } else {
    $sub_sink_i_i105 = $mul_i98 + .5;
   }
   $add_i107$0 = _i64Add(~~$sub_sink_i_i105 >>> 0, (Math_min(+Math_floor($sub_sink_i_i105 / 4294967296.0), 4294967295.0) | 0) >>> 0, $40$0, $40$1) | 0;
   $cond_i109$1 = tempRet0;
   $cond_i109$0 = $add_i107$0;
  }
  $43$1 = HEAP32[$xtop + 4 >> 2] | 0;
  $retval_0 = ($cond_i109$1 | 0) < ($43$1 | 0) | ($cond_i109$1 | 0) == ($43$1 | 0) & $cond_i109$0 >>> 0 < (HEAP32[$xtop >> 2] | 0) >>> 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else {
  $xtop118 = $edge2 + 32 | 0;
  $44$1 = HEAP32[$xtop118 + 4 >> 2] | 0;
  $X119 = $ip | 0;
  HEAP32[$X119 >> 2] = HEAP32[$xtop118 >> 2];
  HEAP32[$X119 + 4 >> 2] = $44$1;
  $45$1 = HEAP32[$ytop107 + 4 >> 2] | 0;
  HEAP32[$Y100 >> 2] = HEAP32[$ytop107 >> 2];
  HEAP32[$Y100 + 4 >> 2] = $45$1;
  $46$0 = HEAP32[$ytop107 >> 2] | 0;
  $46$1 = HEAP32[$ytop107 + 4 >> 2] | 0;
  if ((HEAP32[$ytop >> 2] | 0) == ($46$0 | 0) & (HEAP32[$ytop + 4 >> 2] | 0) == ($46$1 | 0)) {
   $xtop_i = $edge1 + 32 | 0;
   $cond_i$1 = HEAP32[$xtop_i + 4 >> 2] | 0;
   $cond_i$0 = HEAP32[$xtop_i >> 2] | 0;
  } else {
   $xbot_i = $edge1 | 0;
   $49$0 = HEAP32[$xbot_i >> 2] | 0;
   $49$1 = HEAP32[$xbot_i + 4 >> 2] | 0;
   $50 = +HEAPF64[$dx >> 3];
   $ybot_i = $edge1 + 8 | 0;
   $sub_i83$0 = _i64Subtract($46$0, $46$1, HEAP32[$ybot_i >> 2] | 0, HEAP32[$ybot_i + 4 >> 2] | 0) | 0;
   $mul_i85 = $50 * (+($sub_i83$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0);
   if ($mul_i85 < 0.0) {
    $sub_sink_i_i = $mul_i85 + -.5;
   } else {
    $sub_sink_i_i = $mul_i85 + .5;
   }
   $add_i88$0 = _i64Add(~~$sub_sink_i_i >>> 0, (Math_min(+Math_floor($sub_sink_i_i / 4294967296.0), 4294967295.0) | 0) >>> 0, $49$0, $49$1) | 0;
   $cond_i$1 = tempRet0;
   $cond_i$0 = $add_i88$0;
  }
  $52$1 = HEAP32[$xtop118 + 4 >> 2] | 0;
  $retval_0 = ($cond_i$1 | 0) > ($52$1 | 0) | ($cond_i$1 | 0) == ($52$1 | 0) & $cond_i$0 >>> 0 > (HEAP32[$xtop118 >> 2] | 0) >>> 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZN10ClipperLib15FirstIsBottomPtEPKNS_5OutPtES2_($btmPt1, $btmPt2) {
 $btmPt1 = $btmPt1 | 0;
 $btmPt2 = $btmPt2 | 0;
 var $X1_i = 0, $0$0 = 0, $0$1 = 0, $Y2_i = 0, $btmPt1_pn = 0, $p_0 = 0, $X_i = 0, $1$0 = 0, $1$1 = 0, $agg_tmp4_sroa_1_8__idx112_phi_trans_insert = 0, $Y_i = 0, $2$0 = 0, $2$1 = 0, $3$0 = 0, $3$1 = 0, $agg_tmp4_sroa_1_8_copyload$0 = 0, $agg_tmp4_sroa_1_8_copyload$1 = 0, $agg_tmp_sroa_1_8_copyload$0 = 0, $agg_tmp_sroa_1_8_copyload$1 = 0, $sub_i98$0 = 0, $conv_i99 = 0.0, $sub5_i100$0 = 0, $cond_i104 = 0.0, $call7 = 0.0, $btmPt1_pn34 = 0, $X_i85 = 0, $4$0 = 0, $4$1 = 0, $Y_i88 = 0, $5$0 = 0, $5$1 = 0, $sub_i77$0 = 0, $conv_i78 = 0.0, $sub5_i79$0 = 0, $cond_i83 = 0.0, $call23 = 0.0, $X1_i65 = 0, $6$0 = 0, $6$1 = 0, $Y2_i68 = 0, $btmPt2_pn = 0, $p_2 = 0, $X_i64 = 0, $7$0 = 0, $7$1 = 0, $agg_tmp37_sroa_1_8__idx108_phi_trans_insert = 0, $Y_i67 = 0, $8$0 = 0, $8$1 = 0, $9$0 = 0, $9$1 = 0, $agg_tmp37_sroa_1_8_copyload$0 = 0, $agg_tmp37_sroa_1_8_copyload$1 = 0, $agg_tmp35_sroa_1_8_copyload$0 = 0, $agg_tmp35_sroa_1_8_copyload$1 = 0, $sub_i56$0 = 0, $conv_i57 = 0.0, $sub5_i58$0 = 0, $cond_i62 = 0.0, $call40 = 0.0, $btmPt2_pn35 = 0, $X_i43 = 0, $10$0 = 0, $10$1 = 0, $Y_i46 = 0, $11$0 = 0, $11$1 = 0, $sub_i$0 = 0, $conv_i = 0.0, $sub5_i$0 = 0, $cond_i = 0.0, $call57 = 0.0, $12 = 0, label = 0;
 $X1_i = $btmPt1 + 8 | 0;
 $0$0 = HEAP32[$X1_i >> 2] | 0;
 $0$1 = HEAP32[$X1_i + 4 >> 2] | 0;
 $Y2_i = $btmPt1 + 16 | 0;
 $btmPt1_pn = $btmPt1;
 while (1) {
  $p_0 = HEAP32[$btmPt1_pn + 28 >> 2] | 0;
  $X_i = $p_0 + 8 | 0;
  $1$0 = HEAP32[$X_i >> 2] | 0;
  $1$1 = HEAP32[$X_i + 4 >> 2] | 0;
  if (!(($1$0 | 0) == ($0$0 | 0) & ($1$1 | 0) == ($0$1 | 0))) {
   label = 4869;
   break;
  }
  $Y_i = $p_0 + 16 | 0;
  $2$0 = HEAP32[$Y_i >> 2] | 0;
  $2$1 = HEAP32[$Y_i + 4 >> 2] | 0;
  $3$0 = HEAP32[$Y2_i >> 2] | 0;
  $3$1 = HEAP32[$Y2_i + 4 >> 2] | 0;
  if (($2$0 | 0) != ($3$0 | 0) | ($2$1 | 0) != ($3$1 | 0) | ($p_0 | 0) == ($btmPt1 | 0)) {
   $agg_tmp_sroa_1_8_copyload$1 = $3$1;
   $agg_tmp_sroa_1_8_copyload$0 = $3$0;
   $agg_tmp4_sroa_1_8_copyload$1 = $2$1;
   $agg_tmp4_sroa_1_8_copyload$0 = $2$0;
   break;
  } else {
   $btmPt1_pn = $p_0;
  }
 }
 if ((label | 0) == 4869) {
  $agg_tmp4_sroa_1_8__idx112_phi_trans_insert = $p_0 + 16 | 0;
  $agg_tmp_sroa_1_8_copyload$1 = HEAP32[$Y2_i + 4 >> 2] | 0;
  $agg_tmp_sroa_1_8_copyload$0 = HEAP32[$Y2_i >> 2] | 0;
  $agg_tmp4_sroa_1_8_copyload$1 = HEAP32[$agg_tmp4_sroa_1_8__idx112_phi_trans_insert + 4 >> 2] | 0;
  $agg_tmp4_sroa_1_8_copyload$0 = HEAP32[$agg_tmp4_sroa_1_8__idx112_phi_trans_insert >> 2] | 0;
 }
 if (($agg_tmp_sroa_1_8_copyload$0 | 0) == ($agg_tmp4_sroa_1_8_copyload$0 | 0) & ($agg_tmp_sroa_1_8_copyload$1 | 0) == ($agg_tmp4_sroa_1_8_copyload$1 | 0)) {
  $cond_i104 = -1.0e+40;
 } else {
  $sub_i98$0 = _i64Subtract($1$0, $1$1, $0$0, $0$1) | 0;
  $conv_i99 = +($sub_i98$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
  $sub5_i100$0 = _i64Subtract($agg_tmp4_sroa_1_8_copyload$0, $agg_tmp4_sroa_1_8_copyload$1, $agg_tmp_sroa_1_8_copyload$0, $agg_tmp_sroa_1_8_copyload$1) | 0;
  $cond_i104 = $conv_i99 / (+($sub5_i100$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0);
 }
 $call7 = +Math_abs(+$cond_i104);
 $btmPt1_pn34 = $btmPt1;
 do {
  $btmPt1_pn34 = HEAP32[$btmPt1_pn34 + 24 >> 2] | 0;
  $X_i85 = $btmPt1_pn34 + 8 | 0;
  $4$0 = HEAP32[$X_i85 >> 2] | 0;
  $4$1 = HEAP32[$X_i85 + 4 >> 2] | 0;
  $Y_i88 = $btmPt1_pn34 + 16 | 0;
  $5$0 = HEAP32[$Y_i88 >> 2] | 0;
  $5$1 = HEAP32[$Y_i88 + 4 >> 2] | 0;
  if (!(($4$0 | 0) == ($0$0 | 0) & ($4$1 | 0) == ($0$1 | 0))) {
   break;
  }
 } while (!(($5$0 | 0) != ($agg_tmp_sroa_1_8_copyload$0 | 0) | ($5$1 | 0) != ($agg_tmp_sroa_1_8_copyload$1 | 0) | ($btmPt1_pn34 | 0) == ($btmPt1 | 0)));
 if (($agg_tmp_sroa_1_8_copyload$0 | 0) == ($5$0 | 0) & ($agg_tmp_sroa_1_8_copyload$1 | 0) == ($5$1 | 0)) {
  $cond_i83 = -1.0e+40;
 } else {
  $sub_i77$0 = _i64Subtract($4$0, $4$1, $0$0, $0$1) | 0;
  $conv_i78 = +($sub_i77$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
  $sub5_i79$0 = _i64Subtract($5$0, $5$1, $agg_tmp_sroa_1_8_copyload$0, $agg_tmp_sroa_1_8_copyload$1) | 0;
  $cond_i83 = $conv_i78 / (+($sub5_i79$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0);
 }
 $call23 = +Math_abs(+$cond_i83);
 $X1_i65 = $btmPt2 + 8 | 0;
 $6$0 = HEAP32[$X1_i65 >> 2] | 0;
 $6$1 = HEAP32[$X1_i65 + 4 >> 2] | 0;
 $Y2_i68 = $btmPt2 + 16 | 0;
 $btmPt2_pn = $btmPt2;
 while (1) {
  $p_2 = HEAP32[$btmPt2_pn + 28 >> 2] | 0;
  $X_i64 = $p_2 + 8 | 0;
  $7$0 = HEAP32[$X_i64 >> 2] | 0;
  $7$1 = HEAP32[$X_i64 + 4 >> 2] | 0;
  if (!(($7$0 | 0) == ($6$0 | 0) & ($7$1 | 0) == ($6$1 | 0))) {
   label = 4880;
   break;
  }
  $Y_i67 = $p_2 + 16 | 0;
  $8$0 = HEAP32[$Y_i67 >> 2] | 0;
  $8$1 = HEAP32[$Y_i67 + 4 >> 2] | 0;
  $9$0 = HEAP32[$Y2_i68 >> 2] | 0;
  $9$1 = HEAP32[$Y2_i68 + 4 >> 2] | 0;
  if (($8$0 | 0) != ($9$0 | 0) | ($8$1 | 0) != ($9$1 | 0) | ($p_2 | 0) == ($btmPt2 | 0)) {
   $agg_tmp35_sroa_1_8_copyload$1 = $9$1;
   $agg_tmp35_sroa_1_8_copyload$0 = $9$0;
   $agg_tmp37_sroa_1_8_copyload$1 = $8$1;
   $agg_tmp37_sroa_1_8_copyload$0 = $8$0;
   break;
  } else {
   $btmPt2_pn = $p_2;
  }
 }
 if ((label | 0) == 4880) {
  $agg_tmp37_sroa_1_8__idx108_phi_trans_insert = $p_2 + 16 | 0;
  $agg_tmp35_sroa_1_8_copyload$1 = HEAP32[$Y2_i68 + 4 >> 2] | 0;
  $agg_tmp35_sroa_1_8_copyload$0 = HEAP32[$Y2_i68 >> 2] | 0;
  $agg_tmp37_sroa_1_8_copyload$1 = HEAP32[$agg_tmp37_sroa_1_8__idx108_phi_trans_insert + 4 >> 2] | 0;
  $agg_tmp37_sroa_1_8_copyload$0 = HEAP32[$agg_tmp37_sroa_1_8__idx108_phi_trans_insert >> 2] | 0;
 }
 if (($agg_tmp35_sroa_1_8_copyload$0 | 0) == ($agg_tmp37_sroa_1_8_copyload$0 | 0) & ($agg_tmp35_sroa_1_8_copyload$1 | 0) == ($agg_tmp37_sroa_1_8_copyload$1 | 0)) {
  $cond_i62 = -1.0e+40;
 } else {
  $sub_i56$0 = _i64Subtract($7$0, $7$1, $6$0, $6$1) | 0;
  $conv_i57 = +($sub_i56$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
  $sub5_i58$0 = _i64Subtract($agg_tmp37_sroa_1_8_copyload$0, $agg_tmp37_sroa_1_8_copyload$1, $agg_tmp35_sroa_1_8_copyload$0, $agg_tmp35_sroa_1_8_copyload$1) | 0;
  $cond_i62 = $conv_i57 / (+($sub5_i58$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0);
 }
 $call40 = +Math_abs(+$cond_i62);
 $btmPt2_pn35 = $btmPt2;
 do {
  $btmPt2_pn35 = HEAP32[$btmPt2_pn35 + 24 >> 2] | 0;
  $X_i43 = $btmPt2_pn35 + 8 | 0;
  $10$0 = HEAP32[$X_i43 >> 2] | 0;
  $10$1 = HEAP32[$X_i43 + 4 >> 2] | 0;
  $Y_i46 = $btmPt2_pn35 + 16 | 0;
  $11$0 = HEAP32[$Y_i46 >> 2] | 0;
  $11$1 = HEAP32[$Y_i46 + 4 >> 2] | 0;
  if (!(($10$0 | 0) == ($6$0 | 0) & ($10$1 | 0) == ($6$1 | 0))) {
   break;
  }
 } while (!(($11$0 | 0) != ($agg_tmp35_sroa_1_8_copyload$0 | 0) | ($11$1 | 0) != ($agg_tmp35_sroa_1_8_copyload$1 | 0) | ($btmPt2_pn35 | 0) == ($btmPt2 | 0)));
 if (($agg_tmp35_sroa_1_8_copyload$0 | 0) == ($11$0 | 0) & ($agg_tmp35_sroa_1_8_copyload$1 | 0) == ($11$1 | 0)) {
  $cond_i = -1.0e+40;
 } else {
  $sub_i$0 = _i64Subtract($10$0, $10$1, $6$0, $6$1) | 0;
  $conv_i = +($sub_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
  $sub5_i$0 = _i64Subtract($11$0, $11$1, $agg_tmp35_sroa_1_8_copyload$0, $agg_tmp35_sroa_1_8_copyload$1) | 0;
  $cond_i = $conv_i / (+($sub5_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0);
 }
 $call57 = +Math_abs(+$cond_i);
 if (!($call7 < $call40 | $call7 < $call57)) {
  $12 = 1;
  return $12 | 0;
 }
 if ($call23 < $call40) {
  $12 = 0;
  return $12 | 0;
 }
 $12 = $call23 >= $call57;
 return $12 | 0;
}
function __ZN10ClipperLib11GetBottomPtEPNS_5OutPtE($pp) {
 $pp = $pp | 0;
 var $p_0354558 = 0, $Y2_phi_trans_insert = 0, $p_03545 = 0, $0$0 = 0, $0$1 = 0, $p_0354561 = 0, $pp_addr_0_ph60 = 0, $X11 = 0, $p_03548 = 0, $dups_0_ph47 = 0, $p_037 = 0, $Y = 0, $1$0 = 0, $1$1 = 0, $X = 0, $2$0 = 0, $2$1 = 0, $3$0 = 0, $3$1 = 0, $4 = 0, $p_0 = 0, $dups_229 = 0, $pp_addr_228 = 0, $pp_addr_2_dups_2 = 0, $X1_i = 0, $6$0 = 0, $6$1 = 0, $Y2_i = 0, $7$0 = 0, $7$1 = 0, $dups_2_pn = 0, $dups_3 = 0, $X_i = 0, $Y_i = 0, $pp_addr_4 = 0, label = 0;
 $p_0354558 = HEAP32[$pp + 24 >> 2] | 0;
 if (($p_0354558 | 0) == ($pp | 0)) {
  $pp_addr_4 = $pp;
  return $pp_addr_4 | 0;
 }
 $Y2_phi_trans_insert = $pp + 16 | 0;
 $pp_addr_0_ph60 = $pp;
 $p_0354561 = $p_0354558;
 $0$1 = HEAP32[$Y2_phi_trans_insert + 4 >> 2] | 0;
 $0$0 = HEAP32[$Y2_phi_trans_insert >> 2] | 0;
 L5497 : while (1) {
  $X11 = $pp_addr_0_ph60 + 8 | 0;
  $dups_0_ph47 = 0;
  $p_03548 = $p_0354561;
  L5499 : while (1) {
   $p_037 = $p_03548;
   L5501 : while (1) {
    $Y = $p_037 + 16 | 0;
    $1$0 = HEAP32[$Y >> 2] | 0;
    $1$1 = HEAP32[$Y + 4 >> 2] | 0;
    if (($1$1 | 0) > ($0$1 | 0) | ($1$1 | 0) == ($0$1 | 0) & $1$0 >>> 0 > $0$0 >>> 0) {
     break L5499;
    }
    do {
     if (($1$0 | 0) == ($0$0 | 0) & ($1$1 | 0) == ($0$1 | 0)) {
      $X = $p_037 + 8 | 0;
      $2$0 = HEAP32[$X >> 2] | 0;
      $2$1 = HEAP32[$X + 4 >> 2] | 0;
      $3$0 = HEAP32[$X11 >> 2] | 0;
      $3$1 = HEAP32[$X11 + 4 >> 2] | 0;
      if (($2$1 | 0) > ($3$1 | 0) | ($2$1 | 0) == ($3$1 | 0) & $2$0 >>> 0 > $3$0 >>> 0) {
       break;
      }
      if (($2$1 | 0) < ($3$1 | 0) | ($2$1 | 0) == ($3$1 | 0) & $2$0 >>> 0 < $3$0 >>> 0) {
       break L5499;
      }
      $4 = HEAP32[$p_037 + 24 >> 2] | 0;
      if (($4 | 0) != ($pp_addr_0_ph60 | 0)) {
       break L5501;
      }
     }
    } while (0);
    $p_0 = HEAP32[$p_037 + 24 >> 2] | 0;
    if (($p_0 | 0) == ($pp_addr_0_ph60 | 0)) {
     break L5497;
    } else {
     $p_037 = $p_0;
    }
   }
   $dups_0_ph47 = (HEAP32[$p_037 + 28 >> 2] | 0) == ($pp_addr_0_ph60 | 0) ? $dups_0_ph47 : $p_037;
   $p_03548 = $4;
  }
  $p_03545 = HEAP32[$p_037 + 24 >> 2] | 0;
  if (($p_03545 | 0) == ($p_037 | 0)) {
   $pp_addr_4 = $p_037;
   label = 4917;
   break;
  } else {
   $pp_addr_0_ph60 = $p_037;
   $p_0354561 = $p_03545;
   $0$1 = $1$1;
   $0$0 = $1$0;
  }
 }
 if ((label | 0) == 4917) {
  return $pp_addr_4 | 0;
 }
 if (($dups_0_ph47 | 0) == 0 | ($dups_0_ph47 | 0) == ($pp_addr_0_ph60 | 0)) {
  $pp_addr_4 = $pp_addr_0_ph60;
  return $pp_addr_4 | 0;
 } else {
  $pp_addr_228 = $pp_addr_0_ph60;
  $dups_229 = $dups_0_ph47;
 }
 while (1) {
  $pp_addr_2_dups_2 = __ZN10ClipperLib15FirstIsBottomPtEPKNS_5OutPtES2_($pp_addr_0_ph60, $dups_229) | 0 ? $pp_addr_228 : $dups_229;
  $X1_i = $pp_addr_2_dups_2 + 8 | 0;
  $6$0 = HEAP32[$X1_i >> 2] | 0;
  $6$1 = HEAP32[$X1_i + 4 >> 2] | 0;
  $Y2_i = $pp_addr_2_dups_2 + 16 | 0;
  $7$0 = HEAP32[$Y2_i >> 2] | 0;
  $7$1 = HEAP32[$Y2_i + 4 >> 2] | 0;
  $dups_2_pn = $dups_229;
  while (1) {
   $dups_3 = HEAP32[$dups_2_pn + 24 >> 2] | 0;
   $X_i = $dups_3 + 8 | 0;
   if (!((HEAP32[$X_i >> 2] | 0) == ($6$0 | 0) & (HEAP32[$X_i + 4 >> 2] | 0) == ($6$1 | 0))) {
    $dups_2_pn = $dups_3;
    continue;
   }
   $Y_i = $dups_3 + 16 | 0;
   if ((HEAP32[$Y_i >> 2] | 0) == ($7$0 | 0) & (HEAP32[$Y_i + 4 >> 2] | 0) == ($7$1 | 0)) {
    break;
   } else {
    $dups_2_pn = $dups_3;
   }
  }
  if (($dups_3 | 0) == ($pp_addr_0_ph60 | 0)) {
   $pp_addr_4 = $pp_addr_2_dups_2;
   break;
  } else {
   $pp_addr_228 = $pp_addr_2_dups_2;
   $dups_229 = $dups_3;
  }
 }
 return $pp_addr_4 | 0;
}
function __ZN10ClipperLib11FindSegmentERPNS_5OutPtERNS_8IntPointES4_($pp, $pt1, $pt2) {
 $pp = $pp | 0;
 $pt1 = $pt1 | 0;
 $pt2 = $pt2 | 0;
 var $tmp_i34 = 0, $ref_tmp_i35 = 0, $tmp4_i36 = 0, $ref_tmp5_i37 = 0, $tmp6_i38 = 0, $ref_tmp10_i39 = 0, $tmp_i = 0, $ref_tmp_i = 0, $tmp4_i = 0, $ref_tmp5_i = 0, $tmp6_i = 0, $ref_tmp10_i = 0, $0 = 0, $pt1a_sroa_0_0__idx93 = 0, $pt1a_sroa_0_0_copyload94$0 = 0, $pt1a_sroa_0_0_copyload94$1 = 0, $pt1a_sroa_1_8__idx98 = 0, $pt1a_sroa_1_8_copyload99$0 = 0, $pt1a_sroa_1_8_copyload99$1 = 0, $pt2a_sroa_0_0__idx106 = 0, $pt2a_sroa_0_0_copyload107$0 = 0, $pt2a_sroa_0_0_copyload107$1 = 0, $pt2a_sroa_1_8__idx111 = 0, $pt2a_sroa_1_8_copyload112$0 = 0, $pt2a_sroa_1_8_copyload112$1 = 0, $sub_i$0 = 0, $sub_i$1 = 0, $lo_i_i_i = 0, $hi_i_i_i = 0, $_lo_lobit_i_i_i$0 = 0, $_lo_lobit_i_i_i$1 = 0, $lo_i_i1_i = 0, $hi_i_i2_i = 0, $sub9_i$0 = 0, $sub9_i$1 = 0, $lo_i_i7_i = 0, $hi_i_i8_i = 0, $_lo_lobit_i_i9_i$0 = 0, $_lo_lobit_i_i9_i$1 = 0, $lo_i_i4_i = 0, $hi_i_i5_i = 0, $hi_i_i = 0, $hi2_i_i = 0, $lo_i_i = 0, $lo3_i_i = 0, $lo_i_i_i43 = 0, $hi_i_i_i44 = 0, $lo_i_i1_i49 = 0, $hi_i_i2_i50 = 0, $lo_i_i7_i54 = 0, $hi_i_i8_i55 = 0, $lo_i_i4_i59 = 0, $hi_i_i5_i60 = 0, $hi_i_i62 = 0, $hi2_i_i63 = 0, $lo_i_i65 = 0, $lo3_i_i66 = 0, $cmp_i = 0, $cmp9_i = 0, $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112$0 = 0, $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112$1 = 0, $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107$0 = 0, $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107$1 = 0, $pt2a_sroa_0_0_copyload107_pt1a_sroa_0_0_copyload94$0 = 0, $pt2a_sroa_0_0_copyload107_pt1a_sroa_0_0_copyload94$1 = 0, $pt2a_sroa_1_8_copyload112_pt1a_sroa_1_8_copyload99$0 = 0, $pt2a_sroa_1_8_copyload112_pt1a_sroa_1_8_copyload99$1 = 0, $cmp33_i = 0, $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228$0 = 0, $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228$1 = 0, $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107229$0 = 0, $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107229$1 = 0, $pt2a_sroa_1_8_copyload112_pt1a_sroa_1_8_copyload99230$0 = 0, $pt2a_sroa_1_8_copyload112_pt1a_sroa_1_8_copyload99230$1 = 0, $pt2a_sroa_0_0_copyload107_pt1a_sroa_0_0_copyload94231$0 = 0, $pt2a_sroa_0_0_copyload107_pt1a_sroa_0_0_copyload94231$1 = 0, $13 = 0, $agg_tmp2_sroa_0_0__idx = 0, $agg_tmp2_sroa_0_0_copyload$0 = 0, $agg_tmp2_sroa_0_0_copyload$1 = 0, $agg_tmp2_sroa_1_8__idx116 = 0, $agg_tmp2_sroa_1_8_copyload$0 = 0, $agg_tmp2_sroa_1_8_copyload$1 = 0, $14 = 0, $agg_tmp3_sroa_0_0__idx = 0, $agg_tmp3_sroa_0_0_copyload$0 = 0, $agg_tmp3_sroa_0_0_copyload$1 = 0, $agg_tmp3_sroa_1_8__idx118 = 0, $agg_tmp3_sroa_1_8_copyload$0 = 0, $agg_tmp3_sroa_1_8_copyload$1 = 0, $sub3_i$0 = 0, $sub3_i$1 = 0, $sub13_i$0 = 0, $sub13_i$1 = 0, $19 = 0, $agg_tmp7_sroa_0_0__idx = 0, $agg_tmp7_sroa_0_0_copyload$0 = 0, $agg_tmp7_sroa_0_0_copyload$1 = 0, $agg_tmp7_sroa_1_8__idx120 = 0, $agg_tmp7_sroa_1_8_copyload$0 = 0, $agg_tmp7_sroa_1_8_copyload$1 = 0, $sub3_i48$0 = 0, $sub3_i48$1 = 0, $sub13_i58$0 = 0, $sub13_i58$1 = 0, $24 = 0, $agg_tmp13_sroa_0_0__idx = 0, $agg_tmp13_sroa_0_0_copyload$0 = 0, $agg_tmp13_sroa_0_0_copyload$1 = 0, $agg_tmp13_sroa_1_8__idx183 = 0, $agg_tmp13_sroa_1_8_copyload$0 = 0, $agg_tmp13_sroa_1_8_copyload$1 = 0, $25 = 0, $agg_tmp15_sroa_0_0__idx = 0, $agg_tmp15_sroa_0_0_copyload$0 = 0, $agg_tmp15_sroa_0_0_copyload$1 = 0, $agg_tmp15_sroa_1_8__idx204 = 0, $agg_tmp15_sroa_1_8_copyload$0 = 0, $agg_tmp15_sroa_1_8_copyload$1 = 0, $div_i$0 = 0, $div_i$1 = 0, $$etemp$76$1 = 0, $cmp_i_i85 = 0, $sub_i_i$0 = 0, $cond_i_i$1 = 0, $$etemp$78$1 = 0, $cmp13_i = 0, $agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$0 = 0, $agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$1 = 0, $agg_tmp15_sroa_0_0_copyload_agg_tmp13_sroa_0_0_copyload$0 = 0, $agg_tmp15_sroa_0_0_copyload_agg_tmp13_sroa_0_0_copyload$1 = 0, $storemerge242$0 = 0, $storemerge242$1 = 0, $storemerge239$0 = 0, $storemerge239$1 = 0, $cmp23_i = 0, $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107_agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$0 = 0, $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107_agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$1 = 0, $26$1 = 0, $cmp38_i = 0, $agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$0 = 0, $agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$1 = 0, $agg_tmp15_sroa_1_8_copyload_agg_tmp13_sroa_1_8_copyload235$0 = 0, $agg_tmp15_sroa_1_8_copyload_agg_tmp13_sroa_1_8_copyload235$1 = 0, $storemerge238$0 = 0, $storemerge238$1 = 0, $storemerge$0 = 0, $storemerge$1 = 0, $cmp49_i = 0, $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228_agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$0 = 0, $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228_agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$1 = 0, $27$1 = 0, $29 = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $tmp_i34 = __stackBase__ | 0;
 $ref_tmp_i35 = __stackBase__ + 16 | 0;
 $tmp4_i36 = __stackBase__ + 32 | 0;
 $ref_tmp5_i37 = __stackBase__ + 48 | 0;
 $tmp6_i38 = __stackBase__ + 64 | 0;
 $ref_tmp10_i39 = __stackBase__ + 80 | 0;
 $tmp_i = __stackBase__ + 96 | 0;
 $ref_tmp_i = __stackBase__ + 112 | 0;
 $tmp4_i = __stackBase__ + 128 | 0;
 $ref_tmp5_i = __stackBase__ + 144 | 0;
 $tmp6_i = __stackBase__ + 160 | 0;
 $ref_tmp10_i = __stackBase__ + 176 | 0;
 $0 = HEAP32[$pp >> 2] | 0;
 if (($0 | 0) == 0) {
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $pt1a_sroa_0_0__idx93 = $pt1 | 0;
 $pt1a_sroa_0_0_copyload94$0 = HEAP32[$pt1a_sroa_0_0__idx93 >> 2] | 0;
 $pt1a_sroa_0_0_copyload94$1 = HEAP32[$pt1a_sroa_0_0__idx93 + 4 >> 2] | 0;
 $pt1a_sroa_1_8__idx98 = $pt1 + 8 | 0;
 $pt1a_sroa_1_8_copyload99$0 = HEAP32[$pt1a_sroa_1_8__idx98 >> 2] | 0;
 $pt1a_sroa_1_8_copyload99$1 = HEAP32[$pt1a_sroa_1_8__idx98 + 4 >> 2] | 0;
 $pt2a_sroa_0_0__idx106 = $pt2 | 0;
 $pt2a_sroa_0_0_copyload107$0 = HEAP32[$pt2a_sroa_0_0__idx106 >> 2] | 0;
 $pt2a_sroa_0_0_copyload107$1 = HEAP32[$pt2a_sroa_0_0__idx106 + 4 >> 2] | 0;
 $pt2a_sroa_1_8__idx111 = $pt2 + 8 | 0;
 $pt2a_sroa_1_8_copyload112$0 = HEAP32[$pt2a_sroa_1_8__idx111 >> 2] | 0;
 $pt2a_sroa_1_8_copyload112$1 = HEAP32[$pt2a_sroa_1_8__idx111 + 4 >> 2] | 0;
 $sub_i$0 = _i64Subtract($pt1a_sroa_1_8_copyload99$0, $pt1a_sroa_1_8_copyload99$1, $pt2a_sroa_1_8_copyload112$0, $pt2a_sroa_1_8_copyload112$1) | 0;
 $sub_i$1 = tempRet0;
 $lo_i_i_i = $tmp_i + 8 | 0;
 $hi_i_i_i = $tmp_i | 0;
 $_lo_lobit_i_i_i$0 = $sub_i$1 >> 31 | (($sub_i$1 | 0) < 0 ? -1 : 0) << 1;
 $_lo_lobit_i_i_i$1 = (($sub_i$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub_i$1 | 0) < 0 ? -1 : 0) << 1;
 $lo_i_i1_i = $ref_tmp_i + 8 | 0;
 $hi_i_i2_i = $ref_tmp_i | 0;
 $sub9_i$0 = _i64Subtract($pt1a_sroa_0_0_copyload94$0, $pt1a_sroa_0_0_copyload94$1, $pt2a_sroa_0_0_copyload107$0, $pt2a_sroa_0_0_copyload107$1) | 0;
 $sub9_i$1 = tempRet0;
 $lo_i_i7_i = $tmp6_i + 8 | 0;
 $hi_i_i8_i = $tmp6_i | 0;
 $_lo_lobit_i_i9_i$0 = $sub9_i$1 >> 31 | (($sub9_i$1 | 0) < 0 ? -1 : 0) << 1;
 $_lo_lobit_i_i9_i$1 = (($sub9_i$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub9_i$1 | 0) < 0 ? -1 : 0) << 1;
 $lo_i_i4_i = $ref_tmp10_i + 8 | 0;
 $hi_i_i5_i = $ref_tmp10_i | 0;
 $hi_i_i = $tmp4_i | 0;
 $hi2_i_i = $ref_tmp5_i | 0;
 $lo_i_i = $tmp4_i + 8 | 0;
 $lo3_i_i = $ref_tmp5_i + 8 | 0;
 $lo_i_i_i43 = $tmp_i34 + 8 | 0;
 $hi_i_i_i44 = $tmp_i34 | 0;
 $lo_i_i1_i49 = $ref_tmp_i35 + 8 | 0;
 $hi_i_i2_i50 = $ref_tmp_i35 | 0;
 $lo_i_i7_i54 = $tmp6_i38 + 8 | 0;
 $hi_i_i8_i55 = $tmp6_i38 | 0;
 $lo_i_i4_i59 = $ref_tmp10_i39 + 8 | 0;
 $hi_i_i5_i60 = $ref_tmp10_i39 | 0;
 $hi_i_i62 = $tmp4_i36 | 0;
 $hi2_i_i63 = $ref_tmp5_i37 | 0;
 $lo_i_i65 = $tmp4_i36 + 8 | 0;
 $lo3_i_i66 = $ref_tmp5_i37 + 8 | 0;
 $cmp_i = ($pt1a_sroa_1_8_copyload99$0 | 0) == ($pt2a_sroa_1_8_copyload112$0 | 0) & ($pt1a_sroa_1_8_copyload99$1 | 0) == ($pt2a_sroa_1_8_copyload112$1 | 0);
 $cmp9_i = ($pt1a_sroa_0_0_copyload94$1 | 0) > ($pt2a_sroa_0_0_copyload107$1 | 0) | ($pt1a_sroa_0_0_copyload94$1 | 0) == ($pt2a_sroa_0_0_copyload107$1 | 0) & $pt1a_sroa_0_0_copyload94$0 >>> 0 > $pt2a_sroa_0_0_copyload107$0 >>> 0;
 $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112$0 = $cmp9_i ? $pt1a_sroa_1_8_copyload99$0 : $pt2a_sroa_1_8_copyload112$0;
 $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112$1 = $cmp9_i ? $pt1a_sroa_1_8_copyload99$1 : $pt2a_sroa_1_8_copyload112$1;
 $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107$0 = $cmp9_i ? $pt1a_sroa_0_0_copyload94$0 : $pt2a_sroa_0_0_copyload107$0;
 $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107$1 = $cmp9_i ? $pt1a_sroa_0_0_copyload94$1 : $pt2a_sroa_0_0_copyload107$1;
 $pt2a_sroa_0_0_copyload107_pt1a_sroa_0_0_copyload94$0 = $cmp9_i ? $pt2a_sroa_0_0_copyload107$0 : $pt1a_sroa_0_0_copyload94$0;
 $pt2a_sroa_0_0_copyload107_pt1a_sroa_0_0_copyload94$1 = $cmp9_i ? $pt2a_sroa_0_0_copyload107$1 : $pt1a_sroa_0_0_copyload94$1;
 $pt2a_sroa_1_8_copyload112_pt1a_sroa_1_8_copyload99$0 = $cmp9_i ? $pt2a_sroa_1_8_copyload112$0 : $pt1a_sroa_1_8_copyload99$0;
 $pt2a_sroa_1_8_copyload112_pt1a_sroa_1_8_copyload99$1 = $cmp9_i ? $pt2a_sroa_1_8_copyload112$1 : $pt1a_sroa_1_8_copyload99$1;
 $cmp33_i = ($pt1a_sroa_1_8_copyload99$1 | 0) < ($pt2a_sroa_1_8_copyload112$1 | 0) | ($pt1a_sroa_1_8_copyload99$1 | 0) == ($pt2a_sroa_1_8_copyload112$1 | 0) & $pt1a_sroa_1_8_copyload99$0 >>> 0 < $pt2a_sroa_1_8_copyload112$0 >>> 0;
 $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228$0 = $cmp33_i ? $pt1a_sroa_1_8_copyload99$0 : $pt2a_sroa_1_8_copyload112$0;
 $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228$1 = $cmp33_i ? $pt1a_sroa_1_8_copyload99$1 : $pt2a_sroa_1_8_copyload112$1;
 $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107229$0 = $cmp33_i ? $pt1a_sroa_0_0_copyload94$0 : $pt2a_sroa_0_0_copyload107$0;
 $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107229$1 = $cmp33_i ? $pt1a_sroa_0_0_copyload94$1 : $pt2a_sroa_0_0_copyload107$1;
 $pt2a_sroa_1_8_copyload112_pt1a_sroa_1_8_copyload99230$0 = $cmp33_i ? $pt2a_sroa_1_8_copyload112$0 : $pt1a_sroa_1_8_copyload99$0;
 $pt2a_sroa_1_8_copyload112_pt1a_sroa_1_8_copyload99230$1 = $cmp33_i ? $pt2a_sroa_1_8_copyload112$1 : $pt1a_sroa_1_8_copyload99$1;
 $pt2a_sroa_0_0_copyload107_pt1a_sroa_0_0_copyload94231$0 = $cmp33_i ? $pt2a_sroa_0_0_copyload107$0 : $pt1a_sroa_0_0_copyload94$0;
 $pt2a_sroa_0_0_copyload107_pt1a_sroa_0_0_copyload94231$1 = $cmp33_i ? $pt2a_sroa_0_0_copyload107$1 : $pt1a_sroa_0_0_copyload94$1;
 $13 = $0;
 L5527 : while (1) {
  $agg_tmp2_sroa_0_0__idx = $13 + 8 | 0;
  $agg_tmp2_sroa_0_0_copyload$0 = HEAP32[$agg_tmp2_sroa_0_0__idx >> 2] | 0;
  $agg_tmp2_sroa_0_0_copyload$1 = HEAP32[$agg_tmp2_sroa_0_0__idx + 4 >> 2] | 0;
  $agg_tmp2_sroa_1_8__idx116 = $13 + 16 | 0;
  $agg_tmp2_sroa_1_8_copyload$0 = HEAP32[$agg_tmp2_sroa_1_8__idx116 >> 2] | 0;
  $agg_tmp2_sroa_1_8_copyload$1 = HEAP32[$agg_tmp2_sroa_1_8__idx116 + 4 >> 2] | 0;
  $14 = HEAP32[$13 + 28 >> 2] | 0;
  $agg_tmp3_sroa_0_0__idx = $14 + 8 | 0;
  $agg_tmp3_sroa_0_0_copyload$0 = HEAP32[$agg_tmp3_sroa_0_0__idx >> 2] | 0;
  $agg_tmp3_sroa_0_0_copyload$1 = HEAP32[$agg_tmp3_sroa_0_0__idx + 4 >> 2] | 0;
  $agg_tmp3_sroa_1_8__idx118 = $14 + 16 | 0;
  $agg_tmp3_sroa_1_8_copyload$0 = HEAP32[$agg_tmp3_sroa_1_8__idx118 >> 2] | 0;
  $agg_tmp3_sroa_1_8_copyload$1 = HEAP32[$agg_tmp3_sroa_1_8__idx118 + 4 >> 2] | 0;
  HEAP32[$lo_i_i_i >> 2] = $sub_i$0;
  HEAP32[$lo_i_i_i + 4 >> 2] = $sub_i$1;
  HEAP32[$hi_i_i_i >> 2] = $_lo_lobit_i_i_i$0;
  HEAP32[$hi_i_i_i + 4 >> 2] = $_lo_lobit_i_i_i$1;
  $sub3_i$0 = _i64Subtract($agg_tmp2_sroa_0_0_copyload$0, $agg_tmp2_sroa_0_0_copyload$1, $agg_tmp3_sroa_0_0_copyload$0, $agg_tmp3_sroa_0_0_copyload$1) | 0;
  $sub3_i$1 = tempRet0;
  HEAP32[$lo_i_i1_i >> 2] = $sub3_i$0;
  HEAP32[$lo_i_i1_i + 4 >> 2] = $sub3_i$1;
  HEAP32[$hi_i_i2_i >> 2] = $sub3_i$1 >> 31 | (($sub3_i$1 | 0) < 0 ? -1 : 0) << 1;
  HEAP32[$hi_i_i2_i + 4 >> 2] = (($sub3_i$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub3_i$1 | 0) < 0 ? -1 : 0) << 1;
  __ZNK10ClipperLib6Int128mlERKS0_($tmp4_i, $tmp_i, $ref_tmp_i);
  HEAP32[$lo_i_i7_i >> 2] = $sub9_i$0;
  HEAP32[$lo_i_i7_i + 4 >> 2] = $sub9_i$1;
  HEAP32[$hi_i_i8_i >> 2] = $_lo_lobit_i_i9_i$0;
  HEAP32[$hi_i_i8_i + 4 >> 2] = $_lo_lobit_i_i9_i$1;
  $sub13_i$0 = _i64Subtract($agg_tmp2_sroa_1_8_copyload$0, $agg_tmp2_sroa_1_8_copyload$1, $agg_tmp3_sroa_1_8_copyload$0, $agg_tmp3_sroa_1_8_copyload$1) | 0;
  $sub13_i$1 = tempRet0;
  HEAP32[$lo_i_i4_i >> 2] = $sub13_i$0;
  HEAP32[$lo_i_i4_i + 4 >> 2] = $sub13_i$1;
  HEAP32[$hi_i_i5_i >> 2] = $sub13_i$1 >> 31 | (($sub13_i$1 | 0) < 0 ? -1 : 0) << 1;
  HEAP32[$hi_i_i5_i + 4 >> 2] = (($sub13_i$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub13_i$1 | 0) < 0 ? -1 : 0) << 1;
  __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp5_i, $tmp6_i, $ref_tmp10_i);
  L5529 : do {
   if ((HEAP32[$hi_i_i >> 2] | 0) == (HEAP32[$hi2_i_i >> 2] | 0) & (HEAP32[$hi_i_i + 4 >> 2] | 0) == (HEAP32[$hi2_i_i + 4 >> 2] | 0)) {
    if (!((HEAP32[$lo_i_i >> 2] | 0) == (HEAP32[$lo3_i_i >> 2] | 0) & (HEAP32[$lo_i_i + 4 >> 2] | 0) == (HEAP32[$lo3_i_i + 4 >> 2] | 0))) {
     break;
    }
    $19 = HEAP32[$pp >> 2] | 0;
    $agg_tmp7_sroa_0_0__idx = $19 + 8 | 0;
    $agg_tmp7_sroa_0_0_copyload$0 = HEAP32[$agg_tmp7_sroa_0_0__idx >> 2] | 0;
    $agg_tmp7_sroa_0_0_copyload$1 = HEAP32[$agg_tmp7_sroa_0_0__idx + 4 >> 2] | 0;
    $agg_tmp7_sroa_1_8__idx120 = $19 + 16 | 0;
    $agg_tmp7_sroa_1_8_copyload$0 = HEAP32[$agg_tmp7_sroa_1_8__idx120 >> 2] | 0;
    $agg_tmp7_sroa_1_8_copyload$1 = HEAP32[$agg_tmp7_sroa_1_8__idx120 + 4 >> 2] | 0;
    HEAP32[$lo_i_i_i43 >> 2] = $sub_i$0;
    HEAP32[$lo_i_i_i43 + 4 >> 2] = $sub_i$1;
    HEAP32[$hi_i_i_i44 >> 2] = $_lo_lobit_i_i_i$0;
    HEAP32[$hi_i_i_i44 + 4 >> 2] = $_lo_lobit_i_i_i$1;
    $sub3_i48$0 = _i64Subtract($pt2a_sroa_0_0_copyload107$0, $pt2a_sroa_0_0_copyload107$1, $agg_tmp7_sroa_0_0_copyload$0, $agg_tmp7_sroa_0_0_copyload$1) | 0;
    $sub3_i48$1 = tempRet0;
    HEAP32[$lo_i_i1_i49 >> 2] = $sub3_i48$0;
    HEAP32[$lo_i_i1_i49 + 4 >> 2] = $sub3_i48$1;
    HEAP32[$hi_i_i2_i50 >> 2] = $sub3_i48$1 >> 31 | (($sub3_i48$1 | 0) < 0 ? -1 : 0) << 1;
    HEAP32[$hi_i_i2_i50 + 4 >> 2] = (($sub3_i48$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub3_i48$1 | 0) < 0 ? -1 : 0) << 1;
    __ZNK10ClipperLib6Int128mlERKS0_($tmp4_i36, $tmp_i34, $ref_tmp_i35);
    HEAP32[$lo_i_i7_i54 >> 2] = $sub9_i$0;
    HEAP32[$lo_i_i7_i54 + 4 >> 2] = $sub9_i$1;
    HEAP32[$hi_i_i8_i55 >> 2] = $_lo_lobit_i_i9_i$0;
    HEAP32[$hi_i_i8_i55 + 4 >> 2] = $_lo_lobit_i_i9_i$1;
    $sub13_i58$0 = _i64Subtract($pt2a_sroa_1_8_copyload112$0, $pt2a_sroa_1_8_copyload112$1, $agg_tmp7_sroa_1_8_copyload$0, $agg_tmp7_sroa_1_8_copyload$1) | 0;
    $sub13_i58$1 = tempRet0;
    HEAP32[$lo_i_i4_i59 >> 2] = $sub13_i58$0;
    HEAP32[$lo_i_i4_i59 + 4 >> 2] = $sub13_i58$1;
    HEAP32[$hi_i_i5_i60 >> 2] = $sub13_i58$1 >> 31 | (($sub13_i58$1 | 0) < 0 ? -1 : 0) << 1;
    HEAP32[$hi_i_i5_i60 + 4 >> 2] = (($sub13_i58$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub13_i58$1 | 0) < 0 ? -1 : 0) << 1;
    __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp5_i37, $tmp6_i38, $ref_tmp10_i39);
    if (!((HEAP32[$hi_i_i62 >> 2] | 0) == (HEAP32[$hi2_i_i63 >> 2] | 0) & (HEAP32[$hi_i_i62 + 4 >> 2] | 0) == (HEAP32[$hi2_i_i63 + 4 >> 2] | 0))) {
     break;
    }
    if (!((HEAP32[$lo_i_i65 >> 2] | 0) == (HEAP32[$lo3_i_i66 >> 2] | 0) & (HEAP32[$lo_i_i65 + 4 >> 2] | 0) == (HEAP32[$lo3_i_i66 + 4 >> 2] | 0))) {
     break;
    }
    $24 = HEAP32[$pp >> 2] | 0;
    $agg_tmp13_sroa_0_0__idx = $24 + 8 | 0;
    $agg_tmp13_sroa_0_0_copyload$0 = HEAP32[$agg_tmp13_sroa_0_0__idx >> 2] | 0;
    $agg_tmp13_sroa_0_0_copyload$1 = HEAP32[$agg_tmp13_sroa_0_0__idx + 4 >> 2] | 0;
    $agg_tmp13_sroa_1_8__idx183 = $24 + 16 | 0;
    $agg_tmp13_sroa_1_8_copyload$0 = HEAP32[$agg_tmp13_sroa_1_8__idx183 >> 2] | 0;
    $agg_tmp13_sroa_1_8_copyload$1 = HEAP32[$agg_tmp13_sroa_1_8__idx183 + 4 >> 2] | 0;
    $25 = HEAP32[$24 + 28 >> 2] | 0;
    $agg_tmp15_sroa_0_0__idx = $25 + 8 | 0;
    $agg_tmp15_sroa_0_0_copyload$0 = HEAP32[$agg_tmp15_sroa_0_0__idx >> 2] | 0;
    $agg_tmp15_sroa_0_0_copyload$1 = HEAP32[$agg_tmp15_sroa_0_0__idx + 4 >> 2] | 0;
    $agg_tmp15_sroa_1_8__idx204 = $25 + 16 | 0;
    $agg_tmp15_sroa_1_8_copyload$0 = HEAP32[$agg_tmp15_sroa_1_8__idx204 >> 2] | 0;
    $agg_tmp15_sroa_1_8_copyload$1 = HEAP32[$agg_tmp15_sroa_1_8__idx204 + 4 >> 2] | 0;
    do {
     if (!$cmp_i) {
      $div_i$0 = ___divdi3($sub9_i$0, $sub9_i$1, $sub_i$0, $sub_i$1) | 0;
      $div_i$1 = tempRet0;
      $$etemp$76$1 = 0;
      $cmp_i_i85 = ($div_i$1 | 0) < ($$etemp$76$1 | 0) | ($div_i$1 | 0) == ($$etemp$76$1 | 0) & $div_i$0 >>> 0 < 0 >>> 0;
      $sub_i_i$0 = _i64Subtract(0, 0, $div_i$0, $div_i$1) | 0;
      $cond_i_i$1 = $cmp_i_i85 ? tempRet0 : $div_i$1;
      $$etemp$78$1 = 0;
      if (($cond_i_i$1 | 0) > ($$etemp$78$1 | 0) | ($cond_i_i$1 | 0) == ($$etemp$78$1 | 0) & ($cmp_i_i85 ? $sub_i_i$0 : $div_i$0) >>> 0 > 1 >>> 0) {
       break;
      }
      $cmp38_i = ($agg_tmp13_sroa_1_8_copyload$1 | 0) < ($agg_tmp15_sroa_1_8_copyload$1 | 0) | ($agg_tmp13_sroa_1_8_copyload$1 | 0) == ($agg_tmp15_sroa_1_8_copyload$1 | 0) & $agg_tmp13_sroa_1_8_copyload$0 >>> 0 < $agg_tmp15_sroa_1_8_copyload$0 >>> 0;
      $agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$0 = $cmp38_i ? $agg_tmp13_sroa_1_8_copyload$0 : $agg_tmp15_sroa_1_8_copyload$0;
      $agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$1 = $cmp38_i ? $agg_tmp13_sroa_1_8_copyload$1 : $agg_tmp15_sroa_1_8_copyload$1;
      $agg_tmp15_sroa_1_8_copyload_agg_tmp13_sroa_1_8_copyload235$0 = $cmp38_i ? $agg_tmp15_sroa_1_8_copyload$0 : $agg_tmp13_sroa_1_8_copyload$0;
      $agg_tmp15_sroa_1_8_copyload_agg_tmp13_sroa_1_8_copyload235$1 = $cmp38_i ? $agg_tmp15_sroa_1_8_copyload$1 : $agg_tmp13_sroa_1_8_copyload$1;
      if (($pt2a_sroa_1_8_copyload112_pt1a_sroa_1_8_copyload99230$1 | 0) < ($agg_tmp15_sroa_1_8_copyload_agg_tmp13_sroa_1_8_copyload235$1 | 0) | ($pt2a_sroa_1_8_copyload112_pt1a_sroa_1_8_copyload99230$1 | 0) == ($agg_tmp15_sroa_1_8_copyload_agg_tmp13_sroa_1_8_copyload235$1 | 0) & $pt2a_sroa_1_8_copyload112_pt1a_sroa_1_8_copyload99230$0 >>> 0 < $agg_tmp15_sroa_1_8_copyload_agg_tmp13_sroa_1_8_copyload235$0 >>> 0) {
       $storemerge$1 = $pt2a_sroa_1_8_copyload112_pt1a_sroa_1_8_copyload99230$1;
       $storemerge$0 = $pt2a_sroa_1_8_copyload112_pt1a_sroa_1_8_copyload99230$0;
       $storemerge238$1 = $pt2a_sroa_0_0_copyload107_pt1a_sroa_0_0_copyload94231$1;
       $storemerge238$0 = $pt2a_sroa_0_0_copyload107_pt1a_sroa_0_0_copyload94231$0;
      } else {
       $storemerge$1 = $agg_tmp15_sroa_1_8_copyload_agg_tmp13_sroa_1_8_copyload235$1;
       $storemerge$0 = $agg_tmp15_sroa_1_8_copyload_agg_tmp13_sroa_1_8_copyload235$0;
       $storemerge238$1 = $cmp38_i ? $agg_tmp15_sroa_0_0_copyload$1 : $agg_tmp13_sroa_0_0_copyload$1;
       $storemerge238$0 = $cmp38_i ? $agg_tmp15_sroa_0_0_copyload$0 : $agg_tmp13_sroa_0_0_copyload$0;
      }
      HEAP32[$pt1a_sroa_0_0__idx93 >> 2] = $storemerge238$0;
      HEAP32[$pt1a_sroa_0_0__idx93 + 4 >> 2] = $storemerge238$1;
      HEAP32[$pt1a_sroa_1_8__idx98 >> 2] = $storemerge$0;
      HEAP32[$pt1a_sroa_1_8__idx98 + 4 >> 2] = $storemerge$1;
      $cmp49_i = ($pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228$1 | 0) > ($agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$1 | 0) | ($pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228$1 | 0) == ($agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$1 | 0) & $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228$0 >>> 0 > $agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$0 >>> 0;
      $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228_agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$0 = $cmp49_i ? $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228$0 : $agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$0;
      $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228_agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$1 = $cmp49_i ? $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228$1 : $agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$1;
      HEAP32[$pt2a_sroa_0_0__idx106 >> 2] = $cmp49_i ? $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107229$0 : $cmp38_i ? $agg_tmp13_sroa_0_0_copyload$0 : $agg_tmp15_sroa_0_0_copyload$0;
      HEAP32[$pt2a_sroa_0_0__idx106 + 4 >> 2] = $cmp49_i ? $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107229$1 : $cmp38_i ? $agg_tmp13_sroa_0_0_copyload$1 : $agg_tmp15_sroa_0_0_copyload$1;
      HEAP32[$pt2a_sroa_1_8__idx111 >> 2] = $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228_agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$0;
      HEAP32[$pt2a_sroa_1_8__idx111 + 4 >> 2] = $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228_agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$1;
      $27$1 = HEAP32[$pt1a_sroa_1_8__idx98 + 4 >> 2] | 0;
      if (($27$1 | 0) > ($pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228_agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$1 | 0) | ($27$1 | 0) == ($pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228_agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$1 | 0) & (HEAP32[$pt1a_sroa_1_8__idx98 >> 2] | 0) >>> 0 > $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112228_agg_tmp13_sroa_1_8_copyload_agg_tmp15_sroa_1_8_copyload232$0 >>> 0) {
       $retval_0 = 1;
       label = 4935;
       break L5527;
      } else {
       break L5529;
      }
     }
    } while (0);
    $cmp13_i = ($agg_tmp13_sroa_0_0_copyload$1 | 0) > ($agg_tmp15_sroa_0_0_copyload$1 | 0) | ($agg_tmp13_sroa_0_0_copyload$1 | 0) == ($agg_tmp15_sroa_0_0_copyload$1 | 0) & $agg_tmp13_sroa_0_0_copyload$0 >>> 0 > $agg_tmp15_sroa_0_0_copyload$0 >>> 0;
    $agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$0 = $cmp13_i ? $agg_tmp13_sroa_0_0_copyload$0 : $agg_tmp15_sroa_0_0_copyload$0;
    $agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$1 = $cmp13_i ? $agg_tmp13_sroa_0_0_copyload$1 : $agg_tmp15_sroa_0_0_copyload$1;
    $agg_tmp15_sroa_0_0_copyload_agg_tmp13_sroa_0_0_copyload$0 = $cmp13_i ? $agg_tmp15_sroa_0_0_copyload$0 : $agg_tmp13_sroa_0_0_copyload$0;
    $agg_tmp15_sroa_0_0_copyload_agg_tmp13_sroa_0_0_copyload$1 = $cmp13_i ? $agg_tmp15_sroa_0_0_copyload$1 : $agg_tmp13_sroa_0_0_copyload$1;
    if (($pt2a_sroa_0_0_copyload107_pt1a_sroa_0_0_copyload94$1 | 0) > ($agg_tmp15_sroa_0_0_copyload_agg_tmp13_sroa_0_0_copyload$1 | 0) | ($pt2a_sroa_0_0_copyload107_pt1a_sroa_0_0_copyload94$1 | 0) == ($agg_tmp15_sroa_0_0_copyload_agg_tmp13_sroa_0_0_copyload$1 | 0) & $pt2a_sroa_0_0_copyload107_pt1a_sroa_0_0_copyload94$0 >>> 0 > $agg_tmp15_sroa_0_0_copyload_agg_tmp13_sroa_0_0_copyload$0 >>> 0) {
     $storemerge239$1 = $pt2a_sroa_1_8_copyload112_pt1a_sroa_1_8_copyload99$1;
     $storemerge239$0 = $pt2a_sroa_1_8_copyload112_pt1a_sroa_1_8_copyload99$0;
     $storemerge242$1 = $pt2a_sroa_0_0_copyload107_pt1a_sroa_0_0_copyload94$1;
     $storemerge242$0 = $pt2a_sroa_0_0_copyload107_pt1a_sroa_0_0_copyload94$0;
    } else {
     $storemerge239$1 = $cmp13_i ? $agg_tmp15_sroa_1_8_copyload$1 : $agg_tmp13_sroa_1_8_copyload$1;
     $storemerge239$0 = $cmp13_i ? $agg_tmp15_sroa_1_8_copyload$0 : $agg_tmp13_sroa_1_8_copyload$0;
     $storemerge242$1 = $agg_tmp15_sroa_0_0_copyload_agg_tmp13_sroa_0_0_copyload$1;
     $storemerge242$0 = $agg_tmp15_sroa_0_0_copyload_agg_tmp13_sroa_0_0_copyload$0;
    }
    HEAP32[$pt1a_sroa_0_0__idx93 >> 2] = $storemerge242$0;
    HEAP32[$pt1a_sroa_0_0__idx93 + 4 >> 2] = $storemerge242$1;
    HEAP32[$pt1a_sroa_1_8__idx98 >> 2] = $storemerge239$0;
    HEAP32[$pt1a_sroa_1_8__idx98 + 4 >> 2] = $storemerge239$1;
    $cmp23_i = ($pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107$1 | 0) < ($agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$1 | 0) | ($pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107$1 | 0) == ($agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$1 | 0) & $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107$0 >>> 0 < $agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$0 >>> 0;
    $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107_agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$0 = $cmp23_i ? $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107$0 : $agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$0;
    $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107_agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$1 = $cmp23_i ? $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107$1 : $agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$1;
    HEAP32[$pt2a_sroa_0_0__idx106 >> 2] = $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107_agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$0;
    HEAP32[$pt2a_sroa_0_0__idx106 + 4 >> 2] = $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107_agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$1;
    HEAP32[$pt2a_sroa_1_8__idx111 >> 2] = $cmp23_i ? $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112$0 : $cmp13_i ? $agg_tmp13_sroa_1_8_copyload$0 : $agg_tmp15_sroa_1_8_copyload$0;
    HEAP32[$pt2a_sroa_1_8__idx111 + 4 >> 2] = $cmp23_i ? $pt1a_sroa_1_8_copyload99_pt2a_sroa_1_8_copyload112$1 : $cmp13_i ? $agg_tmp13_sroa_1_8_copyload$1 : $agg_tmp15_sroa_1_8_copyload$1;
    $26$1 = HEAP32[$pt1a_sroa_0_0__idx93 + 4 >> 2] | 0;
    if (($26$1 | 0) < ($pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107_agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$1 | 0) | ($26$1 | 0) == ($pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107_agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$1 | 0) & (HEAP32[$pt1a_sroa_0_0__idx93 >> 2] | 0) >>> 0 < $pt1a_sroa_0_0_copyload94_pt2a_sroa_0_0_copyload107_agg_tmp13_sroa_0_0_copyload_agg_tmp15_sroa_0_0_copyload$0 >>> 0) {
     $retval_0 = 1;
     label = 4937;
     break L5527;
    }
   }
  } while (0);
  $29 = HEAP32[(HEAP32[$pp >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$pp >> 2] = $29;
  if (($29 | 0) == ($0 | 0)) {
   $retval_0 = 0;
   label = 4936;
   break;
  } else {
   $13 = $29;
  }
 }
 if ((label | 0) == 4937) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else if ((label | 0) == 4935) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else if ((label | 0) == 4936) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZN10ClipperLib11ClipperBaseD0Ev($this) {
 $this = $this | 0;
 __ZN10ClipperLib11ClipperBaseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZN10ClipperLib11ClipperBaseD2Ev($this) {
 $this = $this | 0;
 var $m_MinimaList_i = 0, $1 = 0, $2 = 0, $3 = 0, $__end__i_i = 0, $5 = 0, $__begin__i_i = 0, $6 = 0, $scevgep28 = 0, $10 = 0, $11 = 0, $i_0_i21 = 0, $12 = 0, $14 = 0, $15 = 0, $inc_i = 0, $16 = 0, $17 = 0;
 HEAP32[$this >> 2] = 12016;
 $m_MinimaList_i = $this + 8 | 0;
 $1 = HEAP32[$m_MinimaList_i >> 2] | 0;
 if (($1 | 0) != 0) {
  $2 = $1;
  while (1) {
   $3 = HEAP32[$2 + 16 >> 2] | 0;
   __ZdlPv($2);
   HEAP32[$m_MinimaList_i >> 2] = $3;
   if (($3 | 0) == 0) {
    break;
   } else {
    $2 = $3;
   }
  }
 }
 HEAP32[$this + 4 >> 2] = 0;
 $__end__i_i = $this + 20 | 0;
 $5 = HEAP32[$__end__i_i >> 2] | 0;
 $__begin__i_i = $this + 16 | 0;
 $6 = HEAP32[$__begin__i_i >> 2] | 0;
 do {
  if (($5 | 0) == ($6 | 0)) {
   $17 = $5;
   $16 = $5;
  } else {
   $i_0_i21 = 0;
   $11 = $6;
   $10 = $5;
   while (1) {
    $12 = HEAP32[$11 + ($i_0_i21 << 2) >> 2] | 0;
    if (($12 | 0) == 0) {
     $15 = $10;
     $14 = $11;
    } else {
     __ZdaPv($12);
     $15 = HEAP32[$__end__i_i >> 2] | 0;
     $14 = HEAP32[$__begin__i_i >> 2] | 0;
    }
    $inc_i = $i_0_i21 + 1 | 0;
    if ($inc_i >>> 0 < $15 - $14 >> 2 >>> 0) {
     $i_0_i21 = $inc_i;
     $11 = $14;
     $10 = $15;
    } else {
     break;
    }
   }
   if (($14 | 0) == ($15 | 0)) {
    $17 = $15;
    $16 = $14;
    break;
   }
   $scevgep28 = $15 + ((($15 - 4 + (-$14 | 0) | 0) >>> 2 ^ -1) << 2) | 0;
   HEAP32[$__end__i_i >> 2] = $scevgep28;
   $17 = $scevgep28;
   $16 = $14;
  }
 } while (0);
 HEAP8[$this + 12 | 0] = 0;
 if (($16 | 0) == 0) {
  return;
 }
 if (($16 | 0) != ($17 | 0)) {
  HEAP32[$__end__i_i >> 2] = $17 + ((($17 - 4 + (-$16 | 0) | 0) >>> 2 ^ -1) << 2);
 }
 __ZdlPv($16);
 return;
}
function __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($this, $pg, $polyType) {
 $this = $this | 0;
 $pg = $pg | 0;
 $polyType = $polyType | 0;
 var $tmp_i365 = 0, $ref_tmp_i366 = 0, $tmp4_i367 = 0, $ref_tmp5_i368 = 0, $tmp6_i369 = 0, $ref_tmp10_i370 = 0, $tmp_i305 = 0, $ref_tmp_i306 = 0, $tmp4_i307 = 0, $ref_tmp5_i308 = 0, $tmp6_i309 = 0, $ref_tmp10_i310 = 0, $tmp_i245 = 0, $ref_tmp_i246 = 0, $tmp4_i247 = 0, $ref_tmp5_i248 = 0, $tmp6_i249 = 0, $ref_tmp10_i250 = 0, $tmp_i = 0, $ref_tmp_i = 0, $tmp4_i = 0, $ref_tmp5_i = 0, $tmp6_i = 0, $ref_tmp10_i = 0, $edges = 0, $__begin__i = 0, $1 = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $2 = 0, $call_i_i_i6_i_i = 0, $3 = 0, $4 = 0, $__n_addr_0_i_i_i = 0, $6 = 0, $dec_i_i_i = 0, $_pre = 0, $7 = 0, $8 = 0, $p_sroa_0_0_load441485544 = 0, $9 = 0, $m_UseFullRange553 = 0, $tobool = 0, $lo_i_i_i = 0, $hi_i_i_i = 0, $lo_i_i1_i = 0, $hi_i_i2_i = 0, $lo_i_i7_i = 0, $hi_i_i8_i = 0, $lo_i_i4_i = 0, $hi_i_i5_i = 0, $hi_i_i = 0, $hi2_i_i = 0, $lo_i_i = 0, $lo3_i_i = 0, $19 = 0, $i_0523 = 0, $maxVal_1522$0 = 0, $maxVal_1522$1 = 0, $j_0520 = 0, $X = 0, $20$0 = 0, $20$1 = 0, $$etemp$4$1 = 0, $cmp_i89 = 0, $sub_i$0 = 0, $cond_i$0 = 0, $cond_i$1 = 0, $Y = 0, $21$0 = 0, $21$1 = 0, $$etemp$8$1 = 0, $cmp_i90 = 0, $sub_i91$0 = 0, $cond_i92$1 = 0, $$etemp$10$1 = 0, $Y28 = 0, $22$0 = 0, $22$1 = 0, $$etemp$13$1 = 0, $cmp_i109 = 0, $sub_i110$0 = 0, $cond_i111$1 = 0, $$etemp$15$1 = 0, $exception = 0, $maxVal_2$0 = 0, $maxVal_2$1 = 0, $24 = 0, $X_i = 0, $25$0 = 0, $25$1 = 0, $X1_i = 0, $26$0 = 0, $26$1 = 0, $Y_i = 0, $Y2_i = 0, $sub = 0, $agg_tmp_sroa_0_0__idx = 0, $agg_tmp_sroa_0_0_copyload$0 = 0, $agg_tmp_sroa_0_0_copyload$1 = 0, $agg_tmp_sroa_1_8__idx447 = 0, $agg_tmp49_sroa_1_8__idx450 = 0, $agg_tmp49_sroa_1_8_copyload$0 = 0, $agg_tmp49_sroa_1_8_copyload$1 = 0, $agg_tmp52_sroa_1_8__idx454 = 0, $agg_tmp52_sroa_1_8_copyload$0 = 0, $agg_tmp52_sroa_1_8_copyload$1 = 0, $tobool56 = 0, $sub_i205$0 = 0, $sub_i205$1 = 0, $sub3_i$0 = 0, $sub3_i$1 = 0, $sub9_i$0 = 0, $sub9_i$1 = 0, $sub13_i$0 = 0, $sub13_i$1 = 0, $sub19_i$0 = 0, $mul_i$0 = 0, $mul_i$1 = 0, $sub22_i$0 = 0, $sub22_i$1 = 0, $sub25_i$0 = 0, $mul26_i$0 = 0, $retval_0_i = 0, $35 = 0, $X1_i213 = 0, $Y2_i216 = 0, $40 = 0, $j_1 = 0, $41 = 0, $42 = 0, $j_2 = 0, $inc76 = 0, $add = 0, $X1_i221 = 0, $Y2_i224 = 0, $X1_i229 = 0, $Y2_i232 = 0, $agg_tmp140_sroa_0_0__idx = 0, $agg_tmp140_sroa_1_8__idx464 = 0, $lo_i_i_i254 = 0, $hi_i_i_i255 = 0, $lo_i_i1_i260 = 0, $hi_i_i2_i261 = 0, $lo_i_i7_i265 = 0, $hi_i_i8_i266 = 0, $lo_i_i4_i270 = 0, $hi_i_i5_i271 = 0, $hi_i_i273 = 0, $hi2_i_i274 = 0, $lo_i_i277 = 0, $lo3_i_i278 = 0, $lo_i_i_i374 = 0, $hi_i_i_i375 = 0, $lo_i_i1_i380 = 0, $hi_i_i2_i381 = 0, $lo_i_i7_i385 = 0, $hi_i_i8_i386 = 0, $lo_i_i4_i390 = 0, $hi_i_i5_i391 = 0, $hi_i_i393 = 0, $hi2_i_i394 = 0, $lo_i_i397 = 0, $lo3_i_i398 = 0, $lo_i_i_i314 = 0, $hi_i_i_i315 = 0, $lo_i_i1_i320 = 0, $hi_i_i2_i321 = 0, $lo_i_i7_i325 = 0, $hi_i_i8_i326 = 0, $lo_i_i4_i330 = 0, $hi_i_i5_i331 = 0, $hi_i_i333 = 0, $hi2_i_i334 = 0, $lo_i_i337 = 0, $lo3_i_i338 = 0, $j_3510 = 0, $len_0507 = 0, $arrayidx_i407 = 0, $X_i220 = 0, $61$0 = 0, $61$1 = 0, $62$0 = 0, $62$1 = 0, $Y_i223 = 0, $65$0 = 0, $65$1 = 0, $66$0 = 0, $66$1 = 0, $67$0 = 0, $67$1 = 0, $agg_tmp97_sroa_1_8__idx467 = 0, $tobool107 = 0, $sub_i313$0 = 0, $sub_i313$1 = 0, $sub3_i319$0 = 0, $sub3_i319$1 = 0, $sub9_i324$0 = 0, $sub9_i324$1 = 0, $sub13_i329$0 = 0, $sub13_i329$1 = 0, $sub19_i343$0 = 0, $mul_i344$0 = 0, $mul_i344$1 = 0, $sub22_i346$0 = 0, $sub22_i346$1 = 0, $sub25_i348$0 = 0, $mul26_i349$0 = 0, $retval_0_i352 = 0, $74 = 0, $sub118 = 0, $agg_tmp117_sroa_0_0__idx = 0, $agg_tmp117_sroa_0_0_copyload$0 = 0, $agg_tmp117_sroa_0_0_copyload$1 = 0, $agg_tmp117_sroa_1_8__idx477 = 0, $agg_tmp121_sroa_0_0_copyload$0 = 0, $agg_tmp121_sroa_0_0_copyload$1 = 0, $agg_tmp121_sroa_1_8_copyload$0 = 0, $agg_tmp121_sroa_1_8_copyload$1 = 0, $agg_tmp124_sroa_0_0_copyload$0 = 0, $agg_tmp124_sroa_0_0_copyload$1 = 0, $agg_tmp124_sroa_1_8_copyload$0 = 0, $agg_tmp124_sroa_1_8_copyload$1 = 0, $tobool128 = 0, $sub_i373$0 = 0, $sub_i373$1 = 0, $sub3_i379$0 = 0, $sub3_i379$1 = 0, $sub9_i384$0 = 0, $sub9_i384$1 = 0, $sub13_i389$0 = 0, $sub13_i389$1 = 0, $sub19_i403$0 = 0, $mul_i404$0 = 0, $mul_i404$1 = 0, $sub22_i406$0 = 0, $sub22_i406$1 = 0, $sub25_i408$0 = 0, $mul26_i409$0 = 0, $retval_0_i412 = 0, $agg_tmp134_sroa_0_0_copyload$0 = 0, $agg_tmp134_sroa_0_0_copyload$1 = 0, $agg_tmp137_sroa_0_0_copyload$0 = 0, $agg_tmp137_sroa_0_0_copyload$1 = 0, $agg_tmp137_sroa_1_8_copyload$0 = 0, $agg_tmp137_sroa_1_8_copyload$1 = 0, $agg_tmp140_sroa_0_0_copyload$0 = 0, $agg_tmp140_sroa_0_0_copyload$1 = 0, $agg_tmp140_sroa_1_8_copyload$0 = 0, $agg_tmp140_sroa_1_8_copyload$1 = 0, $tobool144 = 0, $sub_i253$0 = 0, $sub_i253$1 = 0, $sub3_i259$0 = 0, $sub3_i259$1 = 0, $sub9_i264$0 = 0, $sub9_i264$1 = 0, $sub13_i269$0 = 0, $sub13_i269$1 = 0, $sub19_i283$0 = 0, $mul_i284$0 = 0, $mul_i284$1 = 0, $sub22_i286$0 = 0, $sub22_i286$1 = 0, $sub25_i288$0 = 0, $mul26_i289$0 = 0, $retval_0_i292 = 0, $i148_0495 = 0, $87 = 0, $88 = 0, $dec166 = 0, $89$0 = 0, $93 = 0, $__end__i292 = 0, $94 = 0, $96 = 0, $97 = 0, $98$1 = 0, $xcurr = 0, $99$1 = 0, $ycurr = 0, $sub180 = 0, $arrayidx181 = 0, $sub183 = 0, $X_i160 = 0, $101$0 = 0, $101$1 = 0, $xcurr_i161 = 0, $Y_i162 = 0, $102$0 = 0, $102$1 = 0, $ycurr_i163 = 0, $103$1 = 0, $xbot_i166 = 0, $ybot_i167 = 0, $104$0 = 0, $104$1 = 0, $xtop_i169 = 0, $105$0 = 0, $105$1 = 0, $ytop_i170 = 0, $xtop11_i173 = 0, $ytop13_i174 = 0, $106$0 = 0, $106$1 = 0, $xbot16_i176 = 0, $107$0 = 0, $107$1 = 0, $ybot19_i177 = 0, $108$0 = 0, $108$1 = 0, $109$0 = 0, $109$1 = 0, $110$0 = 0, $110$1 = 0, $111$0 = 0, $111$1 = 0, $sub_i_i180$0 = 0, $sub_i_i180$1 = 0, $deltaX_i_i181 = 0, $sub1_i_i182$0 = 0, $sub1_i_i182$1 = 0, $deltaY_i_i183 = 0, $112$0 = 0, $112$1 = 0, $i189_0493 = 0, $arrayidx194 = 0, $add195 = 0, $sub197 = 0, $X_i122 = 0, $114$0 = 0, $114$1 = 0, $xcurr_i123 = 0, $Y_i124 = 0, $115$0 = 0, $115$1 = 0, $ycurr_i125 = 0, $ycurr3_i126 = 0, $xbot_i128 = 0, $ybot_i129 = 0, $xcurr7_i130 = 0, $116$0 = 0, $116$1 = 0, $xtop_i131 = 0, $117$0 = 0, $117$1 = 0, $ytop_i132 = 0, $xtop11_i135 = 0, $ytop13_i136 = 0, $xcurr15_i137 = 0, $118$0 = 0, $118$1 = 0, $xbot16_i138 = 0, $119$0 = 0, $119$1 = 0, $ybot19_i139 = 0, $120$0 = 0, $120$1 = 0, $121$0 = 0, $121$1 = 0, $122$0 = 0, $122$1 = 0, $123$0 = 0, $123$1 = 0, $sub_i_i142$0 = 0, $sub_i_i142$1 = 0, $deltaX_i_i143 = 0, $sub1_i_i144$0 = 0, $sub1_i_i144$1 = 0, $deltaY_i_i145 = 0, $arrayidx206 = 0, $125$0 = 0, $125$1 = 0, $126$0 = 0, $126$1 = 0, $ycurr3_i = 0, $127$0 = 0, $127$1 = 0, $xbot_i = 0, $ybot_i = 0, $xcurr7_i = 0, $128$0 = 0, $128$1 = 0, $xtop_i = 0, $ytop_i = 0, $xtop11_i = 0, $ytop13_i = 0, $xcurr15_i = 0, $129$0 = 0, $129$1 = 0, $xbot16_i = 0, $ybot19_i = 0, $130$0 = 0, $130$1 = 0, $131$0 = 0, $131$1 = 0, $132$0 = 0, $132$1 = 0, $133$0 = 0, $133$1 = 0, $sub_i_i$0 = 0, $sub_i_i$1 = 0, $deltaX_i_i = 0, $sub1_i_i$0 = 0, $sub1_i_i$1 = 0, $deltaY_i_i = 0, $134 = 0, $135$0 = 0, $135$1 = 0, $136$0 = 0, $136$1 = 0, $137$0 = 0, $137$1 = 0, $e_0 = 0, $eHighest_0 = 0, $xcurr213 = 0, $ycurr214 = 0, $ytop215 = 0, $138$1 = 0, $e_0_eHighest_0 = 0, $xbot_phi_trans_insert = 0, $ybot_phi_trans_insert = 0, $ytop_phi_trans_insert = 0, $eHighest_2 = 0, $sub225 = 0.0, $eHighest_3 = 0, $e_1 = 0, $call236 = 0, $143 = 0, $p_sroa_0_0_load441485552 = 0, $retval_0 = 0, $retval_1 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 392 | 0;
 $tmp_i365 = __stackBase__ | 0;
 $ref_tmp_i366 = __stackBase__ + 16 | 0;
 $tmp4_i367 = __stackBase__ + 32 | 0;
 $ref_tmp5_i368 = __stackBase__ + 48 | 0;
 $tmp6_i369 = __stackBase__ + 64 | 0;
 $ref_tmp10_i370 = __stackBase__ + 80 | 0;
 $tmp_i305 = __stackBase__ + 96 | 0;
 $ref_tmp_i306 = __stackBase__ + 112 | 0;
 $tmp4_i307 = __stackBase__ + 128 | 0;
 $ref_tmp5_i308 = __stackBase__ + 144 | 0;
 $tmp6_i309 = __stackBase__ + 160 | 0;
 $ref_tmp10_i310 = __stackBase__ + 176 | 0;
 $tmp_i245 = __stackBase__ + 192 | 0;
 $ref_tmp_i246 = __stackBase__ + 208 | 0;
 $tmp4_i247 = __stackBase__ + 224 | 0;
 $ref_tmp5_i248 = __stackBase__ + 240 | 0;
 $tmp6_i249 = __stackBase__ + 256 | 0;
 $ref_tmp10_i250 = __stackBase__ + 272 | 0;
 $tmp_i = __stackBase__ + 288 | 0;
 $ref_tmp_i = __stackBase__ + 304 | 0;
 $tmp4_i = __stackBase__ + 320 | 0;
 $ref_tmp5_i = __stackBase__ + 336 | 0;
 $tmp6_i = __stackBase__ + 352 | 0;
 $ref_tmp10_i = __stackBase__ + 368 | 0;
 $edges = __stackBase__ + 384 | 0;
 $__begin__i = $pg | 0;
 $1 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i = (HEAP32[$pg + 4 >> 2] | 0) - $1 | 0;
 $sub_ptr_div_i = $sub_ptr_sub_i >> 4;
 if (($sub_ptr_sub_i | 0) < 48) {
  $retval_1 = 0;
  STACKTOP = __stackBase__;
  return $retval_1 | 0;
 }
 if (($sub_ptr_div_i | 0) == 0) {
  $2 = $1;
  HEAP32[0] = HEAP32[$2 >> 2];
  HEAP32[1] = HEAP32[$2 + 4 >> 2];
  HEAP32[2] = HEAP32[$2 + 8 >> 2];
  HEAP32[3] = HEAP32[$2 + 12 >> 2];
  $9 = $1;
  $p_sroa_0_0_load441485544 = 0;
  $8 = 0;
  label = 4966;
 } else {
  if ($sub_ptr_div_i >>> 0 > 268435455) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
   return 0;
  }
  $call_i_i_i6_i_i = __Znwj($sub_ptr_sub_i) | 0;
  $3 = $call_i_i_i6_i_i;
  $__n_addr_0_i_i_i = $sub_ptr_div_i;
  $4 = $3;
  while (1) {
   if (($4 | 0) == 0) {
    $6 = 0;
   } else {
    _memset($4 | 0, 0, 16);
    $6 = $4;
   }
   $dec_i_i_i = $__n_addr_0_i_i_i - 1 | 0;
   if (($dec_i_i_i | 0) == 0) {
    break;
   } else {
    $__n_addr_0_i_i_i = $dec_i_i_i;
    $4 = $6 + 16 | 0;
   }
  }
  $_pre = HEAP32[$__begin__i >> 2] | 0;
  $7 = $_pre;
  HEAP32[$call_i_i_i6_i_i >> 2] = HEAP32[$7 >> 2];
  HEAP32[$call_i_i_i6_i_i + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$call_i_i_i6_i_i + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  HEAP32[$call_i_i_i6_i_i + 12 >> 2] = HEAP32[$7 + 12 >> 2];
  if (($sub_ptr_sub_i | 0) > 0) {
   $9 = $_pre;
   $p_sroa_0_0_load441485544 = $3;
   $8 = $call_i_i_i6_i_i;
   label = 4966;
  } else {
   $retval_0 = 0;
   $p_sroa_0_0_load441485552 = $3;
   $143 = $call_i_i_i6_i_i;
  }
 }
 L5588 : do {
  if ((label | 0) == 4966) {
   $m_UseFullRange553 = $this + 12 | 0;
   $tobool = (HEAP8[$m_UseFullRange553] & 1) == 0;
   $lo_i_i_i = $tmp_i + 8 | 0;
   $hi_i_i_i = $tmp_i | 0;
   $lo_i_i1_i = $ref_tmp_i + 8 | 0;
   $hi_i_i2_i = $ref_tmp_i | 0;
   $lo_i_i7_i = $tmp6_i + 8 | 0;
   $hi_i_i8_i = $tmp6_i | 0;
   $lo_i_i4_i = $ref_tmp10_i + 8 | 0;
   $hi_i_i5_i = $ref_tmp10_i | 0;
   $hi_i_i = $tmp4_i | 0;
   $hi2_i_i = $ref_tmp5_i | 0;
   $lo_i_i = $tmp4_i + 8 | 0;
   $lo3_i_i = $ref_tmp5_i + 8 | 0;
   $j_0520 = 0;
   $maxVal_1522$1 = $tobool ? 0 : 1073741823;
   $maxVal_1522$0 = $tobool ? 1073741823 : -1;
   $i_0523 = 0;
   $19 = $9;
   while (1) {
    $X = $19 + ($i_0523 << 4) | 0;
    $20$0 = HEAP32[$X >> 2] | 0;
    $20$1 = HEAP32[$X + 4 >> 2] | 0;
    $$etemp$4$1 = 0;
    $cmp_i89 = ($20$1 | 0) < ($$etemp$4$1 | 0) | ($20$1 | 0) == ($$etemp$4$1 | 0) & $20$0 >>> 0 < 0 >>> 0;
    $sub_i$0 = _i64Subtract(0, 0, $20$0, $20$1) | 0;
    $cond_i$0 = $cmp_i89 ? $sub_i$0 : $20$0;
    $cond_i$1 = $cmp_i89 ? tempRet0 : $20$1;
    if (($cond_i$1 | 0) > ($maxVal_1522$1 | 0) | ($cond_i$1 | 0) == ($maxVal_1522$1 | 0) & $cond_i$0 >>> 0 > $maxVal_1522$0 >>> 0) {
     label = 4977;
    } else {
     $Y = $19 + ($i_0523 << 4) + 8 | 0;
     $21$0 = HEAP32[$Y >> 2] | 0;
     $21$1 = HEAP32[$Y + 4 >> 2] | 0;
     $$etemp$8$1 = 0;
     $cmp_i90 = ($21$1 | 0) < ($$etemp$8$1 | 0) | ($21$1 | 0) == ($$etemp$8$1 | 0) & $21$0 >>> 0 < 0 >>> 0;
     $sub_i91$0 = _i64Subtract(0, 0, $21$0, $21$1) | 0;
     $cond_i92$1 = $cmp_i90 ? tempRet0 : $21$1;
     if (($cond_i92$1 | 0) > ($maxVal_1522$1 | 0) | ($cond_i92$1 | 0) == ($maxVal_1522$1 | 0) & ($cmp_i90 ? $sub_i91$0 : $21$0) >>> 0 > $maxVal_1522$0 >>> 0) {
      label = 4977;
     } else {
      $maxVal_2$1 = $maxVal_1522$1;
      $maxVal_2$0 = $maxVal_1522$0;
     }
    }
    if ((label | 0) == 4977) {
     label = 0;
     $$etemp$10$1 = 1073741823;
     if (($cond_i$1 | 0) > ($$etemp$10$1 | 0) | ($cond_i$1 | 0) == ($$etemp$10$1 | 0) & $cond_i$0 >>> 0 > -1 >>> 0) {
      label = 4979;
      break;
     }
     $Y28 = $19 + ($i_0523 << 4) + 8 | 0;
     $22$0 = HEAP32[$Y28 >> 2] | 0;
     $22$1 = HEAP32[$Y28 + 4 >> 2] | 0;
     $$etemp$13$1 = 0;
     $cmp_i109 = ($22$1 | 0) < ($$etemp$13$1 | 0) | ($22$1 | 0) == ($$etemp$13$1 | 0) & $22$0 >>> 0 < 0 >>> 0;
     $sub_i110$0 = _i64Subtract(0, 0, $22$0, $22$1) | 0;
     $cond_i111$1 = $cmp_i109 ? tempRet0 : $22$1;
     $$etemp$15$1 = 1073741823;
     if (($cond_i111$1 | 0) > ($$etemp$15$1 | 0) | ($cond_i111$1 | 0) == ($$etemp$15$1 | 0) & ($cmp_i109 ? $sub_i110$0 : $22$0) >>> 0 > -1 >>> 0) {
      label = 4979;
      break;
     }
     HEAP8[$m_UseFullRange553] = 1;
     $maxVal_2$1 = 1073741823;
     $maxVal_2$0 = -1;
    }
    do {
     if (($i_0523 | 0) == 0) {
      $j_2 = $j_0520;
     } else {
      $24 = HEAP32[$__begin__i >> 2] | 0;
      $X_i = $p_sroa_0_0_load441485544 + ($j_0520 << 4) | 0;
      $25$0 = HEAP32[$X_i >> 2] | 0;
      $25$1 = HEAP32[$X_i + 4 >> 2] | 0;
      $X1_i = $24 + ($i_0523 << 4) | 0;
      $26$0 = HEAP32[$X1_i >> 2] | 0;
      $26$1 = HEAP32[$X1_i + 4 >> 2] | 0;
      if (($25$0 | 0) == ($26$0 | 0) & ($25$1 | 0) == ($26$1 | 0)) {
       $Y_i = $p_sroa_0_0_load441485544 + ($j_0520 << 4) + 8 | 0;
       $Y2_i = $24 + ($i_0523 << 4) + 8 | 0;
       if ((HEAP32[$Y_i >> 2] | 0) == (HEAP32[$Y2_i >> 2] | 0) & (HEAP32[$Y_i + 4 >> 2] | 0) == (HEAP32[$Y2_i + 4 >> 2] | 0)) {
        $j_2 = $j_0520;
        break;
       }
      }
      do {
       if (($j_0520 | 0) > 0) {
        $sub = $j_0520 - 1 | 0;
        $agg_tmp_sroa_0_0__idx = $p_sroa_0_0_load441485544 + ($sub << 4) | 0;
        $agg_tmp_sroa_0_0_copyload$0 = HEAP32[$agg_tmp_sroa_0_0__idx >> 2] | 0;
        $agg_tmp_sroa_0_0_copyload$1 = HEAP32[$agg_tmp_sroa_0_0__idx + 4 >> 2] | 0;
        $agg_tmp_sroa_1_8__idx447 = $p_sroa_0_0_load441485544 + ($sub << 4) + 8 | 0;
        $agg_tmp49_sroa_1_8__idx450 = $p_sroa_0_0_load441485544 + ($j_0520 << 4) + 8 | 0;
        $agg_tmp49_sroa_1_8_copyload$0 = HEAP32[$agg_tmp49_sroa_1_8__idx450 >> 2] | 0;
        $agg_tmp49_sroa_1_8_copyload$1 = HEAP32[$agg_tmp49_sroa_1_8__idx450 + 4 >> 2] | 0;
        $agg_tmp52_sroa_1_8__idx454 = $24 + ($i_0523 << 4) + 8 | 0;
        $agg_tmp52_sroa_1_8_copyload$0 = HEAP32[$agg_tmp52_sroa_1_8__idx454 >> 2] | 0;
        $agg_tmp52_sroa_1_8_copyload$1 = HEAP32[$agg_tmp52_sroa_1_8__idx454 + 4 >> 2] | 0;
        $tobool56 = (HEAP8[$m_UseFullRange553] & 1) == 0;
        $sub_i205$0 = _i64Subtract(HEAP32[$agg_tmp_sroa_1_8__idx447 >> 2] | 0, HEAP32[$agg_tmp_sroa_1_8__idx447 + 4 >> 2] | 0, $agg_tmp49_sroa_1_8_copyload$0, $agg_tmp49_sroa_1_8_copyload$1) | 0;
        $sub_i205$1 = tempRet0;
        if ($tobool56) {
         $sub19_i$0 = _i64Subtract($25$0, $25$1, $26$0, $26$1) | 0;
         $mul_i$0 = ___muldi3($sub19_i$0, tempRet0, $sub_i205$0, $sub_i205$1) | 0;
         $mul_i$1 = tempRet0;
         $sub22_i$0 = _i64Subtract($agg_tmp_sroa_0_0_copyload$0, $agg_tmp_sroa_0_0_copyload$1, $25$0, $25$1) | 0;
         $sub22_i$1 = tempRet0;
         $sub25_i$0 = _i64Subtract($agg_tmp49_sroa_1_8_copyload$0, $agg_tmp49_sroa_1_8_copyload$1, $agg_tmp52_sroa_1_8_copyload$0, $agg_tmp52_sroa_1_8_copyload$1) | 0;
         $mul26_i$0 = ___muldi3($sub25_i$0, tempRet0, $sub22_i$0, $sub22_i$1) | 0;
         $retval_0_i = ($mul_i$0 | 0) == ($mul26_i$0 | 0) & ($mul_i$1 | 0) == (tempRet0 | 0);
        } else {
         HEAP32[$lo_i_i_i >> 2] = $sub_i205$0;
         HEAP32[$lo_i_i_i + 4 >> 2] = $sub_i205$1;
         HEAP32[$hi_i_i_i >> 2] = $sub_i205$1 >> 31 | (($sub_i205$1 | 0) < 0 ? -1 : 0) << 1;
         HEAP32[$hi_i_i_i + 4 >> 2] = (($sub_i205$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub_i205$1 | 0) < 0 ? -1 : 0) << 1;
         $sub3_i$0 = _i64Subtract($25$0, $25$1, $26$0, $26$1) | 0;
         $sub3_i$1 = tempRet0;
         HEAP32[$lo_i_i1_i >> 2] = $sub3_i$0;
         HEAP32[$lo_i_i1_i + 4 >> 2] = $sub3_i$1;
         HEAP32[$hi_i_i2_i >> 2] = $sub3_i$1 >> 31 | (($sub3_i$1 | 0) < 0 ? -1 : 0) << 1;
         HEAP32[$hi_i_i2_i + 4 >> 2] = (($sub3_i$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub3_i$1 | 0) < 0 ? -1 : 0) << 1;
         __ZNK10ClipperLib6Int128mlERKS0_($tmp4_i, $tmp_i, $ref_tmp_i);
         $sub9_i$0 = _i64Subtract($agg_tmp_sroa_0_0_copyload$0, $agg_tmp_sroa_0_0_copyload$1, $25$0, $25$1) | 0;
         $sub9_i$1 = tempRet0;
         HEAP32[$lo_i_i7_i >> 2] = $sub9_i$0;
         HEAP32[$lo_i_i7_i + 4 >> 2] = $sub9_i$1;
         HEAP32[$hi_i_i8_i >> 2] = $sub9_i$1 >> 31 | (($sub9_i$1 | 0) < 0 ? -1 : 0) << 1;
         HEAP32[$hi_i_i8_i + 4 >> 2] = (($sub9_i$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub9_i$1 | 0) < 0 ? -1 : 0) << 1;
         $sub13_i$0 = _i64Subtract($agg_tmp49_sroa_1_8_copyload$0, $agg_tmp49_sroa_1_8_copyload$1, $agg_tmp52_sroa_1_8_copyload$0, $agg_tmp52_sroa_1_8_copyload$1) | 0;
         $sub13_i$1 = tempRet0;
         HEAP32[$lo_i_i4_i >> 2] = $sub13_i$0;
         HEAP32[$lo_i_i4_i + 4 >> 2] = $sub13_i$1;
         HEAP32[$hi_i_i5_i >> 2] = $sub13_i$1 >> 31 | (($sub13_i$1 | 0) < 0 ? -1 : 0) << 1;
         HEAP32[$hi_i_i5_i + 4 >> 2] = (($sub13_i$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub13_i$1 | 0) < 0 ? -1 : 0) << 1;
         __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp5_i, $tmp6_i, $ref_tmp10_i);
         if (!((HEAP32[$hi_i_i >> 2] | 0) == (HEAP32[$hi2_i_i >> 2] | 0) & (HEAP32[$hi_i_i + 4 >> 2] | 0) == (HEAP32[$hi2_i_i + 4 >> 2] | 0))) {
          label = 4994;
          break;
         }
         $retval_0_i = (HEAP32[$lo_i_i >> 2] | 0) == (HEAP32[$lo3_i_i >> 2] | 0) & (HEAP32[$lo_i_i + 4 >> 2] | 0) == (HEAP32[$lo3_i_i + 4 >> 2] | 0);
        }
        if (!$retval_0_i) {
         label = 4994;
         break;
        }
        $35 = HEAP32[$__begin__i >> 2] | 0;
        $X1_i213 = $35 + ($i_0523 << 4) | 0;
        if (!((HEAP32[$agg_tmp_sroa_0_0__idx >> 2] | 0) == (HEAP32[$X1_i213 >> 2] | 0) & (HEAP32[$agg_tmp_sroa_0_0__idx + 4 >> 2] | 0) == (HEAP32[$X1_i213 + 4 >> 2] | 0))) {
         $j_1 = $j_0520;
         $40 = $35;
         break;
        }
        $Y2_i216 = $35 + ($i_0523 << 4) + 8 | 0;
        $j_1 = (HEAP32[$agg_tmp_sroa_1_8__idx447 >> 2] | 0) == (HEAP32[$Y2_i216 >> 2] | 0) & (HEAP32[$agg_tmp_sroa_1_8__idx447 + 4 >> 2] | 0) == (HEAP32[$Y2_i216 + 4 >> 2] | 0) ? $sub : $j_0520;
        $40 = $35;
       } else {
        label = 4994;
       }
      } while (0);
      if ((label | 0) == 4994) {
       label = 0;
       $j_1 = $j_0520 + 1 | 0;
       $40 = HEAP32[$__begin__i >> 2] | 0;
      }
      $41 = $p_sroa_0_0_load441485544 + ($j_1 << 4) | 0;
      $42 = $40 + ($i_0523 << 4) | 0;
      HEAP32[$41 >> 2] = HEAP32[$42 >> 2];
      HEAP32[$41 + 4 >> 2] = HEAP32[$42 + 4 >> 2];
      HEAP32[$41 + 8 >> 2] = HEAP32[$42 + 8 >> 2];
      HEAP32[$41 + 12 >> 2] = HEAP32[$42 + 12 >> 2];
      $j_2 = $j_1;
     }
    } while (0);
    $inc76 = $i_0523 + 1 | 0;
    if (($inc76 | 0) >= ($sub_ptr_div_i | 0)) {
     break;
    }
    $j_0520 = $j_2;
    $maxVal_1522$1 = $maxVal_2$1;
    $maxVal_1522$0 = $maxVal_2$0;
    $i_0523 = $inc76;
    $19 = HEAP32[$__begin__i >> 2] | 0;
   }
   if ((label | 0) == 4979) {
    $exception = ___cxa_allocate_exception(4) | 0;
    HEAP32[$exception >> 2] = 2880;
    ___cxa_throw($exception | 0, 15392, 0);
    return 0;
   }
   if (($j_2 | 0) < 2) {
    $retval_0 = 0;
    $p_sroa_0_0_load441485552 = $p_sroa_0_0_load441485544;
    $143 = $8;
    break;
   }
   $add = $j_2 + 1 | 0;
   if (($add | 0) <= 2) {
    $retval_0 = 0;
    $p_sroa_0_0_load441485552 = $p_sroa_0_0_load441485544;
    $143 = $8;
    break;
   }
   $X1_i221 = $p_sroa_0_0_load441485544 | 0;
   $Y2_i224 = $p_sroa_0_0_load441485544 + 8 | 0;
   $X1_i229 = $p_sroa_0_0_load441485544 + 16 | 0;
   $Y2_i232 = $p_sroa_0_0_load441485544 + 24 | 0;
   $agg_tmp140_sroa_0_0__idx = $p_sroa_0_0_load441485544 + 32 | 0;
   $agg_tmp140_sroa_1_8__idx464 = $p_sroa_0_0_load441485544 + 40 | 0;
   $lo_i_i_i254 = $tmp_i245 + 8 | 0;
   $hi_i_i_i255 = $tmp_i245 | 0;
   $lo_i_i1_i260 = $ref_tmp_i246 + 8 | 0;
   $hi_i_i2_i261 = $ref_tmp_i246 | 0;
   $lo_i_i7_i265 = $tmp6_i249 + 8 | 0;
   $hi_i_i8_i266 = $tmp6_i249 | 0;
   $lo_i_i4_i270 = $ref_tmp10_i250 + 8 | 0;
   $hi_i_i5_i271 = $ref_tmp10_i250 | 0;
   $hi_i_i273 = $tmp4_i247 | 0;
   $hi2_i_i274 = $ref_tmp5_i248 | 0;
   $lo_i_i277 = $tmp4_i247 + 8 | 0;
   $lo3_i_i278 = $ref_tmp5_i248 + 8 | 0;
   $lo_i_i_i374 = $tmp_i365 + 8 | 0;
   $hi_i_i_i375 = $tmp_i365 | 0;
   $lo_i_i1_i380 = $ref_tmp_i366 + 8 | 0;
   $hi_i_i2_i381 = $ref_tmp_i366 | 0;
   $lo_i_i7_i385 = $tmp6_i369 + 8 | 0;
   $hi_i_i8_i386 = $tmp6_i369 | 0;
   $lo_i_i4_i390 = $ref_tmp10_i370 + 8 | 0;
   $hi_i_i5_i391 = $ref_tmp10_i370 | 0;
   $hi_i_i393 = $tmp4_i367 | 0;
   $hi2_i_i394 = $ref_tmp5_i368 | 0;
   $lo_i_i397 = $tmp4_i367 + 8 | 0;
   $lo3_i_i398 = $ref_tmp5_i368 + 8 | 0;
   $lo_i_i_i314 = $tmp_i305 + 8 | 0;
   $hi_i_i_i315 = $tmp_i305 | 0;
   $lo_i_i1_i320 = $ref_tmp_i306 + 8 | 0;
   $hi_i_i2_i321 = $ref_tmp_i306 | 0;
   $lo_i_i7_i325 = $tmp6_i309 + 8 | 0;
   $hi_i_i8_i326 = $tmp6_i309 | 0;
   $lo_i_i4_i330 = $ref_tmp10_i310 + 8 | 0;
   $hi_i_i5_i331 = $ref_tmp10_i310 | 0;
   $hi_i_i333 = $tmp4_i307 | 0;
   $hi2_i_i334 = $ref_tmp5_i308 | 0;
   $lo_i_i337 = $tmp4_i307 + 8 | 0;
   $lo3_i_i338 = $ref_tmp5_i308 + 8 | 0;
   $len_0507 = $add;
   $j_3510 = $j_2;
   L5626 : while (1) {
    $arrayidx_i407 = $p_sroa_0_0_load441485544 + ($j_3510 << 4) | 0;
    $X_i220 = $arrayidx_i407 | 0;
    $61$0 = HEAP32[$X_i220 >> 2] | 0;
    $61$1 = HEAP32[$X_i220 + 4 >> 2] | 0;
    $62$0 = HEAP32[$X1_i221 >> 2] | 0;
    $62$1 = HEAP32[$X1_i221 + 4 >> 2] | 0;
    if (($61$0 | 0) == ($62$0 | 0) & ($61$1 | 0) == ($62$1 | 0)) {
     $Y_i223 = $p_sroa_0_0_load441485544 + ($j_3510 << 4) + 8 | 0;
     if (!((HEAP32[$Y_i223 >> 2] | 0) == (HEAP32[$Y2_i224 >> 2] | 0) & (HEAP32[$Y_i223 + 4 >> 2] | 0) == (HEAP32[$Y2_i224 + 4 >> 2] | 0))) {
      label = 5003;
     }
    } else {
     label = 5003;
    }
    L5630 : do {
     if ((label | 0) == 5003) {
      label = 0;
      $65$0 = HEAP32[$X1_i229 >> 2] | 0;
      $65$1 = HEAP32[$X1_i229 + 4 >> 2] | 0;
      $66$0 = HEAP32[$Y2_i224 >> 2] | 0;
      $66$1 = HEAP32[$Y2_i224 + 4 >> 2] | 0;
      $67$0 = HEAP32[$Y2_i232 >> 2] | 0;
      $67$1 = HEAP32[$Y2_i232 + 4 >> 2] | 0;
      do {
       if (!(($62$0 | 0) == ($65$0 | 0) & ($62$1 | 0) == ($65$1 | 0) & (($66$0 | 0) == ($67$0 | 0) & ($66$1 | 0) == ($67$1 | 0)))) {
        $agg_tmp97_sroa_1_8__idx467 = $p_sroa_0_0_load441485544 + ($j_3510 << 4) + 8 | 0;
        $tobool107 = (HEAP8[$m_UseFullRange553] & 1) == 0;
        $sub_i313$0 = _i64Subtract(HEAP32[$agg_tmp97_sroa_1_8__idx467 >> 2] | 0, HEAP32[$agg_tmp97_sroa_1_8__idx467 + 4 >> 2] | 0, $66$0, $66$1) | 0;
        $sub_i313$1 = tempRet0;
        do {
         if ($tobool107) {
          $sub19_i343$0 = _i64Subtract($62$0, $62$1, $65$0, $65$1) | 0;
          $mul_i344$0 = ___muldi3($sub19_i343$0, tempRet0, $sub_i313$0, $sub_i313$1) | 0;
          $mul_i344$1 = tempRet0;
          $sub22_i346$0 = _i64Subtract($61$0, $61$1, $62$0, $62$1) | 0;
          $sub22_i346$1 = tempRet0;
          $sub25_i348$0 = _i64Subtract($66$0, $66$1, $67$0, $67$1) | 0;
          $mul26_i349$0 = ___muldi3($sub25_i348$0, tempRet0, $sub22_i346$0, $sub22_i346$1) | 0;
          $retval_0_i352 = ($mul_i344$0 | 0) == ($mul26_i349$0 | 0) & ($mul_i344$1 | 0) == (tempRet0 | 0);
          label = 5010;
         } else {
          HEAP32[$lo_i_i_i314 >> 2] = $sub_i313$0;
          HEAP32[$lo_i_i_i314 + 4 >> 2] = $sub_i313$1;
          HEAP32[$hi_i_i_i315 >> 2] = $sub_i313$1 >> 31 | (($sub_i313$1 | 0) < 0 ? -1 : 0) << 1;
          HEAP32[$hi_i_i_i315 + 4 >> 2] = (($sub_i313$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub_i313$1 | 0) < 0 ? -1 : 0) << 1;
          $sub3_i319$0 = _i64Subtract($62$0, $62$1, $65$0, $65$1) | 0;
          $sub3_i319$1 = tempRet0;
          HEAP32[$lo_i_i1_i320 >> 2] = $sub3_i319$0;
          HEAP32[$lo_i_i1_i320 + 4 >> 2] = $sub3_i319$1;
          HEAP32[$hi_i_i2_i321 >> 2] = $sub3_i319$1 >> 31 | (($sub3_i319$1 | 0) < 0 ? -1 : 0) << 1;
          HEAP32[$hi_i_i2_i321 + 4 >> 2] = (($sub3_i319$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub3_i319$1 | 0) < 0 ? -1 : 0) << 1;
          __ZNK10ClipperLib6Int128mlERKS0_($tmp4_i307, $tmp_i305, $ref_tmp_i306);
          $sub9_i324$0 = _i64Subtract($61$0, $61$1, $62$0, $62$1) | 0;
          $sub9_i324$1 = tempRet0;
          HEAP32[$lo_i_i7_i325 >> 2] = $sub9_i324$0;
          HEAP32[$lo_i_i7_i325 + 4 >> 2] = $sub9_i324$1;
          HEAP32[$hi_i_i8_i326 >> 2] = $sub9_i324$1 >> 31 | (($sub9_i324$1 | 0) < 0 ? -1 : 0) << 1;
          HEAP32[$hi_i_i8_i326 + 4 >> 2] = (($sub9_i324$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub9_i324$1 | 0) < 0 ? -1 : 0) << 1;
          $sub13_i329$0 = _i64Subtract($66$0, $66$1, $67$0, $67$1) | 0;
          $sub13_i329$1 = tempRet0;
          HEAP32[$lo_i_i4_i330 >> 2] = $sub13_i329$0;
          HEAP32[$lo_i_i4_i330 + 4 >> 2] = $sub13_i329$1;
          HEAP32[$hi_i_i5_i331 >> 2] = $sub13_i329$1 >> 31 | (($sub13_i329$1 | 0) < 0 ? -1 : 0) << 1;
          HEAP32[$hi_i_i5_i331 + 4 >> 2] = (($sub13_i329$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub13_i329$1 | 0) < 0 ? -1 : 0) << 1;
          __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp5_i308, $tmp6_i309, $ref_tmp10_i310);
          if (!((HEAP32[$hi_i_i333 >> 2] | 0) == (HEAP32[$hi2_i_i334 >> 2] | 0) & (HEAP32[$hi_i_i333 + 4 >> 2] | 0) == (HEAP32[$hi2_i_i334 + 4 >> 2] | 0))) {
           break;
          }
          $retval_0_i352 = (HEAP32[$lo_i_i337 >> 2] | 0) == (HEAP32[$lo3_i_i338 >> 2] | 0) & (HEAP32[$lo_i_i337 + 4 >> 2] | 0) == (HEAP32[$lo3_i_i338 + 4 >> 2] | 0);
          label = 5010;
         }
        } while (0);
        if ((label | 0) == 5010) {
         label = 0;
         if ($retval_0_i352) {
          break;
         }
        }
        $sub118 = $j_3510 - 1 | 0;
        $agg_tmp117_sroa_0_0__idx = $p_sroa_0_0_load441485544 + ($sub118 << 4) | 0;
        $agg_tmp117_sroa_0_0_copyload$0 = HEAP32[$agg_tmp117_sroa_0_0__idx >> 2] | 0;
        $agg_tmp117_sroa_0_0_copyload$1 = HEAP32[$agg_tmp117_sroa_0_0__idx + 4 >> 2] | 0;
        $agg_tmp117_sroa_1_8__idx477 = $p_sroa_0_0_load441485544 + ($sub118 << 4) + 8 | 0;
        $agg_tmp121_sroa_0_0_copyload$0 = HEAP32[$X_i220 >> 2] | 0;
        $agg_tmp121_sroa_0_0_copyload$1 = HEAP32[$X_i220 + 4 >> 2] | 0;
        $agg_tmp121_sroa_1_8_copyload$0 = HEAP32[$agg_tmp97_sroa_1_8__idx467 >> 2] | 0;
        $agg_tmp121_sroa_1_8_copyload$1 = HEAP32[$agg_tmp97_sroa_1_8__idx467 + 4 >> 2] | 0;
        $agg_tmp124_sroa_0_0_copyload$0 = HEAP32[$X1_i221 >> 2] | 0;
        $agg_tmp124_sroa_0_0_copyload$1 = HEAP32[$X1_i221 + 4 >> 2] | 0;
        $agg_tmp124_sroa_1_8_copyload$0 = HEAP32[$Y2_i224 >> 2] | 0;
        $agg_tmp124_sroa_1_8_copyload$1 = HEAP32[$Y2_i224 + 4 >> 2] | 0;
        $tobool128 = (HEAP8[$m_UseFullRange553] & 1) == 0;
        $sub_i373$0 = _i64Subtract(HEAP32[$agg_tmp117_sroa_1_8__idx477 >> 2] | 0, HEAP32[$agg_tmp117_sroa_1_8__idx477 + 4 >> 2] | 0, $agg_tmp121_sroa_1_8_copyload$0, $agg_tmp121_sroa_1_8_copyload$1) | 0;
        $sub_i373$1 = tempRet0;
        do {
         if ($tobool128) {
          $sub19_i403$0 = _i64Subtract($agg_tmp121_sroa_0_0_copyload$0, $agg_tmp121_sroa_0_0_copyload$1, $agg_tmp124_sroa_0_0_copyload$0, $agg_tmp124_sroa_0_0_copyload$1) | 0;
          $mul_i404$0 = ___muldi3($sub19_i403$0, tempRet0, $sub_i373$0, $sub_i373$1) | 0;
          $mul_i404$1 = tempRet0;
          $sub22_i406$0 = _i64Subtract($agg_tmp117_sroa_0_0_copyload$0, $agg_tmp117_sroa_0_0_copyload$1, $agg_tmp121_sroa_0_0_copyload$0, $agg_tmp121_sroa_0_0_copyload$1) | 0;
          $sub22_i406$1 = tempRet0;
          $sub25_i408$0 = _i64Subtract($agg_tmp121_sroa_1_8_copyload$0, $agg_tmp121_sroa_1_8_copyload$1, $agg_tmp124_sroa_1_8_copyload$0, $agg_tmp124_sroa_1_8_copyload$1) | 0;
          $mul26_i409$0 = ___muldi3($sub25_i408$0, tempRet0, $sub22_i406$0, $sub22_i406$1) | 0;
          $retval_0_i412 = ($mul_i404$0 | 0) == ($mul26_i409$0 | 0) & ($mul_i404$1 | 0) == (tempRet0 | 0);
          label = 5018;
         } else {
          HEAP32[$lo_i_i_i374 >> 2] = $sub_i373$0;
          HEAP32[$lo_i_i_i374 + 4 >> 2] = $sub_i373$1;
          HEAP32[$hi_i_i_i375 >> 2] = $sub_i373$1 >> 31 | (($sub_i373$1 | 0) < 0 ? -1 : 0) << 1;
          HEAP32[$hi_i_i_i375 + 4 >> 2] = (($sub_i373$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub_i373$1 | 0) < 0 ? -1 : 0) << 1;
          $sub3_i379$0 = _i64Subtract($agg_tmp121_sroa_0_0_copyload$0, $agg_tmp121_sroa_0_0_copyload$1, $agg_tmp124_sroa_0_0_copyload$0, $agg_tmp124_sroa_0_0_copyload$1) | 0;
          $sub3_i379$1 = tempRet0;
          HEAP32[$lo_i_i1_i380 >> 2] = $sub3_i379$0;
          HEAP32[$lo_i_i1_i380 + 4 >> 2] = $sub3_i379$1;
          HEAP32[$hi_i_i2_i381 >> 2] = $sub3_i379$1 >> 31 | (($sub3_i379$1 | 0) < 0 ? -1 : 0) << 1;
          HEAP32[$hi_i_i2_i381 + 4 >> 2] = (($sub3_i379$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub3_i379$1 | 0) < 0 ? -1 : 0) << 1;
          __ZNK10ClipperLib6Int128mlERKS0_($tmp4_i367, $tmp_i365, $ref_tmp_i366);
          $sub9_i384$0 = _i64Subtract($agg_tmp117_sroa_0_0_copyload$0, $agg_tmp117_sroa_0_0_copyload$1, $agg_tmp121_sroa_0_0_copyload$0, $agg_tmp121_sroa_0_0_copyload$1) | 0;
          $sub9_i384$1 = tempRet0;
          HEAP32[$lo_i_i7_i385 >> 2] = $sub9_i384$0;
          HEAP32[$lo_i_i7_i385 + 4 >> 2] = $sub9_i384$1;
          HEAP32[$hi_i_i8_i386 >> 2] = $sub9_i384$1 >> 31 | (($sub9_i384$1 | 0) < 0 ? -1 : 0) << 1;
          HEAP32[$hi_i_i8_i386 + 4 >> 2] = (($sub9_i384$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub9_i384$1 | 0) < 0 ? -1 : 0) << 1;
          $sub13_i389$0 = _i64Subtract($agg_tmp121_sroa_1_8_copyload$0, $agg_tmp121_sroa_1_8_copyload$1, $agg_tmp124_sroa_1_8_copyload$0, $agg_tmp124_sroa_1_8_copyload$1) | 0;
          $sub13_i389$1 = tempRet0;
          HEAP32[$lo_i_i4_i390 >> 2] = $sub13_i389$0;
          HEAP32[$lo_i_i4_i390 + 4 >> 2] = $sub13_i389$1;
          HEAP32[$hi_i_i5_i391 >> 2] = $sub13_i389$1 >> 31 | (($sub13_i389$1 | 0) < 0 ? -1 : 0) << 1;
          HEAP32[$hi_i_i5_i391 + 4 >> 2] = (($sub13_i389$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub13_i389$1 | 0) < 0 ? -1 : 0) << 1;
          __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp5_i368, $tmp6_i369, $ref_tmp10_i370);
          if (!((HEAP32[$hi_i_i393 >> 2] | 0) == (HEAP32[$hi2_i_i394 >> 2] | 0) & (HEAP32[$hi_i_i393 + 4 >> 2] | 0) == (HEAP32[$hi2_i_i394 + 4 >> 2] | 0))) {
           break;
          }
          $retval_0_i412 = (HEAP32[$lo_i_i397 >> 2] | 0) == (HEAP32[$lo3_i_i398 >> 2] | 0) & (HEAP32[$lo_i_i397 + 4 >> 2] | 0) == (HEAP32[$lo3_i_i398 + 4 >> 2] | 0);
          label = 5018;
         }
        } while (0);
        if ((label | 0) == 5018) {
         label = 0;
         if ($retval_0_i412) {
          break L5630;
         }
        }
        $agg_tmp134_sroa_0_0_copyload$0 = HEAP32[$X1_i221 >> 2] | 0;
        $agg_tmp134_sroa_0_0_copyload$1 = HEAP32[$X1_i221 + 4 >> 2] | 0;
        $agg_tmp137_sroa_0_0_copyload$0 = HEAP32[$X1_i229 >> 2] | 0;
        $agg_tmp137_sroa_0_0_copyload$1 = HEAP32[$X1_i229 + 4 >> 2] | 0;
        $agg_tmp137_sroa_1_8_copyload$0 = HEAP32[$Y2_i232 >> 2] | 0;
        $agg_tmp137_sroa_1_8_copyload$1 = HEAP32[$Y2_i232 + 4 >> 2] | 0;
        $agg_tmp140_sroa_0_0_copyload$0 = HEAP32[$agg_tmp140_sroa_0_0__idx >> 2] | 0;
        $agg_tmp140_sroa_0_0_copyload$1 = HEAP32[$agg_tmp140_sroa_0_0__idx + 4 >> 2] | 0;
        $agg_tmp140_sroa_1_8_copyload$0 = HEAP32[$agg_tmp140_sroa_1_8__idx464 >> 2] | 0;
        $agg_tmp140_sroa_1_8_copyload$1 = HEAP32[$agg_tmp140_sroa_1_8__idx464 + 4 >> 2] | 0;
        $tobool144 = (HEAP8[$m_UseFullRange553] & 1) == 0;
        $sub_i253$0 = _i64Subtract(HEAP32[$Y2_i224 >> 2] | 0, HEAP32[$Y2_i224 + 4 >> 2] | 0, $agg_tmp137_sroa_1_8_copyload$0, $agg_tmp137_sroa_1_8_copyload$1) | 0;
        $sub_i253$1 = tempRet0;
        if ($tobool144) {
         $sub19_i283$0 = _i64Subtract($agg_tmp137_sroa_0_0_copyload$0, $agg_tmp137_sroa_0_0_copyload$1, $agg_tmp140_sroa_0_0_copyload$0, $agg_tmp140_sroa_0_0_copyload$1) | 0;
         $mul_i284$0 = ___muldi3($sub19_i283$0, tempRet0, $sub_i253$0, $sub_i253$1) | 0;
         $mul_i284$1 = tempRet0;
         $sub22_i286$0 = _i64Subtract($agg_tmp134_sroa_0_0_copyload$0, $agg_tmp134_sroa_0_0_copyload$1, $agg_tmp137_sroa_0_0_copyload$0, $agg_tmp137_sroa_0_0_copyload$1) | 0;
         $sub22_i286$1 = tempRet0;
         $sub25_i288$0 = _i64Subtract($agg_tmp137_sroa_1_8_copyload$0, $agg_tmp137_sroa_1_8_copyload$1, $agg_tmp140_sroa_1_8_copyload$0, $agg_tmp140_sroa_1_8_copyload$1) | 0;
         $mul26_i289$0 = ___muldi3($sub25_i288$0, tempRet0, $sub22_i286$0, $sub22_i286$1) | 0;
         $retval_0_i292 = ($mul_i284$0 | 0) == ($mul26_i289$0 | 0) & ($mul_i284$1 | 0) == (tempRet0 | 0);
        } else {
         HEAP32[$lo_i_i_i254 >> 2] = $sub_i253$0;
         HEAP32[$lo_i_i_i254 + 4 >> 2] = $sub_i253$1;
         HEAP32[$hi_i_i_i255 >> 2] = $sub_i253$1 >> 31 | (($sub_i253$1 | 0) < 0 ? -1 : 0) << 1;
         HEAP32[$hi_i_i_i255 + 4 >> 2] = (($sub_i253$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub_i253$1 | 0) < 0 ? -1 : 0) << 1;
         $sub3_i259$0 = _i64Subtract($agg_tmp137_sroa_0_0_copyload$0, $agg_tmp137_sroa_0_0_copyload$1, $agg_tmp140_sroa_0_0_copyload$0, $agg_tmp140_sroa_0_0_copyload$1) | 0;
         $sub3_i259$1 = tempRet0;
         HEAP32[$lo_i_i1_i260 >> 2] = $sub3_i259$0;
         HEAP32[$lo_i_i1_i260 + 4 >> 2] = $sub3_i259$1;
         HEAP32[$hi_i_i2_i261 >> 2] = $sub3_i259$1 >> 31 | (($sub3_i259$1 | 0) < 0 ? -1 : 0) << 1;
         HEAP32[$hi_i_i2_i261 + 4 >> 2] = (($sub3_i259$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub3_i259$1 | 0) < 0 ? -1 : 0) << 1;
         __ZNK10ClipperLib6Int128mlERKS0_($tmp4_i247, $tmp_i245, $ref_tmp_i246);
         $sub9_i264$0 = _i64Subtract($agg_tmp134_sroa_0_0_copyload$0, $agg_tmp134_sroa_0_0_copyload$1, $agg_tmp137_sroa_0_0_copyload$0, $agg_tmp137_sroa_0_0_copyload$1) | 0;
         $sub9_i264$1 = tempRet0;
         HEAP32[$lo_i_i7_i265 >> 2] = $sub9_i264$0;
         HEAP32[$lo_i_i7_i265 + 4 >> 2] = $sub9_i264$1;
         HEAP32[$hi_i_i8_i266 >> 2] = $sub9_i264$1 >> 31 | (($sub9_i264$1 | 0) < 0 ? -1 : 0) << 1;
         HEAP32[$hi_i_i8_i266 + 4 >> 2] = (($sub9_i264$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub9_i264$1 | 0) < 0 ? -1 : 0) << 1;
         $sub13_i269$0 = _i64Subtract($agg_tmp137_sroa_1_8_copyload$0, $agg_tmp137_sroa_1_8_copyload$1, $agg_tmp140_sroa_1_8_copyload$0, $agg_tmp140_sroa_1_8_copyload$1) | 0;
         $sub13_i269$1 = tempRet0;
         HEAP32[$lo_i_i4_i270 >> 2] = $sub13_i269$0;
         HEAP32[$lo_i_i4_i270 + 4 >> 2] = $sub13_i269$1;
         HEAP32[$hi_i_i5_i271 >> 2] = $sub13_i269$1 >> 31 | (($sub13_i269$1 | 0) < 0 ? -1 : 0) << 1;
         HEAP32[$hi_i_i5_i271 + 4 >> 2] = (($sub13_i269$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub13_i269$1 | 0) < 0 ? -1 : 0) << 1;
         __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp5_i248, $tmp6_i249, $ref_tmp10_i250);
         if (!((HEAP32[$hi_i_i273 >> 2] | 0) == (HEAP32[$hi2_i_i274 >> 2] | 0) & (HEAP32[$hi_i_i273 + 4 >> 2] | 0) == (HEAP32[$hi2_i_i274 + 4 >> 2] | 0))) {
          break L5626;
         }
         $retval_0_i292 = (HEAP32[$lo_i_i277 >> 2] | 0) == (HEAP32[$lo3_i_i278 >> 2] | 0) & (HEAP32[$lo_i_i277 + 4 >> 2] | 0) == (HEAP32[$lo3_i_i278 + 4 >> 2] | 0);
        }
        if (!$retval_0_i292) {
         break L5626;
        }
        if (($j_3510 | 0) < 2) {
         break L5630;
        } else {
         $i148_0495 = 2;
        }
        while (1) {
         $87 = $p_sroa_0_0_load441485544 + ($i148_0495 - 1 << 4) | 0;
         $88 = $p_sroa_0_0_load441485544 + ($i148_0495 << 4) | 0;
         HEAP32[$87 >> 2] = HEAP32[$88 >> 2];
         HEAP32[$87 + 4 >> 2] = HEAP32[$88 + 4 >> 2];
         HEAP32[$87 + 8 >> 2] = HEAP32[$88 + 8 >> 2];
         HEAP32[$87 + 12 >> 2] = HEAP32[$88 + 12 >> 2];
         $i148_0495 = $i148_0495 + 1 | 0;
         if (($i148_0495 | 0) > ($j_3510 | 0)) {
          break L5630;
         }
        }
       }
      } while (0);
      $74 = $arrayidx_i407;
      HEAP32[$8 >> 2] = HEAP32[$74 >> 2];
      HEAP32[$8 + 4 >> 2] = HEAP32[$74 + 4 >> 2];
      HEAP32[$8 + 8 >> 2] = HEAP32[$74 + 8 >> 2];
      HEAP32[$8 + 12 >> 2] = HEAP32[$74 + 12 >> 2];
     }
    } while (0);
    $dec166 = $len_0507 - 1 | 0;
    if (($dec166 | 0) <= 2) {
     $retval_0 = 0;
     $p_sroa_0_0_load441485552 = $p_sroa_0_0_load441485544;
     $143 = $8;
     break L5588;
    }
    $len_0507 = $dec166;
    $j_3510 = $j_3510 - 1 | 0;
   }
   if (($len_0507 | 0) < 3) {
    $retval_0 = 0;
    $p_sroa_0_0_load441485552 = $p_sroa_0_0_load441485544;
    $143 = $8;
    break;
   }
   $89$0 = _llvm_umul_with_overflow_i32($len_0507 | 0, 136) | 0;
   $93 = __Znaj(tempRet0 ? -1 : $89$0) | 0;
   HEAP32[$edges >> 2] = $93;
   $__end__i292 = $this + 20 | 0;
   $94 = HEAP32[$__end__i292 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$this + 24 >> 2] | 0)) {
    __ZNSt3__16vectorIPN10ClipperLib5TEdgeENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($this + 16 | 0, $edges);
    $97 = HEAP32[$edges >> 2] | 0;
   } else {
    if (($94 | 0) == 0) {
     $96 = 0;
    } else {
     HEAP32[$94 >> 2] = $93;
     $96 = HEAP32[$__end__i292 >> 2] | 0;
    }
    HEAP32[$__end__i292 >> 2] = $96 + 4;
    $97 = $93;
   }
   $98$1 = HEAP32[$X1_i221 + 4 >> 2] | 0;
   $xcurr = $97 + 16 | 0;
   HEAP32[$xcurr >> 2] = HEAP32[$X1_i221 >> 2];
   HEAP32[$xcurr + 4 >> 2] = $98$1;
   $99$1 = HEAP32[$Y2_i224 + 4 >> 2] | 0;
   $ycurr = $97 + 24 | 0;
   HEAP32[$ycurr >> 2] = HEAP32[$Y2_i224 >> 2];
   HEAP32[$ycurr + 4 >> 2] = $99$1;
   $sub180 = $len_0507 - 1 | 0;
   $arrayidx181 = $97 + ($sub180 * 136 & -1) | 0;
   $sub183 = $len_0507 - 2 | 0;
   _memset($arrayidx181 | 0, 0, 136);
   HEAP32[$97 + ($sub180 * 136 & -1) + 104 >> 2] = $97;
   HEAP32[$97 + ($sub180 * 136 & -1) + 108 >> 2] = $97 + ($sub183 * 136 & -1);
   $X_i160 = $p_sroa_0_0_load441485544 + ($sub180 << 4) | 0;
   $101$0 = HEAP32[$X_i160 >> 2] | 0;
   $101$1 = HEAP32[$X_i160 + 4 >> 2] | 0;
   $xcurr_i161 = $97 + ($sub180 * 136 & -1) + 16 | 0;
   HEAP32[$xcurr_i161 >> 2] = $101$0;
   HEAP32[$xcurr_i161 + 4 >> 2] = $101$1;
   $Y_i162 = $p_sroa_0_0_load441485544 + ($sub180 << 4) + 8 | 0;
   $102$0 = HEAP32[$Y_i162 >> 2] | 0;
   $102$1 = HEAP32[$Y_i162 + 4 >> 2] | 0;
   $ycurr_i163 = $97 + ($sub180 * 136 & -1) + 24 | 0;
   HEAP32[$ycurr_i163 >> 2] = $102$0;
   HEAP32[$ycurr_i163 + 4 >> 2] = $102$1;
   $103$1 = HEAP32[$ycurr + 4 >> 2] | 0;
   if (($102$1 | 0) < ($103$1 | 0) | ($102$1 | 0) == ($103$1 | 0) & $102$0 >>> 0 < (HEAP32[$ycurr >> 2] | 0) >>> 0) {
    $xtop11_i173 = $97 + ($sub180 * 136 & -1) + 32 | 0;
    HEAP32[$xtop11_i173 >> 2] = $101$0;
    HEAP32[$xtop11_i173 + 4 >> 2] = $101$1;
    $ytop13_i174 = $97 + ($sub180 * 136 & -1) + 40 | 0;
    HEAP32[$ytop13_i174 >> 2] = $102$0;
    HEAP32[$ytop13_i174 + 4 >> 2] = $102$1;
    $106$0 = HEAP32[$xcurr >> 2] | 0;
    $106$1 = HEAP32[$xcurr + 4 >> 2] | 0;
    $xbot16_i176 = $arrayidx181 | 0;
    HEAP32[$xbot16_i176 >> 2] = $106$0;
    HEAP32[$xbot16_i176 + 4 >> 2] = $106$1;
    $107$0 = HEAP32[$ycurr >> 2] | 0;
    $107$1 = HEAP32[$ycurr + 4 >> 2] | 0;
    $ybot19_i177 = $97 + ($sub180 * 136 & -1) + 8 | 0;
    HEAP32[$ybot19_i177 >> 2] = $107$0;
    HEAP32[$ybot19_i177 + 4 >> 2] = $107$1;
    HEAP32[$97 + ($sub180 * 136 & -1) + 88 >> 2] = -1;
    $111$1 = $101$1;
    $111$0 = $101$0;
    $110$1 = $106$1;
    $110$0 = $106$0;
    $109$1 = $102$1;
    $109$0 = $102$0;
    $108$1 = $107$1;
    $108$0 = $107$0;
   } else {
    $xbot_i166 = $arrayidx181 | 0;
    HEAP32[$xbot_i166 >> 2] = $101$0;
    HEAP32[$xbot_i166 + 4 >> 2] = $101$1;
    $ybot_i167 = $97 + ($sub180 * 136 & -1) + 8 | 0;
    HEAP32[$ybot_i167 >> 2] = $102$0;
    HEAP32[$ybot_i167 + 4 >> 2] = $102$1;
    $104$0 = HEAP32[$xcurr >> 2] | 0;
    $104$1 = HEAP32[$xcurr + 4 >> 2] | 0;
    $xtop_i169 = $97 + ($sub180 * 136 & -1) + 32 | 0;
    HEAP32[$xtop_i169 >> 2] = $104$0;
    HEAP32[$xtop_i169 + 4 >> 2] = $104$1;
    $105$0 = HEAP32[$ycurr >> 2] | 0;
    $105$1 = HEAP32[$ycurr + 4 >> 2] | 0;
    $ytop_i170 = $97 + ($sub180 * 136 & -1) + 40 | 0;
    HEAP32[$ytop_i170 >> 2] = $105$0;
    HEAP32[$ytop_i170 + 4 >> 2] = $105$1;
    HEAP32[$97 + ($sub180 * 136 & -1) + 88 >> 2] = 1;
    $111$1 = $104$1;
    $111$0 = $104$0;
    $110$1 = $101$1;
    $110$0 = $101$0;
    $109$1 = $105$1;
    $109$0 = $105$0;
    $108$1 = $102$1;
    $108$0 = $102$0;
   }
   $sub_i_i180$0 = _i64Subtract($111$0, $111$1, $110$0, $110$1) | 0;
   $sub_i_i180$1 = tempRet0;
   $deltaX_i_i181 = $97 + ($sub180 * 136 & -1) + 56 | 0;
   HEAP32[$deltaX_i_i181 >> 2] = $sub_i_i180$0;
   HEAP32[$deltaX_i_i181 + 4 >> 2] = $sub_i_i180$1;
   $sub1_i_i182$0 = _i64Subtract($109$0, $109$1, $108$0, $108$1) | 0;
   $sub1_i_i182$1 = tempRet0;
   $deltaY_i_i183 = $97 + ($sub180 * 136 & -1) + 64 | 0;
   HEAP32[$deltaY_i_i183 >> 2] = $sub1_i_i182$0;
   HEAP32[$deltaY_i_i183 + 4 >> 2] = $sub1_i_i182$1;
   if (($109$0 | 0) == ($108$0 | 0) & ($109$1 | 0) == ($108$1 | 0)) {
    HEAPF64[$97 + ($sub180 * 136 & -1) + 48 >> 3] = -1.0e+40;
   } else {
    HEAPF64[$97 + ($sub180 * 136 & -1) + 48 >> 3] = (+($sub_i_i180$0 >>> 0) + +($sub_i_i180$1 | 0) * 4294967296.0) / (+($sub1_i_i182$0 >>> 0) + +($sub1_i_i182$1 | 0) * 4294967296.0);
   }
   HEAP32[$97 + ($sub180 * 136 & -1) + 80 >> 2] = $polyType;
   HEAP32[$97 + ($sub180 * 136 & -1) + 100 >> 2] = -1;
   if (($sub183 | 0) > 0) {
    $i189_0493 = $sub183;
    $112$1 = $102$1;
    $112$0 = $102$0;
    while (1) {
     $arrayidx194 = $97 + ($i189_0493 * 136 & -1) | 0;
     $add195 = $i189_0493 + 1 | 0;
     $sub197 = $i189_0493 - 1 | 0;
     _memset($arrayidx194 | 0, 0, 136);
     HEAP32[$97 + ($i189_0493 * 136 & -1) + 104 >> 2] = $97 + ($add195 * 136 & -1);
     HEAP32[$97 + ($i189_0493 * 136 & -1) + 108 >> 2] = $97 + ($sub197 * 136 & -1);
     $X_i122 = $p_sroa_0_0_load441485544 + ($i189_0493 << 4) | 0;
     $114$0 = HEAP32[$X_i122 >> 2] | 0;
     $114$1 = HEAP32[$X_i122 + 4 >> 2] | 0;
     $xcurr_i123 = $97 + ($i189_0493 * 136 & -1) + 16 | 0;
     HEAP32[$xcurr_i123 >> 2] = $114$0;
     HEAP32[$xcurr_i123 + 4 >> 2] = $114$1;
     $Y_i124 = $p_sroa_0_0_load441485544 + ($i189_0493 << 4) + 8 | 0;
     $115$0 = HEAP32[$Y_i124 >> 2] | 0;
     $115$1 = HEAP32[$Y_i124 + 4 >> 2] | 0;
     $ycurr_i125 = $97 + ($i189_0493 * 136 & -1) + 24 | 0;
     HEAP32[$ycurr_i125 >> 2] = $115$0;
     HEAP32[$ycurr_i125 + 4 >> 2] = $115$1;
     $ycurr3_i126 = $97 + ($add195 * 136 & -1) + 24 | 0;
     if (($115$1 | 0) < ($112$1 | 0) | ($115$1 | 0) == ($112$1 | 0) & $115$0 >>> 0 < $112$0 >>> 0) {
      $xtop11_i135 = $97 + ($i189_0493 * 136 & -1) + 32 | 0;
      HEAP32[$xtop11_i135 >> 2] = $114$0;
      HEAP32[$xtop11_i135 + 4 >> 2] = $114$1;
      $ytop13_i136 = $97 + ($i189_0493 * 136 & -1) + 40 | 0;
      HEAP32[$ytop13_i136 >> 2] = $115$0;
      HEAP32[$ytop13_i136 + 4 >> 2] = $115$1;
      $xcurr15_i137 = $97 + ($add195 * 136 & -1) + 16 | 0;
      $118$0 = HEAP32[$xcurr15_i137 >> 2] | 0;
      $118$1 = HEAP32[$xcurr15_i137 + 4 >> 2] | 0;
      $xbot16_i138 = $arrayidx194 | 0;
      HEAP32[$xbot16_i138 >> 2] = $118$0;
      HEAP32[$xbot16_i138 + 4 >> 2] = $118$1;
      $119$0 = HEAP32[$ycurr3_i126 >> 2] | 0;
      $119$1 = HEAP32[$ycurr3_i126 + 4 >> 2] | 0;
      $ybot19_i139 = $97 + ($i189_0493 * 136 & -1) + 8 | 0;
      HEAP32[$ybot19_i139 >> 2] = $119$0;
      HEAP32[$ybot19_i139 + 4 >> 2] = $119$1;
      HEAP32[$97 + ($i189_0493 * 136 & -1) + 88 >> 2] = -1;
      $123$1 = $114$1;
      $123$0 = $114$0;
      $122$1 = $118$1;
      $122$0 = $118$0;
      $121$1 = $115$1;
      $121$0 = $115$0;
      $120$1 = $119$1;
      $120$0 = $119$0;
     } else {
      $xbot_i128 = $arrayidx194 | 0;
      HEAP32[$xbot_i128 >> 2] = $114$0;
      HEAP32[$xbot_i128 + 4 >> 2] = $114$1;
      $ybot_i129 = $97 + ($i189_0493 * 136 & -1) + 8 | 0;
      HEAP32[$ybot_i129 >> 2] = $115$0;
      HEAP32[$ybot_i129 + 4 >> 2] = $115$1;
      $xcurr7_i130 = $97 + ($add195 * 136 & -1) + 16 | 0;
      $116$0 = HEAP32[$xcurr7_i130 >> 2] | 0;
      $116$1 = HEAP32[$xcurr7_i130 + 4 >> 2] | 0;
      $xtop_i131 = $97 + ($i189_0493 * 136 & -1) + 32 | 0;
      HEAP32[$xtop_i131 >> 2] = $116$0;
      HEAP32[$xtop_i131 + 4 >> 2] = $116$1;
      $117$0 = HEAP32[$ycurr3_i126 >> 2] | 0;
      $117$1 = HEAP32[$ycurr3_i126 + 4 >> 2] | 0;
      $ytop_i132 = $97 + ($i189_0493 * 136 & -1) + 40 | 0;
      HEAP32[$ytop_i132 >> 2] = $117$0;
      HEAP32[$ytop_i132 + 4 >> 2] = $117$1;
      HEAP32[$97 + ($i189_0493 * 136 & -1) + 88 >> 2] = 1;
      $123$1 = $116$1;
      $123$0 = $116$0;
      $122$1 = $114$1;
      $122$0 = $114$0;
      $121$1 = $117$1;
      $121$0 = $117$0;
      $120$1 = $115$1;
      $120$0 = $115$0;
     }
     $sub_i_i142$0 = _i64Subtract($123$0, $123$1, $122$0, $122$1) | 0;
     $sub_i_i142$1 = tempRet0;
     $deltaX_i_i143 = $97 + ($i189_0493 * 136 & -1) + 56 | 0;
     HEAP32[$deltaX_i_i143 >> 2] = $sub_i_i142$0;
     HEAP32[$deltaX_i_i143 + 4 >> 2] = $sub_i_i142$1;
     $sub1_i_i144$0 = _i64Subtract($121$0, $121$1, $120$0, $120$1) | 0;
     $sub1_i_i144$1 = tempRet0;
     $deltaY_i_i145 = $97 + ($i189_0493 * 136 & -1) + 64 | 0;
     HEAP32[$deltaY_i_i145 >> 2] = $sub1_i_i144$0;
     HEAP32[$deltaY_i_i145 + 4 >> 2] = $sub1_i_i144$1;
     if (($121$0 | 0) == ($120$0 | 0) & ($121$1 | 0) == ($120$1 | 0)) {
      HEAPF64[$97 + ($i189_0493 * 136 & -1) + 48 >> 3] = -1.0e+40;
     } else {
      HEAPF64[$97 + ($i189_0493 * 136 & -1) + 48 >> 3] = (+($sub_i_i142$0 >>> 0) + +($sub_i_i142$1 | 0) * 4294967296.0) / (+($sub1_i_i144$0 >>> 0) + +($sub1_i_i144$1 | 0) * 4294967296.0);
     }
     HEAP32[$97 + ($i189_0493 * 136 & -1) + 80 >> 2] = $polyType;
     HEAP32[$97 + ($i189_0493 * 136 & -1) + 100 >> 2] = -1;
     if (($sub197 | 0) > 0) {
      $i189_0493 = $sub197;
      $112$1 = $115$1;
      $112$0 = $115$0;
     } else {
      break;
     }
    }
   }
   $arrayidx206 = $97 + 136 | 0;
   _memset($97 | 0, 0, 136);
   HEAP32[$97 + 104 >> 2] = $arrayidx206;
   HEAP32[$97 + 108 >> 2] = $arrayidx181;
   $125$0 = HEAP32[$X1_i221 >> 2] | 0;
   $125$1 = HEAP32[$X1_i221 + 4 >> 2] | 0;
   HEAP32[$xcurr >> 2] = $125$0;
   HEAP32[$xcurr + 4 >> 2] = $125$1;
   $126$0 = HEAP32[$Y2_i224 >> 2] | 0;
   $126$1 = HEAP32[$Y2_i224 + 4 >> 2] | 0;
   HEAP32[$ycurr >> 2] = $126$0;
   HEAP32[$ycurr + 4 >> 2] = $126$1;
   $ycurr3_i = $97 + 160 | 0;
   $127$0 = HEAP32[$ycurr3_i >> 2] | 0;
   $127$1 = HEAP32[$ycurr3_i + 4 >> 2] | 0;
   if (($126$1 | 0) < ($127$1 | 0) | ($126$1 | 0) == ($127$1 | 0) & $126$0 >>> 0 < $127$0 >>> 0) {
    $xtop11_i = $97 + 32 | 0;
    HEAP32[$xtop11_i >> 2] = $125$0;
    HEAP32[$xtop11_i + 4 >> 2] = $125$1;
    $ytop13_i = $97 + 40 | 0;
    HEAP32[$ytop13_i >> 2] = $126$0;
    HEAP32[$ytop13_i + 4 >> 2] = $126$1;
    $xcurr15_i = $97 + 152 | 0;
    $129$0 = HEAP32[$xcurr15_i >> 2] | 0;
    $129$1 = HEAP32[$xcurr15_i + 4 >> 2] | 0;
    $xbot16_i = $97 | 0;
    HEAP32[$xbot16_i >> 2] = $129$0;
    HEAP32[$xbot16_i + 4 >> 2] = $129$1;
    $ybot19_i = $97 + 8 | 0;
    HEAP32[$ybot19_i >> 2] = $127$0;
    HEAP32[$ybot19_i + 4 >> 2] = $127$1;
    HEAP32[$97 + 88 >> 2] = -1;
    $133$1 = $125$1;
    $133$0 = $125$0;
    $132$1 = $129$1;
    $132$0 = $129$0;
    $131$1 = $126$1;
    $131$0 = $126$0;
    $130$1 = $127$1;
    $130$0 = $127$0;
   } else {
    $xbot_i = $97 | 0;
    HEAP32[$xbot_i >> 2] = $125$0;
    HEAP32[$xbot_i + 4 >> 2] = $125$1;
    $ybot_i = $97 + 8 | 0;
    HEAP32[$ybot_i >> 2] = $126$0;
    HEAP32[$ybot_i + 4 >> 2] = $126$1;
    $xcurr7_i = $97 + 152 | 0;
    $128$0 = HEAP32[$xcurr7_i >> 2] | 0;
    $128$1 = HEAP32[$xcurr7_i + 4 >> 2] | 0;
    $xtop_i = $97 + 32 | 0;
    HEAP32[$xtop_i >> 2] = $128$0;
    HEAP32[$xtop_i + 4 >> 2] = $128$1;
    $ytop_i = $97 + 40 | 0;
    HEAP32[$ytop_i >> 2] = $127$0;
    HEAP32[$ytop_i + 4 >> 2] = $127$1;
    HEAP32[$97 + 88 >> 2] = 1;
    $133$1 = $128$1;
    $133$0 = $128$0;
    $132$1 = $125$1;
    $132$0 = $125$0;
    $131$1 = $127$1;
    $131$0 = $127$0;
    $130$1 = $126$1;
    $130$0 = $126$0;
   }
   $sub_i_i$0 = _i64Subtract($133$0, $133$1, $132$0, $132$1) | 0;
   $sub_i_i$1 = tempRet0;
   $deltaX_i_i = $97 + 56 | 0;
   HEAP32[$deltaX_i_i >> 2] = $sub_i_i$0;
   HEAP32[$deltaX_i_i + 4 >> 2] = $sub_i_i$1;
   $sub1_i_i$0 = _i64Subtract($131$0, $131$1, $130$0, $130$1) | 0;
   $sub1_i_i$1 = tempRet0;
   $deltaY_i_i = $97 + 64 | 0;
   HEAP32[$deltaY_i_i >> 2] = $sub1_i_i$0;
   HEAP32[$deltaY_i_i + 4 >> 2] = $sub1_i_i$1;
   if (($131$0 | 0) == ($130$0 | 0) & ($131$1 | 0) == ($130$1 | 0)) {
    HEAPF64[$97 + 48 >> 3] = -1.0e+40;
   } else {
    HEAPF64[$97 + 48 >> 3] = (+($sub_i_i$0 >>> 0) + +($sub_i_i$1 | 0) * 4294967296.0) / (+($sub1_i_i$0 >>> 0) + +($sub1_i_i$1 | 0) * 4294967296.0);
   }
   HEAP32[$97 + 80 >> 2] = $polyType;
   HEAP32[$97 + 100 >> 2] = -1;
   $eHighest_0 = $97;
   $e_0 = $97;
   $137$1 = $132$1;
   $137$0 = $132$0;
   $136$1 = $130$1;
   $136$0 = $130$0;
   $135$1 = $131$1;
   $135$0 = $131$0;
   $134 = $arrayidx206;
   while (1) {
    $xcurr213 = $e_0 + 16 | 0;
    HEAP32[$xcurr213 >> 2] = $137$0;
    HEAP32[$xcurr213 + 4 >> 2] = $137$1;
    $ycurr214 = $e_0 + 24 | 0;
    HEAP32[$ycurr214 >> 2] = $136$0;
    HEAP32[$ycurr214 + 4 >> 2] = $136$1;
    $ytop215 = $eHighest_0 + 40 | 0;
    $138$1 = HEAP32[$ytop215 + 4 >> 2] | 0;
    $e_0_eHighest_0 = ($135$1 | 0) < ($138$1 | 0) | ($135$1 | 0) == ($138$1 | 0) & $135$0 >>> 0 < (HEAP32[$ytop215 >> 2] | 0) >>> 0 ? $e_0 : $eHighest_0;
    if (($134 | 0) == ($97 | 0)) {
     break;
    }
    $xbot_phi_trans_insert = $134 | 0;
    $ybot_phi_trans_insert = $134 + 8 | 0;
    $ytop_phi_trans_insert = $134 + 40 | 0;
    $eHighest_0 = $e_0_eHighest_0;
    $e_0 = $134;
    $137$1 = HEAP32[$xbot_phi_trans_insert + 4 >> 2] | 0;
    $137$0 = HEAP32[$xbot_phi_trans_insert >> 2] | 0;
    $136$1 = HEAP32[$ybot_phi_trans_insert + 4 >> 2] | 0;
    $136$0 = HEAP32[$ybot_phi_trans_insert >> 2] | 0;
    $135$1 = HEAP32[$ytop_phi_trans_insert + 4 >> 2] | 0;
    $135$0 = HEAP32[$ytop_phi_trans_insert >> 2] | 0;
    $134 = HEAP32[$134 + 104 >> 2] | 0;
   }
   if ((HEAP32[$e_0_eHighest_0 + 88 >> 2] | 0) > 0) {
    $eHighest_2 = HEAP32[$e_0_eHighest_0 + 104 >> 2] | 0;
   } else {
    $eHighest_2 = $e_0_eHighest_0;
   }
   $sub225 = +HEAPF64[$eHighest_2 + 48 >> 3] + 1.0e+40;
   if ($sub225 > -1.0e-20 & $sub225 < 1.0e-20) {
    $eHighest_3 = HEAP32[$eHighest_2 + 104 >> 2] | 0;
   } else {
    $eHighest_3 = $eHighest_2;
   }
   $e_1 = $eHighest_3;
   while (1) {
    $call236 = __ZN10ClipperLib11ClipperBase14AddBoundsToLMLEPNS_5TEdgeE($this, $e_1) | 0;
    if (($call236 | 0) == ($eHighest_3 | 0)) {
     $retval_0 = 1;
     $p_sroa_0_0_load441485552 = $p_sroa_0_0_load441485544;
     $143 = $8;
     break;
    } else {
     $e_1 = $call236;
    }
   }
  }
 } while (0);
 if (($p_sroa_0_0_load441485552 | 0) == 0) {
  $retval_1 = $retval_0;
  STACKTOP = __stackBase__;
  return $retval_1 | 0;
 }
 __ZdlPv($143);
 $retval_1 = $retval_0;
 STACKTOP = __stackBase__;
 return $retval_1 | 0;
}
function __ZN10ClipperLib11ClipperBase5ResetEv($this) {
 $this = $this | 0;
 var $0 = 0, $lm_027 = 0, $e_019 = 0, $e_021 = 0, $xbot = 0, $1$1 = 0, $xcurr = 0, $ybot = 0, $2$1 = 0, $ycurr = 0, $e_122 = 0, $e_124 = 0, $xbot11 = 0, $3$1 = 0, $xcurr12 = 0, $ybot13 = 0, $4$1 = 0, $ycurr14 = 0;
 $0 = HEAP32[$this + 8 >> 2] | 0;
 HEAP32[$this + 4 >> 2] = $0;
 if (($0 | 0) == 0) {
  return;
 } else {
  $lm_027 = $0;
 }
 do {
  $e_019 = HEAP32[$lm_027 + 8 >> 2] | 0;
  if (($e_019 | 0) != 0) {
   $e_021 = $e_019;
   do {
    $xbot = $e_021 | 0;
    $1$1 = HEAP32[$xbot + 4 >> 2] | 0;
    $xcurr = $e_021 + 16 | 0;
    HEAP32[$xcurr >> 2] = HEAP32[$xbot >> 2];
    HEAP32[$xcurr + 4 >> 2] = $1$1;
    $ybot = $e_021 + 8 | 0;
    $2$1 = HEAP32[$ybot + 4 >> 2] | 0;
    $ycurr = $e_021 + 24 | 0;
    HEAP32[$ycurr >> 2] = HEAP32[$ybot >> 2];
    HEAP32[$ycurr + 4 >> 2] = $2$1;
    HEAP32[$e_021 + 84 >> 2] = 1;
    HEAP32[$e_021 + 100 >> 2] = -1;
    $e_021 = HEAP32[$e_021 + 112 >> 2] | 0;
   } while (($e_021 | 0) != 0);
  }
  $e_122 = HEAP32[$lm_027 + 12 >> 2] | 0;
  if (($e_122 | 0) != 0) {
   $e_124 = $e_122;
   do {
    $xbot11 = $e_124 | 0;
    $3$1 = HEAP32[$xbot11 + 4 >> 2] | 0;
    $xcurr12 = $e_124 + 16 | 0;
    HEAP32[$xcurr12 >> 2] = HEAP32[$xbot11 >> 2];
    HEAP32[$xcurr12 + 4 >> 2] = $3$1;
    $ybot13 = $e_124 + 8 | 0;
    $4$1 = HEAP32[$ybot13 + 4 >> 2] | 0;
    $ycurr14 = $e_124 + 24 | 0;
    HEAP32[$ycurr14 >> 2] = HEAP32[$ybot13 >> 2];
    HEAP32[$ycurr14 + 4 >> 2] = $4$1;
    HEAP32[$e_124 + 84 >> 2] = 2;
    HEAP32[$e_124 + 100 >> 2] = -1;
    $e_124 = HEAP32[$e_124 + 112 >> 2] | 0;
   } while (($e_124 | 0) != 0);
  }
  $lm_027 = HEAP32[$lm_027 + 16 >> 2] | 0;
 } while (($lm_027 | 0) != 0);
 return;
}
function __ZN10ClipperLib11ClipperBase14AddBoundsToLMLEPNS_5TEdgeE($this, $e) {
 $this = $this | 0;
 $e = $e | 0;
 var $e_pn = 0, $e_addr_0 = 0, $dx = 0, $sub = 0.0, $1 = 0, $ytop = 0, $2$1 = 0, $ytop6 = 0, $3$1 = 0, $_pre = 0, $xbot14_phi_trans_insert = 0, $xbot = 0, $4$1 = 0, $5 = 0, $xbot10 = 0, $6$0 = 0, $6$1 = 0, $7$0 = 0, $7$1 = 0, $8 = 0, $xtop = 0, $9$0 = 0, $9$1 = 0, $xcurr_i = 0, $xbot_i = 0, $10$1 = 0, $ycurr = 0, $12 = 0, $ycurr21 = 0, $call = 0, $14 = 0, $15 = 0, $prev31 = 0, $ybot = 0, $17$1 = 0, $Y = 0, $18 = 0.0, $sub33 = 0.0, $xbot40 = 0, $19$0 = 0, $19$1 = 0, $20 = 0, $xbot42 = 0, $xtop_i60 = 0, $22$0 = 0, $22$1 = 0, $xcurr_i61 = 0, $25 = 0, $27 = 0, $31 = 0, $m_MinimaList_i = 0, $34 = 0, $35$0 = 0, $35$1 = 0, $Y4_i = 0, $36$1 = 0, $tmpLm_0_i = 0, $next10_i = 0, $37 = 0, $Y14_i = 0, $38$1 = 0, $39 = 0, $e_addr_1 = 0, $40 = 0, $ytop67 = 0, $ytop68 = 0, $dx72 = 0, $sub73 = 0.0, $sub86 = 0.0, $xbot93 = 0, $45$0 = 0, $45$1 = 0, $xtop95 = 0, $xtop_i57 = 0, $48$0 = 0, $48$1 = 0, $xcurr_i58 = 0;
 HEAP32[$e + 112 >> 2] = 0;
 $e_pn = $e;
 while (1) {
  $e_addr_0 = HEAP32[$e_pn + 104 >> 2] | 0;
  $dx = $e_addr_0 + 48 | 0;
  $sub = +HEAPF64[$dx >> 3] + 1.0e+40;
  if (!($sub > -1.0e-20 & $sub < 1.0e-20)) {
   $ycurr = $e_addr_0 + 24 | 0;
   $12 = HEAP32[$e_addr_0 + 108 >> 2] | 0;
   $ycurr21 = $12 + 24 | 0;
   if ((HEAP32[$ycurr >> 2] | 0) == (HEAP32[$ycurr21 >> 2] | 0) & (HEAP32[$ycurr + 4 >> 2] | 0) == (HEAP32[$ycurr21 + 4 >> 2] | 0)) {
    break;
   }
   HEAP32[$e_addr_0 + 112 >> 2] = $12;
   $e_pn = $e_addr_0;
   continue;
  }
  $1 = HEAP32[$e_addr_0 + 104 >> 2] | 0;
  $ytop = $1 + 40 | 0;
  $2$1 = HEAP32[$ytop + 4 >> 2] | 0;
  $ytop6 = $e_addr_0 + 40 | 0;
  $3$1 = HEAP32[$ytop6 + 4 >> 2] | 0;
  if (($2$1 | 0) < ($3$1 | 0) | ($2$1 | 0) == ($3$1 | 0) & (HEAP32[$ytop >> 2] | 0) >>> 0 < (HEAP32[$ytop6 >> 2] | 0) >>> 0) {
   $xbot = $1 | 0;
   $4$1 = HEAP32[$xbot + 4 >> 2] | 0;
   $5 = HEAP32[$e_addr_0 + 108 >> 2] | 0;
   $xbot10 = $5 | 0;
   $6$0 = HEAP32[$xbot10 >> 2] | 0;
   $6$1 = HEAP32[$xbot10 + 4 >> 2] | 0;
   if (($4$1 | 0) > ($6$1 | 0) | ($4$1 | 0) == ($6$1 | 0) & (HEAP32[$xbot >> 2] | 0) >>> 0 > $6$0 >>> 0) {
    break;
   } else {
    $8 = $5;
    $7$1 = $6$1;
    $7$0 = $6$0;
   }
  } else {
   $_pre = HEAP32[$e_addr_0 + 108 >> 2] | 0;
   $xbot14_phi_trans_insert = $_pre | 0;
   $8 = $_pre;
   $7$1 = HEAP32[$xbot14_phi_trans_insert + 4 >> 2] | 0;
   $7$0 = HEAP32[$xbot14_phi_trans_insert >> 2] | 0;
  }
  $xtop = $e_addr_0 + 32 | 0;
  $9$0 = HEAP32[$xtop >> 2] | 0;
  $9$1 = HEAP32[$xtop + 4 >> 2] | 0;
  if (!(($9$0 | 0) == ($7$0 | 0) & ($9$1 | 0) == ($7$1 | 0))) {
   $xcurr_i = $e_addr_0 + 16 | 0;
   HEAP32[$xcurr_i >> 2] = $9$0;
   HEAP32[$xcurr_i + 4 >> 2] = $9$1;
   $xbot_i = $e_addr_0 | 0;
   $10$1 = HEAP32[$xbot_i + 4 >> 2] | 0;
   HEAP32[$xtop >> 2] = HEAP32[$xbot_i >> 2];
   HEAP32[$xtop + 4 >> 2] = $10$1;
   HEAP32[$xbot_i >> 2] = $9$0;
   HEAP32[$xbot_i + 4 >> 2] = $9$1;
  }
  HEAP32[$e_addr_0 + 112 >> 2] = $8;
  $e_pn = $e_addr_0;
 }
 $call = __Znwj(24) | 0;
 $14 = $call;
 $15 = $call + 16 | 0;
 HEAP32[$15 >> 2] = 0;
 $prev31 = $e_addr_0 + 108 | 0;
 $ybot = (HEAP32[$prev31 >> 2] | 0) + 8 | 0;
 $17$1 = HEAP32[$ybot + 4 >> 2] | 0;
 $Y = $call;
 HEAP32[$Y >> 2] = HEAP32[$ybot >> 2];
 HEAP32[$Y + 4 >> 2] = $17$1;
 $18 = +HEAPF64[$dx >> 3];
 $sub33 = $18 + 1.0e+40;
 do {
  if ($sub33 > -1.0e-20 & $sub33 < 1.0e-20) {
   $xbot40 = $e_addr_0 | 0;
   $19$0 = HEAP32[$xbot40 >> 2] | 0;
   $19$1 = HEAP32[$xbot40 + 4 >> 2] | 0;
   $20 = HEAP32[$prev31 >> 2] | 0;
   $xbot42 = $20 | 0;
   if (!(($19$0 | 0) == (HEAP32[$xbot42 >> 2] | 0) & ($19$1 | 0) == (HEAP32[$xbot42 + 4 >> 2] | 0))) {
    $xtop_i60 = $e_addr_0 + 32 | 0;
    $22$0 = HEAP32[$xtop_i60 >> 2] | 0;
    $22$1 = HEAP32[$xtop_i60 + 4 >> 2] | 0;
    $xcurr_i61 = $e_addr_0 + 16 | 0;
    HEAP32[$xcurr_i61 >> 2] = $22$0;
    HEAP32[$xcurr_i61 + 4 >> 2] = $22$1;
    HEAP32[$xtop_i60 >> 2] = $19$0;
    HEAP32[$xtop_i60 + 4 >> 2] = $19$1;
    HEAP32[$xbot40 >> 2] = $22$0;
    HEAP32[$xbot40 + 4 >> 2] = $22$1;
   }
   HEAP32[$call + 8 >> 2] = $20;
   HEAP32[$call + 12 >> 2] = $e_addr_0;
   $31 = $20;
  } else {
   $25 = HEAP32[$prev31 >> 2] | 0;
   $27 = $call + 8 | 0;
   if ($18 < +HEAPF64[$25 + 48 >> 3]) {
    HEAP32[$27 >> 2] = $25;
    HEAP32[$call + 12 >> 2] = $e_addr_0;
    $31 = $25;
    break;
   } else {
    HEAP32[$27 >> 2] = $e_addr_0;
    HEAP32[$call + 12 >> 2] = HEAP32[$prev31 >> 2];
    $31 = $e_addr_0;
    break;
   }
  }
 } while (0);
 HEAP32[$31 + 84 >> 2] = 1;
 HEAP32[(HEAP32[$call + 12 >> 2] | 0) + 84 >> 2] = 2;
 $m_MinimaList_i = $this + 8 | 0;
 $34 = HEAP32[$m_MinimaList_i >> 2] | 0;
 do {
  if (($34 | 0) == 0) {
   HEAP32[$m_MinimaList_i >> 2] = $14;
   $e_addr_1 = $e_addr_0;
  } else {
   $35$0 = HEAP32[$Y >> 2] | 0;
   $35$1 = HEAP32[$Y + 4 >> 2] | 0;
   $Y4_i = $34 | 0;
   $36$1 = HEAP32[$Y4_i + 4 >> 2] | 0;
   if (($35$1 | 0) < ($36$1 | 0) | ($35$1 | 0) == ($36$1 | 0) & $35$0 >>> 0 < (HEAP32[$Y4_i >> 2] | 0) >>> 0) {
    $tmpLm_0_i = $34;
   } else {
    HEAP32[$15 >> 2] = $34;
    HEAP32[$m_MinimaList_i >> 2] = $14;
    $e_addr_1 = $e_addr_0;
    break;
   }
   while (1) {
    $next10_i = $tmpLm_0_i + 16 | 0;
    $37 = HEAP32[$next10_i >> 2] | 0;
    if (($37 | 0) == 0) {
     $39 = 0;
     break;
    }
    $Y14_i = $37 | 0;
    $38$1 = HEAP32[$Y14_i + 4 >> 2] | 0;
    if (($35$1 | 0) < ($38$1 | 0) | ($35$1 | 0) == ($38$1 | 0) & $35$0 >>> 0 < (HEAP32[$Y14_i >> 2] | 0) >>> 0) {
     $tmpLm_0_i = $37;
    } else {
     $39 = $37;
     break;
    }
   }
   HEAP32[$15 >> 2] = $39;
   HEAP32[$next10_i >> 2] = $14;
   $e_addr_1 = $e_addr_0;
  }
 } while (0);
 while (1) {
  $40 = HEAP32[$e_addr_1 + 104 >> 2] | 0;
  $ytop67 = $40 + 40 | 0;
  $ytop68 = $e_addr_1 + 40 | 0;
  $dx72 = $40 + 48 | 0;
  if ((HEAP32[$ytop67 >> 2] | 0) == (HEAP32[$ytop68 >> 2] | 0) & (HEAP32[$ytop67 + 4 >> 2] | 0) == (HEAP32[$ytop68 + 4 >> 2] | 0)) {
   $sub73 = +HEAPF64[$dx72 >> 3] + 1.0e+40;
   if (!($sub73 > -1.0e-20 & $sub73 < 1.0e-20)) {
    break;
   }
  }
  HEAP32[$e_addr_1 + 112 >> 2] = $40;
  $sub86 = +HEAPF64[$dx72 >> 3] + 1.0e+40;
  if (!($sub86 > -1.0e-20 & $sub86 < 1.0e-20)) {
   $e_addr_1 = $40;
   continue;
  }
  $xbot93 = $40 | 0;
  $45$0 = HEAP32[$xbot93 >> 2] | 0;
  $45$1 = HEAP32[$xbot93 + 4 >> 2] | 0;
  $xtop95 = (HEAP32[$40 + 108 >> 2] | 0) + 32 | 0;
  if (($45$0 | 0) == (HEAP32[$xtop95 >> 2] | 0) & ($45$1 | 0) == (HEAP32[$xtop95 + 4 >> 2] | 0)) {
   $e_addr_1 = $40;
   continue;
  }
  $xtop_i57 = $40 + 32 | 0;
  $48$0 = HEAP32[$xtop_i57 >> 2] | 0;
  $48$1 = HEAP32[$xtop_i57 + 4 >> 2] | 0;
  $xcurr_i58 = $40 + 16 | 0;
  HEAP32[$xcurr_i58 >> 2] = $48$0;
  HEAP32[$xcurr_i58 + 4 >> 2] = $48$1;
  HEAP32[$xtop_i57 >> 2] = $45$0;
  HEAP32[$xtop_i57 + 4 >> 2] = $45$1;
  HEAP32[$xbot93 >> 2] = $48$0;
  HEAP32[$xbot93 + 4 >> 2] = $48$1;
  $e_addr_1 = $40;
 }
 return $40 | 0;
}
function __ZN10ClipperLib11ClipperBase5ClearEv($this) {
 $this = $this | 0;
 var $m_MinimaList_i = 0, $0 = 0, $1 = 0, $2 = 0, $__end__i = 0, $4 = 0, $__begin__i = 0, $5 = 0, $9 = 0, $10 = 0, $i_09 = 0, $11 = 0, $13 = 0, $14 = 0, $inc = 0, $m_UseFullRange = 0;
 $m_MinimaList_i = $this + 8 | 0;
 $0 = HEAP32[$m_MinimaList_i >> 2] | 0;
 if (($0 | 0) != 0) {
  $1 = $0;
  while (1) {
   $2 = HEAP32[$1 + 16 >> 2] | 0;
   __ZdlPv($1);
   HEAP32[$m_MinimaList_i >> 2] = $2;
   if (($2 | 0) == 0) {
    break;
   } else {
    $1 = $2;
   }
  }
 }
 HEAP32[$this + 4 >> 2] = 0;
 $__end__i = $this + 20 | 0;
 $4 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i = $this + 16 | 0;
 $5 = HEAP32[$__begin__i >> 2] | 0;
 if (($4 | 0) == ($5 | 0)) {
  $m_UseFullRange = $this + 12 | 0;
  HEAP8[$m_UseFullRange] = 0;
  return;
 } else {
  $i_09 = 0;
  $10 = $5;
  $9 = $4;
 }
 while (1) {
  $11 = HEAP32[$10 + ($i_09 << 2) >> 2] | 0;
  if (($11 | 0) == 0) {
   $14 = $9;
   $13 = $10;
  } else {
   __ZdaPv($11);
   $14 = HEAP32[$__end__i >> 2] | 0;
   $13 = HEAP32[$__begin__i >> 2] | 0;
  }
  $inc = $i_09 + 1 | 0;
  if ($inc >>> 0 < $14 - $13 >> 2 >>> 0) {
   $i_09 = $inc;
   $10 = $13;
   $9 = $14;
  } else {
   break;
  }
 }
 if (($13 | 0) == ($14 | 0)) {
  $m_UseFullRange = $this + 12 | 0;
  HEAP8[$m_UseFullRange] = 0;
  return;
 }
 HEAP32[$__end__i >> 2] = $14 + ((($14 - 4 + (-$13 | 0) | 0) >>> 2 ^ -1) << 2);
 $m_UseFullRange = $this + 12 | 0;
 HEAP8[$m_UseFullRange] = 0;
 return;
}
function __ZN10ClipperLib11ClipperBase9GetBoundsEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0, $2 = 0, $xbot = 0, $3$0 = 0, $3$1 = 0, $left2 = 0, $ybot = 0, $4$0 = 0, $4$1 = 0, $top4 = 0, $right7 = 0, $bottom10 = 0, $5$0 = 0, $5$1 = 0, $6 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $8$1 = 0, $9$0 = 0, $9$1 = 0, $10$0 = 0, $10$1 = 0, $lm_037 = 0, $11$0 = 0, $11$1 = 0, $rightBound = 0, $e_0 = 0, $12$0 = 0, $12$1 = 0, $13$0 = 0, $13$1 = 0, $14$0 = 0, $14$1 = 0, $15 = 0, $xbot2428 = 0, $16$0 = 0, $16$1 = 0, $cmp2629 = 0, $17$0 = 0, $17$1 = 0, $18 = 0, $19$0 = 0, $19$1 = 0, $cmp2632 = 0, $20$0 = 0, $20$1 = 0, $21$0 = 0, $21$1 = 0, $22$0 = 0, $22$1 = 0, $23 = 0, $xbot24 = 0, $24$0 = 0, $24$1 = 0, $cmp26 = 0, $25$0 = 0, $25$1 = 0, $26$0 = 0, $26$1 = 0, $27$0 = 0, $27$1 = 0, $cmp26_lcssa = 0, $xbot24_lcssa = 0, $e_1_lcssa = 0, $28$0 = 0, $28$1 = 0, $29$0 = 0, $29$1 = 0, $30$0 = 0, $30$1 = 0, $xtop = 0, $31$0 = 0, $31$1 = 0, $32$0 = 0, $32$1 = 0, $33$0 = 0, $33$1 = 0, $34$0 = 0, $34$1 = 0, $ytop = 0, $35$0 = 0, $35$1 = 0, $36$0 = 0, $36$1 = 0, $37 = 0, $_pre43 = 0, $ybot13_phi_trans_insert = 0;
 $0 = HEAP32[$this + 8 >> 2] | 0;
 if (($0 | 0) == 0) {
  _memset($agg_result | 0, 0, 32);
  return;
 }
 $2 = HEAP32[$0 + 8 >> 2] | 0;
 $xbot = $2 | 0;
 $3$0 = HEAP32[$xbot >> 2] | 0;
 $3$1 = HEAP32[$xbot + 4 >> 2] | 0;
 $left2 = $agg_result | 0;
 HEAP32[$left2 >> 2] = $3$0;
 HEAP32[$left2 + 4 >> 2] = $3$1;
 $ybot = $2 + 8 | 0;
 $4$0 = HEAP32[$ybot >> 2] | 0;
 $4$1 = HEAP32[$ybot + 4 >> 2] | 0;
 $top4 = $agg_result + 8 | 0;
 HEAP32[$top4 >> 2] = $4$0;
 HEAP32[$top4 + 4 >> 2] = $4$1;
 $right7 = $agg_result + 16 | 0;
 HEAP32[$right7 >> 2] = $3$0;
 HEAP32[$right7 + 4 >> 2] = $3$1;
 $bottom10 = $agg_result + 24 | 0;
 HEAP32[$bottom10 >> 2] = $4$0;
 HEAP32[$bottom10 + 4 >> 2] = $4$1;
 $lm_037 = $0;
 $10$1 = $4$1;
 $10$0 = $4$0;
 $9$1 = $3$1;
 $9$0 = $3$0;
 $8$1 = $3$1;
 $8$0 = $3$0;
 $7$1 = $4$1;
 $7$0 = $4$0;
 $6 = $2;
 $5$1 = $4$1;
 $5$0 = $4$0;
 while (1) {
  if (($5$1 | 0) > ($10$1 | 0) | ($5$1 | 0) == ($10$1 | 0) & $5$0 >>> 0 > $10$0 >>> 0) {
   HEAP32[$bottom10 >> 2] = $5$0;
   HEAP32[$bottom10 + 4 >> 2] = $5$1;
   $11$1 = $5$1;
   $11$0 = $5$0;
  } else {
   $11$1 = $10$1;
   $11$0 = $10$0;
  }
  $rightBound = $lm_037 + 12 | 0;
  $14$1 = $9$1;
  $14$0 = $9$0;
  $13$1 = $8$1;
  $13$0 = $8$0;
  $12$1 = $7$1;
  $12$0 = $7$0;
  $e_0 = $6;
  while (1) {
   $15 = HEAP32[$e_0 + 112 >> 2] | 0;
   $xbot2428 = $e_0 | 0;
   $16$0 = HEAP32[$xbot2428 >> 2] | 0;
   $16$1 = HEAP32[$xbot2428 + 4 >> 2] | 0;
   $cmp2629 = ($16$1 | 0) < ($14$1 | 0) | ($16$1 | 0) == ($14$1 | 0) & $16$0 >>> 0 < $14$0 >>> 0;
   if (($15 | 0) == 0) {
    $e_1_lcssa = $e_0;
    $xbot24_lcssa = $xbot2428;
    $cmp26_lcssa = $cmp2629;
    $27$1 = $16$1;
    $27$0 = $16$0;
    $26$1 = $13$1;
    $26$0 = $13$0;
    $25$1 = $14$1;
    $25$0 = $14$0;
   } else {
    $20$1 = $16$1;
    $20$0 = $16$0;
    $cmp2632 = $cmp2629;
    $19$1 = $13$1;
    $19$0 = $13$0;
    $18 = $15;
    $17$1 = $14$1;
    $17$0 = $14$0;
    while (1) {
     if ($cmp2632) {
      HEAP32[$left2 >> 2] = $20$0;
      HEAP32[$left2 + 4 >> 2] = $20$1;
      $21$1 = $20$1;
      $21$0 = $20$0;
     } else {
      $21$1 = $17$1;
      $21$0 = $17$0;
     }
     if (($20$1 | 0) > ($19$1 | 0) | ($20$1 | 0) == ($19$1 | 0) & $20$0 >>> 0 > $19$0 >>> 0) {
      HEAP32[$right7 >> 2] = $20$0;
      HEAP32[$right7 + 4 >> 2] = $20$1;
      $22$1 = $20$1;
      $22$0 = $20$0;
     } else {
      $22$1 = $19$1;
      $22$0 = $19$0;
     }
     $23 = HEAP32[$18 + 112 >> 2] | 0;
     $xbot24 = $18 | 0;
     $24$0 = HEAP32[$xbot24 >> 2] | 0;
     $24$1 = HEAP32[$xbot24 + 4 >> 2] | 0;
     $cmp26 = ($24$1 | 0) < ($21$1 | 0) | ($24$1 | 0) == ($21$1 | 0) & $24$0 >>> 0 < $21$0 >>> 0;
     if (($23 | 0) == 0) {
      $e_1_lcssa = $18;
      $xbot24_lcssa = $xbot24;
      $cmp26_lcssa = $cmp26;
      $27$1 = $24$1;
      $27$0 = $24$0;
      $26$1 = $22$1;
      $26$0 = $22$0;
      $25$1 = $21$1;
      $25$0 = $21$0;
      break;
     } else {
      $20$1 = $24$1;
      $20$0 = $24$0;
      $cmp2632 = $cmp26;
      $19$1 = $22$1;
      $19$0 = $22$0;
      $18 = $23;
      $17$1 = $21$1;
      $17$0 = $21$0;
     }
    }
   }
   if ($cmp26_lcssa) {
    HEAP32[$left2 >> 2] = $27$0;
    HEAP32[$left2 + 4 >> 2] = $27$1;
    $29$1 = HEAP32[$xbot24_lcssa + 4 >> 2] | 0;
    $29$0 = HEAP32[$xbot24_lcssa >> 2] | 0;
    $28$1 = $27$1;
    $28$0 = $27$0;
   } else {
    $29$1 = $27$1;
    $29$0 = $27$0;
    $28$1 = $25$1;
    $28$0 = $25$0;
   }
   if (($29$1 | 0) > ($26$1 | 0) | ($29$1 | 0) == ($26$1 | 0) & $29$0 >>> 0 > $26$0 >>> 0) {
    HEAP32[$right7 >> 2] = $29$0;
    HEAP32[$right7 + 4 >> 2] = $29$1;
    $30$1 = $29$1;
    $30$0 = $29$0;
   } else {
    $30$1 = $26$1;
    $30$0 = $26$0;
   }
   $xtop = $e_1_lcssa + 32 | 0;
   $31$0 = HEAP32[$xtop >> 2] | 0;
   $31$1 = HEAP32[$xtop + 4 >> 2] | 0;
   if (($31$1 | 0) < ($28$1 | 0) | ($31$1 | 0) == ($28$1 | 0) & $31$0 >>> 0 < $28$0 >>> 0) {
    HEAP32[$left2 >> 2] = $31$0;
    HEAP32[$left2 + 4 >> 2] = $31$1;
    $33$1 = $31$1;
    $33$0 = $31$0;
    $32$1 = HEAP32[$xtop + 4 >> 2] | 0;
    $32$0 = HEAP32[$xtop >> 2] | 0;
   } else {
    $33$1 = $28$1;
    $33$0 = $28$0;
    $32$1 = $31$1;
    $32$0 = $31$0;
   }
   if (($32$1 | 0) > ($30$1 | 0) | ($32$1 | 0) == ($30$1 | 0) & $32$0 >>> 0 > $30$0 >>> 0) {
    HEAP32[$right7 >> 2] = $32$0;
    HEAP32[$right7 + 4 >> 2] = $32$1;
    $34$1 = $32$1;
    $34$0 = $32$0;
   } else {
    $34$1 = $30$1;
    $34$0 = $30$0;
   }
   $ytop = $e_1_lcssa + 40 | 0;
   $35$0 = HEAP32[$ytop >> 2] | 0;
   $35$1 = HEAP32[$ytop + 4 >> 2] | 0;
   if (($35$1 | 0) < ($12$1 | 0) | ($35$1 | 0) == ($12$1 | 0) & $35$0 >>> 0 < $12$0 >>> 0) {
    HEAP32[$top4 >> 2] = $35$0;
    HEAP32[$top4 + 4 >> 2] = $35$1;
    $36$1 = $35$1;
    $36$0 = $35$0;
   } else {
    $36$1 = $12$1;
    $36$0 = $12$0;
   }
   if (($e_0 | 0) != ($6 | 0)) {
    break;
   }
   $14$1 = $33$1;
   $14$0 = $33$0;
   $13$1 = $34$1;
   $13$0 = $34$0;
   $12$1 = $36$1;
   $12$0 = $36$0;
   $e_0 = HEAP32[$rightBound >> 2] | 0;
  }
  $37 = HEAP32[$lm_037 + 16 >> 2] | 0;
  if (($37 | 0) == 0) {
   break;
  }
  $_pre43 = HEAP32[$37 + 8 >> 2] | 0;
  $ybot13_phi_trans_insert = $_pre43 + 8 | 0;
  $lm_037 = $37;
  $10$1 = $11$1;
  $10$0 = $11$0;
  $9$1 = $33$1;
  $9$0 = $33$0;
  $8$1 = $34$1;
  $8$0 = $34$0;
  $7$1 = $36$1;
  $7$0 = $36$0;
  $6 = $_pre43;
  $5$1 = HEAP32[$ybot13_phi_trans_insert + 4 >> 2] | 0;
  $5$0 = HEAP32[$ybot13_phi_trans_insert >> 2] | 0;
 }
 return;
}
function __ZN10ClipperLib7ClipperD2Ev($this, $vtt) {
 $this = $this | 0;
 $vtt = $vtt | 0;
 var $0 = 0, $m_Scanbeam_i = 0, $9 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $__end__i_i_i_i_i_i = 0, $15 = 0, $20 = 0, $21 = 0, $__end__i_i_i_i_i_i3 = 0, $22 = 0, $27 = 0, $__end__i_i_i_i_i_i14 = 0, $29 = 0;
 $0 = HEAP32[$vtt >> 2] | 0;
 HEAP32[$this >> 2] = $0;
 HEAP32[$this + (HEAP32[$0 - 12 >> 2] | 0) >> 2] = HEAP32[$vtt + 4 >> 2];
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 8 >> 2] & 511]($this);
 $m_Scanbeam_i = $this + 44 | 0;
 $9 = HEAP32[$m_Scanbeam_i >> 2] | 0;
 if (($9 | 0) != 0) {
  $10 = $9;
  while (1) {
   $11 = HEAP32[$10 + 8 >> 2] | 0;
   __ZdlPv($10);
   HEAP32[$m_Scanbeam_i >> 2] = $11;
   if (($11 | 0) == 0) {
    break;
   } else {
    $10 = $11;
   }
  }
 }
 $13 = HEAP32[$this + 28 >> 2] | 0;
 $14 = $13;
 if (($13 | 0) != 0) {
  $__end__i_i_i_i_i_i = $this + 32 | 0;
  $15 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
  if (($13 | 0) != ($15 | 0)) {
   HEAP32[$__end__i_i_i_i_i_i >> 2] = $15 + ((($15 - 4 + (-$14 | 0) | 0) >>> 2 ^ -1) << 2);
  }
  __ZdlPv($13);
 }
 $20 = HEAP32[$this + 16 >> 2] | 0;
 $21 = $20;
 if (($20 | 0) != 0) {
  $__end__i_i_i_i_i_i3 = $this + 20 | 0;
  $22 = HEAP32[$__end__i_i_i_i_i_i3 >> 2] | 0;
  if (($20 | 0) != ($22 | 0)) {
   HEAP32[$__end__i_i_i_i_i_i3 >> 2] = $22 + ((($22 - 4 + (-$21 | 0) | 0) >>> 2 ^ -1) << 2);
  }
  __ZdlPv($20);
 }
 $27 = HEAP32[$this + 4 >> 2] | 0;
 if (($27 | 0) == 0) {
  return;
 }
 $__end__i_i_i_i_i_i14 = $this + 8 | 0;
 $29 = HEAP32[$__end__i_i_i_i_i_i14 >> 2] | 0;
 if (($27 | 0) != ($29 | 0)) {
  HEAP32[$__end__i_i_i_i_i_i14 >> 2] = $29 + ((($29 - 4 + (-$27 | 0) | 0) >>> 2 ^ -1) << 2);
 }
 __ZdlPv($27);
 return;
}
function __ZN10ClipperLib7ClipperD0Ev($this) {
 $this = $this | 0;
 __ZN10ClipperLib7ClipperD2Ev($this, 12040);
 __ZN10ClipperLib11ClipperBaseD2Ev($this + 76 | 0);
 __ZdlPv($this);
 return;
}
function __ZN10ClipperLib7ClipperD1Ev($this) {
 $this = $this | 0;
 __ZN10ClipperLib7ClipperD2Ev($this, 12040);
 __ZN10ClipperLib11ClipperBaseD2Ev($this + 76 | 0);
 return;
}
function __ZTv0_n12_N10ClipperLib7ClipperD0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $5 = 0, $6 = 0;
 $0 = $this;
 $5 = HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0;
 $6 = $0 + $5 | 0;
 __ZN10ClipperLib7ClipperD2Ev($6, 12040);
 __ZN10ClipperLib11ClipperBaseD2Ev($0 + ($5 + 76) | 0);
 __ZdlPv($6);
 return;
}
function __ZTv0_n12_N10ClipperLib7ClipperD1Ev($this) {
 $this = $this | 0;
 var $0 = 0, $5 = 0;
 $0 = $this;
 $5 = HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0;
 __ZN10ClipperLib7ClipperD2Ev($0 + $5 | 0, 12040);
 __ZN10ClipperLib11ClipperBaseD2Ev($0 + ($5 + 76) | 0);
 return;
}
function __ZN10ClipperLib7Clipper5ClearEv($this) {
 $this = $this | 0;
 var $0 = 0, $vbase_offset = 0, $2 = 0, $vbase_offset4 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $20 = 0, $21 = 0, $i_09_i = 0, $22 = 0, $24 = 0, $25 = 0, $inc_i = 0, $sub_ptr_rhs_cast_i_i = 0;
 $0 = $this;
 $vbase_offset = HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0;
 $2 = $this;
 if ((HEAP32[$2 + ($vbase_offset + 20) >> 2] | 0) == (HEAP32[$2 + ($vbase_offset + 16) >> 2] | 0)) {
  return;
 }
 __ZN10ClipperLib7Clipper17DisposeAllPolyPtsEv($this);
 $vbase_offset4 = HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0;
 $7 = $2 + ($vbase_offset4 + 8) | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (($8 | 0) != 0) {
  $9 = $8;
  while (1) {
   $10 = HEAP32[$9 + 16 >> 2] | 0;
   __ZdlPv($9);
   HEAP32[$7 >> 2] = $10;
   if (($10 | 0) == 0) {
    break;
   } else {
    $9 = $10;
   }
  }
 }
 HEAP32[$2 + ($vbase_offset4 + 4) >> 2] = 0;
 $13 = $2 + ($vbase_offset4 + 20) | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 $15 = $2 + ($vbase_offset4 + 16) | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 do {
  if (($14 | 0) != ($16 | 0)) {
   $i_09_i = 0;
   $21 = $16;
   $20 = $14;
   while (1) {
    $22 = HEAP32[$21 + ($i_09_i << 2) >> 2] | 0;
    if (($22 | 0) == 0) {
     $25 = $20;
     $24 = $21;
    } else {
     __ZdaPv($22);
     $25 = HEAP32[$13 >> 2] | 0;
     $24 = HEAP32[$15 >> 2] | 0;
    }
    $inc_i = $i_09_i + 1 | 0;
    $sub_ptr_rhs_cast_i_i = $24;
    if ($inc_i >>> 0 < $25 - $sub_ptr_rhs_cast_i_i >> 2 >>> 0) {
     $i_09_i = $inc_i;
     $21 = $24;
     $20 = $25;
    } else {
     break;
    }
   }
   if (($24 | 0) == ($25 | 0)) {
    break;
   }
   HEAP32[$13 >> 2] = $25 + ((($25 - 4 + (-$sub_ptr_rhs_cast_i_i | 0) | 0) >>> 2 ^ -1) << 2);
  }
 } while (0);
 HEAP8[$2 + ($vbase_offset4 + 12) | 0] = 0;
 return;
}
function __ZN10ClipperLib7Clipper17DisposeAllPolyPtsEv($this) {
 $this = $this | 0;
 var $__end__i = 0, $__begin__i = 0, $1 = 0, $5 = 0, $i_09 = 0, $6 = 0, $pts_i = 0, $7 = 0, $9 = 0, $10 = 0, $13 = 0, $16 = 0, label = 0;
 $__end__i = $this + 8 | 0;
 $__begin__i = $this + 4 | 0;
 $1 = HEAP32[$__begin__i >> 2] | 0;
 if ((HEAP32[$__end__i >> 2] | 0) == ($1 | 0)) {
  return;
 } else {
  $i_09 = 0;
  $5 = $1;
 }
 do {
  $6 = HEAP32[$5 + ($i_09 << 2) >> 2] | 0;
  $pts_i = $6 + 16 | 0;
  $7 = HEAP32[$pts_i >> 2] | 0;
  do {
   if (($7 | 0) == 0) {
    label = 5230;
   } else {
    HEAP32[(HEAP32[$7 + 28 >> 2] | 0) + 24 >> 2] = 0;
    $9 = HEAP32[$pts_i >> 2] | 0;
    if (($9 | 0) == 0) {
     label = 5230;
     break;
    } else {
     $10 = $9;
    }
    while (1) {
     HEAP32[$pts_i >> 2] = HEAP32[$10 + 24 >> 2];
     __ZdlPv($10);
     $13 = HEAP32[$pts_i >> 2] | 0;
     if (($13 | 0) == 0) {
      label = 5231;
      break;
     } else {
      $10 = $13;
     }
    }
   }
  } while (0);
  if ((label | 0) == 5230) {
   label = 0;
   if (($6 | 0) != 0) {
    label = 5231;
   }
  }
  if ((label | 0) == 5231) {
   label = 0;
   __ZdlPv($6);
  }
  HEAP32[(HEAP32[$__begin__i >> 2] | 0) + ($i_09 << 2) >> 2] = 0;
  $i_09 = $i_09 + 1 | 0;
  $16 = HEAP32[$__end__i >> 2] | 0;
  $5 = HEAP32[$__begin__i >> 2] | 0;
 } while ($i_09 >>> 0 < $16 - $5 >> 2 >>> 0);
 if (($5 | 0) == ($16 | 0)) {
  return;
 }
 HEAP32[$__end__i >> 2] = $16 + ((($16 - 4 + (-$5 | 0) | 0) >>> 2 ^ -1) << 2);
 return;
}
function __ZTv0_n16_N10ClipperLib7Clipper5ClearEv($this) {
 $this = $this | 0;
 __ZN10ClipperLib7Clipper5ClearEv($this + (HEAP32[(HEAP32[$this >> 2] | 0) - 16 >> 2] | 0) | 0);
 return;
}
function __ZN10ClipperLib7Clipper5ResetEv($this) {
 $this = $this | 0;
 var $0 = 0, $vbase_offset = 0, $2 = 0, $4 = 0, $lm_027_i = 0, $e_019_i = 0, $e_021_i = 0, $xbot_i = 0, $6$1 = 0, $xcurr_i = 0, $ybot_i = 0, $7$1 = 0, $ycurr_i = 0, $e_122_i = 0, $e_124_i = 0, $xbot11_i = 0, $8$1 = 0, $xcurr12_i = 0, $ybot13_i = 0, $9$1 = 0, $ycurr14_i = 0, $m_Scanbeam = 0, $lm_036 = 0, $lm_038 = 0, $Y = 0, $12$0 = 0, $12$1 = 0, $13 = 0, $call_i9 = 0, $14 = 0, $Y5_i11 = 0, $Y7_i13 = 0, $16$1 = 0, $call9_i16 = 0, $17 = 0, $Y10_i17 = 0, $sb2_0_i20 = 0, $next16_i21 = 0, $20 = 0, $Y19_i24 = 0, $21$1 = 0, $Y22_i27 = 0, $call26_i30 = 0, $Y27_i31 = 0, $26 = 0, $ytop = 0, $28$0 = 0, $28$1 = 0, $call_i = 0, $Y5_i = 0, $Y7_i = 0, $31$1 = 0, $call9_i = 0, $Y10_i = 0, $sb2_0_i = 0, $next16_i = 0, $35 = 0, $Y19_i = 0, $36$1 = 0, $Y22_i = 0, $call26_i = 0, $Y27_i = 0;
 $0 = $this;
 $vbase_offset = HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0;
 $2 = $this;
 $4 = HEAP32[$2 + ($vbase_offset + 8) >> 2] | 0;
 HEAP32[$2 + ($vbase_offset + 4) >> 2] = $4;
 if (($4 | 0) != 0) {
  $lm_027_i = $4;
  do {
   $e_019_i = HEAP32[$lm_027_i + 8 >> 2] | 0;
   if (($e_019_i | 0) != 0) {
    $e_021_i = $e_019_i;
    do {
     $xbot_i = $e_021_i | 0;
     $6$1 = HEAP32[$xbot_i + 4 >> 2] | 0;
     $xcurr_i = $e_021_i + 16 | 0;
     HEAP32[$xcurr_i >> 2] = HEAP32[$xbot_i >> 2];
     HEAP32[$xcurr_i + 4 >> 2] = $6$1;
     $ybot_i = $e_021_i + 8 | 0;
     $7$1 = HEAP32[$ybot_i + 4 >> 2] | 0;
     $ycurr_i = $e_021_i + 24 | 0;
     HEAP32[$ycurr_i >> 2] = HEAP32[$ybot_i >> 2];
     HEAP32[$ycurr_i + 4 >> 2] = $7$1;
     HEAP32[$e_021_i + 84 >> 2] = 1;
     HEAP32[$e_021_i + 100 >> 2] = -1;
     $e_021_i = HEAP32[$e_021_i + 112 >> 2] | 0;
    } while (($e_021_i | 0) != 0);
   }
   $e_122_i = HEAP32[$lm_027_i + 12 >> 2] | 0;
   if (($e_122_i | 0) != 0) {
    $e_124_i = $e_122_i;
    do {
     $xbot11_i = $e_124_i | 0;
     $8$1 = HEAP32[$xbot11_i + 4 >> 2] | 0;
     $xcurr12_i = $e_124_i + 16 | 0;
     HEAP32[$xcurr12_i >> 2] = HEAP32[$xbot11_i >> 2];
     HEAP32[$xcurr12_i + 4 >> 2] = $8$1;
     $ybot13_i = $e_124_i + 8 | 0;
     $9$1 = HEAP32[$ybot13_i + 4 >> 2] | 0;
     $ycurr14_i = $e_124_i + 24 | 0;
     HEAP32[$ycurr14_i >> 2] = HEAP32[$ybot13_i >> 2];
     HEAP32[$ycurr14_i + 4 >> 2] = $9$1;
     HEAP32[$e_124_i + 84 >> 2] = 2;
     HEAP32[$e_124_i + 100 >> 2] = -1;
     $e_124_i = HEAP32[$e_124_i + 112 >> 2] | 0;
    } while (($e_124_i | 0) != 0);
   }
   $lm_027_i = HEAP32[$lm_027_i + 16 >> 2] | 0;
  } while (($lm_027_i | 0) != 0);
 }
 $m_Scanbeam = $this + 44 | 0;
 HEAP32[$m_Scanbeam >> 2] = 0;
 HEAP32[$this + 48 >> 2] = 0;
 HEAP32[$this + 52 >> 2] = 0;
 __ZN10ClipperLib7Clipper17DisposeAllPolyPtsEv($this);
 $lm_036 = HEAP32[$2 + ((HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0) + 8) >> 2] | 0;
 if (($lm_036 | 0) == 0) {
  return;
 } else {
  $lm_038 = $lm_036;
 }
 do {
  $Y = $lm_038 | 0;
  $12$0 = HEAP32[$Y >> 2] | 0;
  $12$1 = HEAP32[$Y + 4 >> 2] | 0;
  $13 = HEAP32[$m_Scanbeam >> 2] | 0;
  do {
   if (($13 | 0) == 0) {
    $call_i9 = __Znwj(16) | 0;
    $14 = $call_i9;
    HEAP32[$m_Scanbeam >> 2] = $14;
    HEAP32[$call_i9 + 8 >> 2] = 0;
    $Y5_i11 = $call_i9;
    HEAP32[$Y5_i11 >> 2] = $12$0;
    HEAP32[$Y5_i11 + 4 >> 2] = $12$1;
    $26 = $14;
   } else {
    $Y7_i13 = $13 | 0;
    $16$1 = HEAP32[$Y7_i13 + 4 >> 2] | 0;
    if (($16$1 | 0) < ($12$1 | 0) | ($16$1 | 0) == ($12$1 | 0) & (HEAP32[$Y7_i13 >> 2] | 0) >>> 0 < $12$0 >>> 0) {
     $call9_i16 = __Znwj(16) | 0;
     $17 = $call9_i16;
     $Y10_i17 = $call9_i16;
     HEAP32[$Y10_i17 >> 2] = $12$0;
     HEAP32[$Y10_i17 + 4 >> 2] = $12$1;
     HEAP32[$call9_i16 + 8 >> 2] = HEAP32[$m_Scanbeam >> 2];
     HEAP32[$m_Scanbeam >> 2] = $17;
     $26 = $17;
     break;
    } else {
     $sb2_0_i20 = $13;
    }
    while (1) {
     $next16_i21 = $sb2_0_i20 + 8 | 0;
     $20 = HEAP32[$next16_i21 >> 2] | 0;
     if (($20 | 0) == 0) {
      break;
     }
     $Y19_i24 = $20 | 0;
     $21$1 = HEAP32[$Y19_i24 + 4 >> 2] | 0;
     if (($21$1 | 0) < ($12$1 | 0) | ($21$1 | 0) == ($12$1 | 0) & (HEAP32[$Y19_i24 >> 2] | 0) >>> 0 < $12$0 >>> 0) {
      break;
     } else {
      $sb2_0_i20 = $20;
     }
    }
    $Y22_i27 = $sb2_0_i20 | 0;
    if ((HEAP32[$Y22_i27 >> 2] | 0) == ($12$0 | 0) & (HEAP32[$Y22_i27 + 4 >> 2] | 0) == ($12$1 | 0)) {
     $26 = $13;
     break;
    }
    $call26_i30 = __Znwj(16) | 0;
    $Y27_i31 = $call26_i30;
    HEAP32[$Y27_i31 >> 2] = $12$0;
    HEAP32[$Y27_i31 + 4 >> 2] = $12$1;
    HEAP32[$call26_i30 + 8 >> 2] = HEAP32[$next16_i21 >> 2];
    HEAP32[$next16_i21 >> 2] = $call26_i30;
    $26 = HEAP32[$m_Scanbeam >> 2] | 0;
   }
  } while (0);
  $ytop = (HEAP32[$lm_038 + 8 >> 2] | 0) + 40 | 0;
  $28$0 = HEAP32[$ytop >> 2] | 0;
  $28$1 = HEAP32[$ytop + 4 >> 2] | 0;
  do {
   if (($26 | 0) == 0) {
    $call_i = __Znwj(16) | 0;
    HEAP32[$m_Scanbeam >> 2] = $call_i;
    HEAP32[$call_i + 8 >> 2] = 0;
    $Y5_i = $call_i;
    HEAP32[$Y5_i >> 2] = $28$0;
    HEAP32[$Y5_i + 4 >> 2] = $28$1;
   } else {
    $Y7_i = $26 | 0;
    $31$1 = HEAP32[$Y7_i + 4 >> 2] | 0;
    if (($31$1 | 0) < ($28$1 | 0) | ($31$1 | 0) == ($28$1 | 0) & (HEAP32[$Y7_i >> 2] | 0) >>> 0 < $28$0 >>> 0) {
     $call9_i = __Znwj(16) | 0;
     $Y10_i = $call9_i;
     HEAP32[$Y10_i >> 2] = $28$0;
     HEAP32[$Y10_i + 4 >> 2] = $28$1;
     HEAP32[$call9_i + 8 >> 2] = HEAP32[$m_Scanbeam >> 2];
     HEAP32[$m_Scanbeam >> 2] = $call9_i;
     break;
    } else {
     $sb2_0_i = $26;
    }
    while (1) {
     $next16_i = $sb2_0_i + 8 | 0;
     $35 = HEAP32[$next16_i >> 2] | 0;
     if (($35 | 0) == 0) {
      break;
     }
     $Y19_i = $35 | 0;
     $36$1 = HEAP32[$Y19_i + 4 >> 2] | 0;
     if (($36$1 | 0) < ($28$1 | 0) | ($36$1 | 0) == ($28$1 | 0) & (HEAP32[$Y19_i >> 2] | 0) >>> 0 < $28$0 >>> 0) {
      break;
     } else {
      $sb2_0_i = $35;
     }
    }
    $Y22_i = $sb2_0_i | 0;
    if ((HEAP32[$Y22_i >> 2] | 0) == ($28$0 | 0) & (HEAP32[$Y22_i + 4 >> 2] | 0) == ($28$1 | 0)) {
     break;
    }
    $call26_i = __Znwj(16) | 0;
    $Y27_i = $call26_i;
    HEAP32[$Y27_i >> 2] = $28$0;
    HEAP32[$Y27_i + 4 >> 2] = $28$1;
    HEAP32[$call26_i + 8 >> 2] = HEAP32[$next16_i >> 2];
    HEAP32[$next16_i >> 2] = $call26_i;
   }
  } while (0);
  $lm_038 = HEAP32[$lm_038 + 16 >> 2] | 0;
 } while (($lm_038 | 0) != 0);
 return;
}
function __ZTv0_n20_N10ClipperLib7Clipper5ResetEv($this) {
 $this = $this | 0;
 __ZN10ClipperLib7Clipper5ResetEv($this + (HEAP32[(HEAP32[$this >> 2] | 0) - 20 >> 2] | 0) | 0);
 return;
}
function __ZN10ClipperLib7Clipper11BuildResultERNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEE($this, $polys) {
 $this = $this | 0;
 $polys = $polys | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_div_i = 0, $__end__i_i = 0, $2 = 0, $__begin__i_i = 0, $3 = 0, $sub_ptr_div_i_i = 0, $add_ptr_i = 0, $4 = 0, $incdec_ptr_i_i_i_i18 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $__end__i_i_i_i_i_i_i = 0, $10 = 0, $15 = 0, $k_061 = 0, $i_060 = 0, $17 = 0, $18 = 0, $arrayidx_i107 = 0, $__begin__i_i84 = 0, $19 = 0, $__end__i_i_i_i89 = 0, $20 = 0, $scevgep66 = 0, $24 = 0, $25 = 0, $__first__i_i_i_i = 0, $26 = 0, $p_0 = 0, $pt = 0, $28 = 0, $29 = 0, $30 = 0, $32 = 0, $36 = 0, $sub_ptr_rhs_cast_i34 = 0, $39 = 0, $k_1 = 0, $inc18 = 0, $k_0_lcssa = 0, $41 = 0, $42 = 0, $sub_ptr_div_i_i26 = 0, $add_ptr_i32 = 0, $43 = 0, $incdec_ptr_i_i_i_i35 = 0, $44 = 0, $45 = 0, $46 = 0, $__end__i_i_i_i_i_i_i41 = 0, $47 = 0;
 $__end__i = $this + 8 | 0;
 $__begin__i = $this + 4 | 0;
 $sub_ptr_div_i = (HEAP32[$__end__i >> 2] | 0) - (HEAP32[$__begin__i >> 2] | 0) >> 2;
 $__end__i_i = $polys + 4 | 0;
 $2 = HEAP32[$__end__i_i >> 2] | 0;
 $__begin__i_i = $polys | 0;
 $3 = HEAP32[$__begin__i_i >> 2] | 0;
 $sub_ptr_div_i_i = ($2 - $3 | 0) / 12 & -1;
 do {
  if ($sub_ptr_div_i_i >>> 0 < $sub_ptr_div_i >>> 0) {
   __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE8__appendEj($polys, $sub_ptr_div_i - $sub_ptr_div_i_i | 0);
  } else {
   if ($sub_ptr_div_i_i >>> 0 <= $sub_ptr_div_i >>> 0) {
    break;
   }
   $add_ptr_i = $3 + ($sub_ptr_div_i * 12 & -1) | 0;
   if (($add_ptr_i | 0) == ($2 | 0)) {
    break;
   } else {
    $4 = $2;
   }
   while (1) {
    $incdec_ptr_i_i_i_i18 = $4 - 12 | 0;
    HEAP32[$__end__i_i >> 2] = $incdec_ptr_i_i_i_i18;
    $5 = HEAP32[$incdec_ptr_i_i_i_i18 >> 2] | 0;
    $6 = $5;
    if (($5 | 0) == 0) {
     $7 = $incdec_ptr_i_i_i_i18;
    } else {
     $__end__i_i_i_i_i_i_i = $4 - 12 + 4 | 0;
     $10 = HEAP32[$__end__i_i_i_i_i_i_i >> 2] | 0;
     if (($5 | 0) != ($10 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i >> 2] = $10 + ((($10 - 16 + (-$6 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($5);
     $7 = HEAP32[$__end__i_i >> 2] | 0;
    }
    if (($add_ptr_i | 0) == ($7 | 0)) {
     break;
    } else {
     $4 = $7;
    }
   }
  }
 } while (0);
 $9 = HEAP32[$__begin__i >> 2] | 0;
 if ((HEAP32[$__end__i >> 2] | 0) == ($9 | 0)) {
  $k_0_lcssa = 0;
 } else {
  $i_060 = 0;
  $k_061 = 0;
  $15 = $9;
  while (1) {
   $17 = HEAP32[(HEAP32[$15 + ($i_060 << 2) >> 2] | 0) + 16 >> 2] | 0;
   do {
    if (($17 | 0) == 0) {
     $k_1 = $k_061;
     $39 = $15;
    } else {
     $18 = HEAP32[$__begin__i_i >> 2] | 0;
     $arrayidx_i107 = $18 + ($k_061 * 12 & -1) | 0;
     $__begin__i_i84 = $arrayidx_i107 | 0;
     $19 = HEAP32[$__begin__i_i84 >> 2] | 0;
     $__end__i_i_i_i89 = $18 + ($k_061 * 12 & -1) + 4 | 0;
     $20 = HEAP32[$__end__i_i_i_i89 >> 2] | 0;
     if (($19 | 0) == ($20 | 0)) {
      $25 = $17;
      $24 = $19;
     } else {
      $scevgep66 = $20 + ((($20 - 16 + (-$19 | 0) | 0) >>> 4 ^ -1) << 4) | 0;
      HEAP32[$__end__i_i_i_i89 >> 2] = $scevgep66;
      $25 = HEAP32[(HEAP32[(HEAP32[$__begin__i >> 2] | 0) + ($i_060 << 2) >> 2] | 0) + 16 >> 2] | 0;
      $24 = $scevgep66;
     }
     $__first__i_i_i_i = $18 + ($k_061 * 12 & -1) + 8 | 0;
     $p_0 = $25;
     $26 = $24;
     do {
      $pt = $p_0 + 8 | 0;
      if (($26 | 0) == (HEAP32[$__first__i_i_i_i >> 2] | 0)) {
       __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($arrayidx_i107, $pt);
      } else {
       if (($26 | 0) == 0) {
        $30 = 0;
       } else {
        $28 = $26;
        $29 = $pt;
        HEAP32[$28 >> 2] = HEAP32[$29 >> 2];
        HEAP32[$28 + 4 >> 2] = HEAP32[$29 + 4 >> 2];
        HEAP32[$28 + 8 >> 2] = HEAP32[$29 + 8 >> 2];
        HEAP32[$28 + 12 >> 2] = HEAP32[$29 + 12 >> 2];
        $30 = HEAP32[$__end__i_i_i_i89 >> 2] | 0;
       }
       HEAP32[$__end__i_i_i_i89 >> 2] = $30 + 16;
      }
      $p_0 = HEAP32[$p_0 + 24 >> 2] | 0;
      $32 = HEAP32[$__begin__i >> 2] | 0;
      $26 = HEAP32[$__end__i_i_i_i89 >> 2] | 0;
     } while (($p_0 | 0) != (HEAP32[(HEAP32[$32 + ($i_060 << 2) >> 2] | 0) + 16 >> 2] | 0));
     $36 = HEAP32[$__begin__i_i84 >> 2] | 0;
     $sub_ptr_rhs_cast_i34 = $36;
     if ($26 - $sub_ptr_rhs_cast_i34 >> 4 >>> 0 >= 3) {
      $k_1 = $k_061 + 1 | 0;
      $39 = $32;
      break;
     }
     if (($36 | 0) == ($26 | 0)) {
      $k_1 = $k_061;
      $39 = $32;
      break;
     }
     HEAP32[$__end__i_i_i_i89 >> 2] = $26 + ((($26 - 16 + (-$sub_ptr_rhs_cast_i34 | 0) | 0) >>> 4 ^ -1) << 4);
     $k_1 = $k_061;
     $39 = HEAP32[$__begin__i >> 2] | 0;
    }
   } while (0);
   $inc18 = $i_060 + 1 | 0;
   if ($inc18 >>> 0 < (HEAP32[$__end__i >> 2] | 0) - $39 >> 2 >>> 0) {
    $i_060 = $inc18;
    $k_061 = $k_1;
    $15 = $39;
   } else {
    $k_0_lcssa = $k_1;
    break;
   }
  }
 }
 $41 = HEAP32[$__end__i_i >> 2] | 0;
 $42 = HEAP32[$__begin__i_i >> 2] | 0;
 $sub_ptr_div_i_i26 = ($41 - $42 | 0) / 12 & -1;
 if ($sub_ptr_div_i_i26 >>> 0 < $k_0_lcssa >>> 0) {
  __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE8__appendEj($polys, $k_0_lcssa - $sub_ptr_div_i_i26 | 0);
  return;
 }
 if ($sub_ptr_div_i_i26 >>> 0 <= $k_0_lcssa >>> 0) {
  return;
 }
 $add_ptr_i32 = $42 + ($k_0_lcssa * 12 & -1) | 0;
 if (($add_ptr_i32 | 0) == ($41 | 0)) {
  return;
 } else {
  $43 = $41;
 }
 while (1) {
  $incdec_ptr_i_i_i_i35 = $43 - 12 | 0;
  HEAP32[$__end__i_i >> 2] = $incdec_ptr_i_i_i_i35;
  $44 = HEAP32[$incdec_ptr_i_i_i_i35 >> 2] | 0;
  $45 = $44;
  if (($44 | 0) == 0) {
   $46 = $incdec_ptr_i_i_i_i35;
  } else {
   $__end__i_i_i_i_i_i_i41 = $43 - 12 + 4 | 0;
   $47 = HEAP32[$__end__i_i_i_i_i_i_i41 >> 2] | 0;
   if (($44 | 0) != ($47 | 0)) {
    HEAP32[$__end__i_i_i_i_i_i_i41 >> 2] = $47 + ((($47 - 16 + (-$45 | 0) | 0) >>> 4 ^ -1) << 4);
   }
   __ZdlPv($44);
   $46 = HEAP32[$__end__i_i >> 2] | 0;
  }
  if (($add_ptr_i32 | 0) == ($46 | 0)) {
   break;
  } else {
   $43 = $46;
  }
 }
 return;
}
function __ZN10ClipperLib8PolySortEPNS_6OutRecES1_($or1, $or2) {
 $or1 = $or1 | 0;
 $or2 = $or2 | 0;
 var $0 = 0, $_pre = 0, $1 = 0, $tobool9 = 0, $not_cmp6 = 0, $_tobool9 = 0, $3 = 0, $tobool11 = 0, $_pn = 0, $i1_0 = 0, $6 = 0, $_pn14 = 0, $i2_0 = 0, $retval_0 = 0;
 if (($or1 | 0) == ($or2 | 0)) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 $0 = HEAP32[$or1 + 16 >> 2] | 0;
 $_pre = HEAP32[$or2 + 16 >> 2] | 0;
 if (($0 | 0) == 0) {
  $1 = $_pre;
  $tobool9 = ($0 | 0) != 0;
  $not_cmp6 = ($0 | 0) != ($1 | 0);
  $_tobool9 = $tobool9 & $not_cmp6;
  return $_tobool9 | 0;
 }
 if (($_pre | 0) == 0) {
  $1 = 0;
  $tobool9 = ($0 | 0) != 0;
  $not_cmp6 = ($0 | 0) != ($1 | 0);
  $_tobool9 = $tobool9 & $not_cmp6;
  return $_tobool9 | 0;
 }
 $3 = HEAP8[$or1 + 4 | 0] & 1;
 $tobool11 = $3 << 24 >> 24 == 0;
 if ($tobool11) {
  $_pn = $or1;
 } else {
  $_pn = HEAP32[$or1 + 8 >> 2] | 0;
 }
 $i1_0 = HEAP32[$_pn >> 2] | 0;
 $6 = HEAP8[$or2 + 4 | 0] & 1;
 if ($6 << 24 >> 24 == 0) {
  $_pn14 = $or2;
 } else {
  $_pn14 = HEAP32[$or2 + 8 >> 2] | 0;
 }
 $i2_0 = HEAP32[$_pn14 >> 2] | 0;
 if (!(($i1_0 | 0) != ($i2_0 | 0) | $3 << 24 >> 24 == $6 << 24 >> 24)) {
  $retval_0 = $tobool11;
  return $retval_0 | 0;
 }
 $retval_0 = ($i1_0 - $i2_0 | 0) < 0;
 return $retval_0 | 0;
}
function __ZN10ClipperLib7Clipper13BuildResultExERNSt3__16vectorINS_9ExPolygonENS1_9allocatorIS3_EEEE($this, $polys) {
 $this = $this | 0;
 $polys = $polys | 0;
 var $epg = 0, $pg = 0, $__end__i_i = 0, $0 = 0, $__begin__i_i = 0, $1 = 0, $3 = 0, $incdec_ptr_i_i_i_i = 0, $__end__i = 0, $__begin__i = 0, $9 = 0, $10 = 0, $__end__i93 = 0, $__first__i_i_i_i98 = 0, $outer = 0, $__begin__i120 = 0, $__begin__i_i_i_i = 0, $__end__i_i_i_i_i_i_i = 0, $__first__i_i_i_i = 0, $holes3_i_i = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $__first__i_i_i_i_i_i = 0, $__first__i_i_i_i156 = 0, $11 = 0, $k_0233 = 0, $i_0232 = 0, $arrayidx_i = 0, $16 = 0, $17 = 0, $p_0 = 0, $pt = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $inc = 0, $30 = 0, $i_1194 = 0, $arrayidx_i137 = 0, $31 = 0, $37 = 0, $38 = 0, $p_1 = 0, $pt41 = 0, $39 = 0, $40 = 0, $41 = 0, $45 = 0, $__begin__i_i26 = 0, $__end__i_i27 = 0, $__first__i_i_i_i_i = 0, $sub_ptr_sub_i_i30 = 0, $sub_ptr_div_i_i31 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $__first_addr_04_i_i = 0, $53 = 0, $54 = 0, $55 = 0, $inc52 = 0, $64 = 0, $65 = 0, $67 = 0, $68 = 0, $i_1_lcssa = 0, $82 = 0, $__begin__i_i110 = 0, $__end__i_i111 = 0, $__first__i_i_i_i_i112 = 0, $sub_ptr_sub_i_i117 = 0, $sub_ptr_div_i_i118 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $__first_addr_04_i_i129 = 0, $90 = 0, $91 = 0, $92 = 0, $108 = 0, $i_2 = 0, $k_1 = 0, $109 = 0, $110 = 0, $111 = 0, $incdec_ptr_i_i_i_i_i_i_i = 0, $112 = 0, $113 = 0, $114 = 0, $__end__i_i_i_i_i_i_i_i_i_i = 0, $115 = 0, $120 = 0, $122 = 0, $123 = 0, $125 = 0, $126 = 0, $k_0_lcssa = 0, $151 = 0, $152 = 0, $sub_ptr_div_i_i96 = 0, $add_ptr_i = 0, $153 = 0, $incdec_ptr_i_i_i_i104 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 $epg = __stackBase__ | 0;
 $pg = __stackBase__ + 24 | 0;
 $__end__i_i = $polys + 4 | 0;
 $0 = HEAP32[$__end__i_i >> 2] | 0;
 $__begin__i_i = $polys | 0;
 $1 = HEAP32[$__begin__i_i >> 2] | 0;
 if (($0 | 0) != ($1 | 0)) {
  $3 = $0;
  do {
   $incdec_ptr_i_i_i_i = $3 - 24 | 0;
   HEAP32[$__end__i_i >> 2] = $incdec_ptr_i_i_i_i;
   __ZN10ClipperLib9ExPolygonD2Ev($incdec_ptr_i_i_i_i);
   $3 = HEAP32[$__end__i_i >> 2] | 0;
  } while (($1 | 0) != ($3 | 0));
 }
 $__end__i = $this + 8 | 0;
 $__begin__i = $this + 4 | 0;
 __ZNSt3__16vectorIN10ClipperLib9ExPolygonENS_9allocatorIS2_EEE7reserveEj($polys, (HEAP32[$__end__i >> 2] | 0) - (HEAP32[$__begin__i >> 2] | 0) >> 2);
 $9 = HEAP32[$__begin__i >> 2] | 0;
 L6032 : do {
  if ((HEAP32[$__end__i >> 2] | 0) == ($9 | 0)) {
   $k_0_lcssa = 0;
  } else {
   $10 = $epg;
   $__end__i93 = $epg + 4 | 0;
   $__first__i_i_i_i98 = $epg + 8 | 0;
   $outer = $epg | 0;
   $__begin__i120 = $epg | 0;
   $__begin__i_i_i_i = $epg + 12 | 0;
   $__end__i_i_i_i_i_i_i = $epg + 16 | 0;
   $__first__i_i_i_i = $polys + 8 | 0;
   $holes3_i_i = $epg + 12 | 0;
   $__begin__i_i_i = $pg | 0;
   $__end__i_i_i = $pg + 4 | 0;
   $__first__i_i_i_i_i_i = $pg + 8 | 0;
   $__first__i_i_i_i156 = $epg + 20 | 0;
   $i_0232 = 0;
   $k_0233 = 0;
   $11 = $9;
   L6034 : while (1) {
    $arrayidx_i = $11 + ($i_0232 << 2) | 0;
    if ((HEAP32[(HEAP32[$arrayidx_i >> 2] | 0) + 16 >> 2] | 0) == 0) {
     $k_0_lcssa = $k_0233;
     break L6032;
    }
    _memset($10 | 0, 0, 24);
    $p_0 = HEAP32[(HEAP32[$arrayidx_i >> 2] | 0) + 16 >> 2] | 0;
    $17 = 0;
    $16 = 0;
    while (1) {
     $pt = $p_0 + 8 | 0;
     if (($17 | 0) == ($16 | 0)) {
      __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($outer, $pt);
     } else {
      if (($17 | 0) == 0) {
       $20 = 0;
      } else {
       $18 = $17;
       $19 = $pt;
       HEAP32[$18 >> 2] = HEAP32[$19 >> 2];
       HEAP32[$18 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
       HEAP32[$18 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
       HEAP32[$18 + 12 >> 2] = HEAP32[$19 + 12 >> 2];
       $20 = HEAP32[$__end__i93 >> 2] | 0;
      }
      HEAP32[$__end__i93 >> 2] = $20 + 16;
     }
     $21 = HEAP32[$p_0 + 24 >> 2] | 0;
     $22 = HEAP32[$__begin__i >> 2] | 0;
     if (($21 | 0) == (HEAP32[(HEAP32[$22 + ($i_0232 << 2) >> 2] | 0) + 16 >> 2] | 0)) {
      break;
     }
     $p_0 = $21;
     $17 = HEAP32[$__end__i93 >> 2] | 0;
     $16 = HEAP32[$__first__i_i_i_i98 >> 2] | 0;
    }
    $inc = $i_0232 + 1 | 0;
    if ((HEAP32[$__end__i93 >> 2] | 0) - (HEAP32[$__begin__i120 >> 2] | 0) >> 4 >>> 0 < 3) {
     $k_1 = $k_0233;
     $i_2 = $inc;
    } else {
     L6050 : do {
      if ($inc >>> 0 < (HEAP32[$__end__i >> 2] | 0) - $22 >> 2 >>> 0) {
       $i_1194 = $inc;
       $30 = $22;
       while (1) {
        $arrayidx_i137 = $30 + ($i_1194 << 2) | 0;
        $31 = HEAP32[$arrayidx_i137 >> 2] | 0;
        if ((HEAP32[$31 + 16 >> 2] | 0) == 0) {
         $i_1_lcssa = $i_1194;
         break L6050;
        }
        if ((HEAP8[$31 + 4 | 0] & 1) == 0) {
         $i_1_lcssa = $i_1194;
         break L6050;
        }
        HEAP32[$__begin__i_i_i >> 2] = 0;
        HEAP32[$__end__i_i_i >> 2] = 0;
        HEAP32[$__first__i_i_i_i_i_i >> 2] = 0;
        $p_1 = HEAP32[(HEAP32[$arrayidx_i137 >> 2] | 0) + 16 >> 2] | 0;
        $38 = 0;
        $37 = 0;
        while (1) {
         $pt41 = $p_1 + 8 | 0;
         if (($38 | 0) == ($37 | 0)) {
          __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($pg, $pt41);
         } else {
          if (($38 | 0) != 0) {
           $39 = $38;
           $40 = $pt41;
           HEAP32[$39 >> 2] = HEAP32[$40 >> 2];
           HEAP32[$39 + 4 >> 2] = HEAP32[$40 + 4 >> 2];
           HEAP32[$39 + 8 >> 2] = HEAP32[$40 + 8 >> 2];
           HEAP32[$39 + 12 >> 2] = HEAP32[$40 + 12 >> 2];
          }
          HEAP32[$__end__i_i_i >> 2] = $38 + 16;
         }
         $41 = HEAP32[$p_1 + 24 >> 2] | 0;
         if (($41 | 0) == (HEAP32[(HEAP32[(HEAP32[$__begin__i >> 2] | 0) + ($i_1194 << 2) >> 2] | 0) + 16 >> 2] | 0)) {
          break;
         }
         $p_1 = $41;
         $38 = HEAP32[$__end__i_i_i >> 2] | 0;
         $37 = HEAP32[$__first__i_i_i_i_i_i >> 2] | 0;
        }
        $45 = HEAP32[$__end__i_i_i_i_i_i_i >> 2] | 0;
        if (($45 | 0) == (HEAP32[$__first__i_i_i_i156 >> 2] | 0)) {
         __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE21__push_back_slow_pathIKS5_EEvRT_($holes3_i_i, $pg);
        } else {
         do {
          if (($45 | 0) != 0) {
           $__begin__i_i26 = $45 | 0;
           HEAP32[$__begin__i_i26 >> 2] = 0;
           $__end__i_i27 = $45 + 4 | 0;
           HEAP32[$__end__i_i27 >> 2] = 0;
           $__first__i_i_i_i_i = $45 + 8 | 0;
           HEAP32[$__first__i_i_i_i_i >> 2] = 0;
           $sub_ptr_sub_i_i30 = (HEAP32[$__end__i_i_i >> 2] | 0) - (HEAP32[$__begin__i_i_i >> 2] | 0) | 0;
           $sub_ptr_div_i_i31 = $sub_ptr_sub_i_i30 >> 4;
           if (($sub_ptr_div_i_i31 | 0) == 0) {
            break;
           }
           if ($sub_ptr_div_i_i31 >>> 0 > 268435455) {
            label = 5355;
            break L6034;
           }
           $49 = __Znwj($sub_ptr_sub_i_i30) | 0;
           HEAP32[$__end__i_i27 >> 2] = $49;
           HEAP32[$__begin__i_i26 >> 2] = $49;
           HEAP32[$__first__i_i_i_i_i >> 2] = $49 + ($sub_ptr_div_i_i31 << 4);
           $50 = HEAP32[$__begin__i_i_i >> 2] | 0;
           $51 = HEAP32[$__end__i_i_i >> 2] | 0;
           if (($50 | 0) == ($51 | 0)) {
            break;
           } else {
            $__first_addr_04_i_i = $50;
            $52 = $49;
           }
           do {
            if (($52 | 0) == 0) {
             $55 = 0;
            } else {
             $53 = $52;
             $54 = $__first_addr_04_i_i;
             HEAP32[$53 >> 2] = HEAP32[$54 >> 2];
             HEAP32[$53 + 4 >> 2] = HEAP32[$54 + 4 >> 2];
             HEAP32[$53 + 8 >> 2] = HEAP32[$54 + 8 >> 2];
             HEAP32[$53 + 12 >> 2] = HEAP32[$54 + 12 >> 2];
             $55 = HEAP32[$__end__i_i27 >> 2] | 0;
            }
            $52 = $55 + 16 | 0;
            HEAP32[$__end__i_i27 >> 2] = $52;
            $__first_addr_04_i_i = $__first_addr_04_i_i + 16 | 0;
           } while (($__first_addr_04_i_i | 0) != ($51 | 0));
          }
         } while (0);
         HEAP32[$__end__i_i_i_i_i_i_i >> 2] = (HEAP32[$__end__i_i_i_i_i_i_i >> 2] | 0) + 12;
        }
        $inc52 = $i_1194 + 1 | 0;
        $64 = HEAP32[$__begin__i_i_i >> 2] | 0;
        $65 = $64;
        if (($64 | 0) != 0) {
         $68 = HEAP32[$__end__i_i_i >> 2] | 0;
         if (($64 | 0) != ($68 | 0)) {
          HEAP32[$__end__i_i_i >> 2] = $68 + ((($68 - 16 + (-$65 | 0) | 0) >>> 4 ^ -1) << 4);
         }
         __ZdlPv($64);
        }
        $67 = HEAP32[$__begin__i >> 2] | 0;
        if ($inc52 >>> 0 < (HEAP32[$__end__i >> 2] | 0) - $67 >> 2 >>> 0) {
         $i_1194 = $inc52;
         $30 = $67;
        } else {
         $i_1_lcssa = $inc52;
         break;
        }
       }
      } else {
       $i_1_lcssa = $inc;
      }
     } while (0);
     $82 = HEAP32[$__end__i_i >> 2] | 0;
     if (($82 | 0) == (HEAP32[$__first__i_i_i_i >> 2] | 0)) {
      __ZNSt3__16vectorIN10ClipperLib9ExPolygonENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($polys, $epg);
     } else {
      if (($82 | 0) == 0) {
       $108 = 0;
      } else {
       $__begin__i_i110 = $82 | 0;
       HEAP32[$__begin__i_i110 >> 2] = 0;
       $__end__i_i111 = $82 + 4 | 0;
       HEAP32[$__end__i_i111 >> 2] = 0;
       $__first__i_i_i_i_i112 = $82 + 8 | 0;
       HEAP32[$__first__i_i_i_i_i112 >> 2] = 0;
       $sub_ptr_sub_i_i117 = (HEAP32[$__end__i93 >> 2] | 0) - (HEAP32[$__begin__i120 >> 2] | 0) | 0;
       $sub_ptr_div_i_i118 = $sub_ptr_sub_i_i117 >> 4;
       do {
        if (($sub_ptr_div_i_i118 | 0) != 0) {
         if ($sub_ptr_div_i_i118 >>> 0 > 268435455) {
          label = 5385;
          break L6034;
         }
         $86 = __Znwj($sub_ptr_sub_i_i117) | 0;
         HEAP32[$__end__i_i111 >> 2] = $86;
         HEAP32[$__begin__i_i110 >> 2] = $86;
         HEAP32[$__first__i_i_i_i_i112 >> 2] = $86 + ($sub_ptr_div_i_i118 << 4);
         $87 = HEAP32[$__begin__i120 >> 2] | 0;
         $88 = HEAP32[$__end__i93 >> 2] | 0;
         if (($87 | 0) == ($88 | 0)) {
          break;
         } else {
          $__first_addr_04_i_i129 = $87;
          $89 = $86;
         }
         do {
          if (($89 | 0) == 0) {
           $92 = 0;
          } else {
           $90 = $89;
           $91 = $__first_addr_04_i_i129;
           HEAP32[$90 >> 2] = HEAP32[$91 >> 2];
           HEAP32[$90 + 4 >> 2] = HEAP32[$91 + 4 >> 2];
           HEAP32[$90 + 8 >> 2] = HEAP32[$91 + 8 >> 2];
           HEAP32[$90 + 12 >> 2] = HEAP32[$91 + 12 >> 2];
           $92 = HEAP32[$__end__i_i111 >> 2] | 0;
          }
          $89 = $92 + 16 | 0;
          HEAP32[$__end__i_i111 >> 2] = $89;
          $__first_addr_04_i_i129 = $__first_addr_04_i_i129 + 16 | 0;
         } while (($__first_addr_04_i_i129 | 0) != ($88 | 0));
        }
       } while (0);
       __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($82 + 12 | 0, $holes3_i_i);
       $108 = HEAP32[$__end__i_i >> 2] | 0;
      }
      HEAP32[$__end__i_i >> 2] = $108 + 24;
     }
     $k_1 = $k_0233 + 1 | 0;
     $i_2 = $i_1_lcssa;
    }
    $109 = HEAP32[$__begin__i_i_i_i >> 2] | 0;
    if (($109 | 0) != 0) {
     $110 = HEAP32[$__end__i_i_i_i_i_i_i >> 2] | 0;
     if (($109 | 0) == ($110 | 0)) {
      $120 = $109;
     } else {
      $111 = $110;
      while (1) {
       $incdec_ptr_i_i_i_i_i_i_i = $111 - 12 | 0;
       HEAP32[$__end__i_i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i_i;
       $112 = HEAP32[$incdec_ptr_i_i_i_i_i_i_i >> 2] | 0;
       $113 = $112;
       if (($112 | 0) == 0) {
        $114 = $incdec_ptr_i_i_i_i_i_i_i;
       } else {
        $__end__i_i_i_i_i_i_i_i_i_i = $111 - 12 + 4 | 0;
        $115 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i >> 2] | 0;
        if (($112 | 0) != ($115 | 0)) {
         HEAP32[$__end__i_i_i_i_i_i_i_i_i_i >> 2] = $115 + ((($115 - 16 + (-$113 | 0) | 0) >>> 4 ^ -1) << 4);
        }
        __ZdlPv($112);
        $114 = HEAP32[$__end__i_i_i_i_i_i_i >> 2] | 0;
       }
       if (($109 | 0) == ($114 | 0)) {
        break;
       } else {
        $111 = $114;
       }
      }
      $120 = HEAP32[$__begin__i_i_i_i >> 2] | 0;
     }
     __ZdlPv($120);
    }
    $122 = HEAP32[$__begin__i120 >> 2] | 0;
    $123 = $122;
    if (($122 | 0) != 0) {
     $126 = HEAP32[$__end__i93 >> 2] | 0;
     if (($122 | 0) != ($126 | 0)) {
      HEAP32[$__end__i93 >> 2] = $126 + ((($126 - 16 + (-$123 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($122);
    }
    $125 = HEAP32[$__begin__i >> 2] | 0;
    if ($i_2 >>> 0 < (HEAP32[$__end__i >> 2] | 0) - $125 >> 2 >>> 0) {
     $i_0232 = $i_2;
     $k_0233 = $k_1;
     $11 = $125;
    } else {
     $k_0_lcssa = $k_1;
     break L6032;
    }
   }
   if ((label | 0) == 5385) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
   } else if ((label | 0) == 5355) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
   }
  }
 } while (0);
 $151 = HEAP32[$__end__i_i >> 2] | 0;
 $152 = HEAP32[$__begin__i_i >> 2] | 0;
 $sub_ptr_div_i_i96 = ($151 - $152 | 0) / 24 & -1;
 if ($sub_ptr_div_i_i96 >>> 0 < $k_0_lcssa >>> 0) {
  __ZNSt3__16vectorIN10ClipperLib9ExPolygonENS_9allocatorIS2_EEE8__appendEj($polys, $k_0_lcssa - $sub_ptr_div_i_i96 | 0);
  STACKTOP = __stackBase__;
  return;
 }
 if ($sub_ptr_div_i_i96 >>> 0 <= $k_0_lcssa >>> 0) {
  STACKTOP = __stackBase__;
  return;
 }
 $add_ptr_i = $152 + ($k_0_lcssa * 24 & -1) | 0;
 if (($add_ptr_i | 0) == ($151 | 0)) {
  STACKTOP = __stackBase__;
  return;
 } else {
  $153 = $151;
 }
 do {
  $incdec_ptr_i_i_i_i104 = $153 - 24 | 0;
  HEAP32[$__end__i_i >> 2] = $incdec_ptr_i_i_i_i104;
  __ZN10ClipperLib9ExPolygonD2Ev($incdec_ptr_i_i_i_i104);
  $153 = HEAP32[$__end__i_i >> 2] | 0;
 } while (($add_ptr_i | 0) != ($153 | 0));
 STACKTOP = __stackBase__;
 return;
}
function __ZN10ClipperLib16clipperExceptionD1Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 11984;
 if ((HEAP8[$this + 4 | 0] & 1) == 0) {
  return;
 }
 __ZdlPv(HEAP32[$this + 12 >> 2] | 0);
 return;
}
function __ZN10ClipperLib7Clipper15ExecuteInternalEb($this, $fixHoleLinkages) {
 $this = $this | 0;
 $fixHoleLinkages = $fixHoleLinkages | 0;
 var $__comp_addr_i = 0, $2 = 0, $4 = 0, $__end__i = 0, $__begin__i = 0, $10 = 0, $fixHoleLinkages_not = 0, $m_ReverseOutput = 0, $11 = 0, $i_095 = 0, $12 = 0, $pts = 0, $m_Scanbeam_i = 0, $14 = 0, $Y2_i = 0, $15$0 = 0, $15$1 = 0, $__end__i_i = 0, $__begin__i_i = 0, $m_SortedEdges_i = 0, $botY_0$0 = 0, $botY_0$1 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $i_08_i = 0, $22 = 0, $24 = 0, $25 = 0, $inc_i = 0, $sub_ptr_rhs_cast_i_i = 0, $horzEdge_03_i = 0, $horzEdge_05_i = 0, $prevInSEL_i_i = 0, $30 = 0, $nextInSEL_i_i = 0, $31 = 0, $32 = 0, $Y2_i26 = 0, $33$0 = 0, $33$1 = 0, $isHole = 0, $bottomPt = 0, $call40 = 0, $50 = 0, $51 = 0, $52 = 0, $conv55 = 0, $conv57 = 0, $63 = 0, $pp1_0_i = 0, $next_i35 = 0, $64 = 0, $prev_i = 0, $68 = 0, $69 = 0, $succeeded_0_off086 = 0, $__end__i_i37 = 0, $70 = 0, $__begin__i_i38 = 0, $71 = 0, $72 = 0, $73 = 0, $i_08_i40 = 0, $74 = 0, $76 = 0, $77 = 0, $inc_i47 = 0, $sub_ptr_rhs_cast_i_i49 = 0, $__end__i_i61 = 0, $82 = 0, $__begin__i_i62 = 0, $83 = 0, $84 = 0, $85 = 0, $i_08_i64 = 0, $86 = 0, $88 = 0, $89 = 0, $inc_i71 = 0, $sub_ptr_rhs_cast_i_i73 = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__comp_addr_i = __stackBase__ | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 12 >> 2] & 511]($this);
 $2 = $this;
 $4 = $this;
 if ((HEAP32[$4 + ((HEAP32[(HEAP32[$2 >> 2] | 0) - 12 >> 2] | 0) + 4) >> 2] | 0) == 0) {
  $retval_0 = 1;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $m_Scanbeam_i = $this + 44 | 0;
 $14 = HEAP32[$m_Scanbeam_i >> 2] | 0;
 $Y2_i = $14 | 0;
 $15$0 = HEAP32[$Y2_i >> 2] | 0;
 $15$1 = HEAP32[$Y2_i + 4 >> 2] | 0;
 HEAP32[$m_Scanbeam_i >> 2] = HEAP32[$14 + 8 >> 2];
 if (($14 | 0) != 0) {
  __ZdlPv($14);
 }
 $__end__i_i = $this + 32 | 0;
 $__begin__i_i = $this + 28 | 0;
 $m_SortedEdges_i = $this + 52 | 0;
 $botY_0$1 = $15$1;
 $botY_0$0 = $15$0;
 while (1) {
  __ZN10ClipperLib7Clipper24InsertLocalMinimaIntoAELEx($this, $botY_0$0, $botY_0$1);
  $18 = HEAP32[$__end__i_i >> 2] | 0;
  $19 = HEAP32[$__begin__i_i >> 2] | 0;
  do {
   if (($18 | 0) != ($19 | 0)) {
    $i_08_i = 0;
    $21 = $19;
    $20 = $18;
    while (1) {
     $22 = HEAP32[$21 + ($i_08_i << 2) >> 2] | 0;
     if (($22 | 0) == 0) {
      $25 = $20;
      $24 = $21;
     } else {
      __ZdlPv($22);
      $25 = HEAP32[$__end__i_i >> 2] | 0;
      $24 = HEAP32[$__begin__i_i >> 2] | 0;
     }
     $inc_i = $i_08_i + 1 | 0;
     $sub_ptr_rhs_cast_i_i = $24;
     if ($inc_i >>> 0 < $25 - $sub_ptr_rhs_cast_i_i >> 2 >>> 0) {
      $i_08_i = $inc_i;
      $21 = $24;
      $20 = $25;
     } else {
      break;
     }
    }
    if (($24 | 0) == ($25 | 0)) {
     break;
    }
    HEAP32[$__end__i_i >> 2] = $25 + ((($25 - 4 + (-$sub_ptr_rhs_cast_i_i | 0) | 0) >>> 2 ^ -1) << 2);
   }
  } while (0);
  $horzEdge_03_i = HEAP32[$m_SortedEdges_i >> 2] | 0;
  if (($horzEdge_03_i | 0) != 0) {
   $horzEdge_05_i = $horzEdge_03_i;
   do {
    $prevInSEL_i_i = $horzEdge_05_i + 128 | 0;
    $30 = HEAP32[$prevInSEL_i_i >> 2] | 0;
    $nextInSEL_i_i = $horzEdge_05_i + 124 | 0;
    $31 = HEAP32[$nextInSEL_i_i >> 2] | 0;
    if (($30 | 0) == 0) {
     HEAP32[$m_SortedEdges_i >> 2] = $31;
    } else {
     HEAP32[$30 + 124 >> 2] = $31;
    }
    if (($31 | 0) != 0) {
     HEAP32[$31 + 128 >> 2] = $30;
    }
    HEAP32[$nextInSEL_i_i >> 2] = 0;
    HEAP32[$prevInSEL_i_i >> 2] = 0;
    __ZN10ClipperLib7Clipper17ProcessHorizontalEPNS_5TEdgeE($this, $horzEdge_05_i);
    $horzEdge_05_i = HEAP32[$m_SortedEdges_i >> 2] | 0;
   } while (($horzEdge_05_i | 0) != 0);
  }
  $32 = HEAP32[$m_Scanbeam_i >> 2] | 0;
  $Y2_i26 = $32 | 0;
  $33$0 = HEAP32[$Y2_i26 >> 2] | 0;
  $33$1 = HEAP32[$Y2_i26 + 4 >> 2] | 0;
  HEAP32[$m_Scanbeam_i >> 2] = HEAP32[$32 + 8 >> 2];
  if (($32 | 0) != 0) {
   __ZdlPv($32);
  }
  if (!(__ZN10ClipperLib7Clipper20ProcessIntersectionsExx($this, $botY_0$0, $botY_0$1, $33$0, $33$1) | 0)) {
   $succeeded_0_off086 = 0;
   break;
  }
  __ZN10ClipperLib7Clipper27ProcessEdgesAtTopOfScanbeamEx($this, $33$0, $33$1);
  if ((HEAP32[$m_Scanbeam_i >> 2] | 0) == 0) {
   label = 5458;
   break;
  } else {
   $botY_0$1 = $33$1;
   $botY_0$0 = $33$0;
  }
 }
 do {
  if ((label | 0) == 5458) {
   $__end__i = $this + 8 | 0;
   $__begin__i = $this + 4 | 0;
   $10 = HEAP32[$__begin__i >> 2] | 0;
   if ((HEAP32[$__end__i >> 2] | 0) != ($10 | 0)) {
    $fixHoleLinkages_not = $fixHoleLinkages ^ 1;
    $m_ReverseOutput = $this + 72 | 0;
    $i_095 = 0;
    $11 = $10;
    do {
     $12 = HEAP32[$11 + ($i_095 << 2) >> 2] | 0;
     $pts = $12 + 16 | 0;
     do {
      if ((HEAP32[$pts >> 2] | 0) != 0) {
       __ZN10ClipperLib7Clipper15FixupOutPolygonERNS_6OutRecE($this, $12);
       if ((HEAP32[$pts >> 2] | 0) == 0) {
        break;
       }
       $isHole = $12 + 4 | 0;
       if (!((HEAP8[$isHole] & 1) == 0 | $fixHoleLinkages_not)) {
        __ZN10ClipperLib7Clipper14FixHoleLinkageEPNS_6OutRecE($this, $12);
       }
       $bottomPt = $12 + 20 | 0;
       do {
        if ((HEAP32[$bottomPt >> 2] | 0) == (HEAP32[$12 + 24 >> 2] | 0)) {
         $call40 = __ZN10ClipperLib11OrientationEPNS_6OutRecEb($12, (HEAP8[$4 + ((HEAP32[(HEAP32[$2 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) != 0) | 0;
         if (!($call40 ^ +__ZN10ClipperLib4AreaERKNS_6OutRecEb($12, (HEAP8[$4 + ((HEAP32[(HEAP32[$2 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) != 0) > 0.0)) {
          break;
         }
         $50 = HEAP32[$bottomPt >> 2] | 0;
         $51 = HEAP32[$50 + 24 >> 2] | 0;
         $52 = HEAP32[$50 + 28 >> 2] | 0;
         if ((HEAP32[$pts >> 2] | 0) == ($50 | 0)) {
          HEAP32[$pts >> 2] = $51;
         }
         if (($50 | 0) != 0) {
          __ZdlPv($50);
         }
         HEAP32[$51 + 28 >> 2] = $52;
         HEAP32[$52 + 24 >> 2] = $51;
         HEAP32[$bottomPt >> 2] = $51;
         __ZN10ClipperLib7Clipper15FixupOutPolygonERNS_6OutRecE($this, $12);
        }
       } while (0);
       $conv55 = HEAP8[$isHole] & 1;
       $conv57 = HEAP8[$m_ReverseOutput] & 1;
       if (($conv55 | 0) != ((__ZN10ClipperLib11OrientationEPNS_6OutRecEb($12, (HEAP8[$4 + ((HEAP32[(HEAP32[$2 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) != 0) | 0) & 1 ^ $conv57 | 0)) {
        break;
       }
       $63 = HEAP32[$pts >> 2] | 0;
       if (($63 | 0) == 0) {
        break;
       } else {
        $pp1_0_i = $63;
       }
       while (1) {
        $next_i35 = $pp1_0_i + 24 | 0;
        $64 = HEAP32[$next_i35 >> 2] | 0;
        $prev_i = $pp1_0_i + 28 | 0;
        HEAP32[$next_i35 >> 2] = HEAP32[$prev_i >> 2];
        HEAP32[$prev_i >> 2] = $64;
        if (($64 | 0) == ($63 | 0)) {
         break;
        } else {
         $pp1_0_i = $64;
        }
       }
      }
     } while (0);
     $i_095 = $i_095 + 1 | 0;
     $11 = HEAP32[$__begin__i >> 2] | 0;
    } while ($i_095 >>> 0 < (HEAP32[$__end__i >> 2] | 0) - $11 >> 2 >>> 0);
   }
   __ZN10ClipperLib7Clipper15JoinCommonEdgesEb($this, $fixHoleLinkages);
   if (!$fixHoleLinkages) {
    $succeeded_0_off086 = 1;
    break;
   }
   $68 = HEAP32[$__begin__i >> 2] | 0;
   $69 = HEAP32[$__end__i >> 2] | 0;
   HEAP32[$__comp_addr_i >> 2] = 24;
   __ZNSt3__16__sortIRPFbPN10ClipperLib6OutRecES3_EPS3_EEvT0_S8_T_($68, $69, $__comp_addr_i);
   $succeeded_0_off086 = 1;
  }
 } while (0);
 $__end__i_i37 = $this + 20 | 0;
 $70 = HEAP32[$__end__i_i37 >> 2] | 0;
 $__begin__i_i38 = $this + 16 | 0;
 $71 = HEAP32[$__begin__i_i38 >> 2] | 0;
 do {
  if (($70 | 0) != ($71 | 0)) {
   $i_08_i40 = 0;
   $73 = $71;
   $72 = $70;
   while (1) {
    $74 = HEAP32[$73 + ($i_08_i40 << 2) >> 2] | 0;
    if (($74 | 0) == 0) {
     $77 = $72;
     $76 = $73;
    } else {
     __ZdlPv($74);
     $77 = HEAP32[$__end__i_i37 >> 2] | 0;
     $76 = HEAP32[$__begin__i_i38 >> 2] | 0;
    }
    $inc_i47 = $i_08_i40 + 1 | 0;
    $sub_ptr_rhs_cast_i_i49 = $76;
    if ($inc_i47 >>> 0 < $77 - $sub_ptr_rhs_cast_i_i49 >> 2 >>> 0) {
     $i_08_i40 = $inc_i47;
     $73 = $76;
     $72 = $77;
    } else {
     break;
    }
   }
   if (($76 | 0) == ($77 | 0)) {
    break;
   }
   HEAP32[$__end__i_i37 >> 2] = $77 + ((($77 - 4 + (-$sub_ptr_rhs_cast_i_i49 | 0) | 0) >>> 2 ^ -1) << 2);
  }
 } while (0);
 $__end__i_i61 = $this + 32 | 0;
 $82 = HEAP32[$__end__i_i61 >> 2] | 0;
 $__begin__i_i62 = $this + 28 | 0;
 $83 = HEAP32[$__begin__i_i62 >> 2] | 0;
 if (($82 | 0) == ($83 | 0)) {
  $retval_0 = $succeeded_0_off086;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else {
  $i_08_i64 = 0;
  $85 = $83;
  $84 = $82;
 }
 while (1) {
  $86 = HEAP32[$85 + ($i_08_i64 << 2) >> 2] | 0;
  if (($86 | 0) == 0) {
   $89 = $84;
   $88 = $85;
  } else {
   __ZdlPv($86);
   $89 = HEAP32[$__end__i_i61 >> 2] | 0;
   $88 = HEAP32[$__begin__i_i62 >> 2] | 0;
  }
  $inc_i71 = $i_08_i64 + 1 | 0;
  $sub_ptr_rhs_cast_i_i73 = $88;
  if ($inc_i71 >>> 0 < $89 - $sub_ptr_rhs_cast_i_i73 >> 2 >>> 0) {
   $i_08_i64 = $inc_i71;
   $85 = $88;
   $84 = $89;
  } else {
   break;
  }
 }
 if (($88 | 0) == ($89 | 0)) {
  $retval_0 = $succeeded_0_off086;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 HEAP32[$__end__i_i61 >> 2] = $89 + ((($89 - 4 + (-$sub_ptr_rhs_cast_i_i73 | 0) | 0) >>> 2 ^ -1) << 2);
 $retval_0 = $succeeded_0_off086;
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __ZN10ClipperLib7Clipper14FixHoleLinkageEPNS_6OutRecE($this, $outRec) {
 $this = $this | 0;
 $outRec = $outRec | 0;
 var $0 = 0, $_pn = 0, $tmp_0 = 0, $exception = 0, $call_i_i_i3_i_i17 = 0, $8 = 0, $9 = 0, $outRec_addr_0_i = 0, $tmp_1 = 0, $tmp_2 = 0, $AppendLink26 = 0, label = 0;
 $0 = HEAP32[$outRec + 20 >> 2] | 0;
 if (($0 | 0) == 0) {
  $_pn = $outRec;
 } else {
  $_pn = HEAP32[(HEAP32[$this + 4 >> 2] | 0) + (HEAP32[$0 >> 2] << 2) >> 2] | 0;
 }
 $tmp_0 = HEAP32[$_pn + 8 >> 2] | 0;
 if (($tmp_0 | 0) == ($outRec | 0)) {
  $exception = ___cxa_allocate_exception(16) | 0;
  HEAP32[$exception >> 2] = 11984;
  $call_i_i_i3_i_i17 = __Znwj(32) | 0;
  HEAP32[$exception + 12 >> 2] = $call_i_i_i3_i_i17;
  HEAP32[$exception + 4 >> 2] = 33;
  HEAP32[$exception + 8 >> 2] = 17;
  _memcpy($call_i_i_i3_i_i17 | 0, 2584, 17) | 0;
  HEAP8[$call_i_i_i3_i_i17 + 17 | 0] = 0;
  ___cxa_throw($exception | 0, 16960, 216);
 }
 do {
  if (($tmp_0 | 0) == 0) {
   label = 5531;
  } else {
   $8 = HEAP32[$tmp_0 + 12 >> 2] | 0;
   L6249 : do {
    if (($8 | 0) == 0) {
     $tmp_1 = $tmp_0;
    } else {
     $outRec_addr_0_i = $tmp_0;
     $9 = $8;
     while (1) {
      if (($9 | 0) == 0) {
       $tmp_1 = $outRec_addr_0_i;
       break L6249;
      }
      $outRec_addr_0_i = $9;
      $9 = HEAP32[$9 + 12 >> 2] | 0;
     }
    }
   } while (0);
   if (($tmp_1 | 0) == ($outRec | 0)) {
    label = 5531;
    break;
   }
   if ((HEAP8[$tmp_1 + 4 | 0] & 1) == 0) {
    $tmp_2 = $tmp_1;
   } else {
    __ZN10ClipperLib7Clipper14FixHoleLinkageEPNS_6OutRecE($this, $tmp_1);
    $tmp_2 = HEAP32[$tmp_1 + 8 >> 2] | 0;
   }
   HEAP32[$outRec + 8 >> 2] = $tmp_2;
   if (($tmp_2 | 0) == 0) {
    break;
   }
   $AppendLink26 = $outRec + 12 | 0;
   HEAP32[$AppendLink26 >> 2] = 0;
   return;
  }
 } while (0);
 if ((label | 0) == 5531) {
  HEAP32[$outRec + 8 >> 2] = 0;
 }
 HEAP8[$outRec + 4 | 0] = 0;
 $AppendLink26 = $outRec + 12 | 0;
 HEAP32[$AppendLink26 >> 2] = 0;
 return;
}
function __ZN10ClipperLib7Clipper24InsertLocalMinimaIntoAELEx($this, $botY$0, $botY$1) {
 $this = $this | 0;
 $botY$0 = $botY$0 | 0;
 $botY$1 = $botY$1 | 0;
 var $tmp_i = 0, $ref_tmp_i = 0, $tmp1_i = 0, $ref_tmp2_i = 0, $tmp3_i = 0, $ref_tmp5_i = 0, $jr_i200 = 0, $jr_i = 0, $ref_tmp = 0, $pt91 = 0, $0 = 0, $2 = 0, $4 = 0, $m_ActiveEdges_i = 0, $m_Scanbeam_i = 0, $m_SubjFillType_i = 0, $m_ClipFillType_i = 0, $m_SortedEdges_i = 0, $X_i_i = 0, $Y_i_i = 0, $__end__i = 0, $__begin__i = 0, $__end__i_i227 = 0, $__first__i_i_i_i_i228 = 0, $m_Joins_i236 = 0, $lo_i_i_i = 0, $hi_i_i_i = 0, $lo_i_i6_i = 0, $hi_i_i7_i = 0, $lo_i_i12_i = 0, $hi_i_i13_i = 0, $lo_i_i9_i = 0, $hi_i_i10_i = 0, $hi_i_i = 0, $hi2_i_i = 0, $lo_i_i = 0, $lo3_i_i = 0, $X_i_i175 = 0, $Y_i_i176 = 0, $13 = 0, $Y = 0, $15 = 0, $16 = 0, $prevInAEL_i = 0, $nextInAEL_i = 0, $17 = 0, $xcurr_i_i = 0, $18$0 = 0, $18$1 = 0, $xcurr1_i_i = 0, $19$0 = 0, $19$1 = 0, $dx_i_i = 0, $dx_i21_pre_phi_i = 0, $nextInAEL12_i361 = 0, $22 = 0, $24 = 0, $nextInAEL12_i364 = 0, $e_0_i363 = 0, $xcurr1_i19_i = 0, $25$0 = 0, $25$1 = 0, $nextInAEL12_i = 0, $28 = 0, $nextInAEL12_i_lcssa = 0, $e_0_i_lcssa = 0, $29 = 0, $30 = 0, $ytop = 0, $31$0 = 0, $31$1 = 0, $32 = 0, $call_i = 0, $Y5_i = 0, $Y7_i = 0, $35$1 = 0, $call9_i = 0, $Y10_i = 0, $sb2_0_i = 0, $next16_i = 0, $39 = 0, $Y19_i = 0, $40$1 = 0, $Y22_i = 0, $call26_i = 0, $Y27_i = 0, $prevInAEL_i62 = 0, $nextInAEL_i63 = 0, $45 = 0, $xcurr_i_i67 = 0, $46$0 = 0, $46$1 = 0, $xcurr1_i_i68 = 0, $47$0 = 0, $47$1 = 0, $dx_i_i71 = 0, $dx_i21_pre_phi_i75 = 0, $nextInAEL12_i84367 = 0, $50 = 0, $52 = 0, $nextInAEL12_i84370 = 0, $e_0_i83369 = 0, $xcurr1_i19_i87 = 0, $53$0 = 0, $53$1 = 0, $nextInAEL12_i84 = 0, $56 = 0, $nextInAEL12_i84_lcssa = 0, $e_0_i83_lcssa = 0, $57 = 0, $58 = 0, $windDelta = 0, $dx = 0, $sub22 = 0.0, $64 = 0, $ytop28 = 0, $67$0 = 0, $67$1 = 0, $68 = 0, $call_i109 = 0, $Y5_i111 = 0, $Y7_i113 = 0, $71$1 = 0, $call9_i116 = 0, $Y10_i117 = 0, $sb2_0_i120 = 0, $next16_i121 = 0, $75 = 0, $Y19_i124 = 0, $76$1 = 0, $Y22_i127 = 0, $call26_i130 = 0, $Y27_i131 = 0, $ytop30 = 0, $81$0 = 0, $81$1 = 0, $82 = 0, $call_i137 = 0, $Y5_i139 = 0, $Y7_i141 = 0, $85$1 = 0, $call9_i144 = 0, $Y10_i145 = 0, $sb2_0_i148 = 0, $next16_i149 = 0, $89 = 0, $Y19_i152 = 0, $90$1 = 0, $Y22_i155 = 0, $call26_i158 = 0, $Y27_i159 = 0, $xcurr = 0, $95$1 = 0, $Y39 = 0, $99$0 = 0, $99$1 = 0, $outIdx = 0, $sub44 = 0.0, $103 = 0, $xbot61 = 0, $ybot62 = 0, $xtop64 = 0, $ytop65 = 0, $xcurr11_i219 = 0, $ycurr12_i220 = 0, $104 = 0, $i_0380 = 0, $105 = 0, $106 = 0, $xbot = 0, $107$0 = 0, $107$1 = 0, $ybot = 0, $108$0 = 0, $108$1 = 0, $xtop = 0, $109$0 = 0, $109$1 = 0, $ytop59 = 0, $110$0 = 0, $110$1 = 0, $111$0 = 0, $111$1 = 0, $112$0 = 0, $112$1 = 0, $113$0 = 0, $113$1 = 0, $114$0 = 0, $114$1 = 0, $sub_i$0 = 0, $sub_i$1 = 0, $sub5_i$0 = 0, $div_i$0 = 0, $div_i$1 = 0, $$etemp$80$1 = 0, $cmp_i_i193 = 0, $sub_i_i$0 = 0, $cond_i_i$1 = 0, $$etemp$82$1 = 0, $cmp9_i = 0, $_$0 = 0, $_$1 = 0, $_358$0 = 0, $_358$1 = 0, $cmp13_i = 0, $tmp_i_i_sroa_0_0_load354$0 = 0, $tmp_i_i_sroa_0_0_load354$1 = 0, $115$0 = 0, $115$1 = 0, $cmp18_i = 0, $_358_$1 = 0, $cmp23_i198 = 0, $116$1 = 0, $cmp33_i = 0, $_359$0 = 0, $_359$1 = 0, $_360$0 = 0, $_360$1 = 0, $cmp38_i = 0, $agg_tmp63189_sroa_1_8_load335356$0 = 0, $agg_tmp63189_sroa_1_8_load335356$1 = 0, $117$0 = 0, $117$1 = 0, $cmp43_i = 0, $_360_$1 = 0, $cmp49_i = 0, $118$1 = 0, $119 = 0, $call_i201 = 0, $120 = 0, $X_i_i3_i_i_i202 = 0, $xcurr_i208 = 0, $124$1 = 0, $ycurr_i209 = 0, $125$0 = 0, $125$1 = 0, $ref_tmp_sroa_0_0__idx_i210 = 0, $126 = 0, $127$1 = 0, $128$0 = 0, $128$1 = 0, $129 = 0, $130 = 0, $133$1 = 0, $134$0 = 0, $134$1 = 0, $135 = 0, $136 = 0, $137$1 = 0, $138$0 = 0, $138$1 = 0, $139 = 0, $140 = 0, $141 = 0, $143 = 0, $148 = 0, $deltaY_i = 0, $154$0 = 0, $154$1 = 0, $deltaX_i = 0, $155$1 = 0, $deltaX4_i = 0, $156$1 = 0, $deltaY6_i = 0, $157$1 = 0, $deltaX8_i = 0, $mul_i$0 = 0, $mul_i$1 = 0, $deltaX9_i = 0, $deltaY10_i = 0, $mul11_i$0 = 0, $retval_0_i243 = 0, $165 = 0, $call_i177 = 0, $166 = 0, $X_i_i3_i_i_i = 0, $xcurr_i = 0, $169$1 = 0, $ycurr_i = 0, $170$0 = 0, $170$1 = 0, $ref_tmp_sroa_0_0__idx_i = 0, $171 = 0, $xtop_i = 0, $172$1 = 0, $ytop_i = 0, $173$0 = 0, $173$1 = 0, $174 = 0, $175 = 0, $xcurr11_i = 0, $178$1 = 0, $ycurr12_i = 0, $179$0 = 0, $179$1 = 0, $180 = 0, $181 = 0, $xtop14_i = 0, $182$1 = 0, $ytop15_i = 0, $183$0 = 0, $183$1 = 0, $184 = 0, $185 = 0, $186 = 0, $188 = 0, $189 = 0, $xcurr92 = 0, $190$1 = 0, $ycurr = 0, $191$0 = 0, $191$1 = 0, $e_0382 = 0, $exception = 0, $call_i_i_i3_i_i106 = 0, $vbase_offset103 = 0, $198 = 0, $199 = 0, $vbase_offset = 0, $201 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $tmp_i = __stackBase__ | 0;
 $ref_tmp_i = __stackBase__ + 16 | 0;
 $tmp1_i = __stackBase__ + 32 | 0;
 $ref_tmp2_i = __stackBase__ + 48 | 0;
 $tmp3_i = __stackBase__ + 64 | 0;
 $ref_tmp5_i = __stackBase__ + 80 | 0;
 $jr_i200 = __stackBase__ + 96 | 0;
 $jr_i = __stackBase__ + 104 | 0;
 $ref_tmp = __stackBase__ + 112 | 0;
 $pt91 = __stackBase__ + 128 | 0;
 $0 = $this;
 $2 = $this;
 $4 = HEAP32[$2 + ((HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0) + 4) >> 2] | 0;
 if (($4 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 $m_ActiveEdges_i = $this + 48 | 0;
 $m_Scanbeam_i = $this + 44 | 0;
 $m_SubjFillType_i = $this + 68 | 0;
 $m_ClipFillType_i = $this + 64 | 0;
 $m_SortedEdges_i = $this + 52 | 0;
 $X_i_i = $ref_tmp | 0;
 $Y_i_i = $ref_tmp + 8 | 0;
 $__end__i = $this + 32 | 0;
 $__begin__i = $this + 28 | 0;
 $__end__i_i227 = $this + 20 | 0;
 $__first__i_i_i_i_i228 = $this + 24 | 0;
 $m_Joins_i236 = $this + 16 | 0;
 $lo_i_i_i = $tmp_i + 8 | 0;
 $hi_i_i_i = $tmp_i | 0;
 $lo_i_i6_i = $ref_tmp_i + 8 | 0;
 $hi_i_i7_i = $ref_tmp_i | 0;
 $lo_i_i12_i = $tmp3_i + 8 | 0;
 $hi_i_i13_i = $tmp3_i | 0;
 $lo_i_i9_i = $ref_tmp5_i + 8 | 0;
 $hi_i_i10_i = $ref_tmp5_i | 0;
 $hi_i_i = $tmp1_i | 0;
 $hi2_i_i = $ref_tmp2_i | 0;
 $lo_i_i = $tmp1_i + 8 | 0;
 $lo3_i_i = $ref_tmp2_i + 8 | 0;
 $X_i_i175 = $pt91 | 0;
 $Y_i_i176 = $pt91 + 8 | 0;
 $13 = $4;
 L6267 : while (1) {
  $Y = $13 | 0;
  if (!((HEAP32[$Y >> 2] | 0) == ($botY$0 | 0) & (HEAP32[$Y + 4 >> 2] | 0) == ($botY$1 | 0))) {
   label = 5643;
   break;
  }
  $15 = HEAP32[$13 + 8 >> 2] | 0;
  $16 = HEAP32[$13 + 12 >> 2] | 0;
  $prevInAEL_i = $15 + 120 | 0;
  HEAP32[$prevInAEL_i >> 2] = 0;
  $nextInAEL_i = $15 + 116 | 0;
  HEAP32[$nextInAEL_i >> 2] = 0;
  $17 = HEAP32[$m_ActiveEdges_i >> 2] | 0;
  do {
   if (($17 | 0) == 0) {
    HEAP32[$m_ActiveEdges_i >> 2] = $15;
   } else {
    $xcurr_i_i = $15 + 16 | 0;
    $18$0 = HEAP32[$xcurr_i_i >> 2] | 0;
    $18$1 = HEAP32[$xcurr_i_i + 4 >> 2] | 0;
    $xcurr1_i_i = $17 + 16 | 0;
    $19$0 = HEAP32[$xcurr1_i_i >> 2] | 0;
    $19$1 = HEAP32[$xcurr1_i_i + 4 >> 2] | 0;
    do {
     if (($18$0 | 0) == ($19$0 | 0) & ($18$1 | 0) == ($19$1 | 0)) {
      $dx_i_i = $15 + 48 | 0;
      if (+HEAPF64[$dx_i_i >> 3] > +HEAPF64[$17 + 48 >> 3]) {
       label = 5547;
      } else {
       $dx_i21_pre_phi_i = $dx_i_i;
      }
     } else {
      if (($18$1 | 0) < ($19$1 | 0) | ($18$1 | 0) == ($19$1 | 0) & $18$0 >>> 0 < $19$0 >>> 0) {
       label = 5547;
       break;
      }
      $dx_i21_pre_phi_i = $15 + 48 | 0;
     }
    } while (0);
    if ((label | 0) == 5547) {
     label = 0;
     HEAP32[$nextInAEL_i >> 2] = $17;
     HEAP32[(HEAP32[$m_ActiveEdges_i >> 2] | 0) + 120 >> 2] = $15;
     HEAP32[$m_ActiveEdges_i >> 2] = $15;
     break;
    }
    $nextInAEL12_i361 = $17 + 116 | 0;
    $22 = HEAP32[$nextInAEL12_i361 >> 2] | 0;
    L6280 : do {
     if (($22 | 0) == 0) {
      $29 = 0;
      $e_0_i_lcssa = $17;
      $nextInAEL12_i_lcssa = $nextInAEL12_i361;
     } else {
      $e_0_i363 = $17;
      $nextInAEL12_i364 = $nextInAEL12_i361;
      $24 = $22;
      while (1) {
       $xcurr1_i19_i = $24 + 16 | 0;
       $25$0 = HEAP32[$xcurr1_i19_i >> 2] | 0;
       $25$1 = HEAP32[$xcurr1_i19_i + 4 >> 2] | 0;
       if (($18$0 | 0) == ($25$0 | 0) & ($18$1 | 0) == ($25$1 | 0)) {
        if (+HEAPF64[$dx_i21_pre_phi_i >> 3] > +HEAPF64[$24 + 48 >> 3]) {
         $29 = $24;
         $e_0_i_lcssa = $e_0_i363;
         $nextInAEL12_i_lcssa = $nextInAEL12_i364;
         break L6280;
        }
       } else {
        if (($18$1 | 0) < ($25$1 | 0) | ($18$1 | 0) == ($25$1 | 0) & $18$0 >>> 0 < $25$0 >>> 0) {
         $29 = $24;
         $e_0_i_lcssa = $e_0_i363;
         $nextInAEL12_i_lcssa = $nextInAEL12_i364;
         break L6280;
        }
       }
       $nextInAEL12_i = $24 + 116 | 0;
       $28 = HEAP32[$nextInAEL12_i >> 2] | 0;
       if (($28 | 0) == 0) {
        $29 = 0;
        $e_0_i_lcssa = $24;
        $nextInAEL12_i_lcssa = $nextInAEL12_i;
        break;
       } else {
        $e_0_i363 = $24;
        $nextInAEL12_i364 = $nextInAEL12_i;
        $24 = $28;
       }
      }
     }
    } while (0);
    HEAP32[$nextInAEL_i >> 2] = $29;
    $30 = HEAP32[$nextInAEL12_i_lcssa >> 2] | 0;
    if (($30 | 0) != 0) {
     HEAP32[$30 + 120 >> 2] = $15;
    }
    HEAP32[$prevInAEL_i >> 2] = $e_0_i_lcssa;
    HEAP32[$nextInAEL12_i_lcssa >> 2] = $15;
   }
  } while (0);
  $ytop = $15 + 40 | 0;
  $31$0 = HEAP32[$ytop >> 2] | 0;
  $31$1 = HEAP32[$ytop + 4 >> 2] | 0;
  $32 = HEAP32[$m_Scanbeam_i >> 2] | 0;
  do {
   if (($32 | 0) == 0) {
    $call_i = __Znwj(16) | 0;
    HEAP32[$m_Scanbeam_i >> 2] = $call_i;
    HEAP32[$call_i + 8 >> 2] = 0;
    $Y5_i = $call_i;
    HEAP32[$Y5_i >> 2] = $31$0;
    HEAP32[$Y5_i + 4 >> 2] = $31$1;
   } else {
    $Y7_i = $32 | 0;
    $35$1 = HEAP32[$Y7_i + 4 >> 2] | 0;
    if (($35$1 | 0) < ($31$1 | 0) | ($35$1 | 0) == ($31$1 | 0) & (HEAP32[$Y7_i >> 2] | 0) >>> 0 < $31$0 >>> 0) {
     $call9_i = __Znwj(16) | 0;
     $Y10_i = $call9_i;
     HEAP32[$Y10_i >> 2] = $31$0;
     HEAP32[$Y10_i + 4 >> 2] = $31$1;
     HEAP32[$call9_i + 8 >> 2] = HEAP32[$m_Scanbeam_i >> 2];
     HEAP32[$m_Scanbeam_i >> 2] = $call9_i;
     break;
    } else {
     $sb2_0_i = $32;
    }
    while (1) {
     $next16_i = $sb2_0_i + 8 | 0;
     $39 = HEAP32[$next16_i >> 2] | 0;
     if (($39 | 0) == 0) {
      break;
     }
     $Y19_i = $39 | 0;
     $40$1 = HEAP32[$Y19_i + 4 >> 2] | 0;
     if (($40$1 | 0) < ($31$1 | 0) | ($40$1 | 0) == ($31$1 | 0) & (HEAP32[$Y19_i >> 2] | 0) >>> 0 < $31$0 >>> 0) {
      break;
     } else {
      $sb2_0_i = $39;
     }
    }
    $Y22_i = $sb2_0_i | 0;
    if ((HEAP32[$Y22_i >> 2] | 0) == ($31$0 | 0) & (HEAP32[$Y22_i + 4 >> 2] | 0) == ($31$1 | 0)) {
     break;
    }
    $call26_i = __Znwj(16) | 0;
    $Y27_i = $call26_i;
    HEAP32[$Y27_i >> 2] = $31$0;
    HEAP32[$Y27_i + 4 >> 2] = $31$1;
    HEAP32[$call26_i + 8 >> 2] = HEAP32[$next16_i >> 2];
    HEAP32[$next16_i >> 2] = $call26_i;
   }
  } while (0);
  $prevInAEL_i62 = $16 + 120 | 0;
  HEAP32[$prevInAEL_i62 >> 2] = 0;
  $nextInAEL_i63 = $16 + 116 | 0;
  HEAP32[$nextInAEL_i63 >> 2] = 0;
  $45 = HEAP32[$m_ActiveEdges_i >> 2] | 0;
  do {
   if (($45 | 0) == 0) {
    HEAP32[$m_ActiveEdges_i >> 2] = $16;
   } else {
    $xcurr_i_i67 = $16 + 16 | 0;
    $46$0 = HEAP32[$xcurr_i_i67 >> 2] | 0;
    $46$1 = HEAP32[$xcurr_i_i67 + 4 >> 2] | 0;
    $xcurr1_i_i68 = $45 + 16 | 0;
    $47$0 = HEAP32[$xcurr1_i_i68 >> 2] | 0;
    $47$1 = HEAP32[$xcurr1_i_i68 + 4 >> 2] | 0;
    do {
     if (($46$0 | 0) == ($47$0 | 0) & ($46$1 | 0) == ($47$1 | 0)) {
      $dx_i_i71 = $16 + 48 | 0;
      if (+HEAPF64[$dx_i_i71 >> 3] > +HEAPF64[$45 + 48 >> 3]) {
       label = 5570;
      } else {
       $dx_i21_pre_phi_i75 = $dx_i_i71;
      }
     } else {
      if (($46$1 | 0) < ($47$1 | 0) | ($46$1 | 0) == ($47$1 | 0) & $46$0 >>> 0 < $47$0 >>> 0) {
       label = 5570;
       break;
      }
      $dx_i21_pre_phi_i75 = $16 + 48 | 0;
     }
    } while (0);
    if ((label | 0) == 5570) {
     label = 0;
     HEAP32[$nextInAEL_i63 >> 2] = $45;
     HEAP32[(HEAP32[$m_ActiveEdges_i >> 2] | 0) + 120 >> 2] = $16;
     HEAP32[$m_ActiveEdges_i >> 2] = $16;
     break;
    }
    $nextInAEL12_i84367 = $45 + 116 | 0;
    $50 = HEAP32[$nextInAEL12_i84367 >> 2] | 0;
    L6312 : do {
     if (($50 | 0) == 0) {
      $57 = 0;
      $e_0_i83_lcssa = $45;
      $nextInAEL12_i84_lcssa = $nextInAEL12_i84367;
     } else {
      $e_0_i83369 = $45;
      $nextInAEL12_i84370 = $nextInAEL12_i84367;
      $52 = $50;
      while (1) {
       $xcurr1_i19_i87 = $52 + 16 | 0;
       $53$0 = HEAP32[$xcurr1_i19_i87 >> 2] | 0;
       $53$1 = HEAP32[$xcurr1_i19_i87 + 4 >> 2] | 0;
       if (($46$0 | 0) == ($53$0 | 0) & ($46$1 | 0) == ($53$1 | 0)) {
        if (+HEAPF64[$dx_i21_pre_phi_i75 >> 3] > +HEAPF64[$52 + 48 >> 3]) {
         $57 = $52;
         $e_0_i83_lcssa = $e_0_i83369;
         $nextInAEL12_i84_lcssa = $nextInAEL12_i84370;
         break L6312;
        }
       } else {
        if (($46$1 | 0) < ($53$1 | 0) | ($46$1 | 0) == ($53$1 | 0) & $46$0 >>> 0 < $53$0 >>> 0) {
         $57 = $52;
         $e_0_i83_lcssa = $e_0_i83369;
         $nextInAEL12_i84_lcssa = $nextInAEL12_i84370;
         break L6312;
        }
       }
       $nextInAEL12_i84 = $52 + 116 | 0;
       $56 = HEAP32[$nextInAEL12_i84 >> 2] | 0;
       if (($56 | 0) == 0) {
        $57 = 0;
        $e_0_i83_lcssa = $52;
        $nextInAEL12_i84_lcssa = $nextInAEL12_i84;
        break;
       } else {
        $e_0_i83369 = $52;
        $nextInAEL12_i84370 = $nextInAEL12_i84;
        $52 = $56;
       }
      }
     }
    } while (0);
    HEAP32[$nextInAEL_i63 >> 2] = $57;
    $58 = HEAP32[$nextInAEL12_i84_lcssa >> 2] | 0;
    if (($58 | 0) != 0) {
     HEAP32[$58 + 120 >> 2] = $16;
    }
    HEAP32[$prevInAEL_i62 >> 2] = $e_0_i83_lcssa;
    HEAP32[$nextInAEL12_i84_lcssa >> 2] = $16;
   }
  } while (0);
  $windDelta = $15 + 88 | 0;
  if ((HEAP32[((HEAP32[$15 + 80 >> 2] | 0) == 0 ? $m_SubjFillType_i : $m_ClipFillType_i) >> 2] | 0) == 0) {
   HEAP32[$windDelta >> 2] = 1;
   HEAP32[$16 + 88 >> 2] = 1;
  } else {
   HEAP32[$16 + 88 >> 2] = -(HEAP32[$windDelta >> 2] | 0);
  }
  __ZN10ClipperLib7Clipper15SetWindingCountERNS_5TEdgeE($this, $15);
  HEAP32[$16 + 92 >> 2] = HEAP32[$15 + 92 >> 2];
  HEAP32[$16 + 96 >> 2] = HEAP32[$15 + 96 >> 2];
  $dx = $16 + 48 | 0;
  $sub22 = +HEAPF64[$dx >> 3] + 1.0e+40;
  do {
   if ($sub22 > -1.0e-20 & $sub22 < 1.0e-20) {
    $64 = HEAP32[$m_SortedEdges_i >> 2] | 0;
    if (($64 | 0) == 0) {
     HEAP32[$m_SortedEdges_i >> 2] = $16;
     HEAP32[$16 + 128 >> 2] = 0;
     HEAP32[$16 + 124 >> 2] = 0;
    } else {
     HEAP32[$16 + 124 >> 2] = $64;
     HEAP32[$16 + 128 >> 2] = 0;
     HEAP32[(HEAP32[$m_SortedEdges_i >> 2] | 0) + 128 >> 2] = $16;
     HEAP32[$m_SortedEdges_i >> 2] = $16;
    }
    $ytop28 = (HEAP32[$16 + 112 >> 2] | 0) + 40 | 0;
    $67$0 = HEAP32[$ytop28 >> 2] | 0;
    $67$1 = HEAP32[$ytop28 + 4 >> 2] | 0;
    $68 = HEAP32[$m_Scanbeam_i >> 2] | 0;
    if (($68 | 0) == 0) {
     $call_i109 = __Znwj(16) | 0;
     HEAP32[$m_Scanbeam_i >> 2] = $call_i109;
     HEAP32[$call_i109 + 8 >> 2] = 0;
     $Y5_i111 = $call_i109;
     HEAP32[$Y5_i111 >> 2] = $67$0;
     HEAP32[$Y5_i111 + 4 >> 2] = $67$1;
     break;
    }
    $Y7_i113 = $68 | 0;
    $71$1 = HEAP32[$Y7_i113 + 4 >> 2] | 0;
    if (($71$1 | 0) < ($67$1 | 0) | ($71$1 | 0) == ($67$1 | 0) & (HEAP32[$Y7_i113 >> 2] | 0) >>> 0 < $67$0 >>> 0) {
     $call9_i116 = __Znwj(16) | 0;
     $Y10_i117 = $call9_i116;
     HEAP32[$Y10_i117 >> 2] = $67$0;
     HEAP32[$Y10_i117 + 4 >> 2] = $67$1;
     HEAP32[$call9_i116 + 8 >> 2] = HEAP32[$m_Scanbeam_i >> 2];
     HEAP32[$m_Scanbeam_i >> 2] = $call9_i116;
     break;
    } else {
     $sb2_0_i120 = $68;
    }
    while (1) {
     $next16_i121 = $sb2_0_i120 + 8 | 0;
     $75 = HEAP32[$next16_i121 >> 2] | 0;
     if (($75 | 0) == 0) {
      break;
     }
     $Y19_i124 = $75 | 0;
     $76$1 = HEAP32[$Y19_i124 + 4 >> 2] | 0;
     if (($76$1 | 0) < ($67$1 | 0) | ($76$1 | 0) == ($67$1 | 0) & (HEAP32[$Y19_i124 >> 2] | 0) >>> 0 < $67$0 >>> 0) {
      break;
     } else {
      $sb2_0_i120 = $75;
     }
    }
    $Y22_i127 = $sb2_0_i120 | 0;
    if ((HEAP32[$Y22_i127 >> 2] | 0) == ($67$0 | 0) & (HEAP32[$Y22_i127 + 4 >> 2] | 0) == ($67$1 | 0)) {
     break;
    }
    $call26_i130 = __Znwj(16) | 0;
    $Y27_i131 = $call26_i130;
    HEAP32[$Y27_i131 >> 2] = $67$0;
    HEAP32[$Y27_i131 + 4 >> 2] = $67$1;
    HEAP32[$call26_i130 + 8 >> 2] = HEAP32[$next16_i121 >> 2];
    HEAP32[$next16_i121 >> 2] = $call26_i130;
   } else {
    $ytop30 = $16 + 40 | 0;
    $81$0 = HEAP32[$ytop30 >> 2] | 0;
    $81$1 = HEAP32[$ytop30 + 4 >> 2] | 0;
    $82 = HEAP32[$m_Scanbeam_i >> 2] | 0;
    if (($82 | 0) == 0) {
     $call_i137 = __Znwj(16) | 0;
     HEAP32[$m_Scanbeam_i >> 2] = $call_i137;
     HEAP32[$call_i137 + 8 >> 2] = 0;
     $Y5_i139 = $call_i137;
     HEAP32[$Y5_i139 >> 2] = $81$0;
     HEAP32[$Y5_i139 + 4 >> 2] = $81$1;
     break;
    }
    $Y7_i141 = $82 | 0;
    $85$1 = HEAP32[$Y7_i141 + 4 >> 2] | 0;
    if (($85$1 | 0) < ($81$1 | 0) | ($85$1 | 0) == ($81$1 | 0) & (HEAP32[$Y7_i141 >> 2] | 0) >>> 0 < $81$0 >>> 0) {
     $call9_i144 = __Znwj(16) | 0;
     $Y10_i145 = $call9_i144;
     HEAP32[$Y10_i145 >> 2] = $81$0;
     HEAP32[$Y10_i145 + 4 >> 2] = $81$1;
     HEAP32[$call9_i144 + 8 >> 2] = HEAP32[$m_Scanbeam_i >> 2];
     HEAP32[$m_Scanbeam_i >> 2] = $call9_i144;
     break;
    } else {
     $sb2_0_i148 = $82;
    }
    while (1) {
     $next16_i149 = $sb2_0_i148 + 8 | 0;
     $89 = HEAP32[$next16_i149 >> 2] | 0;
     if (($89 | 0) == 0) {
      break;
     }
     $Y19_i152 = $89 | 0;
     $90$1 = HEAP32[$Y19_i152 + 4 >> 2] | 0;
     if (($90$1 | 0) < ($81$1 | 0) | ($90$1 | 0) == ($81$1 | 0) & (HEAP32[$Y19_i152 >> 2] | 0) >>> 0 < $81$0 >>> 0) {
      break;
     } else {
      $sb2_0_i148 = $89;
     }
    }
    $Y22_i155 = $sb2_0_i148 | 0;
    if ((HEAP32[$Y22_i155 >> 2] | 0) == ($81$0 | 0) & (HEAP32[$Y22_i155 + 4 >> 2] | 0) == ($81$1 | 0)) {
     break;
    }
    $call26_i158 = __Znwj(16) | 0;
    $Y27_i159 = $call26_i158;
    HEAP32[$Y27_i159 >> 2] = $81$0;
    HEAP32[$Y27_i159 + 4 >> 2] = $81$1;
    HEAP32[$call26_i158 + 8 >> 2] = HEAP32[$next16_i149 >> 2];
    HEAP32[$next16_i149 >> 2] = $call26_i158;
   }
  } while (0);
  if (__ZNK10ClipperLib7Clipper14IsContributingERKNS_5TEdgeE($this, $15) | 0) {
   $xcurr = $15 + 16 | 0;
   $95$1 = HEAP32[$xcurr + 4 >> 2] | 0;
   $Y39 = HEAP32[$2 + ((HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0) + 4) >> 2] | 0;
   $99$0 = HEAP32[$Y39 >> 2] | 0;
   $99$1 = HEAP32[$Y39 + 4 >> 2] | 0;
   HEAP32[$X_i_i >> 2] = HEAP32[$xcurr >> 2];
   HEAP32[$X_i_i + 4 >> 2] = $95$1;
   HEAP32[$Y_i_i >> 2] = $99$0;
   HEAP32[$Y_i_i + 4 >> 2] = $99$1;
   __ZN10ClipperLib7Clipper15AddLocalMinPolyEPNS_5TEdgeES2_RKNS_8IntPointE($this, $15, $16, $ref_tmp);
  }
  $outIdx = $16 + 100 | 0;
  do {
   if ((HEAP32[$outIdx >> 2] | 0) > -1) {
    $sub44 = +HEAPF64[$dx >> 3] + 1.0e+40;
    if (!($sub44 > -1.0e-20 & $sub44 < 1.0e-20)) {
     break;
    }
    $103 = HEAP32[$__begin__i >> 2] | 0;
    if ((HEAP32[$__end__i >> 2] | 0) == ($103 | 0)) {
     break;
    }
    $xbot61 = $16 | 0;
    $ybot62 = $16 + 8 | 0;
    $xtop64 = $16 + 32 | 0;
    $ytop65 = $16 + 40 | 0;
    $xcurr11_i219 = $16 + 16 | 0;
    $ycurr12_i220 = $16 + 24 | 0;
    $i_0380 = 0;
    $104 = $103;
    do {
     $105 = HEAP32[$104 + ($i_0380 << 2) >> 2] | 0;
     $106 = HEAP32[$105 >> 2] | 0;
     $xbot = $106 | 0;
     $107$0 = HEAP32[$xbot >> 2] | 0;
     $107$1 = HEAP32[$xbot + 4 >> 2] | 0;
     $ybot = $106 + 8 | 0;
     $108$0 = HEAP32[$ybot >> 2] | 0;
     $108$1 = HEAP32[$ybot + 4 >> 2] | 0;
     $xtop = $106 + 32 | 0;
     $109$0 = HEAP32[$xtop >> 2] | 0;
     $109$1 = HEAP32[$xtop + 4 >> 2] | 0;
     $ytop59 = $106 + 40 | 0;
     $110$0 = HEAP32[$ytop59 >> 2] | 0;
     $110$1 = HEAP32[$ytop59 + 4 >> 2] | 0;
     $111$0 = HEAP32[$xbot61 >> 2] | 0;
     $111$1 = HEAP32[$xbot61 + 4 >> 2] | 0;
     $112$0 = HEAP32[$ybot62 >> 2] | 0;
     $112$1 = HEAP32[$ybot62 + 4 >> 2] | 0;
     $113$0 = HEAP32[$xtop64 >> 2] | 0;
     $113$1 = HEAP32[$xtop64 + 4 >> 2] | 0;
     $114$0 = HEAP32[$ytop65 >> 2] | 0;
     $114$1 = HEAP32[$ytop65 + 4 >> 2] | 0;
     do {
      if (($108$0 | 0) == ($110$0 | 0) & ($108$1 | 0) == ($110$1 | 0)) {
       label = 5609;
      } else {
       $sub_i$0 = _i64Subtract($107$0, $107$1, $109$0, $109$1) | 0;
       $sub_i$1 = tempRet0;
       $sub5_i$0 = _i64Subtract($108$0, $108$1, $110$0, $110$1) | 0;
       $div_i$0 = ___divdi3($sub_i$0, $sub_i$1, $sub5_i$0, tempRet0) | 0;
       $div_i$1 = tempRet0;
       $$etemp$80$1 = 0;
       $cmp_i_i193 = ($div_i$1 | 0) < ($$etemp$80$1 | 0) | ($div_i$1 | 0) == ($$etemp$80$1 | 0) & $div_i$0 >>> 0 < 0 >>> 0;
       $sub_i_i$0 = _i64Subtract(0, 0, $div_i$0, $div_i$1) | 0;
       $cond_i_i$1 = $cmp_i_i193 ? tempRet0 : $div_i$1;
       $$etemp$82$1 = 0;
       if (($cond_i_i$1 | 0) > ($$etemp$82$1 | 0) | ($cond_i_i$1 | 0) == ($$etemp$82$1 | 0) & ($cmp_i_i193 ? $sub_i_i$0 : $div_i$0) >>> 0 > 1 >>> 0) {
        label = 5609;
        break;
       }
       $cmp33_i = ($108$1 | 0) < ($110$1 | 0) | ($108$1 | 0) == ($110$1 | 0) & $108$0 >>> 0 < $110$0 >>> 0;
       $_359$0 = $cmp33_i ? $108$0 : $110$0;
       $_359$1 = $cmp33_i ? $108$1 : $110$1;
       $_360$0 = $cmp33_i ? $110$0 : $108$0;
       $_360$1 = $cmp33_i ? $110$1 : $108$1;
       $cmp38_i = ($112$1 | 0) < ($114$1 | 0) | ($112$1 | 0) == ($114$1 | 0) & $112$0 >>> 0 < $114$0 >>> 0;
       $agg_tmp63189_sroa_1_8_load335356$0 = $cmp38_i ? $112$0 : $114$0;
       $agg_tmp63189_sroa_1_8_load335356$1 = $cmp38_i ? $112$1 : $114$1;
       $117$0 = $cmp38_i ? $114$0 : $112$0;
       $117$1 = $cmp38_i ? $114$1 : $112$1;
       $cmp43_i = ($_360$1 | 0) < ($117$1 | 0) | ($_360$1 | 0) == ($117$1 | 0) & $_360$0 >>> 0 < $117$0 >>> 0;
       $_360_$1 = $cmp43_i ? $_360$1 : $117$1;
       $cmp49_i = ($_359$1 | 0) > ($agg_tmp63189_sroa_1_8_load335356$1 | 0) | ($_359$1 | 0) == ($agg_tmp63189_sroa_1_8_load335356$1 | 0) & $_359$0 >>> 0 > $agg_tmp63189_sroa_1_8_load335356$0 >>> 0;
       $118$1 = $cmp49_i ? $_359$1 : $agg_tmp63189_sroa_1_8_load335356$1;
       if (($_360_$1 | 0) > ($118$1 | 0) | ($_360_$1 | 0) == ($118$1 | 0) & ($cmp43_i ? $_360$0 : $117$0) >>> 0 > ($cmp49_i ? $_359$0 : $agg_tmp63189_sroa_1_8_load335356$0) >>> 0) {
        label = 5611;
       }
      }
     } while (0);
     if ((label | 0) == 5609) {
      label = 0;
      $cmp9_i = ($107$1 | 0) > ($109$1 | 0) | ($107$1 | 0) == ($109$1 | 0) & $107$0 >>> 0 > $109$0 >>> 0;
      $_$0 = $cmp9_i ? $107$0 : $109$0;
      $_$1 = $cmp9_i ? $107$1 : $109$1;
      $_358$0 = $cmp9_i ? $109$0 : $107$0;
      $_358$1 = $cmp9_i ? $109$1 : $107$1;
      $cmp13_i = ($111$1 | 0) > ($113$1 | 0) | ($111$1 | 0) == ($113$1 | 0) & $111$0 >>> 0 > $113$0 >>> 0;
      $tmp_i_i_sroa_0_0_load354$0 = $cmp13_i ? $111$0 : $113$0;
      $tmp_i_i_sroa_0_0_load354$1 = $cmp13_i ? $111$1 : $113$1;
      $115$0 = $cmp13_i ? $113$0 : $111$0;
      $115$1 = $cmp13_i ? $113$1 : $111$1;
      $cmp18_i = ($_358$1 | 0) > ($115$1 | 0) | ($_358$1 | 0) == ($115$1 | 0) & $_358$0 >>> 0 > $115$0 >>> 0;
      $_358_$1 = $cmp18_i ? $_358$1 : $115$1;
      $cmp23_i198 = ($_$1 | 0) < ($tmp_i_i_sroa_0_0_load354$1 | 0) | ($_$1 | 0) == ($tmp_i_i_sroa_0_0_load354$1 | 0) & $_$0 >>> 0 < $tmp_i_i_sroa_0_0_load354$0 >>> 0;
      $116$1 = $cmp23_i198 ? $_$1 : $tmp_i_i_sroa_0_0_load354$1;
      if (($_358_$1 | 0) < ($116$1 | 0) | ($_358_$1 | 0) == ($116$1 | 0) & ($cmp18_i ? $_358$0 : $115$0) >>> 0 < ($cmp23_i198 ? $_$0 : $tmp_i_i_sroa_0_0_load354$0) >>> 0) {
       label = 5611;
      }
     }
     do {
      if ((label | 0) == 5611) {
       label = 0;
       $119 = HEAP32[$105 + 4 >> 2] | 0;
       $call_i201 = __Znwj(80) | 0;
       $120 = $call_i201;
       $X_i_i3_i_i_i202 = $call_i201 + 40 | 0;
       _memset($call_i201 | 0, 0, 32);
       _memset($X_i_i3_i_i_i202 | 0, 0, 32);
       HEAP32[$jr_i200 >> 2] = $120;
       if (($119 | 0) > -1) {
        HEAP32[$call_i201 + 32 >> 2] = $119;
       } else {
        HEAP32[$call_i201 + 32 >> 2] = HEAP32[$106 + 100 >> 2];
       }
       $xcurr_i208 = $106 + 16 | 0;
       $124$1 = HEAP32[$xcurr_i208 + 4 >> 2] | 0;
       $ycurr_i209 = $106 + 24 | 0;
       $125$0 = HEAP32[$ycurr_i209 >> 2] | 0;
       $125$1 = HEAP32[$ycurr_i209 + 4 >> 2] | 0;
       $ref_tmp_sroa_0_0__idx_i210 = $call_i201;
       HEAP32[$ref_tmp_sroa_0_0__idx_i210 >> 2] = HEAP32[$xcurr_i208 >> 2];
       HEAP32[$ref_tmp_sroa_0_0__idx_i210 + 4 >> 2] = $124$1;
       $126 = $call_i201 + 8 | 0;
       HEAP32[$126 >> 2] = $125$0;
       HEAP32[$126 + 4 >> 2] = $125$1;
       $127$1 = HEAP32[$xtop + 4 >> 2] | 0;
       $128$0 = HEAP32[$ytop59 >> 2] | 0;
       $128$1 = HEAP32[$ytop59 + 4 >> 2] | 0;
       $129 = $call_i201 + 16 | 0;
       HEAP32[$129 >> 2] = HEAP32[$xtop >> 2];
       HEAP32[$129 + 4 >> 2] = $127$1;
       $130 = $call_i201 + 24 | 0;
       HEAP32[$130 >> 2] = $128$0;
       HEAP32[$130 + 4 >> 2] = $128$1;
       HEAP32[$call_i201 + 72 >> 2] = HEAP32[$outIdx >> 2];
       $133$1 = HEAP32[$xcurr11_i219 + 4 >> 2] | 0;
       $134$0 = HEAP32[$ycurr12_i220 >> 2] | 0;
       $134$1 = HEAP32[$ycurr12_i220 + 4 >> 2] | 0;
       $135 = $X_i_i3_i_i_i202;
       HEAP32[$135 >> 2] = HEAP32[$xcurr11_i219 >> 2];
       HEAP32[$135 + 4 >> 2] = $133$1;
       $136 = $call_i201 + 48 | 0;
       HEAP32[$136 >> 2] = $134$0;
       HEAP32[$136 + 4 >> 2] = $134$1;
       $137$1 = HEAP32[$xtop64 + 4 >> 2] | 0;
       $138$0 = HEAP32[$ytop65 >> 2] | 0;
       $138$1 = HEAP32[$ytop65 + 4 >> 2] | 0;
       $139 = $call_i201 + 56 | 0;
       HEAP32[$139 >> 2] = HEAP32[$xtop64 >> 2];
       HEAP32[$139 + 4 >> 2] = $137$1;
       $140 = $call_i201 + 64 | 0;
       HEAP32[$140 >> 2] = $138$0;
       HEAP32[$140 + 4 >> 2] = $138$1;
       $141 = HEAP32[$__end__i_i227 >> 2] | 0;
       if (($141 | 0) == (HEAP32[$__first__i_i_i_i_i228 >> 2] | 0)) {
        __ZNSt3__16vectorIPN10ClipperLib7JoinRecENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($m_Joins_i236, $jr_i200);
        break;
       }
       if (($141 | 0) == 0) {
        $143 = 0;
       } else {
        HEAP32[$141 >> 2] = $120;
        $143 = HEAP32[$__end__i_i227 >> 2] | 0;
       }
       HEAP32[$__end__i_i227 >> 2] = $143 + 4;
      }
     } while (0);
     $i_0380 = $i_0380 + 1 | 0;
     $104 = HEAP32[$__begin__i >> 2] | 0;
    } while ($i_0380 >>> 0 < (HEAP32[$__end__i >> 2] | 0) - $104 >> 2 >>> 0);
   }
  } while (0);
  do {
   if ((HEAP32[$nextInAEL_i >> 2] | 0) != ($16 | 0)) {
    do {
     if ((HEAP32[$outIdx >> 2] | 0) > -1) {
      $148 = HEAP32[$prevInAEL_i62 >> 2] | 0;
      if ((HEAP32[$148 + 100 >> 2] | 0) <= -1) {
       break;
      }
      $deltaY_i = $148 + 64 | 0;
      $154$0 = HEAP32[$deltaY_i >> 2] | 0;
      $154$1 = HEAP32[$deltaY_i + 4 >> 2] | 0;
      if ((HEAP8[$2 + ((HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) == 0) {
       $deltaX8_i = $16 + 56 | 0;
       $mul_i$0 = ___muldi3(HEAP32[$deltaX8_i >> 2] | 0, HEAP32[$deltaX8_i + 4 >> 2] | 0, $154$0, $154$1) | 0;
       $mul_i$1 = tempRet0;
       $deltaX9_i = $148 + 56 | 0;
       $deltaY10_i = $16 + 64 | 0;
       $mul11_i$0 = ___muldi3(HEAP32[$deltaY10_i >> 2] | 0, HEAP32[$deltaY10_i + 4 >> 2] | 0, HEAP32[$deltaX9_i >> 2] | 0, HEAP32[$deltaX9_i + 4 >> 2] | 0) | 0;
       $retval_0_i243 = ($mul_i$0 | 0) == ($mul11_i$0 | 0) & ($mul_i$1 | 0) == (tempRet0 | 0);
      } else {
       HEAP32[$lo_i_i_i >> 2] = $154$0;
       HEAP32[$lo_i_i_i + 4 >> 2] = $154$1;
       HEAP32[$hi_i_i_i >> 2] = $154$1 >> 31 | (($154$1 | 0) < 0 ? -1 : 0) << 1;
       HEAP32[$hi_i_i_i + 4 >> 2] = (($154$1 | 0) < 0 ? -1 : 0) >> 31 | (($154$1 | 0) < 0 ? -1 : 0) << 1;
       $deltaX_i = $16 + 56 | 0;
       $155$1 = HEAP32[$deltaX_i + 4 >> 2] | 0;
       HEAP32[$lo_i_i6_i >> 2] = HEAP32[$deltaX_i >> 2];
       HEAP32[$lo_i_i6_i + 4 >> 2] = $155$1;
       HEAP32[$hi_i_i7_i >> 2] = $155$1 >> 31 | (($155$1 | 0) < 0 ? -1 : 0) << 1;
       HEAP32[$hi_i_i7_i + 4 >> 2] = (($155$1 | 0) < 0 ? -1 : 0) >> 31 | (($155$1 | 0) < 0 ? -1 : 0) << 1;
       __ZNK10ClipperLib6Int128mlERKS0_($tmp1_i, $tmp_i, $ref_tmp_i);
       $deltaX4_i = $148 + 56 | 0;
       $156$1 = HEAP32[$deltaX4_i + 4 >> 2] | 0;
       HEAP32[$lo_i_i12_i >> 2] = HEAP32[$deltaX4_i >> 2];
       HEAP32[$lo_i_i12_i + 4 >> 2] = $156$1;
       HEAP32[$hi_i_i13_i >> 2] = $156$1 >> 31 | (($156$1 | 0) < 0 ? -1 : 0) << 1;
       HEAP32[$hi_i_i13_i + 4 >> 2] = (($156$1 | 0) < 0 ? -1 : 0) >> 31 | (($156$1 | 0) < 0 ? -1 : 0) << 1;
       $deltaY6_i = $16 + 64 | 0;
       $157$1 = HEAP32[$deltaY6_i + 4 >> 2] | 0;
       HEAP32[$lo_i_i9_i >> 2] = HEAP32[$deltaY6_i >> 2];
       HEAP32[$lo_i_i9_i + 4 >> 2] = $157$1;
       HEAP32[$hi_i_i10_i >> 2] = $157$1 >> 31 | (($157$1 | 0) < 0 ? -1 : 0) << 1;
       HEAP32[$hi_i_i10_i + 4 >> 2] = (($157$1 | 0) < 0 ? -1 : 0) >> 31 | (($157$1 | 0) < 0 ? -1 : 0) << 1;
       __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp2_i, $tmp3_i, $ref_tmp5_i);
       if (!((HEAP32[$hi_i_i >> 2] | 0) == (HEAP32[$hi2_i_i >> 2] | 0) & (HEAP32[$hi_i_i + 4 >> 2] | 0) == (HEAP32[$hi2_i_i + 4 >> 2] | 0))) {
        break;
       }
       $retval_0_i243 = (HEAP32[$lo_i_i >> 2] | 0) == (HEAP32[$lo3_i_i >> 2] | 0) & (HEAP32[$lo_i_i + 4 >> 2] | 0) == (HEAP32[$lo3_i_i + 4 >> 2] | 0);
      }
      if (!$retval_0_i243) {
       break;
      }
      $165 = HEAP32[$prevInAEL_i62 >> 2] | 0;
      $call_i177 = __Znwj(80) | 0;
      $166 = $call_i177;
      $X_i_i3_i_i_i = $call_i177 + 40 | 0;
      _memset($call_i177 | 0, 0, 32);
      _memset($X_i_i3_i_i_i | 0, 0, 32);
      HEAP32[$jr_i >> 2] = $166;
      HEAP32[$call_i177 + 32 >> 2] = HEAP32[$outIdx >> 2];
      $xcurr_i = $16 + 16 | 0;
      $169$1 = HEAP32[$xcurr_i + 4 >> 2] | 0;
      $ycurr_i = $16 + 24 | 0;
      $170$0 = HEAP32[$ycurr_i >> 2] | 0;
      $170$1 = HEAP32[$ycurr_i + 4 >> 2] | 0;
      $ref_tmp_sroa_0_0__idx_i = $call_i177;
      HEAP32[$ref_tmp_sroa_0_0__idx_i >> 2] = HEAP32[$xcurr_i >> 2];
      HEAP32[$ref_tmp_sroa_0_0__idx_i + 4 >> 2] = $169$1;
      $171 = $call_i177 + 8 | 0;
      HEAP32[$171 >> 2] = $170$0;
      HEAP32[$171 + 4 >> 2] = $170$1;
      $xtop_i = $16 + 32 | 0;
      $172$1 = HEAP32[$xtop_i + 4 >> 2] | 0;
      $ytop_i = $16 + 40 | 0;
      $173$0 = HEAP32[$ytop_i >> 2] | 0;
      $173$1 = HEAP32[$ytop_i + 4 >> 2] | 0;
      $174 = $call_i177 + 16 | 0;
      HEAP32[$174 >> 2] = HEAP32[$xtop_i >> 2];
      HEAP32[$174 + 4 >> 2] = $172$1;
      $175 = $call_i177 + 24 | 0;
      HEAP32[$175 >> 2] = $173$0;
      HEAP32[$175 + 4 >> 2] = $173$1;
      HEAP32[$call_i177 + 72 >> 2] = HEAP32[$165 + 100 >> 2];
      $xcurr11_i = $165 + 16 | 0;
      $178$1 = HEAP32[$xcurr11_i + 4 >> 2] | 0;
      $ycurr12_i = $165 + 24 | 0;
      $179$0 = HEAP32[$ycurr12_i >> 2] | 0;
      $179$1 = HEAP32[$ycurr12_i + 4 >> 2] | 0;
      $180 = $X_i_i3_i_i_i;
      HEAP32[$180 >> 2] = HEAP32[$xcurr11_i >> 2];
      HEAP32[$180 + 4 >> 2] = $178$1;
      $181 = $call_i177 + 48 | 0;
      HEAP32[$181 >> 2] = $179$0;
      HEAP32[$181 + 4 >> 2] = $179$1;
      $xtop14_i = $165 + 32 | 0;
      $182$1 = HEAP32[$xtop14_i + 4 >> 2] | 0;
      $ytop15_i = $165 + 40 | 0;
      $183$0 = HEAP32[$ytop15_i >> 2] | 0;
      $183$1 = HEAP32[$ytop15_i + 4 >> 2] | 0;
      $184 = $call_i177 + 56 | 0;
      HEAP32[$184 >> 2] = HEAP32[$xtop14_i >> 2];
      HEAP32[$184 + 4 >> 2] = $182$1;
      $185 = $call_i177 + 64 | 0;
      HEAP32[$185 >> 2] = $183$0;
      HEAP32[$185 + 4 >> 2] = $183$1;
      $186 = HEAP32[$__end__i_i227 >> 2] | 0;
      if (($186 | 0) == (HEAP32[$__first__i_i_i_i_i228 >> 2] | 0)) {
       __ZNSt3__16vectorIPN10ClipperLib7JoinRecENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($m_Joins_i236, $jr_i);
       break;
      }
      if (($186 | 0) == 0) {
       $188 = 0;
      } else {
       HEAP32[$186 >> 2] = $166;
       $188 = HEAP32[$__end__i_i227 >> 2] | 0;
      }
      HEAP32[$__end__i_i227 >> 2] = $188 + 4;
     }
    } while (0);
    $189 = HEAP32[$nextInAEL_i >> 2] | 0;
    $xcurr92 = $15 + 16 | 0;
    $190$1 = HEAP32[$xcurr92 + 4 >> 2] | 0;
    $ycurr = $15 + 24 | 0;
    $191$0 = HEAP32[$ycurr >> 2] | 0;
    $191$1 = HEAP32[$ycurr + 4 >> 2] | 0;
    HEAP32[$X_i_i175 >> 2] = HEAP32[$xcurr92 >> 2];
    HEAP32[$X_i_i175 + 4 >> 2] = $190$1;
    HEAP32[$Y_i_i176 >> 2] = $191$0;
    HEAP32[$Y_i_i176 + 4 >> 2] = $191$1;
    if (($189 | 0) == ($16 | 0)) {
     break;
    } else {
     $e_0382 = $189;
    }
    do {
     if (($e_0382 | 0) == 0) {
      label = 5635;
      break L6267;
     }
     __ZN10ClipperLib7Clipper14IntersectEdgesEPNS_5TEdgeES2_RKNS_8IntPointENS_17IntersectProtectsE($this, $16, $e_0382, $pt91, 0);
     $e_0382 = HEAP32[$e_0382 + 116 >> 2] | 0;
    } while (($e_0382 | 0) != ($16 | 0));
   }
  } while (0);
  $vbase_offset103 = HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0;
  $198 = $2 + ($vbase_offset103 + 4) | 0;
  $199 = HEAP32[$198 >> 2] | 0;
  if (($199 | 0) == 0) {
   $vbase_offset = $vbase_offset103;
  } else {
   HEAP32[$198 >> 2] = HEAP32[$199 + 16 >> 2];
   $vbase_offset = HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0;
  }
  $201 = HEAP32[$2 + ($vbase_offset + 4) >> 2] | 0;
  if (($201 | 0) == 0) {
   label = 5644;
   break;
  } else {
   $13 = $201;
  }
 }
 if ((label | 0) == 5643) {
  STACKTOP = __stackBase__;
  return;
 } else if ((label | 0) == 5644) {
  STACKTOP = __stackBase__;
  return;
 } else if ((label | 0) == 5635) {
  $exception = ___cxa_allocate_exception(16) | 0;
  HEAP32[$exception >> 2] = 11984;
  $call_i_i_i3_i_i106 = __Znwj(48) | 0;
  HEAP32[$exception + 12 >> 2] = $call_i_i_i3_i_i106;
  HEAP32[$exception + 4 >> 2] = 49;
  HEAP32[$exception + 8 >> 2] = 45;
  _memcpy($call_i_i_i3_i_i106 | 0, 2112, 45) | 0;
  HEAP8[$call_i_i_i3_i_i106 + 45 | 0] = 0;
  ___cxa_throw($exception | 0, 16960, 216);
 }
}
function __ZN10ClipperLib7Clipper20ProcessIntersectionsExx($this, $botY$0, $botY$1, $topY$0, $topY$1) {
 $this = $this | 0;
 $botY$0 = $botY$0 | 0;
 $botY$1 = $botY$1 | 0;
 $topY$0 = $topY$0 | 0;
 $topY$1 = $topY$1 | 0;
 var $m_IntersectNodes = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $19 = 0, $retval_0 = 0;
 if ((HEAP32[$this + 48 >> 2] | 0) == 0) {
  $retval_0 = 1;
  return $retval_0 | 0;
 }
 __ZN10ClipperLib7Clipper18BuildIntersectListExx($this, $botY$0, $botY$1, $topY$0, $topY$1);
 $m_IntersectNodes = $this + 56 | 0;
 if ((HEAP32[$m_IntersectNodes >> 2] | 0) == 0) {
  $retval_0 = 1;
  return $retval_0 | 0;
 }
 if (!(__ZN10ClipperLib7Clipper18FixupIntersectionsEv($this) | 0)) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 $11 = HEAP32[$m_IntersectNodes >> 2] | 0;
 if (($11 | 0) == 0) {
  $retval_0 = 1;
  return $retval_0 | 0;
 } else {
  $12 = $11;
 }
 while (1) {
  $13 = HEAP32[$12 + 24 >> 2] | 0;
  __ZN10ClipperLib7Clipper14IntersectEdgesEPNS_5TEdgeES2_RKNS_8IntPointENS_17IntersectProtectsE($this, HEAP32[$12 >> 2] | 0, HEAP32[$12 + 4 >> 2] | 0, $12 + 8 | 0, 3);
  $16 = HEAP32[$m_IntersectNodes >> 2] | 0;
  __ZN10ClipperLib7Clipper18SwapPositionsInAELEPNS_5TEdgeES2_($this, HEAP32[$16 >> 2] | 0, HEAP32[$16 + 4 >> 2] | 0);
  $19 = HEAP32[$m_IntersectNodes >> 2] | 0;
  if (($19 | 0) != 0) {
   __ZdlPv($19);
  }
  HEAP32[$m_IntersectNodes >> 2] = $13;
  if (($13 | 0) == 0) {
   $retval_0 = 1;
   break;
  } else {
   $12 = $13;
  }
 }
 return $retval_0 | 0;
}
function __ZN10ClipperLib7Clipper27ProcessEdgesAtTopOfScanbeamEx($this, $topY$0, $topY$1) {
 $this = $this | 0;
 $topY$0 = $topY$0 | 0;
 $topY$1 = $topY$1 | 0;
 var $hj_i = 0, $tmp_i109 = 0, $ref_tmp_i110 = 0, $tmp1_i111 = 0, $ref_tmp2_i112 = 0, $tmp3_i113 = 0, $ref_tmp5_i114 = 0, $jr_i65 = 0, $tmp_i = 0, $ref_tmp_i = 0, $tmp1_i = 0, $ref_tmp2_i = 0, $tmp3_i = 0, $ref_tmp5_i = 0, $jr_i = 0, $e = 0, $ref_tmp = 0, $ref_tmp68 = 0, $ref_tmp98 = 0, $ref_tmp130 = 0, $m_ActiveEdges = 0, $0 = 0, $X_i_i61 = 0, $Y_i_i62 = 0, $__end__i = 0, $__begin__i = 0, $__first__i_i_i_i_i172 = 0, $m_HorizJoins_i = 0, $m_SortedEdges_i = 0, $2 = 0, $ytop_i = 0, $cmp_i = 0, $5 = 0, $tobool_i_i = 0, $ytop_i_i = 0, $xtop_i33 = 0, $xtop2_i = 0, $retval_0_i = 0, $ytop_i_i38 = 0, $xtop_i44 = 0, $xtop2_i45 = 0, $retval_0_i50 = 0, $18 = 0, $19 = 0, $_be = 0, $20 = 0, $21 = 0, $sub15 = 0.0, $xtop = 0, $24$1 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $i_0328 = 0, $29 = 0, $30 = 0, $xbot = 0, $31$0 = 0, $31$1 = 0, $ybot = 0, $32$0 = 0, $32$1 = 0, $xtop32 = 0, $33$0 = 0, $33$1 = 0, $ytop34 = 0, $34$0 = 0, $34$1 = 0, $35 = 0, $36 = 0, $xbot37 = 0, $37$0 = 0, $37$1 = 0, $ybot39 = 0, $38$0 = 0, $38$1 = 0, $xtop42 = 0, $39$0 = 0, $39$1 = 0, $ytop44 = 0, $40$0 = 0, $40$1 = 0, $sub_i$0 = 0, $sub_i$1 = 0, $sub5_i$0 = 0, $div_i$0 = 0, $div_i$1 = 0, $$etemp$36$1 = 0, $cmp_i_i164 = 0, $sub_i_i$0 = 0, $cond_i_i$1 = 0, $$etemp$38$1 = 0, $cmp9_i = 0, $_$0 = 0, $_$1 = 0, $_317$0 = 0, $_317$1 = 0, $cmp13_i = 0, $tmp_i_i_sroa_0_0_load313$0 = 0, $tmp_i_i_sroa_0_0_load313$1 = 0, $41$0 = 0, $41$1 = 0, $cmp18_i = 0, $_317_$1 = 0, $cmp23_i = 0, $42$1 = 0, $cmp33_i = 0, $_318$0 = 0, $_318$1 = 0, $_319$0 = 0, $_319$1 = 0, $cmp38_i = 0, $agg_tmp40160_sroa_1_8_load294315$0 = 0, $agg_tmp40160_sroa_1_8_load294315$1 = 0, $43$0 = 0, $43$1 = 0, $cmp43_i = 0, $_319_$1 = 0, $cmp49_i = 0, $44$1 = 0, $47 = 0, $48 = 0, $inc = 0, $49 = 0, $50 = 0, $51 = 0, $call_i170 = 0, $52 = 0, $54 = 0, $56 = 0, $57 = 0, $58 = 0, $xtop_i186 = 0, $xbot_i = 0, $61$0 = 0, $61$1 = 0, $62 = 0.0, $ybot_i = 0, $sub_i187$0 = 0, $mul_i188 = 0.0, $sub_sink_i_i = 0.0, $add_i$0 = 0, $cond_i$0 = 0, $cond_i$1 = 0, $xcurr = 0, $ycurr = 0, $64 = 0, $65 = 0, $m_SortedEdges_i199_pre_phi = 0, $horzEdge_03_i = 0, $horzEdge_05_i = 0, $prevInSEL_i_i = 0, $66 = 0, $nextInSEL_i_i = 0, $67 = 0, $storemerge320 = 0, $X_i_i191 = 0, $Y_i_i192 = 0, $68 = 0, $69 = 0, $X_i_i = 0, $Y_i_i = 0, $__end__i_i = 0, $__first__i_i_i_i_i = 0, $m_Joins_i = 0, $lo_i_i_i = 0, $hi_i_i_i = 0, $lo_i_i6_i = 0, $hi_i_i7_i = 0, $lo_i_i12_i = 0, $hi_i_i13_i = 0, $lo_i_i9_i = 0, $hi_i_i10_i = 0, $hi_i_i = 0, $hi2_i_i = 0, $lo_i_i = 0, $lo3_i_i = 0, $X_i_i107 = 0, $Y_i_i108 = 0, $lo_i_i_i116 = 0, $hi_i_i_i117 = 0, $lo_i_i6_i120 = 0, $hi_i_i7_i121 = 0, $lo_i_i12_i124 = 0, $hi_i_i13_i125 = 0, $lo_i_i9_i128 = 0, $hi_i_i10_i129 = 0, $hi_i_i131 = 0, $hi2_i_i132 = 0, $lo_i_i135 = 0, $lo3_i_i136 = 0, $84 = 0, $ytop_i193 = 0, $xtop69 = 0, $88$1 = 0, $89 = 0, $90 = 0, $91 = 0, $xcurr77 = 0, $xbot78 = 0, $ycurr81 = 0, $94$0 = 0, $94$1 = 0, $ybot82 = 0, $outIdx88 = 0, $ytop92 = 0, $98$1 = 0, $deltaY_i115 = 0, $103$0 = 0, $103$1 = 0, $deltaX_i119 = 0, $104$1 = 0, $deltaX4_i123 = 0, $105$1 = 0, $deltaY6_i127 = 0, $106$1 = 0, $deltaX8_i139 = 0, $mul_i140$0 = 0, $mul_i140$1 = 0, $deltaX9_i141 = 0, $deltaY10_i142 = 0, $mul11_i143$0 = 0, $retval_0_i146 = 0, $114 = 0, $xbot99 = 0, $115$1 = 0, $ybot100 = 0, $116$0 = 0, $116$1 = 0, $117 = 0, $call_i66 = 0, $118 = 0, $X_i_i3_i_i_i67 = 0, $xcurr_i71 = 0, $121$1 = 0, $ycurr_i72 = 0, $122$0 = 0, $122$1 = 0, $ref_tmp_sroa_0_0__idx_i73 = 0, $123 = 0, $xtop_i75 = 0, $124$1 = 0, $ytop_i76 = 0, $125$0 = 0, $125$1 = 0, $126 = 0, $127 = 0, $130$1 = 0, $131$0 = 0, $131$1 = 0, $132 = 0, $133 = 0, $xtop14_i85 = 0, $134$1 = 0, $135$0 = 0, $135$1 = 0, $136 = 0, $137 = 0, $138 = 0, $140 = 0, $xcurr104 = 0, $142 = 0, $xbot105 = 0, $ycurr108 = 0, $144$0 = 0, $144$1 = 0, $ybot109 = 0, $outIdx115 = 0, $ytop119 = 0, $148$1 = 0, $deltaY_i = 0, $153$0 = 0, $153$1 = 0, $deltaX_i = 0, $154$1 = 0, $deltaX4_i = 0, $155$1 = 0, $deltaY6_i = 0, $156$1 = 0, $deltaX8_i = 0, $mul_i$0 = 0, $mul_i$1 = 0, $deltaX9_i = 0, $deltaY10_i = 0, $mul11_i$0 = 0, $retval_0_i60 = 0, $164 = 0, $xbot131 = 0, $165$1 = 0, $ybot132 = 0, $166$0 = 0, $166$1 = 0, $167 = 0, $call_i = 0, $168 = 0, $X_i_i3_i_i_i = 0, $xcurr_i = 0, $171$1 = 0, $ycurr_i = 0, $172$0 = 0, $172$1 = 0, $ref_tmp_sroa_0_0__idx_i = 0, $173 = 0, $xtop_i = 0, $174$1 = 0, $ytop_i30 = 0, $175$0 = 0, $175$1 = 0, $176 = 0, $177 = 0, $180$1 = 0, $181$0 = 0, $181$1 = 0, $182 = 0, $183 = 0, $xtop14_i = 0, $184$1 = 0, $185$0 = 0, $185$1 = 0, $186 = 0, $187 = 0, $188 = 0, $190 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 $hj_i = __stackBase__ | 0;
 $tmp_i109 = __stackBase__ + 8 | 0;
 $ref_tmp_i110 = __stackBase__ + 24 | 0;
 $tmp1_i111 = __stackBase__ + 40 | 0;
 $ref_tmp2_i112 = __stackBase__ + 56 | 0;
 $tmp3_i113 = __stackBase__ + 72 | 0;
 $ref_tmp5_i114 = __stackBase__ + 88 | 0;
 $jr_i65 = __stackBase__ + 104 | 0;
 $tmp_i = __stackBase__ + 112 | 0;
 $ref_tmp_i = __stackBase__ + 128 | 0;
 $tmp1_i = __stackBase__ + 144 | 0;
 $ref_tmp2_i = __stackBase__ + 160 | 0;
 $tmp3_i = __stackBase__ + 176 | 0;
 $ref_tmp5_i = __stackBase__ + 192 | 0;
 $jr_i = __stackBase__ + 208 | 0;
 $e = __stackBase__ + 216 | 0;
 $ref_tmp = __stackBase__ + 224 | 0;
 $ref_tmp68 = __stackBase__ + 240 | 0;
 $ref_tmp98 = __stackBase__ + 256 | 0;
 $ref_tmp130 = __stackBase__ + 272 | 0;
 $m_ActiveEdges = $this + 48 | 0;
 $0 = HEAP32[$m_ActiveEdges >> 2] | 0;
 HEAP32[$e >> 2] = $0;
 if (($0 | 0) == 0) {
  $m_SortedEdges_i199_pre_phi = $this + 52 | 0;
 } else {
  $X_i_i61 = $ref_tmp | 0;
  $Y_i_i62 = $ref_tmp + 8 | 0;
  $__end__i = $this + 32 | 0;
  $__begin__i = $this + 28 | 0;
  $__first__i_i_i_i_i172 = $this + 36 | 0;
  $m_HorizJoins_i = $this + 28 | 0;
  $m_SortedEdges_i = $this + 52 | 0;
  $2 = $0;
  while (1) {
   $ytop_i = $2 + 40 | 0;
   $cmp_i = (HEAP32[$ytop_i >> 2] | 0) == ($topY$0 | 0) & (HEAP32[$ytop_i + 4 >> 2] | 0) == ($topY$1 | 0);
   L6441 : do {
    if ($cmp_i) {
     L6443 : do {
      if ((HEAP32[$2 + 112 >> 2] | 0) == 0) {
       $5 = HEAP32[$2 + 104 >> 2] | 0;
       $tobool_i_i = ($5 | 0) == 0;
       do {
        if ($tobool_i_i) {
         label = 5682;
        } else {
         $ytop_i_i = $5 + 40 | 0;
         if (!((HEAP32[$ytop_i_i >> 2] | 0) == ($topY$0 | 0) & (HEAP32[$ytop_i_i + 4 >> 2] | 0) == ($topY$1 | 0))) {
          label = 5682;
          break;
         }
         if ((HEAP32[$5 + 112 >> 2] | 0) != 0) {
          label = 5682;
          break;
         }
         $xtop_i33 = $5 + 32 | 0;
         $xtop2_i = $2 + 32 | 0;
         if ((HEAP32[$xtop_i33 >> 2] | 0) == (HEAP32[$xtop2_i >> 2] | 0) & (HEAP32[$xtop_i33 + 4 >> 2] | 0) == (HEAP32[$xtop2_i + 4 >> 2] | 0)) {
          $retval_0_i = $5;
         } else {
          label = 5682;
         }
        }
       } while (0);
       if ((label | 0) == 5682) {
        label = 0;
        $retval_0_i = HEAP32[$2 + 108 >> 2] | 0;
       }
       do {
        if (+HEAPF64[$retval_0_i + 48 >> 3] + 1.0e+40 > -1.0e-20) {
         do {
          if ($tobool_i_i) {
           label = 5688;
          } else {
           $ytop_i_i38 = $5 + 40 | 0;
           if (!((HEAP32[$ytop_i_i38 >> 2] | 0) == ($topY$0 | 0) & (HEAP32[$ytop_i_i38 + 4 >> 2] | 0) == ($topY$1 | 0))) {
            label = 5688;
            break;
           }
           if ((HEAP32[$5 + 112 >> 2] | 0) != 0) {
            label = 5688;
            break;
           }
           $xtop_i44 = $5 + 32 | 0;
           $xtop2_i45 = $2 + 32 | 0;
           if ((HEAP32[$xtop_i44 >> 2] | 0) == (HEAP32[$xtop2_i45 >> 2] | 0) & (HEAP32[$xtop_i44 + 4 >> 2] | 0) == (HEAP32[$xtop2_i45 + 4 >> 2] | 0)) {
            $retval_0_i50 = $5;
           } else {
            label = 5688;
           }
          }
         } while (0);
         if ((label | 0) == 5688) {
          label = 0;
          $retval_0_i50 = HEAP32[$2 + 108 >> 2] | 0;
         }
         if (+HEAPF64[$retval_0_i50 + 48 >> 3] + 1.0e+40 >= 1.0e-20) {
          break;
         }
         if ($cmp_i) {
          break L6443;
         } else {
          label = 5715;
          break L6441;
         }
        }
       } while (0);
       $18 = HEAP32[$2 + 120 >> 2] | 0;
       __ZN10ClipperLib7Clipper8DoMaximaEPNS_5TEdgeEx($this, $2, $topY$0, $topY$1);
       if (($18 | 0) == 0) {
        $19 = HEAP32[$m_ActiveEdges >> 2] | 0;
        HEAP32[$e >> 2] = $19;
        $_be = $19;
        break L6441;
       } else {
        $20 = HEAP32[$18 + 116 >> 2] | 0;
        HEAP32[$e >> 2] = $20;
        $_be = $20;
        break L6441;
       }
      }
     } while (0);
     $21 = HEAP32[$2 + 112 >> 2] | 0;
     do {
      if (($21 | 0) != 0) {
       $sub15 = +HEAPF64[$21 + 48 >> 3] + 1.0e+40;
       if (!($sub15 > -1.0e-20 & $sub15 < 1.0e-20)) {
        break;
       }
       do {
        if ((HEAP32[$2 + 100 >> 2] | 0) > -1) {
         $xtop = $2 + 32 | 0;
         $24$1 = HEAP32[$xtop + 4 >> 2] | 0;
         HEAP32[$X_i_i61 >> 2] = HEAP32[$xtop >> 2];
         HEAP32[$X_i_i61 + 4 >> 2] = $24$1;
         HEAP32[$Y_i_i62 >> 2] = $topY$0;
         HEAP32[$Y_i_i62 + 4 >> 2] = $topY$1;
         __ZN10ClipperLib7Clipper8AddOutPtEPNS_5TEdgeERKNS_8IntPointE($this, $2, $ref_tmp);
         $25 = HEAP32[$__end__i >> 2] | 0;
         $26 = HEAP32[$__begin__i >> 2] | 0;
         if (($25 | 0) != ($26 | 0)) {
          $i_0328 = 0;
          $28 = $26;
          $27 = $25;
          while (1) {
           $29 = HEAP32[$28 + ($i_0328 << 2) >> 2] | 0;
           $30 = HEAP32[$29 >> 2] | 0;
           $xbot = $30 | 0;
           $31$0 = HEAP32[$xbot >> 2] | 0;
           $31$1 = HEAP32[$xbot + 4 >> 2] | 0;
           $ybot = $30 + 8 | 0;
           $32$0 = HEAP32[$ybot >> 2] | 0;
           $32$1 = HEAP32[$ybot + 4 >> 2] | 0;
           $xtop32 = $30 + 32 | 0;
           $33$0 = HEAP32[$xtop32 >> 2] | 0;
           $33$1 = HEAP32[$xtop32 + 4 >> 2] | 0;
           $ytop34 = $30 + 40 | 0;
           $34$0 = HEAP32[$ytop34 >> 2] | 0;
           $34$1 = HEAP32[$ytop34 + 4 >> 2] | 0;
           $35 = HEAP32[$e >> 2] | 0;
           $36 = HEAP32[$35 + 112 >> 2] | 0;
           $xbot37 = $36 | 0;
           $37$0 = HEAP32[$xbot37 >> 2] | 0;
           $37$1 = HEAP32[$xbot37 + 4 >> 2] | 0;
           $ybot39 = $36 + 8 | 0;
           $38$0 = HEAP32[$ybot39 >> 2] | 0;
           $38$1 = HEAP32[$ybot39 + 4 >> 2] | 0;
           $xtop42 = $36 + 32 | 0;
           $39$0 = HEAP32[$xtop42 >> 2] | 0;
           $39$1 = HEAP32[$xtop42 + 4 >> 2] | 0;
           $ytop44 = $36 + 40 | 0;
           $40$0 = HEAP32[$ytop44 >> 2] | 0;
           $40$1 = HEAP32[$ytop44 + 4 >> 2] | 0;
           do {
            if (($32$0 | 0) == ($34$0 | 0) & ($32$1 | 0) == ($34$1 | 0)) {
             label = 5701;
            } else {
             $sub_i$0 = _i64Subtract($31$0, $31$1, $33$0, $33$1) | 0;
             $sub_i$1 = tempRet0;
             $sub5_i$0 = _i64Subtract($32$0, $32$1, $34$0, $34$1) | 0;
             $div_i$0 = ___divdi3($sub_i$0, $sub_i$1, $sub5_i$0, tempRet0) | 0;
             $div_i$1 = tempRet0;
             $$etemp$36$1 = 0;
             $cmp_i_i164 = ($div_i$1 | 0) < ($$etemp$36$1 | 0) | ($div_i$1 | 0) == ($$etemp$36$1 | 0) & $div_i$0 >>> 0 < 0 >>> 0;
             $sub_i_i$0 = _i64Subtract(0, 0, $div_i$0, $div_i$1) | 0;
             $cond_i_i$1 = $cmp_i_i164 ? tempRet0 : $div_i$1;
             $$etemp$38$1 = 0;
             if (($cond_i_i$1 | 0) > ($$etemp$38$1 | 0) | ($cond_i_i$1 | 0) == ($$etemp$38$1 | 0) & ($cmp_i_i164 ? $sub_i_i$0 : $div_i$0) >>> 0 > 1 >>> 0) {
              label = 5701;
              break;
             }
             $cmp33_i = ($32$1 | 0) < ($34$1 | 0) | ($32$1 | 0) == ($34$1 | 0) & $32$0 >>> 0 < $34$0 >>> 0;
             $_318$0 = $cmp33_i ? $32$0 : $34$0;
             $_318$1 = $cmp33_i ? $32$1 : $34$1;
             $_319$0 = $cmp33_i ? $34$0 : $32$0;
             $_319$1 = $cmp33_i ? $34$1 : $32$1;
             $cmp38_i = ($38$1 | 0) < ($40$1 | 0) | ($38$1 | 0) == ($40$1 | 0) & $38$0 >>> 0 < $40$0 >>> 0;
             $agg_tmp40160_sroa_1_8_load294315$0 = $cmp38_i ? $38$0 : $40$0;
             $agg_tmp40160_sroa_1_8_load294315$1 = $cmp38_i ? $38$1 : $40$1;
             $43$0 = $cmp38_i ? $40$0 : $38$0;
             $43$1 = $cmp38_i ? $40$1 : $38$1;
             $cmp43_i = ($_319$1 | 0) < ($43$1 | 0) | ($_319$1 | 0) == ($43$1 | 0) & $_319$0 >>> 0 < $43$0 >>> 0;
             $_319_$1 = $cmp43_i ? $_319$1 : $43$1;
             $cmp49_i = ($_318$1 | 0) > ($agg_tmp40160_sroa_1_8_load294315$1 | 0) | ($_318$1 | 0) == ($agg_tmp40160_sroa_1_8_load294315$1 | 0) & $_318$0 >>> 0 > $agg_tmp40160_sroa_1_8_load294315$0 >>> 0;
             $44$1 = $cmp49_i ? $_318$1 : $agg_tmp40160_sroa_1_8_load294315$1;
             if (($_319_$1 | 0) > ($44$1 | 0) | ($_319_$1 | 0) == ($44$1 | 0) & ($cmp43_i ? $_319$0 : $43$0) >>> 0 > ($cmp49_i ? $_318$0 : $agg_tmp40160_sroa_1_8_load294315$0) >>> 0) {
              label = 5703;
             } else {
              $48 = $27;
              $47 = $28;
             }
            }
           } while (0);
           if ((label | 0) == 5701) {
            label = 0;
            $cmp9_i = ($31$1 | 0) > ($33$1 | 0) | ($31$1 | 0) == ($33$1 | 0) & $31$0 >>> 0 > $33$0 >>> 0;
            $_$0 = $cmp9_i ? $31$0 : $33$0;
            $_$1 = $cmp9_i ? $31$1 : $33$1;
            $_317$0 = $cmp9_i ? $33$0 : $31$0;
            $_317$1 = $cmp9_i ? $33$1 : $31$1;
            $cmp13_i = ($37$1 | 0) > ($39$1 | 0) | ($37$1 | 0) == ($39$1 | 0) & $37$0 >>> 0 > $39$0 >>> 0;
            $tmp_i_i_sroa_0_0_load313$0 = $cmp13_i ? $37$0 : $39$0;
            $tmp_i_i_sroa_0_0_load313$1 = $cmp13_i ? $37$1 : $39$1;
            $41$0 = $cmp13_i ? $39$0 : $37$0;
            $41$1 = $cmp13_i ? $39$1 : $37$1;
            $cmp18_i = ($_317$1 | 0) > ($41$1 | 0) | ($_317$1 | 0) == ($41$1 | 0) & $_317$0 >>> 0 > $41$0 >>> 0;
            $_317_$1 = $cmp18_i ? $_317$1 : $41$1;
            $cmp23_i = ($_$1 | 0) < ($tmp_i_i_sroa_0_0_load313$1 | 0) | ($_$1 | 0) == ($tmp_i_i_sroa_0_0_load313$1 | 0) & $_$0 >>> 0 < $tmp_i_i_sroa_0_0_load313$0 >>> 0;
            $42$1 = $cmp23_i ? $_$1 : $tmp_i_i_sroa_0_0_load313$1;
            if (($_317_$1 | 0) < ($42$1 | 0) | ($_317_$1 | 0) == ($42$1 | 0) & ($cmp18_i ? $_317$0 : $41$0) >>> 0 < ($cmp23_i ? $_$0 : $tmp_i_i_sroa_0_0_load313$0) >>> 0) {
             label = 5703;
            } else {
             $48 = $27;
             $47 = $28;
            }
           }
           if ((label | 0) == 5703) {
            label = 0;
            __ZN10ClipperLib7Clipper7AddJoinEPNS_5TEdgeES2_ii($this, $30, $36, HEAP32[$29 + 4 >> 2] | 0, HEAP32[$35 + 100 >> 2] | 0);
            $48 = HEAP32[$__end__i >> 2] | 0;
            $47 = HEAP32[$__begin__i >> 2] | 0;
           }
           $inc = $i_0328 + 1 | 0;
           if ($inc >>> 0 < $48 - $47 >> 2 >>> 0) {
            $i_0328 = $inc;
            $28 = $47;
            $27 = $48;
           } else {
            break;
           }
          }
         }
         $49 = HEAP32[$e >> 2] | 0;
         $50 = HEAP32[$49 + 112 >> 2] | 0;
         $51 = HEAP32[$49 + 100 >> 2] | 0;
         $call_i170 = __Znwj(8) | 0;
         $52 = $call_i170;
         HEAP32[$hj_i >> 2] = $52;
         HEAP32[$call_i170 >> 2] = $50;
         HEAP32[$call_i170 + 4 >> 2] = $51;
         $54 = HEAP32[$__end__i >> 2] | 0;
         if (($54 | 0) == (HEAP32[$__first__i_i_i_i_i172 >> 2] | 0)) {
          __ZNSt3__16vectorIPN10ClipperLib11HorzJoinRecENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($m_HorizJoins_i, $hj_i);
          break;
         }
         if (($54 | 0) == 0) {
          $56 = 0;
         } else {
          HEAP32[$54 >> 2] = $52;
          $56 = HEAP32[$__end__i >> 2] | 0;
         }
         HEAP32[$__end__i >> 2] = $56 + 4;
        }
       } while (0);
       __ZN10ClipperLib7Clipper17UpdateEdgeIntoAELERPNS_5TEdgeE($this, $e);
       $57 = HEAP32[$e >> 2] | 0;
       $58 = HEAP32[$m_SortedEdges_i >> 2] | 0;
       if (($58 | 0) == 0) {
        HEAP32[$m_SortedEdges_i >> 2] = $57;
        HEAP32[$57 + 128 >> 2] = 0;
        HEAP32[$57 + 124 >> 2] = 0;
        $64 = $57;
        label = 5720;
        break L6441;
       } else {
        HEAP32[$57 + 124 >> 2] = $58;
        HEAP32[$57 + 128 >> 2] = 0;
        HEAP32[(HEAP32[$m_SortedEdges_i >> 2] | 0) + 128 >> 2] = $57;
        HEAP32[$m_SortedEdges_i >> 2] = $57;
        $64 = $57;
        label = 5720;
        break L6441;
       }
      }
     } while (0);
     if (!$cmp_i) {
      label = 5715;
      break;
     }
     $xtop_i186 = $2 + 32 | 0;
     $cond_i$1 = HEAP32[$xtop_i186 + 4 >> 2] | 0;
     $cond_i$0 = HEAP32[$xtop_i186 >> 2] | 0;
     label = 5719;
    } else {
     label = 5715;
    }
   } while (0);
   if ((label | 0) == 5715) {
    label = 0;
    $xbot_i = $2 | 0;
    $61$0 = HEAP32[$xbot_i >> 2] | 0;
    $61$1 = HEAP32[$xbot_i + 4 >> 2] | 0;
    $62 = +HEAPF64[$2 + 48 >> 3];
    $ybot_i = $2 + 8 | 0;
    $sub_i187$0 = _i64Subtract($topY$0, $topY$1, HEAP32[$ybot_i >> 2] | 0, HEAP32[$ybot_i + 4 >> 2] | 0) | 0;
    $mul_i188 = $62 * (+($sub_i187$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0);
    if ($mul_i188 < 0.0) {
     $sub_sink_i_i = $mul_i188 + -.5;
    } else {
     $sub_sink_i_i = $mul_i188 + .5;
    }
    $add_i$0 = _i64Add(~~$sub_sink_i_i >>> 0, (Math_min(+Math_floor($sub_sink_i_i / 4294967296.0), 4294967295.0) | 0) >>> 0, $61$0, $61$1) | 0;
    $cond_i$1 = tempRet0;
    $cond_i$0 = $add_i$0;
    label = 5719;
   }
   if ((label | 0) == 5719) {
    label = 0;
    $xcurr = $2 + 16 | 0;
    HEAP32[$xcurr >> 2] = $cond_i$0;
    HEAP32[$xcurr + 4 >> 2] = $cond_i$1;
    $ycurr = $2 + 24 | 0;
    HEAP32[$ycurr >> 2] = $topY$0;
    HEAP32[$ycurr + 4 >> 2] = $topY$1;
    $64 = $2;
    label = 5720;
   }
   if ((label | 0) == 5720) {
    label = 0;
    $65 = HEAP32[$64 + 116 >> 2] | 0;
    HEAP32[$e >> 2] = $65;
    $_be = $65;
   }
   if (($_be | 0) == 0) {
    $m_SortedEdges_i199_pre_phi = $m_SortedEdges_i;
    break;
   } else {
    $2 = $_be;
   }
  }
 }
 $horzEdge_03_i = HEAP32[$m_SortedEdges_i199_pre_phi >> 2] | 0;
 if (($horzEdge_03_i | 0) != 0) {
  $horzEdge_05_i = $horzEdge_03_i;
  do {
   $prevInSEL_i_i = $horzEdge_05_i + 128 | 0;
   $66 = HEAP32[$prevInSEL_i_i >> 2] | 0;
   $nextInSEL_i_i = $horzEdge_05_i + 124 | 0;
   $67 = HEAP32[$nextInSEL_i_i >> 2] | 0;
   if (($66 | 0) == 0) {
    HEAP32[$m_SortedEdges_i199_pre_phi >> 2] = $67;
   } else {
    HEAP32[$66 + 124 >> 2] = $67;
   }
   if (($67 | 0) != 0) {
    HEAP32[$67 + 128 >> 2] = $66;
   }
   HEAP32[$nextInSEL_i_i >> 2] = 0;
   HEAP32[$prevInSEL_i_i >> 2] = 0;
   __ZN10ClipperLib7Clipper17ProcessHorizontalEPNS_5TEdgeE($this, $horzEdge_05_i);
   $horzEdge_05_i = HEAP32[$m_SortedEdges_i199_pre_phi >> 2] | 0;
  } while (($horzEdge_05_i | 0) != 0);
 }
 $storemerge320 = HEAP32[$m_ActiveEdges >> 2] | 0;
 HEAP32[$e >> 2] = $storemerge320;
 if (($storemerge320 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 $X_i_i191 = $ref_tmp68 | 0;
 $Y_i_i192 = $ref_tmp68 + 8 | 0;
 $68 = $this;
 $69 = $this;
 $X_i_i = $ref_tmp130 | 0;
 $Y_i_i = $ref_tmp130 + 8 | 0;
 $__end__i_i = $this + 20 | 0;
 $__first__i_i_i_i_i = $this + 24 | 0;
 $m_Joins_i = $this + 16 | 0;
 $lo_i_i_i = $tmp_i + 8 | 0;
 $hi_i_i_i = $tmp_i | 0;
 $lo_i_i6_i = $ref_tmp_i + 8 | 0;
 $hi_i_i7_i = $ref_tmp_i | 0;
 $lo_i_i12_i = $tmp3_i + 8 | 0;
 $hi_i_i13_i = $tmp3_i | 0;
 $lo_i_i9_i = $ref_tmp5_i + 8 | 0;
 $hi_i_i10_i = $ref_tmp5_i | 0;
 $hi_i_i = $tmp1_i | 0;
 $hi2_i_i = $ref_tmp2_i | 0;
 $lo_i_i = $tmp1_i + 8 | 0;
 $lo3_i_i = $ref_tmp2_i + 8 | 0;
 $X_i_i107 = $ref_tmp98 | 0;
 $Y_i_i108 = $ref_tmp98 + 8 | 0;
 $lo_i_i_i116 = $tmp_i109 + 8 | 0;
 $hi_i_i_i117 = $tmp_i109 | 0;
 $lo_i_i6_i120 = $ref_tmp_i110 + 8 | 0;
 $hi_i_i7_i121 = $ref_tmp_i110 | 0;
 $lo_i_i12_i124 = $tmp3_i113 + 8 | 0;
 $hi_i_i13_i125 = $tmp3_i113 | 0;
 $lo_i_i9_i128 = $ref_tmp5_i114 + 8 | 0;
 $hi_i_i10_i129 = $ref_tmp5_i114 | 0;
 $hi_i_i131 = $tmp1_i111 | 0;
 $hi2_i_i132 = $ref_tmp2_i112 | 0;
 $lo_i_i135 = $tmp1_i111 + 8 | 0;
 $lo3_i_i136 = $ref_tmp2_i112 + 8 | 0;
 $84 = $storemerge320;
 do {
  $ytop_i193 = $84 + 40 | 0;
  L6524 : do {
   if ((HEAP32[$ytop_i193 >> 2] | 0) == ($topY$0 | 0) & (HEAP32[$ytop_i193 + 4 >> 2] | 0) == ($topY$1 | 0)) {
    if ((HEAP32[$84 + 112 >> 2] | 0) == 0) {
     break;
    }
    if ((HEAP32[$84 + 100 >> 2] | 0) > -1) {
     $xtop69 = $84 + 32 | 0;
     $88$1 = HEAP32[$xtop69 + 4 >> 2] | 0;
     HEAP32[$X_i_i191 >> 2] = HEAP32[$xtop69 >> 2];
     HEAP32[$X_i_i191 + 4 >> 2] = $88$1;
     HEAP32[$Y_i_i192 >> 2] = $topY$0;
     HEAP32[$Y_i_i192 + 4 >> 2] = $topY$1;
     __ZN10ClipperLib7Clipper8AddOutPtEPNS_5TEdgeERKNS_8IntPointE($this, $84, $ref_tmp68);
    }
    __ZN10ClipperLib7Clipper17UpdateEdgeIntoAELERPNS_5TEdgeE($this, $e);
    $89 = HEAP32[$e >> 2] | 0;
    $90 = HEAP32[$89 + 120 >> 2] | 0;
    $91 = HEAP32[$89 + 116 >> 2] | 0;
    do {
     if (($90 | 0) != 0) {
      $xcurr77 = $90 + 16 | 0;
      $xbot78 = $89 | 0;
      if (!((HEAP32[$xcurr77 >> 2] | 0) == (HEAP32[$xbot78 >> 2] | 0) & (HEAP32[$xcurr77 + 4 >> 2] | 0) == (HEAP32[$xbot78 + 4 >> 2] | 0))) {
       break;
      }
      $ycurr81 = $90 + 24 | 0;
      $94$0 = HEAP32[$ycurr81 >> 2] | 0;
      $94$1 = HEAP32[$ycurr81 + 4 >> 2] | 0;
      $ybot82 = $89 + 8 | 0;
      if (!(($94$0 | 0) == (HEAP32[$ybot82 >> 2] | 0) & ($94$1 | 0) == (HEAP32[$ybot82 + 4 >> 2] | 0))) {
       break;
      }
      if ((HEAP32[$89 + 100 >> 2] | 0) <= -1) {
       break;
      }
      $outIdx88 = $90 + 100 | 0;
      if ((HEAP32[$outIdx88 >> 2] | 0) <= -1) {
       break;
      }
      $ytop92 = $90 + 40 | 0;
      $98$1 = HEAP32[$ytop92 + 4 >> 2] | 0;
      if (!(($94$1 | 0) > ($98$1 | 0) | ($94$1 | 0) == ($98$1 | 0) & $94$0 >>> 0 > (HEAP32[$ytop92 >> 2] | 0) >>> 0)) {
       break;
      }
      $deltaY_i115 = $89 + 64 | 0;
      $103$0 = HEAP32[$deltaY_i115 >> 2] | 0;
      $103$1 = HEAP32[$deltaY_i115 + 4 >> 2] | 0;
      if ((HEAP8[$69 + ((HEAP32[(HEAP32[$68 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) == 0) {
       $deltaX8_i139 = $90 + 56 | 0;
       $mul_i140$0 = ___muldi3(HEAP32[$deltaX8_i139 >> 2] | 0, HEAP32[$deltaX8_i139 + 4 >> 2] | 0, $103$0, $103$1) | 0;
       $mul_i140$1 = tempRet0;
       $deltaX9_i141 = $89 + 56 | 0;
       $deltaY10_i142 = $90 + 64 | 0;
       $mul11_i143$0 = ___muldi3(HEAP32[$deltaY10_i142 >> 2] | 0, HEAP32[$deltaY10_i142 + 4 >> 2] | 0, HEAP32[$deltaX9_i141 >> 2] | 0, HEAP32[$deltaX9_i141 + 4 >> 2] | 0) | 0;
       $retval_0_i146 = ($mul_i140$0 | 0) == ($mul11_i143$0 | 0) & ($mul_i140$1 | 0) == (tempRet0 | 0);
      } else {
       HEAP32[$lo_i_i_i116 >> 2] = $103$0;
       HEAP32[$lo_i_i_i116 + 4 >> 2] = $103$1;
       HEAP32[$hi_i_i_i117 >> 2] = $103$1 >> 31 | (($103$1 | 0) < 0 ? -1 : 0) << 1;
       HEAP32[$hi_i_i_i117 + 4 >> 2] = (($103$1 | 0) < 0 ? -1 : 0) >> 31 | (($103$1 | 0) < 0 ? -1 : 0) << 1;
       $deltaX_i119 = $90 + 56 | 0;
       $104$1 = HEAP32[$deltaX_i119 + 4 >> 2] | 0;
       HEAP32[$lo_i_i6_i120 >> 2] = HEAP32[$deltaX_i119 >> 2];
       HEAP32[$lo_i_i6_i120 + 4 >> 2] = $104$1;
       HEAP32[$hi_i_i7_i121 >> 2] = $104$1 >> 31 | (($104$1 | 0) < 0 ? -1 : 0) << 1;
       HEAP32[$hi_i_i7_i121 + 4 >> 2] = (($104$1 | 0) < 0 ? -1 : 0) >> 31 | (($104$1 | 0) < 0 ? -1 : 0) << 1;
       __ZNK10ClipperLib6Int128mlERKS0_($tmp1_i111, $tmp_i109, $ref_tmp_i110);
       $deltaX4_i123 = $89 + 56 | 0;
       $105$1 = HEAP32[$deltaX4_i123 + 4 >> 2] | 0;
       HEAP32[$lo_i_i12_i124 >> 2] = HEAP32[$deltaX4_i123 >> 2];
       HEAP32[$lo_i_i12_i124 + 4 >> 2] = $105$1;
       HEAP32[$hi_i_i13_i125 >> 2] = $105$1 >> 31 | (($105$1 | 0) < 0 ? -1 : 0) << 1;
       HEAP32[$hi_i_i13_i125 + 4 >> 2] = (($105$1 | 0) < 0 ? -1 : 0) >> 31 | (($105$1 | 0) < 0 ? -1 : 0) << 1;
       $deltaY6_i127 = $90 + 64 | 0;
       $106$1 = HEAP32[$deltaY6_i127 + 4 >> 2] | 0;
       HEAP32[$lo_i_i9_i128 >> 2] = HEAP32[$deltaY6_i127 >> 2];
       HEAP32[$lo_i_i9_i128 + 4 >> 2] = $106$1;
       HEAP32[$hi_i_i10_i129 >> 2] = $106$1 >> 31 | (($106$1 | 0) < 0 ? -1 : 0) << 1;
       HEAP32[$hi_i_i10_i129 + 4 >> 2] = (($106$1 | 0) < 0 ? -1 : 0) >> 31 | (($106$1 | 0) < 0 ? -1 : 0) << 1;
       __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp2_i112, $tmp3_i113, $ref_tmp5_i114);
       if (!((HEAP32[$hi_i_i131 >> 2] | 0) == (HEAP32[$hi2_i_i132 >> 2] | 0) & (HEAP32[$hi_i_i131 + 4 >> 2] | 0) == (HEAP32[$hi2_i_i132 + 4 >> 2] | 0))) {
        break;
       }
       $retval_0_i146 = (HEAP32[$lo_i_i135 >> 2] | 0) == (HEAP32[$lo3_i_i136 >> 2] | 0) & (HEAP32[$lo_i_i135 + 4 >> 2] | 0) == (HEAP32[$lo3_i_i136 + 4 >> 2] | 0);
      }
      if (!$retval_0_i146) {
       break;
      }
      $114 = HEAP32[$e >> 2] | 0;
      $xbot99 = $114 | 0;
      $115$1 = HEAP32[$xbot99 + 4 >> 2] | 0;
      $ybot100 = $114 + 8 | 0;
      $116$0 = HEAP32[$ybot100 >> 2] | 0;
      $116$1 = HEAP32[$ybot100 + 4 >> 2] | 0;
      HEAP32[$X_i_i107 >> 2] = HEAP32[$xbot99 >> 2];
      HEAP32[$X_i_i107 + 4 >> 2] = $115$1;
      HEAP32[$Y_i_i108 >> 2] = $116$0;
      HEAP32[$Y_i_i108 + 4 >> 2] = $116$1;
      __ZN10ClipperLib7Clipper8AddOutPtEPNS_5TEdgeERKNS_8IntPointE($this, $90, $ref_tmp98);
      $117 = HEAP32[$e >> 2] | 0;
      $call_i66 = __Znwj(80) | 0;
      $118 = $call_i66;
      $X_i_i3_i_i_i67 = $call_i66 + 40 | 0;
      _memset($call_i66 | 0, 0, 32);
      _memset($X_i_i3_i_i_i67 | 0, 0, 32);
      HEAP32[$jr_i65 >> 2] = $118;
      HEAP32[$call_i66 + 32 >> 2] = HEAP32[$117 + 100 >> 2];
      $xcurr_i71 = $117 + 16 | 0;
      $121$1 = HEAP32[$xcurr_i71 + 4 >> 2] | 0;
      $ycurr_i72 = $117 + 24 | 0;
      $122$0 = HEAP32[$ycurr_i72 >> 2] | 0;
      $122$1 = HEAP32[$ycurr_i72 + 4 >> 2] | 0;
      $ref_tmp_sroa_0_0__idx_i73 = $call_i66;
      HEAP32[$ref_tmp_sroa_0_0__idx_i73 >> 2] = HEAP32[$xcurr_i71 >> 2];
      HEAP32[$ref_tmp_sroa_0_0__idx_i73 + 4 >> 2] = $121$1;
      $123 = $call_i66 + 8 | 0;
      HEAP32[$123 >> 2] = $122$0;
      HEAP32[$123 + 4 >> 2] = $122$1;
      $xtop_i75 = $117 + 32 | 0;
      $124$1 = HEAP32[$xtop_i75 + 4 >> 2] | 0;
      $ytop_i76 = $117 + 40 | 0;
      $125$0 = HEAP32[$ytop_i76 >> 2] | 0;
      $125$1 = HEAP32[$ytop_i76 + 4 >> 2] | 0;
      $126 = $call_i66 + 16 | 0;
      HEAP32[$126 >> 2] = HEAP32[$xtop_i75 >> 2];
      HEAP32[$126 + 4 >> 2] = $124$1;
      $127 = $call_i66 + 24 | 0;
      HEAP32[$127 >> 2] = $125$0;
      HEAP32[$127 + 4 >> 2] = $125$1;
      HEAP32[$call_i66 + 72 >> 2] = HEAP32[$outIdx88 >> 2];
      $130$1 = HEAP32[$xcurr77 + 4 >> 2] | 0;
      $131$0 = HEAP32[$ycurr81 >> 2] | 0;
      $131$1 = HEAP32[$ycurr81 + 4 >> 2] | 0;
      $132 = $X_i_i3_i_i_i67;
      HEAP32[$132 >> 2] = HEAP32[$xcurr77 >> 2];
      HEAP32[$132 + 4 >> 2] = $130$1;
      $133 = $call_i66 + 48 | 0;
      HEAP32[$133 >> 2] = $131$0;
      HEAP32[$133 + 4 >> 2] = $131$1;
      $xtop14_i85 = $90 + 32 | 0;
      $134$1 = HEAP32[$xtop14_i85 + 4 >> 2] | 0;
      $135$0 = HEAP32[$ytop92 >> 2] | 0;
      $135$1 = HEAP32[$ytop92 + 4 >> 2] | 0;
      $136 = $call_i66 + 56 | 0;
      HEAP32[$136 >> 2] = HEAP32[$xtop14_i85 >> 2];
      HEAP32[$136 + 4 >> 2] = $134$1;
      $137 = $call_i66 + 64 | 0;
      HEAP32[$137 >> 2] = $135$0;
      HEAP32[$137 + 4 >> 2] = $135$1;
      $138 = HEAP32[$__end__i_i >> 2] | 0;
      if (($138 | 0) == (HEAP32[$__first__i_i_i_i_i >> 2] | 0)) {
       __ZNSt3__16vectorIPN10ClipperLib7JoinRecENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($m_Joins_i, $jr_i65);
       break L6524;
      }
      if (($138 | 0) == 0) {
       $140 = 0;
      } else {
       HEAP32[$138 >> 2] = $118;
       $140 = HEAP32[$__end__i_i >> 2] | 0;
      }
      HEAP32[$__end__i_i >> 2] = $140 + 4;
      break L6524;
     }
    } while (0);
    if (($91 | 0) == 0) {
     break;
    }
    $xcurr104 = $91 + 16 | 0;
    $142 = HEAP32[$e >> 2] | 0;
    $xbot105 = $142 | 0;
    if (!((HEAP32[$xcurr104 >> 2] | 0) == (HEAP32[$xbot105 >> 2] | 0) & (HEAP32[$xcurr104 + 4 >> 2] | 0) == (HEAP32[$xbot105 + 4 >> 2] | 0))) {
     break;
    }
    $ycurr108 = $91 + 24 | 0;
    $144$0 = HEAP32[$ycurr108 >> 2] | 0;
    $144$1 = HEAP32[$ycurr108 + 4 >> 2] | 0;
    $ybot109 = $142 + 8 | 0;
    if (!(($144$0 | 0) == (HEAP32[$ybot109 >> 2] | 0) & ($144$1 | 0) == (HEAP32[$ybot109 + 4 >> 2] | 0))) {
     break;
    }
    if ((HEAP32[$142 + 100 >> 2] | 0) <= -1) {
     break;
    }
    $outIdx115 = $91 + 100 | 0;
    if ((HEAP32[$outIdx115 >> 2] | 0) <= -1) {
     break;
    }
    $ytop119 = $91 + 40 | 0;
    $148$1 = HEAP32[$ytop119 + 4 >> 2] | 0;
    if (!(($144$1 | 0) > ($148$1 | 0) | ($144$1 | 0) == ($148$1 | 0) & $144$0 >>> 0 > (HEAP32[$ytop119 >> 2] | 0) >>> 0)) {
     break;
    }
    $deltaY_i = $142 + 64 | 0;
    $153$0 = HEAP32[$deltaY_i >> 2] | 0;
    $153$1 = HEAP32[$deltaY_i + 4 >> 2] | 0;
    if ((HEAP8[$69 + ((HEAP32[(HEAP32[$68 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) == 0) {
     $deltaX8_i = $91 + 56 | 0;
     $mul_i$0 = ___muldi3(HEAP32[$deltaX8_i >> 2] | 0, HEAP32[$deltaX8_i + 4 >> 2] | 0, $153$0, $153$1) | 0;
     $mul_i$1 = tempRet0;
     $deltaX9_i = $142 + 56 | 0;
     $deltaY10_i = $91 + 64 | 0;
     $mul11_i$0 = ___muldi3(HEAP32[$deltaY10_i >> 2] | 0, HEAP32[$deltaY10_i + 4 >> 2] | 0, HEAP32[$deltaX9_i >> 2] | 0, HEAP32[$deltaX9_i + 4 >> 2] | 0) | 0;
     $retval_0_i60 = ($mul_i$0 | 0) == ($mul11_i$0 | 0) & ($mul_i$1 | 0) == (tempRet0 | 0);
    } else {
     HEAP32[$lo_i_i_i >> 2] = $153$0;
     HEAP32[$lo_i_i_i + 4 >> 2] = $153$1;
     HEAP32[$hi_i_i_i >> 2] = $153$1 >> 31 | (($153$1 | 0) < 0 ? -1 : 0) << 1;
     HEAP32[$hi_i_i_i + 4 >> 2] = (($153$1 | 0) < 0 ? -1 : 0) >> 31 | (($153$1 | 0) < 0 ? -1 : 0) << 1;
     $deltaX_i = $91 + 56 | 0;
     $154$1 = HEAP32[$deltaX_i + 4 >> 2] | 0;
     HEAP32[$lo_i_i6_i >> 2] = HEAP32[$deltaX_i >> 2];
     HEAP32[$lo_i_i6_i + 4 >> 2] = $154$1;
     HEAP32[$hi_i_i7_i >> 2] = $154$1 >> 31 | (($154$1 | 0) < 0 ? -1 : 0) << 1;
     HEAP32[$hi_i_i7_i + 4 >> 2] = (($154$1 | 0) < 0 ? -1 : 0) >> 31 | (($154$1 | 0) < 0 ? -1 : 0) << 1;
     __ZNK10ClipperLib6Int128mlERKS0_($tmp1_i, $tmp_i, $ref_tmp_i);
     $deltaX4_i = $142 + 56 | 0;
     $155$1 = HEAP32[$deltaX4_i + 4 >> 2] | 0;
     HEAP32[$lo_i_i12_i >> 2] = HEAP32[$deltaX4_i >> 2];
     HEAP32[$lo_i_i12_i + 4 >> 2] = $155$1;
     HEAP32[$hi_i_i13_i >> 2] = $155$1 >> 31 | (($155$1 | 0) < 0 ? -1 : 0) << 1;
     HEAP32[$hi_i_i13_i + 4 >> 2] = (($155$1 | 0) < 0 ? -1 : 0) >> 31 | (($155$1 | 0) < 0 ? -1 : 0) << 1;
     $deltaY6_i = $91 + 64 | 0;
     $156$1 = HEAP32[$deltaY6_i + 4 >> 2] | 0;
     HEAP32[$lo_i_i9_i >> 2] = HEAP32[$deltaY6_i >> 2];
     HEAP32[$lo_i_i9_i + 4 >> 2] = $156$1;
     HEAP32[$hi_i_i10_i >> 2] = $156$1 >> 31 | (($156$1 | 0) < 0 ? -1 : 0) << 1;
     HEAP32[$hi_i_i10_i + 4 >> 2] = (($156$1 | 0) < 0 ? -1 : 0) >> 31 | (($156$1 | 0) < 0 ? -1 : 0) << 1;
     __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp2_i, $tmp3_i, $ref_tmp5_i);
     if (!((HEAP32[$hi_i_i >> 2] | 0) == (HEAP32[$hi2_i_i >> 2] | 0) & (HEAP32[$hi_i_i + 4 >> 2] | 0) == (HEAP32[$hi2_i_i + 4 >> 2] | 0))) {
      break;
     }
     $retval_0_i60 = (HEAP32[$lo_i_i >> 2] | 0) == (HEAP32[$lo3_i_i >> 2] | 0) & (HEAP32[$lo_i_i + 4 >> 2] | 0) == (HEAP32[$lo3_i_i + 4 >> 2] | 0);
    }
    if (!$retval_0_i60) {
     break;
    }
    $164 = HEAP32[$e >> 2] | 0;
    $xbot131 = $164 | 0;
    $165$1 = HEAP32[$xbot131 + 4 >> 2] | 0;
    $ybot132 = $164 + 8 | 0;
    $166$0 = HEAP32[$ybot132 >> 2] | 0;
    $166$1 = HEAP32[$ybot132 + 4 >> 2] | 0;
    HEAP32[$X_i_i >> 2] = HEAP32[$xbot131 >> 2];
    HEAP32[$X_i_i + 4 >> 2] = $165$1;
    HEAP32[$Y_i_i >> 2] = $166$0;
    HEAP32[$Y_i_i + 4 >> 2] = $166$1;
    __ZN10ClipperLib7Clipper8AddOutPtEPNS_5TEdgeERKNS_8IntPointE($this, $91, $ref_tmp130);
    $167 = HEAP32[$e >> 2] | 0;
    $call_i = __Znwj(80) | 0;
    $168 = $call_i;
    $X_i_i3_i_i_i = $call_i + 40 | 0;
    _memset($call_i | 0, 0, 32);
    _memset($X_i_i3_i_i_i | 0, 0, 32);
    HEAP32[$jr_i >> 2] = $168;
    HEAP32[$call_i + 32 >> 2] = HEAP32[$167 + 100 >> 2];
    $xcurr_i = $167 + 16 | 0;
    $171$1 = HEAP32[$xcurr_i + 4 >> 2] | 0;
    $ycurr_i = $167 + 24 | 0;
    $172$0 = HEAP32[$ycurr_i >> 2] | 0;
    $172$1 = HEAP32[$ycurr_i + 4 >> 2] | 0;
    $ref_tmp_sroa_0_0__idx_i = $call_i;
    HEAP32[$ref_tmp_sroa_0_0__idx_i >> 2] = HEAP32[$xcurr_i >> 2];
    HEAP32[$ref_tmp_sroa_0_0__idx_i + 4 >> 2] = $171$1;
    $173 = $call_i + 8 | 0;
    HEAP32[$173 >> 2] = $172$0;
    HEAP32[$173 + 4 >> 2] = $172$1;
    $xtop_i = $167 + 32 | 0;
    $174$1 = HEAP32[$xtop_i + 4 >> 2] | 0;
    $ytop_i30 = $167 + 40 | 0;
    $175$0 = HEAP32[$ytop_i30 >> 2] | 0;
    $175$1 = HEAP32[$ytop_i30 + 4 >> 2] | 0;
    $176 = $call_i + 16 | 0;
    HEAP32[$176 >> 2] = HEAP32[$xtop_i >> 2];
    HEAP32[$176 + 4 >> 2] = $174$1;
    $177 = $call_i + 24 | 0;
    HEAP32[$177 >> 2] = $175$0;
    HEAP32[$177 + 4 >> 2] = $175$1;
    HEAP32[$call_i + 72 >> 2] = HEAP32[$outIdx115 >> 2];
    $180$1 = HEAP32[$xcurr104 + 4 >> 2] | 0;
    $181$0 = HEAP32[$ycurr108 >> 2] | 0;
    $181$1 = HEAP32[$ycurr108 + 4 >> 2] | 0;
    $182 = $X_i_i3_i_i_i;
    HEAP32[$182 >> 2] = HEAP32[$xcurr104 >> 2];
    HEAP32[$182 + 4 >> 2] = $180$1;
    $183 = $call_i + 48 | 0;
    HEAP32[$183 >> 2] = $181$0;
    HEAP32[$183 + 4 >> 2] = $181$1;
    $xtop14_i = $91 + 32 | 0;
    $184$1 = HEAP32[$xtop14_i + 4 >> 2] | 0;
    $185$0 = HEAP32[$ytop119 >> 2] | 0;
    $185$1 = HEAP32[$ytop119 + 4 >> 2] | 0;
    $186 = $call_i + 56 | 0;
    HEAP32[$186 >> 2] = HEAP32[$xtop14_i >> 2];
    HEAP32[$186 + 4 >> 2] = $184$1;
    $187 = $call_i + 64 | 0;
    HEAP32[$187 >> 2] = $185$0;
    HEAP32[$187 + 4 >> 2] = $185$1;
    $188 = HEAP32[$__end__i_i >> 2] | 0;
    if (($188 | 0) == (HEAP32[$__first__i_i_i_i_i >> 2] | 0)) {
     __ZNSt3__16vectorIPN10ClipperLib7JoinRecENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($m_Joins_i, $jr_i);
     break;
    }
    if (($188 | 0) == 0) {
     $190 = 0;
    } else {
     HEAP32[$188 >> 2] = $168;
     $190 = HEAP32[$__end__i_i >> 2] | 0;
    }
    HEAP32[$__end__i_i >> 2] = $190 + 4;
   }
  } while (0);
  $84 = HEAP32[(HEAP32[$e >> 2] | 0) + 116 >> 2] | 0;
  HEAP32[$e >> 2] = $84;
 } while (($84 | 0) != 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZN10ClipperLib7Clipper15FixupOutPolygonERNS_6OutRecE($this, $outRec) {
 $this = $this | 0;
 $outRec = $outRec | 0;
 var $tmp_i = 0, $ref_tmp_i = 0, $tmp4_i = 0, $ref_tmp5_i = 0, $tmp6_i = 0, $ref_tmp10_i = 0, $bottomPt = 0, $0 = 0, $pts = 0, $prev52 = 0, $1 = 0, $2 = 0, $3 = 0, $lo_i_i_i = 0, $hi_i_i_i = 0, $lo_i_i1_i = 0, $hi_i_i2_i = 0, $lo_i_i7_i = 0, $hi_i_i8_i = 0, $lo_i_i4_i = 0, $hi_i_i5_i = 0, $hi_i_i = 0, $hi2_i_i = 0, $lo_i_i = 0, $lo3_i_i = 0, $10 = 0, $prev55 = 0, $lastOK_054 = 0, $11 = 0, $next = 0, $12 = 0, $13 = 0, $_lcssa = 0, $14 = 0, $15 = 0, $X_i = 0, $17$0 = 0, $17$1 = 0, $X1_i = 0, $18$0 = 0, $18$1 = 0, $Y_i = 0, $19$0 = 0, $19$1 = 0, $Y2_i = 0, $20$0 = 0, $20$1 = 0, $agg_tmp_sroa_0_0__idx = 0, $agg_tmp_sroa_0_0_copyload$0 = 0, $agg_tmp_sroa_0_0_copyload$1 = 0, $agg_tmp_sroa_1_8__idx42 = 0, $tobool = 0, $sub_i$0 = 0, $sub_i$1 = 0, $sub3_i$0 = 0, $sub3_i$1 = 0, $sub9_i$0 = 0, $sub9_i$1 = 0, $sub13_i$0 = 0, $sub13_i$1 = 0, $sub19_i$0 = 0, $mul_i$0 = 0, $mul_i$1 = 0, $sub22_i$0 = 0, $sub22_i$1 = 0, $sub25_i$0 = 0, $mul26_i$0 = 0, $retval_0_i = 0, $34 = 0, $_be = 0, $lastOK_0_be = 0, $prev = 0, $35 = 0, $call43 = 0, $40 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $tmp_i = __stackBase__ | 0;
 $ref_tmp_i = __stackBase__ + 16 | 0;
 $tmp4_i = __stackBase__ + 32 | 0;
 $ref_tmp5_i = __stackBase__ + 48 | 0;
 $tmp6_i = __stackBase__ + 64 | 0;
 $ref_tmp10_i = __stackBase__ + 80 | 0;
 $bottomPt = $outRec + 20 | 0;
 $0 = HEAP32[$bottomPt >> 2] | 0;
 $pts = $outRec + 16 | 0;
 HEAP32[$pts >> 2] = $0;
 $prev52 = $0 + 28 | 0;
 $1 = HEAP32[$prev52 >> 2] | 0;
 L6571 : do {
  if (($1 | 0) == ($0 | 0)) {
   $_lcssa = $0;
   $13 = $0;
  } else {
   $2 = $this;
   $3 = $this;
   $lo_i_i_i = $tmp_i + 8 | 0;
   $hi_i_i_i = $tmp_i | 0;
   $lo_i_i1_i = $ref_tmp_i + 8 | 0;
   $hi_i_i2_i = $ref_tmp_i | 0;
   $lo_i_i7_i = $tmp6_i + 8 | 0;
   $hi_i_i8_i = $tmp6_i | 0;
   $lo_i_i4_i = $ref_tmp10_i + 8 | 0;
   $hi_i_i5_i = $ref_tmp10_i | 0;
   $hi_i_i = $tmp4_i | 0;
   $hi2_i_i = $ref_tmp5_i | 0;
   $lo_i_i = $tmp4_i + 8 | 0;
   $lo3_i_i = $ref_tmp5_i + 8 | 0;
   $11 = $0;
   $lastOK_054 = 0;
   $prev55 = $prev52;
   $10 = $1;
   L6573 : while (1) {
    $next = $11 + 24 | 0;
    $12 = HEAP32[$next >> 2] | 0;
    if (($10 | 0) == ($12 | 0)) {
     $_lcssa = $11;
     $13 = $10;
     break L6571;
    }
    $X_i = $11 + 8 | 0;
    $17$0 = HEAP32[$X_i >> 2] | 0;
    $17$1 = HEAP32[$X_i + 4 >> 2] | 0;
    $X1_i = $12 + 8 | 0;
    $18$0 = HEAP32[$X1_i >> 2] | 0;
    $18$1 = HEAP32[$X1_i + 4 >> 2] | 0;
    $Y_i = $11 + 16 | 0;
    $19$0 = HEAP32[$Y_i >> 2] | 0;
    $19$1 = HEAP32[$Y_i + 4 >> 2] | 0;
    $Y2_i = $12 + 16 | 0;
    $20$0 = HEAP32[$Y2_i >> 2] | 0;
    $20$1 = HEAP32[$Y2_i + 4 >> 2] | 0;
    do {
     if (($17$0 | 0) == ($18$0 | 0) & ($17$1 | 0) == ($18$1 | 0) & (($19$0 | 0) == ($20$0 | 0) & ($19$1 | 0) == ($20$1 | 0))) {
      label = 5783;
     } else {
      $agg_tmp_sroa_0_0__idx = $10 + 8 | 0;
      $agg_tmp_sroa_0_0_copyload$0 = HEAP32[$agg_tmp_sroa_0_0__idx >> 2] | 0;
      $agg_tmp_sroa_0_0_copyload$1 = HEAP32[$agg_tmp_sroa_0_0__idx + 4 >> 2] | 0;
      $agg_tmp_sroa_1_8__idx42 = $10 + 16 | 0;
      $tobool = (HEAP8[$3 + ((HEAP32[(HEAP32[$2 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) == 0;
      $sub_i$0 = _i64Subtract(HEAP32[$agg_tmp_sroa_1_8__idx42 >> 2] | 0, HEAP32[$agg_tmp_sroa_1_8__idx42 + 4 >> 2] | 0, $19$0, $19$1) | 0;
      $sub_i$1 = tempRet0;
      do {
       if ($tobool) {
        $sub19_i$0 = _i64Subtract($17$0, $17$1, $18$0, $18$1) | 0;
        $mul_i$0 = ___muldi3($sub19_i$0, tempRet0, $sub_i$0, $sub_i$1) | 0;
        $mul_i$1 = tempRet0;
        $sub22_i$0 = _i64Subtract($agg_tmp_sroa_0_0_copyload$0, $agg_tmp_sroa_0_0_copyload$1, $17$0, $17$1) | 0;
        $sub22_i$1 = tempRet0;
        $sub25_i$0 = _i64Subtract($19$0, $19$1, $20$0, $20$1) | 0;
        $mul26_i$0 = ___muldi3($sub25_i$0, tempRet0, $sub22_i$0, $sub22_i$1) | 0;
        $retval_0_i = ($mul_i$0 | 0) == ($mul26_i$0 | 0) & ($mul_i$1 | 0) == (tempRet0 | 0);
        label = 5782;
       } else {
        HEAP32[$lo_i_i_i >> 2] = $sub_i$0;
        HEAP32[$lo_i_i_i + 4 >> 2] = $sub_i$1;
        HEAP32[$hi_i_i_i >> 2] = $sub_i$1 >> 31 | (($sub_i$1 | 0) < 0 ? -1 : 0) << 1;
        HEAP32[$hi_i_i_i + 4 >> 2] = (($sub_i$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub_i$1 | 0) < 0 ? -1 : 0) << 1;
        $sub3_i$0 = _i64Subtract($17$0, $17$1, $18$0, $18$1) | 0;
        $sub3_i$1 = tempRet0;
        HEAP32[$lo_i_i1_i >> 2] = $sub3_i$0;
        HEAP32[$lo_i_i1_i + 4 >> 2] = $sub3_i$1;
        HEAP32[$hi_i_i2_i >> 2] = $sub3_i$1 >> 31 | (($sub3_i$1 | 0) < 0 ? -1 : 0) << 1;
        HEAP32[$hi_i_i2_i + 4 >> 2] = (($sub3_i$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub3_i$1 | 0) < 0 ? -1 : 0) << 1;
        __ZNK10ClipperLib6Int128mlERKS0_($tmp4_i, $tmp_i, $ref_tmp_i);
        $sub9_i$0 = _i64Subtract($agg_tmp_sroa_0_0_copyload$0, $agg_tmp_sroa_0_0_copyload$1, $17$0, $17$1) | 0;
        $sub9_i$1 = tempRet0;
        HEAP32[$lo_i_i7_i >> 2] = $sub9_i$0;
        HEAP32[$lo_i_i7_i + 4 >> 2] = $sub9_i$1;
        HEAP32[$hi_i_i8_i >> 2] = $sub9_i$1 >> 31 | (($sub9_i$1 | 0) < 0 ? -1 : 0) << 1;
        HEAP32[$hi_i_i8_i + 4 >> 2] = (($sub9_i$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub9_i$1 | 0) < 0 ? -1 : 0) << 1;
        $sub13_i$0 = _i64Subtract($19$0, $19$1, $20$0, $20$1) | 0;
        $sub13_i$1 = tempRet0;
        HEAP32[$lo_i_i4_i >> 2] = $sub13_i$0;
        HEAP32[$lo_i_i4_i + 4 >> 2] = $sub13_i$1;
        HEAP32[$hi_i_i5_i >> 2] = $sub13_i$1 >> 31 | (($sub13_i$1 | 0) < 0 ? -1 : 0) << 1;
        HEAP32[$hi_i_i5_i + 4 >> 2] = (($sub13_i$1 | 0) < 0 ? -1 : 0) >> 31 | (($sub13_i$1 | 0) < 0 ? -1 : 0) << 1;
        __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp5_i, $tmp6_i, $ref_tmp10_i);
        if (!((HEAP32[$hi_i_i >> 2] | 0) == (HEAP32[$hi2_i_i >> 2] | 0) & (HEAP32[$hi_i_i + 4 >> 2] | 0) == (HEAP32[$hi2_i_i + 4 >> 2] | 0))) {
         break;
        }
        $retval_0_i = (HEAP32[$lo_i_i >> 2] | 0) == (HEAP32[$lo3_i_i >> 2] | 0) & (HEAP32[$lo_i_i + 4 >> 2] | 0) == (HEAP32[$lo3_i_i + 4 >> 2] | 0);
        label = 5782;
       }
      } while (0);
      if ((label | 0) == 5782) {
       label = 0;
       if ($retval_0_i) {
        label = 5783;
        break;
       }
      }
      if (($11 | 0) == ($lastOK_054 | 0)) {
       break L6573;
      }
      $lastOK_0_be = ($lastOK_054 | 0) == 0 ? $11 : $lastOK_054;
      $_be = HEAP32[$next >> 2] | 0;
     }
    } while (0);
    do {
     if ((label | 0) == 5783) {
      label = 0;
      if (($11 | 0) == (HEAP32[$bottomPt >> 2] | 0)) {
       HEAP32[$bottomPt >> 2] = 0;
      }
      HEAP32[(HEAP32[$prev55 >> 2] | 0) + 24 >> 2] = HEAP32[$next >> 2];
      HEAP32[(HEAP32[$next >> 2] | 0) + 28 >> 2] = HEAP32[$prev55 >> 2];
      $34 = HEAP32[$prev55 >> 2] | 0;
      if (($11 | 0) == 0) {
       $lastOK_0_be = 0;
       $_be = $34;
       break;
      }
      __ZdlPv($11);
      $lastOK_0_be = 0;
      $_be = $34;
     }
    } while (0);
    $prev = $_be + 28 | 0;
    $35 = HEAP32[$prev >> 2] | 0;
    if (($35 | 0) == ($_be | 0)) {
     $_lcssa = $_be;
     $13 = $_be;
     break L6571;
    } else {
     $11 = $_be;
     $lastOK_054 = $lastOK_0_be;
     $prev55 = $prev;
     $10 = $35;
    }
   }
   if ((HEAP32[$bottomPt >> 2] | 0) != 0) {
    STACKTOP = __stackBase__;
    return;
   }
   $call43 = __ZN10ClipperLib11GetBottomPtEPNS_5OutPtE($lastOK_054) | 0;
   HEAP32[$bottomPt >> 2] = $call43;
   HEAP32[$call43 >> 2] = HEAP32[$outRec >> 2];
   $40 = HEAP32[$bottomPt >> 2] | 0;
   HEAP32[$pts >> 2] = $40;
   HEAP32[$outRec + 24 >> 2] = $40;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 if (($_lcssa | 0) != 0) {
  HEAP32[$13 + 24 >> 2] = 0;
  $14 = $_lcssa;
  while (1) {
   $15 = HEAP32[$14 + 24 >> 2] | 0;
   __ZdlPv($14);
   if (($15 | 0) == 0) {
    break;
   } else {
    $14 = $15;
   }
  }
 }
 HEAP32[$pts >> 2] = 0;
 HEAP32[$bottomPt >> 2] = 0;
 STACKTOP = __stackBase__;
 return;
}
function __ZN10ClipperLib7Clipper15JoinCommonEdgesEb($this, $fixHoleLinkages) {
 $this = $this | 0;
 $fixHoleLinkages = $fixHoleLinkages | 0;
 var $p1 = 0, $p2 = 0, $outRec2 = 0, $__end__i = 0, $__begin__i = 0, $1 = 0, $m_PolyOuts = 0, $__begin__i314 = 0, $__end__i351 = 0, $__first__i_i_i_i = 0, $2 = 0, $3 = 0, $m_ReverseOutput = 0, $4 = 0, $i_0241 = 0, $5 = 0, $poly1Idx = 0, $7 = 0, $8 = 0, $poly2Idx = 0, $10 = 0, $call10 = 0, $pts = 0, $bottomPt = 0, $call_i = 0, $13 = 0, $15 = 0, $17 = 0, $incdec_ptr_i = 0, $18 = 0, $23 = 0, $call21 = 0, $25 = 0, $27 = 0, $add = 0, $43 = 0, $44 = 0, $k_031_i = 0, $45 = 0, $poly1Idx_i = 0, $46 = 0, $47 = 0, $X1_i_i_i = 0, $48$0 = 0, $48$1 = 0, $Y2_i_i_i = 0, $pp2_0_i_i = 0, $X_i_i_i = 0, $Y_i_i_i = 0, $52 = 0, $54 = 0, $poly2Idx8_i = 0, $X1_i_i12_i = 0, $56$0 = 0, $56$1 = 0, $Y2_i_i13_i = 0, $pp2_0_i14_i = 0, $X_i_i15_i = 0, $Y_i_i18_i = 0, $65 = 0, $conv = 0, $conv40 = 0, $76 = 0, $pp1_0_i = 0, $next_i = 0, $77 = 0, $prev_i = 0, $call62 = 0, $isHole64 = 0, $FirstLeft73 = 0, $add76 = 0, $97 = 0, $98 = 0, $k_031_i87 = 0, $99 = 0, $poly1Idx_i89 = 0, $100 = 0, $101 = 0, $X1_i_i_i92 = 0, $102$0 = 0, $102$1 = 0, $Y2_i_i_i93 = 0, $pp2_0_i_i95 = 0, $X_i_i_i96 = 0, $Y_i_i_i99 = 0, $106 = 0, $108 = 0, $poly2Idx8_i107 = 0, $X1_i_i12_i110 = 0, $110$0 = 0, $110$1 = 0, $Y2_i_i13_i111 = 0, $pp2_0_i14_i113 = 0, $X_i_i15_i114 = 0, $Y_i_i18_i117 = 0, $conv79 = 0, $conv82 = 0, $127 = 0, $pp1_0_i136 = 0, $next_i137 = 0, $128 = 0, $prev_i138 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $k_0234 = 0, $136 = 0, $FirstLeft114 = 0, $142 = 0, $143 = 0, $inc = 0, $add127 = 0, $147 = 0, $148 = 0, $k_031_i152 = 0, $149 = 0, $poly1Idx_i154 = 0, $150 = 0, $151 = 0, $X1_i_i_i157 = 0, $152$0 = 0, $152$1 = 0, $Y2_i_i_i158 = 0, $pp2_0_i_i160 = 0, $X_i_i_i161 = 0, $Y_i_i_i164 = 0, $156 = 0, $158 = 0, $poly2Idx8_i172 = 0, $X1_i_i12_i175 = 0, $160$0 = 0, $160$1 = 0, $Y2_i_i13_i176 = 0, $pp2_0_i14_i178 = 0, $X_i_i15_i179 = 0, $Y_i_i18_i182 = 0, $172 = 0, $173 = 0, $k133_0227 = 0, $174 = 0, $177 = 0, $FirstLeft148 = 0, $call176 = 0, $196 = 0, $197 = 0, $198 = 0, $call196 = 0, $211 = 0, $bottomPt_i = 0, $212 = 0, $213 = 0, $214 = 0, $pts_i = 0, $217 = 0, $218 = 0, $219 = 0, $k213_0214 = 0, $220 = 0, $FirstLeft231 = 0, $226 = 0, $227 = 0, $inc239 = 0, $call251 = 0, $FirstLeft258 = 0, $237 = 0, $238 = 0, $239 = 0, $k269_0215 = 0, $243 = 0, $244 = 0, $k269_0221 = 0, $245 = 0, $poly1Idx278 = 0, $poly2Idx283 = 0, $inc293 = 0, $251 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 $p1 = __stackBase__ | 0;
 $p2 = __stackBase__ + 8 | 0;
 $outRec2 = __stackBase__ + 16 | 0;
 $__end__i = $this + 20 | 0;
 $__begin__i = $this + 16 | 0;
 $1 = HEAP32[$__begin__i >> 2] | 0;
 if ((HEAP32[$__end__i >> 2] | 0) == ($1 | 0)) {
  STACKTOP = __stackBase__;
  return;
 }
 $m_PolyOuts = $this + 4 | 0;
 $__begin__i314 = $m_PolyOuts | 0;
 $__end__i351 = $this + 8 | 0;
 $__first__i_i_i_i = $this + 12 | 0;
 $2 = $this;
 $3 = $this;
 $m_ReverseOutput = $this + 72 | 0;
 $i_0241 = 0;
 $4 = $1;
 while (1) {
  $5 = HEAP32[$4 + ($i_0241 << 2) >> 2] | 0;
  if (!(__ZN10ClipperLib7Clipper10JoinPointsEPKNS_7JoinRecERPNS_5OutPtES6_($this, $5, $p1, $p2) | 0)) {
   label = 5904;
   break;
  }
  $poly1Idx = $5 + 32 | 0;
  $7 = HEAP32[$__begin__i314 >> 2] | 0;
  $8 = HEAP32[$7 + (HEAP32[$poly1Idx >> 2] << 2) >> 2] | 0;
  $poly2Idx = $5 + 72 | 0;
  $10 = HEAP32[$7 + (HEAP32[$poly2Idx >> 2] << 2) >> 2] | 0;
  HEAP32[$outRec2 >> 2] = $10;
  do {
   if (($8 | 0) == ($10 | 0)) {
    $call10 = __ZN10ClipperLib11GetBottomPtEPNS_5OutPtE(HEAP32[$p1 >> 2] | 0) | 0;
    $pts = $8 + 16 | 0;
    HEAP32[$pts >> 2] = $call10;
    $bottomPt = $8 + 20 | 0;
    HEAP32[$bottomPt >> 2] = $call10;
    HEAP32[$call10 >> 2] = HEAP32[$8 >> 2];
    $call_i = __Znwj(32) | 0;
    $13 = $call_i;
    HEAP8[$call_i + 4 | 0] = 0;
    _memset($call_i + 8 | 0, 0, 24);
    HEAP32[$outRec2 >> 2] = $13;
    $15 = HEAP32[$__end__i351 >> 2] | 0;
    if (($15 | 0) == (HEAP32[$__first__i_i_i_i >> 2] | 0)) {
     __ZNSt3__16vectorIPN10ClipperLib6OutRecENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($m_PolyOuts, $outRec2);
     $18 = HEAP32[$__end__i351 >> 2] | 0;
    } else {
     if (($15 | 0) == 0) {
      $17 = 0;
     } else {
      HEAP32[$15 >> 2] = $13;
      $17 = HEAP32[$__end__i351 >> 2] | 0;
     }
     $incdec_ptr_i = $17 + 4 | 0;
     HEAP32[$__end__i351 >> 2] = $incdec_ptr_i;
     $18 = $incdec_ptr_i;
    }
    HEAP32[HEAP32[$outRec2 >> 2] >> 2] = ($18 - (HEAP32[$__begin__i314 >> 2] | 0) >> 2) - 1;
    HEAP32[$poly2Idx >> 2] = HEAP32[HEAP32[$outRec2 >> 2] >> 2];
    $23 = HEAP32[$p2 >> 2] | 0;
    $call21 = __ZN10ClipperLib11GetBottomPtEPNS_5OutPtE($23) | 0;
    HEAP32[(HEAP32[$outRec2 >> 2] | 0) + 16 >> 2] = $call21;
    $25 = HEAP32[$outRec2 >> 2] | 0;
    HEAP32[$25 + 20 >> 2] = HEAP32[$25 + 16 >> 2];
    $27 = HEAP32[$outRec2 >> 2] | 0;
    HEAP32[HEAP32[$27 + 20 >> 2] >> 2] = HEAP32[$27 >> 2];
    L6621 : do {
     if (__ZN10ClipperLib14PointInPolygonERKNS_8IntPointEPNS_5OutPtEb((HEAP32[(HEAP32[$outRec2 >> 2] | 0) + 16 >> 2] | 0) + 8 | 0, HEAP32[$pts >> 2] | 0, (HEAP8[$3 + ((HEAP32[(HEAP32[$2 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) != 0) | 0) {
      HEAP8[(HEAP32[$outRec2 >> 2] | 0) + 4 | 0] = HEAP8[$8 + 4 | 0] & 1 ^ 1;
      HEAP32[(HEAP32[$outRec2 >> 2] | 0) + 8 >> 2] = $8;
      $add = $i_0241 + 1 | 0;
      $43 = HEAP32[$__begin__i >> 2] | 0;
      if ((HEAP32[$__end__i >> 2] | 0) - $43 >> 2 >>> 0 > $add >>> 0) {
       $k_031_i = $add;
       $44 = $43;
       do {
        $45 = HEAP32[$44 + ($k_031_i << 2) >> 2] | 0;
        $poly1Idx_i = $45 + 32 | 0;
        $46 = HEAP32[$poly1Idx_i >> 2] | 0;
        $47 = HEAP32[$poly1Idx >> 2] | 0;
        L6698 : do {
         if (($46 | 0) == ($47 | 0)) {
          $X1_i_i_i = $45 | 0;
          $48$0 = HEAP32[$X1_i_i_i >> 2] | 0;
          $48$1 = HEAP32[$X1_i_i_i + 4 >> 2] | 0;
          $Y2_i_i_i = $45 + 8 | 0;
          $pp2_0_i_i = $23;
          while (1) {
           $X_i_i_i = $pp2_0_i_i + 8 | 0;
           if ((HEAP32[$X_i_i_i >> 2] | 0) == ($48$0 | 0) & (HEAP32[$X_i_i_i + 4 >> 2] | 0) == ($48$1 | 0)) {
            $Y_i_i_i = $pp2_0_i_i + 16 | 0;
            if ((HEAP32[$Y_i_i_i >> 2] | 0) == (HEAP32[$Y2_i_i_i >> 2] | 0) & (HEAP32[$Y_i_i_i + 4 >> 2] | 0) == (HEAP32[$Y2_i_i_i + 4 >> 2] | 0)) {
             break;
            }
           }
           $52 = HEAP32[$pp2_0_i_i + 24 >> 2] | 0;
           if (($52 | 0) == ($23 | 0)) {
            $54 = $46;
            break L6698;
           } else {
            $pp2_0_i_i = $52;
           }
          }
          HEAP32[$poly1Idx_i >> 2] = HEAP32[$poly2Idx >> 2];
          $54 = HEAP32[$poly1Idx >> 2] | 0;
         } else {
          $54 = $47;
         }
        } while (0);
        $poly2Idx8_i = $45 + 72 | 0;
        L6707 : do {
         if ((HEAP32[$poly2Idx8_i >> 2] | 0) == ($54 | 0)) {
          $X1_i_i12_i = $45 + 40 | 0;
          $56$0 = HEAP32[$X1_i_i12_i >> 2] | 0;
          $56$1 = HEAP32[$X1_i_i12_i + 4 >> 2] | 0;
          $Y2_i_i13_i = $45 + 48 | 0;
          $pp2_0_i14_i = $23;
          while (1) {
           $X_i_i15_i = $pp2_0_i14_i + 8 | 0;
           if ((HEAP32[$X_i_i15_i >> 2] | 0) == ($56$0 | 0) & (HEAP32[$X_i_i15_i + 4 >> 2] | 0) == ($56$1 | 0)) {
            $Y_i_i18_i = $pp2_0_i14_i + 16 | 0;
            if ((HEAP32[$Y_i_i18_i >> 2] | 0) == (HEAP32[$Y2_i_i13_i >> 2] | 0) & (HEAP32[$Y_i_i18_i + 4 >> 2] | 0) == (HEAP32[$Y2_i_i13_i + 4 >> 2] | 0)) {
             break;
            }
           }
           $pp2_0_i14_i = HEAP32[$pp2_0_i14_i + 24 >> 2] | 0;
           if (($pp2_0_i14_i | 0) == ($23 | 0)) {
            break L6707;
           }
          }
          HEAP32[$poly2Idx8_i >> 2] = HEAP32[$poly2Idx >> 2];
         }
        } while (0);
        $k_031_i = $k_031_i + 1 | 0;
        $44 = HEAP32[$__begin__i >> 2] | 0;
       } while ($k_031_i >>> 0 < (HEAP32[$__end__i >> 2] | 0) - $44 >> 2 >>> 0);
      }
      __ZN10ClipperLib7Clipper15FixupOutPolygonERNS_6OutRecE($this, $8);
      __ZN10ClipperLib7Clipper15FixupOutPolygonERNS_6OutRecE($this, HEAP32[$outRec2 >> 2] | 0);
      $65 = HEAP32[$outRec2 >> 2] | 0;
      if ((HEAP32[$65 + 16 >> 2] | 0) == 0) {
       break;
      }
      $conv = HEAP8[$65 + 4 | 0] & 1;
      $conv40 = HEAP8[$m_ReverseOutput] & 1;
      if (($conv | 0) != ((__ZN10ClipperLib11OrientationEPNS_6OutRecEb($65, (HEAP8[$3 + ((HEAP32[(HEAP32[$2 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) != 0) | 0) & 1 ^ $conv40 | 0)) {
       break;
      }
      $76 = HEAP32[(HEAP32[$outRec2 >> 2] | 0) + 16 >> 2] | 0;
      if (($76 | 0) == 0) {
       break;
      } else {
       $pp1_0_i = $76;
      }
      while (1) {
       $next_i = $pp1_0_i + 24 | 0;
       $77 = HEAP32[$next_i >> 2] | 0;
       $prev_i = $pp1_0_i + 28 | 0;
       HEAP32[$next_i >> 2] = HEAP32[$prev_i >> 2];
       HEAP32[$prev_i >> 2] = $77;
       if (($77 | 0) == ($76 | 0)) {
        break;
       } else {
        $pp1_0_i = $77;
       }
      }
     } else {
      $call62 = __ZN10ClipperLib14PointInPolygonERKNS_8IntPointEPNS_5OutPtEb((HEAP32[$pts >> 2] | 0) + 8 | 0, HEAP32[(HEAP32[$outRec2 >> 2] | 0) + 16 >> 2] | 0, (HEAP8[$3 + ((HEAP32[(HEAP32[$2 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) != 0) | 0;
      $isHole64 = $8 + 4 | 0;
      HEAP8[(HEAP32[$outRec2 >> 2] | 0) + 4 | 0] = HEAP8[$isHole64] & 1;
      if (!$call62) {
       HEAP32[(HEAP32[$outRec2 >> 2] | 0) + 8 >> 2] = HEAP32[$8 + 8 >> 2];
       $add127 = $i_0241 + 1 | 0;
       $147 = HEAP32[$__begin__i >> 2] | 0;
       if ((HEAP32[$__end__i >> 2] | 0) - $147 >> 2 >>> 0 > $add127 >>> 0) {
        $k_031_i152 = $add127;
        $148 = $147;
        do {
         $149 = HEAP32[$148 + ($k_031_i152 << 2) >> 2] | 0;
         $poly1Idx_i154 = $149 + 32 | 0;
         $150 = HEAP32[$poly1Idx_i154 >> 2] | 0;
         $151 = HEAP32[$poly1Idx >> 2] | 0;
         L6628 : do {
          if (($150 | 0) == ($151 | 0)) {
           $X1_i_i_i157 = $149 | 0;
           $152$0 = HEAP32[$X1_i_i_i157 >> 2] | 0;
           $152$1 = HEAP32[$X1_i_i_i157 + 4 >> 2] | 0;
           $Y2_i_i_i158 = $149 + 8 | 0;
           $pp2_0_i_i160 = $23;
           while (1) {
            $X_i_i_i161 = $pp2_0_i_i160 + 8 | 0;
            if ((HEAP32[$X_i_i_i161 >> 2] | 0) == ($152$0 | 0) & (HEAP32[$X_i_i_i161 + 4 >> 2] | 0) == ($152$1 | 0)) {
             $Y_i_i_i164 = $pp2_0_i_i160 + 16 | 0;
             if ((HEAP32[$Y_i_i_i164 >> 2] | 0) == (HEAP32[$Y2_i_i_i158 >> 2] | 0) & (HEAP32[$Y_i_i_i164 + 4 >> 2] | 0) == (HEAP32[$Y2_i_i_i158 + 4 >> 2] | 0)) {
              break;
             }
            }
            $156 = HEAP32[$pp2_0_i_i160 + 24 >> 2] | 0;
            if (($156 | 0) == ($23 | 0)) {
             $158 = $150;
             break L6628;
            } else {
             $pp2_0_i_i160 = $156;
            }
           }
           HEAP32[$poly1Idx_i154 >> 2] = HEAP32[$poly2Idx >> 2];
           $158 = HEAP32[$poly1Idx >> 2] | 0;
          } else {
           $158 = $151;
          }
         } while (0);
         $poly2Idx8_i172 = $149 + 72 | 0;
         L6637 : do {
          if ((HEAP32[$poly2Idx8_i172 >> 2] | 0) == ($158 | 0)) {
           $X1_i_i12_i175 = $149 + 40 | 0;
           $160$0 = HEAP32[$X1_i_i12_i175 >> 2] | 0;
           $160$1 = HEAP32[$X1_i_i12_i175 + 4 >> 2] | 0;
           $Y2_i_i13_i176 = $149 + 48 | 0;
           $pp2_0_i14_i178 = $23;
           while (1) {
            $X_i_i15_i179 = $pp2_0_i14_i178 + 8 | 0;
            if ((HEAP32[$X_i_i15_i179 >> 2] | 0) == ($160$0 | 0) & (HEAP32[$X_i_i15_i179 + 4 >> 2] | 0) == ($160$1 | 0)) {
             $Y_i_i18_i182 = $pp2_0_i14_i178 + 16 | 0;
             if ((HEAP32[$Y_i_i18_i182 >> 2] | 0) == (HEAP32[$Y2_i_i13_i176 >> 2] | 0) & (HEAP32[$Y_i_i18_i182 + 4 >> 2] | 0) == (HEAP32[$Y2_i_i13_i176 + 4 >> 2] | 0)) {
              break;
             }
            }
            $pp2_0_i14_i178 = HEAP32[$pp2_0_i14_i178 + 24 >> 2] | 0;
            if (($pp2_0_i14_i178 | 0) == ($23 | 0)) {
             break L6637;
            }
           }
           HEAP32[$poly2Idx8_i172 >> 2] = HEAP32[$poly2Idx >> 2];
          }
         } while (0);
         $k_031_i152 = $k_031_i152 + 1 | 0;
         $148 = HEAP32[$__begin__i >> 2] | 0;
        } while ($k_031_i152 >>> 0 < (HEAP32[$__end__i >> 2] | 0) - $148 >> 2 >>> 0);
       }
       __ZN10ClipperLib7Clipper15FixupOutPolygonERNS_6OutRecE($this, $8);
       __ZN10ClipperLib7Clipper15FixupOutPolygonERNS_6OutRecE($this, HEAP32[$outRec2 >> 2] | 0);
       if (!$fixHoleLinkages) {
        break;
       }
       if ((HEAP32[(HEAP32[$outRec2 >> 2] | 0) + 16 >> 2] | 0) == 0) {
        break;
       }
       $172 = HEAP32[$__begin__i314 >> 2] | 0;
       if ((HEAP32[$__end__i351 >> 2] | 0) == ($172 | 0)) {
        break;
       } else {
        $k133_0227 = 0;
        $173 = $172;
       }
       while (1) {
        $174 = HEAP32[$173 + ($k133_0227 << 2) >> 2] | 0;
        do {
         if ((HEAP8[$174 + 4 | 0] & 1) != 0) {
          $177 = HEAP32[$174 + 20 >> 2] | 0;
          if (($177 | 0) == 0) {
           break;
          }
          $FirstLeft148 = $174 + 8 | 0;
          if ((HEAP32[$FirstLeft148 >> 2] | 0) != ($8 | 0)) {
           break;
          }
          if (!(__ZN10ClipperLib14PointInPolygonERKNS_8IntPointEPNS_5OutPtEb($177 + 8 | 0, HEAP32[(HEAP32[$outRec2 >> 2] | 0) + 16 >> 2] | 0, (HEAP8[$3 + ((HEAP32[(HEAP32[$2 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) != 0) | 0)) {
           break;
          }
          HEAP32[$FirstLeft148 >> 2] = HEAP32[$outRec2 >> 2];
         }
        } while (0);
        $k133_0227 = $k133_0227 + 1 | 0;
        $173 = HEAP32[$__begin__i314 >> 2] | 0;
        if ($k133_0227 >>> 0 >= (HEAP32[$__end__i351 >> 2] | 0) - $173 >> 2 >>> 0) {
         break L6621;
        }
       }
      }
      HEAP8[$isHole64] = HEAP8[(HEAP32[$outRec2 >> 2] | 0) + 4 | 0] & 1 ^ 1;
      $FirstLeft73 = $8 + 8 | 0;
      HEAP32[(HEAP32[$outRec2 >> 2] | 0) + 8 >> 2] = HEAP32[$FirstLeft73 >> 2];
      HEAP32[$FirstLeft73 >> 2] = HEAP32[$outRec2 >> 2];
      $add76 = $i_0241 + 1 | 0;
      $97 = HEAP32[$__begin__i >> 2] | 0;
      if ((HEAP32[$__end__i >> 2] | 0) - $97 >> 2 >>> 0 > $add76 >>> 0) {
       $k_031_i87 = $add76;
       $98 = $97;
       do {
        $99 = HEAP32[$98 + ($k_031_i87 << 2) >> 2] | 0;
        $poly1Idx_i89 = $99 + 32 | 0;
        $100 = HEAP32[$poly1Idx_i89 >> 2] | 0;
        $101 = HEAP32[$poly1Idx >> 2] | 0;
        L6661 : do {
         if (($100 | 0) == ($101 | 0)) {
          $X1_i_i_i92 = $99 | 0;
          $102$0 = HEAP32[$X1_i_i_i92 >> 2] | 0;
          $102$1 = HEAP32[$X1_i_i_i92 + 4 >> 2] | 0;
          $Y2_i_i_i93 = $99 + 8 | 0;
          $pp2_0_i_i95 = $23;
          while (1) {
           $X_i_i_i96 = $pp2_0_i_i95 + 8 | 0;
           if ((HEAP32[$X_i_i_i96 >> 2] | 0) == ($102$0 | 0) & (HEAP32[$X_i_i_i96 + 4 >> 2] | 0) == ($102$1 | 0)) {
            $Y_i_i_i99 = $pp2_0_i_i95 + 16 | 0;
            if ((HEAP32[$Y_i_i_i99 >> 2] | 0) == (HEAP32[$Y2_i_i_i93 >> 2] | 0) & (HEAP32[$Y_i_i_i99 + 4 >> 2] | 0) == (HEAP32[$Y2_i_i_i93 + 4 >> 2] | 0)) {
             break;
            }
           }
           $106 = HEAP32[$pp2_0_i_i95 + 24 >> 2] | 0;
           if (($106 | 0) == ($23 | 0)) {
            $108 = $100;
            break L6661;
           } else {
            $pp2_0_i_i95 = $106;
           }
          }
          HEAP32[$poly1Idx_i89 >> 2] = HEAP32[$poly2Idx >> 2];
          $108 = HEAP32[$poly1Idx >> 2] | 0;
         } else {
          $108 = $101;
         }
        } while (0);
        $poly2Idx8_i107 = $99 + 72 | 0;
        L6670 : do {
         if ((HEAP32[$poly2Idx8_i107 >> 2] | 0) == ($108 | 0)) {
          $X1_i_i12_i110 = $99 + 40 | 0;
          $110$0 = HEAP32[$X1_i_i12_i110 >> 2] | 0;
          $110$1 = HEAP32[$X1_i_i12_i110 + 4 >> 2] | 0;
          $Y2_i_i13_i111 = $99 + 48 | 0;
          $pp2_0_i14_i113 = $23;
          while (1) {
           $X_i_i15_i114 = $pp2_0_i14_i113 + 8 | 0;
           if ((HEAP32[$X_i_i15_i114 >> 2] | 0) == ($110$0 | 0) & (HEAP32[$X_i_i15_i114 + 4 >> 2] | 0) == ($110$1 | 0)) {
            $Y_i_i18_i117 = $pp2_0_i14_i113 + 16 | 0;
            if ((HEAP32[$Y_i_i18_i117 >> 2] | 0) == (HEAP32[$Y2_i_i13_i111 >> 2] | 0) & (HEAP32[$Y_i_i18_i117 + 4 >> 2] | 0) == (HEAP32[$Y2_i_i13_i111 + 4 >> 2] | 0)) {
             break;
            }
           }
           $pp2_0_i14_i113 = HEAP32[$pp2_0_i14_i113 + 24 >> 2] | 0;
           if (($pp2_0_i14_i113 | 0) == ($23 | 0)) {
            break L6670;
           }
          }
          HEAP32[$poly2Idx8_i107 >> 2] = HEAP32[$poly2Idx >> 2];
         }
        } while (0);
        $k_031_i87 = $k_031_i87 + 1 | 0;
        $98 = HEAP32[$__begin__i >> 2] | 0;
       } while ($k_031_i87 >>> 0 < (HEAP32[$__end__i >> 2] | 0) - $98 >> 2 >>> 0);
      }
      __ZN10ClipperLib7Clipper15FixupOutPolygonERNS_6OutRecE($this, $8);
      __ZN10ClipperLib7Clipper15FixupOutPolygonERNS_6OutRecE($this, HEAP32[$outRec2 >> 2] | 0);
      $conv79 = HEAP8[$isHole64] & 1;
      $conv82 = HEAP8[$m_ReverseOutput] & 1;
      do {
       if (($conv79 | 0) == ((__ZN10ClipperLib11OrientationEPNS_6OutRecEb($8, (HEAP8[$3 + ((HEAP32[(HEAP32[$2 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) != 0) | 0) & 1 ^ $conv82 | 0)) {
        $127 = HEAP32[$pts >> 2] | 0;
        if (($127 | 0) == 0) {
         break;
        } else {
         $pp1_0_i136 = $127;
        }
        while (1) {
         $next_i137 = $pp1_0_i136 + 24 | 0;
         $128 = HEAP32[$next_i137 >> 2] | 0;
         $prev_i138 = $pp1_0_i136 + 28 | 0;
         HEAP32[$next_i137 >> 2] = HEAP32[$prev_i138 >> 2];
         HEAP32[$prev_i138 >> 2] = $128;
         if (($128 | 0) == ($127 | 0)) {
          break;
         } else {
          $pp1_0_i136 = $128;
         }
        }
       }
      } while (0);
      if (!$fixHoleLinkages) {
       break;
      }
      if ((HEAP8[$isHole64] & 1) == 0) {
       break;
      }
      $132 = HEAP32[$__end__i351 >> 2] | 0;
      $133 = HEAP32[$__begin__i314 >> 2] | 0;
      if (($132 | 0) == ($133 | 0)) {
       break;
      } else {
       $k_0234 = 0;
       $135 = $133;
       $134 = $132;
      }
      while (1) {
       $136 = HEAP32[$135 + ($k_0234 << 2) >> 2] | 0;
       do {
        if ((HEAP8[$136 + 4 | 0] & 1) == 0) {
         $143 = $134;
         $142 = $135;
        } else {
         if ((HEAP32[$136 + 20 >> 2] | 0) == 0) {
          $143 = $134;
          $142 = $135;
          break;
         }
         $FirstLeft114 = $136 + 8 | 0;
         if ((HEAP32[$FirstLeft114 >> 2] | 0) != ($8 | 0)) {
          $143 = $134;
          $142 = $135;
          break;
         }
         HEAP32[$FirstLeft114 >> 2] = HEAP32[$outRec2 >> 2];
         $143 = HEAP32[$__end__i351 >> 2] | 0;
         $142 = HEAP32[$__begin__i314 >> 2] | 0;
        }
       } while (0);
       $inc = $k_0234 + 1 | 0;
       if ($inc >>> 0 < $143 - $142 >> 2 >>> 0) {
        $k_0234 = $inc;
        $135 = $142;
        $134 = $143;
       } else {
        break;
       }
      }
     }
    } while (0);
    $call176 = __ZN10ClipperLib11OrientationEPNS_6OutRecEb($8, (HEAP8[$3 + ((HEAP32[(HEAP32[$2 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) != 0) | 0;
    if ($call176 ^ +__ZN10ClipperLib4AreaERKNS_6OutRecEb($8, (HEAP8[$3 + ((HEAP32[(HEAP32[$2 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) != 0) >= 0.0) {
     $196 = HEAP32[$bottomPt >> 2] | 0;
     $197 = HEAP32[$196 + 24 >> 2] | 0;
     $198 = HEAP32[$196 + 28 >> 2] | 0;
     if ((HEAP32[$pts >> 2] | 0) == ($196 | 0)) {
      HEAP32[$pts >> 2] = $197;
     }
     if (($196 | 0) != 0) {
      __ZdlPv($196);
     }
     HEAP32[$197 + 28 >> 2] = $198;
     HEAP32[$198 + 24 >> 2] = $197;
     HEAP32[$bottomPt >> 2] = $197;
     __ZN10ClipperLib7Clipper15FixupOutPolygonERNS_6OutRecE($this, $8);
    }
    $call196 = __ZN10ClipperLib11OrientationEPNS_6OutRecEb(HEAP32[$outRec2 >> 2] | 0, (HEAP8[$3 + ((HEAP32[(HEAP32[$2 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) != 0) | 0;
    if (!($call196 ^ +__ZN10ClipperLib4AreaERKNS_6OutRecEb(HEAP32[$outRec2 >> 2] | 0, (HEAP8[$3 + ((HEAP32[(HEAP32[$2 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) != 0) >= 0.0)) {
     break;
    }
    $211 = HEAP32[$outRec2 >> 2] | 0;
    $bottomPt_i = $211 + 20 | 0;
    $212 = HEAP32[$bottomPt_i >> 2] | 0;
    $213 = HEAP32[$212 + 24 >> 2] | 0;
    $214 = HEAP32[$212 + 28 >> 2] | 0;
    $pts_i = $211 + 16 | 0;
    if ((HEAP32[$pts_i >> 2] | 0) == ($212 | 0)) {
     HEAP32[$pts_i >> 2] = $213;
    }
    if (($212 | 0) != 0) {
     __ZdlPv($212);
    }
    HEAP32[$213 + 28 >> 2] = $214;
    HEAP32[$214 + 24 >> 2] = $213;
    HEAP32[$bottomPt_i >> 2] = $213;
    __ZN10ClipperLib7Clipper15FixupOutPolygonERNS_6OutRecE($this, $211);
   } else {
    do {
     if ($fixHoleLinkages) {
      $217 = HEAP32[$__end__i351 >> 2] | 0;
      if (($217 | 0) == ($7 | 0)) {
       break;
      } else {
       $k213_0214 = 0;
       $219 = $7;
       $218 = $217;
      }
      while (1) {
       $220 = HEAP32[$219 + ($k213_0214 << 2) >> 2] | 0;
       do {
        if ((HEAP8[$220 + 4 | 0] & 1) == 0) {
         $227 = $218;
         $226 = $219;
        } else {
         if ((HEAP32[$220 + 20 >> 2] | 0) == 0) {
          $227 = $218;
          $226 = $219;
          break;
         }
         $FirstLeft231 = $220 + 8 | 0;
         if ((HEAP32[$FirstLeft231 >> 2] | 0) != (HEAP32[$outRec2 >> 2] | 0)) {
          $227 = $218;
          $226 = $219;
          break;
         }
         HEAP32[$FirstLeft231 >> 2] = $8;
         $227 = HEAP32[$__end__i351 >> 2] | 0;
         $226 = HEAP32[$__begin__i314 >> 2] | 0;
        }
       } while (0);
       $inc239 = $k213_0214 + 1 | 0;
       if ($inc239 >>> 0 < $227 - $226 >> 2 >>> 0) {
        $k213_0214 = $inc239;
        $219 = $226;
        $218 = $227;
       } else {
        break;
       }
      }
     }
    } while (0);
    __ZN10ClipperLib7Clipper15FixupOutPolygonERNS_6OutRecE($this, $8);
    do {
     if ((HEAP32[$8 + 16 >> 2] | 0) != 0) {
      $call251 = __ZN10ClipperLib11OrientationEPNS_6OutRecEb($8, (HEAP8[$3 + ((HEAP32[(HEAP32[$2 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) != 0) | 0;
      HEAP8[$8 + 4 | 0] = $call251 & 1 ^ 1;
      if ($call251) {
       break;
      }
      $FirstLeft258 = $8 + 8 | 0;
      if ((HEAP32[$FirstLeft258 >> 2] | 0) != 0) {
       break;
      }
      HEAP32[$FirstLeft258 >> 2] = HEAP32[(HEAP32[$outRec2 >> 2] | 0) + 8 >> 2];
     }
    } while (0);
    $237 = HEAP32[$8 >> 2] | 0;
    $238 = HEAP32[$outRec2 >> 2] | 0;
    $239 = HEAP32[$238 >> 2] | 0;
    HEAP32[$238 + 16 >> 2] = 0;
    HEAP32[(HEAP32[$outRec2 >> 2] | 0) + 20 >> 2] = 0;
    HEAP32[(HEAP32[$outRec2 >> 2] | 0) + 12 >> 2] = $8;
    $k269_0215 = $i_0241 + 1 | 0;
    $243 = HEAP32[$__begin__i >> 2] | 0;
    if ($k269_0215 >>> 0 < (HEAP32[$__end__i >> 2] | 0) - $243 >> 2 >>> 0) {
     $k269_0221 = $k269_0215;
     $244 = $243;
    } else {
     break;
    }
    do {
     $245 = HEAP32[$244 + ($k269_0221 << 2) >> 2] | 0;
     $poly1Idx278 = $245 + 32 | 0;
     if ((HEAP32[$poly1Idx278 >> 2] | 0) == ($239 | 0)) {
      HEAP32[$poly1Idx278 >> 2] = $237;
     }
     $poly2Idx283 = $245 + 72 | 0;
     if ((HEAP32[$poly2Idx283 >> 2] | 0) == ($239 | 0)) {
      HEAP32[$poly2Idx283 >> 2] = $237;
     }
     $k269_0221 = $k269_0221 + 1 | 0;
     $244 = HEAP32[$__begin__i >> 2] | 0;
    } while ($k269_0221 >>> 0 < (HEAP32[$__end__i >> 2] | 0) - $244 >> 2 >>> 0);
   }
  } while (0);
  $inc293 = $i_0241 + 1 | 0;
  $251 = HEAP32[$__begin__i >> 2] | 0;
  if ($inc293 >>> 0 < (HEAP32[$__end__i >> 2] | 0) - $251 >> 2 >>> 0) {
   $i_0241 = $inc293;
   $4 = $251;
  } else {
   label = 5906;
   break;
  }
 }
 if ((label | 0) == 5904) {
  STACKTOP = __stackBase__;
  return;
 } else if ((label | 0) == 5906) {
  STACKTOP = __stackBase__;
  return;
 }
}
function __ZN10ClipperLib7Clipper15SetWindingCountERNS_5TEdgeE($this, $edge) {
 $this = $this | 0;
 $edge = $edge | 0;
 var $polyType2 = 0, $edge_pn = 0, $e_0 = 0, $0 = 0, $m_SubjFillType_i = 0, $m_ClipFillType_i = 0, $3 = 0, $4 = 0, $5 = 0, $cmp12 = 0, $conv$0 = 0, $conv$1 = 0, $cmp_i52 = 0, $sub_i$0 = 0, $cond_i$1 = 0, $$etemp$1$1 = 0, $cmp16 = 0, $6 = 0, $8 = 0, $add53 = 0, $windCnt57 = 0, $9 = 0, $m_SubjFillType_i48_pre_phi = 0, $m_ClipFillType_i47_pre_phi = 0, $10 = 0, $11 = 0, $e_1_in = 0, $e_1 = 0, $cmp7453 = 0, $windCnt286 = 0, $windCnt276 = 0, $12 = 0, $e_254 = 0, $14 = 0, $e_357 = 0, label = 0;
 $polyType2 = $edge + 80 | 0;
 $edge_pn = $edge;
 while (1) {
  $e_0 = HEAP32[$edge_pn + 120 >> 2] | 0;
  if (($e_0 | 0) == 0) {
   label = 5910;
   break;
  }
  $0 = HEAP32[$e_0 + 80 >> 2] | 0;
  if (($0 | 0) == (HEAP32[$polyType2 >> 2] | 0)) {
   label = 5911;
   break;
  } else {
   $edge_pn = $e_0;
  }
 }
 do {
  if ((label | 0) == 5910) {
   HEAP32[$edge + 92 >> 2] = HEAP32[$edge + 88 >> 2];
   HEAP32[$edge + 96 >> 2] = 0;
   $e_1_in = $this + 48 | 0;
   $11 = HEAP32[$polyType2 >> 2] | 0;
   $10 = 0;
   $m_ClipFillType_i47_pre_phi = $this + 64 | 0;
   $m_SubjFillType_i48_pre_phi = $this + 68 | 0;
  } else if ((label | 0) == 5911) {
   $m_SubjFillType_i = $this + 68 | 0;
   $m_ClipFillType_i = $this + 64 | 0;
   if ((HEAP32[(($0 | 0) == 0 ? $m_SubjFillType_i : $m_ClipFillType_i) >> 2] | 0) == 0) {
    HEAP32[$edge + 92 >> 2] = 1;
    $3 = HEAP32[$e_0 + 96 >> 2] | 0;
    HEAP32[$edge + 96 >> 2] = $3;
    $e_1_in = $e_0 + 116 | 0;
    $11 = $0;
    $10 = $3;
    $m_ClipFillType_i47_pre_phi = $m_ClipFillType_i;
    $m_SubjFillType_i48_pre_phi = $m_SubjFillType_i;
    break;
   }
   $4 = HEAP32[$e_0 + 92 >> 2] | 0;
   $5 = HEAP32[$e_0 + 88 >> 2] | 0;
   $cmp12 = (Math_imul($5, $4) | 0) < 0;
   $conv$0 = $4;
   $conv$1 = ($4 | 0) < 0 ? -1 : 0;
   $cmp_i52 = ($4 | 0) < 0;
   $sub_i$0 = _i64Subtract(0, 0, $conv$0, $conv$1) | 0;
   $cond_i$1 = $cmp_i52 ? tempRet0 : $conv$1;
   $$etemp$1$1 = 0;
   $cmp16 = ($cond_i$1 | 0) > ($$etemp$1$1 | 0) | ($cond_i$1 | 0) == ($$etemp$1$1 | 0) & ($cmp_i52 ? $sub_i$0 : $conv$0) >>> 0 > 1 >>> 0;
   L6776 : do {
    if ($cmp12) {
     if (!$cmp16) {
      HEAP32[$edge + 92 >> 2] = $5 + $4 + (HEAP32[$edge + 88 >> 2] | 0);
      break;
     }
     $6 = HEAP32[$edge + 88 >> 2] | 0;
     if ((Math_imul($6, $5) | 0) < 0) {
      HEAP32[$edge + 92 >> 2] = $4;
      break;
     } else {
      HEAP32[$edge + 92 >> 2] = $6 + $4;
      break;
     }
    } else {
     $8 = HEAP32[$edge + 88 >> 2] | 0;
     do {
      if ($cmp16) {
       if ((Math_imul($8, $5) | 0) >= 0) {
        break;
       }
       HEAP32[$edge + 92 >> 2] = $4;
       break L6776;
      }
     } while (0);
     $add53 = $8 + $4 | 0;
     $windCnt57 = $edge + 92 | 0;
     if (($add53 | 0) == 0) {
      HEAP32[$windCnt57 >> 2] = $4;
      break;
     } else {
      HEAP32[$windCnt57 >> 2] = $add53;
      break;
     }
    }
   } while (0);
   $9 = HEAP32[$e_0 + 96 >> 2] | 0;
   HEAP32[$edge + 96 >> 2] = $9;
   $e_1_in = $e_0 + 116 | 0;
   $11 = $0;
   $10 = $9;
   $m_ClipFillType_i47_pre_phi = $m_ClipFillType_i;
   $m_SubjFillType_i48_pre_phi = $m_SubjFillType_i;
  }
 } while (0);
 $e_1 = HEAP32[$e_1_in >> 2] | 0;
 $cmp7453 = ($e_1 | 0) == ($edge | 0);
 if ((HEAP32[(($11 | 0) == 0 ? $m_ClipFillType_i47_pre_phi : $m_SubjFillType_i48_pre_phi) >> 2] | 0) == 0) {
  if ($cmp7453) {
   return;
  }
  $windCnt276 = $edge + 96 | 0;
  $e_254 = $e_1;
  $12 = $10;
  do {
   $12 = ($12 | 0) == 0 & 1;
   HEAP32[$windCnt276 >> 2] = $12;
   $e_254 = HEAP32[$e_254 + 116 >> 2] | 0;
  } while (($e_254 | 0) != ($edge | 0));
  return;
 } else {
  if ($cmp7453) {
   return;
  }
  $windCnt286 = $edge + 96 | 0;
  $e_357 = $e_1;
  $14 = $10;
  do {
   $14 = $14 + (HEAP32[$e_357 + 88 >> 2] | 0) | 0;
   HEAP32[$windCnt286 >> 2] = $14;
   $e_357 = HEAP32[$e_357 + 116 >> 2] | 0;
  } while (($e_357 | 0) != ($edge | 0));
  return;
 }
}
function __ZNK10ClipperLib7Clipper14IsContributingERKNS_5TEdgeE($this, $edge) {
 $this = $this | 0;
 $edge = $edge | 0;
 var $cmp = 0, $pft_0_in = 0, $pft2_0_in = 0, $pft2_0 = 0, $pft_0 = 0, $1 = 0, $conv$0 = 0, $conv$1 = 0, $cmp_i = 0, $sub_i$0 = 0, $4 = 0, $retval_0 = 0;
 $cmp = (HEAP32[$edge + 80 >> 2] | 0) == 0;
 if ($cmp) {
  $pft2_0_in = $this + 64 | 0;
  $pft_0_in = $this + 68 | 0;
 } else {
  $pft2_0_in = $this + 68 | 0;
  $pft_0_in = $this + 64 | 0;
 }
 $pft2_0 = HEAP32[$pft2_0_in >> 2] | 0;
 $pft_0 = HEAP32[$pft_0_in >> 2] | 0;
 do {
  if (($pft_0 | 0) == 0 | ($pft_0 | 0) == 1) {
   $1 = HEAP32[$edge + 92 >> 2] | 0;
   $conv$0 = $1;
   $conv$1 = ($1 | 0) < 0 ? -1 : 0;
   $cmp_i = ($1 | 0) < 0;
   $sub_i$0 = _i64Subtract(0, 0, $conv$0, $conv$1) | 0;
   if ((($cmp_i ? $sub_i$0 : $conv$0) | 0) == 1 & (($cmp_i ? tempRet0 : $conv$1) | 0) == 0) {
    break;
   } else {
    $retval_0 = 0;
   }
   return $retval_0 | 0;
  } else if (($pft_0 | 0) == 2) {
   if ((HEAP32[$edge + 92 >> 2] | 0) == 1) {
    break;
   } else {
    $retval_0 = 0;
   }
   return $retval_0 | 0;
  } else {
   if ((HEAP32[$edge + 92 >> 2] | 0) == -1) {
    break;
   } else {
    $retval_0 = 0;
   }
   return $retval_0 | 0;
  }
 } while (0);
 $4 = HEAP32[$this + 40 >> 2] | 0;
 if (($4 | 0) == 0) {
  if (($pft2_0 | 0) == 0 | ($pft2_0 | 0) == 1) {
   $retval_0 = (HEAP32[$edge + 96 >> 2] | 0) != 0;
   return $retval_0 | 0;
  } else if (($pft2_0 | 0) == 2) {
   $retval_0 = (HEAP32[$edge + 96 >> 2] | 0) > 0;
   return $retval_0 | 0;
  } else {
   $retval_0 = (HEAP32[$edge + 96 >> 2] | 0) < 0;
   return $retval_0 | 0;
  }
 } else if (($4 | 0) == 2) {
  if ($cmp) {
   if (($pft2_0 | 0) == 0 | ($pft2_0 | 0) == 1) {
    $retval_0 = (HEAP32[$edge + 96 >> 2] | 0) == 0;
    return $retval_0 | 0;
   } else if (($pft2_0 | 0) == 2) {
    $retval_0 = (HEAP32[$edge + 96 >> 2] | 0) < 1;
    return $retval_0 | 0;
   } else {
    $retval_0 = (HEAP32[$edge + 96 >> 2] | 0) > -1;
    return $retval_0 | 0;
   }
  } else {
   if (($pft2_0 | 0) == 0 | ($pft2_0 | 0) == 1) {
    $retval_0 = (HEAP32[$edge + 96 >> 2] | 0) != 0;
    return $retval_0 | 0;
   } else if (($pft2_0 | 0) == 2) {
    $retval_0 = (HEAP32[$edge + 96 >> 2] | 0) > 0;
    return $retval_0 | 0;
   } else {
    $retval_0 = (HEAP32[$edge + 96 >> 2] | 0) < 0;
    return $retval_0 | 0;
   }
  }
 } else if (($4 | 0) == 1) {
  if (($pft2_0 | 0) == 2) {
   $retval_0 = (HEAP32[$edge + 96 >> 2] | 0) < 1;
   return $retval_0 | 0;
  } else if (($pft2_0 | 0) == 0 | ($pft2_0 | 0) == 1) {
   $retval_0 = (HEAP32[$edge + 96 >> 2] | 0) == 0;
   return $retval_0 | 0;
  } else {
   $retval_0 = (HEAP32[$edge + 96 >> 2] | 0) > -1;
   return $retval_0 | 0;
  }
 } else {
  $retval_0 = 1;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZN10ClipperLib7Clipper15AddLocalMinPolyEPNS_5TEdgeES2_RKNS_8IntPointE($this, $e1, $e2, $pt) {
 $this = $this | 0;
 $e1 = $e1 | 0;
 $e2 = $e2 | 0;
 $pt = $pt | 0;
 var $tmp_i = 0, $ref_tmp_i = 0, $tmp1_i = 0, $ref_tmp2_i = 0, $tmp3_i = 0, $ref_tmp5_i = 0, $jr_i = 0, $0 = 0.0, $sub = 0.0, $3 = 0, $6 = 0, $e_0 = 0, $prevE_0 = 0, $outIdx28 = 0, $Y = 0, $9$0 = 0, $9$1 = 0, $ytop_i = 0, $xtop_i = 0, $xbot_i = 0, $12$0 = 0, $12$1 = 0, $13 = 0.0, $ybot_i = 0, $sub_i$0 = 0, $mul_i = 0.0, $sub_sink_i_i = 0.0, $add_i$0 = 0, $cond_i$0 = 0, $cond_i$1 = 0, $ytop_i35 = 0, $xtop_i37 = 0, $xbot_i39 = 0, $17$0 = 0, $17$1 = 0, $18 = 0.0, $ybot_i41 = 0, $sub_i42$0 = 0, $mul_i44 = 0.0, $sub_sink_i_i51 = 0.0, $add_i53$0 = 0, $cond_i55$0 = 0, $cond_i55$1 = 0, $deltaY_i = 0, $32$0 = 0, $32$1 = 0, $lo_i_i_i = 0, $hi_i_i_i = 0, $deltaX_i = 0, $33$1 = 0, $lo_i_i6_i = 0, $hi_i_i7_i = 0, $deltaX4_i = 0, $34$1 = 0, $lo_i_i12_i = 0, $hi_i_i13_i = 0, $deltaY6_i = 0, $35$1 = 0, $lo_i_i9_i = 0, $hi_i_i10_i = 0, $hi_i_i = 0, $hi2_i_i = 0, $lo_i_i = 0, $lo3_i_i = 0, $deltaX8_i = 0, $mul_i58$0 = 0, $mul_i58$1 = 0, $deltaX9_i = 0, $deltaY10_i = 0, $mul11_i$0 = 0, $retval_0_i = 0, $call_i = 0, $44 = 0, $X_i_i3_i_i_i = 0, $xcurr_i = 0, $47$1 = 0, $ycurr_i = 0, $48$0 = 0, $48$1 = 0, $ref_tmp_sroa_0_0__idx_i = 0, $49 = 0, $xtop_i32 = 0, $50$1 = 0, $51$0 = 0, $51$1 = 0, $52 = 0, $53 = 0, $xcurr11_i = 0, $56$1 = 0, $ycurr12_i = 0, $57$0 = 0, $57$1 = 0, $58 = 0, $59 = 0, $xtop14_i = 0, $60$1 = 0, $61$0 = 0, $61$1 = 0, $62 = 0, $63 = 0, $__end__i_i = 0, $64 = 0, $66 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 104 | 0;
 $tmp_i = __stackBase__ | 0;
 $ref_tmp_i = __stackBase__ + 16 | 0;
 $tmp1_i = __stackBase__ + 32 | 0;
 $ref_tmp2_i = __stackBase__ + 48 | 0;
 $tmp3_i = __stackBase__ + 64 | 0;
 $ref_tmp5_i = __stackBase__ + 80 | 0;
 $jr_i = __stackBase__ + 96 | 0;
 $0 = +HEAPF64[$e2 + 48 >> 3];
 $sub = $0 + 1.0e+40;
 do {
  if ($sub > -1.0e-20 & $sub < 1.0e-20) {
   label = 5982;
  } else {
   if (+HEAPF64[$e1 + 48 >> 3] > $0) {
    label = 5982;
    break;
   }
   __ZN10ClipperLib7Clipper8AddOutPtEPNS_5TEdgeERKNS_8IntPointE($this, $e2, $pt);
   HEAP32[$e1 + 100 >> 2] = HEAP32[$e2 + 100 >> 2];
   HEAP32[$e1 + 84 >> 2] = 2;
   HEAP32[$e2 + 84 >> 2] = 1;
   $6 = HEAP32[$e2 + 120 >> 2] | 0;
   if (($6 | 0) != ($e1 | 0)) {
    $prevE_0 = $6;
    $e_0 = $e2;
    break;
   }
   $prevE_0 = HEAP32[$e1 + 120 >> 2] | 0;
   $e_0 = $e2;
  }
 } while (0);
 do {
  if ((label | 0) == 5982) {
   __ZN10ClipperLib7Clipper8AddOutPtEPNS_5TEdgeERKNS_8IntPointE($this, $e1, $pt);
   HEAP32[$e2 + 100 >> 2] = HEAP32[$e1 + 100 >> 2];
   HEAP32[$e1 + 84 >> 2] = 1;
   HEAP32[$e2 + 84 >> 2] = 2;
   $3 = HEAP32[$e1 + 120 >> 2] | 0;
   if (($3 | 0) != ($e2 | 0)) {
    $prevE_0 = $3;
    $e_0 = $e1;
    break;
   }
   $prevE_0 = HEAP32[$e2 + 120 >> 2] | 0;
   $e_0 = $e1;
  }
 } while (0);
 if (($prevE_0 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 $outIdx28 = $prevE_0 + 100 | 0;
 if ((HEAP32[$outIdx28 >> 2] | 0) <= -1) {
  STACKTOP = __stackBase__;
  return;
 }
 $Y = $pt + 8 | 0;
 $9$0 = HEAP32[$Y >> 2] | 0;
 $9$1 = HEAP32[$Y + 4 >> 2] | 0;
 $ytop_i = $prevE_0 + 40 | 0;
 if ((HEAP32[$ytop_i >> 2] | 0) == ($9$0 | 0) & (HEAP32[$ytop_i + 4 >> 2] | 0) == ($9$1 | 0)) {
  $xtop_i = $prevE_0 + 32 | 0;
  $cond_i$1 = HEAP32[$xtop_i + 4 >> 2] | 0;
  $cond_i$0 = HEAP32[$xtop_i >> 2] | 0;
 } else {
  $xbot_i = $prevE_0 | 0;
  $12$0 = HEAP32[$xbot_i >> 2] | 0;
  $12$1 = HEAP32[$xbot_i + 4 >> 2] | 0;
  $13 = +HEAPF64[$prevE_0 + 48 >> 3];
  $ybot_i = $prevE_0 + 8 | 0;
  $sub_i$0 = _i64Subtract($9$0, $9$1, HEAP32[$ybot_i >> 2] | 0, HEAP32[$ybot_i + 4 >> 2] | 0) | 0;
  $mul_i = $13 * (+($sub_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0);
  if ($mul_i < 0.0) {
   $sub_sink_i_i = $mul_i + -.5;
  } else {
   $sub_sink_i_i = $mul_i + .5;
  }
  $add_i$0 = _i64Add(~~$sub_sink_i_i >>> 0, (Math_min(+Math_floor($sub_sink_i_i / 4294967296.0), 4294967295.0) | 0) >>> 0, $12$0, $12$1) | 0;
  $cond_i$1 = tempRet0;
  $cond_i$0 = $add_i$0;
 }
 $ytop_i35 = $e_0 + 40 | 0;
 if ((HEAP32[$ytop_i35 >> 2] | 0) == ($9$0 | 0) & (HEAP32[$ytop_i35 + 4 >> 2] | 0) == ($9$1 | 0)) {
  $xtop_i37 = $e_0 + 32 | 0;
  $cond_i55$1 = HEAP32[$xtop_i37 + 4 >> 2] | 0;
  $cond_i55$0 = HEAP32[$xtop_i37 >> 2] | 0;
 } else {
  $xbot_i39 = $e_0 | 0;
  $17$0 = HEAP32[$xbot_i39 >> 2] | 0;
  $17$1 = HEAP32[$xbot_i39 + 4 >> 2] | 0;
  $18 = +HEAPF64[$e_0 + 48 >> 3];
  $ybot_i41 = $e_0 + 8 | 0;
  $sub_i42$0 = _i64Subtract($9$0, $9$1, HEAP32[$ybot_i41 >> 2] | 0, HEAP32[$ybot_i41 + 4 >> 2] | 0) | 0;
  $mul_i44 = $18 * (+($sub_i42$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0);
  if ($mul_i44 < 0.0) {
   $sub_sink_i_i51 = $mul_i44 + -.5;
  } else {
   $sub_sink_i_i51 = $mul_i44 + .5;
  }
  $add_i53$0 = _i64Add(~~$sub_sink_i_i51 >>> 0, (Math_min(+Math_floor($sub_sink_i_i51 / 4294967296.0), 4294967295.0) | 0) >>> 0, $17$0, $17$1) | 0;
  $cond_i55$1 = tempRet0;
  $cond_i55$0 = $add_i53$0;
 }
 if (!(($cond_i$0 | 0) == ($cond_i55$0 | 0) & ($cond_i$1 | 0) == ($cond_i55$1 | 0))) {
  STACKTOP = __stackBase__;
  return;
 }
 $deltaY_i = $e_0 + 64 | 0;
 $32$0 = HEAP32[$deltaY_i >> 2] | 0;
 $32$1 = HEAP32[$deltaY_i + 4 >> 2] | 0;
 do {
  if ((HEAP8[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) == 0) {
   $deltaX8_i = $prevE_0 + 56 | 0;
   $mul_i58$0 = ___muldi3(HEAP32[$deltaX8_i >> 2] | 0, HEAP32[$deltaX8_i + 4 >> 2] | 0, $32$0, $32$1) | 0;
   $mul_i58$1 = tempRet0;
   $deltaX9_i = $e_0 + 56 | 0;
   $deltaY10_i = $prevE_0 + 64 | 0;
   $mul11_i$0 = ___muldi3(HEAP32[$deltaY10_i >> 2] | 0, HEAP32[$deltaY10_i + 4 >> 2] | 0, HEAP32[$deltaX9_i >> 2] | 0, HEAP32[$deltaX9_i + 4 >> 2] | 0) | 0;
   $retval_0_i = ($mul_i58$0 | 0) == ($mul11_i$0 | 0) & ($mul_i58$1 | 0) == (tempRet0 | 0);
  } else {
   $lo_i_i_i = $tmp_i + 8 | 0;
   HEAP32[$lo_i_i_i >> 2] = $32$0;
   HEAP32[$lo_i_i_i + 4 >> 2] = $32$1;
   $hi_i_i_i = $tmp_i | 0;
   HEAP32[$hi_i_i_i >> 2] = $32$1 >> 31 | (($32$1 | 0) < 0 ? -1 : 0) << 1;
   HEAP32[$hi_i_i_i + 4 >> 2] = (($32$1 | 0) < 0 ? -1 : 0) >> 31 | (($32$1 | 0) < 0 ? -1 : 0) << 1;
   $deltaX_i = $prevE_0 + 56 | 0;
   $33$1 = HEAP32[$deltaX_i + 4 >> 2] | 0;
   $lo_i_i6_i = $ref_tmp_i + 8 | 0;
   HEAP32[$lo_i_i6_i >> 2] = HEAP32[$deltaX_i >> 2];
   HEAP32[$lo_i_i6_i + 4 >> 2] = $33$1;
   $hi_i_i7_i = $ref_tmp_i | 0;
   HEAP32[$hi_i_i7_i >> 2] = $33$1 >> 31 | (($33$1 | 0) < 0 ? -1 : 0) << 1;
   HEAP32[$hi_i_i7_i + 4 >> 2] = (($33$1 | 0) < 0 ? -1 : 0) >> 31 | (($33$1 | 0) < 0 ? -1 : 0) << 1;
   __ZNK10ClipperLib6Int128mlERKS0_($tmp1_i, $tmp_i, $ref_tmp_i);
   $deltaX4_i = $e_0 + 56 | 0;
   $34$1 = HEAP32[$deltaX4_i + 4 >> 2] | 0;
   $lo_i_i12_i = $tmp3_i + 8 | 0;
   HEAP32[$lo_i_i12_i >> 2] = HEAP32[$deltaX4_i >> 2];
   HEAP32[$lo_i_i12_i + 4 >> 2] = $34$1;
   $hi_i_i13_i = $tmp3_i | 0;
   HEAP32[$hi_i_i13_i >> 2] = $34$1 >> 31 | (($34$1 | 0) < 0 ? -1 : 0) << 1;
   HEAP32[$hi_i_i13_i + 4 >> 2] = (($34$1 | 0) < 0 ? -1 : 0) >> 31 | (($34$1 | 0) < 0 ? -1 : 0) << 1;
   $deltaY6_i = $prevE_0 + 64 | 0;
   $35$1 = HEAP32[$deltaY6_i + 4 >> 2] | 0;
   $lo_i_i9_i = $ref_tmp5_i + 8 | 0;
   HEAP32[$lo_i_i9_i >> 2] = HEAP32[$deltaY6_i >> 2];
   HEAP32[$lo_i_i9_i + 4 >> 2] = $35$1;
   $hi_i_i10_i = $ref_tmp5_i | 0;
   HEAP32[$hi_i_i10_i >> 2] = $35$1 >> 31 | (($35$1 | 0) < 0 ? -1 : 0) << 1;
   HEAP32[$hi_i_i10_i + 4 >> 2] = (($35$1 | 0) < 0 ? -1 : 0) >> 31 | (($35$1 | 0) < 0 ? -1 : 0) << 1;
   __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp2_i, $tmp3_i, $ref_tmp5_i);
   $hi_i_i = $tmp1_i | 0;
   $hi2_i_i = $ref_tmp2_i | 0;
   if ((HEAP32[$hi_i_i >> 2] | 0) == (HEAP32[$hi2_i_i >> 2] | 0) & (HEAP32[$hi_i_i + 4 >> 2] | 0) == (HEAP32[$hi2_i_i + 4 >> 2] | 0)) {
    $lo_i_i = $tmp1_i + 8 | 0;
    $lo3_i_i = $ref_tmp2_i + 8 | 0;
    $retval_0_i = (HEAP32[$lo_i_i >> 2] | 0) == (HEAP32[$lo3_i_i >> 2] | 0) & (HEAP32[$lo_i_i + 4 >> 2] | 0) == (HEAP32[$lo3_i_i + 4 >> 2] | 0);
    break;
   } else {
    STACKTOP = __stackBase__;
    return;
   }
  }
 } while (0);
 if (!$retval_0_i) {
  STACKTOP = __stackBase__;
  return;
 }
 $call_i = __Znwj(80) | 0;
 $44 = $call_i;
 $X_i_i3_i_i_i = $call_i + 40 | 0;
 _memset($call_i | 0, 0, 24);
 _memset($X_i_i3_i_i_i | 0, 0, 32);
 HEAP32[$jr_i >> 2] = $44;
 HEAP32[$call_i + 32 >> 2] = HEAP32[$e_0 + 100 >> 2];
 $xcurr_i = $e_0 + 16 | 0;
 $47$1 = HEAP32[$xcurr_i + 4 >> 2] | 0;
 $ycurr_i = $e_0 + 24 | 0;
 $48$0 = HEAP32[$ycurr_i >> 2] | 0;
 $48$1 = HEAP32[$ycurr_i + 4 >> 2] | 0;
 $ref_tmp_sroa_0_0__idx_i = $call_i;
 HEAP32[$ref_tmp_sroa_0_0__idx_i >> 2] = HEAP32[$xcurr_i >> 2];
 HEAP32[$ref_tmp_sroa_0_0__idx_i + 4 >> 2] = $47$1;
 $49 = $call_i + 8 | 0;
 HEAP32[$49 >> 2] = $48$0;
 HEAP32[$49 + 4 >> 2] = $48$1;
 $xtop_i32 = $e_0 + 32 | 0;
 $50$1 = HEAP32[$xtop_i32 + 4 >> 2] | 0;
 $51$0 = HEAP32[$ytop_i35 >> 2] | 0;
 $51$1 = HEAP32[$ytop_i35 + 4 >> 2] | 0;
 $52 = $call_i + 16 | 0;
 HEAP32[$52 >> 2] = HEAP32[$xtop_i32 >> 2];
 HEAP32[$52 + 4 >> 2] = $50$1;
 $53 = $call_i + 24 | 0;
 HEAP32[$53 >> 2] = $51$0;
 HEAP32[$53 + 4 >> 2] = $51$1;
 HEAP32[$call_i + 72 >> 2] = HEAP32[$outIdx28 >> 2];
 $xcurr11_i = $prevE_0 + 16 | 0;
 $56$1 = HEAP32[$xcurr11_i + 4 >> 2] | 0;
 $ycurr12_i = $prevE_0 + 24 | 0;
 $57$0 = HEAP32[$ycurr12_i >> 2] | 0;
 $57$1 = HEAP32[$ycurr12_i + 4 >> 2] | 0;
 $58 = $X_i_i3_i_i_i;
 HEAP32[$58 >> 2] = HEAP32[$xcurr11_i >> 2];
 HEAP32[$58 + 4 >> 2] = $56$1;
 $59 = $call_i + 48 | 0;
 HEAP32[$59 >> 2] = $57$0;
 HEAP32[$59 + 4 >> 2] = $57$1;
 $xtop14_i = $prevE_0 + 32 | 0;
 $60$1 = HEAP32[$xtop14_i + 4 >> 2] | 0;
 $61$0 = HEAP32[$ytop_i >> 2] | 0;
 $61$1 = HEAP32[$ytop_i + 4 >> 2] | 0;
 $62 = $call_i + 56 | 0;
 HEAP32[$62 >> 2] = HEAP32[$xtop14_i >> 2];
 HEAP32[$62 + 4 >> 2] = $60$1;
 $63 = $call_i + 64 | 0;
 HEAP32[$63 >> 2] = $61$0;
 HEAP32[$63 + 4 >> 2] = $61$1;
 $__end__i_i = $this + 20 | 0;
 $64 = HEAP32[$__end__i_i >> 2] | 0;
 if (($64 | 0) == (HEAP32[$this + 24 >> 2] | 0)) {
  __ZNSt3__16vectorIPN10ClipperLib7JoinRecENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($this + 16 | 0, $jr_i);
  STACKTOP = __stackBase__;
  return;
 }
 if (($64 | 0) == 0) {
  $66 = 0;
 } else {
  HEAP32[$64 >> 2] = $44;
  $66 = HEAP32[$__end__i_i >> 2] | 0;
 }
 HEAP32[$__end__i_i >> 2] = $66 + 4;
 STACKTOP = __stackBase__;
 return;
}
function __ZN10ClipperLib7Clipper8AddOutPtEPNS_5TEdgeERKNS_8IntPointE($this, $e, $pt) {
 $this = $this | 0;
 $e = $e | 0;
 $pt = $pt | 0;
 var $outRec = 0, $outIdx = 0, $0 = 0, $call_i = 0, $1 = 0, $m_PolyOuts = 0, $__end__i = 0, $3 = 0, $5 = 0, $incdec_ptr_i = 0, $6 = 0, $7 = 0, $sub = 0, $idx = 0, $call7 = 0, $9 = 0, $X_i_i_i_i = 0, $10 = 0, $FirstLeft_i81 = 0, $__begin__i_i = 0, $isHole_0_off0_ph_i = 0, $e_pn_ph_i = 0, $e_pn_i = 0, $14 = 0, $lnot_i = 0, $18 = 0, $cmp = 0, $20 = 0, $pts16 = 0, $21 = 0, $X_i85 = 0, $22$0 = 0, $22$1 = 0, $X1_i86 = 0, $Y_i88 = 0, $Y2_i89 = 0, $26 = 0, $X_i = 0, $27$0 = 0, $27$1 = 0, $X1_i = 0, $Y_i = 0, $Y2_i = 0, $31$0 = 0, $31$1 = 0, $sides = 0, $32 = 0, $or = 0, $Y = 0, $Y33 = 0, $X39 = 0, $35$0 = 0, $35$1 = 0, $add$0 = 0, $sub47$0 = 0, $36 = 0, $Y65 = 0, $37$0 = 0, $37$1 = 0, $Y67 = 0, $38$0 = 0, $38$1 = 0, $Y72 = 0, $39$0 = 0, $39$1 = 0, $X76 = 0, $40$0 = 0, $40$1 = 0, $X77 = 0, $sub78$0 = 0, $sub78$1 = 0, $sub82$0 = 0, $div$0 = 0, $div$1 = 0, $X86 = 0, $sub87$0 = 0, $sub87$1 = 0, $sub92$0 = 0, $div93$0 = 0, $div93$1 = 0, $43 = 0, $44 = 0, $Y102 = 0, $45$0 = 0, $45$1 = 0, $Y104 = 0, $46$0 = 0, $46$1 = 0, $Y109 = 0, $47$0 = 0, $47$1 = 0, $X113 = 0, $48$0 = 0, $48$1 = 0, $X114 = 0, $sub115$0 = 0, $sub115$1 = 0, $sub119$0 = 0, $div120$0 = 0, $div120$1 = 0, $X124 = 0, $sub125$0 = 0, $sub125$1 = 0, $sub130$0 = 0, $div131$0 = 0, $div131$1 = 0, $call140 = 0, $51 = 0, $X_i_i_i_i80 = 0, $52 = 0, $54 = 0, $bottomPt148 = 0, $56 = 0, $Y150 = 0, $X154 = 0, $58$1 = 0, $X157 = 0, $59$1 = 0, $prev163 = 0, $61 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $outRec = __stackBase__ | 0;
 $outIdx = $e + 100 | 0;
 $0 = HEAP32[$outIdx >> 2] | 0;
 if (($0 | 0) < 0) {
  $call_i = __Znwj(32) | 0;
  $1 = $call_i;
  HEAP8[$call_i + 4 | 0] = 0;
  _memset($call_i + 8 | 0, 0, 24);
  HEAP32[$outRec >> 2] = $1;
  $m_PolyOuts = $this + 4 | 0;
  $__end__i = $this + 8 | 0;
  $3 = HEAP32[$__end__i >> 2] | 0;
  if (($3 | 0) == (HEAP32[$this + 12 >> 2] | 0)) {
   __ZNSt3__16vectorIPN10ClipperLib6OutRecENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($m_PolyOuts, $outRec);
   $7 = HEAP32[$__end__i >> 2] | 0;
   $6 = HEAP32[$outRec >> 2] | 0;
  } else {
   if (($3 | 0) == 0) {
    $5 = 0;
   } else {
    HEAP32[$3 >> 2] = $1;
    $5 = HEAP32[$__end__i >> 2] | 0;
   }
   $incdec_ptr_i = $5 + 4 | 0;
   HEAP32[$__end__i >> 2] = $incdec_ptr_i;
   $7 = $incdec_ptr_i;
   $6 = $1;
  }
  $sub = ($7 - (HEAP32[$m_PolyOuts >> 2] | 0) >> 2) - 1 | 0;
  $idx = $6 | 0;
  HEAP32[$idx >> 2] = $sub;
  HEAP32[$outIdx >> 2] = $sub;
  $call7 = __Znwj(32) | 0;
  $9 = $call7;
  $X_i_i_i_i = $call7 + 8 | 0;
  HEAP32[$6 + 16 >> 2] = $9;
  HEAP32[$6 + 20 >> 2] = $9;
  $10 = $pt;
  HEAP32[$X_i_i_i_i >> 2] = HEAP32[$10 >> 2];
  HEAP32[$X_i_i_i_i + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$X_i_i_i_i + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  HEAP32[$X_i_i_i_i + 12 >> 2] = HEAP32[$10 + 12 >> 2];
  HEAP32[$call7 >> 2] = HEAP32[$idx >> 2];
  HEAP32[$call7 + 24 >> 2] = $9;
  HEAP32[$call7 + 28 >> 2] = $9;
  $FirstLeft_i81 = $6 + 8 | 0;
  $__begin__i_i = $this + 4 | 0;
  $e_pn_ph_i = $e;
  $isHole_0_off0_ph_i = 0;
  L6920 : while (1) {
   $e_pn_i = $e_pn_ph_i;
   do {
    $e_pn_i = HEAP32[$e_pn_i + 120 >> 2] | 0;
    if (($e_pn_i | 0) == 0) {
     break L6920;
    }
    $14 = HEAP32[$e_pn_i + 100 >> 2] | 0;
   } while (($14 | 0) <= -1);
   $lnot_i = $isHole_0_off0_ph_i ^ 1;
   if ((HEAP32[$FirstLeft_i81 >> 2] | 0) != 0) {
    $e_pn_ph_i = $e_pn_i;
    $isHole_0_off0_ph_i = $lnot_i;
    continue;
   }
   HEAP32[$FirstLeft_i81 >> 2] = HEAP32[(HEAP32[$__begin__i_i >> 2] | 0) + ($14 << 2) >> 2];
   $e_pn_ph_i = $e_pn_i;
   $isHole_0_off0_ph_i = $lnot_i;
  }
  if (!$isHole_0_off0_ph_i) {
   STACKTOP = __stackBase__;
   return;
  }
  HEAP8[$6 + 4 | 0] = 1;
  STACKTOP = __stackBase__;
  return;
 }
 $18 = HEAP32[$e + 84 >> 2] | 0;
 $cmp = ($18 | 0) == 1;
 $20 = HEAP32[(HEAP32[$this + 4 >> 2] | 0) + ($0 << 2) >> 2] | 0;
 $pts16 = $20 + 16 | 0;
 $21 = HEAP32[$pts16 >> 2] | 0;
 do {
  if ($cmp) {
   $X_i85 = $pt | 0;
   $22$0 = HEAP32[$X_i85 >> 2] | 0;
   $22$1 = HEAP32[$X_i85 + 4 >> 2] | 0;
   $X1_i86 = $21 + 8 | 0;
   if (!(($22$0 | 0) == (HEAP32[$X1_i86 >> 2] | 0) & ($22$1 | 0) == (HEAP32[$X1_i86 + 4 >> 2] | 0))) {
    $31$1 = $22$1;
    $31$0 = $22$0;
    break;
   }
   $Y_i88 = $pt + 8 | 0;
   $Y2_i89 = $21 + 16 | 0;
   if (!((HEAP32[$Y_i88 >> 2] | 0) == (HEAP32[$Y2_i89 >> 2] | 0) & (HEAP32[$Y_i88 + 4 >> 2] | 0) == (HEAP32[$Y2_i89 + 4 >> 2] | 0))) {
    $31$1 = $22$1;
    $31$0 = $22$0;
    break;
   }
   STACKTOP = __stackBase__;
   return;
  } else {
   $26 = HEAP32[$21 + 28 >> 2] | 0;
   $X_i = $pt | 0;
   $27$0 = HEAP32[$X_i >> 2] | 0;
   $27$1 = HEAP32[$X_i + 4 >> 2] | 0;
   $X1_i = $26 + 8 | 0;
   if (!(($27$0 | 0) == (HEAP32[$X1_i >> 2] | 0) & ($27$1 | 0) == (HEAP32[$X1_i + 4 >> 2] | 0))) {
    $31$1 = $27$1;
    $31$0 = $27$0;
    break;
   }
   $Y_i = $pt + 8 | 0;
   $Y2_i = $26 + 16 | 0;
   if (!((HEAP32[$Y_i >> 2] | 0) == (HEAP32[$Y2_i >> 2] | 0) & (HEAP32[$Y_i + 4 >> 2] | 0) == (HEAP32[$Y2_i + 4 >> 2] | 0))) {
    $31$1 = $27$1;
    $31$0 = $27$0;
    break;
   }
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $sides = $20 + 28 | 0;
 $32 = HEAP32[$sides >> 2] | 0;
 $or = $32 | $18;
 do {
  if (($or | 0) != ($32 | 0)) {
   do {
    if (($32 | 0) == 0) {
     $Y = $pt + 8 | 0;
     $Y33 = $21 + 16 | 0;
     if (!((HEAP32[$Y >> 2] | 0) == (HEAP32[$Y33 >> 2] | 0) & (HEAP32[$Y + 4 >> 2] | 0) == (HEAP32[$Y33 + 4 >> 2] | 0))) {
      break;
     }
     $X39 = $21 + 8 | 0;
     $35$0 = HEAP32[$X39 >> 2] | 0;
     $35$1 = HEAP32[$X39 + 4 >> 2] | 0;
     if ($cmp) {
      $add$0 = _i64Add($35$0, $35$1, 1, 0) | 0;
      if (!(($31$0 | 0) == ($add$0 | 0) & ($31$1 | 0) == (tempRet0 | 0))) {
       break;
      }
      STACKTOP = __stackBase__;
      return;
     } else {
      $sub47$0 = _i64Add($35$0, $35$1, -1, -1) | 0;
      if (!(($31$0 | 0) == ($sub47$0 | 0) & ($31$1 | 0) == (tempRet0 | 0))) {
       break;
      }
      STACKTOP = __stackBase__;
      return;
     }
    }
   } while (0);
   HEAP32[$sides >> 2] = $or;
   if (($or | 0) != 3) {
    break;
   }
   if ($cmp) {
    $36 = HEAP32[$21 + 24 >> 2] | 0;
    $Y65 = $21 + 16 | 0;
    $37$0 = HEAP32[$Y65 >> 2] | 0;
    $37$1 = HEAP32[$Y65 + 4 >> 2] | 0;
    $Y67 = $36 + 16 | 0;
    $38$0 = HEAP32[$Y67 >> 2] | 0;
    $38$1 = HEAP32[$Y67 + 4 >> 2] | 0;
    if (($37$0 | 0) == ($38$0 | 0) & ($37$1 | 0) == ($38$1 | 0)) {
     break;
    }
    $Y72 = $pt + 8 | 0;
    $39$0 = HEAP32[$Y72 >> 2] | 0;
    $39$1 = HEAP32[$Y72 + 4 >> 2] | 0;
    if (($37$0 | 0) == ($39$0 | 0) & ($37$1 | 0) == ($39$1 | 0)) {
     break;
    }
    $X76 = $21 + 8 | 0;
    $40$0 = HEAP32[$X76 >> 2] | 0;
    $40$1 = HEAP32[$X76 + 4 >> 2] | 0;
    $X77 = $pt | 0;
    $sub78$0 = _i64Subtract($40$0, $40$1, HEAP32[$X77 >> 2] | 0, HEAP32[$X77 + 4 >> 2] | 0) | 0;
    $sub78$1 = tempRet0;
    $sub82$0 = _i64Subtract($37$0, $37$1, $39$0, $39$1) | 0;
    $div$0 = ___divdi3($sub78$0, $sub78$1, $sub82$0, tempRet0) | 0;
    $div$1 = tempRet0;
    $X86 = $36 + 8 | 0;
    $sub87$0 = _i64Subtract($40$0, $40$1, HEAP32[$X86 >> 2] | 0, HEAP32[$X86 + 4 >> 2] | 0) | 0;
    $sub87$1 = tempRet0;
    $sub92$0 = _i64Subtract($37$0, $37$1, $38$0, $38$1) | 0;
    $div93$0 = ___divdi3($sub87$0, $sub87$1, $sub92$0, tempRet0) | 0;
    $div93$1 = tempRet0;
    if (!(($div$1 | 0) < ($div93$1 | 0) | ($div$1 | 0) == ($div93$1 | 0) & $div$0 >>> 0 < $div93$0 >>> 0)) {
     break;
    }
    HEAP32[$20 + 24 >> 2] = $21;
    break;
   } else {
    $43 = HEAP32[$21 + 28 >> 2] | 0;
    $44 = HEAP32[$43 + 28 >> 2] | 0;
    $Y102 = $43 + 16 | 0;
    $45$0 = HEAP32[$Y102 >> 2] | 0;
    $45$1 = HEAP32[$Y102 + 4 >> 2] | 0;
    $Y104 = $44 + 16 | 0;
    $46$0 = HEAP32[$Y104 >> 2] | 0;
    $46$1 = HEAP32[$Y104 + 4 >> 2] | 0;
    if (($45$0 | 0) == ($46$0 | 0) & ($45$1 | 0) == ($46$1 | 0)) {
     break;
    }
    $Y109 = $pt + 8 | 0;
    $47$0 = HEAP32[$Y109 >> 2] | 0;
    $47$1 = HEAP32[$Y109 + 4 >> 2] | 0;
    if (($45$0 | 0) == ($47$0 | 0) & ($45$1 | 0) == ($47$1 | 0)) {
     break;
    }
    $X113 = $43 + 8 | 0;
    $48$0 = HEAP32[$X113 >> 2] | 0;
    $48$1 = HEAP32[$X113 + 4 >> 2] | 0;
    $X114 = $pt | 0;
    $sub115$0 = _i64Subtract($48$0, $48$1, HEAP32[$X114 >> 2] | 0, HEAP32[$X114 + 4 >> 2] | 0) | 0;
    $sub115$1 = tempRet0;
    $sub119$0 = _i64Subtract($45$0, $45$1, $47$0, $47$1) | 0;
    $div120$0 = ___divdi3($sub115$0, $sub115$1, $sub119$0, tempRet0) | 0;
    $div120$1 = tempRet0;
    $X124 = $44 + 8 | 0;
    $sub125$0 = _i64Subtract($48$0, $48$1, HEAP32[$X124 >> 2] | 0, HEAP32[$X124 + 4 >> 2] | 0) | 0;
    $sub125$1 = tempRet0;
    $sub130$0 = _i64Subtract($45$0, $45$1, $46$0, $46$1) | 0;
    $div131$0 = ___divdi3($sub125$0, $sub125$1, $sub130$0, tempRet0) | 0;
    $div131$1 = tempRet0;
    if (!(($div120$1 | 0) > ($div131$1 | 0) | ($div120$1 | 0) == ($div131$1 | 0) & $div120$0 >>> 0 > $div131$0 >>> 0)) {
     break;
    }
    HEAP32[$20 + 24 >> 2] = $43;
    break;
   }
  }
 } while (0);
 $call140 = __Znwj(32) | 0;
 $51 = $call140;
 $X_i_i_i_i80 = $call140 + 8 | 0;
 $52 = $pt;
 HEAP32[$X_i_i_i_i80 >> 2] = HEAP32[$52 >> 2];
 HEAP32[$X_i_i_i_i80 + 4 >> 2] = HEAP32[$52 + 4 >> 2];
 HEAP32[$X_i_i_i_i80 + 8 >> 2] = HEAP32[$52 + 8 >> 2];
 HEAP32[$X_i_i_i_i80 + 12 >> 2] = HEAP32[$52 + 12 >> 2];
 HEAP32[$call140 >> 2] = HEAP32[$20 >> 2];
 $54 = $call140 + 16 | 0;
 $bottomPt148 = $20 + 20 | 0;
 $56 = HEAP32[$bottomPt148 >> 2] | 0;
 $Y150 = $56 + 16 | 0;
 do {
  if ((HEAP32[$54 >> 2] | 0) == (HEAP32[$Y150 >> 2] | 0) & (HEAP32[$54 + 4 >> 2] | 0) == (HEAP32[$Y150 + 4 >> 2] | 0)) {
   $X154 = $X_i_i_i_i80;
   $58$1 = HEAP32[$X154 + 4 >> 2] | 0;
   $X157 = $56 + 8 | 0;
   $59$1 = HEAP32[$X157 + 4 >> 2] | 0;
   if (!(($58$1 | 0) < ($59$1 | 0) | ($58$1 | 0) == ($59$1 | 0) & (HEAP32[$X154 >> 2] | 0) >>> 0 < (HEAP32[$X157 >> 2] | 0) >>> 0)) {
    break;
   }
   HEAP32[$bottomPt148 >> 2] = $51;
  }
 } while (0);
 HEAP32[$call140 + 24 >> 2] = $21;
 $prev163 = $21 + 28 | 0;
 $61 = HEAP32[$prev163 >> 2] | 0;
 HEAP32[$call140 + 28 >> 2] = $61;
 HEAP32[$61 + 24 >> 2] = $51;
 HEAP32[$prev163 >> 2] = $51;
 if (!$cmp) {
  STACKTOP = __stackBase__;
  return;
 }
 HEAP32[$pts16 >> 2] = $51;
 STACKTOP = __stackBase__;
 return;
}
function __ZN10ClipperLib7Clipper7AddJoinEPNS_5TEdgeES2_ii($this, $e1, $e2, $e1OutIdx, $e2OutIdx) {
 $this = $this | 0;
 $e1 = $e1 | 0;
 $e2 = $e2 | 0;
 $e1OutIdx = $e1OutIdx | 0;
 $e2OutIdx = $e2OutIdx | 0;
 var $jr = 0, $call = 0, $0 = 0, $xcurr = 0, $4$1 = 0, $ycurr = 0, $5$0 = 0, $5$1 = 0, $ref_tmp_sroa_0_0__idx = 0, $6 = 0, $xtop = 0, $7$1 = 0, $ytop = 0, $8$0 = 0, $8$1 = 0, $9 = 0, $10 = 0, $xcurr11 = 0, $14$1 = 0, $ycurr12 = 0, $15$0 = 0, $15$1 = 0, $16 = 0, $17 = 0, $xtop14 = 0, $18$1 = 0, $ytop15 = 0, $19$0 = 0, $19$1 = 0, $20 = 0, $21 = 0, $__end__i = 0, $22 = 0, $24 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $jr = __stackBase__ | 0;
 $call = __Znwj(80) | 0;
 $0 = $call;
 _memset($call | 0, 0, 32);
 _memset($call + 40 | 0, 0, 32);
 HEAP32[$jr >> 2] = $0;
 if (($e1OutIdx | 0) > -1) {
  HEAP32[$call + 32 >> 2] = $e1OutIdx;
 } else {
  HEAP32[$call + 32 >> 2] = HEAP32[$e1 + 100 >> 2];
 }
 $xcurr = $e1 + 16 | 0;
 $4$1 = HEAP32[$xcurr + 4 >> 2] | 0;
 $ycurr = $e1 + 24 | 0;
 $5$0 = HEAP32[$ycurr >> 2] | 0;
 $5$1 = HEAP32[$ycurr + 4 >> 2] | 0;
 $ref_tmp_sroa_0_0__idx = $call;
 HEAP32[$ref_tmp_sroa_0_0__idx >> 2] = HEAP32[$xcurr >> 2];
 HEAP32[$ref_tmp_sroa_0_0__idx + 4 >> 2] = $4$1;
 $6 = $call + 8 | 0;
 HEAP32[$6 >> 2] = $5$0;
 HEAP32[$6 + 4 >> 2] = $5$1;
 $xtop = $e1 + 32 | 0;
 $7$1 = HEAP32[$xtop + 4 >> 2] | 0;
 $ytop = $e1 + 40 | 0;
 $8$0 = HEAP32[$ytop >> 2] | 0;
 $8$1 = HEAP32[$ytop + 4 >> 2] | 0;
 $9 = $call + 16 | 0;
 HEAP32[$9 >> 2] = HEAP32[$xtop >> 2];
 HEAP32[$9 + 4 >> 2] = $7$1;
 $10 = $call + 24 | 0;
 HEAP32[$10 >> 2] = $8$0;
 HEAP32[$10 + 4 >> 2] = $8$1;
 if (($e2OutIdx | 0) > -1) {
  HEAP32[$call + 72 >> 2] = $e2OutIdx;
 } else {
  HEAP32[$call + 72 >> 2] = HEAP32[$e2 + 100 >> 2];
 }
 $xcurr11 = $e2 + 16 | 0;
 $14$1 = HEAP32[$xcurr11 + 4 >> 2] | 0;
 $ycurr12 = $e2 + 24 | 0;
 $15$0 = HEAP32[$ycurr12 >> 2] | 0;
 $15$1 = HEAP32[$ycurr12 + 4 >> 2] | 0;
 $16 = $call + 40 | 0;
 HEAP32[$16 >> 2] = HEAP32[$xcurr11 >> 2];
 HEAP32[$16 + 4 >> 2] = $14$1;
 $17 = $call + 48 | 0;
 HEAP32[$17 >> 2] = $15$0;
 HEAP32[$17 + 4 >> 2] = $15$1;
 $xtop14 = $e2 + 32 | 0;
 $18$1 = HEAP32[$xtop14 + 4 >> 2] | 0;
 $ytop15 = $e2 + 40 | 0;
 $19$0 = HEAP32[$ytop15 >> 2] | 0;
 $19$1 = HEAP32[$ytop15 + 4 >> 2] | 0;
 $20 = $call + 56 | 0;
 HEAP32[$20 >> 2] = HEAP32[$xtop14 >> 2];
 HEAP32[$20 + 4 >> 2] = $18$1;
 $21 = $call + 64 | 0;
 HEAP32[$21 >> 2] = $19$0;
 HEAP32[$21 + 4 >> 2] = $19$1;
 $__end__i = $this + 20 | 0;
 $22 = HEAP32[$__end__i >> 2] | 0;
 if (($22 | 0) == (HEAP32[$this + 24 >> 2] | 0)) {
  __ZNSt3__16vectorIPN10ClipperLib7JoinRecENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($this + 16 | 0, $jr);
  STACKTOP = __stackBase__;
  return;
 }
 if (($22 | 0) == 0) {
  $24 = 0;
 } else {
  HEAP32[$22 >> 2] = $0;
  $24 = HEAP32[$__end__i >> 2] | 0;
 }
 HEAP32[$__end__i >> 2] = $24 + 4;
 STACKTOP = __stackBase__;
 return;
}
function __ZN10ClipperLib7Clipper13AppendPolygonEPNS_5TEdgeES2_($this, $e1, $e2) {
 $this = $this | 0;
 $e1 = $e1 | 0;
 $e2 = $e2 | 0;
 var $outIdx = 0, $1 = 0, $2 = 0, $outIdx3 = 0, $4 = 0, $outRec1_addr_0_i = 0, $5 = 0, $outRec1_addr_0_i94 = 0, $6 = 0, $7 = 0, $8 = 0, $Y_i = 0, $9$0 = 0, $9$1 = 0, $Y3_i = 0, $10$0 = 0, $10$1 = 0, $X_i = 0, $11$0 = 0, $11$1 = 0, $X13_i = 0, $12$0 = 0, $12$1 = 0, $holeStateRec_0 = 0, $pts = 0, $15 = 0, $prev = 0, $16 = 0, $pts11 = 0, $17 = 0, $prev12 = 0, $18 = 0, $20 = 0, $21 = 0, $pp1_0_i85 = 0, $next_i86 = 0, $22 = 0, $storemerge = 0, $23 = 0, $pp1_0_i = 0, $next_i = 0, $24 = 0, $side_0 = 0, $bottomPt = 0, $25 = 0, $27 = 0, $30 = 0, $31 = 0, $e_0_in = 0, $e_0 = 0, $outIdx63 = 0, $__end__i138 = 0, $__begin__i139 = 0, $34 = 0, $__end__i = 0, $35 = 0, $__begin__i115 = 0, $36 = 0, $37 = 0, $i_0113 = 0, $38 = 0, $poly1Idx = 0, $_pre118 = 0, $40 = 0, $41 = 0, $poly2Idx = 0, $43 = 0, $inc = 0, $45 = 0, $46 = 0, $i87_0107 = 0, $savedIdx = 0, $49 = 0, $50 = 0, $inc101 = 0, label = 0;
 $outIdx = $e1 + 100 | 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = HEAP32[$1 + (HEAP32[$outIdx >> 2] << 2) >> 2] | 0;
 $outIdx3 = $e2 + 100 | 0;
 $4 = HEAP32[$1 + (HEAP32[$outIdx3 >> 2] << 2) >> 2] | 0;
 $outRec1_addr_0_i = $2;
 while (1) {
  $5 = HEAP32[$outRec1_addr_0_i + 8 >> 2] | 0;
  if (($5 | 0) == ($4 | 0)) {
   $holeStateRec_0 = $4;
   break;
  }
  if (($5 | 0) == 0) {
   $outRec1_addr_0_i94 = $4;
   label = 6085;
   break;
  } else {
   $outRec1_addr_0_i = $5;
  }
 }
 L6992 : do {
  if ((label | 0) == 6085) {
   while (1) {
    label = 0;
    $6 = HEAP32[$outRec1_addr_0_i94 + 8 >> 2] | 0;
    if (($6 | 0) == ($2 | 0)) {
     $holeStateRec_0 = $2;
     break L6992;
    }
    if (($6 | 0) == 0) {
     break;
    } else {
     $outRec1_addr_0_i94 = $6;
     label = 6085;
    }
   }
   $7 = HEAP32[$2 + 20 >> 2] | 0;
   $8 = HEAP32[$4 + 20 >> 2] | 0;
   $Y_i = $7 + 16 | 0;
   $9$0 = HEAP32[$Y_i >> 2] | 0;
   $9$1 = HEAP32[$Y_i + 4 >> 2] | 0;
   $Y3_i = $8 + 16 | 0;
   $10$0 = HEAP32[$Y3_i >> 2] | 0;
   $10$1 = HEAP32[$Y3_i + 4 >> 2] | 0;
   if (($9$1 | 0) > ($10$1 | 0) | ($9$1 | 0) == ($10$1 | 0) & $9$0 >>> 0 > $10$0 >>> 0) {
    $holeStateRec_0 = $2;
    break;
   }
   if (($9$1 | 0) < ($10$1 | 0) | ($9$1 | 0) == ($10$1 | 0) & $9$0 >>> 0 < $10$0 >>> 0) {
    $holeStateRec_0 = $4;
    break;
   }
   $X_i = $7 + 8 | 0;
   $11$0 = HEAP32[$X_i >> 2] | 0;
   $11$1 = HEAP32[$X_i + 4 >> 2] | 0;
   $X13_i = $8 + 8 | 0;
   $12$0 = HEAP32[$X13_i >> 2] | 0;
   $12$1 = HEAP32[$X13_i + 4 >> 2] | 0;
   if (($11$1 | 0) < ($12$1 | 0) | ($11$1 | 0) == ($12$1 | 0) & $11$0 >>> 0 < $12$0 >>> 0) {
    $holeStateRec_0 = $2;
    break;
   }
   if (($11$1 | 0) > ($12$1 | 0) | ($11$1 | 0) == ($12$1 | 0) & $11$0 >>> 0 > $12$0 >>> 0) {
    $holeStateRec_0 = $4;
    break;
   }
   if ((HEAP32[$7 + 24 >> 2] | 0) == ($7 | 0)) {
    $holeStateRec_0 = $4;
    break;
   }
   if ((HEAP32[$8 + 24 >> 2] | 0) == ($8 | 0)) {
    $holeStateRec_0 = $2;
    break;
   }
   $holeStateRec_0 = __ZN10ClipperLib15FirstIsBottomPtEPKNS_5OutPtES2_($7, $8) | 0 ? $2 : $4;
  }
 } while (0);
 $pts = $2 + 16 | 0;
 $15 = HEAP32[$pts >> 2] | 0;
 $prev = $15 + 28 | 0;
 $16 = HEAP32[$prev >> 2] | 0;
 $pts11 = $4 + 16 | 0;
 $17 = HEAP32[$pts11 >> 2] | 0;
 $prev12 = $17 + 28 | 0;
 $18 = HEAP32[$prev12 >> 2] | 0;
 $20 = HEAP32[$e2 + 84 >> 2] | 0;
 do {
  if ((HEAP32[$e1 + 84 >> 2] | 0) == 1) {
   if (($20 | 0) == 1) {
    L7009 : do {
     if (($17 | 0) != 0) {
      $pp1_0_i85 = $17;
      $21 = $18;
      while (1) {
       $next_i86 = $pp1_0_i85 + 24 | 0;
       $22 = HEAP32[$next_i86 >> 2] | 0;
       HEAP32[$next_i86 >> 2] = $21;
       HEAP32[$pp1_0_i85 + 28 >> 2] = $22;
       if (($22 | 0) == ($17 | 0)) {
        break L7009;
       }
       $pp1_0_i85 = $22;
       $21 = HEAP32[$22 + 28 >> 2] | 0;
      }
     }
    } while (0);
    HEAP32[$17 + 24 >> 2] = $15;
    HEAP32[$prev >> 2] = $17;
    HEAP32[$16 + 24 >> 2] = $18;
    HEAP32[$18 + 28 >> 2] = $16;
    $storemerge = $18;
   } else {
    HEAP32[$18 + 24 >> 2] = $15;
    HEAP32[$prev >> 2] = $18;
    HEAP32[$prev12 >> 2] = $16;
    HEAP32[$16 + 24 >> 2] = $17;
    $storemerge = $17;
   }
   HEAP32[$pts >> 2] = $storemerge;
   $side_0 = 1;
  } else {
   if (($20 | 0) != 2) {
    HEAP32[$16 + 24 >> 2] = $17;
    HEAP32[$prev12 >> 2] = $16;
    HEAP32[$prev >> 2] = $18;
    HEAP32[$18 + 24 >> 2] = $15;
    $side_0 = 2;
    break;
   }
   L7019 : do {
    if (($17 | 0) != 0) {
     $pp1_0_i = $17;
     $23 = $18;
     while (1) {
      $next_i = $pp1_0_i + 24 | 0;
      $24 = HEAP32[$next_i >> 2] | 0;
      HEAP32[$next_i >> 2] = $23;
      HEAP32[$pp1_0_i + 28 >> 2] = $24;
      if (($24 | 0) == ($17 | 0)) {
       break L7019;
      }
      $pp1_0_i = $24;
      $23 = HEAP32[$24 + 28 >> 2] | 0;
     }
    }
   } while (0);
   HEAP32[$16 + 24 >> 2] = $18;
   HEAP32[$18 + 28 >> 2] = $16;
   HEAP32[$17 + 24 >> 2] = $15;
   HEAP32[$prev >> 2] = $17;
   $side_0 = 2;
  }
 } while (0);
 $bottomPt = $4 + 20 | 0;
 if (($holeStateRec_0 | 0) == ($4 | 0)) {
  $25 = HEAP32[$bottomPt >> 2] | 0;
  HEAP32[$2 + 20 >> 2] = $25;
  HEAP32[$25 >> 2] = HEAP32[$2 >> 2];
  $27 = HEAP32[$4 + 8 >> 2] | 0;
  if (($27 | 0) != ($2 | 0)) {
   HEAP32[$2 + 8 >> 2] = $27;
  }
  HEAP8[$2 + 4 | 0] = HEAP8[$4 + 4 | 0] & 1;
 }
 HEAP32[$pts11 >> 2] = 0;
 HEAP32[$bottomPt >> 2] = 0;
 HEAP32[$4 + 12 >> 2] = $2;
 $30 = HEAP32[$outIdx >> 2] | 0;
 $31 = HEAP32[$outIdx3 >> 2] | 0;
 HEAP32[$outIdx >> 2] = -1;
 HEAP32[$outIdx3 >> 2] = -1;
 $e_0_in = $this + 48 | 0;
 while (1) {
  $e_0 = HEAP32[$e_0_in >> 2] | 0;
  if (($e_0 | 0) == 0) {
   break;
  }
  $outIdx63 = $e_0 + 100 | 0;
  if ((HEAP32[$outIdx63 >> 2] | 0) == ($31 | 0)) {
   label = 6115;
   break;
  } else {
   $e_0_in = $e_0 + 116 | 0;
  }
 }
 if ((label | 0) == 6115) {
  HEAP32[$outIdx63 >> 2] = $30;
  HEAP32[$e_0 + 84 >> 2] = $side_0;
 }
 $__end__i138 = $this + 20 | 0;
 $__begin__i139 = $this + 16 | 0;
 $34 = HEAP32[$__begin__i139 >> 2] | 0;
 if ((HEAP32[$__end__i138 >> 2] | 0) != ($34 | 0)) {
  $i_0113 = 0;
  $37 = $34;
  while (1) {
   $38 = HEAP32[$37 + ($i_0113 << 2) >> 2] | 0;
   $poly1Idx = $38 + 32 | 0;
   if ((HEAP32[$poly1Idx >> 2] | 0) == ($31 | 0)) {
    HEAP32[$poly1Idx >> 2] = $30;
    $_pre118 = HEAP32[$__begin__i139 >> 2] | 0;
    $41 = $_pre118;
    $40 = HEAP32[$_pre118 + ($i_0113 << 2) >> 2] | 0;
   } else {
    $41 = $37;
    $40 = $38;
   }
   $poly2Idx = $40 + 72 | 0;
   if ((HEAP32[$poly2Idx >> 2] | 0) == ($31 | 0)) {
    HEAP32[$poly2Idx >> 2] = $30;
    $43 = HEAP32[$__begin__i139 >> 2] | 0;
   } else {
    $43 = $41;
   }
   $inc = $i_0113 + 1 | 0;
   if ($inc >>> 0 < (HEAP32[$__end__i138 >> 2] | 0) - $43 >> 2 >>> 0) {
    $i_0113 = $inc;
    $37 = $43;
   } else {
    break;
   }
  }
 }
 $__end__i = $this + 32 | 0;
 $35 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i115 = $this + 28 | 0;
 $36 = HEAP32[$__begin__i115 >> 2] | 0;
 if (($35 | 0) == ($36 | 0)) {
  return;
 } else {
  $i87_0107 = 0;
  $46 = $36;
  $45 = $35;
 }
 while (1) {
  $savedIdx = (HEAP32[$46 + ($i87_0107 << 2) >> 2] | 0) + 4 | 0;
  if ((HEAP32[$savedIdx >> 2] | 0) == ($31 | 0)) {
   HEAP32[$savedIdx >> 2] = $30;
   $50 = HEAP32[$__end__i >> 2] | 0;
   $49 = HEAP32[$__begin__i115 >> 2] | 0;
  } else {
   $50 = $45;
   $49 = $46;
  }
  $inc101 = $i87_0107 + 1 | 0;
  if ($inc101 >>> 0 < $50 - $49 >> 2 >>> 0) {
   $i87_0107 = $inc101;
   $46 = $49;
   $45 = $50;
  } else {
   break;
  }
 }
 return;
}
function __ZN10ClipperLib7Clipper14IntersectEdgesEPNS_5TEdgeES2_RKNS_8IntPointENS_17IntersectProtectsE($this, $e1, $e2, $pt, $protects) {
 $this = $this | 0;
 $e1 = $e1 | 0;
 $e2 = $e2 | 0;
 $pt = $pt | 0;
 $protects = $protects | 0;
 var $xtop = 0, $X = 0, $ytop = 0, $Y = 0, $_off0 = 0, $xtop11 = 0, $X12 = 0, $ytop15 = 0, $Y16 = 0, $_off0131 = 0, $outIdx = 0, $cmp20 = 0, $outIdx22 = 0, $11 = 0, $polyType = 0, $12 = 0, $polyType25 = 0, $13 = 0, $windCnt = 0, $14 = 0, $windCnt28 = 0, $add = 0, $windCnt40 = 0, $17 = 0, $18 = 0, $m_SubjFillType_i167 = 0, $m_ClipFillType_i168 = 0, $windCnt2 = 0, $windCnt260 = 0, $windCnt267 = 0, $windCnt270 = 0, $25 = 0, $cmp77 = 0, $e1FillType_0_in = 0, $e1FillType2_0_in = 0, $e1FillType2_0 = 0, $e1FillType_0 = 0, $26 = 0, $cmp84 = 0, $e2FillType_0_in = 0, $e2FillType2_0_in = 0, $e2FillType2_0 = 0, $e2FillType_0 = 0, $27 = 0, $sub95 = 0, $29 = 0, $conv98$0 = 0, $conv98$1 = 0, $cmp_i179 = 0, $sub_i$0 = 0, $e1Wc_0$0 = 0, $e1Wc_0$1 = 0, $30 = 0, $sub105 = 0, $32 = 0, $conv109$0 = 0, $conv109$1 = 0, $cmp_i180 = 0, $sub_i181$0 = 0, $e2Wc_0$0 = 0, $e2Wc_0$1 = 0, $tobool114 = 0, $$etemp$18$1 = 0, $$etemp$19$1 = 0, $36 = 0, $37 = 0, $side1_i_i = 0, $38 = 0, $side2_i_i = 0, $40 = 0, $$etemp$20$1 = 0, $side1_i_i186 = 0, $45 = 0, $side2_i_i187 = 0, $47 = 0, $$etemp$21$1 = 0, $49 = 0, $side1_i_i190 = 0, $52 = 0, $side2_i_i191 = 0, $54 = 0, $$etemp$22$1 = 0, $56 = 0, $sub187 = 0, $58 = 0, $conv191$0 = 0, $conv191$1 = 0, $cmp_i194 = 0, $sub_i195$0 = 0, $e1Wc2_0$0 = 0, $e1Wc2_0$1 = 0, $59 = 0, $sub199 = 0, $61 = 0, $conv203$0 = 0, $conv203$1 = 0, $cmp_i197 = 0, $sub_i198$0 = 0, $e2Wc2_0$0 = 0, $e2Wc2_0$1 = 0, $62 = 0, $$etemp$27$1 = 0, $$etemp$28$1 = 0, $$etemp$29$1 = 0, $$etemp$30$1 = 0, $$etemp$31$1 = 0, $$etemp$32$1 = 0, $$etemp$33$1 = 0, $$etemp$34$1 = 0, $side1_i163 = 0, $63 = 0, $side2_i164 = 0, $side1_i = 0, $67 = 0, $side2_i = 0, $69 = 0, $prevInAEL_i144 = 0, $71 = 0, $nextInAEL_i145 = 0, $72 = 0, $tobool_i146 = 0, $tobool2_i148 = 0, $prevInAEL_i = 0, $74 = 0, $nextInAEL_i = 0, $75 = 0, $tobool_i = 0, $tobool2_i = 0, label = 0;
 do {
  if (($protects & 1 | 0) == 0) {
   if ((HEAP32[$e1 + 112 >> 2] | 0) != 0) {
    $_off0 = 0;
    break;
   }
   $xtop = $e1 + 32 | 0;
   $X = $pt | 0;
   if (!((HEAP32[$xtop >> 2] | 0) == (HEAP32[$X >> 2] | 0) & (HEAP32[$xtop + 4 >> 2] | 0) == (HEAP32[$X + 4 >> 2] | 0))) {
    $_off0 = 0;
    break;
   }
   $ytop = $e1 + 40 | 0;
   $Y = $pt + 8 | 0;
   $_off0 = (HEAP32[$ytop >> 2] | 0) == (HEAP32[$Y >> 2] | 0) & (HEAP32[$ytop + 4 >> 2] | 0) == (HEAP32[$Y + 4 >> 2] | 0);
  } else {
   $_off0 = 0;
  }
 } while (0);
 do {
  if (($protects & 2 | 0) == 0) {
   if ((HEAP32[$e2 + 112 >> 2] | 0) != 0) {
    $_off0131 = 0;
    break;
   }
   $xtop11 = $e2 + 32 | 0;
   $X12 = $pt | 0;
   if (!((HEAP32[$xtop11 >> 2] | 0) == (HEAP32[$X12 >> 2] | 0) & (HEAP32[$xtop11 + 4 >> 2] | 0) == (HEAP32[$X12 + 4 >> 2] | 0))) {
    $_off0131 = 0;
    break;
   }
   $ytop15 = $e2 + 40 | 0;
   $Y16 = $pt + 8 | 0;
   $_off0131 = (HEAP32[$ytop15 >> 2] | 0) == (HEAP32[$Y16 >> 2] | 0) & (HEAP32[$ytop15 + 4 >> 2] | 0) == (HEAP32[$Y16 + 4 >> 2] | 0);
  } else {
   $_off0131 = 0;
  }
 } while (0);
 $outIdx = $e1 + 100 | 0;
 $cmp20 = (HEAP32[$outIdx >> 2] | 0) > -1;
 $outIdx22 = $e2 + 100 | 0;
 $11 = HEAP32[$outIdx22 >> 2] | 0;
 $polyType = $e1 + 80 | 0;
 $12 = HEAP32[$polyType >> 2] | 0;
 $polyType25 = $e2 + 80 | 0;
 $13 = HEAP32[$polyType25 >> 2] | 0;
 do {
  if (($12 | 0) == ($13 | 0)) {
   $windCnt = $e1 + 92 | 0;
   $14 = HEAP32[$windCnt >> 2] | 0;
   if ((HEAP32[(($12 | 0) == 0 ? $this + 68 | 0 : $this + 64 | 0) >> 2] | 0) == 0) {
    $windCnt28 = $e2 + 92 | 0;
    HEAP32[$windCnt >> 2] = HEAP32[$windCnt28 >> 2];
    HEAP32[$windCnt28 >> 2] = $14;
    break;
   }
   $add = (HEAP32[$e2 + 88 >> 2] | 0) + $14 | 0;
   HEAP32[$windCnt >> 2] = ($add | 0) == 0 ? -$14 | 0 : $add;
   $windCnt40 = $e2 + 92 | 0;
   $17 = HEAP32[$windCnt40 >> 2] | 0;
   $18 = HEAP32[$e1 + 88 >> 2] | 0;
   if (($17 | 0) == ($18 | 0)) {
    HEAP32[$windCnt40 >> 2] = -$17;
    break;
   } else {
    HEAP32[$windCnt40 >> 2] = $17 - $18;
    break;
   }
  } else {
   $m_SubjFillType_i167 = $this + 68 | 0;
   $m_ClipFillType_i168 = $this + 64 | 0;
   if ((HEAP32[(($13 | 0) == 0 ? $m_SubjFillType_i167 : $m_ClipFillType_i168) >> 2] | 0) == 0) {
    $windCnt260 = $e1 + 96 | 0;
    HEAP32[$windCnt260 >> 2] = (HEAP32[$windCnt260 >> 2] | 0) == 0 & 1;
   } else {
    $windCnt2 = $e1 + 96 | 0;
    HEAP32[$windCnt2 >> 2] = (HEAP32[$windCnt2 >> 2] | 0) + (HEAP32[$e2 + 88 >> 2] | 0);
   }
   if ((HEAP32[(($12 | 0) == 0 ? $m_SubjFillType_i167 : $m_ClipFillType_i168) >> 2] | 0) == 0) {
    $windCnt270 = $e2 + 96 | 0;
    HEAP32[$windCnt270 >> 2] = (HEAP32[$windCnt270 >> 2] | 0) == 0 & 1;
    break;
   } else {
    $windCnt267 = $e2 + 96 | 0;
    HEAP32[$windCnt267 >> 2] = (HEAP32[$windCnt267 >> 2] | 0) - (HEAP32[$e1 + 88 >> 2] | 0);
    break;
   }
  }
 } while (0);
 $25 = HEAP32[$polyType >> 2] | 0;
 $cmp77 = ($25 | 0) == 0;
 if ($cmp77) {
  $e1FillType2_0_in = $this + 64 | 0;
  $e1FillType_0_in = $this + 68 | 0;
 } else {
  $e1FillType2_0_in = $this + 68 | 0;
  $e1FillType_0_in = $this + 64 | 0;
 }
 $e1FillType2_0 = HEAP32[$e1FillType2_0_in >> 2] | 0;
 $e1FillType_0 = HEAP32[$e1FillType_0_in >> 2] | 0;
 $26 = HEAP32[$polyType25 >> 2] | 0;
 $cmp84 = ($26 | 0) == 0;
 if ($cmp84) {
  $e2FillType2_0_in = $this + 64 | 0;
  $e2FillType_0_in = $this + 68 | 0;
 } else {
  $e2FillType2_0_in = $this + 68 | 0;
  $e2FillType_0_in = $this + 64 | 0;
 }
 $e2FillType2_0 = HEAP32[$e2FillType2_0_in >> 2] | 0;
 $e2FillType_0 = HEAP32[$e2FillType_0_in >> 2] | 0;
 if (($e1FillType_0 | 0) == 3) {
  $sub95 = -(HEAP32[$e1 + 92 >> 2] | 0) | 0;
  $e1Wc_0$1 = ($sub95 | 0) < 0 ? -1 : 0;
  $e1Wc_0$0 = $sub95;
 } else if (($e1FillType_0 | 0) == 2) {
  $27 = HEAP32[$e1 + 92 >> 2] | 0;
  $e1Wc_0$1 = ($27 | 0) < 0 ? -1 : 0;
  $e1Wc_0$0 = $27;
 } else {
  $29 = HEAP32[$e1 + 92 >> 2] | 0;
  $conv98$0 = $29;
  $conv98$1 = ($29 | 0) < 0 ? -1 : 0;
  $cmp_i179 = ($29 | 0) < 0;
  $sub_i$0 = _i64Subtract(0, 0, $conv98$0, $conv98$1) | 0;
  $e1Wc_0$1 = $cmp_i179 ? tempRet0 : $conv98$1;
  $e1Wc_0$0 = $cmp_i179 ? $sub_i$0 : $conv98$0;
 }
 if (($e2FillType_0 | 0) == 3) {
  $sub105 = -(HEAP32[$e2 + 92 >> 2] | 0) | 0;
  $e2Wc_0$1 = ($sub105 | 0) < 0 ? -1 : 0;
  $e2Wc_0$0 = $sub105;
 } else if (($e2FillType_0 | 0) == 2) {
  $30 = HEAP32[$e2 + 92 >> 2] | 0;
  $e2Wc_0$1 = ($30 | 0) < 0 ? -1 : 0;
  $e2Wc_0$0 = $30;
 } else {
  $32 = HEAP32[$e2 + 92 >> 2] | 0;
  $conv109$0 = $32;
  $conv109$1 = ($32 | 0) < 0 ? -1 : 0;
  $cmp_i180 = ($32 | 0) < 0;
  $sub_i181$0 = _i64Subtract(0, 0, $conv109$0, $conv109$1) | 0;
  $e2Wc_0$1 = $cmp_i180 ? tempRet0 : $conv109$1;
  $e2Wc_0$0 = $cmp_i180 ? $sub_i181$0 : $conv109$0;
 }
 $tobool114 = ($11 | 0) < 0;
 L7101 : do {
  if ($tobool114 | $cmp20 ^ 1) {
   if ($cmp20) {
    $$etemp$20$1 = 0;
    if (!($e2Wc_0$1 >>> 0 < $$etemp$20$1 >>> 0 | $e2Wc_0$1 >>> 0 == $$etemp$20$1 >>> 0 & $e2Wc_0$0 >>> 0 < 2 >>> 0)) {
     break;
    }
    if (!((HEAP32[$this + 40 >> 2] | 0) != 0 | $cmp84)) {
     if ((HEAP32[$e2 + 96 >> 2] | 0) == 0) {
      break;
     }
    }
    __ZN10ClipperLib7Clipper8AddOutPtEPNS_5TEdgeERKNS_8IntPointE($this, $e1, $pt);
    $side1_i_i186 = $e1 + 84 | 0;
    $45 = HEAP32[$side1_i_i186 >> 2] | 0;
    $side2_i_i187 = $e2 + 84 | 0;
    HEAP32[$side1_i_i186 >> 2] = HEAP32[$side2_i_i187 >> 2];
    HEAP32[$side2_i_i187 >> 2] = $45;
    $47 = HEAP32[$outIdx >> 2] | 0;
    HEAP32[$outIdx >> 2] = HEAP32[$outIdx22 >> 2];
    HEAP32[$outIdx22 >> 2] = $47;
    break;
   }
   $$etemp$21$1 = 0;
   $49 = $e1Wc_0$1 >>> 0 < $$etemp$21$1 >>> 0 | $e1Wc_0$1 >>> 0 == $$etemp$21$1 >>> 0 & $e1Wc_0$0 >>> 0 < 2 >>> 0;
   if (!$tobool114) {
    if (!$49) {
     break;
    }
    if (!((HEAP32[$this + 40 >> 2] | 0) != 0 | $cmp77)) {
     if ((HEAP32[$e1 + 96 >> 2] | 0) == 0) {
      break;
     }
    }
    __ZN10ClipperLib7Clipper8AddOutPtEPNS_5TEdgeERKNS_8IntPointE($this, $e2, $pt);
    $side1_i_i190 = $e1 + 84 | 0;
    $52 = HEAP32[$side1_i_i190 >> 2] | 0;
    $side2_i_i191 = $e2 + 84 | 0;
    HEAP32[$side1_i_i190 >> 2] = HEAP32[$side2_i_i191 >> 2];
    HEAP32[$side2_i_i191 >> 2] = $52;
    $54 = HEAP32[$outIdx >> 2] | 0;
    HEAP32[$outIdx >> 2] = HEAP32[$outIdx22 >> 2];
    HEAP32[$outIdx22 >> 2] = $54;
    break;
   }
   if (!$49) {
    break;
   }
   $$etemp$22$1 = 0;
   if ($e2Wc_0$1 >>> 0 > $$etemp$22$1 >>> 0 | $e2Wc_0$1 >>> 0 == $$etemp$22$1 >>> 0 & $e2Wc_0$0 >>> 0 > 1 >>> 0 | $_off0 | $_off0131) {
    break;
   }
   if (($e1FillType2_0 | 0) == 2) {
    $56 = HEAP32[$e1 + 96 >> 2] | 0;
    $e1Wc2_0$1 = ($56 | 0) < 0 ? -1 : 0;
    $e1Wc2_0$0 = $56;
   } else if (($e1FillType2_0 | 0) == 3) {
    $sub187 = -(HEAP32[$e1 + 96 >> 2] | 0) | 0;
    $e1Wc2_0$1 = ($sub187 | 0) < 0 ? -1 : 0;
    $e1Wc2_0$0 = $sub187;
   } else {
    $58 = HEAP32[$e1 + 96 >> 2] | 0;
    $conv191$0 = $58;
    $conv191$1 = ($58 | 0) < 0 ? -1 : 0;
    $cmp_i194 = ($58 | 0) < 0;
    $sub_i195$0 = _i64Subtract(0, 0, $conv191$0, $conv191$1) | 0;
    $e1Wc2_0$1 = $cmp_i194 ? tempRet0 : $conv191$1;
    $e1Wc2_0$0 = $cmp_i194 ? $sub_i195$0 : $conv191$0;
   }
   if (($e2FillType2_0 | 0) == 3) {
    $sub199 = -(HEAP32[$e2 + 96 >> 2] | 0) | 0;
    $e2Wc2_0$1 = ($sub199 | 0) < 0 ? -1 : 0;
    $e2Wc2_0$0 = $sub199;
   } else if (($e2FillType2_0 | 0) == 2) {
    $59 = HEAP32[$e2 + 96 >> 2] | 0;
    $e2Wc2_0$1 = ($59 | 0) < 0 ? -1 : 0;
    $e2Wc2_0$0 = $59;
   } else {
    $61 = HEAP32[$e2 + 96 >> 2] | 0;
    $conv203$0 = $61;
    $conv203$1 = ($61 | 0) < 0 ? -1 : 0;
    $cmp_i197 = ($61 | 0) < 0;
    $sub_i198$0 = _i64Subtract(0, 0, $conv203$0, $conv203$1) | 0;
    $e2Wc2_0$1 = $cmp_i197 ? tempRet0 : $conv203$1;
    $e2Wc2_0$0 = $cmp_i197 ? $sub_i198$0 : $conv203$0;
   }
   if (($25 | 0) != ($26 | 0)) {
    __ZN10ClipperLib7Clipper15AddLocalMinPolyEPNS_5TEdgeES2_RKNS_8IntPointE($this, $e1, $e2, $pt);
    break;
   }
   if (($e1Wc_0$0 | 0) != 1 | ($e1Wc_0$1 | 0) != 0 | (($e2Wc_0$0 | 0) != 1 | ($e2Wc_0$1 | 0) != 0)) {
    $side1_i163 = $e1 + 84 | 0;
    $63 = HEAP32[$side1_i163 >> 2] | 0;
    $side2_i164 = $e2 + 84 | 0;
    HEAP32[$side1_i163 >> 2] = HEAP32[$side2_i164 >> 2];
    HEAP32[$side2_i164 >> 2] = $63;
    break;
   }
   $62 = HEAP32[$this + 40 >> 2] | 0;
   if (($62 | 0) == 2) {
    $$etemp$31$1 = 0;
    $$etemp$32$1 = 0;
    if (!(($25 | 0) == 1 & (($e1Wc2_0$1 | 0) > ($$etemp$31$1 | 0) | ($e1Wc2_0$1 | 0) == ($$etemp$31$1 | 0) & $e1Wc2_0$0 >>> 0 > 0 >>> 0) & (($e2Wc2_0$1 | 0) > ($$etemp$32$1 | 0) | ($e2Wc2_0$1 | 0) == ($$etemp$32$1 | 0) & $e2Wc2_0$0 >>> 0 > 0 >>> 0))) {
     $$etemp$33$1 = 0;
     $$etemp$34$1 = 0;
     if (!($cmp77 & (($e1Wc2_0$1 | 0) < ($$etemp$33$1 | 0) | ($e1Wc2_0$1 | 0) == ($$etemp$33$1 | 0) & $e1Wc2_0$0 >>> 0 < 1 >>> 0) & (($e2Wc2_0$1 | 0) < ($$etemp$34$1 | 0) | ($e2Wc2_0$1 | 0) == ($$etemp$34$1 | 0) & $e2Wc2_0$0 >>> 0 < 1 >>> 0))) {
      break;
     }
    }
    __ZN10ClipperLib7Clipper15AddLocalMinPolyEPNS_5TEdgeES2_RKNS_8IntPointE($this, $e1, $e2, $pt);
    break;
   } else if (($62 | 0) == 3) {
    __ZN10ClipperLib7Clipper15AddLocalMinPolyEPNS_5TEdgeES2_RKNS_8IntPointE($this, $e1, $e2, $pt);
    break;
   } else if (($62 | 0) == 0) {
    $$etemp$27$1 = 0;
    $$etemp$28$1 = 0;
    if (!((($e1Wc2_0$1 | 0) > ($$etemp$27$1 | 0) | ($e1Wc2_0$1 | 0) == ($$etemp$27$1 | 0) & $e1Wc2_0$0 >>> 0 > 0 >>> 0) & (($e2Wc2_0$1 | 0) > ($$etemp$28$1 | 0) | ($e2Wc2_0$1 | 0) == ($$etemp$28$1 | 0) & $e2Wc2_0$0 >>> 0 > 0 >>> 0))) {
     break;
    }
    __ZN10ClipperLib7Clipper15AddLocalMinPolyEPNS_5TEdgeES2_RKNS_8IntPointE($this, $e1, $e2, $pt);
    break;
   } else if (($62 | 0) == 1) {
    $$etemp$29$1 = 0;
    $$etemp$30$1 = 0;
    if (!((($e1Wc2_0$1 | 0) < ($$etemp$29$1 | 0) | ($e1Wc2_0$1 | 0) == ($$etemp$29$1 | 0) & $e1Wc2_0$0 >>> 0 < 1 >>> 0) & (($e2Wc2_0$1 | 0) < ($$etemp$30$1 | 0) | ($e2Wc2_0$1 | 0) == ($$etemp$30$1 | 0) & $e2Wc2_0$0 >>> 0 < 1 >>> 0))) {
     break;
    }
    __ZN10ClipperLib7Clipper15AddLocalMinPolyEPNS_5TEdgeES2_RKNS_8IntPointE($this, $e1, $e2, $pt);
    break;
   } else {
    break;
   }
  } else {
   $$etemp$18$1 = 0;
   $$etemp$19$1 = 0;
   do {
    if (!($_off0 | $_off0131 | ($e1Wc_0$1 >>> 0 > $$etemp$18$1 >>> 0 | $e1Wc_0$1 >>> 0 == $$etemp$18$1 >>> 0 & $e1Wc_0$0 >>> 0 > 1 >>> 0) | ($e2Wc_0$1 >>> 0 > $$etemp$19$1 >>> 0 | $e2Wc_0$1 >>> 0 == $$etemp$19$1 >>> 0 & $e2Wc_0$0 >>> 0 > 1 >>> 0))) {
     if (($25 | 0) != ($26 | 0)) {
      if ((HEAP32[$this + 40 >> 2] | 0) != 3) {
       break;
      }
     }
     __ZN10ClipperLib7Clipper8AddOutPtEPNS_5TEdgeERKNS_8IntPointE($this, $e1, $pt);
     __ZN10ClipperLib7Clipper8AddOutPtEPNS_5TEdgeERKNS_8IntPointE($this, $e2, $pt);
     $side1_i_i = $e1 + 84 | 0;
     $38 = HEAP32[$side1_i_i >> 2] | 0;
     $side2_i_i = $e2 + 84 | 0;
     HEAP32[$side1_i_i >> 2] = HEAP32[$side2_i_i >> 2];
     HEAP32[$side2_i_i >> 2] = $38;
     $40 = HEAP32[$outIdx >> 2] | 0;
     HEAP32[$outIdx >> 2] = HEAP32[$outIdx22 >> 2];
     HEAP32[$outIdx22 >> 2] = $40;
     break L7101;
    }
   } while (0);
   __ZN10ClipperLib7Clipper8AddOutPtEPNS_5TEdgeERKNS_8IntPointE($this, $e1, $pt);
   $36 = HEAP32[$outIdx >> 2] | 0;
   $37 = HEAP32[$outIdx22 >> 2] | 0;
   if (($36 | 0) == ($37 | 0)) {
    HEAP32[$outIdx >> 2] = -1;
    HEAP32[$outIdx22 >> 2] = -1;
    break;
   }
   if (($36 | 0) < ($37 | 0)) {
    __ZN10ClipperLib7Clipper13AppendPolygonEPNS_5TEdgeES2_($this, $e1, $e2);
    break;
   } else {
    __ZN10ClipperLib7Clipper13AppendPolygonEPNS_5TEdgeES2_($this, $e2, $e1);
    break;
   }
  }
 } while (0);
 do {
  if ($_off0 ^ $_off0131) {
   if ($_off0) {
    if ((HEAP32[$outIdx >> 2] | 0) <= -1) {
     label = 6209;
    }
   } else {
    label = 6209;
   }
   if ((label | 0) == 6209) {
    if (!$_off0131) {
     break;
    }
    if ((HEAP32[$outIdx22 >> 2] | 0) <= -1) {
     break;
    }
   }
   $side1_i = $e1 + 84 | 0;
   $67 = HEAP32[$side1_i >> 2] | 0;
   $side2_i = $e2 + 84 | 0;
   HEAP32[$side1_i >> 2] = HEAP32[$side2_i >> 2];
   HEAP32[$side2_i >> 2] = $67;
   $69 = HEAP32[$outIdx >> 2] | 0;
   HEAP32[$outIdx >> 2] = HEAP32[$outIdx22 >> 2];
   HEAP32[$outIdx22 >> 2] = $69;
  }
 } while (0);
 do {
  if ($_off0) {
   $prevInAEL_i144 = $e1 + 120 | 0;
   $71 = HEAP32[$prevInAEL_i144 >> 2] | 0;
   $nextInAEL_i145 = $e1 + 116 | 0;
   $72 = HEAP32[$nextInAEL_i145 >> 2] | 0;
   $tobool_i146 = ($71 | 0) != 0;
   $tobool2_i148 = ($72 | 0) == 0;
   if ($tobool2_i148 & ($tobool_i146 ^ 1)) {
    if ((HEAP32[$this + 48 >> 2] | 0) != ($e1 | 0)) {
     break;
    }
   }
   if ($tobool_i146) {
    HEAP32[$71 + 116 >> 2] = $72;
   } else {
    HEAP32[$this + 48 >> 2] = $72;
   }
   if (!$tobool2_i148) {
    HEAP32[$72 + 120 >> 2] = $71;
   }
   HEAP32[$nextInAEL_i145 >> 2] = 0;
   HEAP32[$prevInAEL_i144 >> 2] = 0;
  }
 } while (0);
 if (!$_off0131) {
  return;
 }
 $prevInAEL_i = $e2 + 120 | 0;
 $74 = HEAP32[$prevInAEL_i >> 2] | 0;
 $nextInAEL_i = $e2 + 116 | 0;
 $75 = HEAP32[$nextInAEL_i >> 2] | 0;
 $tobool_i = ($74 | 0) != 0;
 $tobool2_i = ($75 | 0) == 0;
 do {
  if ($tobool2_i & ($tobool_i ^ 1)) {
   if ((HEAP32[$this + 48 >> 2] | 0) == ($e2 | 0)) {
    break;
   }
   return;
  }
 } while (0);
 if ($tobool_i) {
  HEAP32[$74 + 116 >> 2] = $75;
 } else {
  HEAP32[$this + 48 >> 2] = $75;
 }
 if (!$tobool2_i) {
  HEAP32[$75 + 120 >> 2] = $74;
 }
 HEAP32[$nextInAEL_i >> 2] = 0;
 HEAP32[$prevInAEL_i >> 2] = 0;
 return;
}
function __ZN10ClipperLib7Clipper17ProcessHorizontalEPNS_5TEdgeE($this, $horzEdge) {
 $this = $this | 0;
 $horzEdge = $horzEdge | 0;
 var $jr_i = 0, $tmp_i = 0, $ref_tmp_i = 0, $tmp1_i = 0, $ref_tmp2_i = 0, $tmp3_i = 0, $ref_tmp5_i = 0, $horzEdge_addr = 0, $ref_tmp = 0, $ref_tmp54 = 0, $ref_tmp78 = 0, $ref_tmp84 = 0, $ref_tmp94 = 0, $ref_tmp101 = 0, $ref_tmp134 = 0, $ref_tmp141 = 0, $xcurr = 0, $0$0 = 0, $0$1 = 0, $xtop = 0, $1$0 = 0, $1$1 = 0, $cmp = 0, $_$0 = 0, $_$1 = 0, $_50$0 = 0, $_50$1 = 0, $nextInLML = 0, $3 = 0, $ytop_i = 0, $ytop_i_i = 0, $xtop_i = 0, $eMaxPair_0 = 0, $nextInAEL_i73 = 0, $prevInAEL_i74 = 0, $cond_i = 0, $tobool12 = 0, $ycurr80 = 0, $X_i_i122 = 0, $Y_i_i123 = 0, $m_SortedEdges_i = 0, $X_i_i131 = 0, $Y_i_i132 = 0, $X_i_i154 = 0, $Y_i_i155 = 0, $X_i_i177 = 0, $Y_i_i178 = 0, $9 = 0, $10 = 0, $lo_i_i_i = 0, $hi_i_i_i = 0, $lo_i_i6_i = 0, $hi_i_i7_i = 0, $lo_i_i12_i = 0, $hi_i_i13_i = 0, $lo_i_i9_i = 0, $hi_i_i10_i = 0, $hi_i_i = 0, $hi2_i_i = 0, $lo_i_i = 0, $lo3_i_i = 0, $e_0202 = 0, $cond_i78 = 0, $xcurr22213 = 0, $17$0 = 0, $17$1 = 0, $xcurr22 = 0, $19 = 0, $deltaY_i = 0, $24$0 = 0, $24$1 = 0, $deltaX_i = 0, $25$1 = 0, $deltaX4_i = 0, $26$1 = 0, $deltaY6_i = 0, $27$1 = 0, $deltaX8_i = 0, $mul_i$0 = 0, $mul_i$1 = 0, $deltaX9_i = 0, $deltaY10_i = 0, $mul11_i$0 = 0, $retval_0_i83 = 0, $outIdx = 0, $35 = 0, $outIdx34 = 0, $37 = 0, $call_i = 0, $39 = 0, $X_i_i3_i_i_i = 0, $xcurr_i = 0, $41$1 = 0, $ycurr_i = 0, $42$0 = 0, $42$1 = 0, $ref_tmp_sroa_0_0__idx_i = 0, $43 = 0, $xtop_i87 = 0, $44$1 = 0, $ytop_i88 = 0, $45$0 = 0, $45$1 = 0, $46 = 0, $47 = 0, $50$1 = 0, $ycurr12_i = 0, $51$0 = 0, $51$1 = 0, $52 = 0, $53 = 0, $xtop14_i = 0, $54$1 = 0, $ytop15_i = 0, $55$0 = 0, $55$1 = 0, $56 = 0, $57 = 0, $__end__i_i = 0, $58 = 0, $60 = 0, $xcurr22216 = 0, $64$0 = 0, $64$1 = 0, $65$0 = 0, $65$1 = 0, $X_i_i = 0, $Y_i_i = 0, $X_i_i91 = 0, $Y_i_i92 = 0, $exception = 0, $call_i_i_i3_i_i116 = 0, $sub = 0.0, $78$0 = 0, $78$1 = 0, $xtop73 = 0, $79$1 = 0, $80$0 = 0, $80$1 = 0, $e_011_i = 0, $e_013_i = 0, $xcurr_i124 = 0, $xtop_i125 = 0, $81$0 = 0, $81$1 = 0, $82$0 = 0, $82$1 = 0, $cmp_i_i_i_i = 0, $83$1 = 0, $cond_lvalue_i_i21_i = 0, $84$1 = 0, $e_0_i = 0, $retval_0_i130 = 0, $e_011_i136 = 0, $e_013_i138 = 0, $xcurr_i139 = 0, $xtop_i140 = 0, $85$0 = 0, $85$1 = 0, $86$0 = 0, $86$1 = 0, $cmp_i_i_i_i141 = 0, $87$1 = 0, $cond_lvalue_i_i21_i145 = 0, $88$1 = 0, $e_0_i149 = 0, $retval_0_i152 = 0, $89$0 = 0, $89$1 = 0, $90$0 = 0, $90$1 = 0, $e_011_i159 = 0, $e_013_i161 = 0, $xcurr_i162 = 0, $xtop_i163 = 0, $91$0 = 0, $91$1 = 0, $92$0 = 0, $92$1 = 0, $cmp_i_i_i_i164 = 0, $93$1 = 0, $cond_lvalue_i_i21_i168 = 0, $94$1 = 0, $e_0_i172 = 0, $retval_0_i175 = 0, $e_011_i180 = 0, $e_013_i182 = 0, $xcurr_i183 = 0, $xtop_i184 = 0, $95$0 = 0, $95$1 = 0, $96$0 = 0, $96$1 = 0, $cmp_i_i_i_i185 = 0, $97$1 = 0, $cond_lvalue_i_i21_i189 = 0, $98$1 = 0, $e_0_i193 = 0, $retval_0_i196 = 0, $outIdx131_pre_phi = 0, $cmp132 = 0, $103$1 = 0, $ytop = 0, $104$0 = 0, $104$1 = 0, $X_i_i156 = 0, $Y_i_i157 = 0, $105$1 = 0, $ycurr143 = 0, $106$0 = 0, $106$1 = 0, $X_i_i133 = 0, $Y_i_i134 = 0, $exception148 = 0, $call_i_i_i3_i_i72 = 0, $prevInAEL_i53 = 0, $114 = 0, $nextInAEL_i54 = 0, $115 = 0, $tobool_i55 = 0, $tobool2_i57 = 0, $117 = 0, $118 = 0, $tobool_i = 0, $tobool2_i = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $jr_i = __stackBase__ | 0;
 $tmp_i = __stackBase__ + 8 | 0;
 $ref_tmp_i = __stackBase__ + 24 | 0;
 $tmp1_i = __stackBase__ + 40 | 0;
 $ref_tmp2_i = __stackBase__ + 56 | 0;
 $tmp3_i = __stackBase__ + 72 | 0;
 $ref_tmp5_i = __stackBase__ + 88 | 0;
 $horzEdge_addr = __stackBase__ + 104 | 0;
 $ref_tmp = __stackBase__ + 112 | 0;
 $ref_tmp54 = __stackBase__ + 128 | 0;
 $ref_tmp78 = __stackBase__ + 144 | 0;
 $ref_tmp84 = __stackBase__ + 160 | 0;
 $ref_tmp94 = __stackBase__ + 176 | 0;
 $ref_tmp101 = __stackBase__ + 192 | 0;
 $ref_tmp134 = __stackBase__ + 208 | 0;
 $ref_tmp141 = __stackBase__ + 224 | 0;
 HEAP32[$horzEdge_addr >> 2] = $horzEdge;
 $xcurr = $horzEdge + 16 | 0;
 $0$0 = HEAP32[$xcurr >> 2] | 0;
 $0$1 = HEAP32[$xcurr + 4 >> 2] | 0;
 $xtop = $horzEdge + 32 | 0;
 $1$0 = HEAP32[$xtop >> 2] | 0;
 $1$1 = HEAP32[$xtop + 4 >> 2] | 0;
 $cmp = ($0$1 | 0) < ($1$1 | 0) | ($0$1 | 0) == ($1$1 | 0) & $0$0 >>> 0 < $1$0 >>> 0;
 $_$0 = $cmp ? $0$0 : $1$0;
 $_$1 = $cmp ? $0$1 : $1$1;
 $_50$0 = $cmp ? $1$0 : $0$0;
 $_50$1 = $cmp ? $1$1 : $0$1;
 $nextInLML = $horzEdge + 112 | 0;
 L7197 : do {
  if ((HEAP32[$nextInLML >> 2] | 0) == 0) {
   $3 = HEAP32[$horzEdge + 104 >> 2] | 0;
   do {
    if (($3 | 0) != 0) {
     $ytop_i = $horzEdge + 40 | 0;
     $ytop_i_i = $3 + 40 | 0;
     if (!((HEAP32[$ytop_i_i >> 2] | 0) == (HEAP32[$ytop_i >> 2] | 0) & (HEAP32[$ytop_i_i + 4 >> 2] | 0) == (HEAP32[$ytop_i + 4 >> 2] | 0))) {
      break;
     }
     if ((HEAP32[$3 + 112 >> 2] | 0) != 0) {
      break;
     }
     $xtop_i = $3 + 32 | 0;
     if ((HEAP32[$xtop_i >> 2] | 0) == ($1$0 | 0) & (HEAP32[$xtop_i + 4 >> 2] | 0) == ($1$1 | 0)) {
      $eMaxPair_0 = $3;
      break L7197;
     }
    }
   } while (0);
   $eMaxPair_0 = HEAP32[$horzEdge + 108 >> 2] | 0;
  } else {
   $eMaxPair_0 = 0;
  }
 } while (0);
 $nextInAEL_i73 = $horzEdge + 116 | 0;
 $prevInAEL_i74 = $horzEdge + 120 | 0;
 $cond_i = HEAP32[($cmp ? $nextInAEL_i73 : $prevInAEL_i74) >> 2] | 0;
 L7205 : do {
  if (($cond_i | 0) == 0) {
   label = 6301;
  } else {
   $tobool12 = ($eMaxPair_0 | 0) != 0;
   $ycurr80 = $horzEdge + 24 | 0;
   $X_i_i122 = $ref_tmp78 | 0;
   $Y_i_i123 = $ref_tmp78 + 8 | 0;
   $m_SortedEdges_i = $this + 52 | 0;
   $X_i_i131 = $ref_tmp84 | 0;
   $Y_i_i132 = $ref_tmp84 + 8 | 0;
   $X_i_i154 = $ref_tmp94 | 0;
   $Y_i_i155 = $ref_tmp94 + 8 | 0;
   $X_i_i177 = $ref_tmp101 | 0;
   $Y_i_i178 = $ref_tmp101 + 8 | 0;
   $9 = $this;
   $10 = $this;
   $lo_i_i_i = $tmp_i + 8 | 0;
   $hi_i_i_i = $tmp_i | 0;
   $lo_i_i6_i = $ref_tmp_i + 8 | 0;
   $hi_i_i7_i = $ref_tmp_i | 0;
   $lo_i_i12_i = $tmp3_i + 8 | 0;
   $hi_i_i13_i = $tmp3_i | 0;
   $lo_i_i9_i = $ref_tmp5_i + 8 | 0;
   $hi_i_i10_i = $ref_tmp5_i | 0;
   $hi_i_i = $tmp1_i | 0;
   $hi2_i_i = $ref_tmp2_i | 0;
   $lo_i_i = $tmp1_i + 8 | 0;
   $lo3_i_i = $ref_tmp2_i + 8 | 0;
   $e_0202 = $cond_i;
   L7207 : while (1) {
    $cond_i78 = HEAP32[($cmp ? $e_0202 + 116 | 0 : $e_0202 + 120 | 0) >> 2] | 0;
    $xcurr22213 = $e_0202 + 16 | 0;
    L7209 : do {
     if ($tobool12) {
      $xcurr22216 = $xcurr22213;
      label = 6260;
     } else {
      $17$0 = HEAP32[$xcurr22213 >> 2] | 0;
      $17$1 = HEAP32[$xcurr22213 + 4 >> 2] | 0;
      do {
       if ($cmp) {
        if (!(($17$1 | 0) > ($_50$1 | 0) | ($17$1 | 0) == ($_50$1 | 0) & $17$0 >>> 0 > $_50$0 >>> 0)) {
         break;
        }
        if (!(($17$1 | 0) > ($_50$1 | 0) | ($17$1 | 0) == ($_50$1 | 0) & $17$0 >>> 0 > $_50$0 >>> 0)) {
         break L7209;
        }
        if ((HEAP32[$m_SortedEdges_i >> 2] | 0) != 0) {
         label = 6301;
         break L7205;
        }
        if ($cmp) {
         break L7209;
        } else {
         label = 6298;
        }
       } else {
        if (($17$1 | 0) < ($_$1 | 0) | ($17$1 | 0) == ($_$1 | 0) & $17$0 >>> 0 < $_$0 >>> 0) {
         label = 6298;
        }
       }
      } while (0);
      if ((label | 0) == 6298) {
       label = 0;
       if (!(($17$1 | 0) < ($_$1 | 0) | ($17$1 | 0) == ($_$1 | 0) & $17$0 >>> 0 < $_$0 >>> 0)) {
        break;
       }
       if ((HEAP32[$m_SortedEdges_i >> 2] | 0) != 0 | ($cond_i78 | 0) == 0) {
        label = 6301;
        break L7205;
       } else {
        $e_0202 = $cond_i78;
        continue L7207;
       }
      }
      $xcurr22 = $e_0202 + 16 | 0;
      if (($17$0 | 0) != (HEAP32[$xtop >> 2] | 0) | ($17$1 | 0) != (HEAP32[$xtop + 4 >> 2] | 0) | $tobool12) {
       $xcurr22216 = $xcurr22;
       label = 6260;
       break;
      }
      $19 = HEAP32[$nextInLML >> 2] | 0;
      $deltaY_i = $e_0202 + 64 | 0;
      $24$0 = HEAP32[$deltaY_i >> 2] | 0;
      $24$1 = HEAP32[$deltaY_i + 4 >> 2] | 0;
      do {
       if ((HEAP8[$10 + ((HEAP32[(HEAP32[$9 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) == 0) {
        $deltaX8_i = $19 + 56 | 0;
        $mul_i$0 = ___muldi3(HEAP32[$deltaX8_i >> 2] | 0, HEAP32[$deltaX8_i + 4 >> 2] | 0, $24$0, $24$1) | 0;
        $mul_i$1 = tempRet0;
        $deltaX9_i = $e_0202 + 56 | 0;
        $deltaY10_i = $19 + 64 | 0;
        $mul11_i$0 = ___muldi3(HEAP32[$deltaY10_i >> 2] | 0, HEAP32[$deltaY10_i + 4 >> 2] | 0, HEAP32[$deltaX9_i >> 2] | 0, HEAP32[$deltaX9_i + 4 >> 2] | 0) | 0;
        $retval_0_i83 = ($mul_i$0 | 0) == ($mul11_i$0 | 0) & ($mul_i$1 | 0) == (tempRet0 | 0);
        label = 6251;
       } else {
        HEAP32[$lo_i_i_i >> 2] = $24$0;
        HEAP32[$lo_i_i_i + 4 >> 2] = $24$1;
        HEAP32[$hi_i_i_i >> 2] = $24$1 >> 31 | (($24$1 | 0) < 0 ? -1 : 0) << 1;
        HEAP32[$hi_i_i_i + 4 >> 2] = (($24$1 | 0) < 0 ? -1 : 0) >> 31 | (($24$1 | 0) < 0 ? -1 : 0) << 1;
        $deltaX_i = $19 + 56 | 0;
        $25$1 = HEAP32[$deltaX_i + 4 >> 2] | 0;
        HEAP32[$lo_i_i6_i >> 2] = HEAP32[$deltaX_i >> 2];
        HEAP32[$lo_i_i6_i + 4 >> 2] = $25$1;
        HEAP32[$hi_i_i7_i >> 2] = $25$1 >> 31 | (($25$1 | 0) < 0 ? -1 : 0) << 1;
        HEAP32[$hi_i_i7_i + 4 >> 2] = (($25$1 | 0) < 0 ? -1 : 0) >> 31 | (($25$1 | 0) < 0 ? -1 : 0) << 1;
        __ZNK10ClipperLib6Int128mlERKS0_($tmp1_i, $tmp_i, $ref_tmp_i);
        $deltaX4_i = $e_0202 + 56 | 0;
        $26$1 = HEAP32[$deltaX4_i + 4 >> 2] | 0;
        HEAP32[$lo_i_i12_i >> 2] = HEAP32[$deltaX4_i >> 2];
        HEAP32[$lo_i_i12_i + 4 >> 2] = $26$1;
        HEAP32[$hi_i_i13_i >> 2] = $26$1 >> 31 | (($26$1 | 0) < 0 ? -1 : 0) << 1;
        HEAP32[$hi_i_i13_i + 4 >> 2] = (($26$1 | 0) < 0 ? -1 : 0) >> 31 | (($26$1 | 0) < 0 ? -1 : 0) << 1;
        $deltaY6_i = $19 + 64 | 0;
        $27$1 = HEAP32[$deltaY6_i + 4 >> 2] | 0;
        HEAP32[$lo_i_i9_i >> 2] = HEAP32[$deltaY6_i >> 2];
        HEAP32[$lo_i_i9_i + 4 >> 2] = $27$1;
        HEAP32[$hi_i_i10_i >> 2] = $27$1 >> 31 | (($27$1 | 0) < 0 ? -1 : 0) << 1;
        HEAP32[$hi_i_i10_i + 4 >> 2] = (($27$1 | 0) < 0 ? -1 : 0) >> 31 | (($27$1 | 0) < 0 ? -1 : 0) << 1;
        __ZNK10ClipperLib6Int128mlERKS0_($ref_tmp2_i, $tmp3_i, $ref_tmp5_i);
        if (!((HEAP32[$hi_i_i >> 2] | 0) == (HEAP32[$hi2_i_i >> 2] | 0) & (HEAP32[$hi_i_i + 4 >> 2] | 0) == (HEAP32[$hi2_i_i + 4 >> 2] | 0))) {
         break;
        }
        $retval_0_i83 = (HEAP32[$lo_i_i >> 2] | 0) == (HEAP32[$lo3_i_i >> 2] | 0) & (HEAP32[$lo_i_i + 4 >> 2] | 0) == (HEAP32[$lo3_i_i + 4 >> 2] | 0);
        label = 6251;
       }
      } while (0);
      if ((label | 0) == 6251) {
       label = 0;
       if ($retval_0_i83) {
        label = 6252;
        break L7207;
       }
      }
      if (+HEAPF64[$e_0202 + 48 >> 3] < +HEAPF64[(HEAP32[$nextInLML >> 2] | 0) + 48 >> 3]) {
       label = 6301;
       break L7205;
      } else {
       $xcurr22216 = $xcurr22;
       label = 6260;
      }
     }
    } while (0);
    if ((label | 0) == 6260) {
     label = 0;
     if (($e_0202 | 0) == ($eMaxPair_0 | 0)) {
      label = 6261;
      break;
     }
     $sub = +HEAPF64[$e_0202 + 48 >> 3] + 1.0e+40;
     do {
      if ($sub > -1.0e-20 & $sub < 1.0e-20) {
       if ((HEAP32[(HEAP32[$e_0202 + 108 >> 2] | 0) + 112 >> 2] | 0) != ($e_0202 | 0)) {
        if ((HEAP32[(HEAP32[$e_0202 + 104 >> 2] | 0) + 112 >> 2] | 0) != ($e_0202 | 0)) {
         label = 6283;
         break;
        }
       }
       $78$0 = HEAP32[$xcurr22216 >> 2] | 0;
       $78$1 = HEAP32[$xcurr22216 + 4 >> 2] | 0;
       $xtop73 = $e_0202 + 32 | 0;
       $79$1 = HEAP32[$xtop73 + 4 >> 2] | 0;
       if (($78$1 | 0) > ($79$1 | 0) | ($78$1 | 0) == ($79$1 | 0) & $78$0 >>> 0 > (HEAP32[$xtop73 >> 2] | 0) >>> 0) {
        label = 6283;
        break;
       }
       $80$0 = HEAP32[$ycurr80 >> 2] | 0;
       $80$1 = HEAP32[$ycurr80 + 4 >> 2] | 0;
       if ($cmp) {
        HEAP32[$X_i_i122 >> 2] = $78$0;
        HEAP32[$X_i_i122 + 4 >> 2] = $78$1;
        HEAP32[$Y_i_i123 >> 2] = $80$0;
        HEAP32[$Y_i_i123 + 4 >> 2] = $80$1;
        $e_011_i = HEAP32[$m_SortedEdges_i >> 2] | 0;
        L7248 : do {
         if (($e_011_i | 0) == 0) {
          $retval_0_i130 = 1;
         } else {
          $e_013_i = $e_011_i;
          while (1) {
           $xcurr_i124 = $e_013_i + 16 | 0;
           $xtop_i125 = $e_013_i + 32 | 0;
           $81$0 = HEAP32[$xtop_i125 >> 2] | 0;
           $81$1 = HEAP32[$xtop_i125 + 4 >> 2] | 0;
           $82$0 = HEAP32[$xcurr_i124 >> 2] | 0;
           $82$1 = HEAP32[$xcurr_i124 + 4 >> 2] | 0;
           $cmp_i_i_i_i = ($81$1 | 0) < ($82$1 | 0) | ($81$1 | 0) == ($82$1 | 0) & $81$0 >>> 0 < $82$0 >>> 0;
           $83$1 = $cmp_i_i_i_i ? $81$1 : $82$1;
           if (!(($83$1 | 0) > ($78$1 | 0) | ($83$1 | 0) == ($78$1 | 0) & ($cmp_i_i_i_i ? $81$0 : $82$0) >>> 0 > $78$0 >>> 0)) {
            $cond_lvalue_i_i21_i = ($82$1 | 0) < ($81$1 | 0) | ($82$1 | 0) == ($81$1 | 0) & $82$0 >>> 0 < $81$0 >>> 0 ? $xtop_i125 : $xcurr_i124;
            $84$1 = HEAP32[$cond_lvalue_i_i21_i + 4 >> 2] | 0;
            if (!(($84$1 | 0) < ($78$1 | 0) | ($84$1 | 0) == ($78$1 | 0) & (HEAP32[$cond_lvalue_i_i21_i >> 2] | 0) >>> 0 < $78$0 >>> 0)) {
             $retval_0_i130 = 3;
             break L7248;
            }
           }
           $e_0_i = HEAP32[$e_013_i + 124 >> 2] | 0;
           if (($e_0_i | 0) == 0) {
            $retval_0_i130 = 1;
            break;
           } else {
            $e_013_i = $e_0_i;
           }
          }
         }
        } while (0);
        __ZN10ClipperLib7Clipper14IntersectEdgesEPNS_5TEdgeES2_RKNS_8IntPointENS_17IntersectProtectsE($this, $horzEdge, $e_0202, $ref_tmp78, $retval_0_i130);
        break;
       } else {
        HEAP32[$X_i_i131 >> 2] = $78$0;
        HEAP32[$X_i_i131 + 4 >> 2] = $78$1;
        HEAP32[$Y_i_i132 >> 2] = $80$0;
        HEAP32[$Y_i_i132 + 4 >> 2] = $80$1;
        $e_011_i136 = HEAP32[$m_SortedEdges_i >> 2] | 0;
        L7240 : do {
         if (($e_011_i136 | 0) == 0) {
          $retval_0_i152 = 2;
         } else {
          $e_013_i138 = $e_011_i136;
          while (1) {
           $xcurr_i139 = $e_013_i138 + 16 | 0;
           $xtop_i140 = $e_013_i138 + 32 | 0;
           $85$0 = HEAP32[$xtop_i140 >> 2] | 0;
           $85$1 = HEAP32[$xtop_i140 + 4 >> 2] | 0;
           $86$0 = HEAP32[$xcurr_i139 >> 2] | 0;
           $86$1 = HEAP32[$xcurr_i139 + 4 >> 2] | 0;
           $cmp_i_i_i_i141 = ($85$1 | 0) < ($86$1 | 0) | ($85$1 | 0) == ($86$1 | 0) & $85$0 >>> 0 < $86$0 >>> 0;
           $87$1 = $cmp_i_i_i_i141 ? $85$1 : $86$1;
           if (!(($87$1 | 0) > ($78$1 | 0) | ($87$1 | 0) == ($78$1 | 0) & ($cmp_i_i_i_i141 ? $85$0 : $86$0) >>> 0 > $78$0 >>> 0)) {
            $cond_lvalue_i_i21_i145 = ($86$1 | 0) < ($85$1 | 0) | ($86$1 | 0) == ($85$1 | 0) & $86$0 >>> 0 < $85$0 >>> 0 ? $xtop_i140 : $xcurr_i139;
            $88$1 = HEAP32[$cond_lvalue_i_i21_i145 + 4 >> 2] | 0;
            if (!(($88$1 | 0) < ($78$1 | 0) | ($88$1 | 0) == ($78$1 | 0) & (HEAP32[$cond_lvalue_i_i21_i145 >> 2] | 0) >>> 0 < $78$0 >>> 0)) {
             $retval_0_i152 = 3;
             break L7240;
            }
           }
           $e_0_i149 = HEAP32[$e_013_i138 + 124 >> 2] | 0;
           if (($e_0_i149 | 0) == 0) {
            $retval_0_i152 = 2;
            break;
           } else {
            $e_013_i138 = $e_0_i149;
           }
          }
         }
        } while (0);
        __ZN10ClipperLib7Clipper14IntersectEdgesEPNS_5TEdgeES2_RKNS_8IntPointENS_17IntersectProtectsE($this, $e_0202, $horzEdge, $ref_tmp84, $retval_0_i152);
        break;
       }
      } else {
       label = 6283;
      }
     } while (0);
     do {
      if ((label | 0) == 6283) {
       label = 0;
       $89$0 = HEAP32[$xcurr22216 >> 2] | 0;
       $89$1 = HEAP32[$xcurr22216 + 4 >> 2] | 0;
       $90$0 = HEAP32[$ycurr80 >> 2] | 0;
       $90$1 = HEAP32[$ycurr80 + 4 >> 2] | 0;
       if ($cmp) {
        HEAP32[$X_i_i154 >> 2] = $89$0;
        HEAP32[$X_i_i154 + 4 >> 2] = $89$1;
        HEAP32[$Y_i_i155 >> 2] = $90$0;
        HEAP32[$Y_i_i155 + 4 >> 2] = $90$1;
        $e_011_i159 = HEAP32[$m_SortedEdges_i >> 2] | 0;
        L7267 : do {
         if (($e_011_i159 | 0) == 0) {
          $retval_0_i175 = 1;
         } else {
          $e_013_i161 = $e_011_i159;
          while (1) {
           $xcurr_i162 = $e_013_i161 + 16 | 0;
           $xtop_i163 = $e_013_i161 + 32 | 0;
           $91$0 = HEAP32[$xtop_i163 >> 2] | 0;
           $91$1 = HEAP32[$xtop_i163 + 4 >> 2] | 0;
           $92$0 = HEAP32[$xcurr_i162 >> 2] | 0;
           $92$1 = HEAP32[$xcurr_i162 + 4 >> 2] | 0;
           $cmp_i_i_i_i164 = ($91$1 | 0) < ($92$1 | 0) | ($91$1 | 0) == ($92$1 | 0) & $91$0 >>> 0 < $92$0 >>> 0;
           $93$1 = $cmp_i_i_i_i164 ? $91$1 : $92$1;
           if (!(($93$1 | 0) > ($89$1 | 0) | ($93$1 | 0) == ($89$1 | 0) & ($cmp_i_i_i_i164 ? $91$0 : $92$0) >>> 0 > $89$0 >>> 0)) {
            $cond_lvalue_i_i21_i168 = ($92$1 | 0) < ($91$1 | 0) | ($92$1 | 0) == ($91$1 | 0) & $92$0 >>> 0 < $91$0 >>> 0 ? $xtop_i163 : $xcurr_i162;
            $94$1 = HEAP32[$cond_lvalue_i_i21_i168 + 4 >> 2] | 0;
            if (!(($94$1 | 0) < ($89$1 | 0) | ($94$1 | 0) == ($89$1 | 0) & (HEAP32[$cond_lvalue_i_i21_i168 >> 2] | 0) >>> 0 < $89$0 >>> 0)) {
             $retval_0_i175 = 3;
             break L7267;
            }
           }
           $e_0_i172 = HEAP32[$e_013_i161 + 124 >> 2] | 0;
           if (($e_0_i172 | 0) == 0) {
            $retval_0_i175 = 1;
            break;
           } else {
            $e_013_i161 = $e_0_i172;
           }
          }
         }
        } while (0);
        __ZN10ClipperLib7Clipper14IntersectEdgesEPNS_5TEdgeES2_RKNS_8IntPointENS_17IntersectProtectsE($this, $horzEdge, $e_0202, $ref_tmp94, $retval_0_i175);
        break;
       } else {
        HEAP32[$X_i_i177 >> 2] = $89$0;
        HEAP32[$X_i_i177 + 4 >> 2] = $89$1;
        HEAP32[$Y_i_i178 >> 2] = $90$0;
        HEAP32[$Y_i_i178 + 4 >> 2] = $90$1;
        $e_011_i180 = HEAP32[$m_SortedEdges_i >> 2] | 0;
        L7259 : do {
         if (($e_011_i180 | 0) == 0) {
          $retval_0_i196 = 2;
         } else {
          $e_013_i182 = $e_011_i180;
          while (1) {
           $xcurr_i183 = $e_013_i182 + 16 | 0;
           $xtop_i184 = $e_013_i182 + 32 | 0;
           $95$0 = HEAP32[$xtop_i184 >> 2] | 0;
           $95$1 = HEAP32[$xtop_i184 + 4 >> 2] | 0;
           $96$0 = HEAP32[$xcurr_i183 >> 2] | 0;
           $96$1 = HEAP32[$xcurr_i183 + 4 >> 2] | 0;
           $cmp_i_i_i_i185 = ($95$1 | 0) < ($96$1 | 0) | ($95$1 | 0) == ($96$1 | 0) & $95$0 >>> 0 < $96$0 >>> 0;
           $97$1 = $cmp_i_i_i_i185 ? $95$1 : $96$1;
           if (!(($97$1 | 0) > ($89$1 | 0) | ($97$1 | 0) == ($89$1 | 0) & ($cmp_i_i_i_i185 ? $95$0 : $96$0) >>> 0 > $89$0 >>> 0)) {
            $cond_lvalue_i_i21_i189 = ($96$1 | 0) < ($95$1 | 0) | ($96$1 | 0) == ($95$1 | 0) & $96$0 >>> 0 < $95$0 >>> 0 ? $xtop_i184 : $xcurr_i183;
            $98$1 = HEAP32[$cond_lvalue_i_i21_i189 + 4 >> 2] | 0;
            if (!(($98$1 | 0) < ($89$1 | 0) | ($98$1 | 0) == ($89$1 | 0) & (HEAP32[$cond_lvalue_i_i21_i189 >> 2] | 0) >>> 0 < $89$0 >>> 0)) {
             $retval_0_i196 = 3;
             break L7259;
            }
           }
           $e_0_i193 = HEAP32[$e_013_i182 + 124 >> 2] | 0;
           if (($e_0_i193 | 0) == 0) {
            $retval_0_i196 = 2;
            break;
           } else {
            $e_013_i182 = $e_0_i193;
           }
          }
         }
        } while (0);
        __ZN10ClipperLib7Clipper14IntersectEdgesEPNS_5TEdgeES2_RKNS_8IntPointENS_17IntersectProtectsE($this, $e_0202, $horzEdge, $ref_tmp101, $retval_0_i196);
        break;
       }
      }
     } while (0);
     __ZN10ClipperLib7Clipper18SwapPositionsInAELEPNS_5TEdgeES2_($this, $horzEdge, $e_0202);
    }
    if (($cond_i78 | 0) == 0) {
     label = 6301;
     break L7205;
    } else {
     $e_0202 = $cond_i78;
    }
   }
   if ((label | 0) == 6261) {
    $64$0 = HEAP32[$xcurr22216 >> 2] | 0;
    $64$1 = HEAP32[$xcurr22216 + 4 >> 2] | 0;
    $65$0 = HEAP32[$ycurr80 >> 2] | 0;
    $65$1 = HEAP32[$ycurr80 + 4 >> 2] | 0;
    if ($cmp) {
     $X_i_i = $ref_tmp | 0;
     HEAP32[$X_i_i >> 2] = $64$0;
     HEAP32[$X_i_i + 4 >> 2] = $64$1;
     $Y_i_i = $ref_tmp + 8 | 0;
     HEAP32[$Y_i_i >> 2] = $65$0;
     HEAP32[$Y_i_i + 4 >> 2] = $65$1;
     __ZN10ClipperLib7Clipper14IntersectEdgesEPNS_5TEdgeES2_RKNS_8IntPointENS_17IntersectProtectsE($this, $horzEdge, $eMaxPair_0, $ref_tmp, 0);
    } else {
     $X_i_i91 = $ref_tmp54 | 0;
     HEAP32[$X_i_i91 >> 2] = $64$0;
     HEAP32[$X_i_i91 + 4 >> 2] = $64$1;
     $Y_i_i92 = $ref_tmp54 + 8 | 0;
     HEAP32[$Y_i_i92 >> 2] = $65$0;
     HEAP32[$Y_i_i92 + 4 >> 2] = $65$1;
     __ZN10ClipperLib7Clipper14IntersectEdgesEPNS_5TEdgeES2_RKNS_8IntPointENS_17IntersectProtectsE($this, $eMaxPair_0, $horzEdge, $ref_tmp54, 0);
    }
    if ((HEAP32[$eMaxPair_0 + 100 >> 2] | 0) <= -1) {
     STACKTOP = __stackBase__;
     return;
    }
    $exception = ___cxa_allocate_exception(16) | 0;
    HEAP32[$exception >> 2] = 11984;
    $call_i_i_i3_i_i116 = __Znwj(32) | 0;
    HEAP32[$exception + 12 >> 2] = $call_i_i_i3_i_i116;
    HEAP32[$exception + 4 >> 2] = 33;
    HEAP32[$exception + 8 >> 2] = 23;
    _memcpy($call_i_i_i3_i_i116 | 0, 1912, 23) | 0;
    HEAP8[$call_i_i_i3_i_i116 + 23 | 0] = 0;
    ___cxa_throw($exception | 0, 16960, 216);
   } else if ((label | 0) == 6252) {
    $outIdx = $horzEdge + 100 | 0;
    $35 = HEAP32[$outIdx >> 2] | 0;
    if (($35 | 0) <= -1) {
     $outIdx131_pre_phi = $outIdx;
     break;
    }
    $outIdx34 = $e_0202 + 100 | 0;
    if ((HEAP32[$outIdx34 >> 2] | 0) <= -1) {
     $outIdx131_pre_phi = $outIdx;
     break;
    }
    $37 = HEAP32[$nextInLML >> 2] | 0;
    $call_i = __Znwj(80) | 0;
    $39 = $call_i;
    $X_i_i3_i_i_i = $call_i + 40 | 0;
    _memset($call_i | 0, 0, 32);
    _memset($X_i_i3_i_i_i | 0, 0, 32);
    HEAP32[$jr_i >> 2] = $39;
    HEAP32[$call_i + 32 >> 2] = $35;
    $xcurr_i = $37 + 16 | 0;
    $41$1 = HEAP32[$xcurr_i + 4 >> 2] | 0;
    $ycurr_i = $37 + 24 | 0;
    $42$0 = HEAP32[$ycurr_i >> 2] | 0;
    $42$1 = HEAP32[$ycurr_i + 4 >> 2] | 0;
    $ref_tmp_sroa_0_0__idx_i = $call_i;
    HEAP32[$ref_tmp_sroa_0_0__idx_i >> 2] = HEAP32[$xcurr_i >> 2];
    HEAP32[$ref_tmp_sroa_0_0__idx_i + 4 >> 2] = $41$1;
    $43 = $call_i + 8 | 0;
    HEAP32[$43 >> 2] = $42$0;
    HEAP32[$43 + 4 >> 2] = $42$1;
    $xtop_i87 = $37 + 32 | 0;
    $44$1 = HEAP32[$xtop_i87 + 4 >> 2] | 0;
    $ytop_i88 = $37 + 40 | 0;
    $45$0 = HEAP32[$ytop_i88 >> 2] | 0;
    $45$1 = HEAP32[$ytop_i88 + 4 >> 2] | 0;
    $46 = $call_i + 16 | 0;
    HEAP32[$46 >> 2] = HEAP32[$xtop_i87 >> 2];
    HEAP32[$46 + 4 >> 2] = $44$1;
    $47 = $call_i + 24 | 0;
    HEAP32[$47 >> 2] = $45$0;
    HEAP32[$47 + 4 >> 2] = $45$1;
    HEAP32[$call_i + 72 >> 2] = HEAP32[$outIdx34 >> 2];
    $50$1 = HEAP32[$xcurr22 + 4 >> 2] | 0;
    $ycurr12_i = $e_0202 + 24 | 0;
    $51$0 = HEAP32[$ycurr12_i >> 2] | 0;
    $51$1 = HEAP32[$ycurr12_i + 4 >> 2] | 0;
    $52 = $X_i_i3_i_i_i;
    HEAP32[$52 >> 2] = HEAP32[$xcurr22 >> 2];
    HEAP32[$52 + 4 >> 2] = $50$1;
    $53 = $call_i + 48 | 0;
    HEAP32[$53 >> 2] = $51$0;
    HEAP32[$53 + 4 >> 2] = $51$1;
    $xtop14_i = $e_0202 + 32 | 0;
    $54$1 = HEAP32[$xtop14_i + 4 >> 2] | 0;
    $ytop15_i = $e_0202 + 40 | 0;
    $55$0 = HEAP32[$ytop15_i >> 2] | 0;
    $55$1 = HEAP32[$ytop15_i + 4 >> 2] | 0;
    $56 = $call_i + 56 | 0;
    HEAP32[$56 >> 2] = HEAP32[$xtop14_i >> 2];
    HEAP32[$56 + 4 >> 2] = $54$1;
    $57 = $call_i + 64 | 0;
    HEAP32[$57 >> 2] = $55$0;
    HEAP32[$57 + 4 >> 2] = $55$1;
    $__end__i_i = $this + 20 | 0;
    $58 = HEAP32[$__end__i_i >> 2] | 0;
    if (($58 | 0) == (HEAP32[$this + 24 >> 2] | 0)) {
     __ZNSt3__16vectorIPN10ClipperLib7JoinRecENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($this + 16 | 0, $jr_i);
     $outIdx131_pre_phi = $outIdx;
     break;
    }
    if (($58 | 0) == 0) {
     $60 = 0;
    } else {
     HEAP32[$58 >> 2] = $39;
     $60 = HEAP32[$__end__i_i >> 2] | 0;
    }
    HEAP32[$__end__i_i >> 2] = $60 + 4;
    $outIdx131_pre_phi = $outIdx;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 6301) {
  $outIdx131_pre_phi = $horzEdge + 100 | 0;
 }
 $cmp132 = (HEAP32[$outIdx131_pre_phi >> 2] | 0) > -1;
 if ((HEAP32[$nextInLML >> 2] | 0) != 0) {
  if ($cmp132) {
   $103$1 = HEAP32[$xtop + 4 >> 2] | 0;
   $ytop = $horzEdge + 40 | 0;
   $104$0 = HEAP32[$ytop >> 2] | 0;
   $104$1 = HEAP32[$ytop + 4 >> 2] | 0;
   $X_i_i156 = $ref_tmp134 | 0;
   HEAP32[$X_i_i156 >> 2] = HEAP32[$xtop >> 2];
   HEAP32[$X_i_i156 + 4 >> 2] = $103$1;
   $Y_i_i157 = $ref_tmp134 + 8 | 0;
   HEAP32[$Y_i_i157 >> 2] = $104$0;
   HEAP32[$Y_i_i157 + 4 >> 2] = $104$1;
   __ZN10ClipperLib7Clipper8AddOutPtEPNS_5TEdgeERKNS_8IntPointE($this, $horzEdge, $ref_tmp134);
  }
  __ZN10ClipperLib7Clipper17UpdateEdgeIntoAELERPNS_5TEdgeE($this, $horzEdge_addr);
  STACKTOP = __stackBase__;
  return;
 }
 if ($cmp132) {
  $105$1 = HEAP32[$xtop + 4 >> 2] | 0;
  $ycurr143 = $horzEdge + 24 | 0;
  $106$0 = HEAP32[$ycurr143 >> 2] | 0;
  $106$1 = HEAP32[$ycurr143 + 4 >> 2] | 0;
  $X_i_i133 = $ref_tmp141 | 0;
  HEAP32[$X_i_i133 >> 2] = HEAP32[$xtop >> 2];
  HEAP32[$X_i_i133 + 4 >> 2] = $105$1;
  $Y_i_i134 = $ref_tmp141 + 8 | 0;
  HEAP32[$Y_i_i134 >> 2] = $106$0;
  HEAP32[$Y_i_i134 + 4 >> 2] = $106$1;
  __ZN10ClipperLib7Clipper14IntersectEdgesEPNS_5TEdgeES2_RKNS_8IntPointENS_17IntersectProtectsE($this, $horzEdge, $eMaxPair_0, $ref_tmp141, 3);
 }
 if ((HEAP32[$eMaxPair_0 + 100 >> 2] | 0) > -1) {
  $exception148 = ___cxa_allocate_exception(16) | 0;
  HEAP32[$exception148 >> 2] = 11984;
  $call_i_i_i3_i_i72 = __Znwj(32) | 0;
  HEAP32[$exception148 + 12 >> 2] = $call_i_i_i3_i_i72;
  HEAP32[$exception148 + 4 >> 2] = 33;
  HEAP32[$exception148 + 8 >> 2] = 23;
  _memcpy($call_i_i_i3_i_i72 | 0, 1912, 23) | 0;
  HEAP8[$call_i_i_i3_i_i72 + 23 | 0] = 0;
  ___cxa_throw($exception148 | 0, 16960, 216);
 }
 $prevInAEL_i53 = $eMaxPair_0 + 120 | 0;
 $114 = HEAP32[$prevInAEL_i53 >> 2] | 0;
 $nextInAEL_i54 = $eMaxPair_0 + 116 | 0;
 $115 = HEAP32[$nextInAEL_i54 >> 2] | 0;
 $tobool_i55 = ($114 | 0) != 0;
 $tobool2_i57 = ($115 | 0) == 0;
 if ($tobool2_i57 & ($tobool_i55 ^ 1)) {
  if ((HEAP32[$this + 48 >> 2] | 0) == ($eMaxPair_0 | 0)) {
   label = 6314;
  }
 } else {
  label = 6314;
 }
 if ((label | 0) == 6314) {
  if ($tobool_i55) {
   HEAP32[$114 + 116 >> 2] = $115;
  } else {
   HEAP32[$this + 48 >> 2] = $115;
  }
  if (!$tobool2_i57) {
   HEAP32[$115 + 120 >> 2] = $114;
  }
  HEAP32[$nextInAEL_i54 >> 2] = 0;
  HEAP32[$prevInAEL_i53 >> 2] = 0;
 }
 $117 = HEAP32[$prevInAEL_i74 >> 2] | 0;
 $118 = HEAP32[$nextInAEL_i73 >> 2] | 0;
 $tobool_i = ($117 | 0) != 0;
 $tobool2_i = ($118 | 0) == 0;
 do {
  if ($tobool2_i & ($tobool_i ^ 1)) {
   if ((HEAP32[$this + 48 >> 2] | 0) == ($horzEdge | 0)) {
    break;
   }
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 if ($tobool_i) {
  HEAP32[$117 + 116 >> 2] = $118;
 } else {
  HEAP32[$this + 48 >> 2] = $118;
 }
 if (!$tobool2_i) {
  HEAP32[$118 + 120 >> 2] = $117;
 }
 HEAP32[$nextInAEL_i73 >> 2] = 0;
 HEAP32[$prevInAEL_i74 >> 2] = 0;
 STACKTOP = __stackBase__;
 return;
}
function __ZN10ClipperLib7Clipper18SwapPositionsInAELEPNS_5TEdgeES2_($this, $edge1, $edge2) {
 $this = $this | 0;
 $edge1 = $edge1 | 0;
 $edge2 = $edge2 | 0;
 var $nextInAEL = 0, $0 = 0, $tobool = 0, $nextInAEL3 = 0, $2 = 0, $tobool4 = 0, $prevInAEL17 = 0, $4 = 0, $prevInAEL36 = 0, $5 = 0, $prevInAEL49 = 0, $6 = 0, $prevInAEL58 = 0, $7 = 0;
 $nextInAEL = $edge1 + 116 | 0;
 $0 = HEAP32[$nextInAEL >> 2] | 0;
 $tobool = ($0 | 0) == 0;
 do {
  if ($tobool) {
   if ((HEAP32[$edge1 + 120 >> 2] | 0) != 0) {
    break;
   }
   return;
  }
 } while (0);
 $nextInAEL3 = $edge2 + 116 | 0;
 $2 = HEAP32[$nextInAEL3 >> 2] | 0;
 $tobool4 = ($2 | 0) == 0;
 do {
  if ($tobool4) {
   if ((HEAP32[$edge2 + 120 >> 2] | 0) != 0) {
    break;
   }
   return;
  }
 } while (0);
 do {
  if (($0 | 0) == ($edge2 | 0)) {
   if (!$tobool4) {
    HEAP32[$2 + 120 >> 2] = $edge1;
   }
   $prevInAEL17 = $edge1 + 120 | 0;
   $4 = HEAP32[$prevInAEL17 >> 2] | 0;
   if (($4 | 0) != 0) {
    HEAP32[$4 + 116 >> 2] = $edge2;
   }
   HEAP32[$edge2 + 120 >> 2] = $4;
   HEAP32[$nextInAEL3 >> 2] = $edge1;
   HEAP32[$prevInAEL17 >> 2] = $edge2;
   HEAP32[$nextInAEL >> 2] = $2;
  } else {
   if (($2 | 0) == ($edge1 | 0)) {
    if (!$tobool) {
     HEAP32[$0 + 120 >> 2] = $edge2;
    }
    $prevInAEL36 = $edge2 + 120 | 0;
    $5 = HEAP32[$prevInAEL36 >> 2] | 0;
    if (($5 | 0) != 0) {
     HEAP32[$5 + 116 >> 2] = $edge1;
    }
    HEAP32[$edge1 + 120 >> 2] = $5;
    HEAP32[$nextInAEL >> 2] = $edge2;
    HEAP32[$prevInAEL36 >> 2] = $edge1;
    HEAP32[$nextInAEL3 >> 2] = $0;
    break;
   }
   $prevInAEL49 = $edge1 + 120 | 0;
   $6 = HEAP32[$prevInAEL49 >> 2] | 0;
   HEAP32[$nextInAEL >> 2] = $2;
   if (!$tobool4) {
    HEAP32[$2 + 120 >> 2] = $edge1;
   }
   $prevInAEL58 = $edge2 + 120 | 0;
   $7 = HEAP32[$prevInAEL58 >> 2] | 0;
   HEAP32[$prevInAEL49 >> 2] = $7;
   if (($7 | 0) != 0) {
    HEAP32[$7 + 116 >> 2] = $edge1;
   }
   HEAP32[$nextInAEL3 >> 2] = $0;
   if (!$tobool) {
    HEAP32[$0 + 120 >> 2] = $edge2;
   }
   HEAP32[$prevInAEL58 >> 2] = $6;
   if (($6 | 0) == 0) {
    break;
   }
   HEAP32[$6 + 116 >> 2] = $edge2;
  }
 } while (0);
 if ((HEAP32[$edge1 + 120 >> 2] | 0) == 0) {
  HEAP32[$this + 48 >> 2] = $edge1;
  return;
 }
 if ((HEAP32[$edge2 + 120 >> 2] | 0) != 0) {
  return;
 }
 HEAP32[$this + 48 >> 2] = $edge2;
 return;
}
function __ZN10ClipperLib7Clipper18SwapPositionsInSELEPNS_5TEdgeES2_($this, $edge1, $edge2) {
 $this = $this | 0;
 $edge1 = $edge1 | 0;
 $edge2 = $edge2 | 0;
 var $nextInSEL = 0, $0 = 0, $tobool = 0, $nextInSEL3 = 0, $2 = 0, $tobool4 = 0, $prevInSEL17 = 0, $4 = 0, $prevInSEL36 = 0, $5 = 0, $prevInSEL49 = 0, $6 = 0, $prevInSEL58 = 0, $7 = 0;
 $nextInSEL = $edge1 + 124 | 0;
 $0 = HEAP32[$nextInSEL >> 2] | 0;
 $tobool = ($0 | 0) == 0;
 do {
  if ($tobool) {
   if ((HEAP32[$edge1 + 128 >> 2] | 0) != 0) {
    break;
   }
   return;
  }
 } while (0);
 $nextInSEL3 = $edge2 + 124 | 0;
 $2 = HEAP32[$nextInSEL3 >> 2] | 0;
 $tobool4 = ($2 | 0) == 0;
 do {
  if ($tobool4) {
   if ((HEAP32[$edge2 + 128 >> 2] | 0) != 0) {
    break;
   }
   return;
  }
 } while (0);
 do {
  if (($0 | 0) == ($edge2 | 0)) {
   if (!$tobool4) {
    HEAP32[$2 + 128 >> 2] = $edge1;
   }
   $prevInSEL17 = $edge1 + 128 | 0;
   $4 = HEAP32[$prevInSEL17 >> 2] | 0;
   if (($4 | 0) != 0) {
    HEAP32[$4 + 124 >> 2] = $edge2;
   }
   HEAP32[$edge2 + 128 >> 2] = $4;
   HEAP32[$nextInSEL3 >> 2] = $edge1;
   HEAP32[$prevInSEL17 >> 2] = $edge2;
   HEAP32[$nextInSEL >> 2] = $2;
  } else {
   if (($2 | 0) == ($edge1 | 0)) {
    if (!$tobool) {
     HEAP32[$0 + 128 >> 2] = $edge2;
    }
    $prevInSEL36 = $edge2 + 128 | 0;
    $5 = HEAP32[$prevInSEL36 >> 2] | 0;
    if (($5 | 0) != 0) {
     HEAP32[$5 + 124 >> 2] = $edge1;
    }
    HEAP32[$edge1 + 128 >> 2] = $5;
    HEAP32[$nextInSEL >> 2] = $edge2;
    HEAP32[$prevInSEL36 >> 2] = $edge1;
    HEAP32[$nextInSEL3 >> 2] = $0;
    break;
   }
   $prevInSEL49 = $edge1 + 128 | 0;
   $6 = HEAP32[$prevInSEL49 >> 2] | 0;
   HEAP32[$nextInSEL >> 2] = $2;
   if (!$tobool4) {
    HEAP32[$2 + 128 >> 2] = $edge1;
   }
   $prevInSEL58 = $edge2 + 128 | 0;
   $7 = HEAP32[$prevInSEL58 >> 2] | 0;
   HEAP32[$prevInSEL49 >> 2] = $7;
   if (($7 | 0) != 0) {
    HEAP32[$7 + 124 >> 2] = $edge1;
   }
   HEAP32[$nextInSEL3 >> 2] = $0;
   if (!$tobool) {
    HEAP32[$0 + 128 >> 2] = $edge2;
   }
   HEAP32[$prevInSEL58 >> 2] = $6;
   if (($6 | 0) == 0) {
    break;
   }
   HEAP32[$6 + 124 >> 2] = $edge2;
  }
 } while (0);
 if ((HEAP32[$edge1 + 128 >> 2] | 0) == 0) {
  HEAP32[$this + 52 >> 2] = $edge1;
  return;
 }
 if ((HEAP32[$edge2 + 128 >> 2] | 0) != 0) {
  return;
 }
 HEAP32[$this + 52 >> 2] = $edge2;
 return;
}
function __ZN10ClipperLib7Clipper18BuildIntersectListExx($this, $botY$0, $botY$1, $topY$0, $topY$1) {
 $this = $this | 0;
 $botY$0 = $botY$0 | 0;
 $botY$1 = $botY$1 | 0;
 $topY$0 = $topY$0 | 0;
 $topY$1 = $topY$1 | 0;
 var $pt = 0, $0 = 0, $ytop_i = 0, $xtop_i = 0, $xbot_i = 0, $3$0 = 0, $3$1 = 0, $4 = 0.0, $ybot_i = 0, $sub_i$0 = 0, $mul_i = 0.0, $sub_sink_i_i = 0.0, $add_i$0 = 0, $cond_i$0 = 0, $cond_i$1 = 0, $tmpX = 0, $m_SortedEdges = 0, $e_086 = 0, $X_i_i = 0, $Y_i_i = 0, $6 = 0, $7 = 0, $e_088 = 0, $8 = 0, $ytop_i27 = 0, $xtop_i29 = 0, $xbot_i31 = 0, $11$0 = 0, $11$1 = 0, $12 = 0.0, $ybot_i33 = 0, $sub_i34$0 = 0, $mul_i36 = 0.0, $sub_sink_i_i43 = 0.0, $add_i45$0 = 0, $cond_i47$0 = 0, $cond_i47$1 = 0, $tmpX9 = 0, $14 = 0, $15 = 0, $16 = 0, $e_1_ph82 = 0, $isModified_1_ph81 = 0, $17 = 0, $e_175 = 0, $tmpX22 = 0, $19$1 = 0, $tmpX23 = 0, $20$1 = 0, $25 = 0, $26$1 = 0, $ytop_i49 = 0, $xtop_i51 = 0, $xbot_i53 = 0, $29$0 = 0, $29$1 = 0, $30 = 0.0, $ybot_i55 = 0, $sub_i56$0 = 0, $mul_i58 = 0.0, $sub_sink_i_i65 = 0.0, $add_i67$0 = 0, $cond_i69$0 = 0, $cond_i69$1 = 0, $32 = 0, $isModified_1_ph77 = 0, $e_1_lcssa = 0, $33 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $pt = __stackBase__ | 0;
 $0 = HEAP32[$this + 48 >> 2] | 0;
 if (($0 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 $ytop_i = $0 + 40 | 0;
 if ((HEAP32[$ytop_i >> 2] | 0) == ($topY$0 | 0) & (HEAP32[$ytop_i + 4 >> 2] | 0) == ($topY$1 | 0)) {
  $xtop_i = $0 + 32 | 0;
  $cond_i$1 = HEAP32[$xtop_i + 4 >> 2] | 0;
  $cond_i$0 = HEAP32[$xtop_i >> 2] | 0;
 } else {
  $xbot_i = $0 | 0;
  $3$0 = HEAP32[$xbot_i >> 2] | 0;
  $3$1 = HEAP32[$xbot_i + 4 >> 2] | 0;
  $4 = +HEAPF64[$0 + 48 >> 3];
  $ybot_i = $0 + 8 | 0;
  $sub_i$0 = _i64Subtract($topY$0, $topY$1, HEAP32[$ybot_i >> 2] | 0, HEAP32[$ybot_i + 4 >> 2] | 0) | 0;
  $mul_i = $4 * (+($sub_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0);
  if ($mul_i < 0.0) {
   $sub_sink_i_i = $mul_i + -.5;
  } else {
   $sub_sink_i_i = $mul_i + .5;
  }
  $add_i$0 = _i64Add(~~$sub_sink_i_i >>> 0, (Math_min(+Math_floor($sub_sink_i_i / 4294967296.0), 4294967295.0) | 0) >>> 0, $3$0, $3$1) | 0;
  $cond_i$1 = tempRet0;
  $cond_i$0 = $add_i$0;
 }
 $tmpX = $0 + 72 | 0;
 HEAP32[$tmpX >> 2] = $cond_i$0;
 HEAP32[$tmpX + 4 >> 2] = $cond_i$1;
 $m_SortedEdges = $this + 52 | 0;
 HEAP32[$m_SortedEdges >> 2] = $0;
 HEAP32[$0 + 128 >> 2] = 0;
 $e_086 = HEAP32[$0 + 116 >> 2] | 0;
 if (($e_086 | 0) != 0) {
  $e_088 = $e_086;
  do {
   $8 = HEAP32[$e_088 + 120 >> 2] | 0;
   HEAP32[$e_088 + 128 >> 2] = $8;
   HEAP32[$8 + 124 >> 2] = $e_088;
   HEAP32[$e_088 + 124 >> 2] = 0;
   $ytop_i27 = $e_088 + 40 | 0;
   if ((HEAP32[$ytop_i27 >> 2] | 0) == ($topY$0 | 0) & (HEAP32[$ytop_i27 + 4 >> 2] | 0) == ($topY$1 | 0)) {
    $xtop_i29 = $e_088 + 32 | 0;
    $cond_i47$1 = HEAP32[$xtop_i29 + 4 >> 2] | 0;
    $cond_i47$0 = HEAP32[$xtop_i29 >> 2] | 0;
   } else {
    $xbot_i31 = $e_088 | 0;
    $11$0 = HEAP32[$xbot_i31 >> 2] | 0;
    $11$1 = HEAP32[$xbot_i31 + 4 >> 2] | 0;
    $12 = +HEAPF64[$e_088 + 48 >> 3];
    $ybot_i33 = $e_088 + 8 | 0;
    $sub_i34$0 = _i64Subtract($topY$0, $topY$1, HEAP32[$ybot_i33 >> 2] | 0, HEAP32[$ybot_i33 + 4 >> 2] | 0) | 0;
    $mul_i36 = $12 * (+($sub_i34$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0);
    if ($mul_i36 < 0.0) {
     $sub_sink_i_i43 = $mul_i36 + -.5;
    } else {
     $sub_sink_i_i43 = $mul_i36 + .5;
    }
    $add_i45$0 = _i64Add(~~$sub_sink_i_i43 >>> 0, (Math_min(+Math_floor($sub_sink_i_i43 / 4294967296.0), 4294967295.0) | 0) >>> 0, $11$0, $11$1) | 0;
    $cond_i47$1 = tempRet0;
    $cond_i47$0 = $add_i45$0;
   }
   $tmpX9 = $e_088 + 72 | 0;
   HEAP32[$tmpX9 >> 2] = $cond_i47$0;
   HEAP32[$tmpX9 + 4 >> 2] = $cond_i47$1;
   $e_088 = HEAP32[$e_088 + 116 >> 2] | 0;
  } while (($e_088 | 0) != 0);
 }
 $X_i_i = $pt | 0;
 $Y_i_i = $pt + 8 | 0;
 $6 = $this;
 $7 = $this;
 do {
  $14 = HEAP32[$m_SortedEdges >> 2] | 0;
  if (($14 | 0) == 0) {
   break;
  }
  $15 = HEAP32[$14 + 124 >> 2] | 0;
  L7455 : do {
   if (($15 | 0) == 0) {
    $e_1_lcssa = $14;
    $isModified_1_ph77 = 0;
   } else {
    $isModified_1_ph81 = 0;
    $e_1_ph82 = $14;
    $16 = $15;
    while (1) {
     $e_175 = $e_1_ph82;
     $17 = $16;
     while (1) {
      $tmpX22 = $e_175 + 72 | 0;
      _memset($pt | 0, 0, 16);
      $19$1 = HEAP32[$tmpX22 + 4 >> 2] | 0;
      $tmpX23 = $17 + 72 | 0;
      $20$1 = HEAP32[$tmpX23 + 4 >> 2] | 0;
      if (($19$1 | 0) > ($20$1 | 0) | ($19$1 | 0) == ($20$1 | 0) & (HEAP32[$tmpX22 >> 2] | 0) >>> 0 > (HEAP32[$tmpX23 >> 2] | 0) >>> 0) {
       if (__ZN10ClipperLib14IntersectPointERNS_5TEdgeES1_RNS_8IntPointEb($e_175, $17, $pt, (HEAP8[$7 + ((HEAP32[(HEAP32[$6 >> 2] | 0) - 12 >> 2] | 0) + 12) | 0] & 1) != 0) | 0) {
        break;
       }
      }
      $25 = HEAP32[$17 + 124 >> 2] | 0;
      if (($25 | 0) == 0) {
       $e_1_lcssa = $17;
       $isModified_1_ph77 = $isModified_1_ph81;
       break L7455;
      } else {
       $e_175 = $17;
       $17 = $25;
      }
     }
     $26$1 = HEAP32[$Y_i_i + 4 >> 2] | 0;
     if (($26$1 | 0) > ($botY$1 | 0) | ($26$1 | 0) == ($botY$1 | 0) & (HEAP32[$Y_i_i >> 2] | 0) >>> 0 > $botY$0 >>> 0) {
      HEAP32[$Y_i_i >> 2] = $botY$0;
      HEAP32[$Y_i_i + 4 >> 2] = $botY$1;
      $ytop_i49 = $e_175 + 40 | 0;
      if ((HEAP32[$ytop_i49 >> 2] | 0) == ($botY$0 | 0) & (HEAP32[$ytop_i49 + 4 >> 2] | 0) == ($botY$1 | 0)) {
       $xtop_i51 = $e_175 + 32 | 0;
       $cond_i69$1 = HEAP32[$xtop_i51 + 4 >> 2] | 0;
       $cond_i69$0 = HEAP32[$xtop_i51 >> 2] | 0;
      } else {
       $xbot_i53 = $e_175 | 0;
       $29$0 = HEAP32[$xbot_i53 >> 2] | 0;
       $29$1 = HEAP32[$xbot_i53 + 4 >> 2] | 0;
       $30 = +HEAPF64[$e_175 + 48 >> 3];
       $ybot_i55 = $e_175 + 8 | 0;
       $sub_i56$0 = _i64Subtract($botY$0, $botY$1, HEAP32[$ybot_i55 >> 2] | 0, HEAP32[$ybot_i55 + 4 >> 2] | 0) | 0;
       $mul_i58 = $30 * (+($sub_i56$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0);
       if ($mul_i58 < 0.0) {
        $sub_sink_i_i65 = $mul_i58 + -.5;
       } else {
        $sub_sink_i_i65 = $mul_i58 + .5;
       }
       $add_i67$0 = _i64Add(~~$sub_sink_i_i65 >>> 0, (Math_min(+Math_floor($sub_sink_i_i65 / 4294967296.0), 4294967295.0) | 0) >>> 0, $29$0, $29$1) | 0;
       $cond_i69$1 = tempRet0;
       $cond_i69$0 = $add_i67$0;
      }
      HEAP32[$X_i_i >> 2] = $cond_i69$0;
      HEAP32[$X_i_i + 4 >> 2] = $cond_i69$1;
     }
     __ZN10ClipperLib7Clipper16AddIntersectNodeEPNS_5TEdgeES2_RKNS_8IntPointE($this, $e_175, $17, $pt);
     __ZN10ClipperLib7Clipper18SwapPositionsInSELEPNS_5TEdgeES2_($this, $e_175, $17);
     $32 = HEAP32[$e_175 + 124 >> 2] | 0;
     if (($32 | 0) == 0) {
      $e_1_lcssa = $e_175;
      $isModified_1_ph77 = 1;
      break;
     } else {
      $isModified_1_ph81 = 1;
      $e_1_ph82 = $e_175;
      $16 = $32;
     }
    }
   }
  } while (0);
  $33 = HEAP32[$e_1_lcssa + 128 >> 2] | 0;
  if (($33 | 0) == 0) {
   break;
  }
  HEAP32[$33 + 124 >> 2] = 0;
 } while ($isModified_1_ph77 << 24 >> 24 != 0);
 HEAP32[$m_SortedEdges >> 2] = 0;
 STACKTOP = __stackBase__;
 return;
}
function __ZN10ClipperLib7Clipper18FixupIntersectionsEv($this) {
 $this = $this | 0;
 var $p_i = 0, $m_IntersectNodes = 0, $2 = 0, $m_SortedEdges_i = 0, $e_010_i = 0, $e_012_i = 0, $3 = 0, $int1_029 = 0, $int2_0_in30 = 0, $int2_031 = 0, $p_i_0_cast23 = 0, $int2_035 = 0, $int2_0_in34 = 0, $int1_033 = 0, $edge1 = 0, $4 = 0, $5 = 0, $edge2 = 0, $6 = 0, $int2_126 = 0, $edge116 = 0, $8 = 0, $edge218 = 0, $10 = 0, $12 = 0, $13 = 0, $16 = 0, $e1_0 = 0, $e2_0 = 0, $int1_0 = 0, $int2_0_in = 0, $int2_0 = 0, $int1_0_lcssa = 0, $19 = 0, $21 = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $p_i = __stackBase__ | 0;
 $m_IntersectNodes = $this + 56 | 0;
 if ((HEAP32[(HEAP32[$m_IntersectNodes >> 2] | 0) + 24 >> 2] | 0) == 0) {
  $retval_0 = 1;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $2 = HEAP32[$this + 48 >> 2] | 0;
 $m_SortedEdges_i = $this + 52 | 0;
 HEAP32[$m_SortedEdges_i >> 2] = $2;
 do {
  if (($2 | 0) != 0) {
   HEAP32[$2 + 128 >> 2] = 0;
   $e_010_i = HEAP32[$2 + 116 >> 2] | 0;
   if (($e_010_i | 0) == 0) {
    break;
   } else {
    $e_012_i = $e_010_i;
   }
   do {
    $3 = HEAP32[$e_012_i + 120 >> 2] | 0;
    HEAP32[$e_012_i + 128 >> 2] = $3;
    HEAP32[$3 + 124 >> 2] = $e_012_i;
    HEAP32[$e_012_i + 124 >> 2] = 0;
    $e_012_i = HEAP32[$e_012_i + 116 >> 2] | 0;
   } while (($e_012_i | 0) != 0);
  }
 } while (0);
 $int1_029 = HEAP32[$m_IntersectNodes >> 2] | 0;
 $int2_0_in30 = $int1_029 + 24 | 0;
 $int2_031 = HEAP32[$int2_0_in30 >> 2] | 0;
 L7488 : do {
  if (($int2_031 | 0) == 0) {
   $int1_0_lcssa = $int1_029;
  } else {
   $p_i_0_cast23 = $p_i;
   $int1_033 = $int1_029;
   $int2_0_in34 = $int2_0_in30;
   $int2_035 = $int2_031;
   L7490 : while (1) {
    $edge1 = $int1_033 | 0;
    $4 = HEAP32[$edge1 >> 2] | 0;
    $5 = HEAP32[$4 + 128 >> 2] | 0;
    $edge2 = $int1_033 + 4 | 0;
    $6 = HEAP32[$edge2 >> 2] | 0;
    do {
     if (($5 | 0) == ($6 | 0)) {
      $e2_0 = $5;
      $e1_0 = $4;
     } else {
      if ((HEAP32[$4 + 124 >> 2] | 0) == ($6 | 0)) {
       $e2_0 = $6;
       $e1_0 = $4;
       break;
      }
      if (($int2_035 | 0) == 0) {
       $retval_0 = 0;
       label = 6459;
       break L7490;
      } else {
       $int2_126 = $int2_035;
      }
      while (1) {
       $edge116 = $int2_126 | 0;
       $8 = HEAP32[$edge116 >> 2] | 0;
       $edge218 = $int2_126 + 4 | 0;
       $10 = HEAP32[$edge218 >> 2] | 0;
       if ((HEAP32[$8 + 124 >> 2] | 0) == ($10 | 0)) {
        break;
       }
       if ((HEAP32[$8 + 128 >> 2] | 0) == ($10 | 0)) {
        break;
       }
       $12 = HEAP32[$int2_126 + 24 >> 2] | 0;
       if (($12 | 0) == 0) {
        $retval_0 = 0;
        label = 6457;
        break L7490;
       } else {
        $int2_126 = $12;
       }
      }
      $13 = $int1_033 + 8 | 0;
      HEAP32[$p_i_0_cast23 >> 2] = HEAP32[$13 >> 2];
      HEAP32[$p_i_0_cast23 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
      HEAP32[$p_i_0_cast23 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
      HEAP32[$p_i_0_cast23 + 12 >> 2] = HEAP32[$13 + 12 >> 2];
      HEAP32[$edge1 >> 2] = HEAP32[$edge116 >> 2];
      HEAP32[$edge2 >> 2] = HEAP32[$edge218 >> 2];
      $16 = $int2_126 + 8 | 0;
      HEAP32[$13 >> 2] = HEAP32[$16 >> 2];
      HEAP32[$13 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
      HEAP32[$13 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
      HEAP32[$13 + 12 >> 2] = HEAP32[$16 + 12 >> 2];
      HEAP32[$edge116 >> 2] = $4;
      HEAP32[$edge218 >> 2] = $6;
      HEAP32[$16 >> 2] = HEAP32[$p_i_0_cast23 >> 2];
      HEAP32[$16 + 4 >> 2] = HEAP32[$p_i_0_cast23 + 4 >> 2];
      HEAP32[$16 + 8 >> 2] = HEAP32[$p_i_0_cast23 + 8 >> 2];
      HEAP32[$16 + 12 >> 2] = HEAP32[$p_i_0_cast23 + 12 >> 2];
      $e2_0 = HEAP32[$edge2 >> 2] | 0;
      $e1_0 = HEAP32[$edge1 >> 2] | 0;
     }
    } while (0);
    __ZN10ClipperLib7Clipper18SwapPositionsInSELEPNS_5TEdgeES2_($this, $e1_0, $e2_0);
    $int1_0 = HEAP32[$int2_0_in34 >> 2] | 0;
    $int2_0_in = $int1_0 + 24 | 0;
    $int2_0 = HEAP32[$int2_0_in >> 2] | 0;
    if (($int2_0 | 0) == 0) {
     $int1_0_lcssa = $int1_0;
     break L7488;
    } else {
     $int1_033 = $int1_0;
     $int2_0_in34 = $int2_0_in;
     $int2_035 = $int2_0;
    }
   }
   if ((label | 0) == 6459) {
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   } else if ((label | 0) == 6457) {
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   }
  }
 } while (0);
 HEAP32[$m_SortedEdges_i >> 2] = 0;
 $19 = HEAP32[$int1_0_lcssa >> 2] | 0;
 $21 = HEAP32[$int1_0_lcssa + 4 >> 2] | 0;
 if ((HEAP32[$19 + 128 >> 2] | 0) == ($21 | 0)) {
  $retval_0 = 1;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $retval_0 = (HEAP32[$19 + 124 >> 2] | 0) == ($21 | 0);
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __ZN10ClipperLib7Clipper17UpdateEdgeIntoAELERPNS_5TEdgeE($this, $e) {
 $this = $this | 0;
 $e = $e | 0;
 var $0 = 0, $1 = 0, $exception = 0, $call_i_i_i3_i_i26 = 0, $6 = 0, $7 = 0, $10 = 0, $13 = 0, $16 = 0, $19 = 0, $22 = 0, $26 = 0, $28 = 0, $sub = 0.0, $ytop = 0, $30$0 = 0, $30$1 = 0, $m_Scanbeam_i = 0, $31 = 0, $call_i = 0, $Y5_i = 0, $Y7_i = 0, $34$1 = 0, $call9_i = 0, $Y10_i = 0, $sb2_0_i = 0, $next16_i = 0, $38 = 0, $Y19_i = 0, $39$1 = 0, $Y22_i = 0, $call26_i = 0, $Y27_i = 0;
 $0 = HEAP32[$e >> 2] | 0;
 $1 = HEAP32[$0 + 112 >> 2] | 0;
 if (($1 | 0) == 0) {
  $exception = ___cxa_allocate_exception(16) | 0;
  HEAP32[$exception >> 2] = 11984;
  $call_i_i_i3_i_i26 = __Znwj(32) | 0;
  HEAP32[$exception + 12 >> 2] = $call_i_i_i3_i_i26;
  HEAP32[$exception + 4 >> 2] = 33;
  HEAP32[$exception + 8 >> 2] = 31;
  _memcpy($call_i_i_i3_i_i26 | 0, 1544, 31) | 0;
  HEAP8[$call_i_i_i3_i_i26 + 31 | 0] = 0;
  ___cxa_throw($exception | 0, 16960, 216);
 }
 $6 = HEAP32[$0 + 120 >> 2] | 0;
 $7 = HEAP32[$0 + 116 >> 2] | 0;
 HEAP32[$1 + 100 >> 2] = HEAP32[$0 + 100 >> 2];
 $10 = HEAP32[(HEAP32[$e >> 2] | 0) + 112 >> 2] | 0;
 if (($6 | 0) == 0) {
  HEAP32[$this + 48 >> 2] = $10;
 } else {
  HEAP32[$6 + 116 >> 2] = $10;
 }
 if (($7 | 0) != 0) {
  HEAP32[$7 + 120 >> 2] = HEAP32[(HEAP32[$e >> 2] | 0) + 112 >> 2];
 }
 $13 = HEAP32[$e >> 2] | 0;
 HEAP32[(HEAP32[$13 + 112 >> 2] | 0) + 84 >> 2] = HEAP32[$13 + 84 >> 2];
 $16 = HEAP32[$e >> 2] | 0;
 HEAP32[(HEAP32[$16 + 112 >> 2] | 0) + 88 >> 2] = HEAP32[$16 + 88 >> 2];
 $19 = HEAP32[$e >> 2] | 0;
 HEAP32[(HEAP32[$19 + 112 >> 2] | 0) + 92 >> 2] = HEAP32[$19 + 92 >> 2];
 $22 = HEAP32[$e >> 2] | 0;
 HEAP32[(HEAP32[$22 + 112 >> 2] | 0) + 96 >> 2] = HEAP32[$22 + 96 >> 2];
 $26 = HEAP32[(HEAP32[$e >> 2] | 0) + 112 >> 2] | 0;
 HEAP32[$e >> 2] = $26;
 HEAP32[$26 + 120 >> 2] = $6;
 HEAP32[(HEAP32[$e >> 2] | 0) + 116 >> 2] = $7;
 $28 = HEAP32[$e >> 2] | 0;
 $sub = +HEAPF64[$28 + 48 >> 3] + 1.0e+40;
 if ($sub > -1.0e-20 & $sub < 1.0e-20) {
  return;
 }
 $ytop = $28 + 40 | 0;
 $30$0 = HEAP32[$ytop >> 2] | 0;
 $30$1 = HEAP32[$ytop + 4 >> 2] | 0;
 $m_Scanbeam_i = $this + 44 | 0;
 $31 = HEAP32[$m_Scanbeam_i >> 2] | 0;
 if (($31 | 0) == 0) {
  $call_i = __Znwj(16) | 0;
  HEAP32[$m_Scanbeam_i >> 2] = $call_i;
  HEAP32[$call_i + 8 >> 2] = 0;
  $Y5_i = $call_i;
  HEAP32[$Y5_i >> 2] = $30$0;
  HEAP32[$Y5_i + 4 >> 2] = $30$1;
  return;
 }
 $Y7_i = $31 | 0;
 $34$1 = HEAP32[$Y7_i + 4 >> 2] | 0;
 if (($34$1 | 0) < ($30$1 | 0) | ($34$1 | 0) == ($30$1 | 0) & (HEAP32[$Y7_i >> 2] | 0) >>> 0 < $30$0 >>> 0) {
  $call9_i = __Znwj(16) | 0;
  $Y10_i = $call9_i;
  HEAP32[$Y10_i >> 2] = $30$0;
  HEAP32[$Y10_i + 4 >> 2] = $30$1;
  HEAP32[$call9_i + 8 >> 2] = HEAP32[$m_Scanbeam_i >> 2];
  HEAP32[$m_Scanbeam_i >> 2] = $call9_i;
  return;
 } else {
  $sb2_0_i = $31;
 }
 while (1) {
  $next16_i = $sb2_0_i + 8 | 0;
  $38 = HEAP32[$next16_i >> 2] | 0;
  if (($38 | 0) == 0) {
   break;
  }
  $Y19_i = $38 | 0;
  $39$1 = HEAP32[$Y19_i + 4 >> 2] | 0;
  if (($39$1 | 0) < ($30$1 | 0) | ($39$1 | 0) == ($30$1 | 0) & (HEAP32[$Y19_i >> 2] | 0) >>> 0 < $30$0 >>> 0) {
   break;
  } else {
   $sb2_0_i = $38;
  }
 }
 $Y22_i = $sb2_0_i | 0;
 if ((HEAP32[$Y22_i >> 2] | 0) == ($30$0 | 0) & (HEAP32[$Y22_i + 4 >> 2] | 0) == ($30$1 | 0)) {
  return;
 }
 $call26_i = __Znwj(16) | 0;
 $Y27_i = $call26_i;
 HEAP32[$Y27_i >> 2] = $30$0;
 HEAP32[$Y27_i + 4 >> 2] = $30$1;
 HEAP32[$call26_i + 8 >> 2] = HEAP32[$next16_i >> 2];
 HEAP32[$next16_i >> 2] = $call26_i;
 return;
}
function __ZN10ClipperLib7Clipper16AddIntersectNodeEPNS_5TEdgeES2_RKNS_8IntPointE($this, $e1, $e2, $pt) {
 $this = $this | 0;
 $e1 = $e1 | 0;
 $e2 = $e2 | 0;
 $pt = $pt | 0;
 var $call = 0, $0 = 0, $X_i_i_i_i = 0, $2 = 0, $3 = 0, $m_IntersectNodes = 0, $4 = 0, $5 = 0, $6$0 = 0, $6$1 = 0, $pt1_i15 = 0, $Y2_i16 = 0, $7$0 = 0, $7$1 = 0, $8 = 0, $X_i25 = 0, $9$1 = 0, $X10_i26 = 0, $10$1 = 0, $cmp11_i27 = 0, $next1252 = 0, $12 = 0, $X_i = 0, $13 = 0, $X24_i37 = 0, $14$1 = 0, $X26_i38 = 0, $15$1 = 0, $cmp27_i39 = 0, $retval_0_i48 = 0, $17 = 0, $next1254 = 0, $pt_i = 0, $Y_i = 0, $18$0 = 0, $18$1 = 0, $19 = 0, $20 = 0, $21$1 = 0, $X10_i = 0, $22$1 = 0, $cmp11_i = 0, $24$1 = 0, $X26_i = 0, $25$1 = 0, $cmp27_i = 0, $27 = 0, $next12 = 0, $28 = 0, $next1251 = 0, $29 = 0, label = 0;
 $call = __Znwj(32) | 0;
 $0 = $call;
 $X_i_i_i_i = $call + 8 | 0;
 HEAP32[$call >> 2] = $e1;
 HEAP32[$call + 4 >> 2] = $e2;
 $2 = $pt;
 HEAP32[$X_i_i_i_i >> 2] = HEAP32[$2 >> 2];
 HEAP32[$X_i_i_i_i + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$X_i_i_i_i + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$X_i_i_i_i + 12 >> 2] = HEAP32[$2 + 12 >> 2];
 $3 = $call + 24 | 0;
 HEAP32[$3 >> 2] = 0;
 $m_IntersectNodes = $this + 56 | 0;
 $4 = HEAP32[$m_IntersectNodes >> 2] | 0;
 if (($4 | 0) == 0) {
  HEAP32[$m_IntersectNodes >> 2] = $0;
  return;
 }
 $5 = $call + 16 | 0;
 $6$0 = HEAP32[$5 >> 2] | 0;
 $6$1 = HEAP32[$5 + 4 >> 2] | 0;
 $pt1_i15 = $4 + 8 | 0;
 $Y2_i16 = $4 + 16 | 0;
 $7$0 = HEAP32[$Y2_i16 >> 2] | 0;
 $7$1 = HEAP32[$Y2_i16 + 4 >> 2] | 0;
 L7544 : do {
  if (($6$0 | 0) == ($7$0 | 0) & ($6$1 | 0) == ($7$1 | 0)) {
   $8 = HEAP32[$4 >> 2] | 0;
   do {
    if (($8 | 0) == ($e1 | 0) | ($8 | 0) == ($e2 | 0)) {
     $X_i25 = $pt1_i15 | 0;
     $9$1 = HEAP32[$X_i25 + 4 >> 2] | 0;
     $X10_i26 = $X_i_i_i_i;
     $10$1 = HEAP32[$X10_i26 + 4 >> 2] | 0;
     $cmp11_i27 = ($9$1 | 0) > ($10$1 | 0) | ($9$1 | 0) == ($10$1 | 0) & (HEAP32[$X_i25 >> 2] | 0) >>> 0 > (HEAP32[$X10_i26 >> 2] | 0) >>> 0;
     if (+HEAPF64[$8 + 48 >> 3] <= 0.0) {
      $retval_0_i48 = $cmp11_i27;
      break;
     }
     if ($cmp11_i27) {
      break L7544;
     } else {
      label = 6498;
      break L7544;
     }
    } else {
     $13 = HEAP32[$4 + 4 >> 2] | 0;
     $X24_i37 = $pt1_i15 | 0;
     $14$1 = HEAP32[$X24_i37 + 4 >> 2] | 0;
     $X26_i38 = $X_i_i_i_i;
     $15$1 = HEAP32[$X26_i38 + 4 >> 2] | 0;
     $cmp27_i39 = ($14$1 | 0) > ($15$1 | 0) | ($14$1 | 0) == ($15$1 | 0) & (HEAP32[$X24_i37 >> 2] | 0) >>> 0 > (HEAP32[$X26_i38 >> 2] | 0) >>> 0;
     if (!(($13 | 0) == ($e1 | 0) | ($13 | 0) == ($e2 | 0))) {
      $retval_0_i48 = $cmp27_i39;
      break;
     }
     if (+HEAPF64[$13 + 48 >> 3] <= 0.0) {
      $retval_0_i48 = $cmp27_i39;
      break;
     }
     if ($cmp27_i39) {
      break L7544;
     } else {
      label = 6498;
      break L7544;
     }
    }
   } while (0);
   if ($retval_0_i48) {
    label = 6498;
   }
  } else {
   if (($6$1 | 0) > ($7$1 | 0) | ($6$1 | 0) == ($7$1 | 0) & $6$0 >>> 0 > $7$0 >>> 0) {
    label = 6498;
   }
  }
 } while (0);
 if ((label | 0) == 6498) {
  HEAP32[$3 >> 2] = $4;
  HEAP32[$m_IntersectNodes >> 2] = $0;
  return;
 }
 $next1252 = $4 + 24 | 0;
 $12 = HEAP32[$next1252 >> 2] | 0;
 L7558 : do {
  if (($12 | 0) == 0) {
   $29 = 0;
   $next1251 = $next1252;
  } else {
   $X_i = $X_i_i_i_i;
   $next1254 = $next1252;
   $17 = $12;
   while (1) {
    $pt_i = $17 + 8 | 0;
    $Y_i = $17 + 16 | 0;
    $18$0 = HEAP32[$Y_i >> 2] | 0;
    $18$1 = HEAP32[$Y_i + 4 >> 2] | 0;
    L7562 : do {
     if (($18$0 | 0) == ($6$0 | 0) & ($18$1 | 0) == ($6$1 | 0)) {
      $19 = HEAP32[$17 >> 2] | 0;
      do {
       if (($19 | 0) == ($e1 | 0)) {
        label = 6502;
       } else {
        $20 = HEAP32[$17 + 4 >> 2] | 0;
        if (($20 | 0) == ($e1 | 0)) {
         label = 6502;
         break;
        }
        $24$1 = HEAP32[$X_i + 4 >> 2] | 0;
        $X26_i = $pt_i | 0;
        $25$1 = HEAP32[$X26_i + 4 >> 2] | 0;
        $cmp27_i = ($24$1 | 0) > ($25$1 | 0) | ($24$1 | 0) == ($25$1 | 0) & (HEAP32[$X_i >> 2] | 0) >>> 0 > (HEAP32[$X26_i >> 2] | 0) >>> 0;
        if (!(($19 | 0) == ($e2 | 0) | ($20 | 0) == ($e2 | 0))) {
         $27 = $cmp27_i;
         break;
        }
        if (+HEAPF64[$e2 + 48 >> 3] <= 0.0) {
         $27 = $cmp27_i;
         break;
        }
        if ($cmp27_i) {
         $29 = $17;
         $next1251 = $next1254;
         break L7558;
        } else {
         break L7562;
        }
       }
      } while (0);
      do {
       if ((label | 0) == 6502) {
        label = 0;
        $21$1 = HEAP32[$X_i + 4 >> 2] | 0;
        $X10_i = $pt_i | 0;
        $22$1 = HEAP32[$X10_i + 4 >> 2] | 0;
        $cmp11_i = ($21$1 | 0) > ($22$1 | 0) | ($21$1 | 0) == ($22$1 | 0) & (HEAP32[$X_i >> 2] | 0) >>> 0 > (HEAP32[$X10_i >> 2] | 0) >>> 0;
        if (+HEAPF64[$e1 + 48 >> 3] <= 0.0) {
         $27 = $cmp11_i;
         break;
        }
        if ($cmp11_i) {
         $29 = $17;
         $next1251 = $next1254;
         break L7558;
        } else {
         break L7562;
        }
       }
      } while (0);
      if (!$27) {
       $29 = $17;
       $next1251 = $next1254;
       break L7558;
      }
     } else {
      if (!(($18$1 | 0) > ($6$1 | 0) | ($18$1 | 0) == ($6$1 | 0) & $18$0 >>> 0 > $6$0 >>> 0)) {
       $29 = $17;
       $next1251 = $next1254;
       break L7558;
      }
     }
    } while (0);
    $next12 = $17 + 24 | 0;
    $28 = HEAP32[$next12 >> 2] | 0;
    if (($28 | 0) == 0) {
     $29 = 0;
     $next1251 = $next12;
     break;
    } else {
     $next1254 = $next12;
     $17 = $28;
    }
   }
  }
 } while (0);
 HEAP32[$3 >> 2] = $29;
 HEAP32[$next1251 >> 2] = $0;
 return;
}
function __ZN10ClipperLib7Clipper8DoMaximaEPNS_5TEdgeEx($this, $e, $topY$0, $topY$1) {
 $this = $this | 0;
 $e = $e | 0;
 $topY$0 = $topY$0 | 0;
 $topY$1 = $topY$1 | 0;
 var $ref_tmp = 0, $ref_tmp13 = 0, $0 = 0, $ytop_i = 0, $ytop_i_i = 0, $xtop_i = 0, $4$0 = 0, $4$1 = 0, $xtop2_i = 0, $xtop_phi_trans_insert = 0, $7$0 = 0, $7$1 = 0, $retval_0_i = 0, $eNext_0_in66 = 0, $eNext_067 = 0, $X_i_i = 0, $Y_i_i = 0, $eNext_069 = 0, $exception = 0, $call_i_i_i3_i_i41 = 0, $15 = 0, $prevInAEL_i = 0, $16 = 0, $17 = 0, $tobool_i = 0, $tobool2_i = 0, $prevInAEL_i44 = 0, $19 = 0, $nextInAEL_i45 = 0, $20 = 0, $tobool_i46 = 0, $tobool2_i48 = 0, $X_i_i63 = 0, $Y_i_i64 = 0, $exception15 = 0, $call_i_i_i3_i_i17 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $ref_tmp = __stackBase__ | 0;
 $ref_tmp13 = __stackBase__ + 16 | 0;
 $0 = HEAP32[$e + 104 >> 2] | 0;
 do {
  if (($0 | 0) == 0) {
   label = 6519;
  } else {
   $ytop_i = $e + 40 | 0;
   $ytop_i_i = $0 + 40 | 0;
   if (!((HEAP32[$ytop_i_i >> 2] | 0) == (HEAP32[$ytop_i >> 2] | 0) & (HEAP32[$ytop_i_i + 4 >> 2] | 0) == (HEAP32[$ytop_i + 4 >> 2] | 0))) {
    label = 6519;
    break;
   }
   if ((HEAP32[$0 + 112 >> 2] | 0) != 0) {
    label = 6519;
    break;
   }
   $xtop_i = $0 + 32 | 0;
   $4$0 = HEAP32[$xtop_i >> 2] | 0;
   $4$1 = HEAP32[$xtop_i + 4 >> 2] | 0;
   $xtop2_i = $e + 32 | 0;
   if (($4$0 | 0) == (HEAP32[$xtop2_i >> 2] | 0) & ($4$1 | 0) == (HEAP32[$xtop2_i + 4 >> 2] | 0)) {
    $retval_0_i = $0;
    $7$1 = $4$1;
    $7$0 = $4$0;
   } else {
    label = 6519;
   }
  }
 } while (0);
 if ((label | 0) == 6519) {
  $xtop_phi_trans_insert = $e + 32 | 0;
  $retval_0_i = HEAP32[$e + 108 >> 2] | 0;
  $7$1 = HEAP32[$xtop_phi_trans_insert + 4 >> 2] | 0;
  $7$0 = HEAP32[$xtop_phi_trans_insert >> 2] | 0;
 }
 $eNext_0_in66 = $e + 116 | 0;
 $eNext_067 = HEAP32[$eNext_0_in66 >> 2] | 0;
 L7585 : do {
  if (($eNext_067 | 0) != ($retval_0_i | 0)) {
   $X_i_i = $ref_tmp | 0;
   $Y_i_i = $ref_tmp + 8 | 0;
   $eNext_069 = $eNext_067;
   while (1) {
    if (($eNext_069 | 0) == 0) {
     break;
    }
    HEAP32[$X_i_i >> 2] = $7$0;
    HEAP32[$X_i_i + 4 >> 2] = $7$1;
    HEAP32[$Y_i_i >> 2] = $topY$0;
    HEAP32[$Y_i_i + 4 >> 2] = $topY$1;
    __ZN10ClipperLib7Clipper14IntersectEdgesEPNS_5TEdgeES2_RKNS_8IntPointENS_17IntersectProtectsE($this, $e, $eNext_069, $ref_tmp, 3);
    $eNext_069 = HEAP32[$eNext_069 + 116 >> 2] | 0;
    if (($eNext_069 | 0) == ($retval_0_i | 0)) {
     break L7585;
    }
   }
   $exception = ___cxa_allocate_exception(16) | 0;
   HEAP32[$exception >> 2] = 11984;
   $call_i_i_i3_i_i41 = __Znwj(16) | 0;
   HEAP32[$exception + 12 >> 2] = $call_i_i_i3_i_i41;
   HEAP32[$exception + 4 >> 2] = 17;
   HEAP32[$exception + 8 >> 2] = 14;
   _memcpy($call_i_i_i3_i_i41 | 0, 800, 14) | 0;
   HEAP8[$call_i_i_i3_i_i41 + 14 | 0] = 0;
   ___cxa_throw($exception | 0, 16960, 216);
  }
 } while (0);
 $15 = HEAP32[$retval_0_i + 100 >> 2] | 0;
 do {
  if ((HEAP32[$e + 100 >> 2] | 0) < 0) {
   if (($15 | 0) >= 0) {
    break;
   }
   $prevInAEL_i = $e + 120 | 0;
   $16 = HEAP32[$prevInAEL_i >> 2] | 0;
   $17 = HEAP32[$eNext_0_in66 >> 2] | 0;
   $tobool_i = ($16 | 0) != 0;
   $tobool2_i = ($17 | 0) == 0;
   if ($tobool2_i & ($tobool_i ^ 1)) {
    if ((HEAP32[$this + 48 >> 2] | 0) == ($e | 0)) {
     label = 6531;
    }
   } else {
    label = 6531;
   }
   if ((label | 0) == 6531) {
    if ($tobool_i) {
     HEAP32[$16 + 116 >> 2] = $17;
    } else {
     HEAP32[$this + 48 >> 2] = $17;
    }
    if (!$tobool2_i) {
     HEAP32[$17 + 120 >> 2] = $16;
    }
    HEAP32[$eNext_0_in66 >> 2] = 0;
    HEAP32[$prevInAEL_i >> 2] = 0;
   }
   $prevInAEL_i44 = $retval_0_i + 120 | 0;
   $19 = HEAP32[$prevInAEL_i44 >> 2] | 0;
   $nextInAEL_i45 = $retval_0_i + 116 | 0;
   $20 = HEAP32[$nextInAEL_i45 >> 2] | 0;
   $tobool_i46 = ($19 | 0) != 0;
   $tobool2_i48 = ($20 | 0) == 0;
   do {
    if ($tobool2_i48 & ($tobool_i46 ^ 1)) {
     if ((HEAP32[$this + 48 >> 2] | 0) == ($retval_0_i | 0)) {
      break;
     }
     STACKTOP = __stackBase__;
     return;
    }
   } while (0);
   if ($tobool_i46) {
    HEAP32[$19 + 116 >> 2] = $20;
   } else {
    HEAP32[$this + 48 >> 2] = $20;
   }
   if (!$tobool2_i48) {
    HEAP32[$20 + 120 >> 2] = $19;
   }
   HEAP32[$nextInAEL_i45 >> 2] = 0;
   HEAP32[$prevInAEL_i44 >> 2] = 0;
   STACKTOP = __stackBase__;
   return;
  } else {
   if (($15 | 0) <= -1) {
    break;
   }
   $X_i_i63 = $ref_tmp13 | 0;
   HEAP32[$X_i_i63 >> 2] = $7$0;
   HEAP32[$X_i_i63 + 4 >> 2] = $7$1;
   $Y_i_i64 = $ref_tmp13 + 8 | 0;
   HEAP32[$Y_i_i64 >> 2] = $topY$0;
   HEAP32[$Y_i_i64 + 4 >> 2] = $topY$1;
   __ZN10ClipperLib7Clipper14IntersectEdgesEPNS_5TEdgeES2_RKNS_8IntPointENS_17IntersectProtectsE($this, $e, $retval_0_i, $ref_tmp13, 0);
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception15 = ___cxa_allocate_exception(16) | 0;
 HEAP32[$exception15 >> 2] = 11984;
 $call_i_i_i3_i_i17 = __Znwj(16) | 0;
 HEAP32[$exception15 + 12 >> 2] = $call_i_i_i3_i_i17;
 HEAP32[$exception15 + 4 >> 2] = 17;
 HEAP32[$exception15 + 8 >> 2] = 14;
 _memcpy($call_i_i_i3_i_i17 | 0, 800, 14) | 0;
 HEAP8[$call_i_i_i3_i_i17 + 14 | 0] = 0;
 ___cxa_throw($exception15 | 0, 16960, 216);
}
function __ZNSt3__16vectorIN10ClipperLib9ExPolygonENS_9allocatorIS2_EEE7reserveEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $__first__i_i_i_i_i = 0, $__begin__i_i = 0, $1 = 0, $sub_ptr_rhs_cast_i_i = 0, $__end__i = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $6 = 0, $__end1_addr_i_015_i = 0, $add_ptr_i_i18 = 0, $incdec_ptr_i_i = 0, $15 = 0, $16 = 0, $17 = 0, $add_ptr_i_i27 = 0, $incdec_ptr_i_i_i_i_i = 0;
 $__first__i_i_i_i_i = $this + 8 | 0;
 $__begin__i_i = $this | 0;
 $1 = HEAP32[$__begin__i_i >> 2] | 0;
 $sub_ptr_rhs_cast_i_i = $1;
 if ((((HEAP32[$__first__i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i_i | 0) / 24 & -1) >>> 0 >= $__n >>> 0) {
  return;
 }
 $__end__i = $this + 4 | 0;
 $2 = HEAP32[$__end__i >> 2] | 0;
 if (($__n | 0) == 0) {
  $cond_i_i = 0;
  $5 = $1;
  $4 = $2;
 } else {
  $3 = __Znwj($__n * 24 & -1) | 0;
  $cond_i_i = $3;
  $5 = HEAP32[$__begin__i_i >> 2] | 0;
  $4 = HEAP32[$__end__i >> 2] | 0;
 }
 $add_ptr_i_i = $cond_i_i + ((($2 - $sub_ptr_rhs_cast_i_i | 0) / 24 & -1) * 24 & -1) | 0;
 $add_ptr6_i_i = $cond_i_i + ($__n * 24 & -1) | 0;
 if (($4 | 0) == ($5 | 0)) {
  $17 = $4;
  $16 = $add_ptr_i_i;
  $15 = $4;
 } else {
  $__end1_addr_i_015_i = $4;
  $6 = $add_ptr_i_i;
  while (1) {
   $add_ptr_i_i18 = $6 - 24 | 0;
   $incdec_ptr_i_i = $__end1_addr_i_015_i - 24 | 0;
   if (($add_ptr_i_i18 | 0) != 0) {
    __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($add_ptr_i_i18 | 0, $incdec_ptr_i_i | 0);
    __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($6 - 24 + 12 | 0, $__end1_addr_i_015_i - 24 + 12 | 0);
   }
   if (($incdec_ptr_i_i | 0) == ($5 | 0)) {
    break;
   } else {
    $__end1_addr_i_015_i = $incdec_ptr_i_i;
    $6 = $add_ptr_i_i18;
   }
  }
  $17 = HEAP32[$__begin__i_i >> 2] | 0;
  $16 = $add_ptr_i_i18;
  $15 = HEAP32[$__end__i >> 2] | 0;
 }
 HEAP32[$__begin__i_i >> 2] = $16;
 HEAP32[$__end__i >> 2] = $add_ptr_i_i;
 HEAP32[$__first__i_i_i_i_i >> 2] = $add_ptr6_i_i;
 $add_ptr_i_i27 = $15;
 while (1) {
  if (($17 | 0) == ($add_ptr_i_i27 | 0)) {
   break;
  }
  $incdec_ptr_i_i_i_i_i = $add_ptr_i_i27 - 24 | 0;
  __ZN10ClipperLib9ExPolygonD2Ev($incdec_ptr_i_i_i_i_i);
  $add_ptr_i_i27 = $incdec_ptr_i_i_i_i_i;
 }
 if (($17 | 0) == 0) {
  return;
 }
 __ZdlPv($17);
 return;
}
function __ZN10ClipperLib7Clipper10JoinPointsEPKNS_7JoinRecERPNS_5OutPtES6_($this, $j, $p1, $p2) {
 $this = $this | 0;
 $j = $j | 0;
 $p1 = $p1 | 0;
 $p2 = $p2 | 0;
 var $agg_tmp103307 = 0, $agg_tmp93255 = 0, $agg_tmp77218 = 0, $agg_tmp62181 = 0, $agg_tmp59160 = 0, $agg_tmp49129 = 0, $agg_tmp3392 = 0, $agg_tmp10676 = 0, $pp1a = 0, $pp2a = 0, $pt1 = 0, $pt2 = 0, $pt3 = 0, $pt4 = 0, $1 = 0, $2 = 0, $4 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $call10_not = 0, $agg_tmp_sroa_0_0__idx = 0, $agg_tmp_sroa_0_0_copyload$0 = 0, $agg_tmp_sroa_0_0_copyload$1 = 0, $agg_tmp_sroa_1_8__idx366 = 0, $agg_tmp_sroa_1_8_copyload$0 = 0, $agg_tmp_sroa_1_8_copyload$1 = 0, $agg_tmp19_sroa_0_0__idx = 0, $agg_tmp19_sroa_0_0_copyload$0 = 0, $agg_tmp19_sroa_0_0_copyload$1 = 0, $agg_tmp19_sroa_1_8__idx387 = 0, $agg_tmp19_sroa_1_8_copyload$0 = 0, $agg_tmp19_sroa_1_8_copyload$1 = 0, $agg_tmp20_sroa_0_0__idx = 0, $agg_tmp20_sroa_0_0_copyload$0 = 0, $agg_tmp20_sroa_0_0_copyload$1 = 0, $agg_tmp20_sroa_1_8__idx412 = 0, $agg_tmp20_sroa_1_8_copyload$0 = 0, $agg_tmp20_sroa_1_8_copyload$1 = 0, $agg_tmp21_sroa_0_0__idx = 0, $agg_tmp21_sroa_0_0_copyload$0 = 0, $agg_tmp21_sroa_0_0_copyload$1 = 0, $agg_tmp21_sroa_1_8__idx433 = 0, $agg_tmp21_sroa_1_8_copyload$0 = 0, $agg_tmp21_sroa_1_8_copyload$1 = 0, $sub_i$0 = 0, $sub_i$1 = 0, $sub5_i$0 = 0, $div_i$0 = 0, $div_i$1 = 0, $$etemp$16$1 = 0, $cmp_i_i = 0, $sub_i_i$0 = 0, $cond_i_i$1 = 0, $$etemp$18$1 = 0, $cmp9_i = 0, $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload$0 = 0, $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload$1 = 0, $agg_tmp19_sroa_0_0_copyload_agg_tmp_sroa_0_0_copyload$0 = 0, $agg_tmp19_sroa_0_0_copyload_agg_tmp_sroa_0_0_copyload$1 = 0, $cmp13_i = 0, $agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$0 = 0, $agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$1 = 0, $agg_tmp21_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload$0 = 0, $agg_tmp21_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload$1 = 0, $storemerge474$0 = 0, $storemerge474$1 = 0, $storemerge471$0 = 0, $storemerge471$1 = 0, $cmp23_i = 0, $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$0 = 0, $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$1 = 0, $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload$0 = 0, $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload$1 = 0, $cmp33_i = 0, $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456$0 = 0, $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456$1 = 0, $agg_tmp19_sroa_1_8_copyload_agg_tmp_sroa_1_8_copyload458$0 = 0, $agg_tmp19_sroa_1_8_copyload_agg_tmp_sroa_1_8_copyload458$1 = 0, $cmp38_i = 0, $agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$0 = 0, $agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$1 = 0, $agg_tmp21_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload467$0 = 0, $agg_tmp21_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload467$1 = 0, $storemerge470$0 = 0, $storemerge470$1 = 0, $storemerge$0 = 0, $storemerge$1 = 0, $cmp49_i = 0, $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload457_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload465$0 = 0, $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload457_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload465$1 = 0, $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$0 = 0, $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$1 = 0, $agg_tmp56_sroa_1_8_copyload$0 = 0, $agg_tmp56_sroa_1_8_copyload$1 = 0, $agg_tmp56_sroa_0_0_copyload$0 = 0, $agg_tmp56_sroa_0_0_copyload$1 = 0, $18$0 = 0, $18$1 = 0, $19$0 = 0, $19$1 = 0, $20 = 0, $prev25 = 0, $21 = 0, $X_i = 0, $Y_i83 = 0, $X_i84 = 0, $Y_i87 = 0, $agg_tmp3392475 = 0, $exception_i96 = 0, $tmp93 = 0, $call_i98 = 0, $27 = 0, $X_i_i_i_i_i99 = 0, $next_i100 = 0, $33 = 0, $34$0 = 0, $34$1 = 0, $cmp_i115 = 0, $Y_i116 = 0, $X_i121 = 0, $Y_i124 = 0, $agg_tmp49129476 = 0, $exception_i133 = 0, $tmp130 = 0, $call_i135 = 0, $39 = 0, $X_i_i_i_i_i136 = 0, $next_i137 = 0, $agg_tmp52_sroa_1_8__idx341 = 0, $agg_tmp52_sroa_1_8_copyload$0 = 0, $agg_tmp52_sroa_1_8_copyload$1 = 0, $agg_tmp54_sroa_0_0__idx = 0, $agg_tmp54_sroa_0_0_copyload$0 = 0, $agg_tmp54_sroa_0_0_copyload$1 = 0, $agg_tmp54_sroa_1_8__idx339 = 0, $agg_tmp54_sroa_1_8_copyload$0 = 0, $agg_tmp54_sroa_1_8_copyload$1 = 0, $agg_tmp59160477 = 0, $tmp161 = 0, $call_i166 = 0, $45 = 0, $X_i_i_i_i_i167 = 0, $next_i168 = 0, $agg_tmp62181478 = 0, $tmp182 = 0, $call_i187 = 0, $51 = 0, $X_i_i_i_i_i188 = 0, $next_i189 = 0, $57 = 0, $prev68 = 0, $58 = 0, $X_i202 = 0, $Y_i205 = 0, $X_i210 = 0, $Y_i213 = 0, $agg_tmp77218479 = 0, $exception_i222 = 0, $tmp219 = 0, $call_i224 = 0, $64 = 0, $X_i_i_i_i_i225 = 0, $next_i226 = 0, $p3_0 = 0, $70$0 = 0, $70$1 = 0, $cmp_i241 = 0, $Y_i242 = 0, $X_i247 = 0, $Y_i250 = 0, $agg_tmp93255480 = 0, $exception_i259 = 0, $tmp256 = 0, $call_i261 = 0, $75 = 0, $X_i_i_i_i_i262 = 0, $next_i263 = 0, $agg_tmp96_sroa_1_8__idx334 = 0, $agg_tmp96_sroa_1_8_copyload$0 = 0, $agg_tmp96_sroa_1_8_copyload$1 = 0, $agg_tmp98_sroa_0_0__idx = 0, $agg_tmp98_sroa_0_0_copyload$0 = 0, $agg_tmp98_sroa_0_0_copyload$1 = 0, $agg_tmp98_sroa_1_8__idx332 = 0, $agg_tmp98_sroa_1_8_copyload$0 = 0, $agg_tmp98_sroa_1_8_copyload$1 = 0, $agg_tmp103307481 = 0, $tmp308 = 0, $call_i313 = 0, $81 = 0, $X_i_i_i_i_i314 = 0, $next_i315 = 0, $agg_tmp10676482 = 0, $tmp77 = 0, $call_i = 0, $87 = 0, $X_i_i_i_i_i = 0, $next_i = 0, $p4_0 = 0, $93 = 0, $next112 = 0, $95 = 0, $prev114 = 0, $prev122 = 0, $next125 = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 $agg_tmp103307 = __stackBase__ | 0;
 $agg_tmp93255 = __stackBase__ + 16 | 0;
 $agg_tmp77218 = __stackBase__ + 32 | 0;
 $agg_tmp62181 = __stackBase__ + 48 | 0;
 $agg_tmp59160 = __stackBase__ + 64 | 0;
 $agg_tmp49129 = __stackBase__ + 80 | 0;
 $agg_tmp3392 = __stackBase__ + 96 | 0;
 $agg_tmp10676 = __stackBase__ + 112 | 0;
 $pp1a = __stackBase__ + 128 | 0;
 $pp2a = __stackBase__ + 136 | 0;
 $pt1 = __stackBase__ + 144 | 0;
 $pt2 = __stackBase__ + 160 | 0;
 $pt3 = __stackBase__ + 176 | 0;
 $pt4 = __stackBase__ + 192 | 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = HEAP32[$1 + (HEAP32[$j + 32 >> 2] << 2) >> 2] | 0;
 $4 = HEAP32[$1 + (HEAP32[$j + 72 >> 2] << 2) >> 2] | 0;
 if (($2 | 0) == 0 | ($4 | 0) == 0) {
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 HEAP32[$pp1a >> 2] = HEAP32[$2 + 16 >> 2];
 HEAP32[$pp2a >> 2] = HEAP32[$4 + 16 >> 2];
 $7 = $pt1;
 $8 = $j + 40 | 0;
 HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
 HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
 HEAP32[$7 + 12 >> 2] = HEAP32[$8 + 12 >> 2];
 $9 = $pt2;
 $10 = $j + 56 | 0;
 HEAP32[$9 >> 2] = HEAP32[$10 >> 2];
 HEAP32[$9 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
 HEAP32[$9 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
 HEAP32[$9 + 12 >> 2] = HEAP32[$10 + 12 >> 2];
 $11 = $pt3;
 $12 = $j;
 HEAP32[$11 >> 2] = HEAP32[$12 >> 2];
 HEAP32[$11 + 4 >> 2] = HEAP32[$12 + 4 >> 2];
 HEAP32[$11 + 8 >> 2] = HEAP32[$12 + 8 >> 2];
 HEAP32[$11 + 12 >> 2] = HEAP32[$12 + 12 >> 2];
 $13 = $pt4;
 $14 = $j + 16 | 0;
 HEAP32[$13 >> 2] = HEAP32[$14 >> 2];
 HEAP32[$13 + 4 >> 2] = HEAP32[$14 + 4 >> 2];
 HEAP32[$13 + 8 >> 2] = HEAP32[$14 + 8 >> 2];
 HEAP32[$13 + 12 >> 2] = HEAP32[$14 + 12 >> 2];
 if (!(__ZN10ClipperLib11FindSegmentERPNS_5OutPtERNS_8IntPointES4_($pp1a, $pt1, $pt2) | 0)) {
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 do {
  if (($2 | 0) == ($4 | 0)) {
   $15 = HEAP32[$pp1a >> 2] | 0;
   HEAP32[$pp2a >> 2] = HEAP32[$15 + 24 >> 2];
   $call10_not = (__ZN10ClipperLib11FindSegmentERPNS_5OutPtERNS_8IntPointES4_($pp2a, $pt3, $pt4) | 0) ^ 1;
   if ((HEAP32[$pp2a >> 2] | 0) == ($15 | 0) | $call10_not) {
    $retval_0 = 0;
   } else {
    break;
   }
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  } else {
   if (__ZN10ClipperLib11FindSegmentERPNS_5OutPtERNS_8IntPointES4_($pp2a, $pt3, $pt4) | 0) {
    break;
   } else {
    $retval_0 = 0;
   }
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  }
 } while (0);
 $agg_tmp_sroa_0_0__idx = $pt1 | 0;
 $agg_tmp_sroa_0_0_copyload$0 = HEAP32[$agg_tmp_sroa_0_0__idx >> 2] | 0;
 $agg_tmp_sroa_0_0_copyload$1 = HEAP32[$agg_tmp_sroa_0_0__idx + 4 >> 2] | 0;
 $agg_tmp_sroa_1_8__idx366 = $pt1 + 8 | 0;
 $agg_tmp_sroa_1_8_copyload$0 = HEAP32[$agg_tmp_sroa_1_8__idx366 >> 2] | 0;
 $agg_tmp_sroa_1_8_copyload$1 = HEAP32[$agg_tmp_sroa_1_8__idx366 + 4 >> 2] | 0;
 $agg_tmp19_sroa_0_0__idx = $pt2 | 0;
 $agg_tmp19_sroa_0_0_copyload$0 = HEAP32[$agg_tmp19_sroa_0_0__idx >> 2] | 0;
 $agg_tmp19_sroa_0_0_copyload$1 = HEAP32[$agg_tmp19_sroa_0_0__idx + 4 >> 2] | 0;
 $agg_tmp19_sroa_1_8__idx387 = $pt2 + 8 | 0;
 $agg_tmp19_sroa_1_8_copyload$0 = HEAP32[$agg_tmp19_sroa_1_8__idx387 >> 2] | 0;
 $agg_tmp19_sroa_1_8_copyload$1 = HEAP32[$agg_tmp19_sroa_1_8__idx387 + 4 >> 2] | 0;
 $agg_tmp20_sroa_0_0__idx = $pt3 | 0;
 $agg_tmp20_sroa_0_0_copyload$0 = HEAP32[$agg_tmp20_sroa_0_0__idx >> 2] | 0;
 $agg_tmp20_sroa_0_0_copyload$1 = HEAP32[$agg_tmp20_sroa_0_0__idx + 4 >> 2] | 0;
 $agg_tmp20_sroa_1_8__idx412 = $pt3 + 8 | 0;
 $agg_tmp20_sroa_1_8_copyload$0 = HEAP32[$agg_tmp20_sroa_1_8__idx412 >> 2] | 0;
 $agg_tmp20_sroa_1_8_copyload$1 = HEAP32[$agg_tmp20_sroa_1_8__idx412 + 4 >> 2] | 0;
 $agg_tmp21_sroa_0_0__idx = $pt4 | 0;
 $agg_tmp21_sroa_0_0_copyload$0 = HEAP32[$agg_tmp21_sroa_0_0__idx >> 2] | 0;
 $agg_tmp21_sroa_0_0_copyload$1 = HEAP32[$agg_tmp21_sroa_0_0__idx + 4 >> 2] | 0;
 $agg_tmp21_sroa_1_8__idx433 = $pt4 + 8 | 0;
 $agg_tmp21_sroa_1_8_copyload$0 = HEAP32[$agg_tmp21_sroa_1_8__idx433 >> 2] | 0;
 $agg_tmp21_sroa_1_8_copyload$1 = HEAP32[$agg_tmp21_sroa_1_8__idx433 + 4 >> 2] | 0;
 do {
  if (($agg_tmp_sroa_1_8_copyload$0 | 0) == ($agg_tmp19_sroa_1_8_copyload$0 | 0) & ($agg_tmp_sroa_1_8_copyload$1 | 0) == ($agg_tmp19_sroa_1_8_copyload$1 | 0)) {
   label = 6593;
  } else {
   $sub_i$0 = _i64Subtract($agg_tmp_sroa_0_0_copyload$0, $agg_tmp_sroa_0_0_copyload$1, $agg_tmp19_sroa_0_0_copyload$0, $agg_tmp19_sroa_0_0_copyload$1) | 0;
   $sub_i$1 = tempRet0;
   $sub5_i$0 = _i64Subtract($agg_tmp_sroa_1_8_copyload$0, $agg_tmp_sroa_1_8_copyload$1, $agg_tmp19_sroa_1_8_copyload$0, $agg_tmp19_sroa_1_8_copyload$1) | 0;
   $div_i$0 = ___divdi3($sub_i$0, $sub_i$1, $sub5_i$0, tempRet0) | 0;
   $div_i$1 = tempRet0;
   $$etemp$16$1 = 0;
   $cmp_i_i = ($div_i$1 | 0) < ($$etemp$16$1 | 0) | ($div_i$1 | 0) == ($$etemp$16$1 | 0) & $div_i$0 >>> 0 < 0 >>> 0;
   $sub_i_i$0 = _i64Subtract(0, 0, $div_i$0, $div_i$1) | 0;
   $cond_i_i$1 = $cmp_i_i ? tempRet0 : $div_i$1;
   $$etemp$18$1 = 0;
   if (($cond_i_i$1 | 0) > ($$etemp$18$1 | 0) | ($cond_i_i$1 | 0) == ($$etemp$18$1 | 0) & ($cmp_i_i ? $sub_i_i$0 : $div_i$0) >>> 0 > 1 >>> 0) {
    label = 6593;
    break;
   }
   $cmp33_i = ($agg_tmp_sroa_1_8_copyload$1 | 0) < ($agg_tmp19_sroa_1_8_copyload$1 | 0) | ($agg_tmp_sroa_1_8_copyload$1 | 0) == ($agg_tmp19_sroa_1_8_copyload$1 | 0) & $agg_tmp_sroa_1_8_copyload$0 >>> 0 < $agg_tmp19_sroa_1_8_copyload$0 >>> 0;
   $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456$0 = $cmp33_i ? $agg_tmp_sroa_1_8_copyload$0 : $agg_tmp19_sroa_1_8_copyload$0;
   $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456$1 = $cmp33_i ? $agg_tmp_sroa_1_8_copyload$1 : $agg_tmp19_sroa_1_8_copyload$1;
   $agg_tmp19_sroa_1_8_copyload_agg_tmp_sroa_1_8_copyload458$0 = $cmp33_i ? $agg_tmp19_sroa_1_8_copyload$0 : $agg_tmp_sroa_1_8_copyload$0;
   $agg_tmp19_sroa_1_8_copyload_agg_tmp_sroa_1_8_copyload458$1 = $cmp33_i ? $agg_tmp19_sroa_1_8_copyload$1 : $agg_tmp_sroa_1_8_copyload$1;
   $cmp38_i = ($agg_tmp20_sroa_1_8_copyload$1 | 0) < ($agg_tmp21_sroa_1_8_copyload$1 | 0) | ($agg_tmp20_sroa_1_8_copyload$1 | 0) == ($agg_tmp21_sroa_1_8_copyload$1 | 0) & $agg_tmp20_sroa_1_8_copyload$0 >>> 0 < $agg_tmp21_sroa_1_8_copyload$0 >>> 0;
   $agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$0 = $cmp38_i ? $agg_tmp20_sroa_1_8_copyload$0 : $agg_tmp21_sroa_1_8_copyload$0;
   $agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$1 = $cmp38_i ? $agg_tmp20_sroa_1_8_copyload$1 : $agg_tmp21_sroa_1_8_copyload$1;
   $agg_tmp21_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload467$0 = $cmp38_i ? $agg_tmp21_sroa_1_8_copyload$0 : $agg_tmp20_sroa_1_8_copyload$0;
   $agg_tmp21_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload467$1 = $cmp38_i ? $agg_tmp21_sroa_1_8_copyload$1 : $agg_tmp20_sroa_1_8_copyload$1;
   if (($agg_tmp19_sroa_1_8_copyload_agg_tmp_sroa_1_8_copyload458$1 | 0) < ($agg_tmp21_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload467$1 | 0) | ($agg_tmp19_sroa_1_8_copyload_agg_tmp_sroa_1_8_copyload458$1 | 0) == ($agg_tmp21_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload467$1 | 0) & $agg_tmp19_sroa_1_8_copyload_agg_tmp_sroa_1_8_copyload458$0 >>> 0 < $agg_tmp21_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload467$0 >>> 0) {
    $storemerge$1 = $agg_tmp19_sroa_1_8_copyload_agg_tmp_sroa_1_8_copyload458$1;
    $storemerge$0 = $agg_tmp19_sroa_1_8_copyload_agg_tmp_sroa_1_8_copyload458$0;
    $storemerge470$1 = $cmp33_i ? $agg_tmp19_sroa_0_0_copyload$1 : $agg_tmp_sroa_0_0_copyload$1;
    $storemerge470$0 = $cmp33_i ? $agg_tmp19_sroa_0_0_copyload$0 : $agg_tmp_sroa_0_0_copyload$0;
   } else {
    $storemerge$1 = $agg_tmp21_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload467$1;
    $storemerge$0 = $agg_tmp21_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload467$0;
    $storemerge470$1 = $cmp38_i ? $agg_tmp21_sroa_0_0_copyload$1 : $agg_tmp20_sroa_0_0_copyload$1;
    $storemerge470$0 = $cmp38_i ? $agg_tmp21_sroa_0_0_copyload$0 : $agg_tmp20_sroa_0_0_copyload$0;
   }
   HEAP32[$agg_tmp_sroa_0_0__idx >> 2] = $storemerge470$0;
   HEAP32[$agg_tmp_sroa_0_0__idx + 4 >> 2] = $storemerge470$1;
   HEAP32[$agg_tmp_sroa_1_8__idx366 >> 2] = $storemerge$0;
   HEAP32[$agg_tmp_sroa_1_8__idx366 + 4 >> 2] = $storemerge$1;
   $cmp49_i = ($agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456$1 | 0) > ($agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$1 | 0) | ($agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456$1 | 0) == ($agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$1 | 0) & $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456$0 >>> 0 > $agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$0 >>> 0;
   $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload457_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload465$0 = $cmp49_i ? $cmp33_i ? $agg_tmp_sroa_0_0_copyload$0 : $agg_tmp19_sroa_0_0_copyload$0 : $cmp38_i ? $agg_tmp20_sroa_0_0_copyload$0 : $agg_tmp21_sroa_0_0_copyload$0;
   $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload457_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload465$1 = $cmp49_i ? $cmp33_i ? $agg_tmp_sroa_0_0_copyload$1 : $agg_tmp19_sroa_0_0_copyload$1 : $cmp38_i ? $agg_tmp20_sroa_0_0_copyload$1 : $agg_tmp21_sroa_0_0_copyload$1;
   $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$0 = $cmp49_i ? $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456$0 : $agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$0;
   $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$1 = $cmp49_i ? $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456$1 : $agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$1;
   HEAP32[$agg_tmp19_sroa_0_0__idx >> 2] = $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload457_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload465$0;
   HEAP32[$agg_tmp19_sroa_0_0__idx + 4 >> 2] = $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload457_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload465$1;
   HEAP32[$agg_tmp19_sroa_1_8__idx387 >> 2] = $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$0;
   HEAP32[$agg_tmp19_sroa_1_8__idx387 + 4 >> 2] = $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$1;
   if (($storemerge$1 | 0) > ($agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$1 | 0) | ($storemerge$1 | 0) == ($agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$1 | 0) & $storemerge$0 >>> 0 > $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$0 >>> 0) {
    $19$1 = $storemerge470$1;
    $19$0 = $storemerge470$0;
    $18$1 = $storemerge$1;
    $18$0 = $storemerge$0;
    $agg_tmp56_sroa_0_0_copyload$1 = $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload457_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload465$1;
    $agg_tmp56_sroa_0_0_copyload$0 = $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload457_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload465$0;
    $agg_tmp56_sroa_1_8_copyload$1 = $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$1;
    $agg_tmp56_sroa_1_8_copyload$0 = $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload456_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload464$0;
    break;
   } else {
    $retval_0 = 0;
   }
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  }
 } while (0);
 do {
  if ((label | 0) == 6593) {
   $cmp9_i = ($agg_tmp_sroa_0_0_copyload$1 | 0) > ($agg_tmp19_sroa_0_0_copyload$1 | 0) | ($agg_tmp_sroa_0_0_copyload$1 | 0) == ($agg_tmp19_sroa_0_0_copyload$1 | 0) & $agg_tmp_sroa_0_0_copyload$0 >>> 0 > $agg_tmp19_sroa_0_0_copyload$0 >>> 0;
   $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload$0 = $cmp9_i ? $agg_tmp_sroa_0_0_copyload$0 : $agg_tmp19_sroa_0_0_copyload$0;
   $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload$1 = $cmp9_i ? $agg_tmp_sroa_0_0_copyload$1 : $agg_tmp19_sroa_0_0_copyload$1;
   $agg_tmp19_sroa_0_0_copyload_agg_tmp_sroa_0_0_copyload$0 = $cmp9_i ? $agg_tmp19_sroa_0_0_copyload$0 : $agg_tmp_sroa_0_0_copyload$0;
   $agg_tmp19_sroa_0_0_copyload_agg_tmp_sroa_0_0_copyload$1 = $cmp9_i ? $agg_tmp19_sroa_0_0_copyload$1 : $agg_tmp_sroa_0_0_copyload$1;
   $cmp13_i = ($agg_tmp20_sroa_0_0_copyload$1 | 0) > ($agg_tmp21_sroa_0_0_copyload$1 | 0) | ($agg_tmp20_sroa_0_0_copyload$1 | 0) == ($agg_tmp21_sroa_0_0_copyload$1 | 0) & $agg_tmp20_sroa_0_0_copyload$0 >>> 0 > $agg_tmp21_sroa_0_0_copyload$0 >>> 0;
   $agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$0 = $cmp13_i ? $agg_tmp20_sroa_0_0_copyload$0 : $agg_tmp21_sroa_0_0_copyload$0;
   $agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$1 = $cmp13_i ? $agg_tmp20_sroa_0_0_copyload$1 : $agg_tmp21_sroa_0_0_copyload$1;
   $agg_tmp21_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload$0 = $cmp13_i ? $agg_tmp21_sroa_0_0_copyload$0 : $agg_tmp20_sroa_0_0_copyload$0;
   $agg_tmp21_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload$1 = $cmp13_i ? $agg_tmp21_sroa_0_0_copyload$1 : $agg_tmp20_sroa_0_0_copyload$1;
   if (($agg_tmp19_sroa_0_0_copyload_agg_tmp_sroa_0_0_copyload$1 | 0) > ($agg_tmp21_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload$1 | 0) | ($agg_tmp19_sroa_0_0_copyload_agg_tmp_sroa_0_0_copyload$1 | 0) == ($agg_tmp21_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload$1 | 0) & $agg_tmp19_sroa_0_0_copyload_agg_tmp_sroa_0_0_copyload$0 >>> 0 > $agg_tmp21_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload$0 >>> 0) {
    $storemerge471$1 = $cmp9_i ? $agg_tmp19_sroa_1_8_copyload$1 : $agg_tmp_sroa_1_8_copyload$1;
    $storemerge471$0 = $cmp9_i ? $agg_tmp19_sroa_1_8_copyload$0 : $agg_tmp_sroa_1_8_copyload$0;
    $storemerge474$1 = $agg_tmp19_sroa_0_0_copyload_agg_tmp_sroa_0_0_copyload$1;
    $storemerge474$0 = $agg_tmp19_sroa_0_0_copyload_agg_tmp_sroa_0_0_copyload$0;
   } else {
    $storemerge471$1 = $cmp13_i ? $agg_tmp21_sroa_1_8_copyload$1 : $agg_tmp20_sroa_1_8_copyload$1;
    $storemerge471$0 = $cmp13_i ? $agg_tmp21_sroa_1_8_copyload$0 : $agg_tmp20_sroa_1_8_copyload$0;
    $storemerge474$1 = $agg_tmp21_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload$1;
    $storemerge474$0 = $agg_tmp21_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload$0;
   }
   HEAP32[$agg_tmp_sroa_0_0__idx >> 2] = $storemerge474$0;
   HEAP32[$agg_tmp_sroa_0_0__idx + 4 >> 2] = $storemerge474$1;
   HEAP32[$agg_tmp_sroa_1_8__idx366 >> 2] = $storemerge471$0;
   HEAP32[$agg_tmp_sroa_1_8__idx366 + 4 >> 2] = $storemerge471$1;
   $cmp23_i = ($agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload$1 | 0) < ($agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$1 | 0) | ($agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload$1 | 0) == ($agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$1 | 0) & $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload$0 >>> 0 < $agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$0 >>> 0;
   $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$0 = $cmp23_i ? $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload$0 : $agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$0;
   $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$1 = $cmp23_i ? $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload$1 : $agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$1;
   $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload$0 = $cmp23_i ? $cmp9_i ? $agg_tmp_sroa_1_8_copyload$0 : $agg_tmp19_sroa_1_8_copyload$0 : $cmp13_i ? $agg_tmp20_sroa_1_8_copyload$0 : $agg_tmp21_sroa_1_8_copyload$0;
   $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload$1 = $cmp23_i ? $cmp9_i ? $agg_tmp_sroa_1_8_copyload$1 : $agg_tmp19_sroa_1_8_copyload$1 : $cmp13_i ? $agg_tmp20_sroa_1_8_copyload$1 : $agg_tmp21_sroa_1_8_copyload$1;
   HEAP32[$agg_tmp19_sroa_0_0__idx >> 2] = $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$0;
   HEAP32[$agg_tmp19_sroa_0_0__idx + 4 >> 2] = $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$1;
   HEAP32[$agg_tmp19_sroa_1_8__idx387 >> 2] = $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload$0;
   HEAP32[$agg_tmp19_sroa_1_8__idx387 + 4 >> 2] = $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload$1;
   if (($storemerge474$1 | 0) < ($agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$1 | 0) | ($storemerge474$1 | 0) == ($agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$1 | 0) & $storemerge474$0 >>> 0 < $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$0 >>> 0) {
    $19$1 = $storemerge474$1;
    $19$0 = $storemerge474$0;
    $18$1 = $storemerge471$1;
    $18$0 = $storemerge471$0;
    $agg_tmp56_sroa_0_0_copyload$1 = $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$1;
    $agg_tmp56_sroa_0_0_copyload$0 = $agg_tmp_sroa_0_0_copyload_agg_tmp19_sroa_0_0_copyload_agg_tmp20_sroa_0_0_copyload_agg_tmp21_sroa_0_0_copyload$0;
    $agg_tmp56_sroa_1_8_copyload$1 = $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload$1;
    $agg_tmp56_sroa_1_8_copyload$0 = $agg_tmp_sroa_1_8_copyload_agg_tmp19_sroa_1_8_copyload_agg_tmp20_sroa_1_8_copyload_agg_tmp21_sroa_1_8_copyload$0;
    break;
   } else {
    $retval_0 = 0;
   }
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  }
 } while (0);
 $20 = HEAP32[$pp1a >> 2] | 0;
 $prev25 = $20 + 28 | 0;
 $21 = HEAP32[$prev25 >> 2] | 0;
 $X_i = $20 + 8 | 0;
 do {
  if ((HEAP32[$X_i >> 2] | 0) == ($19$0 | 0) & (HEAP32[$X_i + 4 >> 2] | 0) == ($19$1 | 0)) {
   $Y_i83 = $20 + 16 | 0;
   if (!((HEAP32[$Y_i83 >> 2] | 0) == ($18$0 | 0) & (HEAP32[$Y_i83 + 4 >> 2] | 0) == ($18$1 | 0))) {
    label = 6604;
    break;
   }
   HEAP32[$p1 >> 2] = $20;
   $33 = $20;
  } else {
   label = 6604;
  }
 } while (0);
 L7681 : do {
  if ((label | 0) == 6604) {
   $X_i84 = $21 + 8 | 0;
   do {
    if ((HEAP32[$X_i84 >> 2] | 0) == ($19$0 | 0) & (HEAP32[$X_i84 + 4 >> 2] | 0) == ($19$1 | 0)) {
     $Y_i87 = $21 + 16 | 0;
     if (!((HEAP32[$Y_i87 >> 2] | 0) == ($18$0 | 0) & (HEAP32[$Y_i87 + 4 >> 2] | 0) == ($18$1 | 0))) {
      break;
     }
     HEAP32[$p1 >> 2] = $21;
     $33 = $21;
     break L7681;
    }
   } while (0);
   $agg_tmp3392475 = $agg_tmp3392;
   HEAP32[$agg_tmp3392475 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$agg_tmp3392475 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$agg_tmp3392475 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   HEAP32[$agg_tmp3392475 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
   if (($20 | 0) == ($21 | 0)) {
    $exception_i96 = ___cxa_allocate_exception(4) | 0;
    HEAP32[$exception_i96 >> 2] = 5272;
    ___cxa_throw($exception_i96 | 0, 15392, 0);
    return 0;
   }
   $tmp93 = $agg_tmp3392;
   $call_i98 = __Znwj(32) | 0;
   $27 = $call_i98;
   $X_i_i_i_i_i99 = $call_i98 + 8 | 0;
   HEAP32[$X_i_i_i_i_i99 >> 2] = HEAP32[$tmp93 >> 2];
   HEAP32[$X_i_i_i_i_i99 + 4 >> 2] = HEAP32[$tmp93 + 4 >> 2];
   HEAP32[$X_i_i_i_i_i99 + 8 >> 2] = HEAP32[$tmp93 + 8 >> 2];
   HEAP32[$X_i_i_i_i_i99 + 12 >> 2] = HEAP32[$tmp93 + 12 >> 2];
   $next_i100 = $20 + 24 | 0;
   if ((HEAP32[$next_i100 >> 2] | 0) == ($21 | 0)) {
    HEAP32[$next_i100 >> 2] = $27;
    HEAP32[$21 + 28 >> 2] = $27;
    HEAP32[$call_i98 + 24 >> 2] = $21;
    HEAP32[$call_i98 + 28 >> 2] = $20;
   } else {
    HEAP32[$21 + 24 >> 2] = $27;
    HEAP32[$prev25 >> 2] = $27;
    HEAP32[$call_i98 + 24 >> 2] = $20;
    HEAP32[$call_i98 + 28 >> 2] = $21;
   }
   HEAP32[$p1 >> 2] = $27;
   $33 = $27;
  }
 } while (0);
 $34$0 = HEAP32[$X_i >> 2] | 0;
 $34$1 = HEAP32[$X_i + 4 >> 2] | 0;
 $cmp_i115 = ($34$0 | 0) == ($agg_tmp56_sroa_0_0_copyload$0 | 0) & ($34$1 | 0) == ($agg_tmp56_sroa_0_0_copyload$1 | 0);
 do {
  if ($cmp_i115) {
   $Y_i116 = $20 + 16 | 0;
   if (!((HEAP32[$Y_i116 >> 2] | 0) == ($agg_tmp56_sroa_1_8_copyload$0 | 0) & (HEAP32[$Y_i116 + 4 >> 2] | 0) == ($agg_tmp56_sroa_1_8_copyload$1 | 0))) {
    label = 6616;
    break;
   }
   HEAP32[$p2 >> 2] = $20;
  } else {
   label = 6616;
  }
 } while (0);
 L7698 : do {
  if ((label | 0) == 6616) {
   $X_i121 = $21 + 8 | 0;
   do {
    if ((HEAP32[$X_i121 >> 2] | 0) == ($agg_tmp56_sroa_0_0_copyload$0 | 0) & (HEAP32[$X_i121 + 4 >> 2] | 0) == ($agg_tmp56_sroa_0_0_copyload$1 | 0)) {
     $Y_i124 = $21 + 16 | 0;
     if (!((HEAP32[$Y_i124 >> 2] | 0) == ($agg_tmp56_sroa_1_8_copyload$0 | 0) & (HEAP32[$Y_i124 + 4 >> 2] | 0) == ($agg_tmp56_sroa_1_8_copyload$1 | 0))) {
      break;
     }
     HEAP32[$p2 >> 2] = $21;
     break L7698;
    }
   } while (0);
   if (($33 | 0) == ($20 | 0) | ($33 | 0) == ($21 | 0)) {
    $agg_tmp49129476 = $agg_tmp49129;
    HEAP32[$agg_tmp49129476 >> 2] = HEAP32[$9 >> 2];
    HEAP32[$agg_tmp49129476 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
    HEAP32[$agg_tmp49129476 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
    HEAP32[$agg_tmp49129476 + 12 >> 2] = HEAP32[$9 + 12 >> 2];
    if (($20 | 0) == ($21 | 0)) {
     $exception_i133 = ___cxa_allocate_exception(4) | 0;
     HEAP32[$exception_i133 >> 2] = 5272;
     ___cxa_throw($exception_i133 | 0, 15392, 0);
     return 0;
    }
    $tmp130 = $agg_tmp49129;
    $call_i135 = __Znwj(32) | 0;
    $39 = $call_i135;
    $X_i_i_i_i_i136 = $call_i135 + 8 | 0;
    HEAP32[$X_i_i_i_i_i136 >> 2] = HEAP32[$tmp130 >> 2];
    HEAP32[$X_i_i_i_i_i136 + 4 >> 2] = HEAP32[$tmp130 + 4 >> 2];
    HEAP32[$X_i_i_i_i_i136 + 8 >> 2] = HEAP32[$tmp130 + 8 >> 2];
    HEAP32[$X_i_i_i_i_i136 + 12 >> 2] = HEAP32[$tmp130 + 12 >> 2];
    $next_i137 = $20 + 24 | 0;
    if ((HEAP32[$next_i137 >> 2] | 0) == ($21 | 0)) {
     HEAP32[$next_i137 >> 2] = $39;
     HEAP32[$21 + 28 >> 2] = $39;
     HEAP32[$call_i135 + 24 >> 2] = $21;
     HEAP32[$call_i135 + 28 >> 2] = $20;
    } else {
     HEAP32[$21 + 24 >> 2] = $39;
     HEAP32[$prev25 >> 2] = $39;
     HEAP32[$call_i135 + 24 >> 2] = $20;
     HEAP32[$call_i135 + 28 >> 2] = $21;
    }
    HEAP32[$p2 >> 2] = $39;
    break;
   }
   $agg_tmp52_sroa_1_8__idx341 = $20 + 16 | 0;
   $agg_tmp52_sroa_1_8_copyload$0 = HEAP32[$agg_tmp52_sroa_1_8__idx341 >> 2] | 0;
   $agg_tmp52_sroa_1_8_copyload$1 = HEAP32[$agg_tmp52_sroa_1_8__idx341 + 4 >> 2] | 0;
   $agg_tmp54_sroa_0_0__idx = $33 + 8 | 0;
   $agg_tmp54_sroa_0_0_copyload$0 = HEAP32[$agg_tmp54_sroa_0_0__idx >> 2] | 0;
   $agg_tmp54_sroa_0_0_copyload$1 = HEAP32[$agg_tmp54_sroa_0_0__idx + 4 >> 2] | 0;
   $agg_tmp54_sroa_1_8__idx339 = $33 + 16 | 0;
   $agg_tmp54_sroa_1_8_copyload$0 = HEAP32[$agg_tmp54_sroa_1_8__idx339 >> 2] | 0;
   $agg_tmp54_sroa_1_8_copyload$1 = HEAP32[$agg_tmp54_sroa_1_8__idx339 + 4 >> 2] | 0;
   do {
    if (!($cmp_i115 & (($agg_tmp52_sroa_1_8_copyload$0 | 0) == ($agg_tmp56_sroa_1_8_copyload$0 | 0) & ($agg_tmp52_sroa_1_8_copyload$1 | 0) == ($agg_tmp56_sroa_1_8_copyload$1 | 0)))) {
     if (($agg_tmp54_sroa_0_0_copyload$0 | 0) == ($agg_tmp56_sroa_0_0_copyload$0 | 0) & ($agg_tmp54_sroa_0_0_copyload$1 | 0) == ($agg_tmp56_sroa_0_0_copyload$1 | 0) & (($agg_tmp54_sroa_1_8_copyload$0 | 0) == ($agg_tmp56_sroa_1_8_copyload$0 | 0) & ($agg_tmp54_sroa_1_8_copyload$1 | 0) == ($agg_tmp56_sroa_1_8_copyload$1 | 0))) {
      break;
     }
     if (($34$0 | 0) == ($agg_tmp54_sroa_0_0_copyload$0 | 0) & ($34$1 | 0) == ($agg_tmp54_sroa_0_0_copyload$1 | 0)) {
      if (!((($agg_tmp52_sroa_1_8_copyload$1 | 0) < ($agg_tmp56_sroa_1_8_copyload$1 | 0) | ($agg_tmp52_sroa_1_8_copyload$1 | 0) == ($agg_tmp56_sroa_1_8_copyload$1 | 0) & $agg_tmp52_sroa_1_8_copyload$0 >>> 0 < $agg_tmp56_sroa_1_8_copyload$0 >>> 0) ^ (($agg_tmp56_sroa_1_8_copyload$1 | 0) < ($agg_tmp54_sroa_1_8_copyload$1 | 0) | ($agg_tmp56_sroa_1_8_copyload$1 | 0) == ($agg_tmp54_sroa_1_8_copyload$1 | 0) & $agg_tmp56_sroa_1_8_copyload$0 >>> 0 < $agg_tmp54_sroa_1_8_copyload$0 >>> 0))) {
       break;
      }
     } else {
      if (!((($34$1 | 0) < ($agg_tmp56_sroa_0_0_copyload$1 | 0) | ($34$1 | 0) == ($agg_tmp56_sroa_0_0_copyload$1 | 0) & $34$0 >>> 0 < $agg_tmp56_sroa_0_0_copyload$0 >>> 0) ^ (($agg_tmp56_sroa_0_0_copyload$1 | 0) < ($agg_tmp54_sroa_0_0_copyload$1 | 0) | ($agg_tmp56_sroa_0_0_copyload$1 | 0) == ($agg_tmp54_sroa_0_0_copyload$1 | 0) & $agg_tmp56_sroa_0_0_copyload$0 >>> 0 < $agg_tmp54_sroa_0_0_copyload$0 >>> 0))) {
       break;
      }
     }
     $agg_tmp62181478 = $agg_tmp62181;
     HEAP32[$agg_tmp62181478 >> 2] = HEAP32[$9 >> 2];
     HEAP32[$agg_tmp62181478 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
     HEAP32[$agg_tmp62181478 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
     HEAP32[$agg_tmp62181478 + 12 >> 2] = HEAP32[$9 + 12 >> 2];
     $tmp182 = $agg_tmp62181;
     $call_i187 = __Znwj(32) | 0;
     $51 = $call_i187;
     $X_i_i_i_i_i188 = $call_i187 + 8 | 0;
     HEAP32[$X_i_i_i_i_i188 >> 2] = HEAP32[$tmp182 >> 2];
     HEAP32[$X_i_i_i_i_i188 + 4 >> 2] = HEAP32[$tmp182 + 4 >> 2];
     HEAP32[$X_i_i_i_i_i188 + 8 >> 2] = HEAP32[$tmp182 + 8 >> 2];
     HEAP32[$X_i_i_i_i_i188 + 12 >> 2] = HEAP32[$tmp182 + 12 >> 2];
     $next_i189 = $33 + 24 | 0;
     if ((HEAP32[$next_i189 >> 2] | 0) == ($21 | 0)) {
      HEAP32[$next_i189 >> 2] = $51;
      HEAP32[$21 + 28 >> 2] = $51;
      HEAP32[$call_i187 + 24 >> 2] = $21;
      HEAP32[$call_i187 + 28 >> 2] = $33;
     } else {
      HEAP32[$21 + 24 >> 2] = $51;
      HEAP32[$33 + 28 >> 2] = $51;
      HEAP32[$call_i187 + 24 >> 2] = $33;
      HEAP32[$call_i187 + 28 >> 2] = $21;
     }
     HEAP32[$p2 >> 2] = $51;
     break L7698;
    }
   } while (0);
   $agg_tmp59160477 = $agg_tmp59160;
   HEAP32[$agg_tmp59160477 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$agg_tmp59160477 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
   HEAP32[$agg_tmp59160477 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
   HEAP32[$agg_tmp59160477 + 12 >> 2] = HEAP32[$9 + 12 >> 2];
   $tmp161 = $agg_tmp59160;
   $call_i166 = __Znwj(32) | 0;
   $45 = $call_i166;
   $X_i_i_i_i_i167 = $call_i166 + 8 | 0;
   HEAP32[$X_i_i_i_i_i167 >> 2] = HEAP32[$tmp161 >> 2];
   HEAP32[$X_i_i_i_i_i167 + 4 >> 2] = HEAP32[$tmp161 + 4 >> 2];
   HEAP32[$X_i_i_i_i_i167 + 8 >> 2] = HEAP32[$tmp161 + 8 >> 2];
   HEAP32[$X_i_i_i_i_i167 + 12 >> 2] = HEAP32[$tmp161 + 12 >> 2];
   $next_i168 = $20 + 24 | 0;
   if ((HEAP32[$next_i168 >> 2] | 0) == ($33 | 0)) {
    HEAP32[$next_i168 >> 2] = $45;
    HEAP32[$33 + 28 >> 2] = $45;
    HEAP32[$call_i166 + 24 >> 2] = $33;
    HEAP32[$call_i166 + 28 >> 2] = $20;
   } else {
    HEAP32[$33 + 24 >> 2] = $45;
    HEAP32[$prev25 >> 2] = $45;
    HEAP32[$call_i166 + 24 >> 2] = $20;
    HEAP32[$call_i166 + 28 >> 2] = $33;
   }
   HEAP32[$p2 >> 2] = $45;
  }
 } while (0);
 $57 = HEAP32[$pp2a >> 2] | 0;
 $prev68 = $57 + 28 | 0;
 $58 = HEAP32[$prev68 >> 2] | 0;
 $X_i202 = $57 + 8 | 0;
 if ((HEAP32[$X_i202 >> 2] | 0) == ($19$0 | 0) & (HEAP32[$X_i202 + 4 >> 2] | 0) == ($19$1 | 0)) {
  $Y_i205 = $57 + 16 | 0;
  if ((HEAP32[$Y_i205 >> 2] | 0) == ($18$0 | 0) & (HEAP32[$Y_i205 + 4 >> 2] | 0) == ($18$1 | 0)) {
   $p3_0 = $57;
  } else {
   label = 6641;
  }
 } else {
  label = 6641;
 }
 do {
  if ((label | 0) == 6641) {
   $X_i210 = $58 + 8 | 0;
   if ((HEAP32[$X_i210 >> 2] | 0) == ($19$0 | 0) & (HEAP32[$X_i210 + 4 >> 2] | 0) == ($19$1 | 0)) {
    $Y_i213 = $58 + 16 | 0;
    if ((HEAP32[$Y_i213 >> 2] | 0) == ($18$0 | 0) & (HEAP32[$Y_i213 + 4 >> 2] | 0) == ($18$1 | 0)) {
     $p3_0 = $58;
     break;
    }
   }
   $agg_tmp77218479 = $agg_tmp77218;
   HEAP32[$agg_tmp77218479 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$agg_tmp77218479 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$agg_tmp77218479 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   HEAP32[$agg_tmp77218479 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
   if (($57 | 0) == ($58 | 0)) {
    $exception_i222 = ___cxa_allocate_exception(4) | 0;
    HEAP32[$exception_i222 >> 2] = 5272;
    ___cxa_throw($exception_i222 | 0, 15392, 0);
    return 0;
   }
   $tmp219 = $agg_tmp77218;
   $call_i224 = __Znwj(32) | 0;
   $64 = $call_i224;
   $X_i_i_i_i_i225 = $call_i224 + 8 | 0;
   HEAP32[$X_i_i_i_i_i225 >> 2] = HEAP32[$tmp219 >> 2];
   HEAP32[$X_i_i_i_i_i225 + 4 >> 2] = HEAP32[$tmp219 + 4 >> 2];
   HEAP32[$X_i_i_i_i_i225 + 8 >> 2] = HEAP32[$tmp219 + 8 >> 2];
   HEAP32[$X_i_i_i_i_i225 + 12 >> 2] = HEAP32[$tmp219 + 12 >> 2];
   $next_i226 = $57 + 24 | 0;
   if ((HEAP32[$next_i226 >> 2] | 0) == ($58 | 0)) {
    HEAP32[$next_i226 >> 2] = $64;
    HEAP32[$58 + 28 >> 2] = $64;
    HEAP32[$call_i224 + 24 >> 2] = $58;
    HEAP32[$call_i224 + 28 >> 2] = $57;
    $p3_0 = $64;
    break;
   } else {
    HEAP32[$58 + 24 >> 2] = $64;
    HEAP32[$prev68 >> 2] = $64;
    HEAP32[$call_i224 + 24 >> 2] = $57;
    HEAP32[$call_i224 + 28 >> 2] = $58;
    $p3_0 = $64;
    break;
   }
  }
 } while (0);
 $70$0 = HEAP32[$X_i202 >> 2] | 0;
 $70$1 = HEAP32[$X_i202 + 4 >> 2] | 0;
 $cmp_i241 = ($70$0 | 0) == ($agg_tmp56_sroa_0_0_copyload$0 | 0) & ($70$1 | 0) == ($agg_tmp56_sroa_0_0_copyload$1 | 0);
 if ($cmp_i241) {
  $Y_i242 = $57 + 16 | 0;
  if ((HEAP32[$Y_i242 >> 2] | 0) == ($agg_tmp56_sroa_1_8_copyload$0 | 0) & (HEAP32[$Y_i242 + 4 >> 2] | 0) == ($agg_tmp56_sroa_1_8_copyload$1 | 0)) {
   $p4_0 = $57;
  } else {
   label = 6650;
  }
 } else {
  label = 6650;
 }
 L7747 : do {
  if ((label | 0) == 6650) {
   $X_i247 = $58 + 8 | 0;
   if ((HEAP32[$X_i247 >> 2] | 0) == ($agg_tmp56_sroa_0_0_copyload$0 | 0) & (HEAP32[$X_i247 + 4 >> 2] | 0) == ($agg_tmp56_sroa_0_0_copyload$1 | 0)) {
    $Y_i250 = $58 + 16 | 0;
    if ((HEAP32[$Y_i250 >> 2] | 0) == ($agg_tmp56_sroa_1_8_copyload$0 | 0) & (HEAP32[$Y_i250 + 4 >> 2] | 0) == ($agg_tmp56_sroa_1_8_copyload$1 | 0)) {
     $p4_0 = $58;
     break;
    }
   }
   if (($p3_0 | 0) == ($57 | 0) | ($p3_0 | 0) == ($58 | 0)) {
    $agg_tmp93255480 = $agg_tmp93255;
    HEAP32[$agg_tmp93255480 >> 2] = HEAP32[$9 >> 2];
    HEAP32[$agg_tmp93255480 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
    HEAP32[$agg_tmp93255480 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
    HEAP32[$agg_tmp93255480 + 12 >> 2] = HEAP32[$9 + 12 >> 2];
    if (($57 | 0) == ($58 | 0)) {
     $exception_i259 = ___cxa_allocate_exception(4) | 0;
     HEAP32[$exception_i259 >> 2] = 5272;
     ___cxa_throw($exception_i259 | 0, 15392, 0);
     return 0;
    }
    $tmp256 = $agg_tmp93255;
    $call_i261 = __Znwj(32) | 0;
    $75 = $call_i261;
    $X_i_i_i_i_i262 = $call_i261 + 8 | 0;
    HEAP32[$X_i_i_i_i_i262 >> 2] = HEAP32[$tmp256 >> 2];
    HEAP32[$X_i_i_i_i_i262 + 4 >> 2] = HEAP32[$tmp256 + 4 >> 2];
    HEAP32[$X_i_i_i_i_i262 + 8 >> 2] = HEAP32[$tmp256 + 8 >> 2];
    HEAP32[$X_i_i_i_i_i262 + 12 >> 2] = HEAP32[$tmp256 + 12 >> 2];
    $next_i263 = $57 + 24 | 0;
    if ((HEAP32[$next_i263 >> 2] | 0) == ($58 | 0)) {
     HEAP32[$next_i263 >> 2] = $75;
     HEAP32[$58 + 28 >> 2] = $75;
     HEAP32[$call_i261 + 24 >> 2] = $58;
     HEAP32[$call_i261 + 28 >> 2] = $57;
     $p4_0 = $75;
     break;
    } else {
     HEAP32[$58 + 24 >> 2] = $75;
     HEAP32[$prev68 >> 2] = $75;
     HEAP32[$call_i261 + 24 >> 2] = $57;
     HEAP32[$call_i261 + 28 >> 2] = $58;
     $p4_0 = $75;
     break;
    }
   }
   $agg_tmp96_sroa_1_8__idx334 = $57 + 16 | 0;
   $agg_tmp96_sroa_1_8_copyload$0 = HEAP32[$agg_tmp96_sroa_1_8__idx334 >> 2] | 0;
   $agg_tmp96_sroa_1_8_copyload$1 = HEAP32[$agg_tmp96_sroa_1_8__idx334 + 4 >> 2] | 0;
   $agg_tmp98_sroa_0_0__idx = $p3_0 + 8 | 0;
   $agg_tmp98_sroa_0_0_copyload$0 = HEAP32[$agg_tmp98_sroa_0_0__idx >> 2] | 0;
   $agg_tmp98_sroa_0_0_copyload$1 = HEAP32[$agg_tmp98_sroa_0_0__idx + 4 >> 2] | 0;
   $agg_tmp98_sroa_1_8__idx332 = $p3_0 + 16 | 0;
   $agg_tmp98_sroa_1_8_copyload$0 = HEAP32[$agg_tmp98_sroa_1_8__idx332 >> 2] | 0;
   $agg_tmp98_sroa_1_8_copyload$1 = HEAP32[$agg_tmp98_sroa_1_8__idx332 + 4 >> 2] | 0;
   do {
    if (!($cmp_i241 & (($agg_tmp96_sroa_1_8_copyload$0 | 0) == ($agg_tmp56_sroa_1_8_copyload$0 | 0) & ($agg_tmp96_sroa_1_8_copyload$1 | 0) == ($agg_tmp56_sroa_1_8_copyload$1 | 0)))) {
     if (($agg_tmp98_sroa_0_0_copyload$0 | 0) == ($agg_tmp56_sroa_0_0_copyload$0 | 0) & ($agg_tmp98_sroa_0_0_copyload$1 | 0) == ($agg_tmp56_sroa_0_0_copyload$1 | 0) & (($agg_tmp98_sroa_1_8_copyload$0 | 0) == ($agg_tmp56_sroa_1_8_copyload$0 | 0) & ($agg_tmp98_sroa_1_8_copyload$1 | 0) == ($agg_tmp56_sroa_1_8_copyload$1 | 0))) {
      break;
     }
     if (($70$0 | 0) == ($agg_tmp98_sroa_0_0_copyload$0 | 0) & ($70$1 | 0) == ($agg_tmp98_sroa_0_0_copyload$1 | 0)) {
      if (!((($agg_tmp96_sroa_1_8_copyload$1 | 0) < ($agg_tmp56_sroa_1_8_copyload$1 | 0) | ($agg_tmp96_sroa_1_8_copyload$1 | 0) == ($agg_tmp56_sroa_1_8_copyload$1 | 0) & $agg_tmp96_sroa_1_8_copyload$0 >>> 0 < $agg_tmp56_sroa_1_8_copyload$0 >>> 0) ^ (($agg_tmp56_sroa_1_8_copyload$1 | 0) < ($agg_tmp98_sroa_1_8_copyload$1 | 0) | ($agg_tmp56_sroa_1_8_copyload$1 | 0) == ($agg_tmp98_sroa_1_8_copyload$1 | 0) & $agg_tmp56_sroa_1_8_copyload$0 >>> 0 < $agg_tmp98_sroa_1_8_copyload$0 >>> 0))) {
       break;
      }
     } else {
      if (!((($70$1 | 0) < ($agg_tmp56_sroa_0_0_copyload$1 | 0) | ($70$1 | 0) == ($agg_tmp56_sroa_0_0_copyload$1 | 0) & $70$0 >>> 0 < $agg_tmp56_sroa_0_0_copyload$0 >>> 0) ^ (($agg_tmp56_sroa_0_0_copyload$1 | 0) < ($agg_tmp98_sroa_0_0_copyload$1 | 0) | ($agg_tmp56_sroa_0_0_copyload$1 | 0) == ($agg_tmp98_sroa_0_0_copyload$1 | 0) & $agg_tmp56_sroa_0_0_copyload$0 >>> 0 < $agg_tmp98_sroa_0_0_copyload$0 >>> 0))) {
       break;
      }
     }
     $agg_tmp10676482 = $agg_tmp10676;
     HEAP32[$agg_tmp10676482 >> 2] = HEAP32[$9 >> 2];
     HEAP32[$agg_tmp10676482 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
     HEAP32[$agg_tmp10676482 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
     HEAP32[$agg_tmp10676482 + 12 >> 2] = HEAP32[$9 + 12 >> 2];
     $tmp77 = $agg_tmp10676;
     $call_i = __Znwj(32) | 0;
     $87 = $call_i;
     $X_i_i_i_i_i = $call_i + 8 | 0;
     HEAP32[$X_i_i_i_i_i >> 2] = HEAP32[$tmp77 >> 2];
     HEAP32[$X_i_i_i_i_i + 4 >> 2] = HEAP32[$tmp77 + 4 >> 2];
     HEAP32[$X_i_i_i_i_i + 8 >> 2] = HEAP32[$tmp77 + 8 >> 2];
     HEAP32[$X_i_i_i_i_i + 12 >> 2] = HEAP32[$tmp77 + 12 >> 2];
     $next_i = $p3_0 + 24 | 0;
     if ((HEAP32[$next_i >> 2] | 0) == ($58 | 0)) {
      HEAP32[$next_i >> 2] = $87;
      HEAP32[$58 + 28 >> 2] = $87;
      HEAP32[$call_i + 24 >> 2] = $58;
      HEAP32[$call_i + 28 >> 2] = $p3_0;
      $p4_0 = $87;
      break L7747;
     } else {
      HEAP32[$58 + 24 >> 2] = $87;
      HEAP32[$p3_0 + 28 >> 2] = $87;
      HEAP32[$call_i + 24 >> 2] = $p3_0;
      HEAP32[$call_i + 28 >> 2] = $58;
      $p4_0 = $87;
      break L7747;
     }
    }
   } while (0);
   $agg_tmp103307481 = $agg_tmp103307;
   HEAP32[$agg_tmp103307481 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$agg_tmp103307481 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
   HEAP32[$agg_tmp103307481 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
   HEAP32[$agg_tmp103307481 + 12 >> 2] = HEAP32[$9 + 12 >> 2];
   $tmp308 = $agg_tmp103307;
   $call_i313 = __Znwj(32) | 0;
   $81 = $call_i313;
   $X_i_i_i_i_i314 = $call_i313 + 8 | 0;
   HEAP32[$X_i_i_i_i_i314 >> 2] = HEAP32[$tmp308 >> 2];
   HEAP32[$X_i_i_i_i_i314 + 4 >> 2] = HEAP32[$tmp308 + 4 >> 2];
   HEAP32[$X_i_i_i_i_i314 + 8 >> 2] = HEAP32[$tmp308 + 8 >> 2];
   HEAP32[$X_i_i_i_i_i314 + 12 >> 2] = HEAP32[$tmp308 + 12 >> 2];
   $next_i315 = $57 + 24 | 0;
   if ((HEAP32[$next_i315 >> 2] | 0) == ($p3_0 | 0)) {
    HEAP32[$next_i315 >> 2] = $81;
    HEAP32[$p3_0 + 28 >> 2] = $81;
    HEAP32[$call_i313 + 24 >> 2] = $p3_0;
    HEAP32[$call_i313 + 28 >> 2] = $57;
    $p4_0 = $81;
    break;
   } else {
    HEAP32[$p3_0 + 24 >> 2] = $81;
    HEAP32[$prev68 >> 2] = $81;
    HEAP32[$call_i313 + 24 >> 2] = $57;
    HEAP32[$call_i313 + 28 >> 2] = $p3_0;
    $p4_0 = $81;
    break;
   }
  }
 } while (0);
 $93 = HEAP32[$p1 >> 2] | 0;
 $next112 = $93 + 24 | 0;
 $95 = HEAP32[$p2 >> 2] | 0;
 do {
  if ((HEAP32[$next112 >> 2] | 0) == ($95 | 0)) {
   $prev114 = $p3_0 + 28 | 0;
   if ((HEAP32[$prev114 >> 2] | 0) != ($p4_0 | 0)) {
    break;
   }
   HEAP32[$next112 >> 2] = $p3_0;
   HEAP32[$prev114 >> 2] = HEAP32[$p1 >> 2];
   HEAP32[(HEAP32[$p2 >> 2] | 0) + 28 >> 2] = $p4_0;
   HEAP32[$p4_0 + 24 >> 2] = HEAP32[$p2 >> 2];
   $retval_0 = 1;
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  }
 } while (0);
 $prev122 = $93 + 28 | 0;
 if ((HEAP32[$prev122 >> 2] | 0) != ($95 | 0)) {
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $next125 = $p3_0 + 24 | 0;
 if ((HEAP32[$next125 >> 2] | 0) != ($p4_0 | 0)) {
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 HEAP32[$prev122 >> 2] = $p3_0;
 HEAP32[$next125 >> 2] = HEAP32[$p1 >> 2];
 HEAP32[(HEAP32[$p2 >> 2] | 0) + 24 >> 2] = $p4_0;
 HEAP32[$p4_0 + 28 >> 2] = HEAP32[$p2 >> 2];
 $retval_0 = 1;
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __ZN10ClipperLib8BuildArcERKNS_8IntPointEddd($agg_result, $pt, $a1, $a2, $r) {
 $agg_result = $agg_result | 0;
 $pt = $pt | 0;
 $a1 = +$a1;
 $a2 = +$a2;
 $r = +$r;
 var $call1 = 0.0, $sub = 0.0, $conv = 0, $cmp_i_i_i = 0, $conv5$0 = 0, $conv5$1 = 0, $$etemp$1$1 = 0, $_extract_t = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $__first__i_i_i_i_i_i = 0, $1 = 0, $incdec_ptr_i_i_i31 = 0, $__n_addr_0_i_i_i = 0, $3 = 0, $div = 0.0, $X = 0, $4 = 0, $Y = 0, $i_030 = 0, $a_029 = 0.0, $5$0 = 0, $5$1 = 0, $mul12 = 0.0, $sub_sink_i = 0.0, $add$0 = 0, $X16 = 0, $6$0 = 0, $6$1 = 0, $mul18 = 0.0, $sub_sink_i25 = 0.0, $add21$0 = 0, $Y24 = 0, $inc = 0;
 $call1 = +Math_sqrt(+(+Math_abs(+$r)));
 $sub = $a2 - $a1;
 $conv = ~~($call1 * +Math_abs(+$sub));
 $cmp_i_i_i = ($conv | 0) > 6;
 $conv5$0 = $cmp_i_i_i ? $conv : 6;
 $conv5$1 = $cmp_i_i_i ? ($conv | 0) < 0 ? -1 : 0 : 0;
 $$etemp$1$1 = 0;
 $_extract_t = ($conv5$1 | 0) > ($$etemp$1$1 | 0) | ($conv5$1 | 0) == ($$etemp$1$1 | 0) & $conv5$0 >>> 0 > 256 >>> 0 ? 256 : $conv5$0;
 $__begin__i_i_i = $agg_result | 0;
 HEAP32[$__begin__i_i_i >> 2] = 0;
 $__end__i_i_i = $agg_result + 4 | 0;
 HEAP32[$__end__i_i_i >> 2] = 0;
 $__first__i_i_i_i_i_i = $agg_result + 8 | 0;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = 0;
 if (($_extract_t | 0) == 0) {
  return;
 }
 if ($_extract_t >>> 0 > 268435455) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $1 = __Znwj($_extract_t << 4) | 0;
 HEAP32[$__end__i_i_i >> 2] = $1;
 HEAP32[$__begin__i_i_i >> 2] = $1;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $1 + ($_extract_t << 4);
 $__n_addr_0_i_i_i = $_extract_t;
 $incdec_ptr_i_i_i31 = $1;
 do {
  if (($incdec_ptr_i_i_i31 | 0) == 0) {
   $3 = 0;
  } else {
   _memset($incdec_ptr_i_i_i31 | 0, 0, 16);
   $3 = $incdec_ptr_i_i_i31;
  }
  $incdec_ptr_i_i_i31 = $3 + 16 | 0;
  $__n_addr_0_i_i_i = $__n_addr_0_i_i_i - 1 | 0;
 } while (($__n_addr_0_i_i_i | 0) != 0);
 HEAP32[$__end__i_i_i >> 2] = $incdec_ptr_i_i_i31;
 $div = $sub / +($_extract_t - 1 | 0);
 if (($_extract_t | 0) <= 0) {
  return;
 }
 $X = $pt | 0;
 $4 = HEAP32[$__begin__i_i_i >> 2] | 0;
 $Y = $pt + 8 | 0;
 $a_029 = $a1;
 $i_030 = 0;
 while (1) {
  $5$0 = HEAP32[$X >> 2] | 0;
  $5$1 = HEAP32[$X + 4 >> 2] | 0;
  $mul12 = +Math_cos(+$a_029) * $r;
  if ($mul12 < 0.0) {
   $sub_sink_i = $mul12 + -.5;
  } else {
   $sub_sink_i = $mul12 + .5;
  }
  $add$0 = _i64Add(~~$sub_sink_i >>> 0, (Math_min(+Math_floor($sub_sink_i / 4294967296.0), 4294967295.0) | 0) >>> 0, $5$0, $5$1) | 0;
  $X16 = $4 + ($i_030 << 4) | 0;
  HEAP32[$X16 >> 2] = $add$0;
  HEAP32[$X16 + 4 >> 2] = tempRet0;
  $6$0 = HEAP32[$Y >> 2] | 0;
  $6$1 = HEAP32[$Y + 4 >> 2] | 0;
  $mul18 = +Math_sin(+$a_029) * $r;
  if ($mul18 < 0.0) {
   $sub_sink_i25 = $mul18 + -.5;
  } else {
   $sub_sink_i25 = $mul18 + .5;
  }
  $add21$0 = _i64Add(~~$sub_sink_i25 >>> 0, (Math_min(+Math_floor($sub_sink_i25 / 4294967296.0), 4294967295.0) | 0) >>> 0, $6$0, $6$1) | 0;
  $Y24 = $4 + ($i_030 << 4) + 8 | 0;
  HEAP32[$Y24 >> 2] = $add21$0;
  HEAP32[$Y24 + 4 >> 2] = tempRet0;
  $inc = $i_030 + 1 | 0;
  if (($inc | 0) < ($_extract_t | 0)) {
   $a_029 = $div + $a_029;
   $i_030 = $inc;
  } else {
   break;
  }
 }
 return;
}
function __ZN10ClipperLib14OffsetPolygonsERKNSt3__16vectorINS1_INS_8IntPointENS0_9allocatorIS2_EEEENS3_IS5_EEEERS7_dNS_8JoinTypeEdb($in_polys, $out_polys, $delta, $jointype, $MiterLimit, $CheckInputs) {
 $in_polys = $in_polys | 0;
 $out_polys = $out_polys | 0;
 $delta = +$delta;
 $jointype = $jointype | 0;
 $MiterLimit = +$MiterLimit;
 $CheckInputs = $CheckInputs | 0;
 var $poly2 = 0, $agg_tmp_ensured = 0, $agg_tmp_ensured3 = 0, $0 = 0, $1 = 0, $__end__i_i_i_i_i_i_i_i = 0, $2 = 0, $__begin__i_i_i_i = 0, $7 = 0, $__end__i_i_i_i_i_i_i = 0, $8 = 0, $9 = 0, $incdec_ptr_i_i_i_i_i_i_i = 0, $10 = 0, $11 = 0, $12 = 0, $__end__i_i_i_i_i_i_i_i_i_i = 0, $13 = 0, $18 = 0, $__begin__i_i_i = 0, $20 = 0, $__end__i_i_i_i_i_i = 0, $21 = 0, $22 = 0, $incdec_ptr_i_i_i_i_i_i = 0, $23 = 0, $24 = 0, $25 = 0, $__end__i_i_i_i_i_i_i_i_i = 0, $26 = 0, $31 = 0, $47 = 0, $48 = 0, $__end__i_i_i_i_i_i_i_i36 = 0, $49 = 0, $__begin__i_i_i_i46 = 0, $54 = 0, $__end__i_i_i_i_i_i_i49 = 0, $55 = 0, $56 = 0, $incdec_ptr_i_i_i_i_i_i_i52 = 0, $57 = 0, $58 = 0, $59 = 0, $__end__i_i_i_i_i_i_i_i_i_i58 = 0, $60 = 0, $65 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $poly2 = __stackBase__ | 0;
 $agg_tmp_ensured = __stackBase__ + 16 | 0;
 $agg_tmp_ensured3 = __stackBase__ + 88 | 0;
 if (($out_polys | 0) != ($in_polys | 0)) {
  __ZN10ClipperLib17PolyOffsetBuilderC2ERKNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEERS8_dNS_8JoinTypeEdb($agg_tmp_ensured3, $in_polys, $out_polys, $delta, $jointype, $MiterLimit, $CheckInputs);
  $47 = HEAP32[$agg_tmp_ensured3 + 16 >> 2] | 0;
  $48 = $47;
  if (($47 | 0) != 0) {
   $__end__i_i_i_i_i_i_i_i36 = $agg_tmp_ensured3 + 20 | 0;
   $49 = HEAP32[$__end__i_i_i_i_i_i_i_i36 >> 2] | 0;
   if (($47 | 0) != ($49 | 0)) {
    HEAP32[$__end__i_i_i_i_i_i_i_i36 >> 2] = $49 + ((($49 - 16 + (-$48 | 0) | 0) >>> 4 ^ -1) << 4);
   }
   __ZdlPv($47);
  }
  $__begin__i_i_i_i46 = $agg_tmp_ensured3 | 0;
  $54 = HEAP32[$__begin__i_i_i_i46 >> 2] | 0;
  if (($54 | 0) == 0) {
   STACKTOP = __stackBase__;
   return;
  }
  $__end__i_i_i_i_i_i_i49 = $agg_tmp_ensured3 + 4 | 0;
  $55 = HEAP32[$__end__i_i_i_i_i_i_i49 >> 2] | 0;
  if (($54 | 0) == ($55 | 0)) {
   $65 = $54;
  } else {
   $56 = $55;
   while (1) {
    $incdec_ptr_i_i_i_i_i_i_i52 = $56 - 12 | 0;
    HEAP32[$__end__i_i_i_i_i_i_i49 >> 2] = $incdec_ptr_i_i_i_i_i_i_i52;
    $57 = HEAP32[$incdec_ptr_i_i_i_i_i_i_i52 >> 2] | 0;
    $58 = $57;
    if (($57 | 0) == 0) {
     $59 = $incdec_ptr_i_i_i_i_i_i_i52;
    } else {
     $__end__i_i_i_i_i_i_i_i_i_i58 = $56 - 12 + 4 | 0;
     $60 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i58 >> 2] | 0;
     if (($57 | 0) != ($60 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i_i_i58 >> 2] = $60 + ((($60 - 16 + (-$58 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($57);
     $59 = HEAP32[$__end__i_i_i_i_i_i_i49 >> 2] | 0;
    }
    if (($54 | 0) == ($59 | 0)) {
     break;
    } else {
     $56 = $59;
    }
   }
   $65 = HEAP32[$__begin__i_i_i_i46 >> 2] | 0;
  }
  __ZdlPv($65);
  STACKTOP = __stackBase__;
  return;
 }
 __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($poly2, $out_polys);
 __ZN10ClipperLib17PolyOffsetBuilderC2ERKNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEERS8_dNS_8JoinTypeEdb($agg_tmp_ensured, $poly2, $out_polys, $delta, $jointype, $MiterLimit, $CheckInputs);
 $0 = HEAP32[$agg_tmp_ensured + 16 >> 2] | 0;
 $1 = $0;
 if (($0 | 0) != 0) {
  $__end__i_i_i_i_i_i_i_i = $agg_tmp_ensured + 20 | 0;
  $2 = HEAP32[$__end__i_i_i_i_i_i_i_i >> 2] | 0;
  if (($0 | 0) != ($2 | 0)) {
   HEAP32[$__end__i_i_i_i_i_i_i_i >> 2] = $2 + ((($2 - 16 + (-$1 | 0) | 0) >>> 4 ^ -1) << 4);
  }
  __ZdlPv($0);
 }
 $__begin__i_i_i_i = $agg_tmp_ensured | 0;
 $7 = HEAP32[$__begin__i_i_i_i >> 2] | 0;
 if (($7 | 0) != 0) {
  $__end__i_i_i_i_i_i_i = $agg_tmp_ensured + 4 | 0;
  $8 = HEAP32[$__end__i_i_i_i_i_i_i >> 2] | 0;
  if (($7 | 0) == ($8 | 0)) {
   $18 = $7;
  } else {
   $9 = $8;
   while (1) {
    $incdec_ptr_i_i_i_i_i_i_i = $9 - 12 | 0;
    HEAP32[$__end__i_i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i_i;
    $10 = HEAP32[$incdec_ptr_i_i_i_i_i_i_i >> 2] | 0;
    $11 = $10;
    if (($10 | 0) == 0) {
     $12 = $incdec_ptr_i_i_i_i_i_i_i;
    } else {
     $__end__i_i_i_i_i_i_i_i_i_i = $9 - 12 + 4 | 0;
     $13 = HEAP32[$__end__i_i_i_i_i_i_i_i_i_i >> 2] | 0;
     if (($10 | 0) != ($13 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i_i_i >> 2] = $13 + ((($13 - 16 + (-$11 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($10);
     $12 = HEAP32[$__end__i_i_i_i_i_i_i >> 2] | 0;
    }
    if (($7 | 0) == ($12 | 0)) {
     break;
    } else {
     $9 = $12;
    }
   }
   $18 = HEAP32[$__begin__i_i_i_i >> 2] | 0;
  }
  __ZdlPv($18);
 }
 $__begin__i_i_i = $poly2 | 0;
 $20 = HEAP32[$__begin__i_i_i >> 2] | 0;
 if (($20 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 $__end__i_i_i_i_i_i = $poly2 + 4 | 0;
 $21 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
 if (($20 | 0) == ($21 | 0)) {
  $31 = $20;
 } else {
  $22 = $21;
  while (1) {
   $incdec_ptr_i_i_i_i_i_i = $22 - 12 | 0;
   HEAP32[$__end__i_i_i_i_i_i >> 2] = $incdec_ptr_i_i_i_i_i_i;
   $23 = HEAP32[$incdec_ptr_i_i_i_i_i_i >> 2] | 0;
   $24 = $23;
   if (($23 | 0) == 0) {
    $25 = $incdec_ptr_i_i_i_i_i_i;
   } else {
    $__end__i_i_i_i_i_i_i_i_i = $22 - 12 + 4 | 0;
    $26 = HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] | 0;
    if (($23 | 0) != ($26 | 0)) {
     HEAP32[$__end__i_i_i_i_i_i_i_i_i >> 2] = $26 + ((($26 - 16 + (-$24 | 0) | 0) >>> 4 ^ -1) << 4);
    }
    __ZdlPv($23);
    $25 = HEAP32[$__end__i_i_i_i_i_i >> 2] | 0;
   }
   if (($20 | 0) == ($25 | 0)) {
    break;
   } else {
    $22 = $25;
   }
  }
  $31 = HEAP32[$__begin__i_i_i >> 2] | 0;
 }
 __ZdlPv($31);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $__s, $__ob, $__op, $__oe, $__iob, $__fl) {
 $agg_result = $agg_result | 0;
 $__s = $__s | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 var $__sp = 0, $__sbuf_ = 0, $0 = 0, $sub_ptr_lhs_cast = 0, $sub_ptr_rhs_cast = 0, $sub_ptr_sub = 0, $__width__i86 = 0, $2 = 0, $__ns_0 = 0, $sub_ptr_lhs_cast8 = 0, $sub_ptr_sub10 = 0, $conv_i_i = 0, $__size__i50_i = 0, $and_i_i_i18 = 0, $call_i_i_i = 0, $or_i_i = 0, $__size__i_i_i_pre_phi = 0, $7 = 0, $__p_0_i = 0, $cond_i_i = 0, $sub_ptr_sub40 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__sp = __stackBase__ | 0;
 $__sbuf_ = $__s | 0;
 $0 = HEAP32[$__sbuf_ >> 2] | 0;
 if (($0 | 0) == 0) {
  HEAP32[$agg_result >> 2] = 0;
  STACKTOP = __stackBase__;
  return;
 }
 $sub_ptr_lhs_cast = $__oe;
 $sub_ptr_rhs_cast = $__ob;
 $sub_ptr_sub = $sub_ptr_lhs_cast - $sub_ptr_rhs_cast | 0;
 $__width__i86 = $__iob + 12 | 0;
 $2 = HEAP32[$__width__i86 >> 2] | 0;
 $__ns_0 = ($2 | 0) > ($sub_ptr_sub | 0) ? $2 - $sub_ptr_sub | 0 : 0;
 $sub_ptr_lhs_cast8 = $__op;
 $sub_ptr_sub10 = $sub_ptr_lhs_cast8 - $sub_ptr_rhs_cast | 0;
 do {
  if (($sub_ptr_sub10 | 0) > 0) {
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__ob, $sub_ptr_sub10) | 0) == ($sub_ptr_sub10 | 0)) {
    break;
   }
   HEAP32[$__sbuf_ >> 2] = 0;
   HEAP32[$agg_result >> 2] = 0;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 do {
  if (($__ns_0 | 0) > 0) {
   if ($__ns_0 >>> 0 < 11) {
    $conv_i_i = $__ns_0 << 1 & 255;
    $__size__i50_i = $__sp;
    HEAP8[$__size__i50_i] = $conv_i_i;
    $__p_0_i = $__sp + 1 | 0;
    $7 = $conv_i_i;
    $__size__i_i_i_pre_phi = $__size__i50_i;
   } else {
    $and_i_i_i18 = $__ns_0 + 16 & -16;
    $call_i_i_i = __Znwj($and_i_i_i18) | 0;
    HEAP32[$__sp + 8 >> 2] = $call_i_i_i;
    $or_i_i = $and_i_i_i18 | 1;
    HEAP32[$__sp >> 2] = $or_i_i;
    HEAP32[$__sp + 4 >> 2] = $__ns_0;
    $__p_0_i = $call_i_i_i;
    $7 = $or_i_i & 255;
    $__size__i_i_i_pre_phi = $__sp;
   }
   _memset($__p_0_i | 0, $__fl | 0, $__ns_0 | 0);
   HEAP8[$__p_0_i + $__ns_0 | 0] = 0;
   if (($7 & 1) == 0) {
    $cond_i_i = $__sp + 1 | 0;
   } else {
    $cond_i_i = HEAP32[$__sp + 8 >> 2] | 0;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $cond_i_i, $__ns_0) | 0) == ($__ns_0 | 0)) {
    if ((HEAP8[$__size__i_i_i_pre_phi] & 1) == 0) {
     break;
    }
    __ZdlPv(HEAP32[$__sp + 8 >> 2] | 0);
    break;
   }
   HEAP32[$__sbuf_ >> 2] = 0;
   HEAP32[$agg_result >> 2] = 0;
   if ((HEAP8[$__size__i_i_i_pre_phi] & 1) == 0) {
    STACKTOP = __stackBase__;
    return;
   }
   __ZdlPv(HEAP32[$__sp + 8 >> 2] | 0);
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $sub_ptr_sub40 = $sub_ptr_lhs_cast - $sub_ptr_lhs_cast8 | 0;
 do {
  if (($sub_ptr_sub40 | 0) > 0) {
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__op, $sub_ptr_sub40) | 0) == ($sub_ptr_sub40 | 0)) {
    break;
   }
   HEAP32[$__sbuf_ >> 2] = 0;
   HEAP32[$agg_result >> 2] = 0;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 HEAP32[$__width__i86 >> 2] = 0;
 HEAP32[$agg_result >> 2] = $0;
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__16vectorIN10ClipperLib9ExPolygonENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_060 = 0, $retval_i_061 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $incdec_ptr = 0, $12 = 0, $13 = 0, $__v_sroa_1_4_load3543 = 0, $__end1_addr_i_015_i = 0, $add_ptr_i_i14 = 0, $incdec_ptr_i_i = 0, $22 = 0, $23 = 0, $24 = 0, $__v_sroa_2_8_load3948 = 0, $incdec_ptr_i_i_i_i_i23 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = ((HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 24 & -1;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 178956970) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_div_i_i_i = ((HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0) / 24 & -1;
 if ($sub_ptr_div_i_i_i >>> 0 > 89478484) {
  $retval_i_060 = 178956970;
  label = 6794;
 } else {
  $mul_i = $sub_ptr_div_i_i_i << 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_061 = 0;
  } else {
   $retval_i_060 = $_sroa_speculated;
   label = 6794;
  }
 }
 if ((label | 0) == 6794) {
  $cond_i_i = __Znwj($retval_i_060 * 24 & -1) | 0;
  $retval_i_061 = $retval_i_060;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i * 24 & -1) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_061 * 24 & -1) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($add_ptr_i_i | 0, $__x | 0);
  __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($cond_i_i + ($sub_ptr_div_i * 24 & -1) + 12 | 0, $__x + 12 | 0);
 }
 $incdec_ptr = $cond_i_i + ($add * 24 & -1) | 0;
 $12 = HEAP32[$__begin__i >> 2] | 0;
 $13 = HEAP32[$__end__i >> 2] | 0;
 if (($13 | 0) == ($12 | 0)) {
  $24 = $12;
  $23 = $add_ptr_i_i;
  $22 = $12;
 } else {
  $__end1_addr_i_015_i = $13;
  $__v_sroa_1_4_load3543 = $add_ptr_i_i;
  while (1) {
   $add_ptr_i_i14 = $__v_sroa_1_4_load3543 - 24 | 0;
   $incdec_ptr_i_i = $__end1_addr_i_015_i - 24 | 0;
   if (($add_ptr_i_i14 | 0) != 0) {
    __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($add_ptr_i_i14 | 0, $incdec_ptr_i_i | 0);
    __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($__v_sroa_1_4_load3543 - 24 + 12 | 0, $__end1_addr_i_015_i - 24 + 12 | 0);
   }
   if (($incdec_ptr_i_i | 0) == ($12 | 0)) {
    break;
   } else {
    $__end1_addr_i_015_i = $incdec_ptr_i_i;
    $__v_sroa_1_4_load3543 = $add_ptr_i_i14;
   }
  }
  $24 = HEAP32[$__begin__i >> 2] | 0;
  $23 = $add_ptr_i_i14;
  $22 = HEAP32[$__end__i >> 2] | 0;
 }
 HEAP32[$__begin__i >> 2] = $23;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 $__v_sroa_2_8_load3948 = $22;
 while (1) {
  if (($24 | 0) == ($__v_sroa_2_8_load3948 | 0)) {
   break;
  }
  $incdec_ptr_i_i_i_i_i23 = $__v_sroa_2_8_load3948 - 24 | 0;
  __ZN10ClipperLib9ExPolygonD2Ev($incdec_ptr_i_i_i_i_i23);
  $__v_sroa_2_8_load3948 = $incdec_ptr_i_i_i_i_i23;
 }
 if (($24 | 0) == 0) {
  return;
 }
 __ZdlPv($24);
 return;
}
function __ZNSt3__16vectorIPN10ClipperLib6OutRecENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_sub_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_022 = 0, $retval_i_023 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $incdec_ptr = 0, $5 = 0, $sub_ptr_sub_i_i = 0, $add_ptr_i_i13 = 0, $7 = 0, $8 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = (HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i >> 2;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_sub_i_i_i = (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0;
 if ($sub_ptr_sub_i_i_i >> 2 >>> 0 > 536870910) {
  $retval_i_022 = 1073741823;
  label = 6834;
 } else {
  $mul_i = $sub_ptr_sub_i_i_i >> 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_023 = 0;
  } else {
   $retval_i_022 = $_sroa_speculated;
   label = 6834;
  }
 }
 if ((label | 0) == 6834) {
  $cond_i_i = __Znwj($retval_i_022 << 2) | 0;
  $retval_i_023 = $retval_i_022;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i << 2) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_023 << 2) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  HEAP32[$add_ptr_i_i >> 2] = HEAP32[$__x >> 2];
 }
 $incdec_ptr = $cond_i_i + ($add << 2) | 0;
 $5 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i_i = (HEAP32[$__end__i >> 2] | 0) - $5 | 0;
 $add_ptr_i_i13 = $cond_i_i + ($sub_ptr_div_i - ($sub_ptr_sub_i_i >> 2) << 2) | 0;
 $7 = $add_ptr_i_i13;
 $8 = $5;
 _memcpy($7 | 0, $8 | 0, $sub_ptr_sub_i_i) | 0;
 HEAP32[$__begin__i >> 2] = $add_ptr_i_i13;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 if (($5 | 0) == 0) {
  return;
 }
 __ZdlPv($8);
 return;
}
function __ZNSt3__16vectorIPN10ClipperLib11HorzJoinRecENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_sub_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_022 = 0, $retval_i_023 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $incdec_ptr = 0, $5 = 0, $sub_ptr_sub_i_i = 0, $add_ptr_i_i13 = 0, $7 = 0, $8 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = (HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i >> 2;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_sub_i_i_i = (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0;
 if ($sub_ptr_sub_i_i_i >> 2 >>> 0 > 536870910) {
  $retval_i_022 = 1073741823;
  label = 6846;
 } else {
  $mul_i = $sub_ptr_sub_i_i_i >> 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_023 = 0;
  } else {
   $retval_i_022 = $_sroa_speculated;
   label = 6846;
  }
 }
 if ((label | 0) == 6846) {
  $cond_i_i = __Znwj($retval_i_022 << 2) | 0;
  $retval_i_023 = $retval_i_022;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i << 2) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_023 << 2) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  HEAP32[$add_ptr_i_i >> 2] = HEAP32[$__x >> 2];
 }
 $incdec_ptr = $cond_i_i + ($add << 2) | 0;
 $5 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i_i = (HEAP32[$__end__i >> 2] | 0) - $5 | 0;
 $add_ptr_i_i13 = $cond_i_i + ($sub_ptr_div_i - ($sub_ptr_sub_i_i >> 2) << 2) | 0;
 $7 = $add_ptr_i_i13;
 $8 = $5;
 _memcpy($7 | 0, $8 | 0, $sub_ptr_sub_i_i) | 0;
 HEAP32[$__begin__i >> 2] = $add_ptr_i_i13;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 if (($5 | 0) == 0) {
  return;
 }
 __ZdlPv($8);
 return;
}
function __ZNSt3__16__sortIRPFbPN10ClipperLib6OutRecES3_EPS3_EEvT0_S8_T_($__first, $__last, $__comp) {
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 var $__last_addr_0_ph = 0, $__first_addr_0_ph = 0, $sub_ptr_lhs_cast = 0, $incdec_ptr18 = 0, $__first_addr_0 = 0, $sub_ptr_rhs_cast = 0, $sub_ptr_sub = 0, $sub_ptr_div = 0, $3 = 0, $add_ptr = 0, $call_i = 0, $call7_i = 0, $11 = 0, $16 = 0, $18 = 0, $23 = 0, $add_ptr6 = 0, $add_ptr7 = 0, $add_ptr11 = 0, $add_ptr12 = 0, $add_ptr13 = 0, $28 = 0, $33 = 0, $34 = 0, $37 = 0, $38 = 0, $41 = 0, $add_ptr_i = 0, $add_ptr1_i = 0, $call_i174 = 0, $call7_i175 = 0, $49 = 0, $50 = 0, $53 = 0, $55 = 0, $60 = 0, $add_ptr2_i = 0, $__i_022_i = 0, $__j_021_i = 0, $65 = 0, $__j_1_i = 0, $__k_0_i = 0, $incdec_ptr_i = 0, $__k_0_lcssa_i = 0, $incdec_ptr9_i = 0, $div = 0, $add_ptr21 = 0, $div22 = 0, $add_ptr23 = 0, $add_ptr24 = 0, $call_i146 = 0, $72 = 0, $77 = 0, $82 = 0, $87 = 0, $call_i161 = 0, $call7_i162 = 0, $95 = 0, $100 = 0, $102 = 0, $107 = 0, $__n_swaps_0 = 0, $__j_0 = 0, $incdec_ptr34 = 0, $incdec_ptr37 = 0, $__i_0 = 0, $incdec_ptr50 = 0, $118 = 0, $__i_1 = 0, $__i_2_ph = 0, $__j_1_ph = 0, $__i_2 = 0, $incdec_ptr60 = 0, $__j_2 = 0, $126 = 0, $131 = 0, $__n_swaps_3 = 0, $__j_3 = 0, $incdec_ptr80 = 0, $__m_0_ph = 0, $__n_swaps_4_ph = 0, $__i_3_ph = 0, $__j_4_ph = 0, $__i_3 = 0, $incdec_ptr88 = 0, $__j_5 = 0, $139 = 0, $__m_2 = 0, $__n_swaps_5 = 0, $__i_4 = 0, $144 = 0, $__n_swaps_6 = 0, $call113 = 0, $add_ptr114 = 0, $sub_ptr_lhs_cast126 = 0, label = 0;
 $__first_addr_0_ph = $__first;
 $__last_addr_0_ph = $__last;
 L7975 : while (1) {
  $sub_ptr_lhs_cast = $__last_addr_0_ph;
  $incdec_ptr18 = $__last_addr_0_ph - 4 | 0;
  $__first_addr_0 = $__first_addr_0_ph;
  L7977 : while (1) {
   $sub_ptr_rhs_cast = $__first_addr_0;
   $sub_ptr_sub = $sub_ptr_lhs_cast - $sub_ptr_rhs_cast | 0;
   $sub_ptr_div = $sub_ptr_sub >> 2;
   if (($sub_ptr_div | 0) == 4) {
    label = 6867;
    break L7975;
   } else if (($sub_ptr_div | 0) == 5) {
    label = 6868;
    break L7975;
   } else if (($sub_ptr_div | 0) == 3) {
    label = 6859;
    break L7975;
   } else if (($sub_ptr_div | 0) == 0 | ($sub_ptr_div | 0) == 1) {
    label = 6946;
    break L7975;
   } else if (($sub_ptr_div | 0) == 2) {
    label = 6857;
    break L7975;
   }
   if (($sub_ptr_sub | 0) < 124) {
    label = 6874;
    break L7975;
   }
   $div = ($sub_ptr_div | 0) / 2 & -1;
   $add_ptr21 = $__first_addr_0 + ($div << 2) | 0;
   do {
    if (($sub_ptr_sub | 0) > 3996) {
     $div22 = ($sub_ptr_div | 0) / 4 & -1;
     $add_ptr23 = $__first_addr_0 + ($div22 << 2) | 0;
     $add_ptr24 = $__first_addr_0 + ($div22 + $div << 2) | 0;
     $call_i146 = __ZNSt3__17__sort4IRPFbPN10ClipperLib6OutRecES3_EPS3_EEjT0_S8_S8_S8_T_($__first_addr_0, $add_ptr23, $add_ptr21, $add_ptr24, $__comp) | 0;
     if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$incdec_ptr18 >> 2] | 0, HEAP32[$add_ptr24 >> 2] | 0) | 0)) {
      $__n_swaps_0 = $call_i146;
      break;
     }
     $72 = HEAP32[$add_ptr24 >> 2] | 0;
     HEAP32[$add_ptr24 >> 2] = HEAP32[$incdec_ptr18 >> 2];
     HEAP32[$incdec_ptr18 >> 2] = $72;
     if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr24 >> 2] | 0, HEAP32[$add_ptr21 >> 2] | 0) | 0)) {
      $__n_swaps_0 = $call_i146 + 1 | 0;
      break;
     }
     $77 = HEAP32[$add_ptr21 >> 2] | 0;
     HEAP32[$add_ptr21 >> 2] = HEAP32[$add_ptr24 >> 2];
     HEAP32[$add_ptr24 >> 2] = $77;
     if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr21 >> 2] | 0, HEAP32[$add_ptr23 >> 2] | 0) | 0)) {
      $__n_swaps_0 = $call_i146 + 2 | 0;
      break;
     }
     $82 = HEAP32[$add_ptr23 >> 2] | 0;
     HEAP32[$add_ptr23 >> 2] = HEAP32[$add_ptr21 >> 2];
     HEAP32[$add_ptr21 >> 2] = $82;
     if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr23 >> 2] | 0, HEAP32[$__first_addr_0 >> 2] | 0) | 0) {
      $87 = HEAP32[$__first_addr_0 >> 2] | 0;
      HEAP32[$__first_addr_0 >> 2] = HEAP32[$add_ptr23 >> 2];
      HEAP32[$add_ptr23 >> 2] = $87;
      $__n_swaps_0 = $call_i146 + 4 | 0;
      break;
     } else {
      $__n_swaps_0 = $call_i146 + 3 | 0;
      break;
     }
    } else {
     $call_i161 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr21 >> 2] | 0, HEAP32[$__first_addr_0 >> 2] | 0) | 0;
     $call7_i162 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$incdec_ptr18 >> 2] | 0, HEAP32[$add_ptr21 >> 2] | 0) | 0;
     if (!$call_i161) {
      if (!$call7_i162) {
       $__n_swaps_0 = 0;
       break;
      }
      $95 = HEAP32[$add_ptr21 >> 2] | 0;
      HEAP32[$add_ptr21 >> 2] = HEAP32[$incdec_ptr18 >> 2];
      HEAP32[$incdec_ptr18 >> 2] = $95;
      if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr21 >> 2] | 0, HEAP32[$__first_addr_0 >> 2] | 0) | 0)) {
       $__n_swaps_0 = 1;
       break;
      }
      $100 = HEAP32[$__first_addr_0 >> 2] | 0;
      HEAP32[$__first_addr_0 >> 2] = HEAP32[$add_ptr21 >> 2];
      HEAP32[$add_ptr21 >> 2] = $100;
      $__n_swaps_0 = 2;
      break;
     }
     $102 = HEAP32[$__first_addr_0 >> 2] | 0;
     if ($call7_i162) {
      HEAP32[$__first_addr_0 >> 2] = HEAP32[$incdec_ptr18 >> 2];
      HEAP32[$incdec_ptr18 >> 2] = $102;
      $__n_swaps_0 = 1;
      break;
     }
     HEAP32[$__first_addr_0 >> 2] = HEAP32[$add_ptr21 >> 2];
     HEAP32[$add_ptr21 >> 2] = $102;
     if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$incdec_ptr18 >> 2] | 0, $102) | 0)) {
      $__n_swaps_0 = 1;
      break;
     }
     $107 = HEAP32[$add_ptr21 >> 2] | 0;
     HEAP32[$add_ptr21 >> 2] = HEAP32[$incdec_ptr18 >> 2];
     HEAP32[$incdec_ptr18 >> 2] = $107;
     $__n_swaps_0 = 2;
    }
   } while (0);
   do {
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$__first_addr_0 >> 2] | 0, HEAP32[$add_ptr21 >> 2] | 0) | 0) {
     $__j_3 = $incdec_ptr18;
     $__n_swaps_3 = $__n_swaps_0;
    } else {
     $__j_0 = $incdec_ptr18;
     while (1) {
      $incdec_ptr34 = $__j_0 - 4 | 0;
      if (($__first_addr_0 | 0) == ($incdec_ptr34 | 0)) {
       break;
      }
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$incdec_ptr34 >> 2] | 0, HEAP32[$add_ptr21 >> 2] | 0) | 0) {
       label = 6919;
       break;
      } else {
       $__j_0 = $incdec_ptr34;
      }
     }
     if ((label | 0) == 6919) {
      label = 0;
      $131 = HEAP32[$__first_addr_0 >> 2] | 0;
      HEAP32[$__first_addr_0 >> 2] = HEAP32[$incdec_ptr34 >> 2];
      HEAP32[$incdec_ptr34 >> 2] = $131;
      $__j_3 = $incdec_ptr34;
      $__n_swaps_3 = $__n_swaps_0 + 1 | 0;
      break;
     }
     $incdec_ptr37 = $__first_addr_0 + 4 | 0;
     if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$__first_addr_0 >> 2] | 0, HEAP32[$incdec_ptr18 >> 2] | 0) | 0) {
      $__i_1 = $incdec_ptr37;
     } else {
      $__i_0 = $incdec_ptr37;
      while (1) {
       if (($__i_0 | 0) == ($incdec_ptr18 | 0)) {
        label = 6942;
        break L7975;
       }
       $incdec_ptr50 = $__i_0 + 4 | 0;
       if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$__first_addr_0 >> 2] | 0, HEAP32[$__i_0 >> 2] | 0) | 0) {
        break;
       } else {
        $__i_0 = $incdec_ptr50;
       }
      }
      $118 = HEAP32[$__i_0 >> 2] | 0;
      HEAP32[$__i_0 >> 2] = HEAP32[$incdec_ptr18 >> 2];
      HEAP32[$incdec_ptr18 >> 2] = $118;
      $__i_1 = $incdec_ptr50;
     }
     if (($__i_1 | 0) == ($incdec_ptr18 | 0)) {
      label = 6954;
      break L7975;
     } else {
      $__j_1_ph = $incdec_ptr18;
      $__i_2_ph = $__i_1;
     }
     while (1) {
      $__i_2 = $__i_2_ph;
      while (1) {
       $incdec_ptr60 = $__i_2 + 4 | 0;
       if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$__first_addr_0 >> 2] | 0, HEAP32[$__i_2 >> 2] | 0) | 0) {
        $__j_2 = $__j_1_ph;
        break;
       } else {
        $__i_2 = $incdec_ptr60;
       }
      }
      do {
       $__j_2 = $__j_2 - 4 | 0;
      } while (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$__first_addr_0 >> 2] | 0, HEAP32[$__j_2 >> 2] | 0) | 0);
      if ($__i_2 >>> 0 >= $__j_2 >>> 0) {
       $__first_addr_0 = $__i_2;
       continue L7977;
      }
      $126 = HEAP32[$__i_2 >> 2] | 0;
      HEAP32[$__i_2 >> 2] = HEAP32[$__j_2 >> 2];
      HEAP32[$__j_2 >> 2] = $126;
      $__j_1_ph = $__j_2;
      $__i_2_ph = $incdec_ptr60;
     }
    }
   } while (0);
   $incdec_ptr80 = $__first_addr_0 + 4 | 0;
   L8026 : do {
    if ($incdec_ptr80 >>> 0 < $__j_3 >>> 0) {
     $__j_4_ph = $__j_3;
     $__i_3_ph = $incdec_ptr80;
     $__n_swaps_4_ph = $__n_swaps_3;
     $__m_0_ph = $add_ptr21;
     while (1) {
      $__i_3 = $__i_3_ph;
      while (1) {
       $incdec_ptr88 = $__i_3 + 4 | 0;
       if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$__i_3 >> 2] | 0, HEAP32[$__m_0_ph >> 2] | 0) | 0) {
        $__i_3 = $incdec_ptr88;
       } else {
        $__j_5 = $__j_4_ph;
        break;
       }
      }
      do {
       $__j_5 = $__j_5 - 4 | 0;
      } while (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$__j_5 >> 2] | 0, HEAP32[$__m_0_ph >> 2] | 0) | 0));
      if ($__i_3 >>> 0 > $__j_5 >>> 0) {
       $__i_4 = $__i_3;
       $__n_swaps_5 = $__n_swaps_4_ph;
       $__m_2 = $__m_0_ph;
       break L8026;
      }
      $139 = HEAP32[$__i_3 >> 2] | 0;
      HEAP32[$__i_3 >> 2] = HEAP32[$__j_5 >> 2];
      HEAP32[$__j_5 >> 2] = $139;
      $__j_4_ph = $__j_5;
      $__i_3_ph = $incdec_ptr88;
      $__n_swaps_4_ph = $__n_swaps_4_ph + 1 | 0;
      $__m_0_ph = ($__m_0_ph | 0) == ($__i_3 | 0) ? $__j_5 : $__m_0_ph;
     }
    } else {
     $__i_4 = $incdec_ptr80;
     $__n_swaps_5 = $__n_swaps_3;
     $__m_2 = $add_ptr21;
    }
   } while (0);
   do {
    if (($__i_4 | 0) == ($__m_2 | 0)) {
     $__n_swaps_6 = $__n_swaps_5;
    } else {
     if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$__m_2 >> 2] | 0, HEAP32[$__i_4 >> 2] | 0) | 0)) {
      $__n_swaps_6 = $__n_swaps_5;
      break;
     }
     $144 = HEAP32[$__i_4 >> 2] | 0;
     HEAP32[$__i_4 >> 2] = HEAP32[$__m_2 >> 2];
     HEAP32[$__m_2 >> 2] = $144;
     $__n_swaps_6 = $__n_swaps_5 + 1 | 0;
    }
   } while (0);
   if (($__n_swaps_6 | 0) == 0) {
    $call113 = __ZNSt3__127__insertion_sort_incompleteIRPFbPN10ClipperLib6OutRecES3_EPS3_EEbT0_S8_T_($__first_addr_0, $__i_4, $__comp) | 0;
    $add_ptr114 = $__i_4 + 4 | 0;
    if (__ZNSt3__127__insertion_sort_incompleteIRPFbPN10ClipperLib6OutRecES3_EPS3_EEbT0_S8_T_($add_ptr114, $__last_addr_0_ph, $__comp) | 0) {
     label = 6931;
     break;
    }
    if ($call113) {
     $__first_addr_0 = $add_ptr114;
     continue;
    }
   }
   $sub_ptr_lhs_cast126 = $__i_4;
   if (($sub_ptr_lhs_cast126 - $sub_ptr_rhs_cast | 0) >= ($sub_ptr_lhs_cast - $sub_ptr_lhs_cast126 | 0)) {
    label = 6935;
    break;
   }
   __ZNSt3__16__sortIRPFbPN10ClipperLib6OutRecES3_EPS3_EEvT0_S8_T_($__first_addr_0, $__i_4, $__comp);
   $__first_addr_0 = $__i_4 + 4 | 0;
  }
  if ((label | 0) == 6935) {
   label = 0;
   __ZNSt3__16__sortIRPFbPN10ClipperLib6OutRecES3_EPS3_EEvT0_S8_T_($__i_4 + 4 | 0, $__last_addr_0_ph, $__comp);
   $__first_addr_0_ph = $__first_addr_0;
   $__last_addr_0_ph = $__i_4;
   continue;
  } else if ((label | 0) == 6931) {
   label = 0;
   if ($call113) {
    label = 6955;
    break;
   } else {
    $__first_addr_0_ph = $__first_addr_0;
    $__last_addr_0_ph = $__i_4;
    continue;
   }
  }
 }
 if ((label | 0) == 6867) {
  $add_ptr6 = $__first_addr_0 + 4 | 0;
  $add_ptr7 = $__first_addr_0 + 8 | 0;
  __ZNSt3__17__sort4IRPFbPN10ClipperLib6OutRecES3_EPS3_EEjT0_S8_S8_S8_T_($__first_addr_0, $add_ptr6, $add_ptr7, $incdec_ptr18, $__comp) | 0;
  return;
 } else if ((label | 0) == 6868) {
  $add_ptr11 = $__first_addr_0 + 4 | 0;
  $add_ptr12 = $__first_addr_0 + 8 | 0;
  $add_ptr13 = $__first_addr_0 + 12 | 0;
  __ZNSt3__17__sort4IRPFbPN10ClipperLib6OutRecES3_EPS3_EEjT0_S8_S8_S8_T_($__first_addr_0, $add_ptr11, $add_ptr12, $add_ptr13, $__comp) | 0;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$incdec_ptr18 >> 2] | 0, HEAP32[$add_ptr13 >> 2] | 0) | 0)) {
   return;
  }
  $28 = HEAP32[$add_ptr13 >> 2] | 0;
  HEAP32[$add_ptr13 >> 2] = HEAP32[$incdec_ptr18 >> 2];
  HEAP32[$incdec_ptr18 >> 2] = $28;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr13 >> 2] | 0, HEAP32[$add_ptr12 >> 2] | 0) | 0)) {
   return;
  }
  $33 = HEAP32[$add_ptr12 >> 2] | 0;
  $34 = HEAP32[$add_ptr13 >> 2] | 0;
  HEAP32[$add_ptr12 >> 2] = $34;
  HEAP32[$add_ptr13 >> 2] = $33;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63]($34, HEAP32[$add_ptr11 >> 2] | 0) | 0)) {
   return;
  }
  $37 = HEAP32[$add_ptr11 >> 2] | 0;
  $38 = HEAP32[$add_ptr12 >> 2] | 0;
  HEAP32[$add_ptr11 >> 2] = $38;
  HEAP32[$add_ptr12 >> 2] = $37;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63]($38, HEAP32[$__first_addr_0 >> 2] | 0) | 0)) {
   return;
  }
  $41 = HEAP32[$__first_addr_0 >> 2] | 0;
  HEAP32[$__first_addr_0 >> 2] = HEAP32[$add_ptr11 >> 2];
  HEAP32[$add_ptr11 >> 2] = $41;
  return;
 } else if ((label | 0) == 6859) {
  $add_ptr = $__first_addr_0 + 4 | 0;
  $call_i = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr >> 2] | 0, HEAP32[$__first_addr_0 >> 2] | 0) | 0;
  $call7_i = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$incdec_ptr18 >> 2] | 0, HEAP32[$add_ptr >> 2] | 0) | 0;
  if (!$call_i) {
   if (!$call7_i) {
    return;
   }
   $11 = HEAP32[$add_ptr >> 2] | 0;
   HEAP32[$add_ptr >> 2] = HEAP32[$incdec_ptr18 >> 2];
   HEAP32[$incdec_ptr18 >> 2] = $11;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr >> 2] | 0, HEAP32[$__first_addr_0 >> 2] | 0) | 0)) {
    return;
   }
   $16 = HEAP32[$__first_addr_0 >> 2] | 0;
   HEAP32[$__first_addr_0 >> 2] = HEAP32[$add_ptr >> 2];
   HEAP32[$add_ptr >> 2] = $16;
   return;
  }
  $18 = HEAP32[$__first_addr_0 >> 2] | 0;
  if ($call7_i) {
   HEAP32[$__first_addr_0 >> 2] = HEAP32[$incdec_ptr18 >> 2];
   HEAP32[$incdec_ptr18 >> 2] = $18;
   return;
  }
  HEAP32[$__first_addr_0 >> 2] = HEAP32[$add_ptr >> 2];
  HEAP32[$add_ptr >> 2] = $18;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$incdec_ptr18 >> 2] | 0, $18) | 0)) {
   return;
  }
  $23 = HEAP32[$add_ptr >> 2] | 0;
  HEAP32[$add_ptr >> 2] = HEAP32[$incdec_ptr18 >> 2];
  HEAP32[$incdec_ptr18 >> 2] = $23;
  return;
 } else if ((label | 0) == 6874) {
  $add_ptr_i = $__first_addr_0 + 8 | 0;
  $add_ptr1_i = $__first_addr_0 + 4 | 0;
  $call_i174 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr1_i >> 2] | 0, HEAP32[$__first_addr_0 >> 2] | 0) | 0;
  $call7_i175 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr_i >> 2] | 0, HEAP32[$add_ptr1_i >> 2] | 0) | 0;
  do {
   if ($call_i174) {
    $55 = HEAP32[$__first_addr_0 >> 2] | 0;
    if ($call7_i175) {
     HEAP32[$__first_addr_0 >> 2] = HEAP32[$add_ptr_i >> 2];
     HEAP32[$add_ptr_i >> 2] = $55;
     break;
    }
    HEAP32[$__first_addr_0 >> 2] = HEAP32[$add_ptr1_i >> 2];
    HEAP32[$add_ptr1_i >> 2] = $55;
    if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr_i >> 2] | 0, $55) | 0)) {
     break;
    }
    $60 = HEAP32[$add_ptr1_i >> 2] | 0;
    HEAP32[$add_ptr1_i >> 2] = HEAP32[$add_ptr_i >> 2];
    HEAP32[$add_ptr_i >> 2] = $60;
   } else {
    if (!$call7_i175) {
     break;
    }
    $49 = HEAP32[$add_ptr1_i >> 2] | 0;
    $50 = HEAP32[$add_ptr_i >> 2] | 0;
    HEAP32[$add_ptr1_i >> 2] = $50;
    HEAP32[$add_ptr_i >> 2] = $49;
    if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63]($50, HEAP32[$__first_addr_0 >> 2] | 0) | 0)) {
     break;
    }
    $53 = HEAP32[$__first_addr_0 >> 2] | 0;
    HEAP32[$__first_addr_0 >> 2] = HEAP32[$add_ptr1_i >> 2];
    HEAP32[$add_ptr1_i >> 2] = $53;
   }
  } while (0);
  $add_ptr2_i = $__first_addr_0 + 12 | 0;
  if (($add_ptr2_i | 0) == ($__last_addr_0_ph | 0)) {
   return;
  } else {
   $__j_021_i = $add_ptr_i;
   $__i_022_i = $add_ptr2_i;
  }
  while (1) {
   if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$__i_022_i >> 2] | 0, HEAP32[$__j_021_i >> 2] | 0) | 0) {
    $65 = HEAP32[$__i_022_i >> 2] | 0;
    $__k_0_i = $__j_021_i;
    $__j_1_i = $__i_022_i;
    while (1) {
     HEAP32[$__j_1_i >> 2] = HEAP32[$__k_0_i >> 2];
     if (($__k_0_i | 0) == ($__first_addr_0 | 0)) {
      $__k_0_lcssa_i = $__first_addr_0;
      break;
     }
     $incdec_ptr_i = $__k_0_i - 4 | 0;
     if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63]($65, HEAP32[$incdec_ptr_i >> 2] | 0) | 0) {
      $__j_1_i = $__k_0_i;
      $__k_0_i = $incdec_ptr_i;
     } else {
      $__k_0_lcssa_i = $__k_0_i;
      break;
     }
    }
    HEAP32[$__k_0_lcssa_i >> 2] = $65;
   }
   $incdec_ptr9_i = $__i_022_i + 4 | 0;
   if (($incdec_ptr9_i | 0) == ($__last_addr_0_ph | 0)) {
    break;
   } else {
    $__j_021_i = $__i_022_i;
    $__i_022_i = $incdec_ptr9_i;
   }
  }
  return;
 } else if ((label | 0) == 6942) {
  return;
 } else if ((label | 0) == 6946) {
  return;
 } else if ((label | 0) == 6857) {
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$incdec_ptr18 >> 2] | 0, HEAP32[$__first_addr_0 >> 2] | 0) | 0)) {
   return;
  }
  $3 = HEAP32[$__first_addr_0 >> 2] | 0;
  HEAP32[$__first_addr_0 >> 2] = HEAP32[$incdec_ptr18 >> 2];
  HEAP32[$incdec_ptr18 >> 2] = $3;
  return;
 } else if ((label | 0) == 6954) {
  return;
 } else if ((label | 0) == 6955) {
  return;
 }
}
function __ZNSt3__17__sort4IRPFbPN10ClipperLib6OutRecES3_EPS3_EEjT0_S8_S8_S8_T_($__x1, $__x2, $__x3, $__x4, $__c) {
 $__x1 = $__x1 | 0;
 $__x2 = $__x2 | 0;
 $__x3 = $__x3 | 0;
 $__x4 = $__x4 | 0;
 $__c = $__c | 0;
 var $call_i = 0, $call7_i = 0, $6 = 0, $11 = 0, $13 = 0, $18 = 0, $retval_0_i = 0, $23 = 0, $28 = 0, $33 = 0, $__r_0 = 0;
 $call_i = FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 63](HEAP32[$__x2 >> 2] | 0, HEAP32[$__x1 >> 2] | 0) | 0;
 $call7_i = FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 63](HEAP32[$__x3 >> 2] | 0, HEAP32[$__x2 >> 2] | 0) | 0;
 do {
  if ($call_i) {
   $13 = HEAP32[$__x1 >> 2] | 0;
   if ($call7_i) {
    HEAP32[$__x1 >> 2] = HEAP32[$__x3 >> 2];
    HEAP32[$__x3 >> 2] = $13;
    $retval_0_i = 1;
    break;
   }
   HEAP32[$__x1 >> 2] = HEAP32[$__x2 >> 2];
   HEAP32[$__x2 >> 2] = $13;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 63](HEAP32[$__x3 >> 2] | 0, $13) | 0)) {
    $retval_0_i = 1;
    break;
   }
   $18 = HEAP32[$__x2 >> 2] | 0;
   HEAP32[$__x2 >> 2] = HEAP32[$__x3 >> 2];
   HEAP32[$__x3 >> 2] = $18;
   $retval_0_i = 2;
  } else {
   if (!$call7_i) {
    $retval_0_i = 0;
    break;
   }
   $6 = HEAP32[$__x2 >> 2] | 0;
   HEAP32[$__x2 >> 2] = HEAP32[$__x3 >> 2];
   HEAP32[$__x3 >> 2] = $6;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 63](HEAP32[$__x2 >> 2] | 0, HEAP32[$__x1 >> 2] | 0) | 0)) {
    $retval_0_i = 1;
    break;
   }
   $11 = HEAP32[$__x1 >> 2] | 0;
   HEAP32[$__x1 >> 2] = HEAP32[$__x2 >> 2];
   HEAP32[$__x2 >> 2] = $11;
   $retval_0_i = 2;
  }
 } while (0);
 if (!(FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 63](HEAP32[$__x4 >> 2] | 0, HEAP32[$__x3 >> 2] | 0) | 0)) {
  $__r_0 = $retval_0_i;
  return $__r_0 | 0;
 }
 $23 = HEAP32[$__x3 >> 2] | 0;
 HEAP32[$__x3 >> 2] = HEAP32[$__x4 >> 2];
 HEAP32[$__x4 >> 2] = $23;
 if (!(FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 63](HEAP32[$__x3 >> 2] | 0, HEAP32[$__x2 >> 2] | 0) | 0)) {
  $__r_0 = $retval_0_i + 1 | 0;
  return $__r_0 | 0;
 }
 $28 = HEAP32[$__x2 >> 2] | 0;
 HEAP32[$__x2 >> 2] = HEAP32[$__x3 >> 2];
 HEAP32[$__x3 >> 2] = $28;
 if (!(FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 63](HEAP32[$__x2 >> 2] | 0, HEAP32[$__x1 >> 2] | 0) | 0)) {
  $__r_0 = $retval_0_i + 2 | 0;
  return $__r_0 | 0;
 }
 $33 = HEAP32[$__x1 >> 2] | 0;
 HEAP32[$__x1 >> 2] = HEAP32[$__x2 >> 2];
 HEAP32[$__x2 >> 2] = $33;
 $__r_0 = $retval_0_i + 3 | 0;
 return $__r_0 | 0;
}
function __ZNSt3__16vectorIPN10ClipperLib7JoinRecENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_sub_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_022 = 0, $retval_i_023 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $incdec_ptr = 0, $5 = 0, $sub_ptr_sub_i_i = 0, $add_ptr_i_i13 = 0, $7 = 0, $8 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = (HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i >> 2;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_sub_i_i_i = (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0;
 if ($sub_ptr_sub_i_i_i >> 2 >>> 0 > 536870910) {
  $retval_i_022 = 1073741823;
  label = 6978;
 } else {
  $mul_i = $sub_ptr_sub_i_i_i >> 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_023 = 0;
  } else {
   $retval_i_022 = $_sroa_speculated;
   label = 6978;
  }
 }
 if ((label | 0) == 6978) {
  $cond_i_i = __Znwj($retval_i_022 << 2) | 0;
  $retval_i_023 = $retval_i_022;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i << 2) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_023 << 2) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  HEAP32[$add_ptr_i_i >> 2] = HEAP32[$__x >> 2];
 }
 $incdec_ptr = $cond_i_i + ($add << 2) | 0;
 $5 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i_i = (HEAP32[$__end__i >> 2] | 0) - $5 | 0;
 $add_ptr_i_i13 = $cond_i_i + ($sub_ptr_div_i - ($sub_ptr_sub_i_i >> 2) << 2) | 0;
 $7 = $add_ptr_i_i13;
 $8 = $5;
 _memcpy($7 | 0, $8 | 0, $sub_ptr_sub_i_i) | 0;
 HEAP32[$__begin__i >> 2] = $add_ptr_i_i13;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 if (($5 | 0) == 0) {
  return;
 }
 __ZdlPv($8);
 return;
}
function __ZNSt3__127__insertion_sort_incompleteIRPFbPN10ClipperLib6OutRecES3_EPS3_EEbT0_S8_T_($__first, $__last, $__comp) {
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 var $sub_ptr_div = 0, $incdec_ptr = 0, $3 = 0, $add_ptr = 0, $incdec_ptr3 = 0, $call_i = 0, $call7_i = 0, $11 = 0, $16 = 0, $18 = 0, $23 = 0, $add_ptr11 = 0, $add_ptr12 = 0, $add_ptr13 = 0, $incdec_ptr14 = 0, $28 = 0, $33 = 0, $34 = 0, $37 = 0, $38 = 0, $41 = 0, $add_ptr16 = 0, $add_ptr17 = 0, $call_i48 = 0, $call7_i49 = 0, $49 = 0, $50 = 0, $53 = 0, $55 = 0, $60 = 0, $add_ptr19 = 0, $__i_065 = 0, $__count_064 = 0, $__j_063 = 0, $65 = 0, $__j_1 = 0, $__k_0 = 0, $incdec_ptr25 = 0, $__k_0_lcssa = 0, $inc = 0, $__count_1 = 0, $incdec_ptr34 = 0, $retval_0 = 0, label = 0;
 $sub_ptr_div = $__last - $__first >> 2;
 if (($sub_ptr_div | 0) == 5) {
  $add_ptr11 = $__first + 4 | 0;
  $add_ptr12 = $__first + 8 | 0;
  $add_ptr13 = $__first + 12 | 0;
  $incdec_ptr14 = $__last - 4 | 0;
  __ZNSt3__17__sort4IRPFbPN10ClipperLib6OutRecES3_EPS3_EEjT0_S8_S8_S8_T_($__first, $add_ptr11, $add_ptr12, $add_ptr13, $__comp) | 0;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$incdec_ptr14 >> 2] | 0, HEAP32[$add_ptr13 >> 2] | 0) | 0)) {
   $retval_0 = 1;
   return $retval_0 | 0;
  }
  $28 = HEAP32[$add_ptr13 >> 2] | 0;
  HEAP32[$add_ptr13 >> 2] = HEAP32[$incdec_ptr14 >> 2];
  HEAP32[$incdec_ptr14 >> 2] = $28;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr13 >> 2] | 0, HEAP32[$add_ptr12 >> 2] | 0) | 0)) {
   $retval_0 = 1;
   return $retval_0 | 0;
  }
  $33 = HEAP32[$add_ptr12 >> 2] | 0;
  $34 = HEAP32[$add_ptr13 >> 2] | 0;
  HEAP32[$add_ptr12 >> 2] = $34;
  HEAP32[$add_ptr13 >> 2] = $33;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63]($34, HEAP32[$add_ptr11 >> 2] | 0) | 0)) {
   $retval_0 = 1;
   return $retval_0 | 0;
  }
  $37 = HEAP32[$add_ptr11 >> 2] | 0;
  $38 = HEAP32[$add_ptr12 >> 2] | 0;
  HEAP32[$add_ptr11 >> 2] = $38;
  HEAP32[$add_ptr12 >> 2] = $37;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63]($38, HEAP32[$__first >> 2] | 0) | 0)) {
   $retval_0 = 1;
   return $retval_0 | 0;
  }
  $41 = HEAP32[$__first >> 2] | 0;
  HEAP32[$__first >> 2] = HEAP32[$add_ptr11 >> 2];
  HEAP32[$add_ptr11 >> 2] = $41;
  $retval_0 = 1;
  return $retval_0 | 0;
 } else if (($sub_ptr_div | 0) == 4) {
  __ZNSt3__17__sort4IRPFbPN10ClipperLib6OutRecES3_EPS3_EEjT0_S8_S8_S8_T_($__first, $__first + 4 | 0, $__first + 8 | 0, $__last - 4 | 0, $__comp) | 0;
  $retval_0 = 1;
  return $retval_0 | 0;
 } else if (($sub_ptr_div | 0) == 0 | ($sub_ptr_div | 0) == 1) {
  $retval_0 = 1;
  return $retval_0 | 0;
 } else if (($sub_ptr_div | 0) == 2) {
  $incdec_ptr = $__last - 4 | 0;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$incdec_ptr >> 2] | 0, HEAP32[$__first >> 2] | 0) | 0)) {
   $retval_0 = 1;
   return $retval_0 | 0;
  }
  $3 = HEAP32[$__first >> 2] | 0;
  HEAP32[$__first >> 2] = HEAP32[$incdec_ptr >> 2];
  HEAP32[$incdec_ptr >> 2] = $3;
  $retval_0 = 1;
  return $retval_0 | 0;
 } else if (($sub_ptr_div | 0) == 3) {
  $add_ptr = $__first + 4 | 0;
  $incdec_ptr3 = $__last - 4 | 0;
  $call_i = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr >> 2] | 0, HEAP32[$__first >> 2] | 0) | 0;
  $call7_i = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$incdec_ptr3 >> 2] | 0, HEAP32[$add_ptr >> 2] | 0) | 0;
  if (!$call_i) {
   if (!$call7_i) {
    $retval_0 = 1;
    return $retval_0 | 0;
   }
   $11 = HEAP32[$add_ptr >> 2] | 0;
   HEAP32[$add_ptr >> 2] = HEAP32[$incdec_ptr3 >> 2];
   HEAP32[$incdec_ptr3 >> 2] = $11;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr >> 2] | 0, HEAP32[$__first >> 2] | 0) | 0)) {
    $retval_0 = 1;
    return $retval_0 | 0;
   }
   $16 = HEAP32[$__first >> 2] | 0;
   HEAP32[$__first >> 2] = HEAP32[$add_ptr >> 2];
   HEAP32[$add_ptr >> 2] = $16;
   $retval_0 = 1;
   return $retval_0 | 0;
  }
  $18 = HEAP32[$__first >> 2] | 0;
  if ($call7_i) {
   HEAP32[$__first >> 2] = HEAP32[$incdec_ptr3 >> 2];
   HEAP32[$incdec_ptr3 >> 2] = $18;
   $retval_0 = 1;
   return $retval_0 | 0;
  }
  HEAP32[$__first >> 2] = HEAP32[$add_ptr >> 2];
  HEAP32[$add_ptr >> 2] = $18;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$incdec_ptr3 >> 2] | 0, $18) | 0)) {
   $retval_0 = 1;
   return $retval_0 | 0;
  }
  $23 = HEAP32[$add_ptr >> 2] | 0;
  HEAP32[$add_ptr >> 2] = HEAP32[$incdec_ptr3 >> 2];
  HEAP32[$incdec_ptr3 >> 2] = $23;
  $retval_0 = 1;
  return $retval_0 | 0;
 } else {
  $add_ptr16 = $__first + 8 | 0;
  $add_ptr17 = $__first + 4 | 0;
  $call_i48 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr17 >> 2] | 0, HEAP32[$__first >> 2] | 0) | 0;
  $call7_i49 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr16 >> 2] | 0, HEAP32[$add_ptr17 >> 2] | 0) | 0;
  do {
   if ($call_i48) {
    $55 = HEAP32[$__first >> 2] | 0;
    if ($call7_i49) {
     HEAP32[$__first >> 2] = HEAP32[$add_ptr16 >> 2];
     HEAP32[$add_ptr16 >> 2] = $55;
     break;
    }
    HEAP32[$__first >> 2] = HEAP32[$add_ptr17 >> 2];
    HEAP32[$add_ptr17 >> 2] = $55;
    if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$add_ptr16 >> 2] | 0, $55) | 0)) {
     break;
    }
    $60 = HEAP32[$add_ptr17 >> 2] | 0;
    HEAP32[$add_ptr17 >> 2] = HEAP32[$add_ptr16 >> 2];
    HEAP32[$add_ptr16 >> 2] = $60;
   } else {
    if (!$call7_i49) {
     break;
    }
    $49 = HEAP32[$add_ptr17 >> 2] | 0;
    $50 = HEAP32[$add_ptr16 >> 2] | 0;
    HEAP32[$add_ptr17 >> 2] = $50;
    HEAP32[$add_ptr16 >> 2] = $49;
    if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63]($50, HEAP32[$__first >> 2] | 0) | 0)) {
     break;
    }
    $53 = HEAP32[$__first >> 2] | 0;
    HEAP32[$__first >> 2] = HEAP32[$add_ptr17 >> 2];
    HEAP32[$add_ptr17 >> 2] = $53;
   }
  } while (0);
  $add_ptr19 = $__first + 12 | 0;
  if (($add_ptr19 | 0) == ($__last | 0)) {
   $retval_0 = 1;
   return $retval_0 | 0;
  } else {
   $__j_063 = $add_ptr16;
   $__count_064 = 0;
   $__i_065 = $add_ptr19;
  }
  while (1) {
   if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63](HEAP32[$__i_065 >> 2] | 0, HEAP32[$__j_063 >> 2] | 0) | 0) {
    $65 = HEAP32[$__i_065 >> 2] | 0;
    $__k_0 = $__j_063;
    $__j_1 = $__i_065;
    while (1) {
     HEAP32[$__j_1 >> 2] = HEAP32[$__k_0 >> 2];
     if (($__k_0 | 0) == ($__first | 0)) {
      $__k_0_lcssa = $__first;
      break;
     }
     $incdec_ptr25 = $__k_0 - 4 | 0;
     if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 63]($65, HEAP32[$incdec_ptr25 >> 2] | 0) | 0) {
      $__j_1 = $__k_0;
      $__k_0 = $incdec_ptr25;
     } else {
      $__k_0_lcssa = $__k_0;
      break;
     }
    }
    HEAP32[$__k_0_lcssa >> 2] = $65;
    $inc = $__count_064 + 1 | 0;
    if (($inc | 0) == 8) {
     break;
    } else {
     $__count_1 = $inc;
    }
   } else {
    $__count_1 = $__count_064;
   }
   $incdec_ptr34 = $__i_065 + 4 | 0;
   if (($incdec_ptr34 | 0) == ($__last | 0)) {
    $retval_0 = 1;
    label = 7022;
    break;
   } else {
    $__j_063 = $__i_065;
    $__count_064 = $__count_1;
    $__i_065 = $incdec_ptr34;
   }
  }
  if ((label | 0) == 7022) {
   return $retval_0 | 0;
  }
  $retval_0 = ($__i_065 + 4 | 0) == ($__last | 0);
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNSt3__16vectorIN10ClipperLib9ExPolygonENS_9allocatorIS2_EEE8__appendEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $__first__i_i_i = 0, $__end_ = 0, $1 = 0, $sub_ptr_lhs_cast = 0, $sub_ptr_rhs_cast = 0, $2 = 0, $__n_addr_0_i = 0, $4 = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_065 = 0, $retval_i_066 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $7 = 0, $__n_addr_0_i16 = 0, $9 = 0, $add_ptr6_i_i = 0, $10 = 0, $11 = 0, $__v_sroa_1_4_load4651 = 0, $__end1_addr_i_015_i = 0, $add_ptr_i_i27 = 0, $incdec_ptr_i_i = 0, $20 = 0, $21 = 0, $22 = 0, $__v_sroa_2_8_load5053 = 0, $incdec_ptr_i_i_i_i_i34 = 0, label = 0;
 $__first__i_i_i = $this + 8 | 0;
 $__end_ = $this + 4 | 0;
 $1 = HEAP32[$__end_ >> 2] | 0;
 $sub_ptr_lhs_cast = HEAP32[$__first__i_i_i >> 2] | 0;
 $sub_ptr_rhs_cast = $1;
 if ((($sub_ptr_lhs_cast - $sub_ptr_rhs_cast | 0) / 24 & -1) >>> 0 >= $__n >>> 0) {
  $__n_addr_0_i = $__n;
  $2 = $1;
  do {
   if (($2 | 0) == 0) {
    $4 = 0;
   } else {
    _memset($2 | 0, 0, 24);
    $4 = HEAP32[$__end_ >> 2] | 0;
   }
   $2 = $4 + 24 | 0;
   HEAP32[$__end_ >> 2] = $2;
   $__n_addr_0_i = $__n_addr_0_i - 1 | 0;
  } while (($__n_addr_0_i | 0) != 0);
  return;
 }
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = ($sub_ptr_rhs_cast - $sub_ptr_rhs_cast_i | 0) / 24 & -1;
 $add = $sub_ptr_div_i + $__n | 0;
 if ($add >>> 0 > 178956970) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $sub_ptr_div_i_i_i = ($sub_ptr_lhs_cast - $sub_ptr_rhs_cast_i | 0) / 24 & -1;
 if ($sub_ptr_div_i_i_i >>> 0 > 89478484) {
  $retval_i_065 = 178956970;
  label = 7046;
 } else {
  $mul_i = $sub_ptr_div_i_i_i << 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_066 = 0;
  } else {
   $retval_i_065 = $_sroa_speculated;
   label = 7046;
  }
 }
 if ((label | 0) == 7046) {
  $cond_i_i = __Znwj($retval_i_065 * 24 & -1) | 0;
  $retval_i_066 = $retval_i_065;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i * 24 & -1) | 0;
 $__n_addr_0_i16 = $__n;
 $7 = $add_ptr_i_i;
 do {
  if (($7 | 0) == 0) {
   $9 = 0;
  } else {
   _memset($7 | 0, 0, 24);
   $9 = $7;
  }
  $7 = $9 + 24 | 0;
  $__n_addr_0_i16 = $__n_addr_0_i16 - 1 | 0;
 } while (($__n_addr_0_i16 | 0) != 0);
 $add_ptr6_i_i = $cond_i_i + ($retval_i_066 * 24 & -1) | 0;
 $10 = HEAP32[$__begin__i >> 2] | 0;
 $11 = HEAP32[$__end_ >> 2] | 0;
 if (($11 | 0) == ($10 | 0)) {
  $22 = $10;
  $21 = $add_ptr_i_i;
  $20 = $10;
 } else {
  $__end1_addr_i_015_i = $11;
  $__v_sroa_1_4_load4651 = $add_ptr_i_i;
  while (1) {
   $add_ptr_i_i27 = $__v_sroa_1_4_load4651 - 24 | 0;
   $incdec_ptr_i_i = $__end1_addr_i_015_i - 24 | 0;
   if (($add_ptr_i_i27 | 0) != 0) {
    __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($add_ptr_i_i27 | 0, $incdec_ptr_i_i | 0);
    __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEEC2ERKS7_($__v_sroa_1_4_load4651 - 24 + 12 | 0, $__end1_addr_i_015_i - 24 + 12 | 0);
   }
   if (($incdec_ptr_i_i | 0) == ($10 | 0)) {
    break;
   } else {
    $__end1_addr_i_015_i = $incdec_ptr_i_i;
    $__v_sroa_1_4_load4651 = $add_ptr_i_i27;
   }
  }
  $22 = HEAP32[$__begin__i >> 2] | 0;
  $21 = $add_ptr_i_i27;
  $20 = HEAP32[$__end_ >> 2] | 0;
 }
 HEAP32[$__begin__i >> 2] = $21;
 HEAP32[$__end_ >> 2] = $7;
 HEAP32[$__first__i_i_i >> 2] = $add_ptr6_i_i;
 $__v_sroa_2_8_load5053 = $20;
 while (1) {
  if (($22 | 0) == ($__v_sroa_2_8_load5053 | 0)) {
   break;
  }
  $incdec_ptr_i_i_i_i_i34 = $__v_sroa_2_8_load5053 - 24 | 0;
  __ZN10ClipperLib9ExPolygonD2Ev($incdec_ptr_i_i_i_i_i34);
  $__v_sroa_2_8_load5053 = $incdec_ptr_i_i_i_i_i34;
 }
 if (($22 | 0) == 0) {
  return;
 }
 __ZdlPv($22);
 return;
}
function __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE8__appendEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $__first__i_i_i = 0, $__end_ = 0, $1 = 0, $sub_ptr_lhs_cast = 0, $sub_ptr_rhs_cast = 0, $2 = 0, $__n_addr_0_i = 0, $3 = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $sub_ptr_div_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_076 = 0, $retval_i_077 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $6 = 0, $__n_addr_0_i18 = 0, $7 = 0, $add_ptr6_i_i = 0, $8 = 0, $9 = 0, $__v_sroa_1_4_load6471 = 0, $__end1_addr_i_015_i = 0, $_pre_i59 = 0, $_pre = 0, $10 = 0, $incdec_ptr_i_i_i_i_i33 = 0, $11 = 0, $12 = 0, $__end__i_i_i_i_i_i_i_i39 = 0, $13 = 0, $18 = 0, label = 0;
 $__first__i_i_i = $this + 8 | 0;
 $__end_ = $this + 4 | 0;
 $1 = HEAP32[$__end_ >> 2] | 0;
 $sub_ptr_lhs_cast = HEAP32[$__first__i_i_i >> 2] | 0;
 $sub_ptr_rhs_cast = $1;
 if ((($sub_ptr_lhs_cast - $sub_ptr_rhs_cast | 0) / 12 & -1) >>> 0 >= $__n >>> 0) {
  $__n_addr_0_i = $__n;
  $2 = $1;
  do {
   if (($2 | 0) == 0) {
    $3 = 0;
   } else {
    HEAP32[$2 >> 2] = 0;
    HEAP32[$2 + 4 >> 2] = 0;
    HEAP32[$2 + 8 >> 2] = 0;
    $3 = HEAP32[$__end_ >> 2] | 0;
   }
   $2 = $3 + 12 | 0;
   HEAP32[$__end_ >> 2] = $2;
   $__n_addr_0_i = $__n_addr_0_i - 1 | 0;
  } while (($__n_addr_0_i | 0) != 0);
  return;
 }
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = ($sub_ptr_rhs_cast - $sub_ptr_rhs_cast_i | 0) / 12 & -1;
 $add = $sub_ptr_div_i + $__n | 0;
 if ($add >>> 0 > 357913941) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $sub_ptr_div_i_i_i = ($sub_ptr_lhs_cast - $sub_ptr_rhs_cast_i | 0) / 12 & -1;
 if ($sub_ptr_div_i_i_i >>> 0 > 178956969) {
  $retval_i_076 = 357913941;
  label = 7087;
 } else {
  $mul_i = $sub_ptr_div_i_i_i << 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_077 = 0;
  } else {
   $retval_i_076 = $_sroa_speculated;
   label = 7087;
  }
 }
 if ((label | 0) == 7087) {
  $cond_i_i = __Znwj($retval_i_076 * 12 & -1) | 0;
  $retval_i_077 = $retval_i_076;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i * 12 & -1) | 0;
 $__n_addr_0_i18 = $__n;
 $6 = $add_ptr_i_i;
 do {
  if (($6 | 0) == 0) {
   $7 = 0;
  } else {
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
   $7 = $6;
  }
  $6 = $7 + 12 | 0;
  $__n_addr_0_i18 = $__n_addr_0_i18 - 1 | 0;
 } while (($__n_addr_0_i18 | 0) != 0);
 $add_ptr6_i_i = $cond_i_i + ($retval_i_077 * 12 & -1) | 0;
 $8 = HEAP32[$__begin__i >> 2] | 0;
 $9 = HEAP32[$__end_ >> 2] | 0;
 do {
  if (($9 | 0) == ($8 | 0)) {
   HEAP32[$__begin__i >> 2] = $add_ptr_i_i;
   HEAP32[$__end_ >> 2] = $6;
   HEAP32[$__first__i_i_i >> 2] = $add_ptr6_i_i;
   $18 = $8;
  } else {
   $__end1_addr_i_015_i = $9;
   $__v_sroa_1_4_load6471 = $add_ptr_i_i;
   do {
    $__v_sroa_1_4_load6471 = $__v_sroa_1_4_load6471 - 12 | 0;
    $__end1_addr_i_015_i = $__end1_addr_i_015_i - 12 | 0;
    if (($__v_sroa_1_4_load6471 | 0) != 0) {
     __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEEC2ERKS5_($__v_sroa_1_4_load6471, $__end1_addr_i_015_i);
    }
   } while (($__end1_addr_i_015_i | 0) != ($8 | 0));
   $_pre_i59 = HEAP32[$__begin__i >> 2] | 0;
   $_pre = HEAP32[$__end_ >> 2] | 0;
   HEAP32[$__begin__i >> 2] = $__v_sroa_1_4_load6471;
   HEAP32[$__end_ >> 2] = $6;
   HEAP32[$__first__i_i_i >> 2] = $add_ptr6_i_i;
   if (($_pre_i59 | 0) == ($_pre | 0)) {
    $18 = $_pre_i59;
    break;
   } else {
    $10 = $_pre;
   }
   while (1) {
    $incdec_ptr_i_i_i_i_i33 = $10 - 12 | 0;
    $11 = HEAP32[$incdec_ptr_i_i_i_i_i33 >> 2] | 0;
    $12 = $11;
    if (($11 | 0) != 0) {
     $__end__i_i_i_i_i_i_i_i39 = $10 - 12 + 4 | 0;
     $13 = HEAP32[$__end__i_i_i_i_i_i_i_i39 >> 2] | 0;
     if (($11 | 0) != ($13 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i_i39 >> 2] = $13 + ((($13 - 16 + (-$12 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($11);
    }
    if (($_pre_i59 | 0) == ($incdec_ptr_i_i_i_i_i33 | 0)) {
     $18 = $_pre_i59;
     break;
    } else {
     $10 = $incdec_ptr_i_i_i_i_i33;
    }
   }
  }
 } while (0);
 if (($18 | 0) == 0) {
  return;
 }
 __ZdlPv($18);
 return;
}
function __ZNSt3__16vectorIPN10ClipperLib5TEdgeENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $__end__i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $__first__i_i_i_i_i_i = 0, $sub_ptr_sub_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_022 = 0, $retval_i_023 = 0, $cond_i_i = 0, $add_ptr_i_i = 0, $add_ptr6_i_i = 0, $incdec_ptr = 0, $5 = 0, $sub_ptr_sub_i_i = 0, $add_ptr_i_i13 = 0, $7 = 0, $8 = 0, label = 0;
 $__end__i = $this + 4 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = (HEAP32[$__end__i >> 2] | 0) - $sub_ptr_rhs_cast_i >> 2;
 $add = $sub_ptr_div_i + 1 | 0;
 if ($add >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $__first__i_i_i_i_i_i = $this + 8 | 0;
 $sub_ptr_sub_i_i_i = (HEAP32[$__first__i_i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i | 0;
 if ($sub_ptr_sub_i_i_i >> 2 >>> 0 > 536870910) {
  $retval_i_022 = 1073741823;
  label = 7122;
 } else {
  $mul_i = $sub_ptr_sub_i_i_i >> 1;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_023 = 0;
  } else {
   $retval_i_022 = $_sroa_speculated;
   label = 7122;
  }
 }
 if ((label | 0) == 7122) {
  $cond_i_i = __Znwj($retval_i_022 << 2) | 0;
  $retval_i_023 = $retval_i_022;
 }
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i << 2) | 0;
 $add_ptr6_i_i = $cond_i_i + ($retval_i_023 << 2) | 0;
 if (($add_ptr_i_i | 0) != 0) {
  HEAP32[$add_ptr_i_i >> 2] = HEAP32[$__x >> 2];
 }
 $incdec_ptr = $cond_i_i + ($add << 2) | 0;
 $5 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i_i = (HEAP32[$__end__i >> 2] | 0) - $5 | 0;
 $add_ptr_i_i13 = $cond_i_i + ($sub_ptr_div_i - ($sub_ptr_sub_i_i >> 2) << 2) | 0;
 $7 = $add_ptr_i_i13;
 $8 = $5;
 _memcpy($7 | 0, $8 | 0, $sub_ptr_sub_i_i) | 0;
 HEAP32[$__begin__i >> 2] = $add_ptr_i_i13;
 HEAP32[$__end__i >> 2] = $incdec_ptr;
 HEAP32[$__first__i_i_i_i_i_i >> 2] = $add_ptr6_i_i;
 if (($5 | 0) == 0) {
  return;
 }
 __ZdlPv($8);
 return;
}
function __ZN10ClipperLib17PolyOffsetBuilderC2ERKNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEERS8_dNS_8JoinTypeEdb($this, $in_polys, $out_polys, $delta, $jointype, $MiterLimit, $CheckInputs) {
 $this = $this | 0;
 $in_polys = $in_polys | 0;
 $out_polys = $out_polys | 0;
 $delta = +$delta;
 $jointype = $jointype | 0;
 $MiterLimit = +$MiterLimit;
 $CheckInputs = $CheckInputs | 0;
 var $__t_i_i_i_i_i344 = 0, $__t_i_i_i_i_i = 0, $arc = 0, $ref_tmp172 = 0, $clpr = 0, $r = 0, $outer = 0, $m_p = 0, $__begin__i_i_i = 0, $__end__i_i_i = 0, $normals = 0, $__begin__i_i_i393 = 0, $__end__i_i_i394 = 0, $7 = 0, $sub_ptr_div_i = 0, $botI_0 = 0, $cmp11 = 0, $10 = 0, $botPt_sroa_1_8__idx435 = 0, $botPt_sroa_0_0__idx429 = 0, $11 = 0, $12 = 0, $i_0544 = 0, $botI_1543 = 0, $botPt_sroa_0_0_copyload430447542$0 = 0, $botPt_sroa_0_0_copyload430447542$1 = 0, $botPt_sroa_1_8_copyload436452541$0 = 0, $botPt_sroa_1_8_copyload436452541$1 = 0, $13 = 0, $sub_ptr_rhs_cast_i475 = 0, $Y_i = 0, $14$0 = 0, $14$1 = 0, $botPt_sroa_0_0__idx426_phi_trans_insert = 0, $X_i = 0, $15$0 = 0, $15$1 = 0, $botPt_sroa_0_0_copyload427$0 = 0, $botPt_sroa_0_0_copyload427$1 = 0, $botPt_sroa_1_8_copyload436450$0 = 0, $botPt_sroa_1_8_copyload436450$1 = 0, $botPt_sroa_0_0_copyload430445$0 = 0, $botPt_sroa_0_0_copyload430445$1 = 0, $retval_0_i = 0, $add_ptr_i_i = 0, $16 = 0, $indvars_iv = 0, $botI_3_ph535 = 0, $it_sroa_0_0_ph534 = 0, $botPt_sroa_0_0_copyload430444_ph533$0 = 0, $botPt_sroa_0_0_copyload430444_ph533$1 = 0, $botPt_sroa_1_8_copyload436449_ph532$0 = 0, $botPt_sroa_1_8_copyload436449_ph532$1 = 0, $X_i95 = 0, $X1_i = 0, $Y_i97 = 0, $Y2_i98 = 0, $add_ptr_i746 = 0, $sub_ptr_rhs_cast_i_i_i = 0, $17 = 0, $18 = 0, $19 = 0, $21 = 0, $22$0 = 0, $22$1 = 0, $24$0 = 0, $24$1 = 0, $__end__i747 = 0, $sub_ptr_sub_i_i_i = 0, $sub_ptr_div_i_i_i = 0, $27 = 0, $botPt_sroa_1_8_copyload436448$0 = 0, $botPt_sroa_1_8_copyload436448$1 = 0, $botPt_sroa_0_0_copyload430443$0 = 0, $botPt_sroa_0_0_copyload430443$1 = 0, $retval_0_i109 = 0, $31 = 0, $botPt_sroa_1_8_copyload436451$0 = 0, $botPt_sroa_1_8_copyload436451$1 = 0, $botPt_sroa_0_0_copyload430446$0 = 0, $botPt_sroa_0_0_copyload430446$1 = 0, $botI_5 = 0, $inc70 = 0, $_lcssa539 = 0, $botI_1_lcssa = 0, $32 = 0, $33 = 0, $__t_i_i_i_i_0_cast4_i = 0, $35 = 0, $36 = 0, $i_010_i = 0, $37 = 0, $38 = 0, $incdec_ptr_i19_i_i12_i_i = 0, $incdec_ptr_i19_i_i15_i_i = 0, $agg_tmp3_i_sroa_0_014_i_i = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $inc_i = 0, $MiterLimit_addr_0 = 0.0, $m_RMin = 0, $mul85 = 0.0, $__begin__i_i802 = 0, $43 = 0, $__end__i_i_i_i807 = 0, $44 = 0, $45 = 0, $incdec_ptr_i_i_i_i815 = 0, $46 = 0, $47 = 0, $48 = 0, $__end__i_i_i_i_i_i121 = 0, $49 = 0, $54 = 0, $sub_ptr_div_i831 = 0, $sub_ptr_div_i_i135 = 0, $add_ptr_i = 0, $57 = 0, $incdec_ptr_i_i_i_i138 = 0, $58 = 0, $59 = 0, $60 = 0, $__end__i_i_i_i_i_i_i = 0, $61 = 0, $m_i = 0, $67 = 0, $m_curr_poly = 0, $cmp145 = 0, $mul149 = 0.0, $cmp165 = 0, $__begin__i_i_i1075 = 0, $__end__i_i_i1076 = 0, $__first__i_i_i_i_i_i1082 = 0, $__begin__i1048 = 0, $__end__i1049 = 0, $m_j = 0, $m_k = 0, $m_R = 0, $69 = 0, $70 = 0, $73 = 0, $sub_ptr_div_i857 = 0, $X = 0, $sub = 0, $X118 = 0, $Y = 0, $Y134 = 0, $len_0 = 0, $call144 = 0.0, $81 = 0, $82 = 0, $83 = 0, $arrayidx_i1028 = 0, $92 = 0, $94 = 0, $117 = 0, $118 = 0, $119 = 0, $scevgep554 = 0, $122 = 0, $sub_ptr_div_i_i200 = 0, $add_ptr_i206 = 0, $126 = 0, $sub200 = 0, $129 = 0, $X_i210 = 0, $130$0 = 0, $130$1 = 0, $X1_i211 = 0, $131$0 = 0, $131$1 = 0, $Y_i213 = 0, $132$0 = 0, $132$1 = 0, $Y2_i214 = 0, $133$0 = 0, $133$1 = 0, $sub_i217$0 = 0, $conv_i = 0.0, $sub8_i$0 = 0, $conv9_i = 0.0, $div_i = 0.0, $ref_tmp203_sroa_1_8_copyload442 = 0.0, $ref_tmp203_sroa_0_0_copyload441 = 0.0, $storemerge88477 = 0, $134 = 0, $137 = 0, $add = 0, $X_i218 = 0, $138$0 = 0, $138$1 = 0, $X1_i219 = 0, $139$0 = 0, $139$1 = 0, $Y_i221 = 0, $140$0 = 0, $140$1 = 0, $Y2_i222 = 0, $141$0 = 0, $141$1 = 0, $sub_i226$0 = 0, $conv_i227 = 0.0, $sub8_i228$0 = 0, $conv9_i229 = 0.0, $div_i234 = 0.0, $ref_tmp227_sroa_1_8_copyload440 = 0.0, $ref_tmp227_sroa_0_0_copyload439 = 0.0, $143 = 0, $storemerge89482_us = 0, $144 = 0, $add276_us = 0.0, $150 = 0, $inc293_us = 0, $151 = 0, $inc293_us492 = 0, $152 = 0, $inc293 = 0, $161 = 0, $162 = 0, $add_ptr = 0, $163 = 0, $164 = 0, $166 = 0, $i_011_i = 0, $inc_i245 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $m_ExecuteLocked_i = 0, $174 = 0, $incdec_ptr_i_i_i_i_i256 = 0, $175 = 0, $176 = 0, $177 = 0, $__end__i_i_i_i_i_i_i_i = 0, $178 = 0, $185 = 0, $186 = 0, $187 = 0, $incdec_ptr_i_i_i_i677 = 0, $188 = 0, $189 = 0, $190 = 0, $__end__i_i_i_i_i_i265 = 0, $191 = 0, $__begin__i_i_i276 = 0, $__end__i_i_i277 = 0, $__first__i_i_i_i_i_i278 = 0, $call_i_i_i6_i_i = 0, $200 = 0, $202 = 0, $incdec_ptr_i_i_i = 0, $m_ExecuteLocked_i296 = 0, $206 = 0, $207 = 0, $209 = 0, $incdec_ptr_i_i_i_i_i301 = 0, $210 = 0, $211 = 0, $212 = 0, $__end__i_i_i_i_i_i_i_i307 = 0, $213 = 0, $_ph = 0, $220 = 0, $221 = 0, $222 = 0, $__first_addr_i_i_i_0463 = 0, $223 = 0, $__result_addr_i_i_i_0_lcssa = 0, $__first_addr_i_i_i_0467 = 0, $__result_addr_i_i_i_0465 = 0, $226 = 0, $incdec_ptr_i_i_i_i521 = 0, $227 = 0, $228 = 0, $229 = 0, $__end__i_i_i_i_i_i333 = 0, $230 = 0, $_lcssa = 0, $235 = 0, $__t_i_i_i_i_0_cast4_i347 = 0, $237 = 0, $238 = 0, $i_010_i349 = 0, $239 = 0, $240 = 0, $incdec_ptr_i19_i_i12_i_i354 = 0, $incdec_ptr_i19_i_i15_i_i357 = 0, $agg_tmp3_i_sroa_0_014_i_i358 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $inc_i366 = 0, $254 = 0, $incdec_ptr_i_i_i_i = 0, $255 = 0, $256 = 0, $257 = 0, $__end__i_i_i_i_i_i389 = 0, $258 = 0, $263 = 0, $265 = 0, $300 = 0, $incdec_ptr_i_i_i_1 = 0, $302 = 0, $incdec_ptr_i_i_i_2 = 0, $304 = 0, $left = 0, $sub323$0 = 0, $sub323$1 = 0, $bottom = 0, $add324$0 = 0, $add324$1 = 0, $ref_tmp322_sroa_0_0__idx = 0, $307 = 0, $right = 0, $add329$0 = 0, $add329$1 = 0, $309 = 0, $310 = 0, $top = 0, $sub338$0 = 0, $sub338$1 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 216 | 0;
 $__t_i_i_i_i_i344 = __stackBase__ | 0;
 $__t_i_i_i_i_i = __stackBase__ + 16 | 0;
 $arc = __stackBase__ + 32 | 0;
 $ref_tmp172 = __stackBase__ + 48 | 0;
 $clpr = __stackBase__ + 64 | 0;
 $r = __stackBase__ + 168 | 0;
 $outer = __stackBase__ + 200 | 0;
 $m_p = $this | 0;
 $__begin__i_i_i = $this | 0;
 HEAP32[$__begin__i_i_i >> 2] = 0;
 $__end__i_i_i = $this + 4 | 0;
 HEAP32[$__end__i_i_i >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 $normals = $this + 16 | 0;
 $__begin__i_i_i393 = $normals | 0;
 HEAP32[$__begin__i_i_i393 >> 2] = 0;
 $__end__i_i_i394 = $this + 20 | 0;
 HEAP32[$__end__i_i_i394 >> 2] = 0;
 HEAP32[$this + 24 >> 2] = 0;
 if ($delta > -1.0e-20 & $delta < 1.0e-20) {
  if (($out_polys | 0) == ($in_polys | 0)) {
   STACKTOP = __stackBase__;
   return;
  }
  __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE6assignIPS5_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_($out_polys, HEAP32[$in_polys >> 2] | 0, HEAP32[$in_polys + 4 >> 2] | 0);
  STACKTOP = __stackBase__;
  return;
 }
 if (($m_p | 0) != ($in_polys | 0)) {
  __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE6assignIPS5_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_($m_p, HEAP32[$in_polys >> 2] | 0, HEAP32[$in_polys + 4 >> 2] | 0);
 }
 HEAPF64[$this + 32 >> 3] = $delta;
 HEAP32[$this + 68 >> 2] = $jointype;
 do {
  if ($CheckInputs) {
   $7 = HEAP32[$__begin__i_i_i >> 2] | 0;
   $sub_ptr_div_i = ((HEAP32[$__end__i_i_i >> 2] | 0) - $7 | 0) / 12 & -1;
   $botI_0 = 0;
   while (1) {
    $cmp11 = $botI_0 >>> 0 < $sub_ptr_div_i >>> 0;
    if (!$cmp11) {
     break;
    }
    if ((HEAP32[$7 + ($botI_0 * 12 & -1) + 4 >> 2] | 0) == (HEAP32[$7 + ($botI_0 * 12 & -1) >> 2] | 0)) {
     $botI_0 = $botI_0 + 1 | 0;
    } else {
     break;
    }
   }
   if (($botI_0 | 0) == ($sub_ptr_div_i | 0)) {
    STACKTOP = __stackBase__;
    return;
   }
   $10 = HEAP32[$7 + ($botI_0 * 12 & -1) >> 2] | 0;
   L8342 : do {
    if ($cmp11) {
     $botPt_sroa_1_8__idx435 = $10 + 8 | 0;
     $botPt_sroa_0_0__idx429 = $10 | 0;
     $botPt_sroa_1_8_copyload436452541$1 = HEAP32[$botPt_sroa_1_8__idx435 + 4 >> 2] | 0;
     $botPt_sroa_1_8_copyload436452541$0 = HEAP32[$botPt_sroa_1_8__idx435 >> 2] | 0;
     $botPt_sroa_0_0_copyload430447542$1 = HEAP32[$botPt_sroa_0_0__idx429 + 4 >> 2] | 0;
     $botPt_sroa_0_0_copyload430447542$0 = HEAP32[$botPt_sroa_0_0__idx429 >> 2] | 0;
     $botI_1543 = $botI_0;
     $i_0544 = $botI_0;
     $12 = $7;
     $11 = $10;
     while (1) {
      $13 = HEAP32[$12 + ($i_0544 * 12 & -1) + 4 >> 2] | 0;
      $sub_ptr_rhs_cast_i475 = $11;
      L8346 : do {
       if ($13 - $sub_ptr_rhs_cast_i475 >> 4 >>> 0 < 3) {
        $botI_5 = $botI_1543;
        $botPt_sroa_0_0_copyload430446$1 = $botPt_sroa_0_0_copyload430447542$1;
        $botPt_sroa_0_0_copyload430446$0 = $botPt_sroa_0_0_copyload430447542$0;
        $botPt_sroa_1_8_copyload436451$1 = $botPt_sroa_1_8_copyload436452541$1;
        $botPt_sroa_1_8_copyload436451$0 = $botPt_sroa_1_8_copyload436452541$0;
        $31 = $12;
       } else {
        $Y_i = $11 + 8 | 0;
        $14$0 = HEAP32[$Y_i >> 2] | 0;
        $14$1 = HEAP32[$Y_i + 4 >> 2] | 0;
        do {
         if (($14$1 | 0) > ($botPt_sroa_1_8_copyload436452541$1 | 0) | ($14$1 | 0) == ($botPt_sroa_1_8_copyload436452541$1 | 0) & $14$0 >>> 0 > $botPt_sroa_1_8_copyload436452541$0 >>> 0) {
          $botPt_sroa_0_0__idx426_phi_trans_insert = $11 | 0;
          $botPt_sroa_0_0_copyload427$1 = HEAP32[$botPt_sroa_0_0__idx426_phi_trans_insert + 4 >> 2] | 0;
          $botPt_sroa_0_0_copyload427$0 = HEAP32[$botPt_sroa_0_0__idx426_phi_trans_insert >> 2] | 0;
          label = 7151;
         } else {
          if (!(($14$0 | 0) == ($botPt_sroa_1_8_copyload436452541$0 | 0) & ($14$1 | 0) == ($botPt_sroa_1_8_copyload436452541$1 | 0))) {
           $retval_0_i = $botI_1543;
           $botPt_sroa_0_0_copyload430445$1 = $botPt_sroa_0_0_copyload430447542$1;
           $botPt_sroa_0_0_copyload430445$0 = $botPt_sroa_0_0_copyload430447542$0;
           $botPt_sroa_1_8_copyload436450$1 = $botPt_sroa_1_8_copyload436452541$1;
           $botPt_sroa_1_8_copyload436450$0 = $botPt_sroa_1_8_copyload436452541$0;
           break;
          }
          $X_i = $11 | 0;
          $15$0 = HEAP32[$X_i >> 2] | 0;
          $15$1 = HEAP32[$X_i + 4 >> 2] | 0;
          if (($15$1 | 0) < ($botPt_sroa_0_0_copyload430447542$1 | 0) | ($15$1 | 0) == ($botPt_sroa_0_0_copyload430447542$1 | 0) & $15$0 >>> 0 < $botPt_sroa_0_0_copyload430447542$0 >>> 0) {
           $botPt_sroa_0_0_copyload427$1 = $15$1;
           $botPt_sroa_0_0_copyload427$0 = $15$0;
           label = 7151;
          } else {
           $retval_0_i = $botI_1543;
           $botPt_sroa_0_0_copyload430445$1 = $botPt_sroa_0_0_copyload430447542$1;
           $botPt_sroa_0_0_copyload430445$0 = $botPt_sroa_0_0_copyload430447542$0;
           $botPt_sroa_1_8_copyload436450$1 = $botPt_sroa_1_8_copyload436452541$1;
           $botPt_sroa_1_8_copyload436450$0 = $botPt_sroa_1_8_copyload436452541$0;
          }
         }
        } while (0);
        if ((label | 0) == 7151) {
         label = 0;
         $retval_0_i = $i_0544;
         $botPt_sroa_0_0_copyload430445$1 = $botPt_sroa_0_0_copyload427$1;
         $botPt_sroa_0_0_copyload430445$0 = $botPt_sroa_0_0_copyload427$0;
         $botPt_sroa_1_8_copyload436450$1 = $14$1;
         $botPt_sroa_1_8_copyload436450$0 = $14$0;
        }
        $add_ptr_i_i = $11 + 16 | 0;
        if (($add_ptr_i_i | 0) == ($13 | 0)) {
         $botI_5 = $retval_0_i;
         $botPt_sroa_0_0_copyload430446$1 = $botPt_sroa_0_0_copyload430445$1;
         $botPt_sroa_0_0_copyload430446$0 = $botPt_sroa_0_0_copyload430445$0;
         $botPt_sroa_1_8_copyload436451$1 = $botPt_sroa_1_8_copyload436450$1;
         $botPt_sroa_1_8_copyload436451$0 = $botPt_sroa_1_8_copyload436450$0;
         $31 = $12;
         break;
        } else {
         $botPt_sroa_1_8_copyload436449_ph532$1 = $botPt_sroa_1_8_copyload436450$1;
         $botPt_sroa_1_8_copyload436449_ph532$0 = $botPt_sroa_1_8_copyload436450$0;
         $botPt_sroa_0_0_copyload430444_ph533$1 = $botPt_sroa_0_0_copyload430445$1;
         $botPt_sroa_0_0_copyload430444_ph533$0 = $botPt_sroa_0_0_copyload430445$0;
         $it_sroa_0_0_ph534 = $add_ptr_i_i;
         $botI_3_ph535 = $retval_0_i;
         $indvars_iv = -2;
         $16 = $12;
        }
        while (1) {
         $X_i95 = $it_sroa_0_0_ph534 | 0;
         $X1_i = $it_sroa_0_0_ph534 - 16 | 0;
         $Y_i97 = $it_sroa_0_0_ph534 + 8 | 0;
         $Y2_i98 = $it_sroa_0_0_ph534 - 16 + 8 | 0;
         $add_ptr_i746 = $it_sroa_0_0_ph534 + 16 | 0;
         $sub_ptr_rhs_cast_i_i_i = $add_ptr_i746;
         $17 = $it_sroa_0_0_ph534;
         $18 = $add_ptr_i746;
         $21 = $16;
         while (1) {
          $22$0 = HEAP32[$X_i95 >> 2] | 0;
          $22$1 = HEAP32[$X_i95 + 4 >> 2] | 0;
          $24$0 = HEAP32[$Y_i97 >> 2] | 0;
          $24$1 = HEAP32[$Y_i97 + 4 >> 2] | 0;
          if (!(($22$0 | 0) == (HEAP32[$X1_i >> 2] | 0) & ($22$1 | 0) == (HEAP32[$X1_i + 4 >> 2] | 0))) {
           break;
          }
          if (!(($24$0 | 0) == (HEAP32[$Y2_i98 >> 2] | 0) & ($24$1 | 0) == (HEAP32[$Y2_i98 + 4 >> 2] | 0))) {
           break;
          }
          $__end__i747 = $21 + ($i_0544 * 12 & -1) + 4 | 0;
          $sub_ptr_sub_i_i_i = (HEAP32[$__end__i747 >> 2] | 0) - $sub_ptr_rhs_cast_i_i_i | 0;
          $sub_ptr_div_i_i_i = $sub_ptr_sub_i_i_i >> 4;
          _memmove($17 | 0, $18 | 0, $sub_ptr_sub_i_i_i | 0);
          $27 = HEAP32[$__end__i747 >> 2] | 0;
          if (($it_sroa_0_0_ph534 + ($sub_ptr_div_i_i_i << 4) | 0) != ($27 | 0)) {
           HEAP32[$__end__i747 >> 2] = $27 + ((($27 + ($indvars_iv << 4) + (($sub_ptr_div_i_i_i * -16 & -1) - $sub_ptr_rhs_cast_i475) | 0) >>> 4 ^ -1) << 4);
          }
          $19 = HEAP32[$__begin__i_i_i >> 2] | 0;
          if (($it_sroa_0_0_ph534 | 0) == (HEAP32[$19 + ($i_0544 * 12 & -1) + 4 >> 2] | 0)) {
           $botI_5 = $botI_3_ph535;
           $botPt_sroa_0_0_copyload430446$1 = $botPt_sroa_0_0_copyload430444_ph533$1;
           $botPt_sroa_0_0_copyload430446$0 = $botPt_sroa_0_0_copyload430444_ph533$0;
           $botPt_sroa_1_8_copyload436451$1 = $botPt_sroa_1_8_copyload436449_ph532$1;
           $botPt_sroa_1_8_copyload436451$0 = $botPt_sroa_1_8_copyload436449_ph532$0;
           $31 = $19;
           break L8346;
          } else {
           $21 = $19;
          }
         }
         if (($24$1 | 0) > ($botPt_sroa_1_8_copyload436449_ph532$1 | 0) | ($24$1 | 0) == ($botPt_sroa_1_8_copyload436449_ph532$1 | 0) & $24$0 >>> 0 > $botPt_sroa_1_8_copyload436449_ph532$0 >>> 0) {
          label = 7161;
         } else {
          if (($24$0 | 0) == ($botPt_sroa_1_8_copyload436449_ph532$0 | 0) & ($24$1 | 0) == ($botPt_sroa_1_8_copyload436449_ph532$1 | 0) & (($22$1 | 0) < ($botPt_sroa_0_0_copyload430444_ph533$1 | 0) | ($22$1 | 0) == ($botPt_sroa_0_0_copyload430444_ph533$1 | 0) & $22$0 >>> 0 < $botPt_sroa_0_0_copyload430444_ph533$0 >>> 0)) {
           label = 7161;
          } else {
           $retval_0_i109 = $botI_3_ph535;
           $botPt_sroa_0_0_copyload430443$1 = $botPt_sroa_0_0_copyload430444_ph533$1;
           $botPt_sroa_0_0_copyload430443$0 = $botPt_sroa_0_0_copyload430444_ph533$0;
           $botPt_sroa_1_8_copyload436448$1 = $botPt_sroa_1_8_copyload436449_ph532$1;
           $botPt_sroa_1_8_copyload436448$0 = $botPt_sroa_1_8_copyload436449_ph532$0;
          }
         }
         if ((label | 0) == 7161) {
          label = 0;
          $retval_0_i109 = $i_0544;
          $botPt_sroa_0_0_copyload430443$1 = $22$1;
          $botPt_sroa_0_0_copyload430443$0 = $22$0;
          $botPt_sroa_1_8_copyload436448$1 = $24$1;
          $botPt_sroa_1_8_copyload436448$0 = $24$0;
         }
         if (($add_ptr_i746 | 0) == (HEAP32[$21 + ($i_0544 * 12 & -1) + 4 >> 2] | 0)) {
          $botI_5 = $retval_0_i109;
          $botPt_sroa_0_0_copyload430446$1 = $botPt_sroa_0_0_copyload430443$1;
          $botPt_sroa_0_0_copyload430446$0 = $botPt_sroa_0_0_copyload430443$0;
          $botPt_sroa_1_8_copyload436451$1 = $botPt_sroa_1_8_copyload436448$1;
          $botPt_sroa_1_8_copyload436451$0 = $botPt_sroa_1_8_copyload436448$0;
          $31 = $21;
          break;
         } else {
          $botPt_sroa_1_8_copyload436449_ph532$1 = $botPt_sroa_1_8_copyload436448$1;
          $botPt_sroa_1_8_copyload436449_ph532$0 = $botPt_sroa_1_8_copyload436448$0;
          $botPt_sroa_0_0_copyload430444_ph533$1 = $botPt_sroa_0_0_copyload430443$1;
          $botPt_sroa_0_0_copyload430444_ph533$0 = $botPt_sroa_0_0_copyload430443$0;
          $it_sroa_0_0_ph534 = $add_ptr_i746;
          $botI_3_ph535 = $retval_0_i109;
          $indvars_iv = $indvars_iv - 1 | 0;
          $16 = $21;
         }
        }
       }
      } while (0);
      $inc70 = $i_0544 + 1 | 0;
      if ($inc70 >>> 0 >= $sub_ptr_div_i >>> 0) {
       $botI_1_lcssa = $botI_5;
       $_lcssa539 = $31;
       break L8342;
      }
      $botPt_sroa_1_8_copyload436452541$1 = $botPt_sroa_1_8_copyload436451$1;
      $botPt_sroa_1_8_copyload436452541$0 = $botPt_sroa_1_8_copyload436451$0;
      $botPt_sroa_0_0_copyload430447542$1 = $botPt_sroa_0_0_copyload430446$1;
      $botPt_sroa_0_0_copyload430447542$0 = $botPt_sroa_0_0_copyload430446$0;
      $botI_1543 = $botI_5;
      $i_0544 = $inc70;
      $12 = $31;
      $11 = HEAP32[$31 + ($inc70 * 12 & -1) >> 2] | 0;
     }
    } else {
     $botI_1_lcssa = $botI_0;
     $_lcssa539 = $7;
    }
   } while (0);
   if (__ZN10ClipperLib11OrientationERKNSt3__16vectorINS_8IntPointENS0_9allocatorIS2_EEEE($_lcssa539 + ($botI_1_lcssa * 12 & -1) | 0) | 0) {
    break;
   }
   $32 = HEAP32[$__end__i_i_i >> 2] | 0;
   $33 = HEAP32[$__begin__i_i_i >> 2] | 0;
   if (($32 | 0) == ($33 | 0)) {
    break;
   }
   $__t_i_i_i_i_0_cast4_i = $__t_i_i_i_i_i;
   $i_010_i = 0;
   $36 = $33;
   $35 = $32;
   while (1) {
    $37 = HEAP32[$36 + ($i_010_i * 12 & -1) >> 2] | 0;
    $38 = HEAP32[$36 + ($i_010_i * 12 & -1) + 4 >> 2] | 0;
    do {
     if (($37 | 0) == ($38 | 0)) {
      $42 = $35;
      $41 = $36;
     } else {
      $incdec_ptr_i19_i_i12_i_i = $38 - 16 | 0;
      if ($37 >>> 0 < $incdec_ptr_i19_i_i12_i_i >>> 0) {
       $agg_tmp3_i_sroa_0_014_i_i = $37;
       $incdec_ptr_i19_i_i15_i_i = $incdec_ptr_i19_i_i12_i_i;
      } else {
       $42 = $35;
       $41 = $36;
       break;
      }
      do {
       $39 = $agg_tmp3_i_sroa_0_014_i_i;
       HEAP32[$__t_i_i_i_i_0_cast4_i >> 2] = HEAP32[$39 >> 2];
       HEAP32[$__t_i_i_i_i_0_cast4_i + 4 >> 2] = HEAP32[$39 + 4 >> 2];
       HEAP32[$__t_i_i_i_i_0_cast4_i + 8 >> 2] = HEAP32[$39 + 8 >> 2];
       HEAP32[$__t_i_i_i_i_0_cast4_i + 12 >> 2] = HEAP32[$39 + 12 >> 2];
       $40 = $incdec_ptr_i19_i_i15_i_i;
       HEAP32[$39 >> 2] = HEAP32[$40 >> 2];
       HEAP32[$39 + 4 >> 2] = HEAP32[$40 + 4 >> 2];
       HEAP32[$39 + 8 >> 2] = HEAP32[$40 + 8 >> 2];
       HEAP32[$39 + 12 >> 2] = HEAP32[$40 + 12 >> 2];
       HEAP32[$40 >> 2] = HEAP32[$__t_i_i_i_i_0_cast4_i >> 2];
       HEAP32[$40 + 4 >> 2] = HEAP32[$__t_i_i_i_i_0_cast4_i + 4 >> 2];
       HEAP32[$40 + 8 >> 2] = HEAP32[$__t_i_i_i_i_0_cast4_i + 8 >> 2];
       HEAP32[$40 + 12 >> 2] = HEAP32[$__t_i_i_i_i_0_cast4_i + 12 >> 2];
       $agg_tmp3_i_sroa_0_014_i_i = $agg_tmp3_i_sroa_0_014_i_i + 16 | 0;
       $incdec_ptr_i19_i_i15_i_i = $incdec_ptr_i19_i_i15_i_i - 16 | 0;
      } while ($agg_tmp3_i_sroa_0_014_i_i >>> 0 < $incdec_ptr_i19_i_i15_i_i >>> 0);
      $42 = HEAP32[$__end__i_i_i >> 2] | 0;
      $41 = HEAP32[$__begin__i_i_i >> 2] | 0;
     }
    } while (0);
    $inc_i = $i_010_i + 1 | 0;
    if ($inc_i >>> 0 < (($42 - $41 | 0) / 12 & -1) >>> 0) {
     $i_010_i = $inc_i;
     $36 = $41;
     $35 = $42;
    } else {
     break;
    }
   }
  }
 } while (0);
 $MiterLimit_addr_0 = $MiterLimit > 1.0 ? $MiterLimit : 1.0;
 $m_RMin = $this + 40 | 0;
 HEAPF64[$m_RMin >> 3] = 2.0 / ($MiterLimit_addr_0 * $MiterLimit_addr_0);
 $mul85 = $delta * $delta;
 $__begin__i_i802 = $out_polys | 0;
 $43 = HEAP32[$__begin__i_i802 >> 2] | 0;
 $__end__i_i_i_i807 = $out_polys + 4 | 0;
 $44 = HEAP32[$__end__i_i_i_i807 >> 2] | 0;
 if (($43 | 0) == ($44 | 0)) {
  $54 = $43;
 } else {
  $45 = $44;
  while (1) {
   $incdec_ptr_i_i_i_i815 = $45 - 12 | 0;
   HEAP32[$__end__i_i_i_i807 >> 2] = $incdec_ptr_i_i_i_i815;
   $46 = HEAP32[$incdec_ptr_i_i_i_i815 >> 2] | 0;
   $47 = $46;
   if (($46 | 0) == 0) {
    $48 = $incdec_ptr_i_i_i_i815;
   } else {
    $__end__i_i_i_i_i_i121 = $45 - 12 + 4 | 0;
    $49 = HEAP32[$__end__i_i_i_i_i_i121 >> 2] | 0;
    if (($46 | 0) != ($49 | 0)) {
     HEAP32[$__end__i_i_i_i_i_i121 >> 2] = $49 + ((($49 - 16 + (-$47 | 0) | 0) >>> 4 ^ -1) << 4);
    }
    __ZdlPv($46);
    $48 = HEAP32[$__end__i_i_i_i807 >> 2] | 0;
   }
   if (($43 | 0) == ($48 | 0)) {
    break;
   } else {
    $45 = $48;
   }
  }
  $54 = HEAP32[$__begin__i_i802 >> 2] | 0;
 }
 $sub_ptr_div_i831 = ((HEAP32[$__end__i_i_i >> 2] | 0) - (HEAP32[$__begin__i_i_i >> 2] | 0) | 0) / 12 & -1;
 $sub_ptr_div_i_i135 = ($43 - $54 | 0) / 12 & -1;
 do {
  if ($sub_ptr_div_i_i135 >>> 0 < $sub_ptr_div_i831 >>> 0) {
   __ZNSt3__16vectorINS0_IN10ClipperLib8IntPointENS_9allocatorIS2_EEEENS3_IS5_EEE8__appendEj($out_polys, $sub_ptr_div_i831 - $sub_ptr_div_i_i135 | 0);
  } else {
   if ($sub_ptr_div_i_i135 >>> 0 <= $sub_ptr_div_i831 >>> 0) {
    break;
   }
   $add_ptr_i = $54 + ($sub_ptr_div_i831 * 12 & -1) | 0;
   if (($add_ptr_i | 0) == ($43 | 0)) {
    break;
   } else {
    $57 = $43;
   }
   while (1) {
    $incdec_ptr_i_i_i_i138 = $57 - 12 | 0;
    HEAP32[$__end__i_i_i_i807 >> 2] = $incdec_ptr_i_i_i_i138;
    $58 = HEAP32[$incdec_ptr_i_i_i_i138 >> 2] | 0;
    $59 = $58;
    if (($58 | 0) == 0) {
     $60 = $incdec_ptr_i_i_i_i138;
    } else {
     $__end__i_i_i_i_i_i_i = $57 - 12 + 4 | 0;
     $61 = HEAP32[$__end__i_i_i_i_i_i_i >> 2] | 0;
     if (($58 | 0) != ($61 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i_i >> 2] = $61 + ((($61 - 16 + (-$59 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($58);
     $60 = HEAP32[$__end__i_i_i_i807 >> 2] | 0;
    }
    if (($add_ptr_i | 0) == ($60 | 0)) {
     break;
    } else {
     $57 = $60;
    }
   }
  }
 } while (0);
 $m_i = $this + 56 | 0;
 HEAP32[$m_i >> 2] = 0;
 $67 = HEAP32[$__begin__i_i_i >> 2] | 0;
 if ((HEAP32[$__end__i_i_i >> 2] | 0) != ($67 | 0)) {
  $m_curr_poly = $this + 12 | 0;
  $cmp145 = $delta < 0.0;
  $mul149 = $mul85 * 3.141592653589793;
  $cmp165 = $delta > 0.0;
  $__begin__i_i_i1075 = $arc | 0;
  $__end__i_i_i1076 = $arc + 4 | 0;
  $__first__i_i_i_i_i_i1082 = $arc + 8 | 0;
  $__begin__i1048 = $ref_tmp172 | 0;
  $__end__i1049 = $ref_tmp172 + 4 | 0;
  $m_j = $this + 60 | 0;
  $m_k = $this + 64 | 0;
  $m_R = $this + 48 | 0;
  $70 = 0;
  $69 = $67;
  do {
   HEAP32[$m_curr_poly >> 2] = (HEAP32[$__begin__i_i802 >> 2] | 0) + ($70 * 12 & -1);
   $73 = HEAP32[$69 + ($70 * 12 & -1) >> 2] | 0;
   $sub_ptr_div_i857 = (HEAP32[$69 + ($70 * 12 & -1) + 4 >> 2] | 0) - $73 >> 4;
   do {
    if ($sub_ptr_div_i857 >>> 0 > 1) {
     $X = $73 | 0;
     $sub = $sub_ptr_div_i857 - 1 | 0;
     $X118 = $73 + ($sub << 4) | 0;
     if (!((HEAP32[$X >> 2] | 0) == (HEAP32[$X118 >> 2] | 0) & (HEAP32[$X + 4 >> 2] | 0) == (HEAP32[$X118 + 4 >> 2] | 0))) {
      $len_0 = $sub_ptr_div_i857;
      break;
     }
     $Y = $73 + 8 | 0;
     $Y134 = $73 + ($sub << 4) + 8 | 0;
     $len_0 = (HEAP32[$Y >> 2] | 0) == (HEAP32[$Y134 >> 2] | 0) & (HEAP32[$Y + 4 >> 2] | 0) == (HEAP32[$Y134 + 4 >> 2] | 0) ? $sub : $sub_ptr_div_i857;
    } else {
     $len_0 = $sub_ptr_div_i857;
    }
   } while (0);
   $call144 = +__ZN10ClipperLib4AreaERKNSt3__16vectorINS_8IntPointENS0_9allocatorIS2_EEEE($69 + ($70 * 12 & -1) | 0);
   do {
    if ($cmp145) {
     if ($call144 <= 0.0) {
      label = 7201;
      break;
     }
     if (($len_0 | 0) != 0 & $call144 >= $mul149 & ($len_0 >>> 0 > 2 | $cmp165)) {
      label = 7202;
     }
    } else {
     if ($call144 >= 0.0) {
      label = 7201;
      break;
     }
     if (($len_0 | 0) != 0 & $mul149 <= -0.0 - $call144 & ($len_0 >>> 0 > 2 | $cmp165)) {
      label = 7202;
     }
    }
   } while (0);
   if ((label | 0) == 7201) {
    label = 0;
    if (($len_0 | 0) != 0 & ($len_0 >>> 0 > 2 | $cmp165)) {
     label = 7202;
    }
   }
   L8425 : do {
    if ((label | 0) == 7202) {
     label = 0;
     if (($len_0 | 0) == 1) {
      HEAP32[$__begin__i_i_i1075 >> 2] = 0;
      HEAP32[$__end__i_i_i1076 >> 2] = 0;
      HEAP32[$__first__i_i_i_i_i_i1082 >> 2] = 0;
      __ZN10ClipperLib8BuildArcERKNS_8IntPointEddd($ref_tmp172, HEAP32[(HEAP32[$__begin__i_i_i >> 2] | 0) + ((HEAP32[$m_i >> 2] | 0) * 12 & -1) >> 2] | 0, 0.0, 6.283185307179586, $delta);
      $81 = HEAP32[$__begin__i1048 >> 2] | 0;
      $82 = HEAP32[$__end__i1049 >> 2] | 0;
      __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($arc, $81, $82);
      $83 = $81;
      if (($81 | 0) != 0) {
       if (($81 | 0) != ($82 | 0)) {
        HEAP32[$__end__i1049 >> 2] = $82 + ((($82 - 16 + (-$83 | 0) | 0) >>> 4 ^ -1) << 4);
       }
       __ZdlPv($81);
      }
      $arrayidx_i1028 = (HEAP32[$__begin__i_i802 >> 2] | 0) + ((HEAP32[$m_i >> 2] | 0) * 12 & -1) | 0;
      if (($arrayidx_i1028 | 0) != ($arc | 0)) {
       __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($arrayidx_i1028, HEAP32[$__begin__i_i_i1075 >> 2] | 0, HEAP32[$__end__i_i_i1076 >> 2] | 0);
      }
      $92 = HEAP32[$__begin__i_i_i1075 >> 2] | 0;
      if (($92 | 0) == 0) {
       break;
      }
      $94 = HEAP32[$__end__i_i_i1076 >> 2] | 0;
      if (($92 | 0) != ($94 | 0)) {
       HEAP32[$__end__i_i_i1076 >> 2] = $94 + ((($94 - 16 + (-$92 | 0) | 0) >>> 4 ^ -1) << 4);
      }
      __ZdlPv($92);
      break;
     }
     $117 = HEAP32[$__begin__i_i_i393 >> 2] | 0;
     $118 = $117;
     $119 = HEAP32[$__end__i_i_i394 >> 2] | 0;
     if (($117 | 0) == ($119 | 0)) {
      $122 = $117;
     } else {
      $scevgep554 = $119 + ((($119 - 16 + (-$118 | 0) | 0) >>> 4 ^ -1) << 4) | 0;
      HEAP32[$__end__i_i_i394 >> 2] = $scevgep554;
      $122 = $scevgep554;
     }
     $sub_ptr_div_i_i200 = $122 - $118 >> 4;
     do {
      if ($sub_ptr_div_i_i200 >>> 0 < $len_0 >>> 0) {
       __ZNSt3__16vectorIN10ClipperLib11DoublePointENS_9allocatorIS2_EEE8__appendEj($normals, $len_0 - $sub_ptr_div_i_i200 | 0);
       $126 = HEAP32[$__begin__i_i_i393 >> 2] | 0;
      } else {
       if ($sub_ptr_div_i_i200 >>> 0 <= $len_0 >>> 0) {
        $126 = $117;
        break;
       }
       $add_ptr_i206 = $117 + ($len_0 << 4) | 0;
       if (($add_ptr_i206 | 0) == ($122 | 0)) {
        $126 = $117;
        break;
       }
       HEAP32[$__end__i_i_i394 >> 2] = $122 + ((($122 - 16 + (-$add_ptr_i206 | 0) | 0) >>> 4 ^ -1) << 4);
       $126 = $117;
      }
     } while (0);
     $sub200 = $len_0 - 1 | 0;
     $129 = HEAP32[(HEAP32[$__begin__i_i_i >> 2] | 0) + ((HEAP32[$m_i >> 2] | 0) * 12 & -1) >> 2] | 0;
     $X_i210 = $129 | 0;
     $130$0 = HEAP32[$X_i210 >> 2] | 0;
     $130$1 = HEAP32[$X_i210 + 4 >> 2] | 0;
     $X1_i211 = $129 + ($sub200 << 4) | 0;
     $131$0 = HEAP32[$X1_i211 >> 2] | 0;
     $131$1 = HEAP32[$X1_i211 + 4 >> 2] | 0;
     $Y_i213 = $129 + 8 | 0;
     $132$0 = HEAP32[$Y_i213 >> 2] | 0;
     $132$1 = HEAP32[$Y_i213 + 4 >> 2] | 0;
     $Y2_i214 = $129 + ($sub200 << 4) + 8 | 0;
     $133$0 = HEAP32[$Y2_i214 >> 2] | 0;
     $133$1 = HEAP32[$Y2_i214 + 4 >> 2] | 0;
     if (($130$0 | 0) == ($131$0 | 0) & ($130$1 | 0) == ($131$1 | 0) & (($132$0 | 0) == ($133$0 | 0) & ($132$1 | 0) == ($133$1 | 0))) {
      $ref_tmp203_sroa_0_0_copyload441 = 0.0;
      $ref_tmp203_sroa_1_8_copyload442 = 0.0;
     } else {
      $sub_i217$0 = _i64Subtract($130$0, $130$1, $131$0, $131$1) | 0;
      $conv_i = +($sub_i217$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
      $sub8_i$0 = _i64Subtract($132$0, $132$1, $133$0, $133$1) | 0;
      $conv9_i = +($sub8_i$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
      $div_i = 1.0 / +Math_sqrt(+($conv_i * $conv_i + $conv9_i * $conv9_i));
      $ref_tmp203_sroa_0_0_copyload441 = $conv9_i * $div_i;
      $ref_tmp203_sroa_1_8_copyload442 = -0.0 - $conv_i * $div_i;
     }
     HEAPF64[$126 + ($sub200 << 4) >> 3] = $ref_tmp203_sroa_0_0_copyload441;
     HEAPF64[$126 + ($sub200 << 4) + 8 >> 3] = $ref_tmp203_sroa_1_8_copyload442;
     HEAP32[$m_j >> 2] = 0;
     if (($sub200 | 0) != 0) {
      $storemerge88477 = 0;
      do {
       $134 = HEAP32[$__begin__i_i_i393 >> 2] | 0;
       $137 = HEAP32[(HEAP32[$__begin__i_i_i >> 2] | 0) + ((HEAP32[$m_i >> 2] | 0) * 12 & -1) >> 2] | 0;
       $add = $storemerge88477 + 1 | 0;
       $X_i218 = $137 + ($add << 4) | 0;
       $138$0 = HEAP32[$X_i218 >> 2] | 0;
       $138$1 = HEAP32[$X_i218 + 4 >> 2] | 0;
       $X1_i219 = $137 + ($storemerge88477 << 4) | 0;
       $139$0 = HEAP32[$X1_i219 >> 2] | 0;
       $139$1 = HEAP32[$X1_i219 + 4 >> 2] | 0;
       $Y_i221 = $137 + ($add << 4) + 8 | 0;
       $140$0 = HEAP32[$Y_i221 >> 2] | 0;
       $140$1 = HEAP32[$Y_i221 + 4 >> 2] | 0;
       $Y2_i222 = $137 + ($storemerge88477 << 4) + 8 | 0;
       $141$0 = HEAP32[$Y2_i222 >> 2] | 0;
       $141$1 = HEAP32[$Y2_i222 + 4 >> 2] | 0;
       if (($138$0 | 0) == ($139$0 | 0) & ($138$1 | 0) == ($139$1 | 0) & (($140$0 | 0) == ($141$0 | 0) & ($140$1 | 0) == ($141$1 | 0))) {
        $ref_tmp227_sroa_0_0_copyload439 = 0.0;
        $ref_tmp227_sroa_1_8_copyload440 = 0.0;
       } else {
        $sub_i226$0 = _i64Subtract($138$0, $138$1, $139$0, $139$1) | 0;
        $conv_i227 = +($sub_i226$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
        $sub8_i228$0 = _i64Subtract($140$0, $140$1, $141$0, $141$1) | 0;
        $conv9_i229 = +($sub8_i228$0 >>> 0) + +(tempRet0 | 0) * 4294967296.0;
        $div_i234 = 1.0 / +Math_sqrt(+($conv_i227 * $conv_i227 + $conv9_i229 * $conv9_i229));
        $ref_tmp227_sroa_0_0_copyload439 = $conv9_i229 * $div_i234;
        $ref_tmp227_sroa_1_8_copyload440 = -0.0 - $conv_i227 * $div_i234;
       }
       HEAPF64[$134 + ($storemerge88477 << 4) >> 3] = $ref_tmp227_sroa_0_0_copyload439;
       HEAPF64[$134 + ($storemerge88477 << 4) + 8 >> 3] = $ref_tmp227_sroa_1_8_copyload440;
       $storemerge88477 = (HEAP32[$m_j >> 2] | 0) + 1 | 0;
       HEAP32[$m_j >> 2] = $storemerge88477;
      } while ($storemerge88477 >>> 0 < $sub200 >>> 0);
     }
     HEAP32[$m_k >> 2] = $sub200;
     HEAP32[$m_j >> 2] = 0;
     if (($len_0 | 0) == 0) {
      break;
     }
     if (($jointype | 0) == 0) {
      while (1) {
       __ZN10ClipperLib17PolyOffsetBuilder8DoSquareEd($this, 1.0);
       $151 = HEAP32[$m_j >> 2] | 0;
       HEAP32[$m_k >> 2] = $151;
       $inc293_us492 = $151 + 1 | 0;
       HEAP32[$m_j >> 2] = $inc293_us492;
       if ($inc293_us492 >>> 0 >= $len_0 >>> 0) {
        break L8425;
       }
      }
     } else if (($jointype | 0) == 2) {
      $storemerge89482_us = 0;
      $143 = $sub200;
      label = 7240;
     } else if (($jointype | 0) == 1) {
      label = 7249;
     }
     if ((label | 0) == 7240) {
      while (1) {
       label = 0;
       $144 = HEAP32[$__begin__i_i_i393 >> 2] | 0;
       $add276_us = +HEAPF64[$144 + ($storemerge89482_us << 4) >> 3] * +HEAPF64[$144 + ($143 << 4) >> 3] + +HEAPF64[$144 + ($storemerge89482_us << 4) + 8 >> 3] * +HEAPF64[$144 + ($143 << 4) + 8 >> 3] + 1.0;
       HEAPF64[$m_R >> 3] = $add276_us;
       if ($add276_us < +HEAPF64[$m_RMin >> 3]) {
        __ZN10ClipperLib17PolyOffsetBuilder8DoSquareEd($this, $MiterLimit_addr_0);
       } else {
        __ZN10ClipperLib17PolyOffsetBuilder7DoMiterEv($this);
       }
       $150 = HEAP32[$m_j >> 2] | 0;
       HEAP32[$m_k >> 2] = $150;
       $inc293_us = $150 + 1 | 0;
       HEAP32[$m_j >> 2] = $inc293_us;
       if ($inc293_us >>> 0 < $len_0 >>> 0) {
        $storemerge89482_us = $inc293_us;
        $143 = $150;
        label = 7240;
       } else {
        break L8425;
       }
      }
     }
     while (1) {
      if ((label | 0) == 7249) {
       label = 0;
       __ZN10ClipperLib17PolyOffsetBuilder7DoRoundEv($this);
      }
      $152 = HEAP32[$m_j >> 2] | 0;
      HEAP32[$m_k >> 2] = $152;
      $inc293 = $152 + 1 | 0;
      HEAP32[$m_j >> 2] = $inc293;
      if ($inc293 >>> 0 >= $len_0 >>> 0) {
       break L8425;
      }
      if (($jointype | 0) == 1) {
       label = 7249;
      }
     }
    }
   } while (0);
   $70 = (HEAP32[$m_i >> 2] | 0) + 1 | 0;
   HEAP32[$m_i >> 2] = $70;
   $69 = HEAP32[$__begin__i_i_i >> 2] | 0;
  } while ($70 >>> 0 < (((HEAP32[$__end__i_i_i >> 2] | 0) - $69 | 0) / 12 & -1) >>> 0);
 }
 HEAP32[$clpr + 92 >> 2] = 0;
 HEAP32[$clpr + 96 >> 2] = 0;
 HEAP32[$clpr + 100 >> 2] = 0;
 HEAP32[$clpr + 84 >> 2] = 0;
 HEAP32[$clpr + 80 >> 2] = 0;
 HEAP32[$clpr >> 2] = 11908;
 HEAP32[$clpr + 76 >> 2] = 11948;
 _memset($clpr + 4 | 0, 0, 36);
 _memset($clpr + 44 | 0, 0, 17);
 HEAP8[$clpr + 88 | 0] = 0;
 HEAP8[$clpr + 72 | 0] = 0;
 $161 = $clpr;
 $162 = $clpr;
 $add_ptr = $clpr + 76 | 0;
 $163 = HEAP32[$__end__i_i_i_i807 >> 2] | 0;
 $164 = HEAP32[$__begin__i_i802 >> 2] | 0;
 if (($163 | 0) == ($164 | 0)) {
  $170 = $163;
  $169 = $163;
 } else {
  $i_011_i = 0;
  $166 = $164;
  while (1) {
   __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($add_ptr, $166 + ($i_011_i * 12 & -1) | 0, 0) | 0;
   $inc_i245 = $i_011_i + 1 | 0;
   $167 = HEAP32[$__end__i_i_i_i807 >> 2] | 0;
   $168 = HEAP32[$__begin__i_i802 >> 2] | 0;
   if ($inc_i245 >>> 0 < (($167 - $168 | 0) / 12 & -1) >>> 0) {
    $i_011_i = $inc_i245;
    $166 = $168;
   } else {
    $170 = $167;
    $169 = $168;
    break;
   }
  }
 }
 L8489 : do {
  if ($delta > 0.0) {
   $m_ExecuteLocked_i = $clpr + 60 | 0;
   do {
    if ((HEAP8[$m_ExecuteLocked_i] & 1) == 0) {
     HEAP8[$m_ExecuteLocked_i] = 1;
     if (($169 | 0) != ($170 | 0)) {
      $174 = $170;
      while (1) {
       $incdec_ptr_i_i_i_i_i256 = $174 - 12 | 0;
       HEAP32[$__end__i_i_i_i807 >> 2] = $incdec_ptr_i_i_i_i_i256;
       $175 = HEAP32[$incdec_ptr_i_i_i_i_i256 >> 2] | 0;
       $176 = $175;
       if (($175 | 0) == 0) {
        $177 = $incdec_ptr_i_i_i_i_i256;
       } else {
        $__end__i_i_i_i_i_i_i_i = $174 - 12 + 4 | 0;
        $178 = HEAP32[$__end__i_i_i_i_i_i_i_i >> 2] | 0;
        if (($175 | 0) != ($178 | 0)) {
         HEAP32[$__end__i_i_i_i_i_i_i_i >> 2] = $178 + ((($178 - 16 + (-$176 | 0) | 0) >>> 4 ^ -1) << 4);
        }
        __ZdlPv($175);
        $177 = HEAP32[$__end__i_i_i_i807 >> 2] | 0;
       }
       if (($169 | 0) == ($177 | 0)) {
        break;
       } else {
        $174 = $177;
       }
      }
     }
     HEAP32[$clpr + 68 >> 2] = 2;
     HEAP32[$clpr + 64 >> 2] = 2;
     HEAP32[$clpr + 40 >> 2] = 1;
     if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$clpr >> 2] | 0) + 16 >> 2] & 63]($clpr, 0) | 0)) {
      HEAP8[$m_ExecuteLocked_i] = 0;
      $186 = HEAP32[$__begin__i_i802 >> 2] | 0;
      $185 = HEAP32[$__end__i_i_i_i807 >> 2] | 0;
      break;
     }
     __ZN10ClipperLib7Clipper11BuildResultERNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEE($clpr, $out_polys);
     HEAP8[$m_ExecuteLocked_i] = 0;
     break L8489;
    } else {
     $186 = $169;
     $185 = $170;
    }
   } while (0);
   if (($186 | 0) == ($185 | 0)) {
    break;
   } else {
    $187 = $185;
   }
   while (1) {
    $incdec_ptr_i_i_i_i677 = $187 - 12 | 0;
    HEAP32[$__end__i_i_i_i807 >> 2] = $incdec_ptr_i_i_i_i677;
    $188 = HEAP32[$incdec_ptr_i_i_i_i677 >> 2] | 0;
    $189 = $188;
    if (($188 | 0) == 0) {
     $190 = $incdec_ptr_i_i_i_i677;
    } else {
     $__end__i_i_i_i_i_i265 = $187 - 12 + 4 | 0;
     $191 = HEAP32[$__end__i_i_i_i_i_i265 >> 2] | 0;
     if (($188 | 0) != ($191 | 0)) {
      HEAP32[$__end__i_i_i_i_i_i265 >> 2] = $191 + ((($191 - 16 + (-$189 | 0) | 0) >>> 4 ^ -1) << 4);
     }
     __ZdlPv($188);
     $190 = HEAP32[$__end__i_i_i_i807 >> 2] | 0;
    }
    if (($186 | 0) == ($190 | 0)) {
     break;
    } else {
     $187 = $190;
    }
   }
  } else {
   __ZN10ClipperLib11ClipperBase9GetBoundsEv($r, $162 + (HEAP32[(HEAP32[$161 >> 2] | 0) - 12 >> 2] | 0) | 0);
   $__begin__i_i_i276 = $outer | 0;
   HEAP32[$__begin__i_i_i276 >> 2] = 0;
   $__end__i_i_i277 = $outer + 4 | 0;
   HEAP32[$__end__i_i_i277 >> 2] = 0;
   $__first__i_i_i_i_i_i278 = $outer + 8 | 0;
   HEAP32[$__first__i_i_i_i_i_i278 >> 2] = 0;
   $call_i_i_i6_i_i = __Znwj(64) | 0;
   $200 = $call_i_i_i6_i_i;
   HEAP32[$__end__i_i_i277 >> 2] = $200;
   HEAP32[$__begin__i_i_i276 >> 2] = $200;
   HEAP32[$__first__i_i_i_i_i_i278 >> 2] = $call_i_i_i6_i_i + 64;
   if (($call_i_i_i6_i_i | 0) == 0) {
    $202 = 0;
   } else {
    _memset($call_i_i_i6_i_i | 0, 0, 16);
    $202 = $200;
   }
   $incdec_ptr_i_i_i = $202 + 16 | 0;
   if (($incdec_ptr_i_i_i | 0) == 0) {
    $300 = 0;
   } else {
    _memset($incdec_ptr_i_i_i | 0, 0, 16);
    $300 = $incdec_ptr_i_i_i;
   }
   $incdec_ptr_i_i_i_1 = $300 + 16 | 0;
   if (($incdec_ptr_i_i_i_1 | 0) == 0) {
    $302 = 0;
   } else {
    _memset($incdec_ptr_i_i_i_1 | 0, 0, 16);
    $302 = $incdec_ptr_i_i_i_1;
   }
   $incdec_ptr_i_i_i_2 = $302 + 16 | 0;
   if (($incdec_ptr_i_i_i_2 | 0) == 0) {
    $304 = 0;
   } else {
    _memset($incdec_ptr_i_i_i_2 | 0, 0, 16);
    $304 = $incdec_ptr_i_i_i_2;
   }
   HEAP32[$__end__i_i_i277 >> 2] = $304 + 16;
   $left = $r | 0;
   $sub323$0 = _i64Add(HEAP32[$left >> 2] | 0, HEAP32[$left + 4 >> 2] | 0, -10, -1) | 0;
   $sub323$1 = tempRet0;
   $bottom = $r + 24 | 0;
   $add324$0 = _i64Add(HEAP32[$bottom >> 2] | 0, HEAP32[$bottom + 4 >> 2] | 0, 10, 0) | 0;
   $add324$1 = tempRet0;
   $ref_tmp322_sroa_0_0__idx = $call_i_i_i6_i_i;
   HEAP32[$ref_tmp322_sroa_0_0__idx >> 2] = $sub323$0;
   HEAP32[$ref_tmp322_sroa_0_0__idx + 4 >> 2] = $sub323$1;
   $307 = $call_i_i_i6_i_i + 8 | 0;
   HEAP32[$307 >> 2] = $add324$0;
   HEAP32[$307 + 4 >> 2] = $add324$1;
   $right = $r + 16 | 0;
   $add329$0 = _i64Add(HEAP32[$right >> 2] | 0, HEAP32[$right + 4 >> 2] | 0, 10, 0) | 0;
   $add329$1 = tempRet0;
   $309 = $call_i_i_i6_i_i + 16 | 0;
   HEAP32[$309 >> 2] = $add329$0;
   HEAP32[$309 + 4 >> 2] = $add329$1;
   $310 = $call_i_i_i6_i_i + 24 | 0;
   HEAP32[$310 >> 2] = $add324$0;
   HEAP32[$310 + 4 >> 2] = $add324$1;
   $top = $r + 8 | 0;
   $sub338$0 = _i64Add(HEAP32[$top >> 2] | 0, HEAP32[$top + 4 >> 2] | 0, -10, -1) | 0;
   $sub338$1 = tempRet0;
   $312 = $call_i_i_i6_i_i + 32 | 0;
   HEAP32[$312 >> 2] = $add329$0;
   HEAP32[$312 + 4 >> 2] = $add329$1;
   $313 = $call_i_i_i6_i_i + 40 | 0;
   HEAP32[$313 >> 2] = $sub338$0;
   HEAP32[$313 + 4 >> 2] = $sub338$1;
   $314 = $call_i_i_i6_i_i + 48 | 0;
   HEAP32[$314 >> 2] = $sub323$0;
   HEAP32[$314 + 4 >> 2] = $sub323$1;
   $315 = $call_i_i_i6_i_i + 56 | 0;
   HEAP32[$315 >> 2] = $sub338$0;
   HEAP32[$315 + 4 >> 2] = $sub338$1;
   __ZN10ClipperLib11ClipperBase10AddPolygonERKNSt3__16vectorINS_8IntPointENS1_9allocatorIS3_EEEENS_8PolyTypeE($162 + (HEAP32[(HEAP32[$161 >> 2] | 0) - 12 >> 2] | 0) | 0, $outer, 0) | 0;
   $m_ExecuteLocked_i296 = $clpr + 60 | 0;
   do {
    if ((HEAP8[$m_ExecuteLocked_i296] & 1) == 0) {
     HEAP8[$m_ExecuteLocked_i296] = 1;
     $206 = HEAP32[$__end__i_i_i_i807 >> 2] | 0;
     $207 = HEAP32[$__begin__i_i802 >> 2] | 0;
     if (($207 | 0) != ($206 | 0)) {
      $209 = $206;
      while (1) {
       $incdec_ptr_i_i_i_i_i301 = $209 - 12 | 0;
       HEAP32[$__end__i_i_i_i807 >> 2] = $incdec_ptr_i_i_i_i_i301;
       $210 = HEAP32[$incdec_ptr_i_i_i_i_i301 >> 2] | 0;
       $211 = $210;
       if (($210 | 0) == 0) {
        $212 = $incdec_ptr_i_i_i_i_i301;
       } else {
        $__end__i_i_i_i_i_i_i_i307 = $209 - 12 + 4 | 0;
        $213 = HEAP32[$__end__i_i_i_i_i_i_i_i307 >> 2] | 0;
        if (($210 | 0) != ($213 | 0)) {
         HEAP32[$__end__i_i_i_i_i_i_i_i307 >> 2] = $213 + ((($213 - 16 + (-$211 | 0) | 0) >>> 4 ^ -1) << 4);
        }
        __ZdlPv($210);
        $212 = HEAP32[$__end__i_i_i_i807 >> 2] | 0;
       }
       if (($207 | 0) == ($212 | 0)) {
        break;
       } else {
        $209 = $212;
       }
      }
     }
     HEAP32[$clpr + 68 >> 2] = 3;
     HEAP32[$clpr + 64 >> 2] = 3;
     HEAP32[$clpr + 40 >> 2] = 1;
     if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$clpr >> 2] | 0) + 16 >> 2] & 63]($clpr, 0) | 0)) {
      HEAP8[$m_ExecuteLocked_i296] = 0;
      label = 7292;
      break;
     }
     __ZN10ClipperLib7Clipper11BuildResultERNSt3__16vectorINS2_INS_8IntPointENS1_9allocatorIS3_EEEENS4_IS6_EEEE($clpr, $out_polys);
     HEAP8[$m_ExecuteLocked_i296] = 0;
     $221 = HEAP32[$__begin__i_i802 >> 2] | 0;
     $222 = HEAP32[$__end__i_i_i_i807 >> 2] | 0;
     $__first_addr_i_i_i_0463 = $221 + 12 | 0;
     if (($__first_addr_i_i_i_0463 | 0) == ($222 | 0)) {
      $__result_addr_i_i_i_0_lcssa = $221;
      $223 = $222;
     } else {
      $__result_addr_i_i_i_0465 = $221;
      $__first_addr_i_i_i_0467 = $__first_addr_i_i_i_0463;
      do {
       __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($__result_addr_i_i_i_0465, HEAP32[$__first_addr_i_i_i_0467 >> 2] | 0, HEAP32[$__result_addr_i_i_i_0465 + 16 >> 2] | 0);
       $__result_addr_i_i_i_0465 = $__result_addr_i_i_i_0465 + 12 | 0;
       $__first_addr_i_i_i_0467 = $__first_addr_i_i_i_0467 + 12 | 0;
      } while (($__first_addr_i_i_i_0467 | 0) != ($222 | 0));
      $__result_addr_i_i_i_0_lcssa = $__result_addr_i_i_i_0465;
      $223 = HEAP32[$__end__i_i_i_i807 >> 2] | 0;
     }
     if (($__result_addr_i_i_i_0_lcssa | 0) == ($223 | 0)) {
      $_lcssa = $223;
     } else {
      $226 = $223;
      while (1) {
       $incdec_ptr_i_i_i_i521 = $226 - 12 | 0;
       HEAP32[$__end__i_i_i_i807 >> 2] = $incdec_ptr_i_i_i_i521;
       $227 = HEAP32[$incdec_ptr_i_i_i_i521 >> 2] | 0;
       $228 = $227;
       if (($227 | 0) == 0) {
        $229 = $incdec_ptr_i_i_i_i521;
       } else {
        $__end__i_i_i_i_i_i333 = $226 - 12 + 4 | 0;
        $230 = HEAP32[$__end__i_i_i_i_i_i333 >> 2] | 0;
        if (($227 | 0) != ($230 | 0)) {
         HEAP32[$__end__i_i_i_i_i_i333 >> 2] = $230 + ((($230 - 16 + (-$228 | 0) | 0) >>> 4 ^ -1) << 4);
        }
        __ZdlPv($227);
        $229 = HEAP32[$__end__i_i_i_i807 >> 2] | 0;
       }
       if (($__result_addr_i_i_i_0_lcssa | 0) == ($229 | 0)) {
        $_lcssa = $__result_addr_i_i_i_0_lcssa;
        break;
       } else {
        $226 = $229;
       }
      }
     }
     $235 = HEAP32[$__begin__i_i802 >> 2] | 0;
     if (($_lcssa | 0) == ($235 | 0)) {
      break;
     }
     $__t_i_i_i_i_0_cast4_i347 = $__t_i_i_i_i_i344;
     $i_010_i349 = 0;
     $238 = $235;
     $237 = $_lcssa;
     while (1) {
      $239 = HEAP32[$238 + ($i_010_i349 * 12 & -1) >> 2] | 0;
      $240 = HEAP32[$238 + ($i_010_i349 * 12 & -1) + 4 >> 2] | 0;
      do {
       if (($239 | 0) == ($240 | 0)) {
        $244 = $237;
        $243 = $238;
       } else {
        $incdec_ptr_i19_i_i12_i_i354 = $240 - 16 | 0;
        if ($239 >>> 0 < $incdec_ptr_i19_i_i12_i_i354 >>> 0) {
         $agg_tmp3_i_sroa_0_014_i_i358 = $239;
         $incdec_ptr_i19_i_i15_i_i357 = $incdec_ptr_i19_i_i12_i_i354;
        } else {
         $244 = $237;
         $243 = $238;
         break;
        }
        do {
         $241 = $agg_tmp3_i_sroa_0_014_i_i358;
         HEAP32[$__t_i_i_i_i_0_cast4_i347 >> 2] = HEAP32[$241 >> 2];
         HEAP32[$__t_i_i_i_i_0_cast4_i347 + 4 >> 2] = HEAP32[$241 + 4 >> 2];
         HEAP32[$__t_i_i_i_i_0_cast4_i347 + 8 >> 2] = HEAP32[$241 + 8 >> 2];
         HEAP32[$__t_i_i_i_i_0_cast4_i347 + 12 >> 2] = HEAP32[$241 + 12 >> 2];
         $242 = $incdec_ptr_i19_i_i15_i_i357;
         HEAP32[$241 >> 2] = HEAP32[$242 >> 2];
         HEAP32[$241 + 4 >> 2] = HEAP32[$242 + 4 >> 2];
         HEAP32[$241 + 8 >> 2] = HEAP32[$242 + 8 >> 2];
         HEAP32[$241 + 12 >> 2] = HEAP32[$242 + 12 >> 2];
         HEAP32[$242 >> 2] = HEAP32[$__t_i_i_i_i_0_cast4_i347 >> 2];
         HEAP32[$242 + 4 >> 2] = HEAP32[$__t_i_i_i_i_0_cast4_i347 + 4 >> 2];
         HEAP32[$242 + 8 >> 2] = HEAP32[$__t_i_i_i_i_0_cast4_i347 + 8 >> 2];
         HEAP32[$242 + 12 >> 2] = HEAP32[$__t_i_i_i_i_0_cast4_i347 + 12 >> 2];
         $agg_tmp3_i_sroa_0_014_i_i358 = $agg_tmp3_i_sroa_0_014_i_i358 + 16 | 0;
         $incdec_ptr_i19_i_i15_i_i357 = $incdec_ptr_i19_i_i15_i_i357 - 16 | 0;
        } while ($agg_tmp3_i_sroa_0_014_i_i358 >>> 0 < $incdec_ptr_i19_i_i15_i_i357 >>> 0);
        $244 = HEAP32[$__end__i_i_i_i807 >> 2] | 0;
        $243 = HEAP32[$__begin__i_i802 >> 2] | 0;
       }
      } while (0);
      $inc_i366 = $i_010_i349 + 1 | 0;
      if ($inc_i366 >>> 0 < (($244 - $243 | 0) / 12 & -1) >>> 0) {
       $i_010_i349 = $inc_i366;
       $238 = $243;
       $237 = $244;
      } else {
       break;
      }
     }
    } else {
     label = 7292;
    }
   } while (0);
   do {
    if ((label | 0) == 7292) {
     $_ph = HEAP32[$__begin__i_i802 >> 2] | 0;
     $220 = HEAP32[$__end__i_i_i_i807 >> 2] | 0;
     if (($_ph | 0) == ($220 | 0)) {
      break;
     } else {
      $254 = $220;
     }
     while (1) {
      $incdec_ptr_i_i_i_i = $254 - 12 | 0;
      HEAP32[$__end__i_i_i_i807 >> 2] = $incdec_ptr_i_i_i_i;
      $255 = HEAP32[$incdec_ptr_i_i_i_i >> 2] | 0;
      $256 = $255;
      if (($255 | 0) == 0) {
       $257 = $incdec_ptr_i_i_i_i;
      } else {
       $__end__i_i_i_i_i_i389 = $254 - 12 + 4 | 0;
       $258 = HEAP32[$__end__i_i_i_i_i_i389 >> 2] | 0;
       if (($255 | 0) != ($258 | 0)) {
        HEAP32[$__end__i_i_i_i_i_i389 >> 2] = $258 + ((($258 - 16 + (-$256 | 0) | 0) >>> 4 ^ -1) << 4);
       }
       __ZdlPv($255);
       $257 = HEAP32[$__end__i_i_i_i807 >> 2] | 0;
      }
      if (($_ph | 0) == ($257 | 0)) {
       break;
      } else {
       $254 = $257;
      }
     }
    }
   } while (0);
   $263 = HEAP32[$__begin__i_i_i276 >> 2] | 0;
   if (($263 | 0) == 0) {
    break;
   }
   $265 = HEAP32[$__end__i_i_i277 >> 2] | 0;
   if (($263 | 0) != ($265 | 0)) {
    HEAP32[$__end__i_i_i277 >> 2] = $265 + ((($265 - 16 + (-$263 | 0) | 0) >>> 4 ^ -1) << 4);
   }
   __ZdlPv($263);
  }
 } while (0);
 __ZN10ClipperLib7ClipperD2Ev($clpr, 12040);
 __ZN10ClipperLib11ClipperBaseD2Ev($clpr + 76 | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNK10ClipperLib16clipperException4whatEv($this) {
 $this = $this | 0;
 var $0 = 0, $cond_i_i_i = 0;
 $0 = $this + 4 | 0;
 if ((HEAP8[$0] & 1) == 0) {
  $cond_i_i_i = $0 + 1 | 0;
  return $cond_i_i_i | 0;
 } else {
  $cond_i_i_i = HEAP32[$this + 12 >> 2] | 0;
  return $cond_i_i_i | 0;
 }
 return 0;
}
function __ZN10ClipperLib17PolyOffsetBuilder7DoMiterEv($this) {
 $this = $this | 0;
 var $ref_tmp = 0, $pt1 = 0, $pt2 = 0, $0 = 0, $1 = 0, $2 = 0.0, $m_j = 0, $3 = 0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $div = 0.0, $11 = 0, $X18 = 0, $add28 = 0.0, $sub_sink_i = 0.0, $conv_i$1 = 0, $Y35 = 0, $add47 = 0.0, $sub_sink_i7 = 0.0, $conv_i8$1 = 0, $X_i_i = 0, $Y_i_i = 0, $m_i50 = 0, $__begin__i227 = 0, $16 = 0, $X54 = 0, $conv55 = 0.0, $add62 = 0.0, $sub_sink_i15 = 0.0, $conv_i16$1 = 0, $Y69 = 0, $conv70 = 0.0, $add77 = 0.0, $sub_sink_i43 = 0.0, $conv_i44$1 = 0, $X_i_i36 = 0, $Y_i_i37 = 0, $add92 = 0.0, $sub_sink_i33 = 0.0, $conv_i34$1 = 0, $add107 = 0.0, $sub_sink_i25 = 0.0, $conv_i26$1 = 0, $X_i_i18 = 0, $Y_i_i19 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $ref_tmp = __stackBase__ | 0;
 $pt1 = __stackBase__ + 16 | 0;
 $pt2 = __stackBase__ + 32 | 0;
 $0 = HEAP32[$this + 64 >> 2] | 0;
 $1 = HEAP32[$this + 16 >> 2] | 0;
 $2 = +HEAPF64[$1 + ($0 << 4) >> 3];
 $m_j = $this + 60 | 0;
 $3 = HEAP32[$m_j >> 2] | 0;
 $4 = +HEAPF64[$1 + ($3 << 4) + 8 >> 3];
 $5 = +HEAPF64[$1 + ($3 << 4) >> 3];
 $6 = +HEAPF64[$1 + ($0 << 4) + 8 >> 3];
 $7 = +HEAPF64[$this + 32 >> 3];
 if ($7 * ($2 * $4 - $5 * $6) >= 0.0) {
  $div = $7 / +HEAPF64[$this + 48 >> 3];
  $11 = HEAP32[(HEAP32[$this >> 2] | 0) + ((HEAP32[$this + 56 >> 2] | 0) * 12 & -1) >> 2] | 0;
  $X18 = $11 + ($3 << 4) | 0;
  $add28 = ($2 + $5) * $div + (+((HEAP32[$X18 >> 2] | 0) >>> 0) + +(HEAP32[$X18 + 4 >> 2] | 0) * 4294967296.0);
  if ($add28 < 0.0) {
   $sub_sink_i = $add28 + -.5;
  } else {
   $sub_sink_i = $add28 + .5;
  }
  $conv_i$1 = (Math_min(+Math_floor($sub_sink_i / 4294967296.0), 4294967295.0) | 0) >>> 0;
  $Y35 = $11 + ($3 << 4) + 8 | 0;
  $add47 = +((HEAP32[$Y35 >> 2] | 0) >>> 0) + +(HEAP32[$Y35 + 4 >> 2] | 0) * 4294967296.0 + $div * ($6 + $4);
  if ($add47 < 0.0) {
   $sub_sink_i7 = $add47 + -.5;
  } else {
   $sub_sink_i7 = $add47 + .5;
  }
  $conv_i8$1 = (Math_min(+Math_floor($sub_sink_i7 / 4294967296.0), 4294967295.0) | 0) >>> 0;
  $X_i_i = $ref_tmp | 0;
  HEAP32[$X_i_i >> 2] = ~~$sub_sink_i >>> 0;
  HEAP32[$X_i_i + 4 >> 2] = $conv_i$1;
  $Y_i_i = $ref_tmp + 8 | 0;
  HEAP32[$Y_i_i >> 2] = ~~$sub_sink_i7 >>> 0;
  HEAP32[$Y_i_i + 4 >> 2] = $conv_i8$1;
  __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, $ref_tmp);
  STACKTOP = __stackBase__;
  return;
 }
 $m_i50 = $this + 56 | 0;
 $__begin__i227 = $this | 0;
 $16 = HEAP32[(HEAP32[$__begin__i227 >> 2] | 0) + ((HEAP32[$m_i50 >> 2] | 0) * 12 & -1) >> 2] | 0;
 $X54 = $16 + ($3 << 4) | 0;
 $conv55 = +((HEAP32[$X54 >> 2] | 0) >>> 0) + +(HEAP32[$X54 + 4 >> 2] | 0) * 4294967296.0;
 $add62 = $2 * $7 + $conv55;
 if ($add62 < 0.0) {
  $sub_sink_i15 = $add62 + -.5;
 } else {
  $sub_sink_i15 = $add62 + .5;
 }
 $conv_i16$1 = (Math_min(+Math_floor($sub_sink_i15 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $Y69 = $16 + ($3 << 4) + 8 | 0;
 $conv70 = +((HEAP32[$Y69 >> 2] | 0) >>> 0) + +(HEAP32[$Y69 + 4 >> 2] | 0) * 4294967296.0;
 $add77 = $conv70 + $6 * $7;
 if ($add77 < 0.0) {
  $sub_sink_i43 = $add77 + -.5;
 } else {
  $sub_sink_i43 = $add77 + .5;
 }
 $conv_i44$1 = (Math_min(+Math_floor($sub_sink_i43 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $X_i_i36 = $pt1 | 0;
 HEAP32[$X_i_i36 >> 2] = ~~$sub_sink_i15 >>> 0;
 HEAP32[$X_i_i36 + 4 >> 2] = $conv_i16$1;
 $Y_i_i37 = $pt1 + 8 | 0;
 HEAP32[$Y_i_i37 >> 2] = ~~$sub_sink_i43 >>> 0;
 HEAP32[$Y_i_i37 + 4 >> 2] = $conv_i44$1;
 $add92 = $conv55 + $5 * $7;
 if ($add92 < 0.0) {
  $sub_sink_i33 = $add92 + -.5;
 } else {
  $sub_sink_i33 = $add92 + .5;
 }
 $conv_i34$1 = (Math_min(+Math_floor($sub_sink_i33 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $add107 = $conv70 + $4 * $7;
 if ($add107 < 0.0) {
  $sub_sink_i25 = $add107 + -.5;
 } else {
  $sub_sink_i25 = $add107 + .5;
 }
 $conv_i26$1 = (Math_min(+Math_floor($sub_sink_i25 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $X_i_i18 = $pt2 | 0;
 HEAP32[$X_i_i18 >> 2] = ~~$sub_sink_i33 >>> 0;
 HEAP32[$X_i_i18 + 4 >> 2] = $conv_i34$1;
 $Y_i_i19 = $pt2 + 8 | 0;
 HEAP32[$Y_i_i19 >> 2] = ~~$sub_sink_i25 >>> 0;
 HEAP32[$Y_i_i19 + 4 >> 2] = $conv_i26$1;
 __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, $pt1);
 __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, (HEAP32[(HEAP32[$__begin__i227 >> 2] | 0) + ((HEAP32[$m_i50 >> 2] | 0) * 12 & -1) >> 2] | 0) + (HEAP32[$m_j >> 2] << 4) | 0);
 __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, $pt2);
 STACKTOP = __stackBase__;
 return;
}
function __ZN10ClipperLib17PolyOffsetBuilder8DoSquareEd($this, $mul) {
 $this = $this | 0;
 $mul = +$mul;
 var $pt1 = 0, $pt2 = 0, $m_i = 0, $__begin__i = 0, $m_j = 0, $2 = 0, $3 = 0, $X = 0, $conv = 0.0, $5 = 0, $__begin__i153 = 0, $6 = 0, $7 = 0.0, $8 = 0.0, $add = 0.0, $sub_sink_i = 0.0, $conv_i$0 = 0, $conv_i$1 = 0, $Y = 0, $conv12 = 0.0, $10 = 0.0, $add19 = 0.0, $sub_sink_i12 = 0.0, $conv_i13$0 = 0, $conv_i13$1 = 0, $X_i_i = 0, $Y_i_i = 0, $11 = 0.0, $add34 = 0.0, $sub_sink_i20 = 0.0, $conv_i21$0 = 0, $conv_i21$1 = 0, $12 = 0.0, $add49 = 0.0, $sub_sink_i28 = 0.0, $conv_i29$0 = 0, $conv_i29$1 = 0, $X_i_i33 = 0, $Y_i_i34 = 0, $call79 = 0.0, $call92 = 0.0, $a1_0 = 0.0, $call97 = 0.0, $mul101 = 0.0, $sub109 = 0.0, $conv110$1 = 0, $add118 = 0.0, $conv119$1 = 0, $13 = 0, $14 = 0, $add128 = 0.0, $conv129$1 = 0, $sub137 = 0.0, $conv138$1 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $pt1 = __stackBase__ | 0;
 $pt2 = __stackBase__ + 16 | 0;
 $m_i = $this + 56 | 0;
 $__begin__i = $this | 0;
 $m_j = $this + 60 | 0;
 $2 = HEAP32[$m_j >> 2] | 0;
 $3 = HEAP32[(HEAP32[$__begin__i >> 2] | 0) + ((HEAP32[$m_i >> 2] | 0) * 12 & -1) >> 2] | 0;
 $X = $3 + ($2 << 4) | 0;
 $conv = +((HEAP32[$X >> 2] | 0) >>> 0) + +(HEAP32[$X + 4 >> 2] | 0) * 4294967296.0;
 $5 = HEAP32[$this + 64 >> 2] | 0;
 $__begin__i153 = $this + 16 | 0;
 $6 = HEAP32[$__begin__i153 >> 2] | 0;
 $7 = +HEAPF64[$6 + ($5 << 4) >> 3];
 $8 = +HEAPF64[$this + 32 >> 3];
 $add = $conv + $7 * $8;
 if ($add < 0.0) {
  $sub_sink_i = $add + -.5;
 } else {
  $sub_sink_i = $add + .5;
 }
 $conv_i$0 = ~~$sub_sink_i >>> 0;
 $conv_i$1 = (Math_min(+Math_floor($sub_sink_i / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $Y = $3 + ($2 << 4) + 8 | 0;
 $conv12 = +((HEAP32[$Y >> 2] | 0) >>> 0) + +(HEAP32[$Y + 4 >> 2] | 0) * 4294967296.0;
 $10 = +HEAPF64[$6 + ($5 << 4) + 8 >> 3];
 $add19 = $conv12 + $10 * $8;
 if ($add19 < 0.0) {
  $sub_sink_i12 = $add19 + -.5;
 } else {
  $sub_sink_i12 = $add19 + .5;
 }
 $conv_i13$0 = ~~$sub_sink_i12 >>> 0;
 $conv_i13$1 = (Math_min(+Math_floor($sub_sink_i12 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $X_i_i = $pt1 | 0;
 HEAP32[$X_i_i >> 2] = $conv_i$0;
 HEAP32[$X_i_i + 4 >> 2] = $conv_i$1;
 $Y_i_i = $pt1 + 8 | 0;
 HEAP32[$Y_i_i >> 2] = $conv_i13$0;
 HEAP32[$Y_i_i + 4 >> 2] = $conv_i13$1;
 $11 = +HEAPF64[$6 + ($2 << 4) >> 3];
 $add34 = $conv + $11 * $8;
 if ($add34 < 0.0) {
  $sub_sink_i20 = $add34 + -.5;
 } else {
  $sub_sink_i20 = $add34 + .5;
 }
 $conv_i21$0 = ~~$sub_sink_i20 >>> 0;
 $conv_i21$1 = (Math_min(+Math_floor($sub_sink_i20 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $12 = +HEAPF64[$6 + ($2 << 4) + 8 >> 3];
 $add49 = $conv12 + $12 * $8;
 if ($add49 < 0.0) {
  $sub_sink_i28 = $add49 + -.5;
 } else {
  $sub_sink_i28 = $add49 + .5;
 }
 $conv_i29$0 = ~~$sub_sink_i28 >>> 0;
 $conv_i29$1 = (Math_min(+Math_floor($sub_sink_i28 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $X_i_i33 = $pt2 | 0;
 HEAP32[$X_i_i33 >> 2] = $conv_i21$0;
 HEAP32[$X_i_i33 + 4 >> 2] = $conv_i21$1;
 $Y_i_i34 = $pt2 + 8 | 0;
 HEAP32[$Y_i_i34 >> 2] = $conv_i29$0;
 HEAP32[$Y_i_i34 + 4 >> 2] = $conv_i29$1;
 if ($8 * ($7 * $12 - $11 * $10) < 0.0) {
  __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, $pt1);
  __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, (HEAP32[(HEAP32[$__begin__i >> 2] | 0) + ((HEAP32[$m_i >> 2] | 0) * 12 & -1) >> 2] | 0) + (HEAP32[$m_j >> 2] << 4) | 0);
  __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, $pt2);
  STACKTOP = __stackBase__;
  return;
 }
 $call79 = +Math_atan2(+$10, +$7);
 $call92 = +Math_abs(+(+Math_atan2(+(-0.0 - $12), +(-0.0 - $11)) - $call79));
 if ($call92 > 3.141592653589793) {
  $a1_0 = 6.283185307179586 - $call92;
 } else {
  $a1_0 = $call92;
 }
 $call97 = +Math_tan(+((3.141592653589793 - $a1_0) * .25));
 $mul101 = $call97 * +Math_abs(+($8 * $mul));
 $sub109 = +($conv_i$0 >>> 0) + +($conv_i$1 | 0) * 4294967296.0 - $mul101 * $10;
 $conv110$1 = (Math_min(+Math_floor($sub109 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $add118 = +($conv_i13$0 >>> 0) + +($conv_i13$1 | 0) * 4294967296.0 + $mul101 * $7;
 $conv119$1 = (Math_min(+Math_floor($add118 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 HEAP32[$X_i_i >> 2] = ~~$sub109 >>> 0;
 HEAP32[$X_i_i + 4 >> 2] = $conv110$1;
 HEAP32[$Y_i_i >> 2] = ~~$add118 >>> 0;
 HEAP32[$Y_i_i + 4 >> 2] = $conv119$1;
 __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, $pt1);
 $13 = HEAP32[$m_j >> 2] | 0;
 $14 = HEAP32[$__begin__i153 >> 2] | 0;
 $add128 = +($conv_i21$0 >>> 0) + +($conv_i21$1 | 0) * 4294967296.0 + $mul101 * +HEAPF64[$14 + ($13 << 4) + 8 >> 3];
 $conv129$1 = (Math_min(+Math_floor($add128 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $sub137 = +($conv_i29$0 >>> 0) + +($conv_i29$1 | 0) * 4294967296.0 - $mul101 * +HEAPF64[$14 + ($13 << 4) >> 3];
 $conv138$1 = (Math_min(+Math_floor($sub137 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 HEAP32[$X_i_i33 >> 2] = ~~$add128 >>> 0;
 HEAP32[$X_i_i33 + 4 >> 2] = $conv129$1;
 HEAP32[$Y_i_i34 >> 2] = ~~$sub137 >>> 0;
 HEAP32[$Y_i_i34 + 4 >> 2] = $conv138$1;
 __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, $pt2);
 STACKTOP = __stackBase__;
 return;
}
function __ZN10ClipperLib17PolyOffsetBuilder7DoRoundEv($this) {
 $this = $this | 0;
 var $pt1 = 0, $pt2 = 0, $arc = 0, $m_i = 0, $__begin__i = 0, $m_j = 0, $2 = 0, $3 = 0, $X = 0, $conv = 0.0, $m_k = 0, $5 = 0, $__begin__i149 = 0, $6 = 0, $m_delta = 0, $8 = 0.0, $add = 0.0, $sub_sink_i = 0.0, $conv_i$1 = 0, $Y = 0, $conv11 = 0.0, $add18 = 0.0, $sub_sink_i15 = 0.0, $conv_i16$1 = 0, $X_i_i = 0, $Y_i_i = 0, $add33 = 0.0, $sub_sink_i23 = 0.0, $conv_i24$1 = 0, $add48 = 0.0, $sub_sink_i44 = 0.0, $conv_i45$1 = 0, $X_i_i47 = 0, $Y_i_i48 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $call99 = 0.0, $call108 = 0.0, $a2_0 = 0.0, $__end__i = 0, $24 = 0, $__begin__i183 = 0, $25 = 0, $26 = 0, $m_060 = 0, $inc = 0, $27 = 0, $28 = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_rhs_cast_i_lcssa = 0, $_lcssa52 = 0, $_lcssa = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $pt1 = __stackBase__ | 0;
 $pt2 = __stackBase__ + 16 | 0;
 $arc = __stackBase__ + 32 | 0;
 $m_i = $this + 56 | 0;
 $__begin__i = $this | 0;
 $m_j = $this + 60 | 0;
 $2 = HEAP32[$m_j >> 2] | 0;
 $3 = HEAP32[(HEAP32[$__begin__i >> 2] | 0) + ((HEAP32[$m_i >> 2] | 0) * 12 & -1) >> 2] | 0;
 $X = $3 + ($2 << 4) | 0;
 $conv = +((HEAP32[$X >> 2] | 0) >>> 0) + +(HEAP32[$X + 4 >> 2] | 0) * 4294967296.0;
 $m_k = $this + 64 | 0;
 $5 = HEAP32[$m_k >> 2] | 0;
 $__begin__i149 = $this + 16 | 0;
 $6 = HEAP32[$__begin__i149 >> 2] | 0;
 $m_delta = $this + 32 | 0;
 $8 = +HEAPF64[$m_delta >> 3];
 $add = $conv + +HEAPF64[$6 + ($5 << 4) >> 3] * $8;
 if ($add < 0.0) {
  $sub_sink_i = $add + -.5;
 } else {
  $sub_sink_i = $add + .5;
 }
 $conv_i$1 = (Math_min(+Math_floor($sub_sink_i / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $Y = $3 + ($2 << 4) + 8 | 0;
 $conv11 = +((HEAP32[$Y >> 2] | 0) >>> 0) + +(HEAP32[$Y + 4 >> 2] | 0) * 4294967296.0;
 $add18 = $conv11 + +HEAPF64[$6 + ($5 << 4) + 8 >> 3] * $8;
 if ($add18 < 0.0) {
  $sub_sink_i15 = $add18 + -.5;
 } else {
  $sub_sink_i15 = $add18 + .5;
 }
 $conv_i16$1 = (Math_min(+Math_floor($sub_sink_i15 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $X_i_i = $pt1 | 0;
 HEAP32[$X_i_i >> 2] = ~~$sub_sink_i >>> 0;
 HEAP32[$X_i_i + 4 >> 2] = $conv_i$1;
 $Y_i_i = $pt1 + 8 | 0;
 HEAP32[$Y_i_i >> 2] = ~~$sub_sink_i15 >>> 0;
 HEAP32[$Y_i_i + 4 >> 2] = $conv_i16$1;
 $add33 = $conv + +HEAPF64[$6 + ($2 << 4) >> 3] * $8;
 if ($add33 < 0.0) {
  $sub_sink_i23 = $add33 + -.5;
 } else {
  $sub_sink_i23 = $add33 + .5;
 }
 $conv_i24$1 = (Math_min(+Math_floor($sub_sink_i23 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $add48 = $conv11 + +HEAPF64[$6 + ($2 << 4) + 8 >> 3] * $8;
 if ($add48 < 0.0) {
  $sub_sink_i44 = $add48 + -.5;
 } else {
  $sub_sink_i44 = $add48 + .5;
 }
 $conv_i45$1 = (Math_min(+Math_floor($sub_sink_i44 / 4294967296.0), 4294967295.0) | 0) >>> 0;
 $X_i_i47 = $pt2 | 0;
 HEAP32[$X_i_i47 >> 2] = ~~$sub_sink_i23 >>> 0;
 HEAP32[$X_i_i47 + 4 >> 2] = $conv_i24$1;
 $Y_i_i48 = $pt2 + 8 | 0;
 HEAP32[$Y_i_i48 >> 2] = ~~$sub_sink_i44 >>> 0;
 HEAP32[$Y_i_i48 + 4 >> 2] = $conv_i45$1;
 __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, $pt1);
 $13 = HEAP32[$m_k >> 2] | 0;
 $14 = HEAP32[$__begin__i149 >> 2] | 0;
 $15 = +HEAPF64[$14 + ($13 << 4) >> 3];
 $16 = HEAP32[$m_j >> 2] | 0;
 $17 = +HEAPF64[$14 + ($16 << 4) + 8 >> 3];
 $18 = +HEAPF64[$14 + ($16 << 4) >> 3];
 $19 = +HEAPF64[$14 + ($13 << 4) + 8 >> 3];
 $20 = +HEAPF64[$m_delta >> 3];
 if ($20 * ($15 * $17 - $18 * $19) < 0.0) {
  __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, (HEAP32[(HEAP32[$__begin__i >> 2] | 0) + ((HEAP32[$m_i >> 2] | 0) * 12 & -1) >> 2] | 0) + ($16 << 4) | 0);
  __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, $pt2);
  STACKTOP = __stackBase__;
  return;
 }
 if ($15 * $18 + $17 * $19 >= .985) {
  __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, $pt2);
  STACKTOP = __stackBase__;
  return;
 }
 $call99 = +Math_atan2(+$19, +$15);
 $call108 = +Math_atan2(+$17, +$18);
 do {
  if ($20 > 0.0 & $call108 < $call99) {
   $a2_0 = $call108 + 6.283185307179586;
  } else {
   if (!($20 < 0.0 & $call108 > $call99)) {
    $a2_0 = $call108;
    break;
   }
   $a2_0 = $call108 - 6.283185307179586;
  }
 } while (0);
 __ZN10ClipperLib8BuildArcERKNS_8IntPointEddd($arc, (HEAP32[(HEAP32[$__begin__i >> 2] | 0) + ((HEAP32[$m_i >> 2] | 0) * 12 & -1) >> 2] | 0) + ($16 << 4) | 0, $call99, $a2_0, $20);
 $__end__i = $arc + 4 | 0;
 $24 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i183 = $arc | 0;
 $25 = HEAP32[$__begin__i183 >> 2] | 0;
 if (($24 | 0) == ($25 | 0)) {
  $_lcssa = $24;
  $_lcssa52 = $24;
  $sub_ptr_rhs_cast_i_lcssa = $25;
 } else {
  $m_060 = 0;
  $26 = $25;
  while (1) {
   __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, $26 + ($m_060 << 4) | 0);
   $inc = $m_060 + 1 | 0;
   $27 = HEAP32[$__end__i >> 2] | 0;
   $28 = HEAP32[$__begin__i183 >> 2] | 0;
   $sub_ptr_rhs_cast_i = $28;
   if ($inc >>> 0 < $27 - $sub_ptr_rhs_cast_i >> 4 >>> 0) {
    $m_060 = $inc;
    $26 = $28;
   } else {
    $_lcssa = $27;
    $_lcssa52 = $28;
    $sub_ptr_rhs_cast_i_lcssa = $sub_ptr_rhs_cast_i;
    break;
   }
  }
 }
 if (($_lcssa52 | 0) == 0) {
  __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, $pt2);
  STACKTOP = __stackBase__;
  return;
 }
 if (($_lcssa52 | 0) != ($_lcssa | 0)) {
  HEAP32[$__end__i >> 2] = $_lcssa + ((($_lcssa - 16 + (-$sub_ptr_rhs_cast_i_lcssa | 0) | 0) >>> 4 ^ -1) << 4);
 }
 __ZdlPv($_lcssa52);
 __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, $pt2);
 STACKTOP = __stackBase__;
 return;
}
function __ZN10ClipperLib17PolyOffsetBuilder8AddPointERKNS_8IntPointE($this, $pt) {
 $this = $this | 0;
 $pt = $pt | 0;
 var $m_curr_poly = 0, $0 = 0, $__end__i = 0, $1 = 0, $__begin__i = 0, $2 = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $__first__i_i_i_i_i = 0, $add = 0, $4 = 0, $5 = 0, $6 = 0, $cond_i_i_i = 0, $add_ptr_i_i_i = 0, $add_ptr6_i_i_i = 0, $sub_ptr_sub_i_i7_i = 0, $add_ptr_i_i9_i = 0, $7 = 0, $8 = 0, $9 = 0, $__end__i8 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0;
 $m_curr_poly = $this + 12 | 0;
 $0 = HEAP32[$m_curr_poly >> 2] | 0;
 $__end__i = $0 + 4 | 0;
 $1 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i = $0 | 0;
 $2 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_rhs_cast_i = $2;
 $sub_ptr_div_i = $1 - $sub_ptr_rhs_cast_i >> 4;
 $__first__i_i_i_i_i = $0 + 8 | 0;
 do {
  if (($sub_ptr_div_i | 0) == ((HEAP32[$__first__i_i_i_i_i >> 2] | 0) - $sub_ptr_rhs_cast_i >> 4 | 0)) {
   $add = $sub_ptr_div_i + 128 | 0;
   if ($sub_ptr_div_i >>> 0 >= 4294967168) {
    break;
   }
   if (($add | 0) == 0) {
    $cond_i_i_i = 0;
    $6 = $2;
    $5 = $1;
   } else {
    $4 = __Znwj($add << 4) | 0;
    $cond_i_i_i = $4;
    $6 = HEAP32[$__begin__i >> 2] | 0;
    $5 = HEAP32[$__end__i >> 2] | 0;
   }
   $add_ptr_i_i_i = $cond_i_i_i + ($sub_ptr_div_i << 4) | 0;
   $add_ptr6_i_i_i = $cond_i_i_i + ($add << 4) | 0;
   $sub_ptr_sub_i_i7_i = $5 - $6 | 0;
   $add_ptr_i_i9_i = $cond_i_i_i + ($sub_ptr_div_i - ($sub_ptr_sub_i_i7_i >> 4) << 4) | 0;
   $7 = $add_ptr_i_i9_i;
   $8 = $6;
   _memcpy($7 | 0, $8 | 0, $sub_ptr_sub_i_i7_i) | 0;
   HEAP32[$__begin__i >> 2] = $add_ptr_i_i9_i;
   HEAP32[$__end__i >> 2] = $add_ptr_i_i_i;
   HEAP32[$__first__i_i_i_i_i >> 2] = $add_ptr6_i_i_i;
   if (($6 | 0) == 0) {
    break;
   }
   __ZdlPv($8);
  }
 } while (0);
 $9 = HEAP32[$m_curr_poly >> 2] | 0;
 $__end__i8 = $9 + 4 | 0;
 $10 = HEAP32[$__end__i8 >> 2] | 0;
 if (($10 | 0) == (HEAP32[$9 + 8 >> 2] | 0)) {
  __ZNSt3__16vectorIN10ClipperLib8IntPointENS_9allocatorIS2_EEE21__push_back_slow_pathIKS2_EEvRT_($9, $pt);
  return;
 }
 if (($10 | 0) == 0) {
  $14 = 0;
 } else {
  $12 = $10;
  $13 = $pt;
  HEAP32[$12 >> 2] = HEAP32[$13 >> 2];
  HEAP32[$12 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
  HEAP32[$12 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
  HEAP32[$12 + 12 >> 2] = HEAP32[$13 + 12 >> 2];
  $14 = HEAP32[$__end__i8 >> 2] | 0;
 }
 HEAP32[$__end__i8 >> 2] = $14 + 16;
 return;
}
function __ZN10ClipperLib16clipperExceptionD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 11984;
 if ((HEAP8[$this + 4 | 0] & 1) != 0) {
  __ZdlPv(HEAP32[$this + 12 >> 2] | 0);
 }
 __ZdlPv($this);
 return;
}
function __ZNSt3__16vectorIN10ClipperLib11DoublePointENS_9allocatorIS2_EEE8__appendEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $__first__i_i_i = 0, $__end_ = 0, $1 = 0, $sub_ptr_lhs_cast = 0, $sub_ptr_rhs_cast = 0, $2 = 0, $__n_addr_0_i = 0, $4 = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $sub_ptr_sub_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $retval_i_035 = 0, $retval_i_036 = 0, $cond_i_i = 0, $7 = 0, $__n_addr_0_i17 = 0, $9 = 0, $add_ptr6_i_i = 0, $10 = 0, $sub_ptr_sub_i_i = 0, $add_ptr_i_i = 0, $12 = 0, $13 = 0, label = 0;
 $__first__i_i_i = $this + 8 | 0;
 $__end_ = $this + 4 | 0;
 $1 = HEAP32[$__end_ >> 2] | 0;
 $sub_ptr_lhs_cast = HEAP32[$__first__i_i_i >> 2] | 0;
 $sub_ptr_rhs_cast = $1;
 if ($sub_ptr_lhs_cast - $sub_ptr_rhs_cast >> 4 >>> 0 >= $__n >>> 0) {
  $__n_addr_0_i = $__n;
  $2 = $1;
  do {
   if (($2 | 0) == 0) {
    $4 = 0;
   } else {
    _memset($2 | 0, 0, 16);
    $4 = HEAP32[$__end_ >> 2] | 0;
   }
   $2 = $4 + 16 | 0;
   HEAP32[$__end_ >> 2] = $2;
   $__n_addr_0_i = $__n_addr_0_i - 1 | 0;
  } while (($__n_addr_0_i | 0) != 0);
  return;
 }
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = $sub_ptr_rhs_cast - $sub_ptr_rhs_cast_i >> 4;
 $add = $sub_ptr_div_i + $__n | 0;
 if ($add >>> 0 > 268435455) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $sub_ptr_sub_i_i_i = $sub_ptr_lhs_cast - $sub_ptr_rhs_cast_i | 0;
 if ($sub_ptr_sub_i_i_i >> 4 >>> 0 > 134217726) {
  $retval_i_035 = 268435455;
  label = 7472;
 } else {
  $mul_i = $sub_ptr_sub_i_i_i >> 3;
  $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
  if (($_sroa_speculated | 0) == 0) {
   $cond_i_i = 0;
   $retval_i_036 = 0;
  } else {
   $retval_i_035 = $_sroa_speculated;
   label = 7472;
  }
 }
 if ((label | 0) == 7472) {
  $cond_i_i = __Znwj($retval_i_035 << 4) | 0;
  $retval_i_036 = $retval_i_035;
 }
 $__n_addr_0_i17 = $__n;
 $7 = $cond_i_i + ($sub_ptr_div_i << 4) | 0;
 do {
  if (($7 | 0) == 0) {
   $9 = 0;
  } else {
   _memset($7 | 0, 0, 16);
   $9 = $7;
  }
  $7 = $9 + 16 | 0;
  $__n_addr_0_i17 = $__n_addr_0_i17 - 1 | 0;
 } while (($__n_addr_0_i17 | 0) != 0);
 $add_ptr6_i_i = $cond_i_i + ($retval_i_036 << 4) | 0;
 $10 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i_i = (HEAP32[$__end_ >> 2] | 0) - $10 | 0;
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i - ($sub_ptr_sub_i_i >> 4) << 4) | 0;
 $12 = $add_ptr_i_i;
 $13 = $10;
 _memcpy($12 | 0, $13 | 0, $sub_ptr_sub_i_i) | 0;
 HEAP32[$__begin__i >> 2] = $add_ptr_i_i;
 HEAP32[$__end_ >> 2] = $7;
 HEAP32[$__first__i_i_i >> 2] = $add_ptr6_i_i;
 if (($10 | 0) == 0) {
  return;
 }
 __ZdlPv($13);
 return;
}
function __ZNSt3__111__stdoutbufIwED1Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i_i_i = 0;
 HEAP32[$this >> 2] = 10904;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i_i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 return;
}
function __ZNSt3__111__stdoutbufIwED0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i_i_i_i = 0, $6 = 0;
 HEAP32[$this >> 2] = 10904;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i_i_i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i_i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $6 = $this;
  __ZdlPv($6);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 $6 = $this;
 __ZdlPv($6);
 return;
}
function __ZNSt3__111__stdoutbufIwE4syncEv($this) {
 $this = $this | 0;
 var $__extbuf = 0, $__extbe = 0, $__cv_ = 0, $__st_ = 0, $arraydecay = 0, $add_ptr = 0, $sub_ptr_rhs_cast = 0, $__file_ = 0, $0 = 0, $call_i = 0, $sub_ptr_sub = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbuf = __stackBase__ | 0;
 $__extbe = __stackBase__ + 8 | 0;
 $__cv_ = $this + 36 | 0;
 $__st_ = $this + 40 | 0;
 $arraydecay = $__extbuf | 0;
 $add_ptr = $__extbuf + 8 | 0;
 $sub_ptr_rhs_cast = $__extbuf;
 $__file_ = $this + 32 | 0;
 while (1) {
  $0 = HEAP32[$__cv_ >> 2] | 0;
  $call_i = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 20 >> 2] & 31]($0, HEAP32[$__st_ >> 2] | 0, $arraydecay, $add_ptr, $__extbe) | 0;
  $sub_ptr_sub = (HEAP32[$__extbe >> 2] | 0) - $sub_ptr_rhs_cast | 0;
  if ((_fwrite($arraydecay | 0, 1, $sub_ptr_sub | 0, HEAP32[$__file_ >> 2] | 0) | 0) != ($sub_ptr_sub | 0)) {
   $retval_0 = -1;
   label = 7499;
   break;
  }
  if (($call_i | 0) == 2) {
   $retval_0 = -1;
   label = 7500;
   break;
  } else if (($call_i | 0) != 1) {
   label = 7496;
   break;
  }
 }
 if ((label | 0) == 7496) {
  $retval_0 = ((_fflush(HEAP32[$__file_ >> 2] | 0) | 0) != 0) << 31 >> 31;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else if ((label | 0) == 7500) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else if ((label | 0) == 7499) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNSt3__18ios_base4InitC2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i_i_i_i_i = 0, $4 = 0, $5 = 0, $__shared_owners__i_i_i = 0, $8 = 0, $__shared_owners__i_i_i_i_i_i36 = 0, $11 = 0, $12 = 0, $__shared_owners__i_i_i41 = 0, $15 = 0, $__shared_owners__i_i_i_i_i_i62 = 0, $18 = 0, $19 = 0, $__shared_owners__i_i_i67 = 0, $23 = 0, $24 = 0, $__shared_owners__i_i_i_i_i_i88 = 0, $27 = 0, $28 = 0, $__shared_owners__i_i_i93 = 0, $33 = 0, $38 = 0, $__shared_owners__i_i_i_i_i_i114 = 0, $41 = 0, $42 = 0, $__shared_owners__i_i_i119 = 0, $45 = 0, $__shared_owners__i_i_i_i_i_i140 = 0, $48 = 0, $49 = 0, $__shared_owners__i_i_i145 = 0, $52 = 0, $__shared_owners__i_i_i_i_i_i166 = 0, $55 = 0, $56 = 0, $__shared_owners__i_i_i171 = 0, $60 = 0, $61 = 0, $__shared_owners__i_i_i_i_i_i194 = 0, $64 = 0, $__locale_2_i_i197 = 0, $65 = 0, $_c_i198 = 0, $__shared_owners__i_i_i199 = 0, $66 = 0, $vtable48 = 0, $vbase_offset_ptr49 = 0, $67 = 0, $vbase_offset50 = 0, $add_ptr51_sum = 0, $__tie__i259 = 0, $68 = 0, $vtable53 = 0, $vbase_offset_ptr54 = 0, $69 = 0, $vbase_offset55 = 0, $add_ptr56_sum = 0, $__fmtflags__i_i266 = 0, $70 = 0, $71 = 0, $or_i_i268 = 0, $vtable58 = 0, $vbase_offset_ptr59 = 0, $72 = 0, $vbase_offset60 = 0, $add_ptr61_sum = 0, $__tie__i273 = 0, $73 = 0;
 __ZNSt3__110__stdinbufIcEC2EP7__sFILEP10_mbstate_t(17240, HEAP32[_stdin >> 2] | 0, 17312);
 HEAP32[4544] = 11196;
 HEAP32[4546] = 11216;
 HEAP32[4545] = 0;
 HEAP32[4552] = 17240;
 HEAP32[4550] = 0;
 HEAP32[4551] = 0;
 HEAP32[4547] = 4098;
 HEAP32[4549] = 0;
 HEAP32[4548] = 6;
 _memset(18216, 0, 40);
 if (HEAP8[18400] | 0) {
  $4 = HEAP32[2036] | 0;
 } else {
  if (HEAP8[18408] | 0) {
   $1 = HEAP32[HEAP32[2038] >> 2] | 0;
  } else {
   __ZNSt3__16locale5__impC2Ej(8448, 1);
   HEAP32[2040] = 8448;
   HEAP32[2038] = 8160;
   HEAP8[18408] = 1;
   $1 = 8448;
  }
  HEAP32[2042] = $1;
  $__shared_owners__i_i_i_i_i_i = $1 + 4 | 0;
  tempValue = HEAP32[$__shared_owners__i_i_i_i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i_i_i >> 2] = tempValue + 1, tempValue;
  HEAP32[2036] = 8168;
  HEAP8[18400] = 1;
  $4 = 8168;
 }
 $5 = HEAP32[$4 >> 2] | 0;
 HEAP32[4553] = $5;
 $__shared_owners__i_i_i = $5 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i >> 2] = tempValue + 1, tempValue;
 HEAP32[4564] = 0;
 HEAP32[4565] = -1;
 __ZNSt3__111__stdoutbufIcEC2EP7__sFILEP10_mbstate_t(17144, HEAP32[_stdout >> 2] | 0, 17320);
 HEAP32[4478] = 11100;
 HEAP32[4479] = 11120;
 HEAP32[4485] = 17144;
 HEAP32[4483] = 0;
 HEAP32[4484] = 0;
 HEAP32[4480] = 4098;
 HEAP32[4482] = 0;
 HEAP32[4481] = 6;
 _memset(17948, 0, 40);
 if (HEAP8[18400] | 0) {
  $11 = HEAP32[2036] | 0;
 } else {
  if (HEAP8[18408] | 0) {
   $8 = HEAP32[HEAP32[2038] >> 2] | 0;
  } else {
   __ZNSt3__16locale5__impC2Ej(8448, 1);
   HEAP32[2040] = 8448;
   HEAP32[2038] = 8160;
   HEAP8[18408] = 1;
   $8 = 8448;
  }
  HEAP32[2042] = $8;
  $__shared_owners__i_i_i_i_i_i36 = $8 + 4 | 0;
  tempValue = HEAP32[$__shared_owners__i_i_i_i_i_i36 >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i_i_i36 >> 2] = tempValue + 1, tempValue;
  HEAP32[2036] = 8168;
  HEAP8[18400] = 1;
  $11 = 8168;
 }
 $12 = HEAP32[$11 >> 2] | 0;
 HEAP32[4486] = $12;
 $__shared_owners__i_i_i41 = $12 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i_i41 >> 2] | 0, HEAP32[$__shared_owners__i_i_i41 >> 2] = tempValue + 1, tempValue;
 HEAP32[4497] = 0;
 HEAP32[4498] = -1;
 __ZNSt3__111__stdoutbufIcEC2EP7__sFILEP10_mbstate_t(17192, HEAP32[_stderr >> 2] | 0, 17328);
 HEAP32[4522] = 11100;
 HEAP32[4523] = 11120;
 HEAP32[4529] = 17192;
 HEAP32[4527] = 0;
 HEAP32[4528] = 0;
 HEAP32[4524] = 4098;
 HEAP32[4526] = 0;
 HEAP32[4525] = 6;
 _memset(18124, 0, 40);
 if (HEAP8[18400] | 0) {
  $18 = HEAP32[2036] | 0;
 } else {
  if (HEAP8[18408] | 0) {
   $15 = HEAP32[HEAP32[2038] >> 2] | 0;
  } else {
   __ZNSt3__16locale5__impC2Ej(8448, 1);
   HEAP32[2040] = 8448;
   HEAP32[2038] = 8160;
   HEAP8[18408] = 1;
   $15 = 8448;
  }
  HEAP32[2042] = $15;
  $__shared_owners__i_i_i_i_i_i62 = $15 + 4 | 0;
  tempValue = HEAP32[$__shared_owners__i_i_i_i_i_i62 >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i_i_i62 >> 2] = tempValue + 1, tempValue;
  HEAP32[2036] = 8168;
  HEAP8[18400] = 1;
  $18 = 8168;
 }
 $19 = HEAP32[$18 >> 2] | 0;
 HEAP32[4530] = $19;
 $__shared_owners__i_i_i67 = $19 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i_i67 >> 2] | 0, HEAP32[$__shared_owners__i_i_i67 >> 2] = tempValue + 1, tempValue;
 HEAP32[4541] = 0;
 HEAP32[4542] = -1;
 $23 = HEAP32[(HEAP32[(HEAP32[4522] | 0) - 12 >> 2] | 0) + 18112 >> 2] | 0;
 HEAP32[4500] = 11100;
 HEAP32[4501] = 11120;
 HEAP32[4507] = $23;
 HEAP32[4505] = ($23 | 0) == 0 & 1;
 HEAP32[4506] = 0;
 HEAP32[4502] = 4098;
 HEAP32[4504] = 0;
 HEAP32[4503] = 6;
 _memset(18036, 0, 40);
 if (HEAP8[18400] | 0) {
  $27 = HEAP32[2036] | 0;
 } else {
  if (HEAP8[18408] | 0) {
   $24 = HEAP32[HEAP32[2038] >> 2] | 0;
  } else {
   __ZNSt3__16locale5__impC2Ej(8448, 1);
   HEAP32[2040] = 8448;
   HEAP32[2038] = 8160;
   HEAP8[18408] = 1;
   $24 = 8448;
  }
  HEAP32[2042] = $24;
  $__shared_owners__i_i_i_i_i_i88 = $24 + 4 | 0;
  tempValue = HEAP32[$__shared_owners__i_i_i_i_i_i88 >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i_i_i88 >> 2] = tempValue + 1, tempValue;
  HEAP32[2036] = 8168;
  HEAP8[18400] = 1;
  $27 = 8168;
 }
 $28 = HEAP32[$27 >> 2] | 0;
 HEAP32[4508] = $28;
 $__shared_owners__i_i_i93 = $28 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i_i93 >> 2] | 0, HEAP32[$__shared_owners__i_i_i93 >> 2] = tempValue + 1, tempValue;
 HEAP32[4519] = 0;
 HEAP32[4520] = -1;
 HEAP32[(HEAP32[(HEAP32[4544] | 0) - 12 >> 2] | 0) + 18248 >> 2] = 17912;
 $33 = (HEAP32[(HEAP32[4522] | 0) - 12 >> 2] | 0) + 18092 | 0;
 HEAP32[$33 >> 2] = HEAP32[$33 >> 2] | 8192;
 HEAP32[(HEAP32[(HEAP32[4522] | 0) - 12 >> 2] | 0) + 18160 >> 2] = 17912;
 __ZNSt3__110__stdinbufIwEC2EP7__sFILEP10_mbstate_t(17088, HEAP32[_stdin >> 2] | 0, 17336);
 HEAP32[4456] = 11148;
 HEAP32[4458] = 11168;
 HEAP32[4457] = 0;
 HEAP32[4464] = 17088;
 HEAP32[4462] = 0;
 HEAP32[4463] = 0;
 HEAP32[4459] = 4098;
 HEAP32[4461] = 0;
 HEAP32[4460] = 6;
 _memset(17864, 0, 40);
 if (HEAP8[18400] | 0) {
  $41 = HEAP32[2036] | 0;
 } else {
  if (HEAP8[18408] | 0) {
   $38 = HEAP32[HEAP32[2038] >> 2] | 0;
  } else {
   __ZNSt3__16locale5__impC2Ej(8448, 1);
   HEAP32[2040] = 8448;
   HEAP32[2038] = 8160;
   HEAP8[18408] = 1;
   $38 = 8448;
  }
  HEAP32[2042] = $38;
  $__shared_owners__i_i_i_i_i_i114 = $38 + 4 | 0;
  tempValue = HEAP32[$__shared_owners__i_i_i_i_i_i114 >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i_i_i114 >> 2] = tempValue + 1, tempValue;
  HEAP32[2036] = 8168;
  HEAP8[18400] = 1;
  $41 = 8168;
 }
 $42 = HEAP32[$41 >> 2] | 0;
 HEAP32[4465] = $42;
 $__shared_owners__i_i_i119 = $42 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i_i119 >> 2] | 0, HEAP32[$__shared_owners__i_i_i119 >> 2] = tempValue + 1, tempValue;
 HEAP32[4476] = 0;
 HEAP32[4477] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP7__sFILEP10_mbstate_t(16992, HEAP32[_stdout >> 2] | 0, 17344);
 HEAP32[4386] = 11052;
 HEAP32[4387] = 11072;
 HEAP32[4393] = 16992;
 HEAP32[4391] = 0;
 HEAP32[4392] = 0;
 HEAP32[4388] = 4098;
 HEAP32[4390] = 0;
 HEAP32[4389] = 6;
 _memset(17580, 0, 40);
 if (HEAP8[18400] | 0) {
  $48 = HEAP32[2036] | 0;
 } else {
  if (HEAP8[18408] | 0) {
   $45 = HEAP32[HEAP32[2038] >> 2] | 0;
  } else {
   __ZNSt3__16locale5__impC2Ej(8448, 1);
   HEAP32[2040] = 8448;
   HEAP32[2038] = 8160;
   HEAP8[18408] = 1;
   $45 = 8448;
  }
  HEAP32[2042] = $45;
  $__shared_owners__i_i_i_i_i_i140 = $45 + 4 | 0;
  tempValue = HEAP32[$__shared_owners__i_i_i_i_i_i140 >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i_i_i140 >> 2] = tempValue + 1, tempValue;
  HEAP32[2036] = 8168;
  HEAP8[18400] = 1;
  $48 = 8168;
 }
 $49 = HEAP32[$48 >> 2] | 0;
 HEAP32[4394] = $49;
 $__shared_owners__i_i_i145 = $49 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i_i145 >> 2] | 0, HEAP32[$__shared_owners__i_i_i145 >> 2] = tempValue + 1, tempValue;
 HEAP32[4405] = 0;
 HEAP32[4406] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP7__sFILEP10_mbstate_t(17040, HEAP32[_stderr >> 2] | 0, 17352);
 HEAP32[4430] = 11052;
 HEAP32[4431] = 11072;
 HEAP32[4437] = 17040;
 HEAP32[4435] = 0;
 HEAP32[4436] = 0;
 HEAP32[4432] = 4098;
 HEAP32[4434] = 0;
 HEAP32[4433] = 6;
 _memset(17756, 0, 40);
 if (HEAP8[18400] | 0) {
  $55 = HEAP32[2036] | 0;
 } else {
  if (HEAP8[18408] | 0) {
   $52 = HEAP32[HEAP32[2038] >> 2] | 0;
  } else {
   __ZNSt3__16locale5__impC2Ej(8448, 1);
   HEAP32[2040] = 8448;
   HEAP32[2038] = 8160;
   HEAP8[18408] = 1;
   $52 = 8448;
  }
  HEAP32[2042] = $52;
  $__shared_owners__i_i_i_i_i_i166 = $52 + 4 | 0;
  tempValue = HEAP32[$__shared_owners__i_i_i_i_i_i166 >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i_i_i166 >> 2] = tempValue + 1, tempValue;
  HEAP32[2036] = 8168;
  HEAP8[18400] = 1;
  $55 = 8168;
 }
 $56 = HEAP32[$55 >> 2] | 0;
 HEAP32[4438] = $56;
 $__shared_owners__i_i_i171 = $56 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i_i171 >> 2] | 0, HEAP32[$__shared_owners__i_i_i171 >> 2] = tempValue + 1, tempValue;
 HEAP32[4449] = 0;
 HEAP32[4450] = -1;
 $60 = HEAP32[(HEAP32[(HEAP32[4430] | 0) - 12 >> 2] | 0) + 17744 >> 2] | 0;
 HEAP32[4408] = 11052;
 HEAP32[4409] = 11072;
 HEAP32[4415] = $60;
 HEAP32[4413] = ($60 | 0) == 0 & 1;
 HEAP32[4414] = 0;
 HEAP32[4410] = 4098;
 HEAP32[4412] = 0;
 HEAP32[4411] = 6;
 _memset(17668, 0, 40);
 if (HEAP8[18400] | 0) {
  $64 = HEAP32[2036] | 0;
  $__locale_2_i_i197 = $64 | 0;
  $65 = HEAP32[$__locale_2_i_i197 >> 2] | 0;
  $_c_i198 = $65;
  HEAP32[4416] = $_c_i198;
  $__shared_owners__i_i_i199 = $65 + 4 | 0;
  $66 = (tempValue = HEAP32[$__shared_owners__i_i_i199 >> 2] | 0, HEAP32[$__shared_owners__i_i_i199 >> 2] = tempValue + 1, tempValue);
  HEAP32[4427] = 0;
  HEAP32[4428] = -1;
  $vtable48 = HEAP32[4456] | 0;
  $vbase_offset_ptr49 = $vtable48 - 12 | 0;
  $67 = $vbase_offset_ptr49;
  $vbase_offset50 = HEAP32[$67 >> 2] | 0;
  $add_ptr51_sum = $vbase_offset50 + 72 | 0;
  $__tie__i259 = 17824 + $add_ptr51_sum | 0;
  $68 = $__tie__i259;
  HEAP32[$68 >> 2] = 17544;
  $vtable53 = HEAP32[4430] | 0;
  $vbase_offset_ptr54 = $vtable53 - 12 | 0;
  $69 = $vbase_offset_ptr54;
  $vbase_offset55 = HEAP32[$69 >> 2] | 0;
  $add_ptr56_sum = $vbase_offset55 + 4 | 0;
  $__fmtflags__i_i266 = 17720 + $add_ptr56_sum | 0;
  $70 = $__fmtflags__i_i266;
  $71 = HEAP32[$70 >> 2] | 0;
  $or_i_i268 = $71 | 8192;
  HEAP32[$70 >> 2] = $or_i_i268;
  $vtable58 = HEAP32[4430] | 0;
  $vbase_offset_ptr59 = $vtable58 - 12 | 0;
  $72 = $vbase_offset_ptr59;
  $vbase_offset60 = HEAP32[$72 >> 2] | 0;
  $add_ptr61_sum = $vbase_offset60 + 72 | 0;
  $__tie__i273 = 17720 + $add_ptr61_sum | 0;
  $73 = $__tie__i273;
  HEAP32[$73 >> 2] = 17544;
  return;
 }
 if (HEAP8[18408] | 0) {
  $61 = HEAP32[HEAP32[2038] >> 2] | 0;
 } else {
  __ZNSt3__16locale5__impC2Ej(8448, 1);
  HEAP32[2040] = 8448;
  HEAP32[2038] = 8160;
  HEAP8[18408] = 1;
  $61 = 8448;
 }
 HEAP32[2042] = $61;
 $__shared_owners__i_i_i_i_i_i194 = $61 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i_i_i_i_i194 >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i_i_i194 >> 2] = tempValue + 1, tempValue;
 HEAP32[2036] = 8168;
 HEAP8[18400] = 1;
 $64 = 8168;
 $__locale_2_i_i197 = $64 | 0;
 $65 = HEAP32[$__locale_2_i_i197 >> 2] | 0;
 $_c_i198 = $65;
 HEAP32[4416] = $_c_i198;
 $__shared_owners__i_i_i199 = $65 + 4 | 0;
 $66 = (tempValue = HEAP32[$__shared_owners__i_i_i199 >> 2] | 0, HEAP32[$__shared_owners__i_i_i199 >> 2] = tempValue + 1, tempValue);
 HEAP32[4427] = 0;
 HEAP32[4428] = -1;
 $vtable48 = HEAP32[4456] | 0;
 $vbase_offset_ptr49 = $vtable48 - 12 | 0;
 $67 = $vbase_offset_ptr49;
 $vbase_offset50 = HEAP32[$67 >> 2] | 0;
 $add_ptr51_sum = $vbase_offset50 + 72 | 0;
 $__tie__i259 = 17824 + $add_ptr51_sum | 0;
 $68 = $__tie__i259;
 HEAP32[$68 >> 2] = 17544;
 $vtable53 = HEAP32[4430] | 0;
 $vbase_offset_ptr54 = $vtable53 - 12 | 0;
 $69 = $vbase_offset_ptr54;
 $vbase_offset55 = HEAP32[$69 >> 2] | 0;
 $add_ptr56_sum = $vbase_offset55 + 4 | 0;
 $__fmtflags__i_i266 = 17720 + $add_ptr56_sum | 0;
 $70 = $__fmtflags__i_i266;
 $71 = HEAP32[$70 >> 2] | 0;
 $or_i_i268 = $71 | 8192;
 HEAP32[$70 >> 2] = $or_i_i268;
 $vtable58 = HEAP32[4430] | 0;
 $vbase_offset_ptr59 = $vtable58 - 12 | 0;
 $72 = $vbase_offset_ptr59;
 $vbase_offset60 = HEAP32[$72 >> 2] | 0;
 $add_ptr61_sum = $vbase_offset60 + 72 | 0;
 $__tie__i273 = 17720 + $add_ptr61_sum | 0;
 $73 = $__tie__i273;
 HEAP32[$73 >> 2] = 17544;
 return;
}
function __ZNSt3__18ios_base4InitD2Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(17912) | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(18e3) | 0;
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(17544) | 0;
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(17632) | 0;
 return;
}
function __ZNSt3__111__stdoutbufIwEC2EP7__sFILEP10_mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $__p_i_i_i = 0, $0 = 0, $1 = 0, $__shared_owners__i_i_i_i_i_i = 0, $4 = 0, $__locale__i_i = 0, $5 = 0, $__shared_owners__i_i_i = 0, $__cv_ = 0, $8 = 0, $__shared_owners__i_i = 0, $sub_i_i = 0, $14 = 0, $15 = 0, $exception_i_i = 0, $17 = 0, $__st_ = 0, $__always_noconv_ = 0, $22 = 0, $vtable_i = 0, $vfn_i = 0, $23 = 0, $call_i = 0, $frombool = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p_i_i_i = __stackBase__ | 0;
 $0 = $this | 0;
 HEAP32[$0 >> 2] = 10904;
 if (HEAP8[18400] | 0) {
  $4 = HEAP32[2036] | 0;
 } else {
  if (HEAP8[18408] | 0) {
   $1 = HEAP32[HEAP32[2038] >> 2] | 0;
  } else {
   __ZNSt3__16locale5__impC2Ej(8448, 1);
   HEAP32[2040] = 8448;
   HEAP32[2038] = 8160;
   HEAP8[18408] = 1;
   $1 = 8448;
  }
  HEAP32[2042] = $1;
  $__shared_owners__i_i_i_i_i_i = $1 + 4 | 0;
  tempValue = HEAP32[$__shared_owners__i_i_i_i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i_i_i >> 2] = tempValue + 1, tempValue;
  HEAP32[2036] = 8168;
  HEAP8[18400] = 1;
  $4 = 8168;
 }
 $__locale__i_i = $this + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $5;
 $__shared_owners__i_i_i = $5 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i >> 2] = tempValue + 1, tempValue;
 _memset($this + 8 | 0, 0, 24);
 HEAP32[$0 >> 2] = 11272;
 HEAP32[$this + 32 >> 2] = $__fp;
 $__cv_ = $this + 36 | 0;
 $8 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i_i = $8 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4376] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17504;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17504, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4377] | 0) - 1 | 0;
 $14 = HEAP32[$8 + 8 >> 2] | 0;
 do {
  if ((HEAP32[$8 + 12 >> 2] | 0) - $14 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $15 = HEAP32[$14 + ($sub_i_i << 2) >> 2] | 0;
   if (($15 | 0) == 0) {
    break;
   }
   $17 = $15;
   if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    HEAP32[$__cv_ >> 2] = $17;
    $__st_ = $this + 40 | 0;
    HEAP32[$__st_ >> 2] = $__st;
    $__always_noconv_ = $this + 44 | 0;
    $22 = $15;
    $vtable_i = HEAP32[$22 >> 2] | 0;
    $vfn_i = $vtable_i + 28 | 0;
    $23 = HEAP32[$vfn_i >> 2] | 0;
    $call_i = FUNCTION_TABLE_ii[$23 & 255]($17) | 0;
    $frombool = $call_i & 1;
    HEAP8[$__always_noconv_] = $frombool;
    STACKTOP = __stackBase__;
    return;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$8 >> 2] | 0) + 8 >> 2] & 511]($8 | 0);
   HEAP32[$__cv_ >> 2] = $17;
   $__st_ = $this + 40 | 0;
   HEAP32[$__st_ >> 2] = $__st;
   $__always_noconv_ = $this + 44 | 0;
   $22 = $15;
   $vtable_i = HEAP32[$22 >> 2] | 0;
   $vfn_i = $vtable_i + 28 | 0;
   $23 = HEAP32[$vfn_i >> 2] | 0;
   $call_i = FUNCTION_TABLE_ii[$23 & 255]($17) | 0;
   $frombool = $call_i & 1;
   HEAP8[$__always_noconv_] = $frombool;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $__p_i_i_i = 0, $2 = 0, $sub_i_i = 0, $7 = 0, $8 = 0, $exception_i_i = 0, $9 = 0, $10 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p_i_i_i = __stackBase__ | 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 255]($this) | 0;
 $2 = HEAP32[$__loc >> 2] | 0;
 if ((HEAP32[4376] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17504;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17504, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4377] | 0) - 1 | 0;
 $7 = HEAP32[$2 + 8 >> 2] | 0;
 if ((HEAP32[$2 + 12 >> 2] | 0) - $7 >> 2 >>> 0 <= $sub_i_i >>> 0) {
  $exception_i_i = ___cxa_allocate_exception(4) | 0;
  $9 = $exception_i_i;
  HEAP32[$9 >> 2] = 9184;
  ___cxa_throw($exception_i_i | 0, 15328, 208);
 }
 $8 = HEAP32[$7 + ($sub_i_i << 2) >> 2] | 0;
 if (($8 | 0) == 0) {
  $exception_i_i = ___cxa_allocate_exception(4) | 0;
  $9 = $exception_i_i;
  HEAP32[$9 >> 2] = 9184;
  ___cxa_throw($exception_i_i | 0, 15328, 208);
 } else {
  $10 = $8;
  HEAP32[$this + 36 >> 2] = $10;
  HEAP8[$this + 44 | 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 255]($10) | 0) & 1;
  STACKTOP = __stackBase__;
  return;
 }
}
function __ZNSt3__111__stdoutbufIwE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $__extbuf = 0, $__1buf = 0, $__extbe = 0, $__e = 0, $cmp_i = 0, $add_ptr = 0, $__nout__i108 = 0, $__bout__i109 = 0, $__eout__i110 = 0, $arraydecay = 0, $__cv_ = 0, $__st_ = 0, $add_ptr14 = 0, $sub_ptr_rhs_cast = 0, $__file_36 = 0, $4 = 0, $5 = 0, $6 = 0, $call_i = 0, $11 = 0, $sub_ptr_sub = 0, $17 = 0, $18 = 0, $add_ptr_i = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = __stackBase__ | 0;
 $__1buf = __stackBase__ + 8 | 0;
 $__extbe = __stackBase__ + 16 | 0;
 $__e = __stackBase__ + 24 | 0;
 $cmp_i = ($__c | 0) == -1;
 if (!$cmp_i) {
  $add_ptr = $__1buf + 4 | 0;
  $__nout__i108 = $this + 24 | 0;
  $__bout__i109 = $this + 20 | 0;
  HEAP32[$__bout__i109 >> 2] = $__1buf;
  $__eout__i110 = $this + 28 | 0;
  HEAP32[$__eout__i110 >> 2] = $add_ptr;
  HEAP32[$__1buf >> 2] = $__c;
  HEAP32[$__nout__i108 >> 2] = $add_ptr;
  L8875 : do {
   if ((HEAP8[$this + 44 | 0] & 1) == 0) {
    $arraydecay = $__extbuf | 0;
    HEAP32[$__extbe >> 2] = $arraydecay;
    $__cv_ = $this + 36 | 0;
    $__st_ = $this + 40 | 0;
    $add_ptr14 = $__extbuf + 8 | 0;
    $sub_ptr_rhs_cast = $__extbuf;
    $__file_36 = $this + 32 | 0;
    $5 = $__1buf;
    $4 = $add_ptr;
    while (1) {
     $6 = HEAP32[$__cv_ >> 2] | 0;
     $call_i = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 12 >> 2] & 31]($6, HEAP32[$__st_ >> 2] | 0, $5, $4, $__e, $arraydecay, $add_ptr14, $__extbe) | 0;
     $11 = HEAP32[$__bout__i109 >> 2] | 0;
     if ((HEAP32[$__e >> 2] | 0) == ($11 | 0)) {
      $retval_0 = -1;
      label = 7624;
      break;
     }
     if (($call_i | 0) == 3) {
      label = 7612;
      break;
     }
     if ($call_i >>> 0 >= 2) {
      $retval_0 = -1;
      label = 7622;
      break;
     }
     $sub_ptr_sub = (HEAP32[$__extbe >> 2] | 0) - $sub_ptr_rhs_cast | 0;
     if ((_fwrite($arraydecay | 0, 1, $sub_ptr_sub | 0, HEAP32[$__file_36 >> 2] | 0) | 0) != ($sub_ptr_sub | 0)) {
      $retval_0 = -1;
      label = 7625;
      break;
     }
     if (($call_i | 0) != 1) {
      break L8875;
     }
     $17 = HEAP32[$__e >> 2] | 0;
     $18 = HEAP32[$__nout__i108 >> 2] | 0;
     HEAP32[$__bout__i109 >> 2] = $17;
     HEAP32[$__eout__i110 >> 2] = $18;
     $add_ptr_i = $17 + ($18 - $17 >> 2 << 2) | 0;
     HEAP32[$__nout__i108 >> 2] = $add_ptr_i;
     $5 = $17;
     $4 = $add_ptr_i;
    }
    if ((label | 0) == 7612) {
     if ((_fwrite($11 | 0, 1, 1, HEAP32[$__file_36 >> 2] | 0) | 0) == 1) {
      break;
     } else {
      $retval_0 = -1;
     }
     STACKTOP = __stackBase__;
     return $retval_0 | 0;
    } else if ((label | 0) == 7625) {
     STACKTOP = __stackBase__;
     return $retval_0 | 0;
    } else if ((label | 0) == 7624) {
     STACKTOP = __stackBase__;
     return $retval_0 | 0;
    } else if ((label | 0) == 7622) {
     STACKTOP = __stackBase__;
     return $retval_0 | 0;
    }
   } else {
    if ((_fwrite($__1buf | 0, 4, 1, HEAP32[$this + 32 >> 2] | 0) | 0) == 1) {
     break;
    } else {
     $retval_0 = -1;
    }
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   }
  } while (0);
  HEAP32[$__nout__i108 >> 2] = 0;
  HEAP32[$__bout__i109 >> 2] = 0;
  HEAP32[$__eout__i110 >> 2] = 0;
 }
 $retval_0 = $cmp_i ? 0 : $__c;
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __ZNSt3__110__stdinbufIwED1Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i_i_i = 0;
 HEAP32[$this >> 2] = 10904;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i_i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 return;
}
function __ZNSt3__110__stdinbufIwED0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i_i_i_i = 0, $6 = 0;
 HEAP32[$this >> 2] = 10904;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i_i_i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i_i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $6 = $this;
  __ZdlPv($6);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 $6 = $this;
 __ZdlPv($6);
 return;
}
function __ZNSt3__110__stdinbufIwE9underflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIwE9__getcharEb($this, 0) | 0;
}
function __ZNSt3__110__stdinbufIwE5uflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIwE9__getcharEb($this, 1) | 0;
}
function __ZNSt3__110__stdinbufIwE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $__extbuf = 0, $__enxt = 0, $__ci = 0, $0 = 0, $arraydecay = 0, $call_i = 0, $__file_ = 0, $4 = 0, $incdec_ptr = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = __stackBase__ | 0;
 $__enxt = __stackBase__ + 8 | 0;
 $__ci = __stackBase__ + 16 | 0;
 if (($__c | 0) == -1) {
  $retval_0 = -1;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 HEAP32[$__ci >> 2] = $__c;
 $0 = HEAP32[$this + 36 >> 2] | 0;
 $arraydecay = $__extbuf | 0;
 $call_i = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] & 31]($0, HEAP32[$this + 40 >> 2] | 0, $__ci, $__ci + 4 | 0, __stackBase__ + 24 | 0, $arraydecay, $__extbuf + 8 | 0, $__enxt) | 0;
 if (($call_i | 0) == 3) {
  HEAP8[$arraydecay] = $__c & 255;
  HEAP32[$__enxt >> 2] = $__extbuf + 1;
 } else if (($call_i | 0) == 2 | ($call_i | 0) == 1) {
  $retval_0 = -1;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $__file_ = $this + 32 | 0;
 while (1) {
  $4 = HEAP32[$__enxt >> 2] | 0;
  if ($4 >>> 0 <= $arraydecay >>> 0) {
   $retval_0 = $__c;
   label = 7647;
   break;
  }
  $incdec_ptr = $4 - 1 | 0;
  HEAP32[$__enxt >> 2] = $incdec_ptr;
  if ((_ungetc(HEAP8[$incdec_ptr] | 0, HEAP32[$__file_ >> 2] | 0) | 0) == -1) {
   $retval_0 = -1;
   label = 7648;
   break;
  }
 }
 if ((label | 0) == 7648) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else if ((label | 0) == 7647) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNSt3__110__stdinbufIwE9__getcharEb($this, $__consume) {
 $this = $this | 0;
 $__consume = $__consume | 0;
 var $__extbuf = 0, $__1buf = 0, $__enxt = 0, $__inxt = 0, $0 = 0, $_sroa_speculated = 0, $__file_ = 0, $__i_023 = 0, $call2 = 0, $__st_ = 0, $__cv_ = 0, $arraydecay = 0, $add_ptr10 = 0, $__file_19 = 0, $__nread_0 = 0, $5 = 0, $6 = 0, $7$0 = 0, $7$1 = 0, $8 = 0, $add_ptr = 0, $call_i = 0, $12 = 0, $call20 = 0, $__nread_2 = 0, $__file_44 = 0, $__i37_0 = 0, $dec = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = __stackBase__ | 0;
 $__1buf = __stackBase__ + 8 | 0;
 $__enxt = __stackBase__ + 16 | 0;
 $__inxt = __stackBase__ + 24 | 0;
 $0 = HEAP32[$this + 44 >> 2] | 0;
 $_sroa_speculated = ($0 | 0) > 1 ? $0 : 1;
 L8922 : do {
  if (($_sroa_speculated | 0) > 0) {
   $__file_ = $this + 32 | 0;
   $__i_023 = 0;
   while (1) {
    $call2 = _fgetc(HEAP32[$__file_ >> 2] | 0) | 0;
    if (($call2 | 0) == -1) {
     $retval_0 = -1;
     break;
    }
    HEAP8[$__extbuf + $__i_023 | 0] = $call2 & 255;
    $__i_023 = $__i_023 + 1 | 0;
    if (($__i_023 | 0) >= ($_sroa_speculated | 0)) {
     break L8922;
    }
   }
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  }
 } while (0);
 L8929 : do {
  if ((HEAP8[$this + 48 | 0] & 1) == 0) {
   $__st_ = $this + 40 | 0;
   $__cv_ = $this + 36 | 0;
   $arraydecay = $__extbuf | 0;
   $add_ptr10 = $__1buf + 4 | 0;
   $__file_19 = $this + 32 | 0;
   $__nread_0 = $_sroa_speculated;
   while (1) {
    $5 = HEAP32[$__st_ >> 2] | 0;
    $6 = $5;
    $7$0 = HEAP32[$6 >> 2] | 0;
    $7$1 = HEAP32[$6 + 4 >> 2] | 0;
    $8 = HEAP32[$__cv_ >> 2] | 0;
    $add_ptr = $__extbuf + $__nread_0 | 0;
    $call_i = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] & 31]($8, $5, $arraydecay, $add_ptr, $__enxt, $__1buf, $add_ptr10, $__inxt) | 0;
    if (($call_i | 0) == 2) {
     $retval_0 = -1;
     label = 7669;
     break;
    } else if (($call_i | 0) == 3) {
     label = 7659;
     break;
    } else if (($call_i | 0) != 1) {
     $__nread_2 = $__nread_0;
     break L8929;
    }
    $12 = HEAP32[$__st_ >> 2] | 0;
    HEAP32[$12 >> 2] = $7$0;
    HEAP32[$12 + 4 >> 2] = $7$1;
    if (($__nread_0 | 0) == 8) {
     $retval_0 = -1;
     label = 7667;
     break;
    }
    $call20 = _fgetc(HEAP32[$__file_19 >> 2] | 0) | 0;
    if (($call20 | 0) == -1) {
     $retval_0 = -1;
     label = 7668;
     break;
    }
    HEAP8[$add_ptr] = $call20 & 255;
    $__nread_0 = $__nread_0 + 1 | 0;
   }
   if ((label | 0) == 7669) {
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   } else if ((label | 0) == 7659) {
    HEAP32[$__1buf >> 2] = HEAP8[$arraydecay] | 0;
    $__nread_2 = $__nread_0;
    break;
   } else if ((label | 0) == 7667) {
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   } else if ((label | 0) == 7668) {
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   }
  } else {
   HEAP32[$__1buf >> 2] = HEAP8[$__extbuf | 0] | 0;
   $__nread_2 = $_sroa_speculated;
  }
 } while (0);
 L8943 : do {
  if (!$__consume) {
   $__file_44 = $this + 32 | 0;
   $__i37_0 = $__nread_2;
   while (1) {
    if (($__i37_0 | 0) <= 0) {
     break L8943;
    }
    $dec = $__i37_0 - 1 | 0;
    if ((_ungetc(HEAP8[$__extbuf + $dec | 0] | 0, HEAP32[$__file_44 >> 2] | 0) | 0) == -1) {
     $retval_0 = -1;
     break;
    } else {
     $__i37_0 = $dec;
    }
   }
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  }
 } while (0);
 $retval_0 = HEAP32[$__1buf >> 2] | 0;
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __ZNSt3__111__stdoutbufIcED1Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i_i_i = 0;
 HEAP32[$this >> 2] = 10976;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i_i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 return;
}
function __ZNSt3__111__stdoutbufIcED0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i_i_i_i = 0, $6 = 0;
 HEAP32[$this >> 2] = 10976;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i_i_i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i_i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $6 = $this;
  __ZdlPv($6);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 $6 = $this;
 __ZdlPv($6);
 return;
}
function __ZNSt3__110__stdinbufIwEC2EP7__sFILEP10_mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $__p_i_i_i = 0, $0 = 0, $1 = 0, $__shared_owners__i_i_i_i_i_i = 0, $4 = 0, $__locale__i_i = 0, $5 = 0, $__shared_owners__i_i_i = 0, $8 = 0, $__shared_owners__i_i = 0, $sub_i_i = 0, $14 = 0, $15 = 0, $exception_i_i = 0, $17 = 0, $__cv__i = 0, $__encoding__i = 0, $20 = 0, $exception_i = 0, $__imp__i = 0, $call3_i24 = 0, $add_ptr_i = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p_i_i_i = __stackBase__ | 0;
 $0 = $this | 0;
 HEAP32[$0 >> 2] = 10904;
 if (HEAP8[18400] | 0) {
  $4 = HEAP32[2036] | 0;
 } else {
  if (HEAP8[18408] | 0) {
   $1 = HEAP32[HEAP32[2038] >> 2] | 0;
  } else {
   __ZNSt3__16locale5__impC2Ej(8448, 1);
   HEAP32[2040] = 8448;
   HEAP32[2038] = 8160;
   HEAP8[18408] = 1;
   $1 = 8448;
  }
  HEAP32[2042] = $1;
  $__shared_owners__i_i_i_i_i_i = $1 + 4 | 0;
  tempValue = HEAP32[$__shared_owners__i_i_i_i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i_i_i >> 2] = tempValue + 1, tempValue;
  HEAP32[2036] = 8168;
  HEAP8[18400] = 1;
  $4 = 8168;
 }
 $__locale__i_i = $this + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $5;
 $__shared_owners__i_i_i = $5 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i >> 2] = tempValue + 1, tempValue;
 _memset($this + 8 | 0, 0, 24);
 HEAP32[$0 >> 2] = 11672;
 HEAP32[$this + 32 >> 2] = $__fp;
 HEAP32[$this + 40 >> 2] = $__st;
 $8 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i_i = $8 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4376] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17504;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17504, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4377] | 0) - 1 | 0;
 $14 = HEAP32[$8 + 8 >> 2] | 0;
 do {
  if ((HEAP32[$8 + 12 >> 2] | 0) - $14 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $15 = HEAP32[$14 + ($sub_i_i << 2) >> 2] | 0;
   if (($15 | 0) == 0) {
    break;
   }
   $17 = $15;
   $__cv__i = $this + 36 | 0;
   HEAP32[$__cv__i >> 2] = $17;
   $__encoding__i = $this + 44 | 0;
   HEAP32[$__encoding__i >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 24 >> 2] & 255]($17) | 0;
   $20 = HEAP32[$__cv__i >> 2] | 0;
   HEAP8[$this + 48 | 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 28 >> 2] & 255]($20) | 0) & 1;
   if ((HEAP32[$__encoding__i >> 2] | 0) <= 8) {
    if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
     STACKTOP = __stackBase__;
     return;
    }
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$8 >> 2] | 0) + 8 >> 2] & 511]($8 | 0);
    STACKTOP = __stackBase__;
    return;
   }
   $exception_i = ___cxa_allocate_exception(8) | 0;
   HEAP32[$exception_i >> 2] = 9216;
   $__imp__i = $exception_i + 4 | 0;
   if (($__imp__i | 0) != 0) {
    $call3_i24 = __Znaj(50) | 0;
    HEAP32[$call3_i24 + 4 >> 2] = 37;
    HEAP32[$call3_i24 >> 2] = 37;
    $add_ptr_i = $call3_i24 + 12 | 0;
    HEAP32[$__imp__i >> 2] = $add_ptr_i;
    HEAP32[$call3_i24 + 8 >> 2] = 0;
    _memcpy($add_ptr_i | 0, 456, 38) | 0;
   }
   ___cxa_throw($exception_i | 0, 15344, 72);
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $__p_i_i_i = 0, $0 = 0, $sub_i_i = 0, $5 = 0, $6 = 0, $exception_i_i = 0, $7 = 0, $8 = 0, $__cv_ = 0, $__encoding_ = 0, $11 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p_i_i_i = __stackBase__ | 0;
 $0 = HEAP32[$__loc >> 2] | 0;
 if ((HEAP32[4376] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17504;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17504, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4377] | 0) - 1 | 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 if ((HEAP32[$0 + 12 >> 2] | 0) - $5 >> 2 >>> 0 <= $sub_i_i >>> 0) {
  $exception_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i;
  HEAP32[$7 >> 2] = 9184;
  ___cxa_throw($exception_i_i | 0, 15328, 208);
 }
 $6 = HEAP32[$5 + ($sub_i_i << 2) >> 2] | 0;
 if (($6 | 0) == 0) {
  $exception_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i;
  HEAP32[$7 >> 2] = 9184;
  ___cxa_throw($exception_i_i | 0, 15328, 208);
 }
 $8 = $6;
 $__cv_ = $this + 36 | 0;
 HEAP32[$__cv_ >> 2] = $8;
 $__encoding_ = $this + 44 | 0;
 HEAP32[$__encoding_ >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 24 >> 2] & 255]($8) | 0;
 $11 = HEAP32[$__cv_ >> 2] | 0;
 HEAP8[$this + 48 | 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 28 >> 2] & 255]($11) | 0) & 1;
 if ((HEAP32[$__encoding_ >> 2] | 0) > 8) {
  __ZNSt3__121__throw_runtime_errorEPKc(456);
 } else {
  STACKTOP = __stackBase__;
  return;
 }
}
function __ZNSt3__111__stdoutbufIcEC2EP7__sFILEP10_mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $__p_i_i_i = 0, $0 = 0, $1 = 0, $__shared_owners__i_i_i_i_i_i = 0, $4 = 0, $__locale__i_i = 0, $5 = 0, $__shared_owners__i_i_i = 0, $__cv_ = 0, $8 = 0, $__shared_owners__i_i = 0, $sub_i_i = 0, $14 = 0, $15 = 0, $exception_i_i = 0, $17 = 0, $__st_ = 0, $__always_noconv_ = 0, $22 = 0, $vtable_i = 0, $vfn_i = 0, $23 = 0, $call_i = 0, $frombool = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p_i_i_i = __stackBase__ | 0;
 $0 = $this | 0;
 HEAP32[$0 >> 2] = 10976;
 if (HEAP8[18400] | 0) {
  $4 = HEAP32[2036] | 0;
 } else {
  if (HEAP8[18408] | 0) {
   $1 = HEAP32[HEAP32[2038] >> 2] | 0;
  } else {
   __ZNSt3__16locale5__impC2Ej(8448, 1);
   HEAP32[2040] = 8448;
   HEAP32[2038] = 8160;
   HEAP8[18408] = 1;
   $1 = 8448;
  }
  HEAP32[2042] = $1;
  $__shared_owners__i_i_i_i_i_i = $1 + 4 | 0;
  tempValue = HEAP32[$__shared_owners__i_i_i_i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i_i_i >> 2] = tempValue + 1, tempValue;
  HEAP32[2036] = 8168;
  HEAP8[18400] = 1;
  $4 = 8168;
 }
 $__locale__i_i = $this + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $5;
 $__shared_owners__i_i_i = $5 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i >> 2] = tempValue + 1, tempValue;
 _memset($this + 8 | 0, 0, 24);
 HEAP32[$0 >> 2] = 11344;
 HEAP32[$this + 32 >> 2] = $__fp;
 $__cv_ = $this + 36 | 0;
 $8 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i_i = $8 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4378] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17512;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17512, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4379] | 0) - 1 | 0;
 $14 = HEAP32[$8 + 8 >> 2] | 0;
 do {
  if ((HEAP32[$8 + 12 >> 2] | 0) - $14 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $15 = HEAP32[$14 + ($sub_i_i << 2) >> 2] | 0;
   if (($15 | 0) == 0) {
    break;
   }
   $17 = $15;
   if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    HEAP32[$__cv_ >> 2] = $17;
    $__st_ = $this + 40 | 0;
    HEAP32[$__st_ >> 2] = $__st;
    $__always_noconv_ = $this + 44 | 0;
    $22 = $15;
    $vtable_i = HEAP32[$22 >> 2] | 0;
    $vfn_i = $vtable_i + 28 | 0;
    $23 = HEAP32[$vfn_i >> 2] | 0;
    $call_i = FUNCTION_TABLE_ii[$23 & 255]($17) | 0;
    $frombool = $call_i & 1;
    HEAP8[$__always_noconv_] = $frombool;
    STACKTOP = __stackBase__;
    return;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$8 >> 2] | 0) + 8 >> 2] & 511]($8 | 0);
   HEAP32[$__cv_ >> 2] = $17;
   $__st_ = $this + 40 | 0;
   HEAP32[$__st_ >> 2] = $__st;
   $__always_noconv_ = $this + 44 | 0;
   $22 = $15;
   $vtable_i = HEAP32[$22 >> 2] | 0;
   $vfn_i = $vtable_i + 28 | 0;
   $23 = HEAP32[$vfn_i >> 2] | 0;
   $call_i = FUNCTION_TABLE_ii[$23 & 255]($17) | 0;
   $frombool = $call_i & 1;
   HEAP8[$__always_noconv_] = $frombool;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $__p_i_i_i = 0, $2 = 0, $sub_i_i = 0, $7 = 0, $8 = 0, $exception_i_i = 0, $9 = 0, $10 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p_i_i_i = __stackBase__ | 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 255]($this) | 0;
 $2 = HEAP32[$__loc >> 2] | 0;
 if ((HEAP32[4378] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17512;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17512, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4379] | 0) - 1 | 0;
 $7 = HEAP32[$2 + 8 >> 2] | 0;
 if ((HEAP32[$2 + 12 >> 2] | 0) - $7 >> 2 >>> 0 <= $sub_i_i >>> 0) {
  $exception_i_i = ___cxa_allocate_exception(4) | 0;
  $9 = $exception_i_i;
  HEAP32[$9 >> 2] = 9184;
  ___cxa_throw($exception_i_i | 0, 15328, 208);
 }
 $8 = HEAP32[$7 + ($sub_i_i << 2) >> 2] | 0;
 if (($8 | 0) == 0) {
  $exception_i_i = ___cxa_allocate_exception(4) | 0;
  $9 = $exception_i_i;
  HEAP32[$9 >> 2] = 9184;
  ___cxa_throw($exception_i_i | 0, 15328, 208);
 } else {
  $10 = $8;
  HEAP32[$this + 36 >> 2] = $10;
  HEAP8[$this + 44 | 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 255]($10) | 0) & 1;
  STACKTOP = __stackBase__;
  return;
 }
}
function __ZNKSt11logic_error4whatEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 4 >> 2] | 0;
}
function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 4 >> 2] | 0;
}
function __ZNKSt3__114error_category23default_error_conditionEi($agg_result, $this, $ev) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $ev = $ev | 0;
 HEAP32[$agg_result >> 2] = $ev;
 HEAP32[$agg_result + 4 >> 2] = $this;
 return;
}
function __ZNKSt3__114error_category10equivalentERKNS_10error_codeEi($this, $code, $condition) {
 $this = $this | 0;
 $code = $code | 0;
 $condition = $condition | 0;
 var $2 = 0;
 if ((HEAP32[$code + 4 >> 2] | 0) != ($this | 0)) {
  $2 = 0;
  return $2 | 0;
 }
 $2 = (HEAP32[$code >> 2] | 0) == ($condition | 0);
 return $2 | 0;
}
function __ZNSt3__111__stdoutbufIcE4syncEv($this) {
 $this = $this | 0;
 var $__extbuf = 0, $__extbe = 0, $__cv_ = 0, $__st_ = 0, $arraydecay = 0, $add_ptr = 0, $sub_ptr_rhs_cast = 0, $__file_ = 0, $0 = 0, $call_i = 0, $sub_ptr_sub = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbuf = __stackBase__ | 0;
 $__extbe = __stackBase__ + 8 | 0;
 $__cv_ = $this + 36 | 0;
 $__st_ = $this + 40 | 0;
 $arraydecay = $__extbuf | 0;
 $add_ptr = $__extbuf + 8 | 0;
 $sub_ptr_rhs_cast = $__extbuf;
 $__file_ = $this + 32 | 0;
 while (1) {
  $0 = HEAP32[$__cv_ >> 2] | 0;
  $call_i = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 20 >> 2] & 31]($0, HEAP32[$__st_ >> 2] | 0, $arraydecay, $add_ptr, $__extbe) | 0;
  $sub_ptr_sub = (HEAP32[$__extbe >> 2] | 0) - $sub_ptr_rhs_cast | 0;
  if ((_fwrite($arraydecay | 0, 1, $sub_ptr_sub | 0, HEAP32[$__file_ >> 2] | 0) | 0) != ($sub_ptr_sub | 0)) {
   $retval_0 = -1;
   label = 7771;
   break;
  }
  if (($call_i | 0) == 2) {
   $retval_0 = -1;
   label = 7772;
   break;
  } else if (($call_i | 0) != 1) {
   label = 7768;
   break;
  }
 }
 if ((label | 0) == 7772) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else if ((label | 0) == 7771) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else if ((label | 0) == 7768) {
  $retval_0 = ((_fflush(HEAP32[$__file_ >> 2] | 0) | 0) != 0) << 31 >> 31;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNSt3__111__stdoutbufIcE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $__extbuf = 0, $__1buf = 0, $__extbe = 0, $__e = 0, $cmp_i = 0, $add_ptr = 0, $__nout__i108 = 0, $__bout__i109 = 0, $__eout__i110 = 0, $arraydecay = 0, $__cv_ = 0, $__st_ = 0, $add_ptr14 = 0, $sub_ptr_rhs_cast = 0, $__file_36 = 0, $3 = 0, $4 = 0, $5 = 0, $call_i = 0, $10 = 0, $sub_ptr_sub = 0, $15 = 0, $16 = 0, $add_ptr_i = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = __stackBase__ | 0;
 $__1buf = __stackBase__ + 8 | 0;
 $__extbe = __stackBase__ + 16 | 0;
 $__e = __stackBase__ + 24 | 0;
 $cmp_i = ($__c | 0) == -1;
 if (!$cmp_i) {
  $add_ptr = $__1buf + 1 | 0;
  $__nout__i108 = $this + 24 | 0;
  $__bout__i109 = $this + 20 | 0;
  HEAP32[$__bout__i109 >> 2] = $__1buf;
  $__eout__i110 = $this + 28 | 0;
  HEAP32[$__eout__i110 >> 2] = $add_ptr;
  HEAP8[$__1buf] = $__c & 255;
  HEAP32[$__nout__i108 >> 2] = $add_ptr;
  L9056 : do {
   if ((HEAP8[$this + 44 | 0] & 1) == 0) {
    $arraydecay = $__extbuf | 0;
    HEAP32[$__extbe >> 2] = $arraydecay;
    $__cv_ = $this + 36 | 0;
    $__st_ = $this + 40 | 0;
    $add_ptr14 = $__extbuf + 8 | 0;
    $sub_ptr_rhs_cast = $__extbuf;
    $__file_36 = $this + 32 | 0;
    $4 = $__1buf;
    $3 = $add_ptr;
    while (1) {
     $5 = HEAP32[$__cv_ >> 2] | 0;
     $call_i = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 12 >> 2] & 31]($5, HEAP32[$__st_ >> 2] | 0, $4, $3, $__e, $arraydecay, $add_ptr14, $__extbe) | 0;
     $10 = HEAP32[$__bout__i109 >> 2] | 0;
     if ((HEAP32[$__e >> 2] | 0) == ($10 | 0)) {
      $retval_0 = -1;
      label = 7788;
      break;
     }
     if (($call_i | 0) == 3) {
      label = 7779;
      break;
     }
     if ($call_i >>> 0 >= 2) {
      $retval_0 = -1;
      label = 7792;
      break;
     }
     $sub_ptr_sub = (HEAP32[$__extbe >> 2] | 0) - $sub_ptr_rhs_cast | 0;
     if ((_fwrite($arraydecay | 0, 1, $sub_ptr_sub | 0, HEAP32[$__file_36 >> 2] | 0) | 0) != ($sub_ptr_sub | 0)) {
      $retval_0 = -1;
      label = 7791;
      break;
     }
     if (($call_i | 0) != 1) {
      break L9056;
     }
     $15 = HEAP32[$__e >> 2] | 0;
     $16 = HEAP32[$__nout__i108 >> 2] | 0;
     HEAP32[$__bout__i109 >> 2] = $15;
     HEAP32[$__eout__i110 >> 2] = $16;
     $add_ptr_i = $15 + ($16 - $15) | 0;
     HEAP32[$__nout__i108 >> 2] = $add_ptr_i;
     $4 = $15;
     $3 = $add_ptr_i;
    }
    if ((label | 0) == 7788) {
     STACKTOP = __stackBase__;
     return $retval_0 | 0;
    } else if ((label | 0) == 7779) {
     if ((_fwrite($10 | 0, 1, 1, HEAP32[$__file_36 >> 2] | 0) | 0) == 1) {
      break;
     } else {
      $retval_0 = -1;
     }
     STACKTOP = __stackBase__;
     return $retval_0 | 0;
    } else if ((label | 0) == 7792) {
     STACKTOP = __stackBase__;
     return $retval_0 | 0;
    } else if ((label | 0) == 7791) {
     STACKTOP = __stackBase__;
     return $retval_0 | 0;
    }
   } else {
    if ((_fwrite($__1buf | 0, 1, 1, HEAP32[$this + 32 >> 2] | 0) | 0) == 1) {
     break;
    } else {
     $retval_0 = -1;
    }
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   }
  } while (0);
  HEAP32[$__nout__i108 >> 2] = 0;
  HEAP32[$__bout__i109 >> 2] = 0;
  HEAP32[$__eout__i110 >> 2] = 0;
 }
 $retval_0 = $cmp_i ? 0 : $__c;
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __ZNSt3__110__stdinbufIcED1Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i_i_i = 0;
 HEAP32[$this >> 2] = 10976;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i_i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 return;
}
function __ZNSt3__110__stdinbufIcED0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i_i_i_i = 0, $6 = 0;
 HEAP32[$this >> 2] = 10976;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i_i_i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i_i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $6 = $this;
  __ZdlPv($6);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 $6 = $this;
 __ZdlPv($6);
 return;
}
function __ZNSt3__110__stdinbufIcE9underflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIcE9__getcharEb($this, 0) | 0;
}
function __ZNSt3__110__stdinbufIcE5uflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIcE9__getcharEb($this, 1) | 0;
}
function __ZNSt3__110__stdinbufIcE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $__extbuf = 0, $__enxt = 0, $__ci = 0, $conv_i = 0, $0 = 0, $arraydecay = 0, $call_i = 0, $__file_ = 0, $4 = 0, $incdec_ptr = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = __stackBase__ | 0;
 $__enxt = __stackBase__ + 8 | 0;
 $__ci = __stackBase__ + 16 | 0;
 if (($__c | 0) == -1) {
  $retval_0 = -1;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $conv_i = $__c & 255;
 HEAP8[$__ci] = $conv_i;
 $0 = HEAP32[$this + 36 >> 2] | 0;
 $arraydecay = $__extbuf | 0;
 $call_i = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] & 31]($0, HEAP32[$this + 40 >> 2] | 0, $__ci, $__ci + 1 | 0, __stackBase__ + 24 | 0, $arraydecay, $__extbuf + 8 | 0, $__enxt) | 0;
 if (($call_i | 0) == 3) {
  HEAP8[$arraydecay] = $conv_i;
  HEAP32[$__enxt >> 2] = $__extbuf + 1;
 } else if (($call_i | 0) == 2 | ($call_i | 0) == 1) {
  $retval_0 = -1;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $__file_ = $this + 32 | 0;
 while (1) {
  $4 = HEAP32[$__enxt >> 2] | 0;
  if ($4 >>> 0 <= $arraydecay >>> 0) {
   $retval_0 = $__c;
   label = 7813;
   break;
  }
  $incdec_ptr = $4 - 1 | 0;
  HEAP32[$__enxt >> 2] = $incdec_ptr;
  if ((_ungetc(HEAP8[$incdec_ptr] | 0, HEAP32[$__file_ >> 2] | 0) | 0) == -1) {
   $retval_0 = -1;
   label = 7812;
   break;
  }
 }
 if ((label | 0) == 7813) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else if ((label | 0) == 7812) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNSt3__110__stdinbufIcE9__getcharEb($this, $__consume) {
 $this = $this | 0;
 $__consume = $__consume | 0;
 var $__extbuf = 0, $__1buf = 0, $__enxt = 0, $__inxt = 0, $0 = 0, $_sroa_speculated = 0, $__file_ = 0, $__i_023 = 0, $call2 = 0, $__st_ = 0, $__cv_ = 0, $arraydecay = 0, $add_ptr9 = 0, $__file_18 = 0, $__nread_0 = 0, $5 = 0, $6 = 0, $7$0 = 0, $7$1 = 0, $8 = 0, $add_ptr = 0, $call_i = 0, $12 = 0, $call19 = 0, $__nread_2 = 0, $__file_41 = 0, $__i35_0 = 0, $dec = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = __stackBase__ | 0;
 $__1buf = __stackBase__ + 8 | 0;
 $__enxt = __stackBase__ + 16 | 0;
 $__inxt = __stackBase__ + 24 | 0;
 $0 = HEAP32[$this + 44 >> 2] | 0;
 $_sroa_speculated = ($0 | 0) > 1 ? $0 : 1;
 L9103 : do {
  if (($_sroa_speculated | 0) > 0) {
   $__file_ = $this + 32 | 0;
   $__i_023 = 0;
   while (1) {
    $call2 = _fgetc(HEAP32[$__file_ >> 2] | 0) | 0;
    if (($call2 | 0) == -1) {
     $retval_0 = -1;
     break;
    }
    HEAP8[$__extbuf + $__i_023 | 0] = $call2 & 255;
    $__i_023 = $__i_023 + 1 | 0;
    if (($__i_023 | 0) >= ($_sroa_speculated | 0)) {
     break L9103;
    }
   }
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  }
 } while (0);
 L9110 : do {
  if ((HEAP8[$this + 48 | 0] & 1) == 0) {
   $__st_ = $this + 40 | 0;
   $__cv_ = $this + 36 | 0;
   $arraydecay = $__extbuf | 0;
   $add_ptr9 = $__1buf + 1 | 0;
   $__file_18 = $this + 32 | 0;
   $__nread_0 = $_sroa_speculated;
   while (1) {
    $5 = HEAP32[$__st_ >> 2] | 0;
    $6 = $5;
    $7$0 = HEAP32[$6 >> 2] | 0;
    $7$1 = HEAP32[$6 + 4 >> 2] | 0;
    $8 = HEAP32[$__cv_ >> 2] | 0;
    $add_ptr = $__extbuf + $__nread_0 | 0;
    $call_i = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] & 31]($8, $5, $arraydecay, $add_ptr, $__enxt, $__1buf, $add_ptr9, $__inxt) | 0;
    if (($call_i | 0) == 2) {
     $retval_0 = -1;
     label = 7838;
     break;
    } else if (($call_i | 0) == 3) {
     label = 7826;
     break;
    } else if (($call_i | 0) != 1) {
     $__nread_2 = $__nread_0;
     break L9110;
    }
    $12 = HEAP32[$__st_ >> 2] | 0;
    HEAP32[$12 >> 2] = $7$0;
    HEAP32[$12 + 4 >> 2] = $7$1;
    if (($__nread_0 | 0) == 8) {
     $retval_0 = -1;
     label = 7834;
     break;
    }
    $call19 = _fgetc(HEAP32[$__file_18 >> 2] | 0) | 0;
    if (($call19 | 0) == -1) {
     $retval_0 = -1;
     label = 7839;
     break;
    }
    HEAP8[$add_ptr] = $call19 & 255;
    $__nread_0 = $__nread_0 + 1 | 0;
   }
   if ((label | 0) == 7838) {
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   } else if ((label | 0) == 7839) {
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   } else if ((label | 0) == 7826) {
    HEAP8[$__1buf] = HEAP8[$arraydecay] | 0;
    $__nread_2 = $__nread_0;
    break;
   } else if ((label | 0) == 7834) {
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   }
  } else {
   HEAP8[$__1buf] = HEAP8[$__extbuf | 0] | 0;
   $__nread_2 = $_sroa_speculated;
  }
 } while (0);
 L9124 : do {
  if (!$__consume) {
   $__file_41 = $this + 32 | 0;
   $__i35_0 = $__nread_2;
   while (1) {
    if (($__i35_0 | 0) <= 0) {
     break L9124;
    }
    $dec = $__i35_0 - 1 | 0;
    if ((_ungetc(HEAPU8[$__extbuf + $dec | 0] | 0 | 0, HEAP32[$__file_41 >> 2] | 0) | 0) == -1) {
     $retval_0 = -1;
     break;
    } else {
     $__i35_0 = $dec;
    }
   }
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  }
 } while (0);
 $retval_0 = HEAPU8[$__1buf] | 0;
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __GLOBAL__I_a362() {
 __ZNSt3__18ios_base4InitC2Ev(0);
 _atexit(150, 18264 | 0, ___dso_handle | 0) | 0;
 return;
}
function __ZNSt11logic_errorD0Ev($this) {
 $this = $this | 0;
 var $__imp__i = 0, $1 = 0, $add_ptr_i_i = 0, $5 = 0;
 HEAP32[$this >> 2] = 9280;
 $__imp__i = $this + 4 | 0;
 $1 = (HEAP32[$__imp__i >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) >= 0) {
  $5 = $this;
  __ZdlPv($5);
  return;
 }
 $add_ptr_i_i = (HEAP32[$__imp__i >> 2] | 0) - 12 | 0;
 if (($add_ptr_i_i | 0) == 0) {
  $5 = $this;
  __ZdlPv($5);
  return;
 }
 __ZdaPv($add_ptr_i_i);
 $5 = $this;
 __ZdlPv($5);
 return;
}
function __ZNSt11logic_errorD2Ev($this) {
 $this = $this | 0;
 var $__imp_ = 0, $1 = 0, $add_ptr_i = 0;
 HEAP32[$this >> 2] = 9280;
 $__imp_ = $this + 4 | 0;
 $1 = (HEAP32[$__imp_ >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) >= 0) {
  return;
 }
 $add_ptr_i = (HEAP32[$__imp_ >> 2] | 0) - 12 | 0;
 if (($add_ptr_i | 0) == 0) {
  return;
 }
 __ZdaPv($add_ptr_i);
 return;
}
function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this | 0;
 var $__imp__i = 0, $1 = 0, $add_ptr_i_i = 0, $5 = 0;
 HEAP32[$this >> 2] = 9216;
 $__imp__i = $this + 4 | 0;
 $1 = (HEAP32[$__imp__i >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) >= 0) {
  $5 = $this;
  __ZdlPv($5);
  return;
 }
 $add_ptr_i_i = (HEAP32[$__imp__i >> 2] | 0) - 12 | 0;
 if (($add_ptr_i_i | 0) == 0) {
  $5 = $this;
  __ZdlPv($5);
  return;
 }
 __ZdaPv($add_ptr_i_i);
 $5 = $this;
 __ZdlPv($5);
 return;
}
function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this | 0;
 var $__imp_ = 0, $1 = 0, $add_ptr_i = 0;
 HEAP32[$this >> 2] = 9216;
 $__imp_ = $this + 4 | 0;
 $1 = (HEAP32[$__imp_ >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) >= 0) {
  return;
 }
 $add_ptr_i = (HEAP32[$__imp_ >> 2] | 0) - 12 | 0;
 if (($add_ptr_i | 0) == 0) {
  return;
 }
 __ZdaPv($add_ptr_i);
 return;
}
function __ZNSt12length_errorD0Ev($this) {
 $this = $this | 0;
 var $__imp__i = 0, $1 = 0, $add_ptr_i_i = 0, $5 = 0;
 HEAP32[$this >> 2] = 9280;
 $__imp__i = $this + 4 | 0;
 $1 = (HEAP32[$__imp__i >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) >= 0) {
  $5 = $this;
  __ZdlPv($5);
  return;
 }
 $add_ptr_i_i = (HEAP32[$__imp__i >> 2] | 0) - 12 | 0;
 if (($add_ptr_i_i | 0) == 0) {
  $5 = $this;
  __ZdlPv($5);
  return;
 }
 __ZdaPv($add_ptr_i_i);
 $5 = $this;
 __ZdlPv($5);
 return;
}
function __ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE($this, $code, $condition) {
 $this = $this | 0;
 $code = $code | 0;
 $condition = $condition | 0;
 var $ref_tmp = 0, $6 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $ref_tmp = __stackBase__ | 0;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[$this >> 2] | 0) + 12 >> 2] & 7]($ref_tmp, $this, $code);
 if ((HEAP32[$ref_tmp + 4 >> 2] | 0) != (HEAP32[$condition + 4 >> 2] | 0)) {
  $6 = 0;
  STACKTOP = __stackBase__;
  return $6 | 0;
 }
 $6 = (HEAP32[$ref_tmp >> 2] | 0) == (HEAP32[$condition >> 2] | 0);
 STACKTOP = __stackBase__;
 return $6 | 0;
}
function __ZNSt3__110__stdinbufIcEC2EP7__sFILEP10_mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $__p_i_i_i = 0, $0 = 0, $1 = 0, $__shared_owners__i_i_i_i_i_i = 0, $4 = 0, $__locale__i_i = 0, $5 = 0, $__shared_owners__i_i_i = 0, $8 = 0, $__shared_owners__i_i = 0, $sub_i_i = 0, $14 = 0, $15 = 0, $exception_i_i = 0, $17 = 0, $__cv__i = 0, $__encoding__i = 0, $20 = 0, $exception_i = 0, $__imp__i = 0, $call3_i24 = 0, $add_ptr_i = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p_i_i_i = __stackBase__ | 0;
 $0 = $this | 0;
 HEAP32[$0 >> 2] = 10976;
 if (HEAP8[18400] | 0) {
  $4 = HEAP32[2036] | 0;
 } else {
  if (HEAP8[18408] | 0) {
   $1 = HEAP32[HEAP32[2038] >> 2] | 0;
  } else {
   __ZNSt3__16locale5__impC2Ej(8448, 1);
   HEAP32[2040] = 8448;
   HEAP32[2038] = 8160;
   HEAP8[18408] = 1;
   $1 = 8448;
  }
  HEAP32[2042] = $1;
  $__shared_owners__i_i_i_i_i_i = $1 + 4 | 0;
  tempValue = HEAP32[$__shared_owners__i_i_i_i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i_i_i >> 2] = tempValue + 1, tempValue;
  HEAP32[2036] = 8168;
  HEAP8[18400] = 1;
  $4 = 8168;
 }
 $__locale__i_i = $this + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $5;
 $__shared_owners__i_i_i = $5 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i >> 2] = tempValue + 1, tempValue;
 _memset($this + 8 | 0, 0, 24);
 HEAP32[$0 >> 2] = 11744;
 HEAP32[$this + 32 >> 2] = $__fp;
 HEAP32[$this + 40 >> 2] = $__st;
 $8 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i_i = $8 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4378] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17512;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17512, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4379] | 0) - 1 | 0;
 $14 = HEAP32[$8 + 8 >> 2] | 0;
 do {
  if ((HEAP32[$8 + 12 >> 2] | 0) - $14 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $15 = HEAP32[$14 + ($sub_i_i << 2) >> 2] | 0;
   if (($15 | 0) == 0) {
    break;
   }
   $17 = $15;
   $__cv__i = $this + 36 | 0;
   HEAP32[$__cv__i >> 2] = $17;
   $__encoding__i = $this + 44 | 0;
   HEAP32[$__encoding__i >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 24 >> 2] & 255]($17) | 0;
   $20 = HEAP32[$__cv__i >> 2] | 0;
   HEAP8[$this + 48 | 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 28 >> 2] & 255]($20) | 0) & 1;
   if ((HEAP32[$__encoding__i >> 2] | 0) <= 8) {
    if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
     STACKTOP = __stackBase__;
     return;
    }
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$8 >> 2] | 0) + 8 >> 2] & 511]($8 | 0);
    STACKTOP = __stackBase__;
    return;
   }
   $exception_i = ___cxa_allocate_exception(8) | 0;
   HEAP32[$exception_i >> 2] = 9216;
   $__imp__i = $exception_i + 4 | 0;
   if (($__imp__i | 0) != 0) {
    $call3_i24 = __Znaj(50) | 0;
    HEAP32[$call3_i24 + 4 >> 2] = 37;
    HEAP32[$call3_i24 >> 2] = 37;
    $add_ptr_i = $call3_i24 + 12 | 0;
    HEAP32[$__imp__i >> 2] = $add_ptr_i;
    HEAP32[$call3_i24 + 8 >> 2] = 0;
    _memcpy($add_ptr_i | 0, 456, 38) | 0;
   }
   ___cxa_throw($exception_i | 0, 15344, 72);
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $__p_i_i_i = 0, $0 = 0, $sub_i_i = 0, $5 = 0, $6 = 0, $exception_i_i = 0, $7 = 0, $8 = 0, $__cv_ = 0, $__encoding_ = 0, $11 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p_i_i_i = __stackBase__ | 0;
 $0 = HEAP32[$__loc >> 2] | 0;
 if ((HEAP32[4378] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17512;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17512, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4379] | 0) - 1 | 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 if ((HEAP32[$0 + 12 >> 2] | 0) - $5 >> 2 >>> 0 <= $sub_i_i >>> 0) {
  $exception_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i;
  HEAP32[$7 >> 2] = 9184;
  ___cxa_throw($exception_i_i | 0, 15328, 208);
 }
 $6 = HEAP32[$5 + ($sub_i_i << 2) >> 2] | 0;
 if (($6 | 0) == 0) {
  $exception_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i;
  HEAP32[$7 >> 2] = 9184;
  ___cxa_throw($exception_i_i | 0, 15328, 208);
 }
 $8 = $6;
 $__cv_ = $this + 36 | 0;
 HEAP32[$__cv_ >> 2] = $8;
 $__encoding_ = $this + 44 | 0;
 HEAP32[$__encoding_ >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 24 >> 2] & 255]($8) | 0;
 $11 = HEAP32[$__cv_ >> 2] | 0;
 HEAP8[$this + 48 | 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 28 >> 2] & 255]($11) | 0) & 1;
 if ((HEAP32[$__encoding_ >> 2] | 0) > 8) {
  __ZNSt3__121__throw_runtime_errorEPKc(456);
 } else {
  STACKTOP = __stackBase__;
  return;
 }
}
function __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg_result, $ec, $what_arg) {
 $agg_result = $agg_result | 0;
 $ec = $ec | 0;
 $what_arg = $what_arg | 0;
 var $__size__i_i_i = 0, $ref_tmp = 0, $__val__i = 0, $0 = 0, $conv_i_i_i = 0, $cond_i_i = 0, $3 = 0, $4 = 0, $__size__i_i_i_i_i = 0, $7 = 0, $cond_i_i_i_i = 0, $conv_i_i_i_i = 0, $cond_i_i_i = 0, $15 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 $__size__i_i_i = $what_arg;
 $ref_tmp = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__val__i = $ec | 0;
 $0 = HEAP32[$__val__i >> 2] | 0;
 do {
  if (($0 | 0) != 0) {
   $conv_i_i_i = HEAPU8[$__size__i_i_i] | 0;
   if (($conv_i_i_i & 1 | 0) == 0) {
    $cond_i_i = $conv_i_i_i >>> 1;
   } else {
    $cond_i_i = HEAP32[$what_arg + 4 >> 2] | 0;
   }
   if (($cond_i_i | 0) == 0) {
    $3 = $0;
   } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($what_arg, 5184, 2) | 0;
    $3 = HEAP32[$__val__i >> 2] | 0;
   }
   $4 = HEAP32[$ec + 4 >> 2] | 0;
   FUNCTION_TABLE_viii[HEAP32[(HEAP32[$4 >> 2] | 0) + 24 >> 2] & 7]($ref_tmp, $4, $3);
   $__size__i_i_i_i_i = $ref_tmp;
   $7 = HEAP8[$__size__i_i_i_i_i] | 0;
   if (($7 & 1) == 0) {
    $cond_i_i_i_i = $ref_tmp + 1 | 0;
   } else {
    $cond_i_i_i_i = HEAP32[$ref_tmp + 8 >> 2] | 0;
   }
   $conv_i_i_i_i = $7 & 255;
   if (($conv_i_i_i_i & 1 | 0) == 0) {
    $cond_i_i_i = $conv_i_i_i_i >>> 1;
   } else {
    $cond_i_i_i = HEAP32[$ref_tmp + 4 >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($what_arg, $cond_i_i_i_i, $cond_i_i_i) | 0;
   if ((HEAP8[$__size__i_i_i_i_i] & 1) == 0) {
    break;
   }
   __ZdlPv(HEAP32[$ref_tmp + 8 >> 2] | 0);
  }
 } while (0);
 $15 = $agg_result;
 HEAP32[$15 >> 2] = HEAP32[$__size__i_i_i >> 2];
 HEAP32[$15 + 4 >> 2] = HEAP32[$__size__i_i_i + 4 >> 2];
 HEAP32[$15 + 8 >> 2] = HEAP32[$__size__i_i_i + 8 >> 2];
 _memset($__size__i_i_i | 0, 0, 12);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__112system_errorD0Ev($this) {
 $this = $this | 0;
 var $__imp__i_i = 0, $1 = 0, $add_ptr_i_i_i = 0, $5 = 0;
 HEAP32[$this >> 2] = 9216;
 $__imp__i_i = $this + 4 | 0;
 $1 = (HEAP32[$__imp__i_i >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) >= 0) {
  $5 = $this;
  __ZdlPv($5);
  return;
 }
 $add_ptr_i_i_i = (HEAP32[$__imp__i_i >> 2] | 0) - 12 | 0;
 if (($add_ptr_i_i_i | 0) == 0) {
  $5 = $this;
  __ZdlPv($5);
  return;
 }
 __ZdaPv($add_ptr_i_i_i);
 $5 = $this;
 __ZdlPv($5);
 return;
}
function __ZNSt3__112system_errorD2Ev($this) {
 $this = $this | 0;
 var $__imp__i = 0, $1 = 0, $add_ptr_i_i = 0;
 HEAP32[$this >> 2] = 9216;
 $__imp__i = $this + 4 | 0;
 $1 = (HEAP32[$__imp__i >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) >= 0) {
  return;
 }
 $add_ptr_i_i = (HEAP32[$__imp__i >> 2] | 0) - 12 | 0;
 if (($add_ptr_i_i | 0) == 0) {
  return;
 }
 __ZdaPv($add_ptr_i_i);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 if ((HEAP8[$this] & 1) == 0) {
  return;
 }
 __ZdlPv(HEAP32[$this + 8 >> 2] | 0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 var $call_i = 0, $__s_i_i_i = 0, $__size__i_i_i = 0, $0 = 0, $1 = 0, $3 = 0, $cond_i_i = 0, $cond_i23_i = 0, $conv_i_i39_i = 0, $cond_i51_i = 0;
 $call_i = _strlen($__s | 0) | 0;
 $__s_i_i_i = $this;
 $__size__i_i_i = $this;
 $0 = HEAP8[$__size__i_i_i] | 0;
 if (($0 & 1) == 0) {
  $cond_i_i = 10;
  $3 = $0;
 } else {
  $1 = HEAP32[$this >> 2] | 0;
  $cond_i_i = ($1 & -2) - 1 | 0;
  $3 = $1 & 255;
 }
 if ($cond_i_i >>> 0 < $call_i >>> 0) {
  $conv_i_i39_i = $3 & 255;
  if (($conv_i_i39_i & 1 | 0) == 0) {
   $cond_i51_i = $conv_i_i39_i >>> 1;
  } else {
   $cond_i51_i = HEAP32[$this + 4 >> 2] | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $cond_i_i, $call_i - $cond_i_i | 0, $cond_i51_i, 0, $cond_i51_i, $call_i, $__s);
  return $this | 0;
 }
 if (($3 & 1) == 0) {
  $cond_i23_i = $__s_i_i_i + 1 | 0;
 } else {
  $cond_i23_i = HEAP32[$this + 8 >> 2] | 0;
 }
 _memmove($cond_i23_i | 0, $__s | 0, $call_i | 0);
 HEAP8[$cond_i23_i + $call_i | 0] = 0;
 if ((HEAP8[$__size__i_i_i] & 1) == 0) {
  HEAP8[$__size__i_i_i] = $call_i << 1 & 255;
  return $this | 0;
 } else {
  HEAP32[$this + 4 >> 2] = $call_i;
  return $this | 0;
 }
 return 0;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $__size__i_i = 0, $0 = 0, $1 = 0, $3 = 0, $cond_i = 0, $conv_i_i21 = 0, $cond_i27 = 0, $cond_i80 = 0, $add_ptr = 0, $add = 0;
 $__size__i_i = $this;
 $0 = HEAP8[$__size__i_i] | 0;
 if (($0 & 1) == 0) {
  $cond_i = 10;
  $3 = $0;
 } else {
  $1 = HEAP32[$this >> 2] | 0;
  $cond_i = ($1 & -2) - 1 | 0;
  $3 = $1 & 255;
 }
 $conv_i_i21 = $3 & 255;
 if (($conv_i_i21 & 1 | 0) == 0) {
  $cond_i27 = $conv_i_i21 >>> 1;
 } else {
  $cond_i27 = HEAP32[$this + 4 >> 2] | 0;
 }
 if (($cond_i - $cond_i27 | 0) >>> 0 < $__n >>> 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $cond_i, $__n - $cond_i + $cond_i27 | 0, $cond_i27, $cond_i27, 0, $__n, $__s);
  return $this | 0;
 }
 if (($__n | 0) == 0) {
  return $this | 0;
 }
 if (($3 & 1) == 0) {
  $cond_i80 = $this + 1 | 0;
 } else {
  $cond_i80 = HEAP32[$this + 8 >> 2] | 0;
 }
 $add_ptr = $cond_i80 + $cond_i27 | 0;
 _memcpy($add_ptr | 0, $__s | 0, $__n) | 0;
 $add = $cond_i27 + $__n | 0;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  HEAP8[$__size__i_i] = $add << 1 & 255;
 } else {
  HEAP32[$this + 4 >> 2] = $add;
 }
 HEAP8[$cond_i80 + $add | 0] = 0;
 return $this | 0;
}
function __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this, $ec, $what_arg) {
 $this = $this | 0;
 $ec = $ec | 0;
 $what_arg = $what_arg | 0;
 var $ref_tmp = 0, $agg_tmp = 0, $call_i_i_i = 0, $and_i_i_i = 0, $call_i_i_i2 = 0, $__p_0_i = 0, $0 = 0, $__imp__i = 0, $__size__i_i_i_pre = 0, $cond_i_i_i_i = 0, $call_i_i = 0, $call3_i1_i3 = 0, $add_ptr_i_i = 0, $__ec_ = 0, $10 = 0, $11 = 0, $ld$0$0 = 0, $12$0 = 0, $ld$1$1 = 0, $12$1 = 0, $st$2$0 = 0, $st$3$1 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 tempParam = $ec;
 $ec = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 HEAP32[$ec >> 2] = HEAP32[tempParam >> 2];
 HEAP32[$ec + 4 >> 2] = HEAP32[tempParam + 4 >> 2];
 $ref_tmp = __stackBase__ | 0;
 $agg_tmp = __stackBase__ + 16 | 0;
 $call_i_i_i = _strlen($what_arg | 0) | 0;
 if (($call_i_i_i | 0) == -1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 }
 if ($call_i_i_i >>> 0 < 11) {
  HEAP8[$agg_tmp] = $call_i_i_i << 1 & 255;
  $__p_0_i = $agg_tmp + 1 | 0;
 } else {
  $and_i_i_i = $call_i_i_i + 16 & -16;
  $call_i_i_i2 = __Znwj($and_i_i_i) | 0;
  HEAP32[$agg_tmp + 8 >> 2] = $call_i_i_i2;
  HEAP32[$agg_tmp >> 2] = $and_i_i_i | 1;
  HEAP32[$agg_tmp + 4 >> 2] = $call_i_i_i;
  $__p_0_i = $call_i_i_i2;
 }
 _memcpy($__p_0_i | 0, $what_arg | 0, $call_i_i_i) | 0;
 HEAP8[$__p_0_i + $call_i_i_i | 0] = 0;
 __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($ref_tmp, $ec, $agg_tmp);
 $0 = $this | 0;
 HEAP32[$0 >> 2] = 9216;
 $__imp__i = $this + 4 | 0;
 $__size__i_i_i_pre = $ref_tmp;
 if (($__imp__i | 0) != 0) {
  if ((HEAP8[$__size__i_i_i_pre] & 1) == 0) {
   $cond_i_i_i_i = $ref_tmp + 1 | 0;
  } else {
   $cond_i_i_i_i = HEAP32[$ref_tmp + 8 >> 2] | 0;
  }
  $call_i_i = _strlen($cond_i_i_i_i | 0) | 0;
  $call3_i1_i3 = __Znaj($call_i_i + 13 | 0) | 0;
  HEAP32[$call3_i1_i3 + 4 >> 2] = $call_i_i;
  HEAP32[$call3_i1_i3 >> 2] = $call_i_i;
  $add_ptr_i_i = $call3_i1_i3 + 12 | 0;
  HEAP32[$__imp__i >> 2] = $add_ptr_i_i;
  HEAP32[$call3_i1_i3 + 8 >> 2] = 0;
  _strcpy($add_ptr_i_i | 0, $cond_i_i_i_i | 0) | 0;
 }
 if ((HEAP8[$__size__i_i_i_pre] & 1) != 0) {
  __ZdlPv(HEAP32[$ref_tmp + 8 >> 2] | 0);
 }
 if ((HEAP8[$agg_tmp] & 1) == 0) {
  HEAP32[$0 >> 2] = 11240;
  $__ec_ = $this + 8 | 0;
  $10 = $ec;
  $11 = $__ec_;
  $ld$0$0 = $10 | 0;
  $12$0 = HEAP32[$ld$0$0 >> 2] | 0;
  $ld$1$1 = $10 + 4 | 0;
  $12$1 = HEAP32[$ld$1$1 >> 2] | 0;
  $st$2$0 = $11 | 0;
  HEAP32[$st$2$0 >> 2] = $12$0;
  $st$3$1 = $11 + 4 | 0;
  HEAP32[$st$3$1 >> 2] = $12$1;
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$agg_tmp + 8 >> 2] | 0);
 HEAP32[$0 >> 2] = 11240;
 $__ec_ = $this + 8 | 0;
 $10 = $ec;
 $11 = $__ec_;
 $ld$0$0 = $10 | 0;
 $12$0 = HEAP32[$ld$0$0 >> 2] | 0;
 $ld$1$1 = $10 + 4 | 0;
 $12$1 = HEAP32[$ld$1$1 >> 2] | 0;
 $st$2$0 = $11 | 0;
 HEAP32[$st$2$0 >> 2] = $12$0;
 $st$3$1 = $11 + 4 | 0;
 HEAP32[$st$3$1 >> 2] = $12$1;
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag, $arg, $func) {
 $flag = $flag | 0;
 $arg = $arg | 0;
 $func = $func | 0;
 var $call = 0, $call3 = 0, $call6 = 0, $call8 = 0, $call19 = 0;
 $call;
 if ((HEAP32[$flag >> 2] | 0) == 1) {
  do {
   _pthread_cond_wait(17304, 17296) | 0;
  } while ((HEAP32[$flag >> 2] | 0) == 1);
 }
 if ((HEAP32[$flag >> 2] | 0) != 0) {
  $call19;
  return;
 }
 HEAP32[$flag >> 2] = 1;
 $call3;
 FUNCTION_TABLE_vi[$func & 511]($arg);
 $call6;
 HEAP32[$flag >> 2] = -1;
 $call8;
 _pthread_cond_broadcast(17304) | 0;
 return;
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this | 0;
 var $exception = 0, $__imp__i = 0, $call3_i1_i1 = 0, $add_ptr_i_i = 0;
 $exception = ___cxa_allocate_exception(8) | 0;
 HEAP32[$exception >> 2] = 9280;
 $__imp__i = $exception + 4 | 0;
 if (($__imp__i | 0) != 0) {
  $call3_i1_i1 = __Znaj(25) | 0;
  HEAP32[$call3_i1_i1 + 4 >> 2] = 12;
  HEAP32[$call3_i1_i1 >> 2] = 12;
  $add_ptr_i_i = $call3_i1_i1 + 12 | 0;
  HEAP32[$__imp__i >> 2] = $add_ptr_i_i;
  HEAP32[$call3_i1_i1 + 8 >> 2] = 0;
  _memcpy($add_ptr_i_i | 0, 712, 13) | 0;
 }
 HEAP32[$exception >> 2] = 9248;
 ___cxa_throw($exception | 0, 15360, 100);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this, $__res_arg) {
 $this = $this | 0;
 $__res_arg = $__res_arg | 0;
 var $__s_i_i = 0, $__size__i_i = 0, $0 = 0, $1 = 0, $3 = 0, $cond_i = 0, $conv_i_i177 = 0, $cond_i198 = 0, $_sroa_speculated = 0, $cond_i248 = 0, $sub_i249 = 0, $__new_data_0 = 0, $9 = 0, $and_i = 0, $cond_i142 = 0, $11 = 0, $__now_long_0_off0 = 0, $__was_long_0_off0 = 0, $__p_0 = 0, $__new_data_1 = 0, $conv_i_i108 = 0, $cond_i114 = 0, $add25 = 0;
 if (($__res_arg | 0) == -1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 }
 $__s_i_i = $this;
 $__size__i_i = $this;
 $0 = HEAP8[$__size__i_i] | 0;
 if (($0 & 1) == 0) {
  $cond_i = 10;
  $3 = $0;
 } else {
  $1 = HEAP32[$this >> 2] | 0;
  $cond_i = ($1 & -2) - 1 | 0;
  $3 = $1 & 255;
 }
 $conv_i_i177 = $3 & 255;
 if (($conv_i_i177 & 1 | 0) == 0) {
  $cond_i198 = $conv_i_i177 >>> 1;
 } else {
  $cond_i198 = HEAP32[$this + 4 >> 2] | 0;
 }
 $_sroa_speculated = $cond_i198 >>> 0 > $__res_arg >>> 0 ? $cond_i198 : $__res_arg;
 if ($_sroa_speculated >>> 0 < 11) {
  $cond_i248 = 11;
 } else {
  $cond_i248 = $_sroa_speculated + 16 & -16;
 }
 $sub_i249 = $cond_i248 - 1 | 0;
 if (($sub_i249 | 0) == ($cond_i | 0)) {
  return;
 }
 if (($sub_i249 | 0) == 10) {
  $__new_data_1 = $__s_i_i + 1 | 0;
  $__p_0 = HEAP32[$this + 8 >> 2] | 0;
  $__was_long_0_off0 = 1;
  $__now_long_0_off0 = 0;
  $11 = $3;
 } else {
  if ($sub_i249 >>> 0 > $cond_i >>> 0) {
   $__new_data_0 = __Znwj($cond_i248) | 0;
  } else {
   $__new_data_0 = __Znwj($cond_i248) | 0;
  }
  $9 = HEAP8[$__size__i_i] | 0;
  $and_i = $9 & 1;
  if ($and_i << 24 >> 24 == 0) {
   $cond_i142 = $__s_i_i + 1 | 0;
  } else {
   $cond_i142 = HEAP32[$this + 8 >> 2] | 0;
  }
  $__new_data_1 = $__new_data_0;
  $__p_0 = $cond_i142;
  $__was_long_0_off0 = $and_i << 24 >> 24 != 0;
  $__now_long_0_off0 = 1;
  $11 = $9;
 }
 $conv_i_i108 = $11 & 255;
 if (($conv_i_i108 & 1 | 0) == 0) {
  $cond_i114 = $conv_i_i108 >>> 1;
 } else {
  $cond_i114 = HEAP32[$this + 4 >> 2] | 0;
 }
 $add25 = $cond_i114 + 1 | 0;
 _memcpy($__new_data_1 | 0, $__p_0 | 0, $add25) | 0;
 if ($__was_long_0_off0) {
  __ZdlPv($__p_0);
 }
 if ($__now_long_0_off0) {
  HEAP32[$this >> 2] = $cond_i248 | 1;
  HEAP32[$this + 4 >> 2] = $cond_i198;
  HEAP32[$this + 8 >> 2] = $__new_data_1;
  return;
 } else {
  HEAP8[$__size__i_i] = $cond_i198 << 1 & 255;
  return;
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add, $__p_new_stuff) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 $__p_new_stuff = $__p_new_stuff | 0;
 var $cond_i = 0, $add = 0, $mul = 0, $_sroa_speculated = 0, $cond_i114_sink = 0, $call_i_i = 0, $add_ptr = 0, $sub21 = 0, $sub22 = 0, $add_ptr26 = 0, $add_ptr28 = 0, $__data__i = 0, $or_i = 0, $__cap__i = 0, $add39 = 0, $__size__i = 0, $arrayidx = 0;
 if ((-3 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 }
 if ((HEAP8[$this] & 1) == 0) {
  $cond_i = $this + 1 | 0;
 } else {
  $cond_i = HEAP32[$this + 8 >> 2] | 0;
 }
 do {
  if ($__old_cap >>> 0 < 2147483631) {
   $add = $__delta_cap + $__old_cap | 0;
   $mul = $__old_cap << 1;
   $_sroa_speculated = $add >>> 0 < $mul >>> 0 ? $mul : $add;
   if ($_sroa_speculated >>> 0 < 11) {
    $cond_i114_sink = 11;
    break;
   }
   $cond_i114_sink = $_sroa_speculated + 16 & -16;
  } else {
   $cond_i114_sink = -2;
  }
 } while (0);
 $call_i_i = __Znwj($cond_i114_sink) | 0;
 if (($__n_copy | 0) != 0) {
  _memcpy($call_i_i | 0, $cond_i | 0, $__n_copy) | 0;
 }
 if (($__n_add | 0) != 0) {
  $add_ptr = $call_i_i + $__n_copy | 0;
  _memcpy($add_ptr | 0, $__p_new_stuff | 0, $__n_add) | 0;
 }
 $sub21 = $__old_sz - $__n_del | 0;
 if (($sub21 | 0) != ($__n_copy | 0)) {
  $sub22 = $sub21 - $__n_copy | 0;
  $add_ptr26 = $call_i_i + ($__n_add + $__n_copy) | 0;
  $add_ptr28 = $cond_i + ($__n_del + $__n_copy) | 0;
  _memcpy($add_ptr26 | 0, $add_ptr28 | 0, $sub22) | 0;
 }
 if (($__old_cap | 0) == 10) {
  $__data__i = $this + 8 | 0;
  HEAP32[$__data__i >> 2] = $call_i_i;
  $or_i = $cond_i114_sink | 1;
  $__cap__i = $this | 0;
  HEAP32[$__cap__i >> 2] = $or_i;
  $add39 = $sub21 + $__n_add | 0;
  $__size__i = $this + 4 | 0;
  HEAP32[$__size__i >> 2] = $add39;
  $arrayidx = $call_i_i + $add39 | 0;
  HEAP8[$arrayidx] = 0;
  return;
 }
 __ZdlPv($cond_i);
 $__data__i = $this + 8 | 0;
 HEAP32[$__data__i >> 2] = $call_i_i;
 $or_i = $cond_i114_sink | 1;
 $__cap__i = $this | 0;
 HEAP32[$__cap__i >> 2] = $or_i;
 $add39 = $sub21 + $__n_add | 0;
 $__size__i = $this + 4 | 0;
 HEAP32[$__size__i >> 2] = $add39;
 $arrayidx = $call_i_i + $add39 | 0;
 HEAP8[$arrayidx] = 0;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $this | 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this | 0;
 return -1 | 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1 | 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1 | 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $this | 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg_result, $this, $0$0, $0$1, $1, $2) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $0$0 = $0$0 | 0;
 $0$1 = $0$1 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $__off__i_i = 0;
 $3 = $agg_result;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 $__off__i_i = $agg_result + 8 | 0;
 HEAP32[$__off__i_i >> 2] = -1;
 HEAP32[$__off__i_i + 4 >> 2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI10_mbstate_tEEj($agg_result, $this, $0, $1) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $__off__i_i = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 tempParam = $0;
 $0 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[$0 >> 2] = HEAP32[tempParam >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[tempParam + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[tempParam + 8 >> 2];
 HEAP32[$0 + 12 >> 2] = HEAP32[tempParam + 12 >> 2];
 $2 = $agg_result;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 $__off__i_i = $agg_result + 8 | 0;
 HEAP32[$__off__i_i >> 2] = -1;
 HEAP32[$__off__i_i + 4 >> 2] = -1;
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj($agg_result, $this, $0$0, $0$1, $1, $2) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $0$0 = $0$0 | 0;
 $0$1 = $0$1 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $__off__i_i = 0;
 $3 = $agg_result;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 $__off__i_i = $agg_result + 8 | 0;
 HEAP32[$__off__i_i >> 2] = -1;
 HEAP32[$__off__i_i + 4 >> 2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI10_mbstate_tEEj($agg_result, $this, $0, $1) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $__off__i_i = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 tempParam = $0;
 $0 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[$0 >> 2] = HEAP32[tempParam >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[tempParam + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[tempParam + 8 >> 2];
 HEAP32[$0 + 12 >> 2] = HEAP32[tempParam + 12 >> 2];
 $2 = $agg_result;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 $__off__i_i = $agg_result + 8 | 0;
 HEAP32[$__off__i_i >> 2] = -1;
 HEAP32[$__off__i_i + 4 >> 2] = -1;
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($this) {
 $this = $this | 0;
 if ((HEAP8[$this] & 1) == 0) {
  return;
 }
 __ZdlPv(HEAP32[$this + 8 >> 2] | 0);
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $__size__i_i = 0, $0 = 0, $1 = 0, $3 = 0, $cond_i = 0, $cond_i23 = 0, $tobool11_i = 0, $dec12_in_i = 0, $d_addr_017_i = 0, $n_addr_116_i = 0, $s_addr_015_i = 0, $dec3_i = 0, $conv_i_i39 = 0, $cond_i51 = 0;
 $__size__i_i = $this;
 $0 = HEAP8[$__size__i_i] | 0;
 if (($0 & 1) == 0) {
  $cond_i = 1;
  $3 = $0;
 } else {
  $1 = HEAP32[$this >> 2] | 0;
  $cond_i = ($1 & -2) - 1 | 0;
  $3 = $1 & 255;
 }
 if ($cond_i >>> 0 < $__n >>> 0) {
  $conv_i_i39 = $3 & 255;
  if (($conv_i_i39 & 1 | 0) == 0) {
   $cond_i51 = $conv_i_i39 >>> 1;
  } else {
   $cond_i51 = HEAP32[$this + 4 >> 2] | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this, $cond_i, $__n - $cond_i | 0, $cond_i51, 0, $cond_i51, $__n, $__s);
  return $this | 0;
 }
 if (($3 & 1) == 0) {
  $cond_i23 = $this + 4 | 0;
 } else {
  $cond_i23 = HEAP32[$this + 8 >> 2] | 0;
 }
 $tobool11_i = ($__n | 0) == 0;
 do {
  if ($cond_i23 - $__s >> 2 >>> 0 < $__n >>> 0) {
   if ($tobool11_i) {
    break;
   } else {
    $dec12_in_i = $__n;
   }
   do {
    $dec12_in_i = $dec12_in_i - 1 | 0;
    HEAP32[$cond_i23 + ($dec12_in_i << 2) >> 2] = HEAP32[$__s + ($dec12_in_i << 2) >> 2];
   } while (($dec12_in_i | 0) != 0);
  } else {
   if ($tobool11_i) {
    break;
   } else {
    $s_addr_015_i = $__s;
    $n_addr_116_i = $__n;
    $d_addr_017_i = $cond_i23;
   }
   while (1) {
    $dec3_i = $n_addr_116_i - 1 | 0;
    HEAP32[$d_addr_017_i >> 2] = HEAP32[$s_addr_015_i >> 2];
    if (($dec3_i | 0) == 0) {
     break;
    } else {
     $s_addr_015_i = $s_addr_015_i + 4 | 0;
     $n_addr_116_i = $dec3_i;
     $d_addr_017_i = $d_addr_017_i + 4 | 0;
    }
   }
  }
 } while (0);
 HEAP32[$cond_i23 + ($__n << 2) >> 2] = 0;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  HEAP8[$__size__i_i] = $__n << 1 & 255;
  return $this | 0;
 } else {
  HEAP32[$this + 4 >> 2] = $__n;
  return $this | 0;
 }
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i_i_i = 0, $6 = 0;
 HEAP32[$this >> 2] = 10976;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i_i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $6 = $this;
  __ZdlPv($6);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 $6 = $this;
 __ZdlPv($6);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i_i = 0;
 HEAP32[$this >> 2] = 10976;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $__ninp_ = 0, $__einp_ = 0, $__i_08 = 0, $__s_addr_07 = 0, $1 = 0, $call4 = 0, $storemerge = 0, $inc = 0, $__i_0_lcssa = 0, label = 0;
 $0 = $this;
 if (($__n | 0) <= 0) {
  $__i_0_lcssa = 0;
  return $__i_0_lcssa | 0;
 }
 $__ninp_ = $this + 12 | 0;
 $__einp_ = $this + 16 | 0;
 $__s_addr_07 = $__s;
 $__i_08 = 0;
 while (1) {
  $1 = HEAP32[$__ninp_ >> 2] | 0;
  if ($1 >>> 0 < (HEAP32[$__einp_ >> 2] | 0) >>> 0) {
   HEAP32[$__ninp_ >> 2] = $1 + 1;
   $storemerge = HEAP8[$1] | 0;
  } else {
   $call4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 40 >> 2] & 255]($this) | 0;
   if (($call4 | 0) == -1) {
    $__i_0_lcssa = $__i_08;
    label = 8159;
    break;
   }
   $storemerge = $call4 & 255;
  }
  HEAP8[$__s_addr_07] = $storemerge;
  $inc = $__i_08 + 1 | 0;
  if (($inc | 0) < ($__n | 0)) {
   $__s_addr_07 = $__s_addr_07 + 1 | 0;
   $__i_08 = $inc;
  } else {
   $__i_0_lcssa = $inc;
   label = 8158;
   break;
  }
 }
 if ((label | 0) == 8159) {
  return $__i_0_lcssa | 0;
 } else if ((label | 0) == 8158) {
  return $__i_0_lcssa | 0;
 }
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this | 0;
 var $__ninp_ = 0, $2 = 0, $retval_0 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] & 255]($this) | 0) == -1) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $__ninp_ = $this + 12 | 0;
 $2 = HEAP32[$__ninp_ >> 2] | 0;
 HEAP32[$__ninp_ >> 2] = $2 + 1;
 $retval_0 = HEAPU8[$2] | 0;
 return $retval_0 | 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $__nout_ = 0, $__eout_ = 0, $__s_addr_07 = 0, $__i_06 = 0, $1 = 0, $3 = 0, $inc = 0, $__i_0_lcssa = 0, label = 0;
 $0 = $this;
 if (($__n | 0) <= 0) {
  $__i_0_lcssa = 0;
  return $__i_0_lcssa | 0;
 }
 $__nout_ = $this + 24 | 0;
 $__eout_ = $this + 28 | 0;
 $__i_06 = 0;
 $__s_addr_07 = $__s;
 while (1) {
  $1 = HEAP32[$__nout_ >> 2] | 0;
  if ($1 >>> 0 < (HEAP32[$__eout_ >> 2] | 0) >>> 0) {
   $3 = HEAP8[$__s_addr_07] | 0;
   HEAP32[$__nout_ >> 2] = $1 + 1;
   HEAP8[$1] = $3;
  } else {
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 63]($this, HEAPU8[$__s_addr_07] | 0) | 0) == -1) {
    $__i_0_lcssa = $__i_06;
    label = 8174;
    break;
   }
  }
  $inc = $__i_06 + 1 | 0;
  if (($inc | 0) < ($__n | 0)) {
   $__i_06 = $inc;
   $__s_addr_07 = $__s_addr_07 + 1 | 0;
  } else {
   $__i_0_lcssa = $inc;
   label = 8175;
   break;
  }
 }
 if ((label | 0) == 8174) {
  return $__i_0_lcssa | 0;
 } else if ((label | 0) == 8175) {
  return $__i_0_lcssa | 0;
 }
 return 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i_i_i = 0, $6 = 0;
 HEAP32[$this >> 2] = 10904;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i_i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $6 = $this;
  __ZdlPv($6);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 $6 = $this;
 __ZdlPv($6);
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i_i = 0;
 HEAP32[$this >> 2] = 10904;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 var $cond_i = 0, $add = 0, $mul = 0, $_sroa_speculated = 0, $cond_i93_sink = 0, $call_i_i = 0, $sub17 = 0, $sub18 = 0, $add_ptr21 = 0, $add_ptr23 = 0, $__data__i = 0, $or_i = 0, $__cap__i = 0;
 if ((-3 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 }
 if ((HEAP8[$this] & 1) == 0) {
  $cond_i = $this + 1 | 0;
 } else {
  $cond_i = HEAP32[$this + 8 >> 2] | 0;
 }
 do {
  if ($__old_cap >>> 0 < 2147483631) {
   $add = $__delta_cap + $__old_cap | 0;
   $mul = $__old_cap << 1;
   $_sroa_speculated = $add >>> 0 < $mul >>> 0 ? $mul : $add;
   if ($_sroa_speculated >>> 0 < 11) {
    $cond_i93_sink = 11;
    break;
   }
   $cond_i93_sink = $_sroa_speculated + 16 & -16;
  } else {
   $cond_i93_sink = -2;
  }
 } while (0);
 $call_i_i = __Znwj($cond_i93_sink) | 0;
 if (($__n_copy | 0) != 0) {
  _memcpy($call_i_i | 0, $cond_i | 0, $__n_copy) | 0;
 }
 $sub17 = $__old_sz - $__n_del | 0;
 if (($sub17 | 0) != ($__n_copy | 0)) {
  $sub18 = $sub17 - $__n_copy | 0;
  $add_ptr21 = $call_i_i + ($__n_add + $__n_copy) | 0;
  $add_ptr23 = $cond_i + ($__n_del + $__n_copy) | 0;
  _memcpy($add_ptr21 | 0, $add_ptr23 | 0, $sub18) | 0;
 }
 if (($__old_cap | 0) == 10) {
  $__data__i = $this + 8 | 0;
  HEAP32[$__data__i >> 2] = $call_i_i;
  $or_i = $cond_i93_sink | 1;
  $__cap__i = $this | 0;
  HEAP32[$__cap__i >> 2] = $or_i;
  return;
 }
 __ZdlPv($cond_i);
 $__data__i = $this + 8 | 0;
 HEAP32[$__data__i >> 2] = $call_i_i;
 $or_i = $cond_i93_sink | 1;
 $__cap__i = $this | 0;
 HEAP32[$__cap__i >> 2] = $or_i;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this, $__res_arg) {
 $this = $this | 0;
 $__res_arg = $__res_arg | 0;
 var $__size__i_i = 0, $0 = 0, $1 = 0, $3 = 0, $cond_i = 0, $conv_i_i108 = 0, $cond_i114 = 0, $_sroa_speculated = 0, $cond_i222 = 0, $sub_i223 = 0, $mul_i_i217 = 0, $__new_data_0_in = 0, $9 = 0, $and_i = 0, $cond_i183 = 0, $11 = 0, $__now_long_0_off0 = 0, $__was_long_0_off0 = 0, $__p_0 = 0, $__new_data_1 = 0, $conv_i_i133 = 0, $cond_i154 = 0, $add25 = 0, $d_addr_05_i = 0, $n_addr_04_i = 0, $s_addr_03_i = 0, $dec_i = 0;
 if ($__res_arg >>> 0 > 1073741822) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 }
 $__size__i_i = $this;
 $0 = HEAP8[$__size__i_i] | 0;
 if (($0 & 1) == 0) {
  $cond_i = 1;
  $3 = $0;
 } else {
  $1 = HEAP32[$this >> 2] | 0;
  $cond_i = ($1 & -2) - 1 | 0;
  $3 = $1 & 255;
 }
 $conv_i_i108 = $3 & 255;
 if (($conv_i_i108 & 1 | 0) == 0) {
  $cond_i114 = $conv_i_i108 >>> 1;
 } else {
  $cond_i114 = HEAP32[$this + 4 >> 2] | 0;
 }
 $_sroa_speculated = $cond_i114 >>> 0 > $__res_arg >>> 0 ? $cond_i114 : $__res_arg;
 if ($_sroa_speculated >>> 0 < 2) {
  $cond_i222 = 2;
 } else {
  $cond_i222 = $_sroa_speculated + 4 & -4;
 }
 $sub_i223 = $cond_i222 - 1 | 0;
 if (($sub_i223 | 0) == ($cond_i | 0)) {
  return;
 }
 if (($sub_i223 | 0) == 1) {
  $__new_data_1 = $this + 4 | 0;
  $__p_0 = HEAP32[$this + 8 >> 2] | 0;
  $__was_long_0_off0 = 1;
  $__now_long_0_off0 = 0;
  $11 = $3;
 } else {
  $mul_i_i217 = $cond_i222 << 2;
  if ($sub_i223 >>> 0 > $cond_i >>> 0) {
   $__new_data_0_in = __Znwj($mul_i_i217) | 0;
  } else {
   $__new_data_0_in = __Znwj($mul_i_i217) | 0;
  }
  $9 = HEAP8[$__size__i_i] | 0;
  $and_i = $9 & 1;
  if ($and_i << 24 >> 24 == 0) {
   $cond_i183 = $this + 4 | 0;
  } else {
   $cond_i183 = HEAP32[$this + 8 >> 2] | 0;
  }
  $__new_data_1 = $__new_data_0_in;
  $__p_0 = $cond_i183;
  $__was_long_0_off0 = $and_i << 24 >> 24 != 0;
  $__now_long_0_off0 = 1;
  $11 = $9;
 }
 $conv_i_i133 = $11 & 255;
 if (($conv_i_i133 & 1 | 0) == 0) {
  $cond_i154 = $conv_i_i133 >>> 1;
 } else {
  $cond_i154 = HEAP32[$this + 4 >> 2] | 0;
 }
 $add25 = $cond_i154 + 1 | 0;
 if (($add25 | 0) != 0) {
  $s_addr_03_i = $__p_0;
  $n_addr_04_i = $add25;
  $d_addr_05_i = $__new_data_1;
  while (1) {
   $dec_i = $n_addr_04_i - 1 | 0;
   HEAP32[$d_addr_05_i >> 2] = HEAP32[$s_addr_03_i >> 2];
   if (($dec_i | 0) == 0) {
    break;
   } else {
    $s_addr_03_i = $s_addr_03_i + 4 | 0;
    $n_addr_04_i = $dec_i;
    $d_addr_05_i = $d_addr_05_i + 4 | 0;
   }
  }
 }
 if ($__was_long_0_off0) {
  __ZdlPv($__p_0);
 }
 if ($__now_long_0_off0) {
  HEAP32[$this >> 2] = $cond_i222 | 1;
  HEAP32[$this + 4 >> 2] = $cond_i114;
  HEAP32[$this + 8 >> 2] = $__new_data_1;
  return;
 } else {
  HEAP8[$__size__i_i] = $cond_i114 << 1 & 255;
  return;
 }
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add, $__p_new_stuff) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 $__p_new_stuff = $__p_new_stuff | 0;
 var $cond_i = 0, $add = 0, $mul = 0, $_sroa_speculated = 0, $cond_i98_sink = 0, $2 = 0, $d_addr_05_i = 0, $n_addr_04_i = 0, $s_addr_03_i = 0, $dec_i = 0, $d_addr_05_i36 = 0, $n_addr_04_i37 = 0, $s_addr_03_i38 = 0, $dec_i39 = 0, $sub21 = 0, $d_addr_05_i46 = 0, $n_addr_04_i47 = 0, $s_addr_03_i48 = 0, $dec_i49 = 0, $__data__i = 0, $or_i = 0, $__cap__i = 0, $add39 = 0, $__size__i = 0, $arrayidx = 0;
 if ((1073741821 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 }
 if ((HEAP8[$this] & 1) == 0) {
  $cond_i = $this + 4 | 0;
 } else {
  $cond_i = HEAP32[$this + 8 >> 2] | 0;
 }
 do {
  if ($__old_cap >>> 0 < 536870895) {
   $add = $__delta_cap + $__old_cap | 0;
   $mul = $__old_cap << 1;
   $_sroa_speculated = $add >>> 0 < $mul >>> 0 ? $mul : $add;
   if ($_sroa_speculated >>> 0 < 2) {
    $cond_i98_sink = 2;
    break;
   }
   $cond_i98_sink = $_sroa_speculated + 4 & -4;
  } else {
   $cond_i98_sink = 1073741822;
  }
 } while (0);
 $2 = __Znwj($cond_i98_sink << 2) | 0;
 if (($__n_copy | 0) != 0) {
  $s_addr_03_i = $cond_i;
  $n_addr_04_i = $__n_copy;
  $d_addr_05_i = $2;
  while (1) {
   $dec_i = $n_addr_04_i - 1 | 0;
   HEAP32[$d_addr_05_i >> 2] = HEAP32[$s_addr_03_i >> 2];
   if (($dec_i | 0) == 0) {
    break;
   } else {
    $s_addr_03_i = $s_addr_03_i + 4 | 0;
    $n_addr_04_i = $dec_i;
    $d_addr_05_i = $d_addr_05_i + 4 | 0;
   }
  }
 }
 if (($__n_add | 0) != 0) {
  $s_addr_03_i38 = $__p_new_stuff;
  $n_addr_04_i37 = $__n_add;
  $d_addr_05_i36 = $2 + ($__n_copy << 2) | 0;
  while (1) {
   $dec_i39 = $n_addr_04_i37 - 1 | 0;
   HEAP32[$d_addr_05_i36 >> 2] = HEAP32[$s_addr_03_i38 >> 2];
   if (($dec_i39 | 0) == 0) {
    break;
   } else {
    $s_addr_03_i38 = $s_addr_03_i38 + 4 | 0;
    $n_addr_04_i37 = $dec_i39;
    $d_addr_05_i36 = $d_addr_05_i36 + 4 | 0;
   }
  }
 }
 $sub21 = $__old_sz - $__n_del | 0;
 if (($sub21 | 0) != ($__n_copy | 0)) {
  $s_addr_03_i48 = $cond_i + ($__n_del + $__n_copy << 2) | 0;
  $n_addr_04_i47 = $sub21 - $__n_copy | 0;
  $d_addr_05_i46 = $2 + ($__n_add + $__n_copy << 2) | 0;
  while (1) {
   $dec_i49 = $n_addr_04_i47 - 1 | 0;
   HEAP32[$d_addr_05_i46 >> 2] = HEAP32[$s_addr_03_i48 >> 2];
   if (($dec_i49 | 0) == 0) {
    break;
   } else {
    $s_addr_03_i48 = $s_addr_03_i48 + 4 | 0;
    $n_addr_04_i47 = $dec_i49;
    $d_addr_05_i46 = $d_addr_05_i46 + 4 | 0;
   }
  }
 }
 if (($__old_cap | 0) == 1) {
  $__data__i = $this + 8 | 0;
  HEAP32[$__data__i >> 2] = $2;
  $or_i = $cond_i98_sink | 1;
  $__cap__i = $this | 0;
  HEAP32[$__cap__i >> 2] = $or_i;
  $add39 = $sub21 + $__n_add | 0;
  $__size__i = $this + 4 | 0;
  HEAP32[$__size__i >> 2] = $add39;
  $arrayidx = $2 + ($add39 << 2) | 0;
  HEAP32[$arrayidx >> 2] = 0;
  return;
 }
 __ZdlPv($cond_i);
 $__data__i = $this + 8 | 0;
 HEAP32[$__data__i >> 2] = $2;
 $or_i = $cond_i98_sink | 1;
 $__cap__i = $this | 0;
 HEAP32[$__cap__i >> 2] = $or_i;
 $add39 = $sub21 + $__n_add | 0;
 $__size__i = $this + 4 | 0;
 HEAP32[$__size__i >> 2] = $add39;
 $arrayidx = $2 + ($add39 << 2) | 0;
 HEAP32[$arrayidx >> 2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 var $cond_i = 0, $add = 0, $mul = 0, $_sroa_speculated = 0, $cond_i80_sink = 0, $2 = 0, $d_addr_05_i = 0, $n_addr_04_i = 0, $s_addr_03_i = 0, $dec_i = 0, $sub17 = 0, $d_addr_05_i26 = 0, $n_addr_04_i27 = 0, $s_addr_03_i28 = 0, $dec_i29 = 0, $__data__i = 0, $or_i = 0, $__cap__i = 0;
 if ((1073741821 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 }
 if ((HEAP8[$this] & 1) == 0) {
  $cond_i = $this + 4 | 0;
 } else {
  $cond_i = HEAP32[$this + 8 >> 2] | 0;
 }
 do {
  if ($__old_cap >>> 0 < 536870895) {
   $add = $__delta_cap + $__old_cap | 0;
   $mul = $__old_cap << 1;
   $_sroa_speculated = $add >>> 0 < $mul >>> 0 ? $mul : $add;
   if ($_sroa_speculated >>> 0 < 2) {
    $cond_i80_sink = 2;
    break;
   }
   $cond_i80_sink = $_sroa_speculated + 4 & -4;
  } else {
   $cond_i80_sink = 1073741822;
  }
 } while (0);
 $2 = __Znwj($cond_i80_sink << 2) | 0;
 if (($__n_copy | 0) != 0) {
  $s_addr_03_i = $cond_i;
  $n_addr_04_i = $__n_copy;
  $d_addr_05_i = $2;
  while (1) {
   $dec_i = $n_addr_04_i - 1 | 0;
   HEAP32[$d_addr_05_i >> 2] = HEAP32[$s_addr_03_i >> 2];
   if (($dec_i | 0) == 0) {
    break;
   } else {
    $s_addr_03_i = $s_addr_03_i + 4 | 0;
    $n_addr_04_i = $dec_i;
    $d_addr_05_i = $d_addr_05_i + 4 | 0;
   }
  }
 }
 $sub17 = $__old_sz - $__n_del | 0;
 if (($sub17 | 0) != ($__n_copy | 0)) {
  $s_addr_03_i28 = $cond_i + ($__n_del + $__n_copy << 2) | 0;
  $n_addr_04_i27 = $sub17 - $__n_copy | 0;
  $d_addr_05_i26 = $2 + ($__n_add + $__n_copy << 2) | 0;
  while (1) {
   $dec_i29 = $n_addr_04_i27 - 1 | 0;
   HEAP32[$d_addr_05_i26 >> 2] = HEAP32[$s_addr_03_i28 >> 2];
   if (($dec_i29 | 0) == 0) {
    break;
   } else {
    $s_addr_03_i28 = $s_addr_03_i28 + 4 | 0;
    $n_addr_04_i27 = $dec_i29;
    $d_addr_05_i26 = $d_addr_05_i26 + 4 | 0;
   }
  }
 }
 if (($__old_cap | 0) == 1) {
  $__data__i = $this + 8 | 0;
  HEAP32[$__data__i >> 2] = $2;
  $or_i = $cond_i80_sink | 1;
  $__cap__i = $this | 0;
  HEAP32[$__cap__i >> 2] = $or_i;
  return;
 }
 __ZdlPv($cond_i);
 $__data__i = $this + 8 | 0;
 HEAP32[$__data__i >> 2] = $2;
 $or_i = $cond_i80_sink | 1;
 $__cap__i = $this | 0;
 HEAP32[$__cap__i >> 2] = $or_i;
 return;
}
function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__fn__i = 0, $__index__i = 0, $i_05_i = 0, $__locale__i1 = 0, $6 = 0;
 HEAP32[$this >> 2] = 9904;
 $1 = HEAP32[$this + 40 >> 2] | 0;
 if (($1 | 0) != 0) {
  $__fn__i = $this + 32 | 0;
  $__index__i = $this + 36 | 0;
  $i_05_i = $1;
  do {
   $i_05_i = $i_05_i - 1 | 0;
   FUNCTION_TABLE_viii[HEAP32[(HEAP32[$__fn__i >> 2] | 0) + ($i_05_i << 2) >> 2] & 7](0, $this, HEAP32[(HEAP32[$__index__i >> 2] | 0) + ($i_05_i << 2) >> 2] | 0);
  } while (($i_05_i | 0) != 0);
 }
 $__locale__i1 = HEAP32[$this + 28 >> 2] | 0;
 $6 = $__locale__i1 + 4 | 0;
 if (((tempValue = HEAP32[$6 >> 2] | 0, HEAP32[$6 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale__i1 >> 2] | 0) + 8 >> 2] & 511]($__locale__i1);
 }
 _free(HEAP32[$this + 32 >> 2] | 0);
 _free(HEAP32[$this + 36 >> 2] | 0);
 _free(HEAP32[$this + 48 >> 2] | 0);
 _free(HEAP32[$this + 60 >> 2] | 0);
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv($this) {
 $this = $this | 0;
 return -1 | 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEi($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1 | 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEi($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1 | 0;
}
function __ZNKSt3__119__iostream_category4nameEv($this) {
 $this = $this | 0;
 return 3504 | 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $__ninp_ = 0, $__einp_ = 0, $__i_08 = 0, $__s_addr_07 = 0, $1 = 0, $call4 = 0, $storemerge = 0, $inc = 0, $__i_0_lcssa = 0, label = 0;
 $0 = $this;
 if (($__n | 0) <= 0) {
  $__i_0_lcssa = 0;
  return $__i_0_lcssa | 0;
 }
 $__ninp_ = $this + 12 | 0;
 $__einp_ = $this + 16 | 0;
 $__s_addr_07 = $__s;
 $__i_08 = 0;
 while (1) {
  $1 = HEAP32[$__ninp_ >> 2] | 0;
  if ($1 >>> 0 < (HEAP32[$__einp_ >> 2] | 0) >>> 0) {
   HEAP32[$__ninp_ >> 2] = $1 + 4;
   $storemerge = HEAP32[$1 >> 2] | 0;
  } else {
   $call4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 40 >> 2] & 255]($this) | 0;
   if (($call4 | 0) == -1) {
    $__i_0_lcssa = $__i_08;
    label = 8297;
    break;
   } else {
    $storemerge = $call4;
   }
  }
  HEAP32[$__s_addr_07 >> 2] = $storemerge;
  $inc = $__i_08 + 1 | 0;
  if (($inc | 0) < ($__n | 0)) {
   $__s_addr_07 = $__s_addr_07 + 4 | 0;
   $__i_08 = $inc;
  } else {
   $__i_0_lcssa = $inc;
   label = 8296;
   break;
  }
 }
 if ((label | 0) == 8296) {
  return $__i_0_lcssa | 0;
 } else if ((label | 0) == 8297) {
  return $__i_0_lcssa | 0;
 }
 return 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv($this) {
 $this = $this | 0;
 var $__ninp_ = 0, $2 = 0, $retval_0 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] & 255]($this) | 0) == -1) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $__ninp_ = $this + 12 | 0;
 $2 = HEAP32[$__ninp_ >> 2] | 0;
 HEAP32[$__ninp_ >> 2] = $2 + 4;
 $retval_0 = HEAP32[$2 >> 2] | 0;
 return $retval_0 | 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $__nout_ = 0, $__eout_ = 0, $__s_addr_07 = 0, $__i_06 = 0, $1 = 0, $3 = 0, $inc = 0, $__i_0_lcssa = 0, label = 0;
 $0 = $this;
 if (($__n | 0) <= 0) {
  $__i_0_lcssa = 0;
  return $__i_0_lcssa | 0;
 }
 $__nout_ = $this + 24 | 0;
 $__eout_ = $this + 28 | 0;
 $__i_06 = 0;
 $__s_addr_07 = $__s;
 while (1) {
  $1 = HEAP32[$__nout_ >> 2] | 0;
  if ($1 >>> 0 < (HEAP32[$__eout_ >> 2] | 0) >>> 0) {
   $3 = HEAP32[$__s_addr_07 >> 2] | 0;
   HEAP32[$__nout_ >> 2] = $1 + 4;
   HEAP32[$1 >> 2] = $3;
  } else {
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 63]($this, HEAP32[$__s_addr_07 >> 2] | 0) | 0) == -1) {
    $__i_0_lcssa = $__i_06;
    label = 8312;
    break;
   }
  }
  $inc = $__i_06 + 1 | 0;
  if (($inc | 0) < ($__n | 0)) {
   $__i_06 = $inc;
   $__s_addr_07 = $__s_addr_07 + 4 | 0;
  } else {
   $__i_0_lcssa = $inc;
   label = 8311;
   break;
  }
 }
 if ((label | 0) == 8311) {
  return $__i_0_lcssa | 0;
 } else if ((label | 0) == 8312) {
  return $__i_0_lcssa | 0;
 }
 return 0;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $5 = 0;
 $0 = $this;
 $5 = HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0;
 __ZNSt3__18ios_baseD2Ev($0 + ($5 + 8) | 0);
 __ZdlPv($0 + $5 | 0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0) + 8) | 0);
 return;
}
function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $5 = 0;
 $0 = $this;
 $5 = HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0;
 __ZNSt3__18ios_baseD2Ev($0 + ($5 + 8) | 0);
 __ZdlPv($0 + $5 | 0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0) + 8) | 0);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $5 = 0;
 $0 = $this;
 $5 = HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0;
 __ZNSt3__18ios_baseD2Ev($0 + ($5 + 4) | 0);
 __ZdlPv($0 + $5 | 0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0) + 4) | 0);
 return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $5 = 0;
 $0 = $this;
 $5 = HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0;
 __ZNSt3__18ios_baseD2Ev($0 + ($5 + 4) | 0);
 __ZdlPv($0 + $5 | 0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0) + 4) | 0);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this | 0;
 var $agg_tmp_i_i = 0, $__s = 0, $0 = 0, $vbase_offset = 0, $2 = 0, $__ok__i_i = 0, $9 = 0, $12 = 0, $vbase_offset18 = 0, $17 = 0, $or_i_i = 0, $exception_i = 0, __stackBase__ = 0, $$etemp$3$0 = 0, $$etemp$3$1 = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $agg_tmp_i_i = __stackBase__ | 0;
 $__s = __stackBase__ + 8 | 0;
 $0 = $this;
 $vbase_offset = HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0;
 $2 = $this;
 if ((HEAP32[$2 + ($vbase_offset + 24) >> 2] | 0) == 0) {
  STACKTOP = __stackBase__;
  return $this | 0;
 }
 $__ok__i_i = $__s | 0;
 HEAP8[$__ok__i_i] = 0;
 HEAP32[$__s + 4 >> 2] = $this;
 do {
  if ((HEAP32[$2 + ($vbase_offset + 16) >> 2] | 0) == 0) {
   $9 = HEAP32[$2 + ($vbase_offset + 72) >> 2] | 0;
   if (($9 | 0) != 0) {
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($9) | 0;
   }
   HEAP8[$__ok__i_i] = 1;
   $12 = HEAP32[$2 + ((HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0) + 24) >> 2] | 0;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 255]($12) | 0) != -1) {
    break;
   }
   $vbase_offset18 = HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0;
   $17 = $2 + ($vbase_offset18 + 16) | 0;
   $or_i_i = HEAP32[$17 >> 2] | 1;
   HEAP32[$17 >> 2] = $or_i_i;
   if (($or_i_i & HEAP32[$2 + ($vbase_offset18 + 20) >> 2] | 0) == 0) {
    break;
   }
   $exception_i = ___cxa_allocate_exception(16) | 0;
   if (!(HEAP8[18424] | 0)) {
    HEAP32[2046] = 10744;
    HEAP8[18424] = 1;
   }
   $$etemp$3$0 = _bitshift64Shl(8184, 0, 32) | 0;
   $$etemp$3$1 = tempRet0;
   HEAP32[$agg_tmp_i_i >> 2] = $$etemp$3$0 & 0 | 1;
   HEAP32[$agg_tmp_i_i + 4 >> 2] = $$etemp$3$1 & -1;
   __ZNSt3__112system_errorC2ENS_10error_codeEPKc($exception_i, $agg_tmp_i_i, 2920);
   HEAP32[$exception_i >> 2] = 9928;
   ___cxa_throw($exception_i | 0, 15920, 26);
   return 0;
  }
 } while (0);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 STACKTOP = __stackBase__;
 return $this | 0;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($this) {
 $this = $this | 0;
 var $agg_tmp_i_i = 0, $__s = 0, $0 = 0, $vbase_offset = 0, $2 = 0, $__ok__i10 = 0, $9 = 0, $12 = 0, $vbase_offset18 = 0, $17 = 0, $or_i_i = 0, $exception_i = 0, __stackBase__ = 0, $$etemp$3$0 = 0, $$etemp$3$1 = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $agg_tmp_i_i = __stackBase__ | 0;
 $__s = __stackBase__ + 8 | 0;
 $0 = $this;
 $vbase_offset = HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0;
 $2 = $this;
 if ((HEAP32[$2 + ($vbase_offset + 24) >> 2] | 0) == 0) {
  STACKTOP = __stackBase__;
  return $this | 0;
 }
 $__ok__i10 = $__s | 0;
 HEAP8[$__ok__i10] = 0;
 HEAP32[$__s + 4 >> 2] = $this;
 do {
  if ((HEAP32[$2 + ($vbase_offset + 16) >> 2] | 0) == 0) {
   $9 = HEAP32[$2 + ($vbase_offset + 72) >> 2] | 0;
   if (($9 | 0) != 0) {
    __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($9) | 0;
   }
   HEAP8[$__ok__i10] = 1;
   $12 = HEAP32[$2 + ((HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0) + 24) >> 2] | 0;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 255]($12) | 0) != -1) {
    break;
   }
   $vbase_offset18 = HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0;
   $17 = $2 + ($vbase_offset18 + 16) | 0;
   $or_i_i = HEAP32[$17 >> 2] | 1;
   HEAP32[$17 >> 2] = $or_i_i;
   if (($or_i_i & HEAP32[$2 + ($vbase_offset18 + 20) >> 2] | 0) == 0) {
    break;
   }
   $exception_i = ___cxa_allocate_exception(16) | 0;
   if (!(HEAP8[18424] | 0)) {
    HEAP32[2046] = 10744;
    HEAP8[18424] = 1;
   }
   $$etemp$3$0 = _bitshift64Shl(8184, 0, 32) | 0;
   $$etemp$3$1 = tempRet0;
   HEAP32[$agg_tmp_i_i >> 2] = $$etemp$3$0 & 0 | 1;
   HEAP32[$agg_tmp_i_i + 4 >> 2] = $$etemp$3$1 & -1;
   __ZNSt3__112system_errorC2ENS_10error_codeEPKc($exception_i, $agg_tmp_i_i, 2920);
   HEAP32[$exception_i >> 2] = 9928;
   ___cxa_throw($exception_i | 0, 15920, 26);
   return 0;
  }
 } while (0);
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
 STACKTOP = __stackBase__;
 return $this | 0;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this | 0;
 var $agg_tmp_i_i = 0, $__os_ = 0, $ref = 0, $vbase_offset = 0, $2 = 0, $ref23 = 0, $13 = 0, $ref34 = 0, $vbase_offset37 = 0, $19 = 0, $20 = 0, $or_i_i = 0, $exception_i = 0, __stackBase__ = 0, $$etemp$3$0 = 0, $$etemp$3$1 = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $agg_tmp_i_i = __stackBase__ | 0;
 $__os_ = $this + 4 | 0;
 $ref = HEAP32[$__os_ >> 2] | 0;
 $vbase_offset = HEAP32[(HEAP32[$ref >> 2] | 0) - 12 >> 2] | 0;
 $2 = $ref;
 if ((HEAP32[$2 + ($vbase_offset + 24) >> 2] | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 if ((HEAP32[$2 + ($vbase_offset + 16) >> 2] | 0) != 0) {
  STACKTOP = __stackBase__;
  return;
 }
 if ((HEAP32[$2 + ($vbase_offset + 4) >> 2] & 8192 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 if (__ZSt18uncaught_exceptionv() | 0) {
  STACKTOP = __stackBase__;
  return;
 }
 $ref23 = HEAP32[$__os_ >> 2] | 0;
 $13 = HEAP32[$ref23 + ((HEAP32[(HEAP32[$ref23 >> 2] | 0) - 12 >> 2] | 0) + 24) >> 2] | 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 24 >> 2] & 255]($13) | 0) != -1) {
  STACKTOP = __stackBase__;
  return;
 }
 $ref34 = HEAP32[$__os_ >> 2] | 0;
 $vbase_offset37 = HEAP32[(HEAP32[$ref34 >> 2] | 0) - 12 >> 2] | 0;
 $19 = $ref34;
 $20 = $19 + ($vbase_offset37 + 16) | 0;
 $or_i_i = HEAP32[$20 >> 2] | 1;
 HEAP32[$20 >> 2] = $or_i_i;
 if (($or_i_i & HEAP32[$19 + ($vbase_offset37 + 20) >> 2] | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 $exception_i = ___cxa_allocate_exception(16) | 0;
 if (!(HEAP8[18424] | 0)) {
  HEAP32[2046] = 10744;
  HEAP8[18424] = 1;
 }
 $$etemp$3$0 = _bitshift64Shl(8184, 0, 32) | 0;
 $$etemp$3$1 = tempRet0;
 HEAP32[$agg_tmp_i_i >> 2] = $$etemp$3$0 & 0 | 1;
 HEAP32[$agg_tmp_i_i + 4 >> 2] = $$etemp$3$1 & -1;
 __ZNSt3__112system_errorC2ENS_10error_codeEPKc($exception_i, $agg_tmp_i_i, 2920);
 HEAP32[$exception_i >> 2] = 9928;
 ___cxa_throw($exception_i | 0, 15920, 26);
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($this) {
 $this = $this | 0;
 var $agg_tmp_i_i = 0, $__os_ = 0, $ref = 0, $vbase_offset = 0, $2 = 0, $ref23 = 0, $13 = 0, $ref34 = 0, $vbase_offset37 = 0, $19 = 0, $20 = 0, $or_i_i = 0, $exception_i = 0, __stackBase__ = 0, $$etemp$3$0 = 0, $$etemp$3$1 = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $agg_tmp_i_i = __stackBase__ | 0;
 $__os_ = $this + 4 | 0;
 $ref = HEAP32[$__os_ >> 2] | 0;
 $vbase_offset = HEAP32[(HEAP32[$ref >> 2] | 0) - 12 >> 2] | 0;
 $2 = $ref;
 if ((HEAP32[$2 + ($vbase_offset + 24) >> 2] | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 if ((HEAP32[$2 + ($vbase_offset + 16) >> 2] | 0) != 0) {
  STACKTOP = __stackBase__;
  return;
 }
 if ((HEAP32[$2 + ($vbase_offset + 4) >> 2] & 8192 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 if (__ZSt18uncaught_exceptionv() | 0) {
  STACKTOP = __stackBase__;
  return;
 }
 $ref23 = HEAP32[$__os_ >> 2] | 0;
 $13 = HEAP32[$ref23 + ((HEAP32[(HEAP32[$ref23 >> 2] | 0) - 12 >> 2] | 0) + 24) >> 2] | 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 24 >> 2] & 255]($13) | 0) != -1) {
  STACKTOP = __stackBase__;
  return;
 }
 $ref34 = HEAP32[$__os_ >> 2] | 0;
 $vbase_offset37 = HEAP32[(HEAP32[$ref34 >> 2] | 0) - 12 >> 2] | 0;
 $19 = $ref34;
 $20 = $19 + ($vbase_offset37 + 16) | 0;
 $or_i_i = HEAP32[$20 >> 2] | 1;
 HEAP32[$20 >> 2] = $or_i_i;
 if (($or_i_i & HEAP32[$19 + ($vbase_offset37 + 20) >> 2] | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 $exception_i = ___cxa_allocate_exception(16) | 0;
 if (!(HEAP8[18424] | 0)) {
  HEAP32[2046] = 10744;
  HEAP8[18424] = 1;
 }
 $$etemp$3$0 = _bitshift64Shl(8184, 0, 32) | 0;
 $$etemp$3$1 = tempRet0;
 HEAP32[$agg_tmp_i_i >> 2] = $$etemp$3$0 & 0 | 1;
 HEAP32[$agg_tmp_i_i + 4 >> 2] = $$etemp$3$1 & -1;
 __ZNSt3__112system_errorC2ENS_10error_codeEPKc($exception_i, $agg_tmp_i_i, 2920);
 HEAP32[$exception_i >> 2] = 9928;
 ___cxa_throw($exception_i | 0, 15920, 26);
}
function __ZNSt3__119__iostream_categoryD1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__17collateIcED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__17collateIwED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this, $__lo1, $__hi1, $__lo2, $__hi2) {
 $this = $this | 0;
 $__lo1 = $__lo1 | 0;
 $__hi1 = $__hi1 | 0;
 $__lo2 = $__lo2 | 0;
 $__hi2 = $__hi2 | 0;
 var $__lo2_addr_010 = 0, $__lo1_addr_09 = 0, $0 = 0, $1 = 0, $incdec_ptr = 0, $incdec_ptr10 = 0, $__lo1_addr_0_lcssa = 0, $retval_0 = 0, label = 0;
 L9795 : do {
  if (($__lo2 | 0) == ($__hi2 | 0)) {
   $__lo1_addr_0_lcssa = $__lo1;
  } else {
   $__lo1_addr_09 = $__lo1;
   $__lo2_addr_010 = $__lo2;
   while (1) {
    if (($__lo1_addr_09 | 0) == ($__hi1 | 0)) {
     $retval_0 = -1;
     label = 8442;
     break;
    }
    $0 = HEAP8[$__lo1_addr_09] | 0;
    $1 = HEAP8[$__lo2_addr_010] | 0;
    if ($0 << 24 >> 24 < $1 << 24 >> 24) {
     $retval_0 = -1;
     label = 8444;
     break;
    }
    if ($1 << 24 >> 24 < $0 << 24 >> 24) {
     $retval_0 = 1;
     label = 8441;
     break;
    }
    $incdec_ptr = $__lo1_addr_09 + 1 | 0;
    $incdec_ptr10 = $__lo2_addr_010 + 1 | 0;
    if (($incdec_ptr10 | 0) == ($__hi2 | 0)) {
     $__lo1_addr_0_lcssa = $incdec_ptr;
     break L9795;
    } else {
     $__lo1_addr_09 = $incdec_ptr;
     $__lo2_addr_010 = $incdec_ptr10;
    }
   }
   if ((label | 0) == 8441) {
    return $retval_0 | 0;
   } else if ((label | 0) == 8442) {
    return $retval_0 | 0;
   } else if ((label | 0) == 8444) {
    return $retval_0 | 0;
   }
  }
 } while (0);
 $retval_0 = ($__lo1_addr_0_lcssa | 0) != ($__hi1 | 0) & 1;
 return $retval_0 | 0;
}
function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this, $__lo, $__hi) {
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $__h_08 = 0, $__p_07 = 0, $add = 0, $and = 0, $xor = 0, $incdec_ptr = 0, $__h_0_lcssa = 0;
 if (($__lo | 0) == ($__hi | 0)) {
  $__h_0_lcssa = 0;
  return $__h_0_lcssa | 0;
 } else {
  $__p_07 = $__lo;
  $__h_08 = 0;
 }
 while (1) {
  $add = (HEAP8[$__p_07] | 0) + ($__h_08 << 4) | 0;
  $and = $add & -268435456;
  $xor = ($and >>> 24 | $and) ^ $add;
  $incdec_ptr = $__p_07 + 1 | 0;
  if (($incdec_ptr | 0) == ($__hi | 0)) {
   $__h_0_lcssa = $xor;
   break;
  } else {
   $__p_07 = $incdec_ptr;
   $__h_08 = $xor;
  }
 }
 return $__h_0_lcssa | 0;
}
function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this, $__lo1, $__hi1, $__lo2, $__hi2) {
 $this = $this | 0;
 $__lo1 = $__lo1 | 0;
 $__hi1 = $__hi1 | 0;
 $__lo2 = $__lo2 | 0;
 $__hi2 = $__hi2 | 0;
 var $__lo2_addr_011 = 0, $__lo1_addr_010 = 0, $0 = 0, $1 = 0, $incdec_ptr = 0, $incdec_ptr7 = 0, $__lo1_addr_0_lcssa = 0, $retval_0 = 0, label = 0;
 L9814 : do {
  if (($__lo2 | 0) == ($__hi2 | 0)) {
   $__lo1_addr_0_lcssa = $__lo1;
  } else {
   $__lo1_addr_010 = $__lo1;
   $__lo2_addr_011 = $__lo2;
   while (1) {
    if (($__lo1_addr_010 | 0) == ($__hi1 | 0)) {
     $retval_0 = -1;
     label = 8460;
     break;
    }
    $0 = HEAP32[$__lo1_addr_010 >> 2] | 0;
    $1 = HEAP32[$__lo2_addr_011 >> 2] | 0;
    if (($0 | 0) < ($1 | 0)) {
     $retval_0 = -1;
     label = 8457;
     break;
    }
    if (($1 | 0) < ($0 | 0)) {
     $retval_0 = 1;
     label = 8459;
     break;
    }
    $incdec_ptr = $__lo1_addr_010 + 4 | 0;
    $incdec_ptr7 = $__lo2_addr_011 + 4 | 0;
    if (($incdec_ptr7 | 0) == ($__hi2 | 0)) {
     $__lo1_addr_0_lcssa = $incdec_ptr;
     break L9814;
    } else {
     $__lo1_addr_010 = $incdec_ptr;
     $__lo2_addr_011 = $incdec_ptr7;
    }
   }
   if ((label | 0) == 8460) {
    return $retval_0 | 0;
   } else if ((label | 0) == 8459) {
    return $retval_0 | 0;
   } else if ((label | 0) == 8457) {
    return $retval_0 | 0;
   }
  }
 } while (0);
 $retval_0 = ($__lo1_addr_0_lcssa | 0) != ($__hi1 | 0) & 1;
 return $retval_0 | 0;
}
function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this, $__lo, $__hi) {
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $__h_08 = 0, $__p_07 = 0, $add = 0, $and = 0, $xor = 0, $incdec_ptr = 0, $__h_0_lcssa = 0;
 if (($__lo | 0) == ($__hi | 0)) {
  $__h_0_lcssa = 0;
  return $__h_0_lcssa | 0;
 } else {
  $__p_07 = $__lo;
  $__h_08 = 0;
 }
 while (1) {
  $add = (HEAP32[$__p_07 >> 2] | 0) + ($__h_08 << 4) | 0;
  $and = $add & -268435456;
  $xor = ($and >>> 24 | $and) ^ $add;
  $incdec_ptr = $__p_07 + 4 | 0;
  if (($incdec_ptr | 0) == ($__hi | 0)) {
   $__h_0_lcssa = $xor;
   break;
  } else {
   $__p_07 = $incdec_ptr;
   $__h_08 = $xor;
  }
 }
 return $__h_0_lcssa | 0;
}
function __ZNSt3__18ios_base7failureD0Ev($this) {
 $this = $this | 0;
 var $__imp__i_i_i = 0, $1 = 0, $add_ptr_i_i_i_i = 0, $5 = 0;
 HEAP32[$this >> 2] = 9216;
 $__imp__i_i_i = $this + 4 | 0;
 $1 = (HEAP32[$__imp__i_i_i >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) >= 0) {
  $5 = $this;
  __ZdlPv($5);
  return;
 }
 $add_ptr_i_i_i_i = (HEAP32[$__imp__i_i_i >> 2] | 0) - 12 | 0;
 if (($add_ptr_i_i_i_i | 0) == 0) {
  $5 = $this;
  __ZdlPv($5);
  return;
 }
 __ZdaPv($add_ptr_i_i_i_i);
 $5 = $this;
 __ZdlPv($5);
 return;
}
function __ZNSt3__18ios_base7failureD2Ev($this) {
 $this = $this | 0;
 var $__imp__i_i = 0, $1 = 0, $add_ptr_i_i_i = 0;
 HEAP32[$this >> 2] = 9216;
 $__imp__i_i = $this + 4 | 0;
 $1 = (HEAP32[$__imp__i_i >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) >= 0) {
  return;
 }
 $add_ptr_i_i_i = (HEAP32[$__imp__i_i >> 2] | 0) - 12 | 0;
 if (($add_ptr_i_i_i | 0) == 0) {
  return;
 }
 __ZdaPv($add_ptr_i_i_i);
 return;
}
function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__119__iostream_categoryD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__119__iostream_category7messageEi($agg_result, $this, $ev) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $ev = $ev | 0;
 var $call_i = 0, $call_i_i_i_i = 0, $and_i_i_i_i = 0, $call_i_i_i2_i = 0, $__p_0_i_i = 0, $call_i_i_i = 0;
 if (($ev | 0) == 1) {
  $call_i_i_i = __Znwj(48) | 0;
  HEAP32[$agg_result + 8 >> 2] = $call_i_i_i;
  HEAP32[$agg_result >> 2] = 49;
  HEAP32[$agg_result + 4 >> 2] = 35;
  _memcpy($call_i_i_i | 0, 5416, 35) | 0;
  HEAP8[$call_i_i_i + 35 | 0] = 0;
  return;
 }
 $call_i = _strerror($ev | 0) | 0;
 $call_i_i_i_i = _strlen($call_i | 0) | 0;
 if (($call_i_i_i_i | 0) == -1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 }
 if ($call_i_i_i_i >>> 0 < 11) {
  HEAP8[$agg_result] = $call_i_i_i_i << 1 & 255;
  $__p_0_i_i = $agg_result + 1 | 0;
 } else {
  $and_i_i_i_i = $call_i_i_i_i + 16 & -16;
  $call_i_i_i2_i = __Znwj($and_i_i_i_i) | 0;
  HEAP32[$agg_result + 8 >> 2] = $call_i_i_i2_i;
  HEAP32[$agg_result >> 2] = $and_i_i_i_i | 1;
  HEAP32[$agg_result + 4 >> 2] = $call_i_i_i_i;
  $__p_0_i_i = $call_i_i_i2_i;
 }
 _memcpy($__p_0_i_i | 0, $call_i | 0, $call_i_i_i_i) | 0;
 HEAP8[$__p_0_i_i + $call_i_i_i_i | 0] = 0;
 return;
}
function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg_result, $this, $__lo, $__hi) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $sub_ptr_rhs_cast_i_i_i = 0, $sub_ptr_sub_i_i_i = 0, $and_i_i_i = 0, $call_i_i_i = 0, $__p_0_ph_i = 0, $scevgep_i = 0, $__first_addr_014_i = 0, $__p_013_i = 0, $incdec_ptr_i = 0, $__p_0_lcssa_i = 0;
 $sub_ptr_rhs_cast_i_i_i = $__lo;
 $sub_ptr_sub_i_i_i = $__hi - $sub_ptr_rhs_cast_i_i_i | 0;
 if (($sub_ptr_sub_i_i_i | 0) == -1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 }
 if ($sub_ptr_sub_i_i_i >>> 0 < 11) {
  HEAP8[$agg_result] = $sub_ptr_sub_i_i_i << 1 & 255;
  $__p_0_ph_i = $agg_result + 1 | 0;
 } else {
  $and_i_i_i = $sub_ptr_sub_i_i_i + 16 & -16;
  $call_i_i_i = __Znwj($and_i_i_i) | 0;
  HEAP32[$agg_result + 8 >> 2] = $call_i_i_i;
  HEAP32[$agg_result >> 2] = $and_i_i_i | 1;
  HEAP32[$agg_result + 4 >> 2] = $sub_ptr_sub_i_i_i;
  $__p_0_ph_i = $call_i_i_i;
 }
 if (($__lo | 0) == ($__hi | 0)) {
  $__p_0_lcssa_i = $__p_0_ph_i;
  HEAP8[$__p_0_lcssa_i] = 0;
  return;
 }
 $scevgep_i = $__hi + (-$sub_ptr_rhs_cast_i_i_i | 0) | 0;
 $__p_013_i = $__p_0_ph_i;
 $__first_addr_014_i = $__lo;
 while (1) {
  HEAP8[$__p_013_i] = HEAP8[$__first_addr_014_i] | 0;
  $incdec_ptr_i = $__first_addr_014_i + 1 | 0;
  if (($incdec_ptr_i | 0) == ($__hi | 0)) {
   break;
  } else {
   $__p_013_i = $__p_013_i + 1 | 0;
   $__first_addr_014_i = $incdec_ptr_i;
  }
 }
 $__p_0_lcssa_i = $__p_0_ph_i + $scevgep_i | 0;
 HEAP8[$__p_0_lcssa_i] = 0;
 return;
}
function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg_result, $this, $__lo, $__hi) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $sub_ptr_rhs_cast_i_i_i = 0, $sub_ptr_sub_i_i_i = 0, $sub_ptr_div_i_i_i = 0, $and_i_i_i = 0, $0 = 0, $__p_0_ph_i = 0, $2 = 0, $__first_addr_015_i = 0, $__p_014_i = 0, $incdec_ptr_i = 0, $__p_0_lcssa_i = 0;
 $sub_ptr_rhs_cast_i_i_i = $__lo;
 $sub_ptr_sub_i_i_i = $__hi - $sub_ptr_rhs_cast_i_i_i | 0;
 $sub_ptr_div_i_i_i = $sub_ptr_sub_i_i_i >> 2;
 if ($sub_ptr_div_i_i_i >>> 0 > 1073741822) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 }
 if ($sub_ptr_div_i_i_i >>> 0 < 2) {
  HEAP8[$agg_result] = $sub_ptr_sub_i_i_i >>> 1 & 255;
  $__p_0_ph_i = $agg_result + 4 | 0;
 } else {
  $and_i_i_i = $sub_ptr_div_i_i_i + 4 & -4;
  $0 = __Znwj($and_i_i_i << 2) | 0;
  HEAP32[$agg_result + 8 >> 2] = $0;
  HEAP32[$agg_result >> 2] = $and_i_i_i | 1;
  HEAP32[$agg_result + 4 >> 2] = $sub_ptr_div_i_i_i;
  $__p_0_ph_i = $0;
 }
 if (($__lo | 0) == ($__hi | 0)) {
  $__p_0_lcssa_i = $__p_0_ph_i;
  HEAP32[$__p_0_lcssa_i >> 2] = 0;
  return;
 }
 $2 = ($__hi - 4 + (-$sub_ptr_rhs_cast_i_i_i | 0) | 0) >>> 2;
 $__p_014_i = $__p_0_ph_i;
 $__first_addr_015_i = $__lo;
 while (1) {
  HEAP32[$__p_014_i >> 2] = HEAP32[$__first_addr_015_i >> 2];
  $incdec_ptr_i = $__first_addr_015_i + 4 | 0;
  if (($incdec_ptr_i | 0) == ($__hi | 0)) {
   break;
  } else {
   $__p_014_i = $__p_014_i + 4 | 0;
   $__first_addr_015_i = $incdec_ptr_i;
  }
 }
 $__p_0_lcssa_i = $__p_0_ph_i + ($2 + 1 << 2) | 0;
 HEAP32[$__p_0_lcssa_i >> 2] = 0;
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p_i_i_i19 = 0, $__p_i_i_i = 0, $__lv = 0, $ref_tmp = 0, $agg_tmp = 0, $agg_tmp2 = 0, $__names = 0, $agg_tmp14 = 0, $2 = 0, $3 = 0, $10 = 0, $11 = 0, $__loc__i = 0, $__locale_2_i1_i = 0, $13 = 0, $sub_i_i = 0, $21 = 0, $22 = 0, $exception_i_i = 0, $24 = 0, $__locale_2_i1_i17 = 0, $29 = 0, $sub_i_i26 = 0, $37 = 0, $38 = 0, $exception_i_i38 = 0, $40 = 0, $arrayinit_begin = 0, $45 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i19 = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 16 | 0;
 $__lv = __stackBase__ + 32 | 0;
 $ref_tmp = __stackBase__ + 40 | 0;
 $agg_tmp = __stackBase__ + 48 | 0;
 $agg_tmp2 = __stackBase__ + 56 | 0;
 $__names = __stackBase__ + 64 | 0;
 $agg_tmp14 = __stackBase__ + 88 | 0;
 if ((HEAP32[$__iob + 4 >> 2] & 1 | 0) == 0) {
  HEAP32[$__lv >> 2] = -1;
  $2 = HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] | 0;
  $3 = $__b | 0;
  HEAP32[$agg_tmp >> 2] = HEAP32[$3 >> 2];
  HEAP32[$agg_tmp2 >> 2] = HEAP32[$__e >> 2];
  FUNCTION_TABLE_viiiiiii[$2 & 127]($ref_tmp, $this, $agg_tmp, $agg_tmp2, $__iob, $__err, $__lv);
  $10 = HEAP32[$ref_tmp >> 2] | 0;
  HEAP32[$3 >> 2] = $10;
  $11 = HEAP32[$__lv >> 2] | 0;
  if (($11 | 0) == 1) {
   HEAP8[$__v] = 1;
  } else if (($11 | 0) == 0) {
   HEAP8[$__v] = 0;
  } else {
   HEAP8[$__v] = 1;
   HEAP32[$__err >> 2] = 4;
  }
  HEAP32[$agg_result >> 2] = $10;
  STACKTOP = __stackBase__;
  return;
 }
 $__loc__i = $__iob + 28 | 0;
 $__locale_2_i1_i = HEAP32[$__loc__i >> 2] | 0;
 $13 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$13 >> 2] | 0, HEAP32[$13 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17816;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4455] | 0) - 1 | 0;
 $21 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $21 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $22 = HEAP32[$21 + ($sub_i_i << 2) >> 2] | 0;
   if (($22 | 0) == 0) {
    break;
   }
   $24 = $22;
   if (((tempValue = HEAP32[$13 >> 2] | 0, HEAP32[$13 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   $__locale_2_i1_i17 = HEAP32[$__loc__i >> 2] | 0;
   $29 = $__locale_2_i1_i17 + 4 | 0;
   tempValue = HEAP32[$29 >> 2] | 0, HEAP32[$29 >> 2] = tempValue + 1, tempValue;
   if ((HEAP32[4358] | 0) != -1) {
    HEAP32[$__p_i_i_i19 >> 2] = 17432;
    HEAP32[$__p_i_i_i19 + 4 >> 2] = 12;
    HEAP32[$__p_i_i_i19 + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(17432, $__p_i_i_i19, 102);
   }
   $sub_i_i26 = (HEAP32[4359] | 0) - 1 | 0;
   $37 = HEAP32[$__locale_2_i1_i17 + 8 >> 2] | 0;
   do {
    if ((HEAP32[$__locale_2_i1_i17 + 12 >> 2] | 0) - $37 >> 2 >>> 0 > $sub_i_i26 >>> 0) {
     $38 = HEAP32[$37 + ($sub_i_i26 << 2) >> 2] | 0;
     if (($38 | 0) == 0) {
      break;
     }
     $40 = $38;
     if (((tempValue = HEAP32[$29 >> 2] | 0, HEAP32[$29 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
      FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i17 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i17);
     }
     $arrayinit_begin = $__names | 0;
     $45 = $38;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$45 >> 2] | 0) + 24 >> 2] & 127]($arrayinit_begin, $40);
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$45 >> 2] | 0) + 28 >> 2] & 127]($__names + 12 | 0, $40);
     HEAP32[$agg_tmp14 >> 2] = HEAP32[$__e >> 2];
     HEAP8[$__v] = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $agg_tmp14, $arrayinit_begin, $__names + 24 | 0, $24, $__err, 1) | 0) == ($arrayinit_begin | 0) & 1;
     HEAP32[$agg_result >> 2] = HEAP32[$__b >> 2];
     if ((HEAP8[$__names + 12 | 0] & 1) != 0) {
      __ZdlPv(HEAP32[$__names + 20 >> 2] | 0);
     }
     if ((HEAP8[$__names] & 1) == 0) {
      STACKTOP = __stackBase__;
      return;
     }
     __ZdlPv(HEAP32[$__names + 8 >> 2] | 0);
     STACKTOP = __stackBase__;
     return;
    }
   } while (0);
   $exception_i_i38 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i38 >> 2] = 9184;
   ___cxa_throw($exception_i_i38 | 0, 15328, 208);
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms = 0, $__thousands_sep = 0, $__grouping = 0, $__a = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $and_i = 0, $retval_0_i = 0, $arraydecay = 0, $1 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $2 = 0, $3 = 0, $8 = 0, $cmp_i_i_i = 0, $9 = 0, $cmp_i31_i_i = 0, $cmp_i31_i_i24 = 0, $14 = 0, $__ninp__i_i = 0, $15 = 0, $__einp__i_i = 0, $retval_i_i_0_off0 = 0, $22 = 0, $25 = 0, $cmp_i31_i_i23 = 0, $26 = 0, $__size__i_i = 0, $conv_i_i61 = 0, $cond_i = 0, $29 = 0, $30 = 0, $37 = 0, $cmp_i_i_i99 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 280 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms = __stackBase__ | 0;
 $__thousands_sep = __stackBase__ + 32 | 0;
 $__grouping = __stackBase__ + 40 | 0;
 $__a = __stackBase__ + 56 | 0;
 $__a_end = __stackBase__ + 96 | 0;
 $__g = __stackBase__ + 104 | 0;
 $__g_end = __stackBase__ + 264 | 0;
 $__dc = __stackBase__ + 272 | 0;
 $and_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i | 0) == 0) {
  $retval_0_i = 0;
 } else if (($and_i | 0) == 64) {
  $retval_0_i = 8;
 } else if (($and_i | 0) == 8) {
  $retval_0_i = 16;
 } else {
  $retval_0_i = 10;
 }
 $arraydecay = $__atoms | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $arraydecay, $__thousands_sep);
 $1 = $__a | 0;
 _memset($1 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $1;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $2 = HEAP8[$__thousands_sep] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L9944 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $8 = 0;
   } else {
    if ((HEAP32[$3 + 12 >> 2] | 0) != (HEAP32[$3 + 16 >> 2] | 0)) {
     $8 = $3;
     break;
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0) != -1) {
     $8 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $8 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($8 | 0) == 0;
  $9 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($9 | 0) == 0) {
    label = 8583;
   } else {
    if ((HEAP32[$9 + 12 >> 2] | 0) != (HEAP32[$9 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = 0;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = 0;
      break L9944;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 8583;
     break;
    } else {
     $cmp_i31_i_i = ($9 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i31_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = $cmp_i31_i_i;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = $cmp_i31_i_i;
      break L9944;
     }
    }
   }
  } while (0);
  if ((label | 0) == 8583) {
   label = 0;
   if ($cmp_i_i_i) {
    $26 = 0;
    $cmp_i31_i_i23 = 1;
    break;
   } else {
    $14 = 0;
    $cmp_i31_i_i24 = 1;
   }
  }
  $__ninp__i_i = $8 + 12 | 0;
  $15 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $8 + 16 | 0;
  if (($15 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) & 255;
  } else {
   $retval_i_i_0_off0 = HEAP8[$15] | 0;
  }
  if ((__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($retval_i_i_0_off0, $retval_0_i, $1, $__a_end, $__dc, $2, $__grouping, $arraydecay3, $__g_end, $arraydecay) | 0) != 0) {
   $26 = $14;
   $cmp_i31_i_i23 = $cmp_i31_i_i24;
   break;
  }
  $22 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($22 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $25 = HEAP32[(HEAP32[$8 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$25 & 255]($8) | 0;
   $3 = $8;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $22 + 1;
   $3 = $8;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i61 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i61 & 1 | 0) == 0) {
  $cond_i = $conv_i_i61 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   $29 = HEAP32[$__g_end >> 2] | 0;
   if (($29 - $__g | 0) >= 160) {
    break;
   }
   $30 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $29 + 4;
   HEAP32[$29 >> 2] = $30;
  }
 } while (0);
 HEAP32[$__v >> 2] = __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($1, HEAP32[$__a_end >> 2] | 0, $__err, $retval_0_i) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $37 = 0;
  } else {
   if ((HEAP32[$8 + 12 >> 2] | 0) != (HEAP32[$8 + 16 >> 2] | 0)) {
    $37 = $8;
    break;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) != -1) {
    $37 = $8;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $37 = 0;
  }
 } while (0);
 $cmp_i_i_i99 = ($37 | 0) == 0;
 L9989 : do {
  if ($cmp_i31_i_i23) {
   label = 8615;
  } else {
   do {
    if ((HEAP32[$26 + 12 >> 2] | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 255]($26) | 0) != -1) {
      break;
     }
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 8615;
     break L9989;
    }
   } while (0);
   if (!($cmp_i_i_i99 ^ ($26 | 0) == 0)) {
    label = 8617;
   }
  }
 } while (0);
 if ((label | 0) == 8615) {
  if ($cmp_i_i_i99) {
   label = 8617;
  }
 }
 if ((label | 0) == 8617) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $37;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $__e, $__kb, $__ke, $__ct, $__err, $__case_sensitive) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__kb = $__kb | 0;
 $__ke = $__ke | 0;
 $__ct = $__ct | 0;
 $__err = $__err | 0;
 $__case_sensitive = $__case_sensitive | 0;
 var $sub_ptr_div_i_i = 0, $arraydecay = 0, $call1 = 0, $exception_i = 0, $__stat_hold_sroa_0_1 = 0, $__status_0 = 0, $cmp5108 = 0, $__n_does_match_0_lcssa = 0, $__n_might_match_0_lcssa = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $2 = 0, $__ky_0112 = 0, $__st_0111 = 0, $__n_does_match_0110 = 0, $__n_might_match_0109 = 0, $conv_i_i_i = 0, $cond_i_i = 0, $__n_might_match_1 = 0, $__n_does_match_1 = 0, $incdec_ptr = 0, $__n_might_match_2 = 0, $__n_does_match_2 = 0, $__indx_0 = 0, $5 = 0, $10 = 0, $cmp_i_i_i = 0, $11 = 0, $16 = 0, $17 = 0, $18 = 0, $cmp_i31_i_i = 0, $19 = 0, $retval_i_i_0_off0 = 0, $__c_0 = 0, $add = 0, $__ky21_091 = 0, $__consume_0_off090 = 0, $__st_188 = 0, $__n_does_match_387 = 0, $__n_might_match_386 = 0, $__size__i_i_i_i = 0, $cond_i_i_i = 0, $28 = 0, $__kc_0 = 0, $conv_i_i208 = 0, $cond_i = 0, $__n_might_match_4 = 0, $__n_does_match_4 = 0, $__consume_1_off0 = 0, $incdec_ptr49 = 0, $32 = 0, $__ninp__i_i217 = 0, $33 = 0, $36 = 0, $add66 = 0, $__ky59_099 = 0, $__st_298 = 0, $__n_does_match_597 = 0, $conv_i_i246 = 0, $cond_i267 = 0, $__n_does_match_6 = 0, $incdec_ptr72 = 0, $__n_might_match_3_lcssa118 = 0, $__n_does_match_7 = 0, $44 = 0, $cmp_i_i_i306 = 0, $__st_378 = 0, $__kb_addr_077 = 0, $incdec_ptr92 = 0, $__kb_addr_075 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 104 | 0;
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $sub_ptr_div_i_i = ($__ke - $__kb | 0) / 12 & -1;
 $arraydecay = __stackBase__ | 0;
 do {
  if ($sub_ptr_div_i_i >>> 0 > 100) {
   $call1 = _malloc($sub_ptr_div_i_i) | 0;
   if (($call1 | 0) != 0) {
    $__status_0 = $call1;
    $__stat_hold_sroa_0_1 = $call1;
    break;
   }
   $exception_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i >> 2] = 9152;
   ___cxa_throw($exception_i | 0, 15312, 28);
   return 0;
  } else {
   $__status_0 = $arraydecay;
   $__stat_hold_sroa_0_1 = 0;
  }
 } while (0);
 $cmp5108 = ($__kb | 0) == ($__ke | 0);
 if ($cmp5108) {
  $__n_might_match_0_lcssa = $sub_ptr_div_i_i;
  $__n_does_match_0_lcssa = 0;
 } else {
  $__n_might_match_0109 = $sub_ptr_div_i_i;
  $__n_does_match_0110 = 0;
  $__st_0111 = $__status_0;
  $__ky_0112 = $__kb;
  while (1) {
   $conv_i_i_i = HEAPU8[$__ky_0112] | 0;
   if (($conv_i_i_i & 1 | 0) == 0) {
    $cond_i_i = $conv_i_i_i >>> 1;
   } else {
    $cond_i_i = HEAP32[$__ky_0112 + 4 >> 2] | 0;
   }
   if (($cond_i_i | 0) == 0) {
    HEAP8[$__st_0111] = 2;
    $__n_does_match_1 = $__n_does_match_0110 + 1 | 0;
    $__n_might_match_1 = $__n_might_match_0109 - 1 | 0;
   } else {
    HEAP8[$__st_0111] = 1;
    $__n_does_match_1 = $__n_does_match_0110;
    $__n_might_match_1 = $__n_might_match_0109;
   }
   $incdec_ptr = $__ky_0112 + 12 | 0;
   if (($incdec_ptr | 0) == ($__ke | 0)) {
    $__n_might_match_0_lcssa = $__n_might_match_1;
    $__n_does_match_0_lcssa = $__n_does_match_1;
    break;
   } else {
    $__n_might_match_0109 = $__n_might_match_1;
    $__n_does_match_0110 = $__n_does_match_1;
    $__st_0111 = $__st_0111 + 1 | 0;
    $__ky_0112 = $incdec_ptr;
   }
  }
 }
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $2 = $__ct;
 $__indx_0 = 0;
 $__n_does_match_2 = $__n_does_match_0_lcssa;
 $__n_might_match_2 = $__n_might_match_0_lcssa;
 while (1) {
  $5 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
  do {
   if (($5 | 0) == 0) {
    $10 = 0;
   } else {
    if ((HEAP32[$5 + 12 >> 2] | 0) != (HEAP32[$5 + 16 >> 2] | 0)) {
     $10 = $5;
     break;
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 255]($5) | 0) == -1) {
     HEAP32[$__sbuf__i_i_i >> 2] = 0;
     $10 = 0;
     break;
    } else {
     $10 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
     break;
    }
   }
  } while (0);
  $cmp_i_i_i = ($10 | 0) == 0;
  $11 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  if (($11 | 0) == 0) {
   $18 = $10;
   $17 = 0;
  } else {
   do {
    if ((HEAP32[$11 + 12 >> 2] | 0) == (HEAP32[$11 + 16 >> 2] | 0)) {
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 36 >> 2] & 255]($11) | 0) != -1) {
      $16 = $11;
      break;
     }
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     $16 = 0;
    } else {
     $16 = $11;
    }
   } while (0);
   $18 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   $17 = $16;
  }
  $cmp_i31_i_i = ($17 | 0) == 0;
  if (!(($cmp_i_i_i ^ $cmp_i31_i_i) & ($__n_might_match_2 | 0) != 0)) {
   break;
  }
  $19 = HEAP32[$18 + 12 >> 2] | 0;
  if (($19 | 0) == (HEAP32[$18 + 16 >> 2] | 0)) {
   $retval_i_i_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$18 >> 2] | 0) + 36 >> 2] & 255]($18) | 0) & 255;
  } else {
   $retval_i_i_0_off0 = HEAP8[$19] | 0;
  }
  if ($__case_sensitive) {
   $__c_0 = $retval_i_i_0_off0;
  } else {
   $__c_0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$2 >> 2] | 0) + 12 >> 2] & 63]($__ct, $retval_i_i_0_off0) | 0;
  }
  do {
   if ($cmp5108) {
    $__n_does_match_7 = $__n_does_match_2;
    $__n_might_match_3_lcssa118 = $__n_might_match_2;
   } else {
    $add = $__indx_0 + 1 | 0;
    $__n_might_match_386 = $__n_might_match_2;
    $__n_does_match_387 = $__n_does_match_2;
    $__st_188 = $__status_0;
    $__consume_0_off090 = 0;
    $__ky21_091 = $__kb;
    while (1) {
     do {
      if ((HEAP8[$__st_188] | 0) == 1) {
       $__size__i_i_i_i = $__ky21_091;
       if ((HEAP8[$__size__i_i_i_i] & 1) == 0) {
        $cond_i_i_i = $__ky21_091 + 1 | 0;
       } else {
        $cond_i_i_i = HEAP32[$__ky21_091 + 8 >> 2] | 0;
       }
       $28 = HEAP8[$cond_i_i_i + $__indx_0 | 0] | 0;
       if ($__case_sensitive) {
        $__kc_0 = $28;
       } else {
        $__kc_0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$2 >> 2] | 0) + 12 >> 2] & 63]($__ct, $28) | 0;
       }
       if ($__c_0 << 24 >> 24 != $__kc_0 << 24 >> 24) {
        HEAP8[$__st_188] = 0;
        $__consume_1_off0 = $__consume_0_off090;
        $__n_does_match_4 = $__n_does_match_387;
        $__n_might_match_4 = $__n_might_match_386 - 1 | 0;
        break;
       }
       $conv_i_i208 = HEAPU8[$__size__i_i_i_i] | 0;
       if (($conv_i_i208 & 1 | 0) == 0) {
        $cond_i = $conv_i_i208 >>> 1;
       } else {
        $cond_i = HEAP32[$__ky21_091 + 4 >> 2] | 0;
       }
       if (($cond_i | 0) != ($add | 0)) {
        $__consume_1_off0 = 1;
        $__n_does_match_4 = $__n_does_match_387;
        $__n_might_match_4 = $__n_might_match_386;
        break;
       }
       HEAP8[$__st_188] = 2;
       $__consume_1_off0 = 1;
       $__n_does_match_4 = $__n_does_match_387 + 1 | 0;
       $__n_might_match_4 = $__n_might_match_386 - 1 | 0;
      } else {
       $__consume_1_off0 = $__consume_0_off090;
       $__n_does_match_4 = $__n_does_match_387;
       $__n_might_match_4 = $__n_might_match_386;
      }
     } while (0);
     $incdec_ptr49 = $__ky21_091 + 12 | 0;
     if (($incdec_ptr49 | 0) == ($__ke | 0)) {
      break;
     }
     $__n_might_match_386 = $__n_might_match_4;
     $__n_does_match_387 = $__n_does_match_4;
     $__st_188 = $__st_188 + 1 | 0;
     $__consume_0_off090 = $__consume_1_off0;
     $__ky21_091 = $incdec_ptr49;
    }
    if (!$__consume_1_off0) {
     $__n_does_match_7 = $__n_does_match_4;
     $__n_might_match_3_lcssa118 = $__n_might_match_4;
     break;
    }
    $32 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
    $__ninp__i_i217 = $32 + 12 | 0;
    $33 = HEAP32[$__ninp__i_i217 >> 2] | 0;
    if (($33 | 0) == (HEAP32[$32 + 16 >> 2] | 0)) {
     $36 = HEAP32[(HEAP32[$32 >> 2] | 0) + 40 >> 2] | 0;
     FUNCTION_TABLE_ii[$36 & 255]($32) | 0;
    } else {
     HEAP32[$__ninp__i_i217 >> 2] = $33 + 1;
    }
    if (($__n_does_match_4 + $__n_might_match_4 | 0) >>> 0 < 2 | $cmp5108) {
     $__n_does_match_7 = $__n_does_match_4;
     $__n_might_match_3_lcssa118 = $__n_might_match_4;
     break;
    }
    $add66 = $__indx_0 + 1 | 0;
    $__n_does_match_597 = $__n_does_match_4;
    $__st_298 = $__status_0;
    $__ky59_099 = $__kb;
    while (1) {
     do {
      if ((HEAP8[$__st_298] | 0) == 2) {
       $conv_i_i246 = HEAPU8[$__ky59_099] | 0;
       if (($conv_i_i246 & 1 | 0) == 0) {
        $cond_i267 = $conv_i_i246 >>> 1;
       } else {
        $cond_i267 = HEAP32[$__ky59_099 + 4 >> 2] | 0;
       }
       if (($cond_i267 | 0) == ($add66 | 0)) {
        $__n_does_match_6 = $__n_does_match_597;
        break;
       }
       HEAP8[$__st_298] = 0;
       $__n_does_match_6 = $__n_does_match_597 - 1 | 0;
      } else {
       $__n_does_match_6 = $__n_does_match_597;
      }
     } while (0);
     $incdec_ptr72 = $__ky59_099 + 12 | 0;
     if (($incdec_ptr72 | 0) == ($__ke | 0)) {
      $__n_does_match_7 = $__n_does_match_6;
      $__n_might_match_3_lcssa118 = $__n_might_match_4;
      break;
     } else {
      $__n_does_match_597 = $__n_does_match_6;
      $__st_298 = $__st_298 + 1 | 0;
      $__ky59_099 = $incdec_ptr72;
     }
    }
   }
  } while (0);
  $__indx_0 = $__indx_0 + 1 | 0;
  $__n_does_match_2 = $__n_does_match_7;
  $__n_might_match_2 = $__n_might_match_3_lcssa118;
 }
 do {
  if (($18 | 0) == 0) {
   $44 = 0;
  } else {
   if ((HEAP32[$18 + 12 >> 2] | 0) != (HEAP32[$18 + 16 >> 2] | 0)) {
    $44 = $18;
    break;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$18 >> 2] | 0) + 36 >> 2] & 255]($18) | 0) == -1) {
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $44 = 0;
    break;
   } else {
    $44 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
    break;
   }
  }
 } while (0);
 $cmp_i_i_i306 = ($44 | 0) == 0;
 do {
  if ($cmp_i31_i_i) {
   label = 8704;
  } else {
   if ((HEAP32[$17 + 12 >> 2] | 0) != (HEAP32[$17 + 16 >> 2] | 0)) {
    if ($cmp_i_i_i306) {
     break;
    } else {
     label = 8706;
     break;
    }
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$17 >> 2] | 0) + 36 >> 2] & 255]($17) | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 8704;
    break;
   } else {
    if ($cmp_i_i_i306 ^ ($17 | 0) == 0) {
     break;
    } else {
     label = 8706;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 8704) {
  if ($cmp_i_i_i306) {
   label = 8706;
  }
 }
 if ((label | 0) == 8706) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 L10114 : do {
  if ($cmp5108) {
   label = 8711;
  } else {
   $__kb_addr_077 = $__kb;
   $__st_378 = $__status_0;
   while (1) {
    if ((HEAP8[$__st_378] | 0) == 2) {
     $__kb_addr_075 = $__kb_addr_077;
     break L10114;
    }
    $incdec_ptr92 = $__kb_addr_077 + 12 | 0;
    if (($incdec_ptr92 | 0) == ($__ke | 0)) {
     label = 8711;
     break L10114;
    }
    $__kb_addr_077 = $incdec_ptr92;
    $__st_378 = $__st_378 + 1 | 0;
   }
  }
 } while (0);
 if ((label | 0) == 8711) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $__kb_addr_075 = $__ke;
 }
 if (($__stat_hold_sroa_0_1 | 0) == 0) {
  STACKTOP = __stackBase__;
  return $__kb_addr_075 | 0;
 }
 _free($__stat_hold_sroa_0_1);
 STACKTOP = __stackBase__;
 return $__kb_addr_075 | 0;
}
function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct, $__base, $__a, $__a_end, $__dc, $__thousands_sep, $__grouping, $__g, $__g_end, $__atoms) {
 $__ct = $__ct | 0;
 $__base = $__base | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__dc = $__dc | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__atoms = $__atoms | 0;
 var $0 = 0, $cmp = 0, $cmp2 = 0, $conv_i_i = 0, $cond_i = 0, $5 = 0, $6 = 0, $add_ptr = 0, $__first_addr_i_0 = 0, $__first_addr_i_0_lcssa = 0, $sub_ptr_sub25 = 0, $9 = 0, $10 = 0, $11 = 0, $retval_0 = 0;
 $0 = HEAP32[$__a_end >> 2] | 0;
 $cmp = ($0 | 0) == ($__a | 0);
 do {
  if ($cmp) {
   $cmp2 = (HEAP8[$__atoms + 24 | 0] | 0) == $__ct << 24 >> 24;
   if (!$cmp2) {
    if ((HEAP8[$__atoms + 25 | 0] | 0) != $__ct << 24 >> 24) {
     break;
    }
   }
   HEAP32[$__a_end >> 2] = $__a + 1;
   HEAP8[$__a] = $cmp2 ? 43 : 45;
   HEAP32[$__dc >> 2] = 0;
   $retval_0 = 0;
   return $retval_0 | 0;
  }
 } while (0);
 $conv_i_i = HEAPU8[$__grouping] | 0;
 if (($conv_i_i & 1 | 0) == 0) {
  $cond_i = $conv_i_i >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 if (($cond_i | 0) != 0 & $__ct << 24 >> 24 == $__thousands_sep << 24 >> 24) {
  $5 = HEAP32[$__g_end >> 2] | 0;
  if (($5 - $__g | 0) >= 160) {
   $retval_0 = 0;
   return $retval_0 | 0;
  }
  $6 = HEAP32[$__dc >> 2] | 0;
  HEAP32[$__g_end >> 2] = $5 + 4;
  HEAP32[$5 >> 2] = $6;
  HEAP32[$__dc >> 2] = 0;
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 $add_ptr = $__atoms + 26 | 0;
 $__first_addr_i_0 = $__atoms;
 while (1) {
  if (($__first_addr_i_0 | 0) == ($add_ptr | 0)) {
   $__first_addr_i_0_lcssa = $add_ptr;
   break;
  }
  if ((HEAP8[$__first_addr_i_0] | 0) == $__ct << 24 >> 24) {
   $__first_addr_i_0_lcssa = $__first_addr_i_0;
   break;
  } else {
   $__first_addr_i_0 = $__first_addr_i_0 + 1 | 0;
  }
 }
 $sub_ptr_sub25 = $__first_addr_i_0_lcssa - $__atoms | 0;
 if (($sub_ptr_sub25 | 0) > 23) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 do {
  if (($__base | 0) == 8 | ($__base | 0) == 10) {
   if (($sub_ptr_sub25 | 0) < ($__base | 0)) {
    break;
   } else {
    $retval_0 = -1;
   }
   return $retval_0 | 0;
  } else if (($__base | 0) == 16) {
   if (($sub_ptr_sub25 | 0) < 22) {
    break;
   }
   if ($cmp) {
    $retval_0 = -1;
    return $retval_0 | 0;
   }
   if (($0 - $__a | 0) >= 3) {
    $retval_0 = -1;
    return $retval_0 | 0;
   }
   if ((HEAP8[$0 - 1 | 0] | 0) != 48) {
    $retval_0 = -1;
    return $retval_0 | 0;
   }
   HEAP32[$__dc >> 2] = 0;
   $9 = HEAP8[18272 + $sub_ptr_sub25 | 0] | 0;
   $10 = HEAP32[$__a_end >> 2] | 0;
   HEAP32[$__a_end >> 2] = $10 + 1;
   HEAP8[$10] = $9;
   $retval_0 = 0;
   return $retval_0 | 0;
  }
 } while (0);
 if (($0 - $__a | 0) < 39) {
  $11 = HEAP8[18272 + $sub_ptr_sub25 | 0] | 0;
  HEAP32[$__a_end >> 2] = $0 + 1;
  HEAP8[$0] = $11;
 }
 HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
 $retval_0 = 0;
 return $retval_0 | 0;
}
function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $__g_end, $__err) {
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__err = $__err | 0;
 var $__s_i_i = 0, $__size__i_i = 0, $0 = 0, $conv_i_i = 0, $cond_i = 0, $incdec_ptr_i_i43 = 0, $incdec_ptr_i_i46 = 0, $__first_addr_i_i_045 = 0, $2 = 0, $4 = 0, $cond_i_i = 0, $conv_i_i53 = 0, $cond_i74 = 0, $add_ptr3 = 0, $7 = 0, $conv33 = 0, $or_cond36 = 0, $sub_ptr_lhs_cast = 0, $or_cond40 = 0, $conv39 = 0, $__r_038 = 0, $__ig_037 = 0, $incdec_ptr___ig_0 = 0, $incdec_ptr18 = 0, $9 = 0, $conv = 0, $or_cond = 0, $or_cond_lcssa = 0, $conv_lcssa = 0, $10 = 0;
 $__s_i_i = $__grouping;
 $__size__i_i = $__grouping;
 $0 = HEAP8[$__size__i_i] | 0;
 $conv_i_i = $0 & 255;
 if (($conv_i_i & 1 | 0) == 0) {
  $cond_i = $conv_i_i >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 if (($cond_i | 0) == 0) {
  return;
 }
 do {
  if (($__g | 0) == ($__g_end | 0)) {
   $4 = $0;
  } else {
   $incdec_ptr_i_i43 = $__g_end - 4 | 0;
   if ($incdec_ptr_i_i43 >>> 0 > $__g >>> 0) {
    $__first_addr_i_i_045 = $__g;
    $incdec_ptr_i_i46 = $incdec_ptr_i_i43;
   } else {
    $4 = $0;
    break;
   }
   do {
    $2 = HEAP32[$__first_addr_i_i_045 >> 2] | 0;
    HEAP32[$__first_addr_i_i_045 >> 2] = HEAP32[$incdec_ptr_i_i46 >> 2];
    HEAP32[$incdec_ptr_i_i46 >> 2] = $2;
    $__first_addr_i_i_045 = $__first_addr_i_i_045 + 4 | 0;
    $incdec_ptr_i_i46 = $incdec_ptr_i_i46 - 4 | 0;
   } while ($__first_addr_i_i_045 >>> 0 < $incdec_ptr_i_i46 >>> 0);
   $4 = HEAP8[$__size__i_i] | 0;
  }
 } while (0);
 if (($4 & 1) == 0) {
  $cond_i_i = $__s_i_i + 1 | 0;
 } else {
  $cond_i_i = HEAP32[$__grouping + 8 >> 2] | 0;
 }
 $conv_i_i53 = $4 & 255;
 if (($conv_i_i53 & 1 | 0) == 0) {
  $cond_i74 = $conv_i_i53 >>> 1;
 } else {
  $cond_i74 = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 $add_ptr3 = $__g_end - 4 | 0;
 $7 = HEAP8[$cond_i_i] | 0;
 $conv33 = $7 << 24 >> 24;
 $or_cond36 = $7 << 24 >> 24 < 1 | $7 << 24 >> 24 == 127;
 L10194 : do {
  if ($add_ptr3 >>> 0 > $__g >>> 0) {
   $sub_ptr_lhs_cast = $cond_i_i + $cond_i74 | 0;
   $__ig_037 = $cond_i_i;
   $__r_038 = $__g;
   $conv39 = $conv33;
   $or_cond40 = $or_cond36;
   while (1) {
    if (!$or_cond40) {
     if (($conv39 | 0) != (HEAP32[$__r_038 >> 2] | 0)) {
      break;
     }
    }
    $incdec_ptr___ig_0 = ($sub_ptr_lhs_cast - $__ig_037 | 0) > 1 ? $__ig_037 + 1 | 0 : $__ig_037;
    $incdec_ptr18 = $__r_038 + 4 | 0;
    $9 = HEAP8[$incdec_ptr___ig_0] | 0;
    $conv = $9 << 24 >> 24;
    $or_cond = $9 << 24 >> 24 < 1 | $9 << 24 >> 24 == 127;
    if ($incdec_ptr18 >>> 0 < $add_ptr3 >>> 0) {
     $__ig_037 = $incdec_ptr___ig_0;
     $__r_038 = $incdec_ptr18;
     $conv39 = $conv;
     $or_cond40 = $or_cond;
    } else {
     $conv_lcssa = $conv;
     $or_cond_lcssa = $or_cond;
     break L10194;
    }
   }
   HEAP32[$__err >> 2] = 4;
   return;
  } else {
   $conv_lcssa = $conv33;
   $or_cond_lcssa = $or_cond36;
  }
 } while (0);
 if ($or_cond_lcssa) {
  return;
 }
 $10 = HEAP32[$add_ptr3 >> 2] | 0;
 if (!($conv_lcssa >>> 0 < $10 >>> 0 | ($10 | 0) == 0)) {
  return;
 }
 HEAP32[$__err >> 2] = 4;
 return;
}
function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $__p2 = 0, $0 = 0, $call_i = 0, $1 = 0, $call3$0 = 0, $call3$1 = 0, $2 = 0, $$etemp$0$1 = 0, $$etemp$1$1 = 0, $$etemp$2$1 = 0, $retval_0 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__p2 = __stackBase__ | 0;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $0 = HEAP32[(___errno_location() | 0) >> 2] | 0;
 HEAP32[(___errno_location() | 0) >> 2] = 0;
 if (HEAP8[18416] | 0) {
  $1 = HEAP32[2044] | 0;
 } else {
  $call_i = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i;
  HEAP8[18416] = 1;
  $1 = $call_i;
 }
 $call3$0 = _strtoll($__a | 0, $__p2 | 0, $__base | 0, $1 | 0) | 0;
 $call3$1 = tempRet0;
 $2 = HEAP32[(___errno_location() | 0) >> 2] | 0;
 if (($2 | 0) == 0) {
  HEAP32[(___errno_location() | 0) >> 2] = $0;
 }
 if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $$etemp$0$1 = -1;
 $$etemp$1$1 = 0;
 if (($2 | 0) == 34 | (($call3$1 | 0) < ($$etemp$0$1 | 0) | ($call3$1 | 0) == ($$etemp$0$1 | 0) & $call3$0 >>> 0 < -2147483648 >>> 0) | (($call3$1 | 0) > ($$etemp$1$1 | 0) | ($call3$1 | 0) == ($$etemp$1$1 | 0) & $call3$0 >>> 0 > 2147483647 >>> 0)) {
  HEAP32[$__err >> 2] = 4;
  $$etemp$2$1 = 0;
  $retval_0 = ($call3$1 | 0) > ($$etemp$2$1 | 0) | ($call3$1 | 0) == ($$etemp$2$1 | 0) & $call3$0 >>> 0 > 0 >>> 0 ? 2147483647 : -2147483648;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else {
  $retval_0 = $call3$0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms = 0, $__thousands_sep = 0, $__grouping = 0, $__a = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $and_i = 0, $retval_0_i = 0, $arraydecay = 0, $1 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $2 = 0, $3 = 0, $8 = 0, $cmp_i_i_i = 0, $9 = 0, $cmp_i31_i_i = 0, $cmp_i31_i_i24 = 0, $14 = 0, $__ninp__i_i = 0, $15 = 0, $__einp__i_i = 0, $retval_i_i_0_off0 = 0, $22 = 0, $25 = 0, $cmp_i31_i_i23 = 0, $26 = 0, $__size__i_i = 0, $conv_i_i61 = 0, $cond_i = 0, $29 = 0, $30 = 0, $call21$0 = 0, $37 = 0, $cmp_i_i_i99 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 280 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms = __stackBase__ | 0;
 $__thousands_sep = __stackBase__ + 32 | 0;
 $__grouping = __stackBase__ + 40 | 0;
 $__a = __stackBase__ + 56 | 0;
 $__a_end = __stackBase__ + 96 | 0;
 $__g = __stackBase__ + 104 | 0;
 $__g_end = __stackBase__ + 264 | 0;
 $__dc = __stackBase__ + 272 | 0;
 $and_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i | 0) == 0) {
  $retval_0_i = 0;
 } else if (($and_i | 0) == 64) {
  $retval_0_i = 8;
 } else if (($and_i | 0) == 8) {
  $retval_0_i = 16;
 } else {
  $retval_0_i = 10;
 }
 $arraydecay = $__atoms | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $arraydecay, $__thousands_sep);
 $1 = $__a | 0;
 _memset($1 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $1;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $2 = HEAP8[$__thousands_sep] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L10238 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $8 = 0;
   } else {
    if ((HEAP32[$3 + 12 >> 2] | 0) != (HEAP32[$3 + 16 >> 2] | 0)) {
     $8 = $3;
     break;
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0) != -1) {
     $8 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $8 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($8 | 0) == 0;
  $9 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($9 | 0) == 0) {
    label = 8815;
   } else {
    if ((HEAP32[$9 + 12 >> 2] | 0) != (HEAP32[$9 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = 0;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = 0;
      break L10238;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 8815;
     break;
    } else {
     $cmp_i31_i_i = ($9 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i31_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = $cmp_i31_i_i;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = $cmp_i31_i_i;
      break L10238;
     }
    }
   }
  } while (0);
  if ((label | 0) == 8815) {
   label = 0;
   if ($cmp_i_i_i) {
    $26 = 0;
    $cmp_i31_i_i23 = 1;
    break;
   } else {
    $14 = 0;
    $cmp_i31_i_i24 = 1;
   }
  }
  $__ninp__i_i = $8 + 12 | 0;
  $15 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $8 + 16 | 0;
  if (($15 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) & 255;
  } else {
   $retval_i_i_0_off0 = HEAP8[$15] | 0;
  }
  if ((__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($retval_i_i_0_off0, $retval_0_i, $1, $__a_end, $__dc, $2, $__grouping, $arraydecay3, $__g_end, $arraydecay) | 0) != 0) {
   $26 = $14;
   $cmp_i31_i_i23 = $cmp_i31_i_i24;
   break;
  }
  $22 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($22 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $25 = HEAP32[(HEAP32[$8 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$25 & 255]($8) | 0;
   $3 = $8;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $22 + 1;
   $3 = $8;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i61 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i61 & 1 | 0) == 0) {
  $cond_i = $conv_i_i61 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   $29 = HEAP32[$__g_end >> 2] | 0;
   if (($29 - $__g | 0) >= 160) {
    break;
   }
   $30 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $29 + 4;
   HEAP32[$29 >> 2] = $30;
  }
 } while (0);
 $call21$0 = __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($1, HEAP32[$__a_end >> 2] | 0, $__err, $retval_0_i) | 0;
 HEAP32[$__v >> 2] = $call21$0;
 HEAP32[$__v + 4 >> 2] = tempRet0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $37 = 0;
  } else {
   if ((HEAP32[$8 + 12 >> 2] | 0) != (HEAP32[$8 + 16 >> 2] | 0)) {
    $37 = $8;
    break;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) != -1) {
    $37 = $8;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $37 = 0;
  }
 } while (0);
 $cmp_i_i_i99 = ($37 | 0) == 0;
 L10283 : do {
  if ($cmp_i31_i_i23) {
   label = 8847;
  } else {
   do {
    if ((HEAP32[$26 + 12 >> 2] | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 255]($26) | 0) != -1) {
      break;
     }
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 8847;
     break L10283;
    }
   } while (0);
   if (!($cmp_i_i_i99 ^ ($26 | 0) == 0)) {
    label = 8849;
   }
  }
 } while (0);
 if ((label | 0) == 8847) {
  if ($cmp_i_i_i99) {
   label = 8849;
  }
 }
 if ((label | 0) == 8849) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $37;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $__p2 = 0, $0 = 0, $call_i = 0, $1 = 0, $call3$0 = 0, $call3$1 = 0, $2 = 0, $$etemp$0$1 = 0, $cmp17 = 0, $retval_0$0 = 0, $retval_0$1 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__p2 = __stackBase__ | 0;
 do {
  if (($__a | 0) == ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $retval_0$1 = 0;
   $retval_0$0 = 0;
  } else {
   $0 = HEAP32[(___errno_location() | 0) >> 2] | 0;
   HEAP32[(___errno_location() | 0) >> 2] = 0;
   if (HEAP8[18416] | 0) {
    $1 = HEAP32[2044] | 0;
   } else {
    $call_i = _newlocale(1, 3128, 0) | 0;
    HEAP32[2044] = $call_i;
    HEAP8[18416] = 1;
    $1 = $call_i;
   }
   $call3$0 = _strtoll($__a | 0, $__p2 | 0, $__base | 0, $1 | 0) | 0;
   $call3$1 = tempRet0;
   $2 = HEAP32[(___errno_location() | 0) >> 2] | 0;
   if (($2 | 0) == 0) {
    HEAP32[(___errno_location() | 0) >> 2] = $0;
   }
   if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
    HEAP32[$__err >> 2] = 4;
    $retval_0$1 = 0;
    $retval_0$0 = 0;
    break;
   }
   if (($2 | 0) != 34) {
    $retval_0$1 = $call3$1;
    $retval_0$0 = $call3$0;
    break;
   }
   HEAP32[$__err >> 2] = 4;
   $$etemp$0$1 = 0;
   $cmp17 = ($call3$1 | 0) > ($$etemp$0$1 | 0) | ($call3$1 | 0) == ($$etemp$0$1 | 0) & $call3$0 >>> 0 > 0 >>> 0;
   $retval_0$1 = $cmp17 ? 2147483647 : -2147483648;
   $retval_0$0 = $cmp17 ? -1 : 0;
  }
 } while (0);
 STACKTOP = __stackBase__;
 return (tempRet0 = $retval_0$1, $retval_0$0) | 0;
}
function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg_result, $__iob, $__atoms, $__thousands_sep) {
 $agg_result = $agg_result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $__p_i_i_i5 = 0, $__p_i_i_i = 0, $__locale_2_i1_i = 0, $0 = 0, $sub_i_i = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $11 = 0, $13 = 0, $sub_i_i12 = 0, $18 = 0, $19 = 0, $exception_i_i24 = 0, $21 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__p_i_i_i5 = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 16 | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17816;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4455] | 0) - 1 | 0;
 $5 = $__locale_2_i1_i + 12 | 0;
 $7 = $__locale_2_i1_i + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 do {
  if ((HEAP32[$5 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   $11 = $9;
   $13 = HEAP32[(HEAP32[$9 >> 2] | 0) + 32 >> 2] | 0;
   FUNCTION_TABLE_iiiii[$13 & 15]($11, 18272, 18298, $__atoms) | 0;
   if ((HEAP32[4358] | 0) != -1) {
    HEAP32[$__p_i_i_i5 >> 2] = 17432;
    HEAP32[$__p_i_i_i5 + 4 >> 2] = 12;
    HEAP32[$__p_i_i_i5 + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(17432, $__p_i_i_i5, 102);
   }
   $sub_i_i12 = (HEAP32[4359] | 0) - 1 | 0;
   $18 = HEAP32[$7 >> 2] | 0;
   do {
    if ((HEAP32[$5 >> 2] | 0) - $18 >> 2 >>> 0 > $sub_i_i12 >>> 0) {
     $19 = HEAP32[$18 + ($sub_i_i12 << 2) >> 2] | 0;
     if (($19 | 0) == 0) {
      break;
     }
     $21 = $19;
     HEAP8[$__thousands_sep] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 16 >> 2] & 255]($21) | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$19 >> 2] | 0) + 20 >> 2] & 127]($agg_result, $21);
     if (((tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
      STACKTOP = __stackBase__;
      return;
     }
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
     STACKTOP = __stackBase__;
     return;
    }
   } while (0);
   $exception_i_i24 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i24 >> 2] = 9184;
   ___cxa_throw($exception_i_i24 | 0, 15328, 208);
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms = 0, $__thousands_sep = 0, $__grouping = 0, $__a = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $and_i = 0, $retval_0_i = 0, $arraydecay = 0, $1 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $2 = 0, $3 = 0, $8 = 0, $cmp_i_i_i = 0, $9 = 0, $cmp_i31_i_i = 0, $cmp_i31_i_i24 = 0, $14 = 0, $__ninp__i_i = 0, $15 = 0, $__einp__i_i = 0, $retval_i_i_0_off0 = 0, $22 = 0, $25 = 0, $cmp_i31_i_i23 = 0, $26 = 0, $__size__i_i = 0, $conv_i_i61 = 0, $cond_i = 0, $29 = 0, $30 = 0, $37 = 0, $cmp_i_i_i99 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 280 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms = __stackBase__ | 0;
 $__thousands_sep = __stackBase__ + 32 | 0;
 $__grouping = __stackBase__ + 40 | 0;
 $__a = __stackBase__ + 56 | 0;
 $__a_end = __stackBase__ + 96 | 0;
 $__g = __stackBase__ + 104 | 0;
 $__g_end = __stackBase__ + 264 | 0;
 $__dc = __stackBase__ + 272 | 0;
 $and_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i | 0) == 64) {
  $retval_0_i = 8;
 } else if (($and_i | 0) == 0) {
  $retval_0_i = 0;
 } else if (($and_i | 0) == 8) {
  $retval_0_i = 16;
 } else {
  $retval_0_i = 10;
 }
 $arraydecay = $__atoms | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $arraydecay, $__thousands_sep);
 $1 = $__a | 0;
 _memset($1 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $1;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $2 = HEAP8[$__thousands_sep] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L10345 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $8 = 0;
   } else {
    if ((HEAP32[$3 + 12 >> 2] | 0) != (HEAP32[$3 + 16 >> 2] | 0)) {
     $8 = $3;
     break;
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0) != -1) {
     $8 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $8 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($8 | 0) == 0;
  $9 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($9 | 0) == 0) {
    label = 8906;
   } else {
    if ((HEAP32[$9 + 12 >> 2] | 0) != (HEAP32[$9 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = 0;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = 0;
      break L10345;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 8906;
     break;
    } else {
     $cmp_i31_i_i = ($9 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i31_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = $cmp_i31_i_i;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = $cmp_i31_i_i;
      break L10345;
     }
    }
   }
  } while (0);
  if ((label | 0) == 8906) {
   label = 0;
   if ($cmp_i_i_i) {
    $26 = 0;
    $cmp_i31_i_i23 = 1;
    break;
   } else {
    $14 = 0;
    $cmp_i31_i_i24 = 1;
   }
  }
  $__ninp__i_i = $8 + 12 | 0;
  $15 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $8 + 16 | 0;
  if (($15 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) & 255;
  } else {
   $retval_i_i_0_off0 = HEAP8[$15] | 0;
  }
  if ((__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($retval_i_i_0_off0, $retval_0_i, $1, $__a_end, $__dc, $2, $__grouping, $arraydecay3, $__g_end, $arraydecay) | 0) != 0) {
   $26 = $14;
   $cmp_i31_i_i23 = $cmp_i31_i_i24;
   break;
  }
  $22 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($22 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $25 = HEAP32[(HEAP32[$8 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$25 & 255]($8) | 0;
   $3 = $8;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $22 + 1;
   $3 = $8;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i61 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i61 & 1 | 0) == 0) {
  $cond_i = $conv_i_i61 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   $29 = HEAP32[$__g_end >> 2] | 0;
   if (($29 - $__g | 0) >= 160) {
    break;
   }
   $30 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $29 + 4;
   HEAP32[$29 >> 2] = $30;
  }
 } while (0);
 HEAP16[$__v >> 1] = __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($1, HEAP32[$__a_end >> 2] | 0, $__err, $retval_0_i) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $37 = 0;
  } else {
   if ((HEAP32[$8 + 12 >> 2] | 0) != (HEAP32[$8 + 16 >> 2] | 0)) {
    $37 = $8;
    break;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) != -1) {
    $37 = $8;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $37 = 0;
  }
 } while (0);
 $cmp_i_i_i99 = ($37 | 0) == 0;
 L10390 : do {
  if ($cmp_i31_i_i23) {
   label = 8938;
  } else {
   do {
    if ((HEAP32[$26 + 12 >> 2] | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 255]($26) | 0) != -1) {
      break;
     }
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 8938;
     break L10390;
    }
   } while (0);
   if (!($cmp_i_i_i99 ^ ($26 | 0) == 0)) {
    label = 8940;
   }
  }
 } while (0);
 if ((label | 0) == 8938) {
  if ($cmp_i_i_i99) {
   label = 8940;
  }
 }
 if ((label | 0) == 8940) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $37;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $__p2 = 0, $1 = 0, $call_i = 0, $2 = 0, $call5$0 = 0, $call5$1 = 0, $3 = 0, $$etemp$0$1 = 0, $retval_0 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__p2 = __stackBase__ | 0;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 if ((HEAP8[$__a] | 0) == 45) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $1 = HEAP32[(___errno_location() | 0) >> 2] | 0;
 HEAP32[(___errno_location() | 0) >> 2] = 0;
 if (HEAP8[18416] | 0) {
  $2 = HEAP32[2044] | 0;
 } else {
  $call_i = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i;
  HEAP8[18416] = 1;
  $2 = $call_i;
 }
 $call5$0 = _strtoull($__a | 0, $__p2 | 0, $__base | 0, $2 | 0) | 0;
 $call5$1 = tempRet0;
 $3 = HEAP32[(___errno_location() | 0) >> 2] | 0;
 if (($3 | 0) == 0) {
  HEAP32[(___errno_location() | 0) >> 2] = $1;
 }
 if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $$etemp$0$1 = 0;
 if (($3 | 0) == 34 | ($call5$1 >>> 0 > $$etemp$0$1 >>> 0 | $call5$1 >>> 0 == $$etemp$0$1 >>> 0 & $call5$0 >>> 0 > 65535 >>> 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = -1;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else {
  $retval_0 = $call5$0 & 65535;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms = 0, $__thousands_sep = 0, $__grouping = 0, $__a = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $and_i = 0, $retval_0_i = 0, $arraydecay = 0, $1 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $2 = 0, $3 = 0, $8 = 0, $cmp_i_i_i = 0, $9 = 0, $cmp_i31_i_i = 0, $cmp_i31_i_i24 = 0, $14 = 0, $__ninp__i_i = 0, $15 = 0, $__einp__i_i = 0, $retval_i_i_0_off0 = 0, $22 = 0, $25 = 0, $cmp_i31_i_i23 = 0, $26 = 0, $__size__i_i = 0, $conv_i_i61 = 0, $cond_i = 0, $29 = 0, $30 = 0, $37 = 0, $cmp_i_i_i99 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 280 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms = __stackBase__ | 0;
 $__thousands_sep = __stackBase__ + 32 | 0;
 $__grouping = __stackBase__ + 40 | 0;
 $__a = __stackBase__ + 56 | 0;
 $__a_end = __stackBase__ + 96 | 0;
 $__g = __stackBase__ + 104 | 0;
 $__g_end = __stackBase__ + 264 | 0;
 $__dc = __stackBase__ + 272 | 0;
 $and_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i | 0) == 0) {
  $retval_0_i = 0;
 } else if (($and_i | 0) == 8) {
  $retval_0_i = 16;
 } else if (($and_i | 0) == 64) {
  $retval_0_i = 8;
 } else {
  $retval_0_i = 10;
 }
 $arraydecay = $__atoms | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $arraydecay, $__thousands_sep);
 $1 = $__a | 0;
 _memset($1 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $1;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $2 = HEAP8[$__thousands_sep] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L10437 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $8 = 0;
   } else {
    if ((HEAP32[$3 + 12 >> 2] | 0) != (HEAP32[$3 + 16 >> 2] | 0)) {
     $8 = $3;
     break;
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0) != -1) {
     $8 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $8 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($8 | 0) == 0;
  $9 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($9 | 0) == 0) {
    label = 8982;
   } else {
    if ((HEAP32[$9 + 12 >> 2] | 0) != (HEAP32[$9 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = 0;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = 0;
      break L10437;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 8982;
     break;
    } else {
     $cmp_i31_i_i = ($9 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i31_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = $cmp_i31_i_i;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = $cmp_i31_i_i;
      break L10437;
     }
    }
   }
  } while (0);
  if ((label | 0) == 8982) {
   label = 0;
   if ($cmp_i_i_i) {
    $26 = 0;
    $cmp_i31_i_i23 = 1;
    break;
   } else {
    $14 = 0;
    $cmp_i31_i_i24 = 1;
   }
  }
  $__ninp__i_i = $8 + 12 | 0;
  $15 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $8 + 16 | 0;
  if (($15 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) & 255;
  } else {
   $retval_i_i_0_off0 = HEAP8[$15] | 0;
  }
  if ((__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($retval_i_i_0_off0, $retval_0_i, $1, $__a_end, $__dc, $2, $__grouping, $arraydecay3, $__g_end, $arraydecay) | 0) != 0) {
   $26 = $14;
   $cmp_i31_i_i23 = $cmp_i31_i_i24;
   break;
  }
  $22 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($22 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $25 = HEAP32[(HEAP32[$8 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$25 & 255]($8) | 0;
   $3 = $8;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $22 + 1;
   $3 = $8;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i61 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i61 & 1 | 0) == 0) {
  $cond_i = $conv_i_i61 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   $29 = HEAP32[$__g_end >> 2] | 0;
   if (($29 - $__g | 0) >= 160) {
    break;
   }
   $30 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $29 + 4;
   HEAP32[$29 >> 2] = $30;
  }
 } while (0);
 HEAP32[$__v >> 2] = __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($1, HEAP32[$__a_end >> 2] | 0, $__err, $retval_0_i) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $37 = 0;
  } else {
   if ((HEAP32[$8 + 12 >> 2] | 0) != (HEAP32[$8 + 16 >> 2] | 0)) {
    $37 = $8;
    break;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) != -1) {
    $37 = $8;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $37 = 0;
  }
 } while (0);
 $cmp_i_i_i99 = ($37 | 0) == 0;
 L10482 : do {
  if ($cmp_i31_i_i23) {
   label = 9014;
  } else {
   do {
    if ((HEAP32[$26 + 12 >> 2] | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 255]($26) | 0) != -1) {
      break;
     }
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 9014;
     break L10482;
    }
   } while (0);
   if (!($cmp_i_i_i99 ^ ($26 | 0) == 0)) {
    label = 9016;
   }
  }
 } while (0);
 if ((label | 0) == 9014) {
  if ($cmp_i_i_i99) {
   label = 9016;
  }
 }
 if ((label | 0) == 9016) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $37;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $__p2 = 0, $1 = 0, $call_i = 0, $2 = 0, $call5$0 = 0, $call5$1 = 0, $3 = 0, $$etemp$0$1 = 0, $retval_0 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__p2 = __stackBase__ | 0;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 if ((HEAP8[$__a] | 0) == 45) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $1 = HEAP32[(___errno_location() | 0) >> 2] | 0;
 HEAP32[(___errno_location() | 0) >> 2] = 0;
 if (HEAP8[18416] | 0) {
  $2 = HEAP32[2044] | 0;
 } else {
  $call_i = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i;
  HEAP8[18416] = 1;
  $2 = $call_i;
 }
 $call5$0 = _strtoull($__a | 0, $__p2 | 0, $__base | 0, $2 | 0) | 0;
 $call5$1 = tempRet0;
 $3 = HEAP32[(___errno_location() | 0) >> 2] | 0;
 if (($3 | 0) == 0) {
  HEAP32[(___errno_location() | 0) >> 2] = $1;
 }
 if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $$etemp$0$1 = 0;
 if (($3 | 0) == 34 | ($call5$1 >>> 0 > $$etemp$0$1 >>> 0 | $call5$1 >>> 0 == $$etemp$0$1 >>> 0 & $call5$0 >>> 0 > -1 >>> 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = -1;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else {
  $retval_0 = $call5$0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms = 0, $__thousands_sep = 0, $__grouping = 0, $__a = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $and_i = 0, $retval_0_i = 0, $arraydecay = 0, $1 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $2 = 0, $3 = 0, $8 = 0, $cmp_i_i_i = 0, $9 = 0, $cmp_i31_i_i = 0, $cmp_i31_i_i24 = 0, $14 = 0, $__ninp__i_i = 0, $15 = 0, $__einp__i_i = 0, $retval_i_i_0_off0 = 0, $22 = 0, $25 = 0, $cmp_i31_i_i23 = 0, $26 = 0, $__size__i_i = 0, $conv_i_i61 = 0, $cond_i = 0, $29 = 0, $30 = 0, $37 = 0, $cmp_i_i_i99 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 280 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms = __stackBase__ | 0;
 $__thousands_sep = __stackBase__ + 32 | 0;
 $__grouping = __stackBase__ + 40 | 0;
 $__a = __stackBase__ + 56 | 0;
 $__a_end = __stackBase__ + 96 | 0;
 $__g = __stackBase__ + 104 | 0;
 $__g_end = __stackBase__ + 264 | 0;
 $__dc = __stackBase__ + 272 | 0;
 $and_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i | 0) == 0) {
  $retval_0_i = 0;
 } else if (($and_i | 0) == 8) {
  $retval_0_i = 16;
 } else if (($and_i | 0) == 64) {
  $retval_0_i = 8;
 } else {
  $retval_0_i = 10;
 }
 $arraydecay = $__atoms | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $arraydecay, $__thousands_sep);
 $1 = $__a | 0;
 _memset($1 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $1;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $2 = HEAP8[$__thousands_sep] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L10529 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $8 = 0;
   } else {
    if ((HEAP32[$3 + 12 >> 2] | 0) != (HEAP32[$3 + 16 >> 2] | 0)) {
     $8 = $3;
     break;
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0) != -1) {
     $8 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $8 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($8 | 0) == 0;
  $9 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($9 | 0) == 0) {
    label = 9058;
   } else {
    if ((HEAP32[$9 + 12 >> 2] | 0) != (HEAP32[$9 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = 0;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = 0;
      break L10529;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 9058;
     break;
    } else {
     $cmp_i31_i_i = ($9 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i31_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = $cmp_i31_i_i;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = $cmp_i31_i_i;
      break L10529;
     }
    }
   }
  } while (0);
  if ((label | 0) == 9058) {
   label = 0;
   if ($cmp_i_i_i) {
    $26 = 0;
    $cmp_i31_i_i23 = 1;
    break;
   } else {
    $14 = 0;
    $cmp_i31_i_i24 = 1;
   }
  }
  $__ninp__i_i = $8 + 12 | 0;
  $15 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $8 + 16 | 0;
  if (($15 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) & 255;
  } else {
   $retval_i_i_0_off0 = HEAP8[$15] | 0;
  }
  if ((__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($retval_i_i_0_off0, $retval_0_i, $1, $__a_end, $__dc, $2, $__grouping, $arraydecay3, $__g_end, $arraydecay) | 0) != 0) {
   $26 = $14;
   $cmp_i31_i_i23 = $cmp_i31_i_i24;
   break;
  }
  $22 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($22 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $25 = HEAP32[(HEAP32[$8 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$25 & 255]($8) | 0;
   $3 = $8;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $22 + 1;
   $3 = $8;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i61 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i61 & 1 | 0) == 0) {
  $cond_i = $conv_i_i61 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   $29 = HEAP32[$__g_end >> 2] | 0;
   if (($29 - $__g | 0) >= 160) {
    break;
   }
   $30 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $29 + 4;
   HEAP32[$29 >> 2] = $30;
  }
 } while (0);
 HEAP32[$__v >> 2] = __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($1, HEAP32[$__a_end >> 2] | 0, $__err, $retval_0_i) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $37 = 0;
  } else {
   if ((HEAP32[$8 + 12 >> 2] | 0) != (HEAP32[$8 + 16 >> 2] | 0)) {
    $37 = $8;
    break;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) != -1) {
    $37 = $8;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $37 = 0;
  }
 } while (0);
 $cmp_i_i_i99 = ($37 | 0) == 0;
 L10574 : do {
  if ($cmp_i31_i_i23) {
   label = 9090;
  } else {
   do {
    if ((HEAP32[$26 + 12 >> 2] | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 255]($26) | 0) != -1) {
      break;
     }
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 9090;
     break L10574;
    }
   } while (0);
   if (!($cmp_i_i_i99 ^ ($26 | 0) == 0)) {
    label = 9092;
   }
  }
 } while (0);
 if ((label | 0) == 9090) {
  if ($cmp_i_i_i99) {
   label = 9092;
  }
 }
 if ((label | 0) == 9092) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $37;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $__p2 = 0, $1 = 0, $call_i = 0, $2 = 0, $call5$0 = 0, $call5$1 = 0, $3 = 0, $$etemp$0$1 = 0, $retval_0 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__p2 = __stackBase__ | 0;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 if ((HEAP8[$__a] | 0) == 45) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $1 = HEAP32[(___errno_location() | 0) >> 2] | 0;
 HEAP32[(___errno_location() | 0) >> 2] = 0;
 if (HEAP8[18416] | 0) {
  $2 = HEAP32[2044] | 0;
 } else {
  $call_i = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i;
  HEAP8[18416] = 1;
  $2 = $call_i;
 }
 $call5$0 = _strtoull($__a | 0, $__p2 | 0, $__base | 0, $2 | 0) | 0;
 $call5$1 = tempRet0;
 $3 = HEAP32[(___errno_location() | 0) >> 2] | 0;
 if (($3 | 0) == 0) {
  HEAP32[(___errno_location() | 0) >> 2] = $1;
 }
 if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $$etemp$0$1 = 0;
 if (($3 | 0) == 34 | ($call5$1 >>> 0 > $$etemp$0$1 >>> 0 | $call5$1 >>> 0 == $$etemp$0$1 >>> 0 & $call5$0 >>> 0 > -1 >>> 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = -1;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 } else {
  $retval_0 = $call5$0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms = 0, $__thousands_sep = 0, $__grouping = 0, $__a = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $and_i = 0, $retval_0_i = 0, $arraydecay = 0, $1 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $2 = 0, $3 = 0, $8 = 0, $cmp_i_i_i = 0, $9 = 0, $cmp_i31_i_i = 0, $cmp_i31_i_i24 = 0, $14 = 0, $__ninp__i_i = 0, $15 = 0, $__einp__i_i = 0, $retval_i_i_0_off0 = 0, $22 = 0, $25 = 0, $cmp_i31_i_i23 = 0, $26 = 0, $__size__i_i = 0, $conv_i_i61 = 0, $cond_i = 0, $29 = 0, $30 = 0, $call21$0 = 0, $37 = 0, $cmp_i_i_i99 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 280 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms = __stackBase__ | 0;
 $__thousands_sep = __stackBase__ + 32 | 0;
 $__grouping = __stackBase__ + 40 | 0;
 $__a = __stackBase__ + 56 | 0;
 $__a_end = __stackBase__ + 96 | 0;
 $__g = __stackBase__ + 104 | 0;
 $__g_end = __stackBase__ + 264 | 0;
 $__dc = __stackBase__ + 272 | 0;
 $and_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i | 0) == 0) {
  $retval_0_i = 0;
 } else if (($and_i | 0) == 8) {
  $retval_0_i = 16;
 } else if (($and_i | 0) == 64) {
  $retval_0_i = 8;
 } else {
  $retval_0_i = 10;
 }
 $arraydecay = $__atoms | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $arraydecay, $__thousands_sep);
 $1 = $__a | 0;
 _memset($1 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $1;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $2 = HEAP8[$__thousands_sep] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L10621 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $8 = 0;
   } else {
    if ((HEAP32[$3 + 12 >> 2] | 0) != (HEAP32[$3 + 16 >> 2] | 0)) {
     $8 = $3;
     break;
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0) != -1) {
     $8 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $8 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($8 | 0) == 0;
  $9 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($9 | 0) == 0) {
    label = 9134;
   } else {
    if ((HEAP32[$9 + 12 >> 2] | 0) != (HEAP32[$9 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = 0;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = 0;
      break L10621;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 9134;
     break;
    } else {
     $cmp_i31_i_i = ($9 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i31_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = $cmp_i31_i_i;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = $cmp_i31_i_i;
      break L10621;
     }
    }
   }
  } while (0);
  if ((label | 0) == 9134) {
   label = 0;
   if ($cmp_i_i_i) {
    $26 = 0;
    $cmp_i31_i_i23 = 1;
    break;
   } else {
    $14 = 0;
    $cmp_i31_i_i24 = 1;
   }
  }
  $__ninp__i_i = $8 + 12 | 0;
  $15 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $8 + 16 | 0;
  if (($15 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) & 255;
  } else {
   $retval_i_i_0_off0 = HEAP8[$15] | 0;
  }
  if ((__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($retval_i_i_0_off0, $retval_0_i, $1, $__a_end, $__dc, $2, $__grouping, $arraydecay3, $__g_end, $arraydecay) | 0) != 0) {
   $26 = $14;
   $cmp_i31_i_i23 = $cmp_i31_i_i24;
   break;
  }
  $22 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($22 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $25 = HEAP32[(HEAP32[$8 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$25 & 255]($8) | 0;
   $3 = $8;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $22 + 1;
   $3 = $8;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i61 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i61 & 1 | 0) == 0) {
  $cond_i = $conv_i_i61 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   $29 = HEAP32[$__g_end >> 2] | 0;
   if (($29 - $__g | 0) >= 160) {
    break;
   }
   $30 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $29 + 4;
   HEAP32[$29 >> 2] = $30;
  }
 } while (0);
 $call21$0 = __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($1, HEAP32[$__a_end >> 2] | 0, $__err, $retval_0_i) | 0;
 HEAP32[$__v >> 2] = $call21$0;
 HEAP32[$__v + 4 >> 2] = tempRet0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $37 = 0;
  } else {
   if ((HEAP32[$8 + 12 >> 2] | 0) != (HEAP32[$8 + 16 >> 2] | 0)) {
    $37 = $8;
    break;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) != -1) {
    $37 = $8;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $37 = 0;
  }
 } while (0);
 $cmp_i_i_i99 = ($37 | 0) == 0;
 L10666 : do {
  if ($cmp_i31_i_i23) {
   label = 9166;
  } else {
   do {
    if ((HEAP32[$26 + 12 >> 2] | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 255]($26) | 0) != -1) {
      break;
     }
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 9166;
     break L10666;
    }
   } while (0);
   if (!($cmp_i_i_i99 ^ ($26 | 0) == 0)) {
    label = 9168;
   }
  }
 } while (0);
 if ((label | 0) == 9166) {
  if ($cmp_i_i_i99) {
   label = 9168;
  }
 }
 if ((label | 0) == 9168) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $37;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $__p2 = 0, $1 = 0, $call_i = 0, $2 = 0, $call5$0 = 0, $call5$1 = 0, $3 = 0, $retval_0$0 = 0, $retval_0$1 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__p2 = __stackBase__ | 0;
 do {
  if (($__a | 0) == ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $retval_0$1 = 0;
   $retval_0$0 = 0;
  } else {
   if ((HEAP8[$__a] | 0) == 45) {
    HEAP32[$__err >> 2] = 4;
    $retval_0$1 = 0;
    $retval_0$0 = 0;
    break;
   }
   $1 = HEAP32[(___errno_location() | 0) >> 2] | 0;
   HEAP32[(___errno_location() | 0) >> 2] = 0;
   if (HEAP8[18416] | 0) {
    $2 = HEAP32[2044] | 0;
   } else {
    $call_i = _newlocale(1, 3128, 0) | 0;
    HEAP32[2044] = $call_i;
    HEAP8[18416] = 1;
    $2 = $call_i;
   }
   $call5$0 = _strtoull($__a | 0, $__p2 | 0, $__base | 0, $2 | 0) | 0;
   $call5$1 = tempRet0;
   $3 = HEAP32[(___errno_location() | 0) >> 2] | 0;
   if (($3 | 0) == 0) {
    HEAP32[(___errno_location() | 0) >> 2] = $1;
   }
   if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
    HEAP32[$__err >> 2] = 4;
    $retval_0$1 = 0;
    $retval_0$0 = 0;
    break;
   }
   if (($3 | 0) != 34) {
    $retval_0$1 = $call5$1;
    $retval_0$0 = $call5$0;
    break;
   }
   HEAP32[$__err >> 2] = 4;
   $retval_0$1 = -1;
   $retval_0$0 = -1;
  }
 } while (0);
 STACKTOP = __stackBase__;
 return (tempRet0 = $retval_0$1, $retval_0$0) | 0;
}
function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct, $__in_units, $__exp, $__a, $__a_end, $__decimal_point, $__thousands_sep, $__grouping, $__g, $__g_end, $__dc, $__atoms) {
 $__ct = $__ct | 0;
 $__in_units = $__in_units | 0;
 $__exp = $__exp | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__dc = $__dc | 0;
 $__atoms = $__atoms | 0;
 var $0 = 0, $sub_ptr_rhs_cast = 0, $3 = 0, $conv_i_i = 0, $cond_i = 0, $6 = 0, $7 = 0, $conv_i_i158 = 0, $cond_i179 = 0, $12 = 0, $13 = 0, $add_ptr = 0, $__first_addr_i_0 = 0, $__first_addr_i_0_lcssa = 0, $sub_ptr_sub37 = 0, $15 = 0, $18 = 0, $conv_i_i117 = 0, $cond_i138 = 0, $23 = 0, $24 = 0, $25 = 0, $retval_0 = 0;
 $0 = HEAP32[$__a_end >> 2] | 0;
 $sub_ptr_rhs_cast = $__a;
 if (($0 - $sub_ptr_rhs_cast | 0) > 38) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 if ($__ct << 24 >> 24 == $__decimal_point << 24 >> 24) {
  if ((HEAP8[$__in_units] & 1) == 0) {
   $retval_0 = -1;
   return $retval_0 | 0;
  }
  HEAP8[$__in_units] = 0;
  $3 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $3 + 1;
  HEAP8[$3] = 46;
  $conv_i_i = HEAPU8[$__grouping] | 0;
  if (($conv_i_i & 1 | 0) == 0) {
   $cond_i = $conv_i_i >>> 1;
  } else {
   $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
  }
  if (($cond_i | 0) == 0) {
   $retval_0 = 0;
   return $retval_0 | 0;
  }
  $6 = HEAP32[$__g_end >> 2] | 0;
  if (($6 - $__g | 0) >= 160) {
   $retval_0 = 0;
   return $retval_0 | 0;
  }
  $7 = HEAP32[$__dc >> 2] | 0;
  HEAP32[$__g_end >> 2] = $6 + 4;
  HEAP32[$6 >> 2] = $7;
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 do {
  if ($__ct << 24 >> 24 == $__thousands_sep << 24 >> 24) {
   $conv_i_i158 = HEAPU8[$__grouping] | 0;
   if (($conv_i_i158 & 1 | 0) == 0) {
    $cond_i179 = $conv_i_i158 >>> 1;
   } else {
    $cond_i179 = HEAP32[$__grouping + 4 >> 2] | 0;
   }
   if (($cond_i179 | 0) == 0) {
    break;
   }
   if ((HEAP8[$__in_units] & 1) == 0) {
    $retval_0 = -1;
    return $retval_0 | 0;
   }
   $12 = HEAP32[$__g_end >> 2] | 0;
   if (($12 - $__g | 0) >= 160) {
    $retval_0 = 0;
    return $retval_0 | 0;
   }
   $13 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $12 + 4;
   HEAP32[$12 >> 2] = $13;
   HEAP32[$__dc >> 2] = 0;
   $retval_0 = 0;
   return $retval_0 | 0;
  }
 } while (0);
 $add_ptr = $__atoms + 32 | 0;
 $__first_addr_i_0 = $__atoms;
 while (1) {
  if (($__first_addr_i_0 | 0) == ($add_ptr | 0)) {
   $__first_addr_i_0_lcssa = $add_ptr;
   break;
  }
  if ((HEAP8[$__first_addr_i_0] | 0) == $__ct << 24 >> 24) {
   $__first_addr_i_0_lcssa = $__first_addr_i_0;
   break;
  } else {
   $__first_addr_i_0 = $__first_addr_i_0 + 1 | 0;
  }
 }
 $sub_ptr_sub37 = $__first_addr_i_0_lcssa - $__atoms | 0;
 if (($sub_ptr_sub37 | 0) > 31) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $15 = HEAP8[18272 + $sub_ptr_sub37 | 0] | 0;
 do {
  if (($sub_ptr_sub37 | 0) == 25 | ($sub_ptr_sub37 | 0) == 24) {
   do {
    if (($0 | 0) != ($__a | 0)) {
     if ((HEAP8[$0 - 1 | 0] & 95 | 0) == (HEAP8[$__exp] & 127 | 0)) {
      break;
     } else {
      $retval_0 = -1;
     }
     return $retval_0 | 0;
    }
   } while (0);
   HEAP32[$__a_end >> 2] = $0 + 1;
   HEAP8[$0] = $15;
   $retval_0 = 0;
   return $retval_0 | 0;
  } else if (($sub_ptr_sub37 | 0) == 22 | ($sub_ptr_sub37 | 0) == 23) {
   HEAP8[$__exp] = 80;
  } else {
   $18 = HEAP8[$__exp] | 0;
   if (($15 & 95 | 0) != ($18 << 24 >> 24 | 0)) {
    break;
   }
   HEAP8[$__exp] = $18 | -128;
   if ((HEAP8[$__in_units] & 1) == 0) {
    break;
   }
   HEAP8[$__in_units] = 0;
   $conv_i_i117 = HEAPU8[$__grouping] | 0;
   if (($conv_i_i117 & 1 | 0) == 0) {
    $cond_i138 = $conv_i_i117 >>> 1;
   } else {
    $cond_i138 = HEAP32[$__grouping + 4 >> 2] | 0;
   }
   if (($cond_i138 | 0) == 0) {
    break;
   }
   $23 = HEAP32[$__g_end >> 2] | 0;
   if (($23 - $__g | 0) >= 160) {
    break;
   }
   $24 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $23 + 4;
   HEAP32[$23 >> 2] = $24;
  }
 } while (0);
 $25 = HEAP32[$__a_end >> 2] | 0;
 if (($25 - $sub_ptr_rhs_cast | 0) < (((HEAP8[$__exp] | 0) < 0 ? 39 : 29) | 0)) {
  HEAP32[$__a_end >> 2] = $25 + 1;
  HEAP8[$25] = $15;
 }
 if (($sub_ptr_sub37 | 0) > 21) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
 $retval_0 = 0;
 return $retval_0 | 0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p2_i = 0, $__decimal_point = 0, $__thousands_sep = 0, $__grouping = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $__in_units = 0, $__exp = 0, $arraydecay = 0, $0 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $1 = 0, $2 = 0, $3 = 0, $8 = 0, $cmp_i_i_i = 0, $9 = 0, $cmp_i31_i_i = 0, $cmp_i31_i_i24 = 0, $14 = 0, $__ninp__i_i = 0, $15 = 0, $__einp__i_i = 0, $retval_i_i_0_off0 = 0, $22 = 0, $25 = 0, $cmp_i31_i_i23 = 0, $26 = 0, $__size__i_i = 0, $conv_i_i62 = 0, $cond_i = 0, $31 = 0, $32 = 0, $33 = 0, $call_i_i_i = 0.0, $retval_0_i = 0.0, $41 = 0, $cmp_i_i_i100 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 312 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p2_i = __stackBase__ | 0;
 $__decimal_point = __stackBase__ + 40 | 0;
 $__thousands_sep = __stackBase__ + 48 | 0;
 $__grouping = __stackBase__ + 56 | 0;
 $__a_end = __stackBase__ + 112 | 0;
 $__g = __stackBase__ + 120 | 0;
 $__g_end = __stackBase__ + 280 | 0;
 $__dc = __stackBase__ + 288 | 0;
 $__in_units = __stackBase__ + 296 | 0;
 $__exp = __stackBase__ + 304 | 0;
 $arraydecay = __stackBase__ + 8 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $arraydecay, $__decimal_point, $__thousands_sep);
 $0 = __stackBase__ + 72 | 0;
 _memset($0 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $0;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 HEAP8[$__in_units] = 1;
 HEAP8[$__exp] = 69;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $1 = HEAP8[$__decimal_point] | 0;
 $2 = HEAP8[$__thousands_sep] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L10770 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $8 = 0;
   } else {
    if ((HEAP32[$3 + 12 >> 2] | 0) != (HEAP32[$3 + 16 >> 2] | 0)) {
     $8 = $3;
     break;
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0) != -1) {
     $8 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $8 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($8 | 0) == 0;
  $9 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($9 | 0) == 0) {
    label = 9252;
   } else {
    if ((HEAP32[$9 + 12 >> 2] | 0) != (HEAP32[$9 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = 0;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = 0;
      break L10770;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 9252;
     break;
    } else {
     $cmp_i31_i_i = ($9 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i31_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = $cmp_i31_i_i;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = $cmp_i31_i_i;
      break L10770;
     }
    }
   }
  } while (0);
  if ((label | 0) == 9252) {
   label = 0;
   if ($cmp_i_i_i) {
    $26 = 0;
    $cmp_i31_i_i23 = 1;
    break;
   } else {
    $14 = 0;
    $cmp_i31_i_i24 = 1;
   }
  }
  $__ninp__i_i = $8 + 12 | 0;
  $15 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $8 + 16 | 0;
  if (($15 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) & 255;
  } else {
   $retval_i_i_0_off0 = HEAP8[$15] | 0;
  }
  if ((__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($retval_i_i_0_off0, $__in_units, $__exp, $0, $__a_end, $1, $2, $__grouping, $arraydecay3, $__g_end, $__dc, $arraydecay) | 0) != 0) {
   $26 = $14;
   $cmp_i31_i_i23 = $cmp_i31_i_i24;
   break;
  }
  $22 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($22 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $25 = HEAP32[(HEAP32[$8 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$25 & 255]($8) | 0;
   $3 = $8;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $22 + 1;
   $3 = $8;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i62 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i62 & 1 | 0) == 0) {
  $cond_i = $conv_i_i62 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   if ((HEAP8[$__in_units] & 1) == 0) {
    break;
   }
   $31 = HEAP32[$__g_end >> 2] | 0;
   if (($31 - $__g | 0) >= 160) {
    break;
   }
   $32 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $31 + 4;
   HEAP32[$31 >> 2] = $32;
  }
 } while (0);
 $33 = HEAP32[$__a_end >> 2] | 0;
 do {
  if (($0 | 0) == ($33 | 0)) {
   HEAP32[$__err >> 2] = 4;
   $retval_0_i = 0.0;
  } else {
   if (!(HEAP8[18416] | 0)) {
    HEAP32[2044] = _newlocale(1, 3128, 0) | 0;
    HEAP8[18416] = 1;
   }
   $call_i_i_i = +_strtod($0, $__p2_i);
   if ((HEAP32[$__p2_i >> 2] | 0) == ($33 | 0)) {
    $retval_0_i = $call_i_i_i;
    break;
   } else {
    HEAP32[$__err >> 2] = 4;
    $retval_0_i = 0.0;
    break;
   }
  }
 } while (0);
 HEAPF32[$__v >> 2] = $retval_0_i;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $41 = 0;
  } else {
   if ((HEAP32[$8 + 12 >> 2] | 0) != (HEAP32[$8 + 16 >> 2] | 0)) {
    $41 = $8;
    break;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) != -1) {
    $41 = $8;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $41 = 0;
  }
 } while (0);
 $cmp_i_i_i100 = ($41 | 0) == 0;
 L10826 : do {
  if ($cmp_i31_i_i23) {
   label = 9292;
  } else {
   do {
    if ((HEAP32[$26 + 12 >> 2] | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 255]($26) | 0) != -1) {
      break;
     }
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 9292;
     break L10826;
    }
   } while (0);
   if (!($cmp_i_i_i100 ^ ($26 | 0) == 0)) {
    label = 9294;
   }
  }
 } while (0);
 if ((label | 0) == 9292) {
  if ($cmp_i_i_i100) {
   label = 9294;
  }
 }
 if ((label | 0) == 9294) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $41;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg_result, $__iob, $__atoms, $__decimal_point, $__thousands_sep) {
 $agg_result = $agg_result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $__p_i_i_i6 = 0, $__p_i_i_i = 0, $__locale_2_i1_i = 0, $0 = 0, $sub_i_i = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $11 = 0, $13 = 0, $sub_i_i13 = 0, $18 = 0, $19 = 0, $exception_i_i25 = 0, $21 = 0, $22 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__p_i_i_i6 = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 16 | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17816;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4455] | 0) - 1 | 0;
 $5 = $__locale_2_i1_i + 12 | 0;
 $7 = $__locale_2_i1_i + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 do {
  if ((HEAP32[$5 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   $11 = $9;
   $13 = HEAP32[(HEAP32[$9 >> 2] | 0) + 32 >> 2] | 0;
   FUNCTION_TABLE_iiiii[$13 & 15]($11, 18272, 18304, $__atoms) | 0;
   if ((HEAP32[4358] | 0) != -1) {
    HEAP32[$__p_i_i_i6 >> 2] = 17432;
    HEAP32[$__p_i_i_i6 + 4 >> 2] = 12;
    HEAP32[$__p_i_i_i6 + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(17432, $__p_i_i_i6, 102);
   }
   $sub_i_i13 = (HEAP32[4359] | 0) - 1 | 0;
   $18 = HEAP32[$7 >> 2] | 0;
   do {
    if ((HEAP32[$5 >> 2] | 0) - $18 >> 2 >>> 0 > $sub_i_i13 >>> 0) {
     $19 = HEAP32[$18 + ($sub_i_i13 << 2) >> 2] | 0;
     if (($19 | 0) == 0) {
      break;
     }
     $21 = $19;
     $22 = $19;
     HEAP8[$__decimal_point] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 12 >> 2] & 255]($21) | 0;
     HEAP8[$__thousands_sep] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 16 >> 2] & 255]($21) | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$19 >> 2] | 0) + 20 >> 2] & 127]($agg_result, $21);
     if (((tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
      STACKTOP = __stackBase__;
      return;
     }
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
     STACKTOP = __stackBase__;
     return;
    }
   } while (0);
   $exception_i_i25 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i25 >> 2] = 9184;
   ___cxa_throw($exception_i_i25 | 0, 15328, 208);
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p2_i = 0, $__decimal_point = 0, $__thousands_sep = 0, $__grouping = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $__in_units = 0, $__exp = 0, $arraydecay = 0, $0 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $1 = 0, $2 = 0, $3 = 0, $8 = 0, $cmp_i_i_i = 0, $9 = 0, $cmp_i31_i_i = 0, $cmp_i31_i_i24 = 0, $14 = 0, $__ninp__i_i = 0, $15 = 0, $__einp__i_i = 0, $retval_i_i_0_off0 = 0, $22 = 0, $25 = 0, $cmp_i31_i_i23 = 0, $26 = 0, $__size__i_i = 0, $conv_i_i62 = 0, $cond_i = 0, $31 = 0, $32 = 0, $33 = 0, $call_i_i_i = 0.0, $retval_0_i = 0.0, $41 = 0, $cmp_i_i_i100 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 312 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p2_i = __stackBase__ | 0;
 $__decimal_point = __stackBase__ + 40 | 0;
 $__thousands_sep = __stackBase__ + 48 | 0;
 $__grouping = __stackBase__ + 56 | 0;
 $__a_end = __stackBase__ + 112 | 0;
 $__g = __stackBase__ + 120 | 0;
 $__g_end = __stackBase__ + 280 | 0;
 $__dc = __stackBase__ + 288 | 0;
 $__in_units = __stackBase__ + 296 | 0;
 $__exp = __stackBase__ + 304 | 0;
 $arraydecay = __stackBase__ + 8 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $arraydecay, $__decimal_point, $__thousands_sep);
 $0 = __stackBase__ + 72 | 0;
 _memset($0 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $0;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 HEAP8[$__in_units] = 1;
 HEAP8[$__exp] = 69;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $1 = HEAP8[$__decimal_point] | 0;
 $2 = HEAP8[$__thousands_sep] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L10868 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $8 = 0;
   } else {
    if ((HEAP32[$3 + 12 >> 2] | 0) != (HEAP32[$3 + 16 >> 2] | 0)) {
     $8 = $3;
     break;
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0) != -1) {
     $8 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $8 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($8 | 0) == 0;
  $9 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($9 | 0) == 0) {
    label = 9336;
   } else {
    if ((HEAP32[$9 + 12 >> 2] | 0) != (HEAP32[$9 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = 0;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = 0;
      break L10868;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 9336;
     break;
    } else {
     $cmp_i31_i_i = ($9 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i31_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = $cmp_i31_i_i;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = $cmp_i31_i_i;
      break L10868;
     }
    }
   }
  } while (0);
  if ((label | 0) == 9336) {
   label = 0;
   if ($cmp_i_i_i) {
    $26 = 0;
    $cmp_i31_i_i23 = 1;
    break;
   } else {
    $14 = 0;
    $cmp_i31_i_i24 = 1;
   }
  }
  $__ninp__i_i = $8 + 12 | 0;
  $15 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $8 + 16 | 0;
  if (($15 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) & 255;
  } else {
   $retval_i_i_0_off0 = HEAP8[$15] | 0;
  }
  if ((__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($retval_i_i_0_off0, $__in_units, $__exp, $0, $__a_end, $1, $2, $__grouping, $arraydecay3, $__g_end, $__dc, $arraydecay) | 0) != 0) {
   $26 = $14;
   $cmp_i31_i_i23 = $cmp_i31_i_i24;
   break;
  }
  $22 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($22 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $25 = HEAP32[(HEAP32[$8 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$25 & 255]($8) | 0;
   $3 = $8;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $22 + 1;
   $3 = $8;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i62 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i62 & 1 | 0) == 0) {
  $cond_i = $conv_i_i62 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   if ((HEAP8[$__in_units] & 1) == 0) {
    break;
   }
   $31 = HEAP32[$__g_end >> 2] | 0;
   if (($31 - $__g | 0) >= 160) {
    break;
   }
   $32 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $31 + 4;
   HEAP32[$31 >> 2] = $32;
  }
 } while (0);
 $33 = HEAP32[$__a_end >> 2] | 0;
 do {
  if (($0 | 0) == ($33 | 0)) {
   HEAP32[$__err >> 2] = 4;
   $retval_0_i = 0.0;
  } else {
   if (!(HEAP8[18416] | 0)) {
    HEAP32[2044] = _newlocale(1, 3128, 0) | 0;
    HEAP8[18416] = 1;
   }
   $call_i_i_i = +_strtod($0, $__p2_i);
   if ((HEAP32[$__p2_i >> 2] | 0) == ($33 | 0)) {
    $retval_0_i = $call_i_i_i;
    break;
   }
   HEAP32[$__err >> 2] = 4;
   $retval_0_i = 0.0;
  }
 } while (0);
 HEAPF64[$__v >> 3] = $retval_0_i;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $41 = 0;
  } else {
   if ((HEAP32[$8 + 12 >> 2] | 0) != (HEAP32[$8 + 16 >> 2] | 0)) {
    $41 = $8;
    break;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) != -1) {
    $41 = $8;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $41 = 0;
  }
 } while (0);
 $cmp_i_i_i100 = ($41 | 0) == 0;
 L10922 : do {
  if ($cmp_i31_i_i23) {
   label = 9375;
  } else {
   do {
    if ((HEAP32[$26 + 12 >> 2] | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 255]($26) | 0) != -1) {
      break;
     }
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 9375;
     break L10922;
    }
   } while (0);
   if (!($cmp_i_i_i100 ^ ($26 | 0) == 0)) {
    label = 9377;
   }
  }
 } while (0);
 if ((label | 0) == 9375) {
  if ($cmp_i_i_i100) {
   label = 9377;
  }
 }
 if ((label | 0) == 9377) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $41;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p2_i = 0, $__decimal_point = 0, $__thousands_sep = 0, $__grouping = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $__in_units = 0, $__exp = 0, $arraydecay = 0, $0 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $1 = 0, $2 = 0, $3 = 0, $8 = 0, $cmp_i_i_i = 0, $9 = 0, $cmp_i31_i_i = 0, $cmp_i31_i_i24 = 0, $14 = 0, $__ninp__i_i = 0, $15 = 0, $__einp__i_i = 0, $retval_i_i_0_off0 = 0, $22 = 0, $25 = 0, $cmp_i31_i_i23 = 0, $26 = 0, $__size__i_i = 0, $conv_i_i62 = 0, $cond_i = 0, $31 = 0, $32 = 0, $33 = 0, $call_i_i_i = 0.0, $retval_0_i = 0.0, $41 = 0, $cmp_i_i_i100 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 312 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p2_i = __stackBase__ | 0;
 $__decimal_point = __stackBase__ + 40 | 0;
 $__thousands_sep = __stackBase__ + 48 | 0;
 $__grouping = __stackBase__ + 56 | 0;
 $__a_end = __stackBase__ + 112 | 0;
 $__g = __stackBase__ + 120 | 0;
 $__g_end = __stackBase__ + 280 | 0;
 $__dc = __stackBase__ + 288 | 0;
 $__in_units = __stackBase__ + 296 | 0;
 $__exp = __stackBase__ + 304 | 0;
 $arraydecay = __stackBase__ + 8 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $arraydecay, $__decimal_point, $__thousands_sep);
 $0 = __stackBase__ + 72 | 0;
 _memset($0 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $0;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 HEAP8[$__in_units] = 1;
 HEAP8[$__exp] = 69;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $1 = HEAP8[$__decimal_point] | 0;
 $2 = HEAP8[$__thousands_sep] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L10939 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $8 = 0;
   } else {
    if ((HEAP32[$3 + 12 >> 2] | 0) != (HEAP32[$3 + 16 >> 2] | 0)) {
     $8 = $3;
     break;
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0) != -1) {
     $8 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $8 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($8 | 0) == 0;
  $9 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($9 | 0) == 0) {
    label = 9395;
   } else {
    if ((HEAP32[$9 + 12 >> 2] | 0) != (HEAP32[$9 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = 0;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = 0;
      break L10939;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 9395;
     break;
    } else {
     $cmp_i31_i_i = ($9 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i31_i_i) {
      $14 = $9;
      $cmp_i31_i_i24 = $cmp_i31_i_i;
      break;
     } else {
      $26 = $9;
      $cmp_i31_i_i23 = $cmp_i31_i_i;
      break L10939;
     }
    }
   }
  } while (0);
  if ((label | 0) == 9395) {
   label = 0;
   if ($cmp_i_i_i) {
    $26 = 0;
    $cmp_i31_i_i23 = 1;
    break;
   } else {
    $14 = 0;
    $cmp_i31_i_i24 = 1;
   }
  }
  $__ninp__i_i = $8 + 12 | 0;
  $15 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $8 + 16 | 0;
  if (($15 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) & 255;
  } else {
   $retval_i_i_0_off0 = HEAP8[$15] | 0;
  }
  if ((__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($retval_i_i_0_off0, $__in_units, $__exp, $0, $__a_end, $1, $2, $__grouping, $arraydecay3, $__g_end, $__dc, $arraydecay) | 0) != 0) {
   $26 = $14;
   $cmp_i31_i_i23 = $cmp_i31_i_i24;
   break;
  }
  $22 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($22 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $25 = HEAP32[(HEAP32[$8 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$25 & 255]($8) | 0;
   $3 = $8;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $22 + 1;
   $3 = $8;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i62 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i62 & 1 | 0) == 0) {
  $cond_i = $conv_i_i62 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   if ((HEAP8[$__in_units] & 1) == 0) {
    break;
   }
   $31 = HEAP32[$__g_end >> 2] | 0;
   if (($31 - $__g | 0) >= 160) {
    break;
   }
   $32 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $31 + 4;
   HEAP32[$31 >> 2] = $32;
  }
 } while (0);
 $33 = HEAP32[$__a_end >> 2] | 0;
 do {
  if (($0 | 0) == ($33 | 0)) {
   HEAP32[$__err >> 2] = 4;
   $retval_0_i = 0.0;
  } else {
   if (!(HEAP8[18416] | 0)) {
    HEAP32[2044] = _newlocale(1, 3128, 0) | 0;
    HEAP8[18416] = 1;
   }
   $call_i_i_i = +_strtod($0, $__p2_i);
   if ((HEAP32[$__p2_i >> 2] | 0) == ($33 | 0)) {
    $retval_0_i = $call_i_i_i;
    break;
   }
   HEAP32[$__err >> 2] = 4;
   $retval_0_i = 0.0;
  }
 } while (0);
 HEAPF64[$__v >> 3] = $retval_0_i;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $41 = 0;
  } else {
   if ((HEAP32[$8 + 12 >> 2] | 0) != (HEAP32[$8 + 16 >> 2] | 0)) {
    $41 = $8;
    break;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) != -1) {
    $41 = $8;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $41 = 0;
  }
 } while (0);
 $cmp_i_i_i100 = ($41 | 0) == 0;
 L10993 : do {
  if ($cmp_i31_i_i23) {
   label = 9434;
  } else {
   do {
    if ((HEAP32[$26 + 12 >> 2] | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 255]($26) | 0) != -1) {
      break;
     }
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 9434;
     break L10993;
    }
   } while (0);
   if (!($cmp_i_i_i100 ^ ($26 | 0) == 0)) {
    label = 9436;
   }
  }
 } while (0);
 if ((label | 0) == 9434) {
  if ($cmp_i_i_i100) {
   label = 9436;
  }
 }
 if ((label | 0) == 9436) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $41;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p_i_i_i = 0, $__atoms = 0, $__grouping = 0, $__size__i_i_i24 = 0, $__a = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $__locale_2_i1_i = 0, $0 = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $11 = 0, $arraydecay = 0, $13 = 0, $18 = 0, $arraydecay7 = 0, $__sbuf__i_i_i62 = 0, $__sbuf__i11_i_i84 = 0, $19 = 0, $24 = 0, $cmp_i_i_i81 = 0, $25 = 0, $cmp_i31_i_i104 = 0, $cmp_i31_i_i10442 = 0, $30 = 0, $__ninp__i_i = 0, $31 = 0, $__einp__i_i = 0, $retval_i_i_0_off0 = 0, $45 = 0, $48 = 0, $cmp_i31_i_i10441 = 0, $49 = 0, $call_i23 = 0, $50 = 0, $55 = 0, $cmp_i_i_i37 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i = __stackBase__ | 0;
 $__atoms = __stackBase__ + 16 | 0;
 $__grouping = __stackBase__ + 48 | 0;
 $__size__i_i_i24 = $__grouping;
 $__a = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 $__a_end = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__g = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $__g_end = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__dc = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 _memset($__size__i_i_i24 | 0, 0, 12);
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17816;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4455] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   $11 = $9;
   $arraydecay = $__atoms | 0;
   $13 = HEAP32[(HEAP32[$9 >> 2] | 0) + 32 >> 2] | 0;
   FUNCTION_TABLE_iiiii[$13 & 15]($11, 18272, 18298, $arraydecay) | 0;
   if (((tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   $18 = $__a | 0;
   _memset($18 | 0, 0, 40);
   HEAP32[$__a_end >> 2] = $18;
   $arraydecay7 = $__g | 0;
   HEAP32[$__g_end >> 2] = $arraydecay7;
   HEAP32[$__dc >> 2] = 0;
   $__sbuf__i_i_i62 = $__b | 0;
   $__sbuf__i11_i_i84 = $__e | 0;
   $19 = HEAP32[$__sbuf__i_i_i62 >> 2] | 0;
   L11022 : while (1) {
    do {
     if (($19 | 0) == 0) {
      $24 = 0;
     } else {
      if ((HEAP32[$19 + 12 >> 2] | 0) != (HEAP32[$19 + 16 >> 2] | 0)) {
       $24 = $19;
       break;
      }
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 36 >> 2] & 255]($19) | 0) != -1) {
       $24 = $19;
       break;
      }
      HEAP32[$__sbuf__i_i_i62 >> 2] = 0;
      $24 = 0;
     }
    } while (0);
    $cmp_i_i_i81 = ($24 | 0) == 0;
    $25 = HEAP32[$__sbuf__i11_i_i84 >> 2] | 0;
    do {
     if (($25 | 0) == 0) {
      label = 9465;
     } else {
      if ((HEAP32[$25 + 12 >> 2] | 0) != (HEAP32[$25 + 16 >> 2] | 0)) {
       if ($cmp_i_i_i81) {
        $30 = $25;
        $cmp_i31_i_i10442 = 0;
        break;
       } else {
        $49 = $25;
        $cmp_i31_i_i10441 = 0;
        break L11022;
       }
      }
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] & 255]($25) | 0) == -1) {
       HEAP32[$__sbuf__i11_i_i84 >> 2] = 0;
       label = 9465;
       break;
      } else {
       $cmp_i31_i_i104 = ($25 | 0) == 0;
       if ($cmp_i_i_i81 ^ $cmp_i31_i_i104) {
        $30 = $25;
        $cmp_i31_i_i10442 = $cmp_i31_i_i104;
        break;
       } else {
        $49 = $25;
        $cmp_i31_i_i10441 = $cmp_i31_i_i104;
        break L11022;
       }
      }
     }
    } while (0);
    if ((label | 0) == 9465) {
     label = 0;
     if ($cmp_i_i_i81) {
      $49 = 0;
      $cmp_i31_i_i10441 = 1;
      break;
     } else {
      $30 = 0;
      $cmp_i31_i_i10442 = 1;
     }
    }
    $__ninp__i_i = $24 + 12 | 0;
    $31 = HEAP32[$__ninp__i_i >> 2] | 0;
    $__einp__i_i = $24 + 16 | 0;
    if (($31 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
     $retval_i_i_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 36 >> 2] & 255]($24) | 0) & 255;
    } else {
     $retval_i_i_0_off0 = HEAP8[$31] | 0;
    }
    if ((__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($retval_i_i_0_off0, 16, $18, $__a_end, $__dc, 0, $__grouping, $arraydecay7, $__g_end, $arraydecay) | 0) != 0) {
     $49 = $30;
     $cmp_i31_i_i10441 = $cmp_i31_i_i10442;
     break;
    }
    $45 = HEAP32[$__ninp__i_i >> 2] | 0;
    if (($45 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
     $48 = HEAP32[(HEAP32[$24 >> 2] | 0) + 40 >> 2] | 0;
     FUNCTION_TABLE_ii[$48 & 255]($24) | 0;
     $19 = $24;
     continue;
    } else {
     HEAP32[$__ninp__i_i >> 2] = $45 + 1;
     $19 = $24;
     continue;
    }
   }
   HEAP8[$__a + 39 | 0] = 0;
   if (HEAP8[18416] | 0) {
    $50 = HEAP32[2044] | 0;
   } else {
    $call_i23 = _newlocale(1, 3128, 0) | 0;
    HEAP32[2044] = $call_i23;
    HEAP8[18416] = 1;
    $50 = $call_i23;
   }
   if ((__ZNSt3__110__sscanf_lEPKcPvS1_z($18, $50, 2856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $__v, tempInt) | 0) | 0) != 1) {
    HEAP32[$__err >> 2] = 4;
   }
   do {
    if ($cmp_i_i_i81) {
     $55 = 0;
    } else {
     if ((HEAP32[$24 + 12 >> 2] | 0) != (HEAP32[$24 + 16 >> 2] | 0)) {
      $55 = $24;
      break;
     }
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 36 >> 2] & 255]($24) | 0) != -1) {
      $55 = $24;
      break;
     }
     HEAP32[$__sbuf__i_i_i62 >> 2] = 0;
     $55 = 0;
    }
   } while (0);
   $cmp_i_i_i37 = ($55 | 0) == 0;
   L11067 : do {
    if ($cmp_i31_i_i10441) {
     label = 9497;
    } else {
     do {
      if ((HEAP32[$49 + 12 >> 2] | 0) == (HEAP32[$49 + 16 >> 2] | 0)) {
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$49 >> 2] | 0) + 36 >> 2] & 255]($49) | 0) != -1) {
        break;
       }
       HEAP32[$__sbuf__i11_i_i84 >> 2] = 0;
       label = 9497;
       break L11067;
      }
     } while (0);
     if (!($cmp_i_i_i37 ^ ($49 | 0) == 0)) {
      label = 9499;
     }
    }
   } while (0);
   if ((label | 0) == 9497) {
    if ($cmp_i_i_i37) {
     label = 9499;
    }
   }
   if ((label | 0) == 9499) {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   }
   HEAP32[$agg_result >> 2] = $55;
   if ((HEAP8[$__size__i_i_i24] & 1) == 0) {
    STACKTOP = __stackBase__;
    return;
   }
   __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNSt3__110__sscanf_lEPKcPvS1_z($__s, $__l, $__format, varrp) {
 $__s = $__s | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 varrp = varrp | 0;
 var $__va = 0, $arraydecay1 = 0, $call = 0, $call3 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = __stackBase__ | 0;
 $arraydecay1 = $__va;
 HEAP32[$arraydecay1 >> 2] = varrp;
 HEAP32[$arraydecay1 + 4 >> 2] = 0;
 $call = _uselocale($__l | 0) | 0;
 $call3 = _vsscanf($__s | 0, $__format | 0, $__va | 0) | 0;
 if (($call | 0) == 0) {
  STACKTOP = __stackBase__;
  return $call3 | 0;
 }
 _uselocale($call | 0) | 0;
 STACKTOP = __stackBase__;
 return $call3 | 0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p_i_i_i19 = 0, $__p_i_i_i = 0, $__lv = 0, $ref_tmp = 0, $agg_tmp = 0, $agg_tmp2 = 0, $__names = 0, $agg_tmp14 = 0, $2 = 0, $3 = 0, $10 = 0, $11 = 0, $__loc__i = 0, $__locale_2_i1_i = 0, $13 = 0, $sub_i_i = 0, $21 = 0, $22 = 0, $exception_i_i = 0, $24 = 0, $__locale_2_i1_i17 = 0, $29 = 0, $sub_i_i26 = 0, $37 = 0, $38 = 0, $exception_i_i38 = 0, $40 = 0, $arrayinit_begin = 0, $45 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i19 = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 16 | 0;
 $__lv = __stackBase__ + 32 | 0;
 $ref_tmp = __stackBase__ + 40 | 0;
 $agg_tmp = __stackBase__ + 48 | 0;
 $agg_tmp2 = __stackBase__ + 56 | 0;
 $__names = __stackBase__ + 64 | 0;
 $agg_tmp14 = __stackBase__ + 88 | 0;
 if ((HEAP32[$__iob + 4 >> 2] & 1 | 0) == 0) {
  HEAP32[$__lv >> 2] = -1;
  $2 = HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] | 0;
  $3 = $__b | 0;
  HEAP32[$agg_tmp >> 2] = HEAP32[$3 >> 2];
  HEAP32[$agg_tmp2 >> 2] = HEAP32[$__e >> 2];
  FUNCTION_TABLE_viiiiiii[$2 & 127]($ref_tmp, $this, $agg_tmp, $agg_tmp2, $__iob, $__err, $__lv);
  $10 = HEAP32[$ref_tmp >> 2] | 0;
  HEAP32[$3 >> 2] = $10;
  $11 = HEAP32[$__lv >> 2] | 0;
  if (($11 | 0) == 1) {
   HEAP8[$__v] = 1;
  } else if (($11 | 0) == 0) {
   HEAP8[$__v] = 0;
  } else {
   HEAP8[$__v] = 1;
   HEAP32[$__err >> 2] = 4;
  }
  HEAP32[$agg_result >> 2] = $10;
  STACKTOP = __stackBase__;
  return;
 }
 $__loc__i = $__iob + 28 | 0;
 $__locale_2_i1_i = HEAP32[$__loc__i >> 2] | 0;
 $13 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$13 >> 2] | 0, HEAP32[$13 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17808;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4453] | 0) - 1 | 0;
 $21 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $21 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $22 = HEAP32[$21 + ($sub_i_i << 2) >> 2] | 0;
   if (($22 | 0) == 0) {
    break;
   }
   $24 = $22;
   if (((tempValue = HEAP32[$13 >> 2] | 0, HEAP32[$13 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   $__locale_2_i1_i17 = HEAP32[$__loc__i >> 2] | 0;
   $29 = $__locale_2_i1_i17 + 4 | 0;
   tempValue = HEAP32[$29 >> 2] | 0, HEAP32[$29 >> 2] = tempValue + 1, tempValue;
   if ((HEAP32[4356] | 0) != -1) {
    HEAP32[$__p_i_i_i19 >> 2] = 17424;
    HEAP32[$__p_i_i_i19 + 4 >> 2] = 12;
    HEAP32[$__p_i_i_i19 + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(17424, $__p_i_i_i19, 102);
   }
   $sub_i_i26 = (HEAP32[4357] | 0) - 1 | 0;
   $37 = HEAP32[$__locale_2_i1_i17 + 8 >> 2] | 0;
   do {
    if ((HEAP32[$__locale_2_i1_i17 + 12 >> 2] | 0) - $37 >> 2 >>> 0 > $sub_i_i26 >>> 0) {
     $38 = HEAP32[$37 + ($sub_i_i26 << 2) >> 2] | 0;
     if (($38 | 0) == 0) {
      break;
     }
     $40 = $38;
     if (((tempValue = HEAP32[$29 >> 2] | 0, HEAP32[$29 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
      FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i17 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i17);
     }
     $arrayinit_begin = $__names | 0;
     $45 = $38;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$45 >> 2] | 0) + 24 >> 2] & 127]($arrayinit_begin, $40);
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$45 >> 2] | 0) + 28 >> 2] & 127]($__names + 12 | 0, $40);
     HEAP32[$agg_tmp14 >> 2] = HEAP32[$__e >> 2];
     HEAP8[$__v] = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $agg_tmp14, $arrayinit_begin, $__names + 24 | 0, $24, $__err, 1) | 0) == ($arrayinit_begin | 0) & 1;
     HEAP32[$agg_result >> 2] = HEAP32[$__b >> 2];
     if ((HEAP8[$__names + 12 | 0] & 1) != 0) {
      __ZdlPv(HEAP32[$__names + 20 >> 2] | 0);
     }
     if ((HEAP8[$__names] & 1) == 0) {
      STACKTOP = __stackBase__;
      return;
     }
     __ZdlPv(HEAP32[$__names + 8 >> 2] | 0);
     STACKTOP = __stackBase__;
     return;
    }
   } while (0);
   $exception_i_i38 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i38 >> 2] = 9184;
   ___cxa_throw($exception_i_i38 | 0, 15328, 208);
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms = 0, $__thousands_sep = 0, $__grouping = 0, $__a = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $and_i = 0, $retval_0_i = 0, $arraydecay = 0, $1 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $2 = 0, $3 = 0, $4 = 0, $retval_i_i_i_i_0 = 0, $9 = 0, $cmp_i_i_i = 0, $10 = 0, $11 = 0, $retval_i_i7_i_i_0 = 0, $cmp_i30_i_i = 0, $cmp_i30_i_i19 = 0, $16 = 0, $__ninp__i_i = 0, $17 = 0, $__einp__i_i = 0, $retval_i_i_0 = 0, $24 = 0, $27 = 0, $cmp_i30_i_i18 = 0, $28 = 0, $__size__i_i = 0, $conv_i_i60 = 0, $cond_i = 0, $31 = 0, $32 = 0, $35 = 0, $retval_i_i_i_i70_0 = 0, $40 = 0, $cmp_i_i_i97 = 0, $41 = 0, $retval_i_i7_i_i64_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms = __stackBase__ | 0;
 $__thousands_sep = __stackBase__ + 104 | 0;
 $__grouping = __stackBase__ + 112 | 0;
 $__a = __stackBase__ + 128 | 0;
 $__a_end = __stackBase__ + 168 | 0;
 $__g = __stackBase__ + 176 | 0;
 $__g_end = __stackBase__ + 336 | 0;
 $__dc = __stackBase__ + 344 | 0;
 $and_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i | 0) == 0) {
  $retval_0_i = 0;
 } else if (($and_i | 0) == 8) {
  $retval_0_i = 16;
 } else if (($and_i | 0) == 64) {
  $retval_0_i = 8;
 } else {
  $retval_0_i = 10;
 }
 $arraydecay = $__atoms | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $arraydecay, $__thousands_sep);
 $1 = $__a | 0;
 _memset($1 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $1;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $2 = HEAP32[$__thousands_sep >> 2] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L11138 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $9 = 0;
   } else {
    $4 = HEAP32[$3 + 12 >> 2] | 0;
    if (($4 | 0) == (HEAP32[$3 + 16 >> 2] | 0)) {
     $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0;
    } else {
     $retval_i_i_i_i_0 = HEAP32[$4 >> 2] | 0;
    }
    if (($retval_i_i_i_i_0 | 0) != -1) {
     $9 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $9 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($9 | 0) == 0;
  $10 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($10 | 0) == 0) {
    label = 9578;
   } else {
    $11 = HEAP32[$10 + 12 >> 2] | 0;
    if (($11 | 0) == (HEAP32[$10 + 16 >> 2] | 0)) {
     $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 255]($10) | 0;
    } else {
     $retval_i_i7_i_i_0 = HEAP32[$11 >> 2] | 0;
    }
    if (($retval_i_i7_i_i_0 | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 9578;
     break;
    } else {
     $cmp_i30_i_i = ($10 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i30_i_i) {
      $16 = $10;
      $cmp_i30_i_i19 = $cmp_i30_i_i;
      break;
     } else {
      $28 = $10;
      $cmp_i30_i_i18 = $cmp_i30_i_i;
      break L11138;
     }
    }
   }
  } while (0);
  if ((label | 0) == 9578) {
   label = 0;
   if ($cmp_i_i_i) {
    $28 = 0;
    $cmp_i30_i_i18 = 1;
    break;
   } else {
    $16 = 0;
    $cmp_i30_i_i19 = 1;
   }
  }
  $__ninp__i_i = $9 + 12 | 0;
  $17 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $9 + 16 | 0;
  if (($17 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
  } else {
   $retval_i_i_0 = HEAP32[$17 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_i_i_0, $retval_0_i, $1, $__a_end, $__dc, $2, $__grouping, $arraydecay3, $__g_end, $arraydecay) | 0) != 0) {
   $28 = $16;
   $cmp_i30_i_i18 = $cmp_i30_i_i19;
   break;
  }
  $24 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($24 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $27 = HEAP32[(HEAP32[$9 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$27 & 255]($9) | 0;
   $3 = $9;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $24 + 4;
   $3 = $9;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i60 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i60 & 1 | 0) == 0) {
  $cond_i = $conv_i_i60 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   $31 = HEAP32[$__g_end >> 2] | 0;
   if (($31 - $__g | 0) >= 160) {
    break;
   }
   $32 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $31 + 4;
   HEAP32[$31 >> 2] = $32;
  }
 } while (0);
 HEAP32[$__v >> 2] = __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($1, HEAP32[$__a_end >> 2] | 0, $__err, $retval_0_i) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $40 = 0;
  } else {
   $35 = HEAP32[$9 + 12 >> 2] | 0;
   if (($35 | 0) == (HEAP32[$9 + 16 >> 2] | 0)) {
    $retval_i_i_i_i70_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
   } else {
    $retval_i_i_i_i70_0 = HEAP32[$35 >> 2] | 0;
   }
   if (($retval_i_i_i_i70_0 | 0) != -1) {
    $40 = $9;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $40 = 0;
  }
 } while (0);
 $cmp_i_i_i97 = ($40 | 0) == 0;
 do {
  if ($cmp_i30_i_i18) {
   label = 9611;
  } else {
   $41 = HEAP32[$28 + 12 >> 2] | 0;
   if (($41 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i64_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 255]($28) | 0;
   } else {
    $retval_i_i7_i_i64_0 = HEAP32[$41 >> 2] | 0;
   }
   if (($retval_i_i7_i_i64_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 9611;
    break;
   } else {
    if ($cmp_i_i_i97 ^ ($28 | 0) == 0) {
     break;
    } else {
     label = 9613;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 9611) {
  if ($cmp_i_i_i97) {
   label = 9613;
  }
 }
 if ((label | 0) == 9613) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $40;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $__e, $__kb, $__ke, $__ct, $__err, $__case_sensitive) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__kb = $__kb | 0;
 $__ke = $__ke | 0;
 $__ct = $__ct | 0;
 $__err = $__err | 0;
 $__case_sensitive = $__case_sensitive | 0;
 var $sub_ptr_div_i_i = 0, $arraydecay = 0, $call1 = 0, $exception_i = 0, $__stat_hold_sroa_0_1 = 0, $__status_0 = 0, $cmp5102 = 0, $__n_does_match_0_lcssa = 0, $__n_might_match_0_lcssa = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $2 = 0, $__ky_0106 = 0, $__st_0105 = 0, $__n_does_match_0104 = 0, $__n_might_match_0103 = 0, $conv_i_i_i = 0, $cond_i_i = 0, $__n_might_match_1 = 0, $__n_does_match_1 = 0, $incdec_ptr = 0, $__n_might_match_2 = 0, $__n_does_match_2 = 0, $__indx_0 = 0, $5 = 0, $6 = 0, $retval_i_i_i_i_0 = 0, $11 = 0, $cmp_i_i_i = 0, $12 = 0, $13 = 0, $retval_i_i7_i_i_0 = 0, $18 = 0, $19 = 0, $20 = 0, $cmp_i30_i_i = 0, $21 = 0, $retval_i_i_0 = 0, $__c_0 = 0, $add = 0, $__ky21_085 = 0, $__consume_0_off084 = 0, $__st_182 = 0, $__n_does_match_381 = 0, $__n_might_match_380 = 0, $__size__i_i_i_i = 0, $cond_i_i_i = 0, $30 = 0, $__kc_0 = 0, $conv_i_i205 = 0, $cond_i = 0, $__n_might_match_4 = 0, $__n_does_match_4 = 0, $__consume_1_off0 = 0, $incdec_ptr47 = 0, $34 = 0, $__ninp__i_i214 = 0, $35 = 0, $38 = 0, $add64 = 0, $__ky57_093 = 0, $__st_292 = 0, $__n_does_match_591 = 0, $conv_i_i242 = 0, $cond_i263 = 0, $__n_does_match_6 = 0, $incdec_ptr70 = 0, $__n_might_match_3_lcssa112 = 0, $__n_does_match_7 = 0, $42 = 0, $retval_i_i_i_i274_0 = 0, $47 = 0, $48 = 0, $retval_i_i7_i_i268_0 = 0, $__st_372 = 0, $__kb_addr_071 = 0, $incdec_ptr90 = 0, $__kb_addr_069 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 104 | 0;
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $sub_ptr_div_i_i = ($__ke - $__kb | 0) / 12 & -1;
 $arraydecay = __stackBase__ | 0;
 do {
  if ($sub_ptr_div_i_i >>> 0 > 100) {
   $call1 = _malloc($sub_ptr_div_i_i) | 0;
   if (($call1 | 0) != 0) {
    $__status_0 = $call1;
    $__stat_hold_sroa_0_1 = $call1;
    break;
   }
   $exception_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i >> 2] = 9152;
   ___cxa_throw($exception_i | 0, 15312, 28);
   return 0;
  } else {
   $__status_0 = $arraydecay;
   $__stat_hold_sroa_0_1 = 0;
  }
 } while (0);
 $cmp5102 = ($__kb | 0) == ($__ke | 0);
 if ($cmp5102) {
  $__n_might_match_0_lcssa = $sub_ptr_div_i_i;
  $__n_does_match_0_lcssa = 0;
 } else {
  $__n_might_match_0103 = $sub_ptr_div_i_i;
  $__n_does_match_0104 = 0;
  $__st_0105 = $__status_0;
  $__ky_0106 = $__kb;
  while (1) {
   $conv_i_i_i = HEAPU8[$__ky_0106] | 0;
   if (($conv_i_i_i & 1 | 0) == 0) {
    $cond_i_i = $conv_i_i_i >>> 1;
   } else {
    $cond_i_i = HEAP32[$__ky_0106 + 4 >> 2] | 0;
   }
   if (($cond_i_i | 0) == 0) {
    HEAP8[$__st_0105] = 2;
    $__n_does_match_1 = $__n_does_match_0104 + 1 | 0;
    $__n_might_match_1 = $__n_might_match_0103 - 1 | 0;
   } else {
    HEAP8[$__st_0105] = 1;
    $__n_does_match_1 = $__n_does_match_0104;
    $__n_might_match_1 = $__n_might_match_0103;
   }
   $incdec_ptr = $__ky_0106 + 12 | 0;
   if (($incdec_ptr | 0) == ($__ke | 0)) {
    $__n_might_match_0_lcssa = $__n_might_match_1;
    $__n_does_match_0_lcssa = $__n_does_match_1;
    break;
   } else {
    $__n_might_match_0103 = $__n_might_match_1;
    $__n_does_match_0104 = $__n_does_match_1;
    $__st_0105 = $__st_0105 + 1 | 0;
    $__ky_0106 = $incdec_ptr;
   }
  }
 }
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $2 = $__ct;
 $__indx_0 = 0;
 $__n_does_match_2 = $__n_does_match_0_lcssa;
 $__n_might_match_2 = $__n_might_match_0_lcssa;
 while (1) {
  $5 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
  do {
   if (($5 | 0) == 0) {
    $11 = 0;
   } else {
    $6 = HEAP32[$5 + 12 >> 2] | 0;
    if (($6 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) {
     $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 255]($5) | 0;
    } else {
     $retval_i_i_i_i_0 = HEAP32[$6 >> 2] | 0;
    }
    if (($retval_i_i_i_i_0 | 0) == -1) {
     HEAP32[$__sbuf__i_i_i >> 2] = 0;
     $11 = 0;
     break;
    } else {
     $11 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
     break;
    }
   }
  } while (0);
  $cmp_i_i_i = ($11 | 0) == 0;
  $12 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  if (($12 | 0) == 0) {
   $20 = $11;
   $19 = 0;
  } else {
   $13 = HEAP32[$12 + 12 >> 2] | 0;
   if (($13 | 0) == (HEAP32[$12 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 255]($12) | 0;
   } else {
    $retval_i_i7_i_i_0 = HEAP32[$13 >> 2] | 0;
   }
   if (($retval_i_i7_i_i_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    $18 = 0;
   } else {
    $18 = $12;
   }
   $20 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   $19 = $18;
  }
  $cmp_i30_i_i = ($19 | 0) == 0;
  if (!(($cmp_i_i_i ^ $cmp_i30_i_i) & ($__n_might_match_2 | 0) != 0)) {
   break;
  }
  $21 = HEAP32[$20 + 12 >> 2] | 0;
  if (($21 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) {
   $retval_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 255]($20) | 0;
  } else {
   $retval_i_i_0 = HEAP32[$21 >> 2] | 0;
  }
  if ($__case_sensitive) {
   $__c_0 = $retval_i_i_0;
  } else {
   $__c_0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$2 >> 2] | 0) + 28 >> 2] & 63]($__ct, $retval_i_i_0) | 0;
  }
  do {
   if ($cmp5102) {
    $__n_does_match_7 = $__n_does_match_2;
    $__n_might_match_3_lcssa112 = $__n_might_match_2;
   } else {
    $add = $__indx_0 + 1 | 0;
    $__n_might_match_380 = $__n_might_match_2;
    $__n_does_match_381 = $__n_does_match_2;
    $__st_182 = $__status_0;
    $__consume_0_off084 = 0;
    $__ky21_085 = $__kb;
    while (1) {
     do {
      if ((HEAP8[$__st_182] | 0) == 1) {
       $__size__i_i_i_i = $__ky21_085;
       if ((HEAP8[$__size__i_i_i_i] & 1) == 0) {
        $cond_i_i_i = $__ky21_085 + 4 | 0;
       } else {
        $cond_i_i_i = HEAP32[$__ky21_085 + 8 >> 2] | 0;
       }
       $30 = HEAP32[$cond_i_i_i + ($__indx_0 << 2) >> 2] | 0;
       if ($__case_sensitive) {
        $__kc_0 = $30;
       } else {
        $__kc_0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$2 >> 2] | 0) + 28 >> 2] & 63]($__ct, $30) | 0;
       }
       if (($__c_0 | 0) != ($__kc_0 | 0)) {
        HEAP8[$__st_182] = 0;
        $__consume_1_off0 = $__consume_0_off084;
        $__n_does_match_4 = $__n_does_match_381;
        $__n_might_match_4 = $__n_might_match_380 - 1 | 0;
        break;
       }
       $conv_i_i205 = HEAPU8[$__size__i_i_i_i] | 0;
       if (($conv_i_i205 & 1 | 0) == 0) {
        $cond_i = $conv_i_i205 >>> 1;
       } else {
        $cond_i = HEAP32[$__ky21_085 + 4 >> 2] | 0;
       }
       if (($cond_i | 0) != ($add | 0)) {
        $__consume_1_off0 = 1;
        $__n_does_match_4 = $__n_does_match_381;
        $__n_might_match_4 = $__n_might_match_380;
        break;
       }
       HEAP8[$__st_182] = 2;
       $__consume_1_off0 = 1;
       $__n_does_match_4 = $__n_does_match_381 + 1 | 0;
       $__n_might_match_4 = $__n_might_match_380 - 1 | 0;
      } else {
       $__consume_1_off0 = $__consume_0_off084;
       $__n_does_match_4 = $__n_does_match_381;
       $__n_might_match_4 = $__n_might_match_380;
      }
     } while (0);
     $incdec_ptr47 = $__ky21_085 + 12 | 0;
     if (($incdec_ptr47 | 0) == ($__ke | 0)) {
      break;
     }
     $__n_might_match_380 = $__n_might_match_4;
     $__n_does_match_381 = $__n_does_match_4;
     $__st_182 = $__st_182 + 1 | 0;
     $__consume_0_off084 = $__consume_1_off0;
     $__ky21_085 = $incdec_ptr47;
    }
    if (!$__consume_1_off0) {
     $__n_does_match_7 = $__n_does_match_4;
     $__n_might_match_3_lcssa112 = $__n_might_match_4;
     break;
    }
    $34 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
    $__ninp__i_i214 = $34 + 12 | 0;
    $35 = HEAP32[$__ninp__i_i214 >> 2] | 0;
    if (($35 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     $38 = HEAP32[(HEAP32[$34 >> 2] | 0) + 40 >> 2] | 0;
     FUNCTION_TABLE_ii[$38 & 255]($34) | 0;
    } else {
     HEAP32[$__ninp__i_i214 >> 2] = $35 + 4;
    }
    if (($__n_does_match_4 + $__n_might_match_4 | 0) >>> 0 < 2 | $cmp5102) {
     $__n_does_match_7 = $__n_does_match_4;
     $__n_might_match_3_lcssa112 = $__n_might_match_4;
     break;
    }
    $add64 = $__indx_0 + 1 | 0;
    $__n_does_match_591 = $__n_does_match_4;
    $__st_292 = $__status_0;
    $__ky57_093 = $__kb;
    while (1) {
     do {
      if ((HEAP8[$__st_292] | 0) == 2) {
       $conv_i_i242 = HEAPU8[$__ky57_093] | 0;
       if (($conv_i_i242 & 1 | 0) == 0) {
        $cond_i263 = $conv_i_i242 >>> 1;
       } else {
        $cond_i263 = HEAP32[$__ky57_093 + 4 >> 2] | 0;
       }
       if (($cond_i263 | 0) == ($add64 | 0)) {
        $__n_does_match_6 = $__n_does_match_591;
        break;
       }
       HEAP8[$__st_292] = 0;
       $__n_does_match_6 = $__n_does_match_591 - 1 | 0;
      } else {
       $__n_does_match_6 = $__n_does_match_591;
      }
     } while (0);
     $incdec_ptr70 = $__ky57_093 + 12 | 0;
     if (($incdec_ptr70 | 0) == ($__ke | 0)) {
      $__n_does_match_7 = $__n_does_match_6;
      $__n_might_match_3_lcssa112 = $__n_might_match_4;
      break;
     } else {
      $__n_does_match_591 = $__n_does_match_6;
      $__st_292 = $__st_292 + 1 | 0;
      $__ky57_093 = $incdec_ptr70;
     }
    }
   }
  } while (0);
  $__indx_0 = $__indx_0 + 1 | 0;
  $__n_does_match_2 = $__n_does_match_7;
  $__n_might_match_2 = $__n_might_match_3_lcssa112;
 }
 do {
  if (($20 | 0) == 0) {
   $47 = 1;
  } else {
   $42 = HEAP32[$20 + 12 >> 2] | 0;
   if (($42 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) {
    $retval_i_i_i_i274_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 255]($20) | 0;
   } else {
    $retval_i_i_i_i274_0 = HEAP32[$42 >> 2] | 0;
   }
   if (($retval_i_i_i_i274_0 | 0) == -1) {
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $47 = 1;
    break;
   } else {
    $47 = (HEAP32[$__sbuf__i_i_i >> 2] | 0) == 0;
    break;
   }
  }
 } while (0);
 do {
  if ($cmp_i30_i_i) {
   label = 9702;
  } else {
   $48 = HEAP32[$19 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$19 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i268_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 36 >> 2] & 255]($19) | 0;
   } else {
    $retval_i_i7_i_i268_0 = HEAP32[$48 >> 2] | 0;
   }
   if (($retval_i_i7_i_i268_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 9702;
    break;
   } else {
    if ($47 ^ ($19 | 0) == 0) {
     break;
    } else {
     label = 9704;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 9702) {
  if ($47) {
   label = 9704;
  }
 }
 if ((label | 0) == 9704) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 L11318 : do {
  if ($cmp5102) {
   label = 9709;
  } else {
   $__kb_addr_071 = $__kb;
   $__st_372 = $__status_0;
   while (1) {
    if ((HEAP8[$__st_372] | 0) == 2) {
     $__kb_addr_069 = $__kb_addr_071;
     break L11318;
    }
    $incdec_ptr90 = $__kb_addr_071 + 12 | 0;
    if (($incdec_ptr90 | 0) == ($__ke | 0)) {
     label = 9709;
     break L11318;
    }
    $__kb_addr_071 = $incdec_ptr90;
    $__st_372 = $__st_372 + 1 | 0;
   }
  }
 } while (0);
 if ((label | 0) == 9709) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $__kb_addr_069 = $__ke;
 }
 if (($__stat_hold_sroa_0_1 | 0) == 0) {
  STACKTOP = __stackBase__;
  return $__kb_addr_069 | 0;
 }
 _free($__stat_hold_sroa_0_1);
 STACKTOP = __stackBase__;
 return $__kb_addr_069 | 0;
}
function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct, $__base, $__a, $__a_end, $__dc, $__thousands_sep, $__grouping, $__g, $__g_end, $__atoms) {
 $__ct = $__ct | 0;
 $__base = $__base | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__dc = $__dc | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__atoms = $__atoms | 0;
 var $0 = 0, $cmp = 0, $cmp1 = 0, $conv_i_i = 0, $cond_i = 0, $5 = 0, $6 = 0, $add_ptr = 0, $__first_addr_i_0 = 0, $__first_addr_i_0_lcssa = 0, $sub_ptr_sub18 = 0, $sub_ptr_div19 = 0, $9 = 0, $10 = 0, $11 = 0, $retval_0 = 0;
 $0 = HEAP32[$__a_end >> 2] | 0;
 $cmp = ($0 | 0) == ($__a | 0);
 do {
  if ($cmp) {
   $cmp1 = (HEAP32[$__atoms + 96 >> 2] | 0) == ($__ct | 0);
   if (!$cmp1) {
    if ((HEAP32[$__atoms + 100 >> 2] | 0) != ($__ct | 0)) {
     break;
    }
   }
   HEAP32[$__a_end >> 2] = $__a + 1;
   HEAP8[$__a] = $cmp1 ? 43 : 45;
   HEAP32[$__dc >> 2] = 0;
   $retval_0 = 0;
   return $retval_0 | 0;
  }
 } while (0);
 $conv_i_i = HEAPU8[$__grouping] | 0;
 if (($conv_i_i & 1 | 0) == 0) {
  $cond_i = $conv_i_i >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 if (($cond_i | 0) != 0 & ($__ct | 0) == ($__thousands_sep | 0)) {
  $5 = HEAP32[$__g_end >> 2] | 0;
  if (($5 - $__g | 0) >= 160) {
   $retval_0 = 0;
   return $retval_0 | 0;
  }
  $6 = HEAP32[$__dc >> 2] | 0;
  HEAP32[$__g_end >> 2] = $5 + 4;
  HEAP32[$5 >> 2] = $6;
  HEAP32[$__dc >> 2] = 0;
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 $add_ptr = $__atoms + 104 | 0;
 $__first_addr_i_0 = $__atoms;
 while (1) {
  if (($__first_addr_i_0 | 0) == ($add_ptr | 0)) {
   $__first_addr_i_0_lcssa = $add_ptr;
   break;
  }
  if ((HEAP32[$__first_addr_i_0 >> 2] | 0) == ($__ct | 0)) {
   $__first_addr_i_0_lcssa = $__first_addr_i_0;
   break;
  } else {
   $__first_addr_i_0 = $__first_addr_i_0 + 4 | 0;
  }
 }
 $sub_ptr_sub18 = $__first_addr_i_0_lcssa - $__atoms | 0;
 $sub_ptr_div19 = $sub_ptr_sub18 >> 2;
 if (($sub_ptr_sub18 | 0) > 92) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 do {
  if (($__base | 0) == 8 | ($__base | 0) == 10) {
   if (($sub_ptr_div19 | 0) < ($__base | 0)) {
    break;
   } else {
    $retval_0 = -1;
   }
   return $retval_0 | 0;
  } else if (($__base | 0) == 16) {
   if (($sub_ptr_sub18 | 0) < 88) {
    break;
   }
   if ($cmp) {
    $retval_0 = -1;
    return $retval_0 | 0;
   }
   if (($0 - $__a | 0) >= 3) {
    $retval_0 = -1;
    return $retval_0 | 0;
   }
   if ((HEAP8[$0 - 1 | 0] | 0) != 48) {
    $retval_0 = -1;
    return $retval_0 | 0;
   }
   HEAP32[$__dc >> 2] = 0;
   $9 = HEAP8[18272 + $sub_ptr_div19 | 0] | 0;
   $10 = HEAP32[$__a_end >> 2] | 0;
   HEAP32[$__a_end >> 2] = $10 + 1;
   HEAP8[$10] = $9;
   $retval_0 = 0;
   return $retval_0 | 0;
  }
 } while (0);
 if (($0 - $__a | 0) < 39) {
  $11 = HEAP8[18272 + $sub_ptr_div19 | 0] | 0;
  HEAP32[$__a_end >> 2] = $0 + 1;
  HEAP8[$0] = $11;
 }
 HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
 $retval_0 = 0;
 return $retval_0 | 0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms = 0, $__thousands_sep = 0, $__grouping = 0, $__a = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $and_i = 0, $retval_0_i = 0, $arraydecay = 0, $1 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $2 = 0, $3 = 0, $4 = 0, $retval_i_i_i_i_0 = 0, $9 = 0, $cmp_i_i_i = 0, $10 = 0, $11 = 0, $retval_i_i7_i_i_0 = 0, $cmp_i30_i_i = 0, $cmp_i30_i_i19 = 0, $16 = 0, $__ninp__i_i = 0, $17 = 0, $__einp__i_i = 0, $retval_i_i_0 = 0, $24 = 0, $27 = 0, $cmp_i30_i_i18 = 0, $28 = 0, $__size__i_i = 0, $conv_i_i60 = 0, $cond_i = 0, $31 = 0, $32 = 0, $call21$0 = 0, $35 = 0, $retval_i_i_i_i70_0 = 0, $40 = 0, $cmp_i_i_i97 = 0, $41 = 0, $retval_i_i7_i_i64_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms = __stackBase__ | 0;
 $__thousands_sep = __stackBase__ + 104 | 0;
 $__grouping = __stackBase__ + 112 | 0;
 $__a = __stackBase__ + 128 | 0;
 $__a_end = __stackBase__ + 168 | 0;
 $__g = __stackBase__ + 176 | 0;
 $__g_end = __stackBase__ + 336 | 0;
 $__dc = __stackBase__ + 344 | 0;
 $and_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i | 0) == 0) {
  $retval_0_i = 0;
 } else if (($and_i | 0) == 8) {
  $retval_0_i = 16;
 } else if (($and_i | 0) == 64) {
  $retval_0_i = 8;
 } else {
  $retval_0_i = 10;
 }
 $arraydecay = $__atoms | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $arraydecay, $__thousands_sep);
 $1 = $__a | 0;
 _memset($1 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $1;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $2 = HEAP32[$__thousands_sep >> 2] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L11382 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $9 = 0;
   } else {
    $4 = HEAP32[$3 + 12 >> 2] | 0;
    if (($4 | 0) == (HEAP32[$3 + 16 >> 2] | 0)) {
     $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0;
    } else {
     $retval_i_i_i_i_0 = HEAP32[$4 >> 2] | 0;
    }
    if (($retval_i_i_i_i_0 | 0) != -1) {
     $9 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $9 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($9 | 0) == 0;
  $10 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($10 | 0) == 0) {
    label = 9768;
   } else {
    $11 = HEAP32[$10 + 12 >> 2] | 0;
    if (($11 | 0) == (HEAP32[$10 + 16 >> 2] | 0)) {
     $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 255]($10) | 0;
    } else {
     $retval_i_i7_i_i_0 = HEAP32[$11 >> 2] | 0;
    }
    if (($retval_i_i7_i_i_0 | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 9768;
     break;
    } else {
     $cmp_i30_i_i = ($10 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i30_i_i) {
      $16 = $10;
      $cmp_i30_i_i19 = $cmp_i30_i_i;
      break;
     } else {
      $28 = $10;
      $cmp_i30_i_i18 = $cmp_i30_i_i;
      break L11382;
     }
    }
   }
  } while (0);
  if ((label | 0) == 9768) {
   label = 0;
   if ($cmp_i_i_i) {
    $28 = 0;
    $cmp_i30_i_i18 = 1;
    break;
   } else {
    $16 = 0;
    $cmp_i30_i_i19 = 1;
   }
  }
  $__ninp__i_i = $9 + 12 | 0;
  $17 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $9 + 16 | 0;
  if (($17 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
  } else {
   $retval_i_i_0 = HEAP32[$17 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_i_i_0, $retval_0_i, $1, $__a_end, $__dc, $2, $__grouping, $arraydecay3, $__g_end, $arraydecay) | 0) != 0) {
   $28 = $16;
   $cmp_i30_i_i18 = $cmp_i30_i_i19;
   break;
  }
  $24 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($24 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $27 = HEAP32[(HEAP32[$9 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$27 & 255]($9) | 0;
   $3 = $9;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $24 + 4;
   $3 = $9;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i60 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i60 & 1 | 0) == 0) {
  $cond_i = $conv_i_i60 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   $31 = HEAP32[$__g_end >> 2] | 0;
   if (($31 - $__g | 0) >= 160) {
    break;
   }
   $32 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $31 + 4;
   HEAP32[$31 >> 2] = $32;
  }
 } while (0);
 $call21$0 = __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($1, HEAP32[$__a_end >> 2] | 0, $__err, $retval_0_i) | 0;
 HEAP32[$__v >> 2] = $call21$0;
 HEAP32[$__v + 4 >> 2] = tempRet0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $40 = 0;
  } else {
   $35 = HEAP32[$9 + 12 >> 2] | 0;
   if (($35 | 0) == (HEAP32[$9 + 16 >> 2] | 0)) {
    $retval_i_i_i_i70_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
   } else {
    $retval_i_i_i_i70_0 = HEAP32[$35 >> 2] | 0;
   }
   if (($retval_i_i_i_i70_0 | 0) != -1) {
    $40 = $9;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $40 = 0;
  }
 } while (0);
 $cmp_i_i_i97 = ($40 | 0) == 0;
 do {
  if ($cmp_i30_i_i18) {
   label = 9801;
  } else {
   $41 = HEAP32[$28 + 12 >> 2] | 0;
   if (($41 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i64_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 255]($28) | 0;
   } else {
    $retval_i_i7_i_i64_0 = HEAP32[$41 >> 2] | 0;
   }
   if (($retval_i_i7_i_i64_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 9801;
    break;
   } else {
    if ($cmp_i_i_i97 ^ ($28 | 0) == 0) {
     break;
    } else {
     label = 9803;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 9801) {
  if ($cmp_i_i_i97) {
   label = 9803;
  }
 }
 if ((label | 0) == 9803) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $40;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg_result, $__iob, $__atoms, $__thousands_sep) {
 $agg_result = $agg_result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $__p_i_i_i5 = 0, $__p_i_i_i = 0, $__locale_2_i1_i = 0, $0 = 0, $sub_i_i = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $11 = 0, $13 = 0, $sub_i_i12 = 0, $18 = 0, $19 = 0, $exception_i_i24 = 0, $21 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__p_i_i_i5 = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 16 | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17808;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4453] | 0) - 1 | 0;
 $5 = $__locale_2_i1_i + 12 | 0;
 $7 = $__locale_2_i1_i + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 do {
  if ((HEAP32[$5 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   $11 = $9;
   $13 = HEAP32[(HEAP32[$9 >> 2] | 0) + 48 >> 2] | 0;
   FUNCTION_TABLE_iiiii[$13 & 15]($11, 18272, 18298, $__atoms) | 0;
   if ((HEAP32[4356] | 0) != -1) {
    HEAP32[$__p_i_i_i5 >> 2] = 17424;
    HEAP32[$__p_i_i_i5 + 4 >> 2] = 12;
    HEAP32[$__p_i_i_i5 + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(17424, $__p_i_i_i5, 102);
   }
   $sub_i_i12 = (HEAP32[4357] | 0) - 1 | 0;
   $18 = HEAP32[$7 >> 2] | 0;
   do {
    if ((HEAP32[$5 >> 2] | 0) - $18 >> 2 >>> 0 > $sub_i_i12 >>> 0) {
     $19 = HEAP32[$18 + ($sub_i_i12 << 2) >> 2] | 0;
     if (($19 | 0) == 0) {
      break;
     }
     $21 = $19;
     HEAP32[$__thousands_sep >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 16 >> 2] & 255]($21) | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$19 >> 2] | 0) + 20 >> 2] & 127]($agg_result, $21);
     if (((tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
      STACKTOP = __stackBase__;
      return;
     }
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
     STACKTOP = __stackBase__;
     return;
    }
   } while (0);
   $exception_i_i24 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i24 >> 2] = 9184;
   ___cxa_throw($exception_i_i24 | 0, 15328, 208);
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms = 0, $__thousands_sep = 0, $__grouping = 0, $__a = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $and_i = 0, $retval_0_i = 0, $arraydecay = 0, $1 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $2 = 0, $3 = 0, $4 = 0, $retval_i_i_i_i_0 = 0, $9 = 0, $cmp_i_i_i = 0, $10 = 0, $11 = 0, $retval_i_i7_i_i_0 = 0, $cmp_i30_i_i = 0, $cmp_i30_i_i19 = 0, $16 = 0, $__ninp__i_i = 0, $17 = 0, $__einp__i_i = 0, $retval_i_i_0 = 0, $24 = 0, $27 = 0, $cmp_i30_i_i18 = 0, $28 = 0, $__size__i_i = 0, $conv_i_i60 = 0, $cond_i = 0, $31 = 0, $32 = 0, $35 = 0, $retval_i_i_i_i70_0 = 0, $40 = 0, $cmp_i_i_i97 = 0, $41 = 0, $retval_i_i7_i_i64_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms = __stackBase__ | 0;
 $__thousands_sep = __stackBase__ + 104 | 0;
 $__grouping = __stackBase__ + 112 | 0;
 $__a = __stackBase__ + 128 | 0;
 $__a_end = __stackBase__ + 168 | 0;
 $__g = __stackBase__ + 176 | 0;
 $__g_end = __stackBase__ + 336 | 0;
 $__dc = __stackBase__ + 344 | 0;
 $and_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i | 0) == 0) {
  $retval_0_i = 0;
 } else if (($and_i | 0) == 8) {
  $retval_0_i = 16;
 } else if (($and_i | 0) == 64) {
  $retval_0_i = 8;
 } else {
  $retval_0_i = 10;
 }
 $arraydecay = $__atoms | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $arraydecay, $__thousands_sep);
 $1 = $__a | 0;
 _memset($1 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $1;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $2 = HEAP32[$__thousands_sep >> 2] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L11478 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $9 = 0;
   } else {
    $4 = HEAP32[$3 + 12 >> 2] | 0;
    if (($4 | 0) == (HEAP32[$3 + 16 >> 2] | 0)) {
     $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0;
    } else {
     $retval_i_i_i_i_0 = HEAP32[$4 >> 2] | 0;
    }
    if (($retval_i_i_i_i_0 | 0) != -1) {
     $9 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $9 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($9 | 0) == 0;
  $10 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($10 | 0) == 0) {
    label = 9849;
   } else {
    $11 = HEAP32[$10 + 12 >> 2] | 0;
    if (($11 | 0) == (HEAP32[$10 + 16 >> 2] | 0)) {
     $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 255]($10) | 0;
    } else {
     $retval_i_i7_i_i_0 = HEAP32[$11 >> 2] | 0;
    }
    if (($retval_i_i7_i_i_0 | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 9849;
     break;
    } else {
     $cmp_i30_i_i = ($10 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i30_i_i) {
      $16 = $10;
      $cmp_i30_i_i19 = $cmp_i30_i_i;
      break;
     } else {
      $28 = $10;
      $cmp_i30_i_i18 = $cmp_i30_i_i;
      break L11478;
     }
    }
   }
  } while (0);
  if ((label | 0) == 9849) {
   label = 0;
   if ($cmp_i_i_i) {
    $28 = 0;
    $cmp_i30_i_i18 = 1;
    break;
   } else {
    $16 = 0;
    $cmp_i30_i_i19 = 1;
   }
  }
  $__ninp__i_i = $9 + 12 | 0;
  $17 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $9 + 16 | 0;
  if (($17 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
  } else {
   $retval_i_i_0 = HEAP32[$17 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_i_i_0, $retval_0_i, $1, $__a_end, $__dc, $2, $__grouping, $arraydecay3, $__g_end, $arraydecay) | 0) != 0) {
   $28 = $16;
   $cmp_i30_i_i18 = $cmp_i30_i_i19;
   break;
  }
  $24 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($24 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $27 = HEAP32[(HEAP32[$9 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$27 & 255]($9) | 0;
   $3 = $9;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $24 + 4;
   $3 = $9;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i60 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i60 & 1 | 0) == 0) {
  $cond_i = $conv_i_i60 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   $31 = HEAP32[$__g_end >> 2] | 0;
   if (($31 - $__g | 0) >= 160) {
    break;
   }
   $32 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $31 + 4;
   HEAP32[$31 >> 2] = $32;
  }
 } while (0);
 HEAP16[$__v >> 1] = __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($1, HEAP32[$__a_end >> 2] | 0, $__err, $retval_0_i) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $40 = 0;
  } else {
   $35 = HEAP32[$9 + 12 >> 2] | 0;
   if (($35 | 0) == (HEAP32[$9 + 16 >> 2] | 0)) {
    $retval_i_i_i_i70_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
   } else {
    $retval_i_i_i_i70_0 = HEAP32[$35 >> 2] | 0;
   }
   if (($retval_i_i_i_i70_0 | 0) != -1) {
    $40 = $9;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $40 = 0;
  }
 } while (0);
 $cmp_i_i_i97 = ($40 | 0) == 0;
 do {
  if ($cmp_i30_i_i18) {
   label = 9882;
  } else {
   $41 = HEAP32[$28 + 12 >> 2] | 0;
   if (($41 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i64_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 255]($28) | 0;
   } else {
    $retval_i_i7_i_i64_0 = HEAP32[$41 >> 2] | 0;
   }
   if (($retval_i_i7_i_i64_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 9882;
    break;
   } else {
    if ($cmp_i_i_i97 ^ ($28 | 0) == 0) {
     break;
    } else {
     label = 9884;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 9882) {
  if ($cmp_i_i_i97) {
   label = 9884;
  }
 }
 if ((label | 0) == 9884) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $40;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms = 0, $__thousands_sep = 0, $__grouping = 0, $__a = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $and_i = 0, $retval_0_i = 0, $arraydecay = 0, $1 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $2 = 0, $3 = 0, $4 = 0, $retval_i_i_i_i_0 = 0, $9 = 0, $cmp_i_i_i = 0, $10 = 0, $11 = 0, $retval_i_i7_i_i_0 = 0, $cmp_i30_i_i = 0, $cmp_i30_i_i19 = 0, $16 = 0, $__ninp__i_i = 0, $17 = 0, $__einp__i_i = 0, $retval_i_i_0 = 0, $24 = 0, $27 = 0, $cmp_i30_i_i18 = 0, $28 = 0, $__size__i_i = 0, $conv_i_i60 = 0, $cond_i = 0, $31 = 0, $32 = 0, $35 = 0, $retval_i_i_i_i70_0 = 0, $40 = 0, $cmp_i_i_i97 = 0, $41 = 0, $retval_i_i7_i_i64_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms = __stackBase__ | 0;
 $__thousands_sep = __stackBase__ + 104 | 0;
 $__grouping = __stackBase__ + 112 | 0;
 $__a = __stackBase__ + 128 | 0;
 $__a_end = __stackBase__ + 168 | 0;
 $__g = __stackBase__ + 176 | 0;
 $__g_end = __stackBase__ + 336 | 0;
 $__dc = __stackBase__ + 344 | 0;
 $and_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i | 0) == 64) {
  $retval_0_i = 8;
 } else if (($and_i | 0) == 8) {
  $retval_0_i = 16;
 } else if (($and_i | 0) == 0) {
  $retval_0_i = 0;
 } else {
  $retval_0_i = 10;
 }
 $arraydecay = $__atoms | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $arraydecay, $__thousands_sep);
 $1 = $__a | 0;
 _memset($1 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $1;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $2 = HEAP32[$__thousands_sep >> 2] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L11550 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $9 = 0;
   } else {
    $4 = HEAP32[$3 + 12 >> 2] | 0;
    if (($4 | 0) == (HEAP32[$3 + 16 >> 2] | 0)) {
     $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0;
    } else {
     $retval_i_i_i_i_0 = HEAP32[$4 >> 2] | 0;
    }
    if (($retval_i_i_i_i_0 | 0) != -1) {
     $9 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $9 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($9 | 0) == 0;
  $10 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($10 | 0) == 0) {
    label = 9907;
   } else {
    $11 = HEAP32[$10 + 12 >> 2] | 0;
    if (($11 | 0) == (HEAP32[$10 + 16 >> 2] | 0)) {
     $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 255]($10) | 0;
    } else {
     $retval_i_i7_i_i_0 = HEAP32[$11 >> 2] | 0;
    }
    if (($retval_i_i7_i_i_0 | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 9907;
     break;
    } else {
     $cmp_i30_i_i = ($10 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i30_i_i) {
      $16 = $10;
      $cmp_i30_i_i19 = $cmp_i30_i_i;
      break;
     } else {
      $28 = $10;
      $cmp_i30_i_i18 = $cmp_i30_i_i;
      break L11550;
     }
    }
   }
  } while (0);
  if ((label | 0) == 9907) {
   label = 0;
   if ($cmp_i_i_i) {
    $28 = 0;
    $cmp_i30_i_i18 = 1;
    break;
   } else {
    $16 = 0;
    $cmp_i30_i_i19 = 1;
   }
  }
  $__ninp__i_i = $9 + 12 | 0;
  $17 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $9 + 16 | 0;
  if (($17 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
  } else {
   $retval_i_i_0 = HEAP32[$17 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_i_i_0, $retval_0_i, $1, $__a_end, $__dc, $2, $__grouping, $arraydecay3, $__g_end, $arraydecay) | 0) != 0) {
   $28 = $16;
   $cmp_i30_i_i18 = $cmp_i30_i_i19;
   break;
  }
  $24 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($24 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $27 = HEAP32[(HEAP32[$9 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$27 & 255]($9) | 0;
   $3 = $9;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $24 + 4;
   $3 = $9;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i60 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i60 & 1 | 0) == 0) {
  $cond_i = $conv_i_i60 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   $31 = HEAP32[$__g_end >> 2] | 0;
   if (($31 - $__g | 0) >= 160) {
    break;
   }
   $32 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $31 + 4;
   HEAP32[$31 >> 2] = $32;
  }
 } while (0);
 HEAP32[$__v >> 2] = __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($1, HEAP32[$__a_end >> 2] | 0, $__err, $retval_0_i) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $40 = 0;
  } else {
   $35 = HEAP32[$9 + 12 >> 2] | 0;
   if (($35 | 0) == (HEAP32[$9 + 16 >> 2] | 0)) {
    $retval_i_i_i_i70_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
   } else {
    $retval_i_i_i_i70_0 = HEAP32[$35 >> 2] | 0;
   }
   if (($retval_i_i_i_i70_0 | 0) != -1) {
    $40 = $9;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $40 = 0;
  }
 } while (0);
 $cmp_i_i_i97 = ($40 | 0) == 0;
 do {
  if ($cmp_i30_i_i18) {
   label = 9940;
  } else {
   $41 = HEAP32[$28 + 12 >> 2] | 0;
   if (($41 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i64_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 255]($28) | 0;
   } else {
    $retval_i_i7_i_i64_0 = HEAP32[$41 >> 2] | 0;
   }
   if (($retval_i_i7_i_i64_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 9940;
    break;
   } else {
    if ($cmp_i_i_i97 ^ ($28 | 0) == 0) {
     break;
    } else {
     label = 9942;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 9940) {
  if ($cmp_i_i_i97) {
   label = 9942;
  }
 }
 if ((label | 0) == 9942) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $40;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms = 0, $__thousands_sep = 0, $__grouping = 0, $__a = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $and_i = 0, $retval_0_i = 0, $arraydecay = 0, $1 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $2 = 0, $3 = 0, $4 = 0, $retval_i_i_i_i_0 = 0, $9 = 0, $cmp_i_i_i = 0, $10 = 0, $11 = 0, $retval_i_i7_i_i_0 = 0, $cmp_i30_i_i = 0, $cmp_i30_i_i19 = 0, $16 = 0, $__ninp__i_i = 0, $17 = 0, $__einp__i_i = 0, $retval_i_i_0 = 0, $24 = 0, $27 = 0, $cmp_i30_i_i18 = 0, $28 = 0, $__size__i_i = 0, $conv_i_i60 = 0, $cond_i = 0, $31 = 0, $32 = 0, $35 = 0, $retval_i_i_i_i70_0 = 0, $40 = 0, $cmp_i_i_i97 = 0, $41 = 0, $retval_i_i7_i_i64_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms = __stackBase__ | 0;
 $__thousands_sep = __stackBase__ + 104 | 0;
 $__grouping = __stackBase__ + 112 | 0;
 $__a = __stackBase__ + 128 | 0;
 $__a_end = __stackBase__ + 168 | 0;
 $__g = __stackBase__ + 176 | 0;
 $__g_end = __stackBase__ + 336 | 0;
 $__dc = __stackBase__ + 344 | 0;
 $and_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i | 0) == 0) {
  $retval_0_i = 0;
 } else if (($and_i | 0) == 8) {
  $retval_0_i = 16;
 } else if (($and_i | 0) == 64) {
  $retval_0_i = 8;
 } else {
  $retval_0_i = 10;
 }
 $arraydecay = $__atoms | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $arraydecay, $__thousands_sep);
 $1 = $__a | 0;
 _memset($1 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $1;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $2 = HEAP32[$__thousands_sep >> 2] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L11622 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $9 = 0;
   } else {
    $4 = HEAP32[$3 + 12 >> 2] | 0;
    if (($4 | 0) == (HEAP32[$3 + 16 >> 2] | 0)) {
     $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0;
    } else {
     $retval_i_i_i_i_0 = HEAP32[$4 >> 2] | 0;
    }
    if (($retval_i_i_i_i_0 | 0) != -1) {
     $9 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $9 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($9 | 0) == 0;
  $10 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($10 | 0) == 0) {
    label = 9965;
   } else {
    $11 = HEAP32[$10 + 12 >> 2] | 0;
    if (($11 | 0) == (HEAP32[$10 + 16 >> 2] | 0)) {
     $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 255]($10) | 0;
    } else {
     $retval_i_i7_i_i_0 = HEAP32[$11 >> 2] | 0;
    }
    if (($retval_i_i7_i_i_0 | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 9965;
     break;
    } else {
     $cmp_i30_i_i = ($10 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i30_i_i) {
      $16 = $10;
      $cmp_i30_i_i19 = $cmp_i30_i_i;
      break;
     } else {
      $28 = $10;
      $cmp_i30_i_i18 = $cmp_i30_i_i;
      break L11622;
     }
    }
   }
  } while (0);
  if ((label | 0) == 9965) {
   label = 0;
   if ($cmp_i_i_i) {
    $28 = 0;
    $cmp_i30_i_i18 = 1;
    break;
   } else {
    $16 = 0;
    $cmp_i30_i_i19 = 1;
   }
  }
  $__ninp__i_i = $9 + 12 | 0;
  $17 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $9 + 16 | 0;
  if (($17 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
  } else {
   $retval_i_i_0 = HEAP32[$17 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_i_i_0, $retval_0_i, $1, $__a_end, $__dc, $2, $__grouping, $arraydecay3, $__g_end, $arraydecay) | 0) != 0) {
   $28 = $16;
   $cmp_i30_i_i18 = $cmp_i30_i_i19;
   break;
  }
  $24 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($24 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $27 = HEAP32[(HEAP32[$9 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$27 & 255]($9) | 0;
   $3 = $9;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $24 + 4;
   $3 = $9;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i60 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i60 & 1 | 0) == 0) {
  $cond_i = $conv_i_i60 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   $31 = HEAP32[$__g_end >> 2] | 0;
   if (($31 - $__g | 0) >= 160) {
    break;
   }
   $32 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $31 + 4;
   HEAP32[$31 >> 2] = $32;
  }
 } while (0);
 HEAP32[$__v >> 2] = __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($1, HEAP32[$__a_end >> 2] | 0, $__err, $retval_0_i) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $40 = 0;
  } else {
   $35 = HEAP32[$9 + 12 >> 2] | 0;
   if (($35 | 0) == (HEAP32[$9 + 16 >> 2] | 0)) {
    $retval_i_i_i_i70_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
   } else {
    $retval_i_i_i_i70_0 = HEAP32[$35 >> 2] | 0;
   }
   if (($retval_i_i_i_i70_0 | 0) != -1) {
    $40 = $9;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $40 = 0;
  }
 } while (0);
 $cmp_i_i_i97 = ($40 | 0) == 0;
 do {
  if ($cmp_i30_i_i18) {
   label = 9998;
  } else {
   $41 = HEAP32[$28 + 12 >> 2] | 0;
   if (($41 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i64_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 255]($28) | 0;
   } else {
    $retval_i_i7_i_i64_0 = HEAP32[$41 >> 2] | 0;
   }
   if (($retval_i_i7_i_i64_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 9998;
    break;
   } else {
    if ($cmp_i_i_i97 ^ ($28 | 0) == 0) {
     break;
    } else {
     label = 1e4;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 9998) {
  if ($cmp_i_i_i97) {
   label = 1e4;
  }
 }
 if ((label | 0) == 1e4) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $40;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms = 0, $__thousands_sep = 0, $__grouping = 0, $__a = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $and_i = 0, $retval_0_i = 0, $arraydecay = 0, $1 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $2 = 0, $3 = 0, $4 = 0, $retval_i_i_i_i_0 = 0, $9 = 0, $cmp_i_i_i = 0, $10 = 0, $11 = 0, $retval_i_i7_i_i_0 = 0, $cmp_i30_i_i = 0, $cmp_i30_i_i19 = 0, $16 = 0, $__ninp__i_i = 0, $17 = 0, $__einp__i_i = 0, $retval_i_i_0 = 0, $24 = 0, $27 = 0, $cmp_i30_i_i18 = 0, $28 = 0, $__size__i_i = 0, $conv_i_i60 = 0, $cond_i = 0, $31 = 0, $32 = 0, $call21$0 = 0, $35 = 0, $retval_i_i_i_i70_0 = 0, $40 = 0, $cmp_i_i_i97 = 0, $41 = 0, $retval_i_i7_i_i64_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms = __stackBase__ | 0;
 $__thousands_sep = __stackBase__ + 104 | 0;
 $__grouping = __stackBase__ + 112 | 0;
 $__a = __stackBase__ + 128 | 0;
 $__a_end = __stackBase__ + 168 | 0;
 $__g = __stackBase__ + 176 | 0;
 $__g_end = __stackBase__ + 336 | 0;
 $__dc = __stackBase__ + 344 | 0;
 $and_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i | 0) == 64) {
  $retval_0_i = 8;
 } else if (($and_i | 0) == 8) {
  $retval_0_i = 16;
 } else if (($and_i | 0) == 0) {
  $retval_0_i = 0;
 } else {
  $retval_0_i = 10;
 }
 $arraydecay = $__atoms | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $arraydecay, $__thousands_sep);
 $1 = $__a | 0;
 _memset($1 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $1;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $2 = HEAP32[$__thousands_sep >> 2] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L11694 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $9 = 0;
   } else {
    $4 = HEAP32[$3 + 12 >> 2] | 0;
    if (($4 | 0) == (HEAP32[$3 + 16 >> 2] | 0)) {
     $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0;
    } else {
     $retval_i_i_i_i_0 = HEAP32[$4 >> 2] | 0;
    }
    if (($retval_i_i_i_i_0 | 0) != -1) {
     $9 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $9 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($9 | 0) == 0;
  $10 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($10 | 0) == 0) {
    label = 10023;
   } else {
    $11 = HEAP32[$10 + 12 >> 2] | 0;
    if (($11 | 0) == (HEAP32[$10 + 16 >> 2] | 0)) {
     $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 255]($10) | 0;
    } else {
     $retval_i_i7_i_i_0 = HEAP32[$11 >> 2] | 0;
    }
    if (($retval_i_i7_i_i_0 | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 10023;
     break;
    } else {
     $cmp_i30_i_i = ($10 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i30_i_i) {
      $16 = $10;
      $cmp_i30_i_i19 = $cmp_i30_i_i;
      break;
     } else {
      $28 = $10;
      $cmp_i30_i_i18 = $cmp_i30_i_i;
      break L11694;
     }
    }
   }
  } while (0);
  if ((label | 0) == 10023) {
   label = 0;
   if ($cmp_i_i_i) {
    $28 = 0;
    $cmp_i30_i_i18 = 1;
    break;
   } else {
    $16 = 0;
    $cmp_i30_i_i19 = 1;
   }
  }
  $__ninp__i_i = $9 + 12 | 0;
  $17 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $9 + 16 | 0;
  if (($17 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
  } else {
   $retval_i_i_0 = HEAP32[$17 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_i_i_0, $retval_0_i, $1, $__a_end, $__dc, $2, $__grouping, $arraydecay3, $__g_end, $arraydecay) | 0) != 0) {
   $28 = $16;
   $cmp_i30_i_i18 = $cmp_i30_i_i19;
   break;
  }
  $24 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($24 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $27 = HEAP32[(HEAP32[$9 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$27 & 255]($9) | 0;
   $3 = $9;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $24 + 4;
   $3 = $9;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i60 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i60 & 1 | 0) == 0) {
  $cond_i = $conv_i_i60 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   $31 = HEAP32[$__g_end >> 2] | 0;
   if (($31 - $__g | 0) >= 160) {
    break;
   }
   $32 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $31 + 4;
   HEAP32[$31 >> 2] = $32;
  }
 } while (0);
 $call21$0 = __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($1, HEAP32[$__a_end >> 2] | 0, $__err, $retval_0_i) | 0;
 HEAP32[$__v >> 2] = $call21$0;
 HEAP32[$__v + 4 >> 2] = tempRet0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $40 = 0;
  } else {
   $35 = HEAP32[$9 + 12 >> 2] | 0;
   if (($35 | 0) == (HEAP32[$9 + 16 >> 2] | 0)) {
    $retval_i_i_i_i70_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
   } else {
    $retval_i_i_i_i70_0 = HEAP32[$35 >> 2] | 0;
   }
   if (($retval_i_i_i_i70_0 | 0) != -1) {
    $40 = $9;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $40 = 0;
  }
 } while (0);
 $cmp_i_i_i97 = ($40 | 0) == 0;
 do {
  if ($cmp_i30_i_i18) {
   label = 10056;
  } else {
   $41 = HEAP32[$28 + 12 >> 2] | 0;
   if (($41 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i64_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 255]($28) | 0;
   } else {
    $retval_i_i7_i_i64_0 = HEAP32[$41 >> 2] | 0;
   }
   if (($retval_i_i7_i_i64_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 10056;
    break;
   } else {
    if ($cmp_i_i_i97 ^ ($28 | 0) == 0) {
     break;
    } else {
     label = 10058;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 10056) {
  if ($cmp_i_i_i97) {
   label = 10058;
  }
 }
 if ((label | 0) == 10058) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $40;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct, $__in_units, $__exp, $__a, $__a_end, $__decimal_point, $__thousands_sep, $__grouping, $__g, $__g_end, $__dc, $__atoms) {
 $__ct = $__ct | 0;
 $__in_units = $__in_units | 0;
 $__exp = $__exp | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__dc = $__dc | 0;
 $__atoms = $__atoms | 0;
 var $0 = 0, $sub_ptr_rhs_cast = 0, $3 = 0, $conv_i_i = 0, $cond_i = 0, $6 = 0, $7 = 0, $conv_i_i155 = 0, $cond_i176 = 0, $12 = 0, $13 = 0, $add_ptr = 0, $__first_addr_i_0 = 0, $__first_addr_i_0_lcssa = 0, $sub_ptr_sub34 = 0, $sub_ptr_div35 = 0, $15 = 0, $18 = 0, $conv_i_i114 = 0, $cond_i135 = 0, $23 = 0, $24 = 0, $25 = 0, $retval_0 = 0;
 $0 = HEAP32[$__a_end >> 2] | 0;
 $sub_ptr_rhs_cast = $__a;
 if (($0 - $sub_ptr_rhs_cast | 0) > 38) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 if (($__ct | 0) == ($__decimal_point | 0)) {
  if ((HEAP8[$__in_units] & 1) == 0) {
   $retval_0 = -1;
   return $retval_0 | 0;
  }
  HEAP8[$__in_units] = 0;
  $3 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $3 + 1;
  HEAP8[$3] = 46;
  $conv_i_i = HEAPU8[$__grouping] | 0;
  if (($conv_i_i & 1 | 0) == 0) {
   $cond_i = $conv_i_i >>> 1;
  } else {
   $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
  }
  if (($cond_i | 0) == 0) {
   $retval_0 = 0;
   return $retval_0 | 0;
  }
  $6 = HEAP32[$__g_end >> 2] | 0;
  if (($6 - $__g | 0) >= 160) {
   $retval_0 = 0;
   return $retval_0 | 0;
  }
  $7 = HEAP32[$__dc >> 2] | 0;
  HEAP32[$__g_end >> 2] = $6 + 4;
  HEAP32[$6 >> 2] = $7;
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 do {
  if (($__ct | 0) == ($__thousands_sep | 0)) {
   $conv_i_i155 = HEAPU8[$__grouping] | 0;
   if (($conv_i_i155 & 1 | 0) == 0) {
    $cond_i176 = $conv_i_i155 >>> 1;
   } else {
    $cond_i176 = HEAP32[$__grouping + 4 >> 2] | 0;
   }
   if (($cond_i176 | 0) == 0) {
    break;
   }
   if ((HEAP8[$__in_units] & 1) == 0) {
    $retval_0 = -1;
    return $retval_0 | 0;
   }
   $12 = HEAP32[$__g_end >> 2] | 0;
   if (($12 - $__g | 0) >= 160) {
    $retval_0 = 0;
    return $retval_0 | 0;
   }
   $13 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $12 + 4;
   HEAP32[$12 >> 2] = $13;
   HEAP32[$__dc >> 2] = 0;
   $retval_0 = 0;
   return $retval_0 | 0;
  }
 } while (0);
 $add_ptr = $__atoms + 128 | 0;
 $__first_addr_i_0 = $__atoms;
 while (1) {
  if (($__first_addr_i_0 | 0) == ($add_ptr | 0)) {
   $__first_addr_i_0_lcssa = $add_ptr;
   break;
  }
  if ((HEAP32[$__first_addr_i_0 >> 2] | 0) == ($__ct | 0)) {
   $__first_addr_i_0_lcssa = $__first_addr_i_0;
   break;
  } else {
   $__first_addr_i_0 = $__first_addr_i_0 + 4 | 0;
  }
 }
 $sub_ptr_sub34 = $__first_addr_i_0_lcssa - $__atoms | 0;
 $sub_ptr_div35 = $sub_ptr_sub34 >> 2;
 if (($sub_ptr_sub34 | 0) > 124) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $15 = HEAP8[18272 + $sub_ptr_div35 | 0] | 0;
 do {
  if (($sub_ptr_div35 | 0) == 22 | ($sub_ptr_div35 | 0) == 23) {
   HEAP8[$__exp] = 80;
  } else if (($sub_ptr_div35 | 0) == 25 | ($sub_ptr_div35 | 0) == 24) {
   do {
    if (($0 | 0) != ($__a | 0)) {
     if ((HEAP8[$0 - 1 | 0] & 95 | 0) == (HEAP8[$__exp] & 127 | 0)) {
      break;
     } else {
      $retval_0 = -1;
     }
     return $retval_0 | 0;
    }
   } while (0);
   HEAP32[$__a_end >> 2] = $0 + 1;
   HEAP8[$0] = $15;
   $retval_0 = 0;
   return $retval_0 | 0;
  } else {
   $18 = HEAP8[$__exp] | 0;
   if (($15 & 95 | 0) != ($18 << 24 >> 24 | 0)) {
    break;
   }
   HEAP8[$__exp] = $18 | -128;
   if ((HEAP8[$__in_units] & 1) == 0) {
    break;
   }
   HEAP8[$__in_units] = 0;
   $conv_i_i114 = HEAPU8[$__grouping] | 0;
   if (($conv_i_i114 & 1 | 0) == 0) {
    $cond_i135 = $conv_i_i114 >>> 1;
   } else {
    $cond_i135 = HEAP32[$__grouping + 4 >> 2] | 0;
   }
   if (($cond_i135 | 0) == 0) {
    break;
   }
   $23 = HEAP32[$__g_end >> 2] | 0;
   if (($23 - $__g | 0) >= 160) {
    break;
   }
   $24 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $23 + 4;
   HEAP32[$23 >> 2] = $24;
  }
 } while (0);
 $25 = HEAP32[$__a_end >> 2] | 0;
 if (($25 - $sub_ptr_rhs_cast | 0) < (((HEAP8[$__exp] | 0) < 0 ? 39 : 29) | 0)) {
  HEAP32[$__a_end >> 2] = $25 + 1;
  HEAP8[$25] = $15;
 }
 if (($sub_ptr_sub34 | 0) > 84) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
 $retval_0 = 0;
 return $retval_0 | 0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p2_i = 0, $__decimal_point = 0, $__thousands_sep = 0, $__grouping = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $__in_units = 0, $__exp = 0, $arraydecay = 0, $0 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $retval_i_i_i_i_0 = 0, $9 = 0, $cmp_i_i_i = 0, $10 = 0, $11 = 0, $retval_i_i7_i_i_0 = 0, $cmp_i30_i_i = 0, $cmp_i30_i_i18 = 0, $16 = 0, $__ninp__i_i = 0, $17 = 0, $__einp__i_i = 0, $retval_i_i_0 = 0, $24 = 0, $27 = 0, $cmp_i30_i_i17 = 0, $28 = 0, $__size__i_i = 0, $conv_i_i61 = 0, $cond_i = 0, $33 = 0, $34 = 0, $35 = 0, $call_i_i_i = 0.0, $retval_0_i = 0.0, $39 = 0, $retval_i_i_i_i71_0 = 0, $44 = 0, $cmp_i_i_i98 = 0, $45 = 0, $retval_i_i7_i_i65_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 408 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p2_i = __stackBase__ | 0;
 $__decimal_point = __stackBase__ + 136 | 0;
 $__thousands_sep = __stackBase__ + 144 | 0;
 $__grouping = __stackBase__ + 152 | 0;
 $__a_end = __stackBase__ + 208 | 0;
 $__g = __stackBase__ + 216 | 0;
 $__g_end = __stackBase__ + 376 | 0;
 $__dc = __stackBase__ + 384 | 0;
 $__in_units = __stackBase__ + 392 | 0;
 $__exp = __stackBase__ + 400 | 0;
 $arraydecay = __stackBase__ + 8 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $arraydecay, $__decimal_point, $__thousands_sep);
 $0 = __stackBase__ + 168 | 0;
 _memset($0 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $0;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 HEAP8[$__in_units] = 1;
 HEAP8[$__exp] = 69;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $1 = HEAP32[$__decimal_point >> 2] | 0;
 $2 = HEAP32[$__thousands_sep >> 2] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L11829 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $9 = 0;
   } else {
    $4 = HEAP32[$3 + 12 >> 2] | 0;
    if (($4 | 0) == (HEAP32[$3 + 16 >> 2] | 0)) {
     $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0;
    } else {
     $retval_i_i_i_i_0 = HEAP32[$4 >> 2] | 0;
    }
    if (($retval_i_i_i_i_0 | 0) != -1) {
     $9 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $9 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($9 | 0) == 0;
  $10 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($10 | 0) == 0) {
    label = 10129;
   } else {
    $11 = HEAP32[$10 + 12 >> 2] | 0;
    if (($11 | 0) == (HEAP32[$10 + 16 >> 2] | 0)) {
     $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 255]($10) | 0;
    } else {
     $retval_i_i7_i_i_0 = HEAP32[$11 >> 2] | 0;
    }
    if (($retval_i_i7_i_i_0 | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 10129;
     break;
    } else {
     $cmp_i30_i_i = ($10 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i30_i_i) {
      $16 = $10;
      $cmp_i30_i_i18 = $cmp_i30_i_i;
      break;
     } else {
      $28 = $10;
      $cmp_i30_i_i17 = $cmp_i30_i_i;
      break L11829;
     }
    }
   }
  } while (0);
  if ((label | 0) == 10129) {
   label = 0;
   if ($cmp_i_i_i) {
    $28 = 0;
    $cmp_i30_i_i17 = 1;
    break;
   } else {
    $16 = 0;
    $cmp_i30_i_i18 = 1;
   }
  }
  $__ninp__i_i = $9 + 12 | 0;
  $17 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $9 + 16 | 0;
  if (($17 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
  } else {
   $retval_i_i_0 = HEAP32[$17 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($retval_i_i_0, $__in_units, $__exp, $0, $__a_end, $1, $2, $__grouping, $arraydecay3, $__g_end, $__dc, $arraydecay) | 0) != 0) {
   $28 = $16;
   $cmp_i30_i_i17 = $cmp_i30_i_i18;
   break;
  }
  $24 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($24 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $27 = HEAP32[(HEAP32[$9 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$27 & 255]($9) | 0;
   $3 = $9;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $24 + 4;
   $3 = $9;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i61 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i61 & 1 | 0) == 0) {
  $cond_i = $conv_i_i61 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   if ((HEAP8[$__in_units] & 1) == 0) {
    break;
   }
   $33 = HEAP32[$__g_end >> 2] | 0;
   if (($33 - $__g | 0) >= 160) {
    break;
   }
   $34 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $33 + 4;
   HEAP32[$33 >> 2] = $34;
  }
 } while (0);
 $35 = HEAP32[$__a_end >> 2] | 0;
 do {
  if (($0 | 0) == ($35 | 0)) {
   HEAP32[$__err >> 2] = 4;
   $retval_0_i = 0.0;
  } else {
   if (!(HEAP8[18416] | 0)) {
    HEAP32[2044] = _newlocale(1, 3128, 0) | 0;
    HEAP8[18416] = 1;
   }
   $call_i_i_i = +_strtod($0, $__p2_i);
   if ((HEAP32[$__p2_i >> 2] | 0) == ($35 | 0)) {
    $retval_0_i = $call_i_i_i;
    break;
   } else {
    HEAP32[$__err >> 2] = 4;
    $retval_0_i = 0.0;
    break;
   }
  }
 } while (0);
 HEAPF32[$__v >> 2] = $retval_0_i;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $44 = 0;
  } else {
   $39 = HEAP32[$9 + 12 >> 2] | 0;
   if (($39 | 0) == (HEAP32[$9 + 16 >> 2] | 0)) {
    $retval_i_i_i_i71_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
   } else {
    $retval_i_i_i_i71_0 = HEAP32[$39 >> 2] | 0;
   }
   if (($retval_i_i_i_i71_0 | 0) != -1) {
    $44 = $9;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $44 = 0;
  }
 } while (0);
 $cmp_i_i_i98 = ($44 | 0) == 0;
 do {
  if ($cmp_i30_i_i17) {
   label = 10170;
  } else {
   $45 = HEAP32[$28 + 12 >> 2] | 0;
   if (($45 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i65_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 255]($28) | 0;
   } else {
    $retval_i_i7_i_i65_0 = HEAP32[$45 >> 2] | 0;
   }
   if (($retval_i_i7_i_i65_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 10170;
    break;
   } else {
    if ($cmp_i_i_i98 ^ ($28 | 0) == 0) {
     break;
    } else {
     label = 10172;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 10170) {
  if ($cmp_i_i_i98) {
   label = 10172;
  }
 }
 if ((label | 0) == 10172) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $44;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg_result, $__iob, $__atoms, $__decimal_point, $__thousands_sep) {
 $agg_result = $agg_result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $__p_i_i_i6 = 0, $__p_i_i_i = 0, $__locale_2_i1_i = 0, $0 = 0, $sub_i_i = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $11 = 0, $13 = 0, $sub_i_i13 = 0, $18 = 0, $19 = 0, $exception_i_i25 = 0, $21 = 0, $22 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__p_i_i_i6 = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 16 | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17808;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4453] | 0) - 1 | 0;
 $5 = $__locale_2_i1_i + 12 | 0;
 $7 = $__locale_2_i1_i + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 do {
  if ((HEAP32[$5 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   $11 = $9;
   $13 = HEAP32[(HEAP32[$9 >> 2] | 0) + 48 >> 2] | 0;
   FUNCTION_TABLE_iiiii[$13 & 15]($11, 18272, 18304, $__atoms) | 0;
   if ((HEAP32[4356] | 0) != -1) {
    HEAP32[$__p_i_i_i6 >> 2] = 17424;
    HEAP32[$__p_i_i_i6 + 4 >> 2] = 12;
    HEAP32[$__p_i_i_i6 + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(17424, $__p_i_i_i6, 102);
   }
   $sub_i_i13 = (HEAP32[4357] | 0) - 1 | 0;
   $18 = HEAP32[$7 >> 2] | 0;
   do {
    if ((HEAP32[$5 >> 2] | 0) - $18 >> 2 >>> 0 > $sub_i_i13 >>> 0) {
     $19 = HEAP32[$18 + ($sub_i_i13 << 2) >> 2] | 0;
     if (($19 | 0) == 0) {
      break;
     }
     $21 = $19;
     $22 = $19;
     HEAP32[$__decimal_point >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 12 >> 2] & 255]($21) | 0;
     HEAP32[$__thousands_sep >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 16 >> 2] & 255]($21) | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$19 >> 2] | 0) + 20 >> 2] & 127]($agg_result, $21);
     if (((tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
      STACKTOP = __stackBase__;
      return;
     }
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
     STACKTOP = __stackBase__;
     return;
    }
   } while (0);
   $exception_i_i25 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i25 >> 2] = 9184;
   ___cxa_throw($exception_i_i25 | 0, 15328, 208);
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p2_i = 0, $__decimal_point = 0, $__thousands_sep = 0, $__grouping = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $__in_units = 0, $__exp = 0, $arraydecay = 0, $0 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $retval_i_i_i_i_0 = 0, $9 = 0, $cmp_i_i_i = 0, $10 = 0, $11 = 0, $retval_i_i7_i_i_0 = 0, $cmp_i30_i_i = 0, $cmp_i30_i_i18 = 0, $16 = 0, $__ninp__i_i = 0, $17 = 0, $__einp__i_i = 0, $retval_i_i_0 = 0, $24 = 0, $27 = 0, $cmp_i30_i_i17 = 0, $28 = 0, $__size__i_i = 0, $conv_i_i61 = 0, $cond_i = 0, $33 = 0, $34 = 0, $35 = 0, $call_i_i_i = 0.0, $retval_0_i = 0.0, $39 = 0, $retval_i_i_i_i71_0 = 0, $44 = 0, $cmp_i_i_i98 = 0, $45 = 0, $retval_i_i7_i_i65_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 408 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p2_i = __stackBase__ | 0;
 $__decimal_point = __stackBase__ + 136 | 0;
 $__thousands_sep = __stackBase__ + 144 | 0;
 $__grouping = __stackBase__ + 152 | 0;
 $__a_end = __stackBase__ + 208 | 0;
 $__g = __stackBase__ + 216 | 0;
 $__g_end = __stackBase__ + 376 | 0;
 $__dc = __stackBase__ + 384 | 0;
 $__in_units = __stackBase__ + 392 | 0;
 $__exp = __stackBase__ + 400 | 0;
 $arraydecay = __stackBase__ + 8 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $arraydecay, $__decimal_point, $__thousands_sep);
 $0 = __stackBase__ + 168 | 0;
 _memset($0 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $0;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 HEAP8[$__in_units] = 1;
 HEAP8[$__exp] = 69;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $1 = HEAP32[$__decimal_point >> 2] | 0;
 $2 = HEAP32[$__thousands_sep >> 2] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L11932 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $9 = 0;
   } else {
    $4 = HEAP32[$3 + 12 >> 2] | 0;
    if (($4 | 0) == (HEAP32[$3 + 16 >> 2] | 0)) {
     $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0;
    } else {
     $retval_i_i_i_i_0 = HEAP32[$4 >> 2] | 0;
    }
    if (($retval_i_i_i_i_0 | 0) != -1) {
     $9 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $9 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($9 | 0) == 0;
  $10 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($10 | 0) == 0) {
    label = 10215;
   } else {
    $11 = HEAP32[$10 + 12 >> 2] | 0;
    if (($11 | 0) == (HEAP32[$10 + 16 >> 2] | 0)) {
     $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 255]($10) | 0;
    } else {
     $retval_i_i7_i_i_0 = HEAP32[$11 >> 2] | 0;
    }
    if (($retval_i_i7_i_i_0 | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 10215;
     break;
    } else {
     $cmp_i30_i_i = ($10 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i30_i_i) {
      $16 = $10;
      $cmp_i30_i_i18 = $cmp_i30_i_i;
      break;
     } else {
      $28 = $10;
      $cmp_i30_i_i17 = $cmp_i30_i_i;
      break L11932;
     }
    }
   }
  } while (0);
  if ((label | 0) == 10215) {
   label = 0;
   if ($cmp_i_i_i) {
    $28 = 0;
    $cmp_i30_i_i17 = 1;
    break;
   } else {
    $16 = 0;
    $cmp_i30_i_i18 = 1;
   }
  }
  $__ninp__i_i = $9 + 12 | 0;
  $17 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $9 + 16 | 0;
  if (($17 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
  } else {
   $retval_i_i_0 = HEAP32[$17 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($retval_i_i_0, $__in_units, $__exp, $0, $__a_end, $1, $2, $__grouping, $arraydecay3, $__g_end, $__dc, $arraydecay) | 0) != 0) {
   $28 = $16;
   $cmp_i30_i_i17 = $cmp_i30_i_i18;
   break;
  }
  $24 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($24 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $27 = HEAP32[(HEAP32[$9 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$27 & 255]($9) | 0;
   $3 = $9;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $24 + 4;
   $3 = $9;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i61 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i61 & 1 | 0) == 0) {
  $cond_i = $conv_i_i61 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   if ((HEAP8[$__in_units] & 1) == 0) {
    break;
   }
   $33 = HEAP32[$__g_end >> 2] | 0;
   if (($33 - $__g | 0) >= 160) {
    break;
   }
   $34 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $33 + 4;
   HEAP32[$33 >> 2] = $34;
  }
 } while (0);
 $35 = HEAP32[$__a_end >> 2] | 0;
 do {
  if (($0 | 0) == ($35 | 0)) {
   HEAP32[$__err >> 2] = 4;
   $retval_0_i = 0.0;
  } else {
   if (!(HEAP8[18416] | 0)) {
    HEAP32[2044] = _newlocale(1, 3128, 0) | 0;
    HEAP8[18416] = 1;
   }
   $call_i_i_i = +_strtod($0, $__p2_i);
   if ((HEAP32[$__p2_i >> 2] | 0) == ($35 | 0)) {
    $retval_0_i = $call_i_i_i;
    break;
   }
   HEAP32[$__err >> 2] = 4;
   $retval_0_i = 0.0;
  }
 } while (0);
 HEAPF64[$__v >> 3] = $retval_0_i;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $44 = 0;
  } else {
   $39 = HEAP32[$9 + 12 >> 2] | 0;
   if (($39 | 0) == (HEAP32[$9 + 16 >> 2] | 0)) {
    $retval_i_i_i_i71_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
   } else {
    $retval_i_i_i_i71_0 = HEAP32[$39 >> 2] | 0;
   }
   if (($retval_i_i_i_i71_0 | 0) != -1) {
    $44 = $9;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $44 = 0;
  }
 } while (0);
 $cmp_i_i_i98 = ($44 | 0) == 0;
 do {
  if ($cmp_i30_i_i17) {
   label = 10255;
  } else {
   $45 = HEAP32[$28 + 12 >> 2] | 0;
   if (($45 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i65_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 255]($28) | 0;
   } else {
    $retval_i_i7_i_i65_0 = HEAP32[$45 >> 2] | 0;
   }
   if (($retval_i_i7_i_i65_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 10255;
    break;
   } else {
    if ($cmp_i_i_i98 ^ ($28 | 0) == 0) {
     break;
    } else {
     label = 10257;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 10255) {
  if ($cmp_i_i_i98) {
   label = 10257;
  }
 }
 if ((label | 0) == 10257) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $44;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p2_i = 0, $__decimal_point = 0, $__thousands_sep = 0, $__grouping = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $__in_units = 0, $__exp = 0, $arraydecay = 0, $0 = 0, $arraydecay3 = 0, $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $retval_i_i_i_i_0 = 0, $9 = 0, $cmp_i_i_i = 0, $10 = 0, $11 = 0, $retval_i_i7_i_i_0 = 0, $cmp_i30_i_i = 0, $cmp_i30_i_i18 = 0, $16 = 0, $__ninp__i_i = 0, $17 = 0, $__einp__i_i = 0, $retval_i_i_0 = 0, $24 = 0, $27 = 0, $cmp_i30_i_i17 = 0, $28 = 0, $__size__i_i = 0, $conv_i_i61 = 0, $cond_i = 0, $33 = 0, $34 = 0, $35 = 0, $call_i_i_i = 0.0, $retval_0_i = 0.0, $39 = 0, $retval_i_i_i_i71_0 = 0, $44 = 0, $cmp_i_i_i98 = 0, $45 = 0, $retval_i_i7_i_i65_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 408 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p2_i = __stackBase__ | 0;
 $__decimal_point = __stackBase__ + 136 | 0;
 $__thousands_sep = __stackBase__ + 144 | 0;
 $__grouping = __stackBase__ + 152 | 0;
 $__a_end = __stackBase__ + 208 | 0;
 $__g = __stackBase__ + 216 | 0;
 $__g_end = __stackBase__ + 376 | 0;
 $__dc = __stackBase__ + 384 | 0;
 $__in_units = __stackBase__ + 392 | 0;
 $__exp = __stackBase__ + 400 | 0;
 $arraydecay = __stackBase__ + 8 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $arraydecay, $__decimal_point, $__thousands_sep);
 $0 = __stackBase__ + 168 | 0;
 _memset($0 | 0, 0, 40);
 HEAP32[$__a_end >> 2] = $0;
 $arraydecay3 = $__g | 0;
 HEAP32[$__g_end >> 2] = $arraydecay3;
 HEAP32[$__dc >> 2] = 0;
 HEAP8[$__in_units] = 1;
 HEAP8[$__exp] = 69;
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $1 = HEAP32[$__decimal_point >> 2] | 0;
 $2 = HEAP32[$__thousands_sep >> 2] | 0;
 $3 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 L12008 : while (1) {
  do {
   if (($3 | 0) == 0) {
    $9 = 0;
   } else {
    $4 = HEAP32[$3 + 12 >> 2] | 0;
    if (($4 | 0) == (HEAP32[$3 + 16 >> 2] | 0)) {
     $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0;
    } else {
     $retval_i_i_i_i_0 = HEAP32[$4 >> 2] | 0;
    }
    if (($retval_i_i_i_i_0 | 0) != -1) {
     $9 = $3;
     break;
    }
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $9 = 0;
   }
  } while (0);
  $cmp_i_i_i = ($9 | 0) == 0;
  $10 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($10 | 0) == 0) {
    label = 10276;
   } else {
    $11 = HEAP32[$10 + 12 >> 2] | 0;
    if (($11 | 0) == (HEAP32[$10 + 16 >> 2] | 0)) {
     $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 255]($10) | 0;
    } else {
     $retval_i_i7_i_i_0 = HEAP32[$11 >> 2] | 0;
    }
    if (($retval_i_i7_i_i_0 | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 10276;
     break;
    } else {
     $cmp_i30_i_i = ($10 | 0) == 0;
     if ($cmp_i_i_i ^ $cmp_i30_i_i) {
      $16 = $10;
      $cmp_i30_i_i18 = $cmp_i30_i_i;
      break;
     } else {
      $28 = $10;
      $cmp_i30_i_i17 = $cmp_i30_i_i;
      break L12008;
     }
    }
   }
  } while (0);
  if ((label | 0) == 10276) {
   label = 0;
   if ($cmp_i_i_i) {
    $28 = 0;
    $cmp_i30_i_i17 = 1;
    break;
   } else {
    $16 = 0;
    $cmp_i30_i_i18 = 1;
   }
  }
  $__ninp__i_i = $9 + 12 | 0;
  $17 = HEAP32[$__ninp__i_i >> 2] | 0;
  $__einp__i_i = $9 + 16 | 0;
  if (($17 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $retval_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
  } else {
   $retval_i_i_0 = HEAP32[$17 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($retval_i_i_0, $__in_units, $__exp, $0, $__a_end, $1, $2, $__grouping, $arraydecay3, $__g_end, $__dc, $arraydecay) | 0) != 0) {
   $28 = $16;
   $cmp_i30_i_i17 = $cmp_i30_i_i18;
   break;
  }
  $24 = HEAP32[$__ninp__i_i >> 2] | 0;
  if (($24 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
   $27 = HEAP32[(HEAP32[$9 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$27 & 255]($9) | 0;
   $3 = $9;
   continue;
  } else {
   HEAP32[$__ninp__i_i >> 2] = $24 + 4;
   $3 = $9;
   continue;
  }
 }
 $__size__i_i = $__grouping;
 $conv_i_i61 = HEAPU8[$__size__i_i] | 0;
 if (($conv_i_i61 & 1 | 0) == 0) {
  $cond_i = $conv_i_i61 >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i | 0) != 0) {
   if ((HEAP8[$__in_units] & 1) == 0) {
    break;
   }
   $33 = HEAP32[$__g_end >> 2] | 0;
   if (($33 - $__g | 0) >= 160) {
    break;
   }
   $34 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $33 + 4;
   HEAP32[$33 >> 2] = $34;
  }
 } while (0);
 $35 = HEAP32[$__a_end >> 2] | 0;
 do {
  if (($0 | 0) == ($35 | 0)) {
   HEAP32[$__err >> 2] = 4;
   $retval_0_i = 0.0;
  } else {
   if (!(HEAP8[18416] | 0)) {
    HEAP32[2044] = _newlocale(1, 3128, 0) | 0;
    HEAP8[18416] = 1;
   }
   $call_i_i_i = +_strtod($0, $__p2_i);
   if ((HEAP32[$__p2_i >> 2] | 0) == ($35 | 0)) {
    $retval_0_i = $call_i_i_i;
    break;
   }
   HEAP32[$__err >> 2] = 4;
   $retval_0_i = 0.0;
  }
 } while (0);
 HEAPF64[$__v >> 3] = $retval_0_i;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $arraydecay3, HEAP32[$__g_end >> 2] | 0, $__err);
 do {
  if ($cmp_i_i_i) {
   $44 = 0;
  } else {
   $39 = HEAP32[$9 + 12 >> 2] | 0;
   if (($39 | 0) == (HEAP32[$9 + 16 >> 2] | 0)) {
    $retval_i_i_i_i71_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 255]($9) | 0;
   } else {
    $retval_i_i_i_i71_0 = HEAP32[$39 >> 2] | 0;
   }
   if (($retval_i_i_i_i71_0 | 0) != -1) {
    $44 = $9;
    break;
   }
   HEAP32[$__sbuf__i_i_i >> 2] = 0;
   $44 = 0;
  }
 } while (0);
 $cmp_i_i_i98 = ($44 | 0) == 0;
 do {
  if ($cmp_i30_i_i17) {
   label = 10316;
  } else {
   $45 = HEAP32[$28 + 12 >> 2] | 0;
   if (($45 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i65_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 255]($28) | 0;
   } else {
    $retval_i_i7_i_i65_0 = HEAP32[$45 >> 2] | 0;
   }
   if (($retval_i_i7_i_i65_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 10316;
    break;
   } else {
    if ($cmp_i_i_i98 ^ ($28 | 0) == 0) {
     break;
    } else {
     label = 10318;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 10316) {
  if ($cmp_i_i_i98) {
   label = 10318;
  }
 }
 if ((label | 0) == 10318) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $44;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp = 0, $agg_tmp = 0, $0 = 0, $add_ptr = 0, $__fmtflags__i = 0, $1 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_113_i_ph = 0, $scevgep = 0, $and9_i = 0, $arraydecay2 = 0, $call_i = 0, $2 = 0, $call5 = 0, $add_ptr7 = 0, $and_i5 = 0, $4 = 0, $5 = 0, $retval_0_i = 0, $arraydecay11 = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $7 = 0, $9 = 0, $__shared_owners__i_i10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = __stackBase__ | 0;
 $__nar = __stackBase__ + 8 | 0;
 $__o = __stackBase__ + 24 | 0;
 $__op = __stackBase__ + 48 | 0;
 $__oe = __stackBase__ + 56 | 0;
 $ref_tmp = __stackBase__ + 64 | 0;
 $agg_tmp = __stackBase__ + 72 | 0;
 $0 = $__fmt | 0;
 HEAP8[$0] = HEAP8[8952] | 0;
 HEAP8[$0 + 1 | 0] = HEAP8[8953 | 0] | 0;
 HEAP8[$0 + 2 | 0] = HEAP8[8954 | 0] | 0;
 HEAP8[$0 + 3 | 0] = HEAP8[8955 | 0] | 0;
 HEAP8[$0 + 4 | 0] = HEAP8[8956 | 0] | 0;
 HEAP8[$0 + 5 | 0] = HEAP8[8957 | 0] | 0;
 $add_ptr = $__fmt + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $1 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($1 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr] = 43;
  $__fmtp_addr_0_i = $__fmt + 2 | 0;
 }
 if (($1 & 512 | 0) == 0) {
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i] = 35;
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i + 1 | 0;
 }
 HEAP8[$__fmtp_addr_113_i_ph] = 108;
 $scevgep = $__fmtp_addr_113_i_ph + 1 | 0;
 $and9_i = $1 & 74;
 do {
  if (($and9_i | 0) == 64) {
   HEAP8[$scevgep] = 111;
  } else if (($and9_i | 0) == 8) {
   if (($1 & 16384 | 0) == 0) {
    HEAP8[$scevgep] = 120;
    break;
   } else {
    HEAP8[$scevgep] = 88;
    break;
   }
  } else {
   HEAP8[$scevgep] = 100;
  }
 } while (0);
 $arraydecay2 = $__nar | 0;
 if (HEAP8[18416] | 0) {
  $2 = HEAP32[2044] | 0;
 } else {
  $call_i = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i;
  HEAP8[18416] = 1;
  $2 = $call_i;
 }
 $call5 = __ZNSt3__111__sprintf_lEPcPvPKcz($arraydecay2, $2, $0, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $__v, tempInt) | 0) | 0;
 $add_ptr7 = $__nar + $call5 | 0;
 $and_i5 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i5 | 0) == 32) {
   $retval_0_i = $add_ptr7;
  } else if (($and_i5 | 0) == 16) {
   $4 = HEAP8[$arraydecay2] | 0;
   if (($4 << 24 >> 24 | 0) == 45 | ($4 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (!(($call5 | 0) > 1 & $4 << 24 >> 24 == 48)) {
    label = 10345;
    break;
   }
   $5 = HEAP8[$__nar + 1 | 0] | 0;
   if (!(($5 << 24 >> 24 | 0) == 120 | ($5 << 24 >> 24 | 0) == 88)) {
    label = 10345;
    break;
   }
   $retval_0_i = $__nar + 2 | 0;
  } else {
   label = 10345;
  }
 } while (0);
 if ((label | 0) == 10345) {
  $retval_0_i = $arraydecay2;
 }
 $arraydecay11 = $__o | 0;
 $__locale__i_i = $ref_tmp | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $7 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$7 >> 2] | 0, HEAP32[$7 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($arraydecay2, $retval_0_i, $add_ptr7, $arraydecay11, $__op, $__oe, $ref_tmp);
 $9 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i_i10 = $9 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i10 >> 2] | 0, HEAP32[$__shared_owners__i_i10 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $14 = $__s | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  $16 = $agg_tmp | 0;
  HEAP32[$16 >> 2] = $15;
  $17 = HEAP32[$__op >> 2] | 0;
  $18 = HEAP32[$__oe >> 2] | 0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay11, $17, $18, $__iob, $__fl);
  STACKTOP = __stackBase__;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$9 >> 2] | 0) + 8 >> 2] & 511]($9 | 0);
 $14 = $__s | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 $16 = $agg_tmp | 0;
 HEAP32[$16 >> 2] = $15;
 $17 = HEAP32[$__op >> 2] | 0;
 $18 = HEAP32[$__oe >> 2] | 0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay11, $17, $18, $__iob, $__fl);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p_i_i_i = 0, $__atoms = 0, $__grouping = 0, $__size__i_i_i23 = 0, $__a = 0, $__a_end = 0, $__g = 0, $__g_end = 0, $__dc = 0, $__locale_2_i1_i = 0, $0 = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $11 = 0, $arraydecay = 0, $13 = 0, $18 = 0, $arraydecay7 = 0, $__sbuf__i_i_i62 = 0, $__sbuf__i11_i_i83 = 0, $19 = 0, $20 = 0, $retval_i_i_i_i53_0 = 0, $25 = 0, $cmp_i_i_i80 = 0, $26 = 0, $27 = 0, $retval_i_i7_i_i47_0 = 0, $cmp_i30_i_i102 = 0, $cmp_i30_i_i10237 = 0, $32 = 0, $__ninp__i_i = 0, $33 = 0, $__einp__i_i = 0, $retval_i_i_0 = 0, $47 = 0, $50 = 0, $cmp_i30_i_i10236 = 0, $51 = 0, $call_i22 = 0, $52 = 0, $53 = 0, $retval_i_i_i_i_0 = 0, $58 = 0, $cmp_i_i_i37 = 0, $59 = 0, $retval_i_i7_i_i_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 136 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i = __stackBase__ | 0;
 $__atoms = __stackBase__ + 16 | 0;
 $__grouping = __stackBase__ + 120 | 0;
 $__size__i_i_i23 = $__grouping;
 $__a = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 $__a_end = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__g = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $__g_end = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__dc = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 _memset($__size__i_i_i23 | 0, 0, 12);
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17808;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4453] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   $11 = $9;
   $arraydecay = $__atoms | 0;
   $13 = HEAP32[(HEAP32[$9 >> 2] | 0) + 48 >> 2] | 0;
   FUNCTION_TABLE_iiiii[$13 & 15]($11, 18272, 18298, $arraydecay) | 0;
   if (((tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   $18 = $__a | 0;
   _memset($18 | 0, 0, 40);
   HEAP32[$__a_end >> 2] = $18;
   $arraydecay7 = $__g | 0;
   HEAP32[$__g_end >> 2] = $arraydecay7;
   HEAP32[$__dc >> 2] = 0;
   $__sbuf__i_i_i62 = $__b | 0;
   $__sbuf__i11_i_i83 = $__e | 0;
   $19 = HEAP32[$__sbuf__i_i_i62 >> 2] | 0;
   L12130 : while (1) {
    do {
     if (($19 | 0) == 0) {
      $25 = 0;
     } else {
      $20 = HEAP32[$19 + 12 >> 2] | 0;
      if (($20 | 0) == (HEAP32[$19 + 16 >> 2] | 0)) {
       $retval_i_i_i_i53_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 36 >> 2] & 255]($19) | 0;
      } else {
       $retval_i_i_i_i53_0 = HEAP32[$20 >> 2] | 0;
      }
      if (($retval_i_i_i_i53_0 | 0) != -1) {
       $25 = $19;
       break;
      }
      HEAP32[$__sbuf__i_i_i62 >> 2] = 0;
      $25 = 0;
     }
    } while (0);
    $cmp_i_i_i80 = ($25 | 0) == 0;
    $26 = HEAP32[$__sbuf__i11_i_i83 >> 2] | 0;
    do {
     if (($26 | 0) == 0) {
      label = 10377;
     } else {
      $27 = HEAP32[$26 + 12 >> 2] | 0;
      if (($27 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
       $retval_i_i7_i_i47_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 255]($26) | 0;
      } else {
       $retval_i_i7_i_i47_0 = HEAP32[$27 >> 2] | 0;
      }
      if (($retval_i_i7_i_i47_0 | 0) == -1) {
       HEAP32[$__sbuf__i11_i_i83 >> 2] = 0;
       label = 10377;
       break;
      } else {
       $cmp_i30_i_i102 = ($26 | 0) == 0;
       if ($cmp_i_i_i80 ^ $cmp_i30_i_i102) {
        $32 = $26;
        $cmp_i30_i_i10237 = $cmp_i30_i_i102;
        break;
       } else {
        $51 = $26;
        $cmp_i30_i_i10236 = $cmp_i30_i_i102;
        break L12130;
       }
      }
     }
    } while (0);
    if ((label | 0) == 10377) {
     label = 0;
     if ($cmp_i_i_i80) {
      $51 = 0;
      $cmp_i30_i_i10236 = 1;
      break;
     } else {
      $32 = 0;
      $cmp_i30_i_i10237 = 1;
     }
    }
    $__ninp__i_i = $25 + 12 | 0;
    $33 = HEAP32[$__ninp__i_i >> 2] | 0;
    $__einp__i_i = $25 + 16 | 0;
    if (($33 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
     $retval_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] & 255]($25) | 0;
    } else {
     $retval_i_i_0 = HEAP32[$33 >> 2] | 0;
    }
    if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_i_i_0, 16, $18, $__a_end, $__dc, 0, $__grouping, $arraydecay7, $__g_end, $arraydecay) | 0) != 0) {
     $51 = $32;
     $cmp_i30_i_i10236 = $cmp_i30_i_i10237;
     break;
    }
    $47 = HEAP32[$__ninp__i_i >> 2] | 0;
    if (($47 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
     $50 = HEAP32[(HEAP32[$25 >> 2] | 0) + 40 >> 2] | 0;
     FUNCTION_TABLE_ii[$50 & 255]($25) | 0;
     $19 = $25;
     continue;
    } else {
     HEAP32[$__ninp__i_i >> 2] = $47 + 4;
     $19 = $25;
     continue;
    }
   }
   HEAP8[$__a + 39 | 0] = 0;
   if (HEAP8[18416] | 0) {
    $52 = HEAP32[2044] | 0;
   } else {
    $call_i22 = _newlocale(1, 3128, 0) | 0;
    HEAP32[2044] = $call_i22;
    HEAP8[18416] = 1;
    $52 = $call_i22;
   }
   if ((__ZNSt3__110__sscanf_lEPKcPvS1_z($18, $52, 2856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $__v, tempInt) | 0) | 0) != 1) {
    HEAP32[$__err >> 2] = 4;
   }
   do {
    if ($cmp_i_i_i80) {
     $58 = 0;
    } else {
     $53 = HEAP32[$25 + 12 >> 2] | 0;
     if (($53 | 0) == (HEAP32[$25 + 16 >> 2] | 0)) {
      $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] & 255]($25) | 0;
     } else {
      $retval_i_i_i_i_0 = HEAP32[$53 >> 2] | 0;
     }
     if (($retval_i_i_i_i_0 | 0) != -1) {
      $58 = $25;
      break;
     }
     HEAP32[$__sbuf__i_i_i62 >> 2] = 0;
     $58 = 0;
    }
   } while (0);
   $cmp_i_i_i37 = ($58 | 0) == 0;
   do {
    if ($cmp_i30_i_i10236) {
     label = 10410;
    } else {
     $59 = HEAP32[$51 + 12 >> 2] | 0;
     if (($59 | 0) == (HEAP32[$51 + 16 >> 2] | 0)) {
      $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$51 >> 2] | 0) + 36 >> 2] & 255]($51) | 0;
     } else {
      $retval_i_i7_i_i_0 = HEAP32[$59 >> 2] | 0;
     }
     if (($retval_i_i7_i_i_0 | 0) == -1) {
      HEAP32[$__sbuf__i11_i_i83 >> 2] = 0;
      label = 10410;
      break;
     } else {
      if ($cmp_i_i_i37 ^ ($51 | 0) == 0) {
       break;
      } else {
       label = 10412;
       break;
      }
     }
    }
   } while (0);
   if ((label | 0) == 10410) {
    if ($cmp_i_i_i37) {
     label = 10412;
    }
   }
   if ((label | 0) == 10412) {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   }
   HEAP32[$agg_result >> 2] = $58;
   if ((HEAP8[$__size__i_i_i23] & 1) == 0) {
    STACKTOP = __stackBase__;
    return;
   }
   __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $__p_i_i_i = 0, $agg_tmp = 0, $__nm = 0, $2 = 0, $__locale_2_i1_i = 0, $6 = 0, $sub_i_i = 0, $14 = 0, $15 = 0, $exception_i_i = 0, $17 = 0, $vtable_i = 0, $__s_i_i_i = 0, $__size__i_i_i = 0, $25 = 0, $__data__i21_i_i = 0, $arraydecay_i_i_i = 0, $__data__i21_i_i66_pre_phi = 0, $arraydecay_i_i_i75_pre_phi = 0, $__i_sroa_0_0_ph = 0, $__sbuf__i = 0, $__size__i23_i_i = 0, $27 = 0, $__i_sroa_0_0 = 0, $tobool_i_i_i59 = 0, $cond_i_i77 = 0, $conv_i_i22_i = 0, $30 = 0, $31 = 0, $__nout__i_i = 0, $32 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i = __stackBase__ | 0;
 $agg_tmp = __stackBase__ + 16 | 0;
 $__nm = __stackBase__ + 24 | 0;
 if ((HEAP32[$__iob + 4 >> 2] & 1 | 0) == 0) {
  $2 = HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$agg_tmp >> 2] = HEAP32[$__s >> 2];
  FUNCTION_TABLE_viiiiii[$2 & 31]($agg_result, $this, $agg_tmp, $__iob, $__fl, $__v & 1);
  STACKTOP = __stackBase__;
  return;
 }
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $6 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$6 >> 2] | 0, HEAP32[$6 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4358] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17432;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17432, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4359] | 0) - 1 | 0;
 $14 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $14 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $15 = HEAP32[$14 + ($sub_i_i << 2) >> 2] | 0;
   if (($15 | 0) == 0) {
    break;
   }
   $17 = $15;
   if (((tempValue = HEAP32[$6 >> 2] | 0, HEAP32[$6 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   $vtable_i = HEAP32[$15 >> 2] | 0;
   if ($__v) {
    FUNCTION_TABLE_vii[HEAP32[$vtable_i + 24 >> 2] & 127]($__nm, $17);
   } else {
    FUNCTION_TABLE_vii[HEAP32[$vtable_i + 28 >> 2] & 127]($__nm, $17);
   }
   $__s_i_i_i = $__nm;
   $__size__i_i_i = $__nm;
   $25 = HEAP8[$__size__i_i_i] | 0;
   if (($25 & 1) == 0) {
    $arraydecay_i_i_i = $__s_i_i_i + 1 | 0;
    $__i_sroa_0_0_ph = $arraydecay_i_i_i;
    $arraydecay_i_i_i75_pre_phi = $arraydecay_i_i_i;
    $__data__i21_i_i66_pre_phi = $__nm + 8 | 0;
   } else {
    $__data__i21_i_i = $__nm + 8 | 0;
    $__i_sroa_0_0_ph = HEAP32[$__data__i21_i_i >> 2] | 0;
    $arraydecay_i_i_i75_pre_phi = $__s_i_i_i + 1 | 0;
    $__data__i21_i_i66_pre_phi = $__data__i21_i_i;
   }
   $__sbuf__i = $__s | 0;
   $__size__i23_i_i = $__nm + 4 | 0;
   $__i_sroa_0_0 = $__i_sroa_0_0_ph;
   $27 = $25;
   while (1) {
    $tobool_i_i_i59 = ($27 & 1) == 0;
    if ($tobool_i_i_i59) {
     $cond_i_i77 = $arraydecay_i_i_i75_pre_phi;
    } else {
     $cond_i_i77 = HEAP32[$__data__i21_i_i66_pre_phi >> 2] | 0;
    }
    $conv_i_i22_i = $27 & 255;
    if (($__i_sroa_0_0 | 0) == ($cond_i_i77 + (($conv_i_i22_i & 1 | 0) == 0 ? $conv_i_i22_i >>> 1 : HEAP32[$__size__i23_i_i >> 2] | 0) | 0)) {
     break;
    }
    $30 = HEAP8[$__i_sroa_0_0] | 0;
    $31 = HEAP32[$__sbuf__i >> 2] | 0;
    do {
     if (($31 | 0) != 0) {
      $__nout__i_i = $31 + 24 | 0;
      $32 = HEAP32[$__nout__i_i >> 2] | 0;
      if (($32 | 0) != (HEAP32[$31 + 28 >> 2] | 0)) {
       HEAP32[$__nout__i_i >> 2] = $32 + 1;
       HEAP8[$32] = $30;
       break;
      }
      if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$31 >> 2] | 0) + 52 >> 2] & 63]($31, $30 & 255) | 0) != -1) {
       break;
      }
      HEAP32[$__sbuf__i >> 2] = 0;
     }
    } while (0);
    $__i_sroa_0_0 = $__i_sroa_0_0 + 1 | 0;
    $27 = HEAP8[$__size__i_i_i] | 0;
   }
   HEAP32[$agg_result >> 2] = HEAP32[$__sbuf__i >> 2];
   if ($tobool_i_i_i59) {
    STACKTOP = __stackBase__;
    return;
   }
   __ZdlPv(HEAP32[$__data__i21_i_i66_pre_phi >> 2] | 0);
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNSt3__111__sprintf_lEPcPvPKcz($__s, $__l, $__format, varrp) {
 $__s = $__s | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 varrp = varrp | 0;
 var $__va = 0, $arraydecay1 = 0, $call = 0, $call3 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = __stackBase__ | 0;
 $arraydecay1 = $__va;
 HEAP32[$arraydecay1 >> 2] = varrp;
 HEAP32[$arraydecay1 + 4 >> 2] = 0;
 $call = _uselocale($__l | 0) | 0;
 $call3 = _vsprintf($__s | 0, $__format | 0, $__va | 0) | 0;
 if (($call | 0) == 0) {
  STACKTOP = __stackBase__;
  return $call3 | 0;
 }
 _uselocale($call | 0) | 0;
 STACKTOP = __stackBase__;
 return $call3 | 0;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($agg_result, $this, $__s, $__iob, $__fl, $__v$0, $__v$1) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v$0 = $__v$0 | 0;
 $__v$1 = $__v$1 | 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp = 0, $agg_tmp = 0, $arraydecay = 0, $add_ptr = 0, $__fmtflags__i = 0, $0 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_113_i_ph = 0, $scevgep = 0, $and9_i = 0, $arraydecay2 = 0, $call_i = 0, $1 = 0, $call5 = 0, $add_ptr7 = 0, $and_i5 = 0, $3 = 0, $4 = 0, $retval_0_i = 0, $arraydecay11 = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $6 = 0, $8 = 0, $__shared_owners__i_i10 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = __stackBase__ | 0;
 $__nar = __stackBase__ + 8 | 0;
 $__o = __stackBase__ + 32 | 0;
 $__op = __stackBase__ + 80 | 0;
 $__oe = __stackBase__ + 88 | 0;
 $ref_tmp = __stackBase__ + 96 | 0;
 $agg_tmp = __stackBase__ + 104 | 0;
 HEAP32[$__fmt >> 2] = 37;
 HEAP32[$__fmt + 4 >> 2] = 0;
 $arraydecay = $__fmt;
 $add_ptr = $arraydecay + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $0 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($0 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr] = 43;
  $__fmtp_addr_0_i = $arraydecay + 2 | 0;
 }
 if (($0 & 512 | 0) == 0) {
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i] = 35;
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i + 1 | 0;
 }
 HEAP8[$__fmtp_addr_113_i_ph] = 108;
 HEAP8[$__fmtp_addr_113_i_ph + 1 | 0] = 108;
 $scevgep = $__fmtp_addr_113_i_ph + 2 | 0;
 $and9_i = $0 & 74;
 do {
  if (($and9_i | 0) == 64) {
   HEAP8[$scevgep] = 111;
  } else if (($and9_i | 0) == 8) {
   if (($0 & 16384 | 0) == 0) {
    HEAP8[$scevgep] = 120;
    break;
   } else {
    HEAP8[$scevgep] = 88;
    break;
   }
  } else {
   HEAP8[$scevgep] = 100;
  }
 } while (0);
 $arraydecay2 = $__nar | 0;
 if (HEAP8[18416] | 0) {
  $1 = HEAP32[2044] | 0;
 } else {
  $call_i = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i;
  HEAP8[18416] = 1;
  $1 = $call_i;
 }
 $call5 = __ZNSt3__111__sprintf_lEPcPvPKcz($arraydecay2, $1, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $__v$0, HEAP32[tempInt + 8 >> 2] = $__v$1, tempInt) | 0) | 0;
 $add_ptr7 = $__nar + $call5 | 0;
 $and_i5 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i5 | 0) == 16) {
   $3 = HEAP8[$arraydecay2] | 0;
   if (($3 << 24 >> 24 | 0) == 45 | ($3 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (!(($call5 | 0) > 1 & $3 << 24 >> 24 == 48)) {
    label = 10484;
    break;
   }
   $4 = HEAP8[$__nar + 1 | 0] | 0;
   if (!(($4 << 24 >> 24 | 0) == 120 | ($4 << 24 >> 24 | 0) == 88)) {
    label = 10484;
    break;
   }
   $retval_0_i = $__nar + 2 | 0;
  } else if (($and_i5 | 0) == 32) {
   $retval_0_i = $add_ptr7;
  } else {
   label = 10484;
  }
 } while (0);
 if ((label | 0) == 10484) {
  $retval_0_i = $arraydecay2;
 }
 $arraydecay11 = $__o | 0;
 $__locale__i_i = $ref_tmp | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $6 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$6 >> 2] | 0, HEAP32[$6 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($arraydecay2, $retval_0_i, $add_ptr7, $arraydecay11, $__op, $__oe, $ref_tmp);
 $8 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i_i10 = $8 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i10 >> 2] | 0, HEAP32[$__shared_owners__i_i10 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $13 = $__s | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  $15 = $agg_tmp | 0;
  HEAP32[$15 >> 2] = $14;
  $16 = HEAP32[$__op >> 2] | 0;
  $17 = HEAP32[$__oe >> 2] | 0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay11, $16, $17, $__iob, $__fl);
  STACKTOP = __stackBase__;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$8 >> 2] | 0) + 8 >> 2] & 511]($8 | 0);
 $13 = $__s | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 $15 = $agg_tmp | 0;
 HEAP32[$15 >> 2] = $14;
 $16 = HEAP32[$__op >> 2] | 0;
 $17 = HEAP32[$__oe >> 2] | 0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay11, $16, $17, $__iob, $__fl);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp = 0, $agg_tmp = 0, $0 = 0, $add_ptr = 0, $__fmtflags__i = 0, $1 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_113_i_ph = 0, $scevgep = 0, $and9_i = 0, $arraydecay2 = 0, $call_i = 0, $2 = 0, $call5 = 0, $add_ptr7 = 0, $and_i5 = 0, $4 = 0, $5 = 0, $retval_0_i = 0, $arraydecay11 = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $7 = 0, $9 = 0, $__shared_owners__i_i10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = __stackBase__ | 0;
 $__nar = __stackBase__ + 8 | 0;
 $__o = __stackBase__ + 24 | 0;
 $__op = __stackBase__ + 48 | 0;
 $__oe = __stackBase__ + 56 | 0;
 $ref_tmp = __stackBase__ + 64 | 0;
 $agg_tmp = __stackBase__ + 72 | 0;
 $0 = $__fmt | 0;
 HEAP8[$0] = HEAP8[8952] | 0;
 HEAP8[$0 + 1 | 0] = HEAP8[8953 | 0] | 0;
 HEAP8[$0 + 2 | 0] = HEAP8[8954 | 0] | 0;
 HEAP8[$0 + 3 | 0] = HEAP8[8955 | 0] | 0;
 HEAP8[$0 + 4 | 0] = HEAP8[8956 | 0] | 0;
 HEAP8[$0 + 5 | 0] = HEAP8[8957 | 0] | 0;
 $add_ptr = $__fmt + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $1 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($1 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr] = 43;
  $__fmtp_addr_0_i = $__fmt + 2 | 0;
 }
 if (($1 & 512 | 0) == 0) {
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i] = 35;
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i + 1 | 0;
 }
 HEAP8[$__fmtp_addr_113_i_ph] = 108;
 $scevgep = $__fmtp_addr_113_i_ph + 1 | 0;
 $and9_i = $1 & 74;
 do {
  if (($and9_i | 0) == 64) {
   HEAP8[$scevgep] = 111;
  } else if (($and9_i | 0) == 8) {
   if (($1 & 16384 | 0) == 0) {
    HEAP8[$scevgep] = 120;
    break;
   } else {
    HEAP8[$scevgep] = 88;
    break;
   }
  } else {
   HEAP8[$scevgep] = 117;
  }
 } while (0);
 $arraydecay2 = $__nar | 0;
 if (HEAP8[18416] | 0) {
  $2 = HEAP32[2044] | 0;
 } else {
  $call_i = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i;
  HEAP8[18416] = 1;
  $2 = $call_i;
 }
 $call5 = __ZNSt3__111__sprintf_lEPcPvPKcz($arraydecay2, $2, $0, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $__v, tempInt) | 0) | 0;
 $add_ptr7 = $__nar + $call5 | 0;
 $and_i5 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i5 | 0) == 32) {
   $retval_0_i = $add_ptr7;
  } else if (($and_i5 | 0) == 16) {
   $4 = HEAP8[$arraydecay2] | 0;
   if (($4 << 24 >> 24 | 0) == 45 | ($4 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (!(($call5 | 0) > 1 & $4 << 24 >> 24 == 48)) {
    label = 10513;
    break;
   }
   $5 = HEAP8[$__nar + 1 | 0] | 0;
   if (!(($5 << 24 >> 24 | 0) == 120 | ($5 << 24 >> 24 | 0) == 88)) {
    label = 10513;
    break;
   }
   $retval_0_i = $__nar + 2 | 0;
  } else {
   label = 10513;
  }
 } while (0);
 if ((label | 0) == 10513) {
  $retval_0_i = $arraydecay2;
 }
 $arraydecay11 = $__o | 0;
 $__locale__i_i = $ref_tmp | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $7 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$7 >> 2] | 0, HEAP32[$7 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($arraydecay2, $retval_0_i, $add_ptr7, $arraydecay11, $__op, $__oe, $ref_tmp);
 $9 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i_i10 = $9 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i10 >> 2] | 0, HEAP32[$__shared_owners__i_i10 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $14 = $__s | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  $16 = $agg_tmp | 0;
  HEAP32[$16 >> 2] = $15;
  $17 = HEAP32[$__op >> 2] | 0;
  $18 = HEAP32[$__oe >> 2] | 0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay11, $17, $18, $__iob, $__fl);
  STACKTOP = __stackBase__;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$9 >> 2] | 0) + 8 >> 2] & 511]($9 | 0);
 $14 = $__s | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 $16 = $agg_tmp | 0;
 HEAP32[$16 >> 2] = $15;
 $17 = HEAP32[$__op >> 2] | 0;
 $18 = HEAP32[$__oe >> 2] | 0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay11, $17, $18, $__iob, $__fl);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($agg_result, $this, $__s, $__iob, $__fl, $__v$0, $__v$1) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v$0 = $__v$0 | 0;
 $__v$1 = $__v$1 | 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp = 0, $agg_tmp = 0, $arraydecay = 0, $add_ptr = 0, $__fmtflags__i = 0, $0 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_113_i_ph = 0, $scevgep = 0, $and9_i = 0, $arraydecay2 = 0, $call_i = 0, $1 = 0, $call5 = 0, $add_ptr7 = 0, $and_i5 = 0, $3 = 0, $4 = 0, $retval_0_i = 0, $arraydecay11 = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $6 = 0, $8 = 0, $__shared_owners__i_i10 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = __stackBase__ | 0;
 $__nar = __stackBase__ + 8 | 0;
 $__o = __stackBase__ + 32 | 0;
 $__op = __stackBase__ + 80 | 0;
 $__oe = __stackBase__ + 88 | 0;
 $ref_tmp = __stackBase__ + 96 | 0;
 $agg_tmp = __stackBase__ + 104 | 0;
 HEAP32[$__fmt >> 2] = 37;
 HEAP32[$__fmt + 4 >> 2] = 0;
 $arraydecay = $__fmt;
 $add_ptr = $arraydecay + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $0 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($0 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr] = 43;
  $__fmtp_addr_0_i = $arraydecay + 2 | 0;
 }
 if (($0 & 512 | 0) == 0) {
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i] = 35;
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i + 1 | 0;
 }
 HEAP8[$__fmtp_addr_113_i_ph] = 108;
 HEAP8[$__fmtp_addr_113_i_ph + 1 | 0] = 108;
 $scevgep = $__fmtp_addr_113_i_ph + 2 | 0;
 $and9_i = $0 & 74;
 do {
  if (($and9_i | 0) == 64) {
   HEAP8[$scevgep] = 111;
  } else if (($and9_i | 0) == 8) {
   if (($0 & 16384 | 0) == 0) {
    HEAP8[$scevgep] = 120;
    break;
   } else {
    HEAP8[$scevgep] = 88;
    break;
   }
  } else {
   HEAP8[$scevgep] = 117;
  }
 } while (0);
 $arraydecay2 = $__nar | 0;
 if (HEAP8[18416] | 0) {
  $1 = HEAP32[2044] | 0;
 } else {
  $call_i = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i;
  HEAP8[18416] = 1;
  $1 = $call_i;
 }
 $call5 = __ZNSt3__111__sprintf_lEPcPvPKcz($arraydecay2, $1, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $__v$0, HEAP32[tempInt + 8 >> 2] = $__v$1, tempInt) | 0) | 0;
 $add_ptr7 = $__nar + $call5 | 0;
 $and_i5 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i5 | 0) == 16) {
   $3 = HEAP8[$arraydecay2] | 0;
   if (($3 << 24 >> 24 | 0) == 45 | ($3 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (!(($call5 | 0) > 1 & $3 << 24 >> 24 == 48)) {
    label = 10542;
    break;
   }
   $4 = HEAP8[$__nar + 1 | 0] | 0;
   if (!(($4 << 24 >> 24 | 0) == 120 | ($4 << 24 >> 24 | 0) == 88)) {
    label = 10542;
    break;
   }
   $retval_0_i = $__nar + 2 | 0;
  } else if (($and_i5 | 0) == 32) {
   $retval_0_i = $add_ptr7;
  } else {
   label = 10542;
  }
 } while (0);
 if ((label | 0) == 10542) {
  $retval_0_i = $arraydecay2;
 }
 $arraydecay11 = $__o | 0;
 $__locale__i_i = $ref_tmp | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $6 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$6 >> 2] | 0, HEAP32[$6 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($arraydecay2, $retval_0_i, $add_ptr7, $arraydecay11, $__op, $__oe, $ref_tmp);
 $8 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i_i10 = $8 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i10 >> 2] | 0, HEAP32[$__shared_owners__i_i10 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $13 = $__s | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  $15 = $agg_tmp | 0;
  HEAP32[$15 >> 2] = $14;
  $16 = HEAP32[$__op >> 2] | 0;
  $17 = HEAP32[$__oe >> 2] | 0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay11, $16, $17, $__iob, $__fl);
  STACKTOP = __stackBase__;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$8 >> 2] | 0) + 8 >> 2] & 511]($8 | 0);
 $13 = $__s | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 $15 = $agg_tmp | 0;
 HEAP32[$15 >> 2] = $14;
 $16 = HEAP32[$__op >> 2] | 0;
 $17 = HEAP32[$__oe >> 2] | 0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay11, $16, $17, $__iob, $__fl);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $__p_i_i_i64 = 0, $__p_i_i_i = 0, $__grouping = 0, $__locale__i = 0, $0 = 0, $sub_i_i = 0, $5 = 0, $6 = 0, $exception_i_i = 0, $7 = 0, $8 = 0, $9 = 0, $sub_i_i71 = 0, $14 = 0, $15 = 0, $exception_i_i83 = 0, $16 = 0, $17 = 0, $__s_i_i_i = 0, $__size__i_i_i = 0, $conv_i_i_i = 0, $cond_i_i = 0, $23 = 0, $26 = 0, $call_i9596 = 0, $29 = 0, $__nf_0 = 0, $arrayidx17 = 0, $31 = 0, $32 = 0, $call_i103104 = 0, $34 = 0, $call_i111112 = 0, $37 = 0, $__nf_1 = 0, $incdec_ptr_i_i130106 = 0, $incdec_ptr_i_i130109 = 0, $__first_addr_i_i120_0108 = 0, $38 = 0, $call_i223224 = 0, $arraydecay_i_i_i214 = 0, $42 = 0, $__size__i23_i = 0, $__data__i21_i_i = 0, $__p_0105 = 0, $__dg_0104 = 0, $__dc_0103 = 0, $tobool_i_i_i198 = 0, $48 = 0, $conv_i_i = 0, $__dc_1 = 0, $__dg_1 = 0, $call_i8283 = 0, $53 = 0, $incdec_ptr58 = 0, $add_ptr62 = 0, $54 = 0, $incdec_ptr_i_i96 = 0, $incdec_ptr_i_i99 = 0, $__first_addr_i_i_098 = 0, $55 = 0, $storemerge = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $__p_i_i_i64 = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 16 | 0;
 $__grouping = __stackBase__ + 32 | 0;
 $__locale__i = $__loc | 0;
 $0 = HEAP32[$__locale__i >> 2] | 0;
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17816;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4455] | 0) - 1 | 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 if ((HEAP32[$0 + 12 >> 2] | 0) - $5 >> 2 >>> 0 <= $sub_i_i >>> 0) {
  $exception_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i;
  HEAP32[$7 >> 2] = 9184;
  ___cxa_throw($exception_i_i | 0, 15328, 208);
 }
 $6 = HEAP32[$5 + ($sub_i_i << 2) >> 2] | 0;
 if (($6 | 0) == 0) {
  $exception_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i;
  HEAP32[$7 >> 2] = 9184;
  ___cxa_throw($exception_i_i | 0, 15328, 208);
 }
 $8 = $6;
 $9 = HEAP32[$__locale__i >> 2] | 0;
 if ((HEAP32[4358] | 0) != -1) {
  HEAP32[$__p_i_i_i64 >> 2] = 17432;
  HEAP32[$__p_i_i_i64 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i64 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17432, $__p_i_i_i64, 102);
 }
 $sub_i_i71 = (HEAP32[4359] | 0) - 1 | 0;
 $14 = HEAP32[$9 + 8 >> 2] | 0;
 if ((HEAP32[$9 + 12 >> 2] | 0) - $14 >> 2 >>> 0 <= $sub_i_i71 >>> 0) {
  $exception_i_i83 = ___cxa_allocate_exception(4) | 0;
  $16 = $exception_i_i83;
  HEAP32[$16 >> 2] = 9184;
  ___cxa_throw($exception_i_i83 | 0, 15328, 208);
 }
 $15 = HEAP32[$14 + ($sub_i_i71 << 2) >> 2] | 0;
 if (($15 | 0) == 0) {
  $exception_i_i83 = ___cxa_allocate_exception(4) | 0;
  $16 = $exception_i_i83;
  HEAP32[$16 >> 2] = 9184;
  ___cxa_throw($exception_i_i83 | 0, 15328, 208);
 }
 $17 = $15;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$15 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $17);
 $__s_i_i_i = $__grouping;
 $__size__i_i_i = $__grouping;
 $conv_i_i_i = HEAPU8[$__size__i_i_i] | 0;
 if (($conv_i_i_i & 1 | 0) == 0) {
  $cond_i_i = $conv_i_i_i >>> 1;
 } else {
  $cond_i_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i_i | 0) == 0) {
   $23 = HEAP32[(HEAP32[$6 >> 2] | 0) + 32 >> 2] | 0;
   FUNCTION_TABLE_iiiii[$23 & 15]($8, $__nb, $__ne, $__ob) | 0;
   HEAP32[$__oe >> 2] = $__ob + ($__ne - $__nb);
  } else {
   HEAP32[$__oe >> 2] = $__ob;
   $26 = HEAP8[$__nb] | 0;
   if (($26 << 24 >> 24 | 0) == 45 | ($26 << 24 >> 24 | 0) == 43) {
    $call_i9596 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 63]($8, $26) | 0;
    $29 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $29 + 1;
    HEAP8[$29] = $call_i9596;
    $__nf_0 = $__nb + 1 | 0;
   } else {
    $__nf_0 = $__nb;
   }
   do {
    if (($__ne - $__nf_0 | 0) > 1) {
     if ((HEAP8[$__nf_0] | 0) != 48) {
      $__nf_1 = $__nf_0;
      break;
     }
     $arrayidx17 = $__nf_0 + 1 | 0;
     $31 = HEAP8[$arrayidx17] | 0;
     if (!(($31 << 24 >> 24 | 0) == 120 | ($31 << 24 >> 24 | 0) == 88)) {
      $__nf_1 = $__nf_0;
      break;
     }
     $32 = $6;
     $call_i103104 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 28 >> 2] & 63]($8, 48) | 0;
     $34 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $34 + 1;
     HEAP8[$34] = $call_i103104;
     $call_i111112 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 28 >> 2] & 63]($8, HEAP8[$arrayidx17] | 0) | 0;
     $37 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $37 + 1;
     HEAP8[$37] = $call_i111112;
     $__nf_1 = $__nf_0 + 2 | 0;
    } else {
     $__nf_1 = $__nf_0;
    }
   } while (0);
   do {
    if (($__nf_1 | 0) != ($__ne | 0)) {
     $incdec_ptr_i_i130106 = $__ne - 1 | 0;
     if ($__nf_1 >>> 0 < $incdec_ptr_i_i130106 >>> 0) {
      $__first_addr_i_i120_0108 = $__nf_1;
      $incdec_ptr_i_i130109 = $incdec_ptr_i_i130106;
     } else {
      break;
     }
     do {
      $38 = HEAP8[$__first_addr_i_i120_0108] | 0;
      HEAP8[$__first_addr_i_i120_0108] = HEAP8[$incdec_ptr_i_i130109] | 0;
      HEAP8[$incdec_ptr_i_i130109] = $38;
      $__first_addr_i_i120_0108 = $__first_addr_i_i120_0108 + 1 | 0;
      $incdec_ptr_i_i130109 = $incdec_ptr_i_i130109 - 1 | 0;
     } while ($__first_addr_i_i120_0108 >>> 0 < $incdec_ptr_i_i130109 >>> 0);
    }
   } while (0);
   $call_i223224 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 16 >> 2] & 255]($17) | 0;
   if ($__nf_1 >>> 0 < $__ne >>> 0) {
    $arraydecay_i_i_i214 = $__s_i_i_i + 1 | 0;
    $42 = $6;
    $__size__i23_i = $__grouping + 4 | 0;
    $__data__i21_i_i = $__grouping + 8 | 0;
    $__dc_0103 = 0;
    $__dg_0104 = 0;
    $__p_0105 = $__nf_1;
    while (1) {
     $tobool_i_i_i198 = (HEAP8[$__size__i_i_i] & 1) == 0;
     do {
      if ((HEAP8[($tobool_i_i_i198 ? $arraydecay_i_i_i214 : HEAP32[$__data__i21_i_i >> 2] | 0) + $__dg_0104 | 0] | 0) == 0) {
       $__dg_1 = $__dg_0104;
       $__dc_1 = $__dc_0103;
      } else {
       if (($__dc_0103 | 0) != (HEAP8[($tobool_i_i_i198 ? $arraydecay_i_i_i214 : HEAP32[$__data__i21_i_i >> 2] | 0) + $__dg_0104 | 0] | 0)) {
        $__dg_1 = $__dg_0104;
        $__dc_1 = $__dc_0103;
        break;
       }
       $48 = HEAP32[$__oe >> 2] | 0;
       HEAP32[$__oe >> 2] = $48 + 1;
       HEAP8[$48] = $call_i223224;
       $conv_i_i = HEAPU8[$__size__i_i_i] | 0;
       $__dg_1 = ($__dg_0104 >>> 0 < ((($conv_i_i & 1 | 0) == 0 ? $conv_i_i >>> 1 : HEAP32[$__size__i23_i >> 2] | 0) - 1 | 0) >>> 0 & 1) + $__dg_0104 | 0;
       $__dc_1 = 0;
      }
     } while (0);
     $call_i8283 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$42 >> 2] | 0) + 28 >> 2] & 63]($8, HEAP8[$__p_0105] | 0) | 0;
     $53 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $53 + 1;
     HEAP8[$53] = $call_i8283;
     $incdec_ptr58 = $__p_0105 + 1 | 0;
     if ($incdec_ptr58 >>> 0 < $__ne >>> 0) {
      $__dc_0103 = $__dc_1 + 1 | 0;
      $__dg_0104 = $__dg_1;
      $__p_0105 = $incdec_ptr58;
     } else {
      break;
     }
    }
   }
   $add_ptr62 = $__ob + ($__nf_1 - $__nb) | 0;
   $54 = HEAP32[$__oe >> 2] | 0;
   if (($add_ptr62 | 0) == ($54 | 0)) {
    break;
   }
   $incdec_ptr_i_i96 = $54 - 1 | 0;
   if ($add_ptr62 >>> 0 < $incdec_ptr_i_i96 >>> 0) {
    $__first_addr_i_i_098 = $add_ptr62;
    $incdec_ptr_i_i99 = $incdec_ptr_i_i96;
   } else {
    break;
   }
   do {
    $55 = HEAP8[$__first_addr_i_i_098] | 0;
    HEAP8[$__first_addr_i_i_098] = HEAP8[$incdec_ptr_i_i99] | 0;
    HEAP8[$incdec_ptr_i_i99] = $55;
    $__first_addr_i_i_098 = $__first_addr_i_i_098 + 1 | 0;
    $incdec_ptr_i_i99 = $incdec_ptr_i_i99 - 1 | 0;
   } while ($__first_addr_i_i_098 >>> 0 < $incdec_ptr_i_i99 >>> 0);
  }
 } while (0);
 if (($__np | 0) == ($__ne | 0)) {
  $storemerge = HEAP32[$__oe >> 2] | 0;
 } else {
  $storemerge = $__ob + ($__np - $__nb) | 0;
 }
 HEAP32[$__op >> 2] = $storemerge;
 if ((HEAP8[$__size__i_i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp50 = 0, $ref_tmp54 = 0, $agg_tmp = 0, $arraydecay = 0, $add_ptr = 0, $__fmtflags__i = 0, $0 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_1_i = 0, $and6_i = 0, $and7_i = 0, $incdec_ptr11_i = 0, $specify_precision_0_off0_ph_i58 = 0, $arraydecay3 = 0, $call_i = 0, $5 = 0, $__nc_0 = 0, $_b_i31 = 0, $call_i3436 = 0, $7 = 0, $call_i4143 = 0, $12 = 0, $__nc_1 = 0, $14 = 0, $exception_i = 0, $16 = 0, $__nbh_sroa_0_1 = 0, $__nc_2 = 0, $add_ptr34 = 0, $and_i45 = 0, $18 = 0, $19 = 0, $retval_0_i = 0, $call43 = 0, $exception_i48 = 0, $24 = 0, $__obh_sroa_0_1 = 0, $__ob_0 = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $26 = 0, $28 = 0, $__shared_owners__i_i = 0, $33 = 0, $39 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 152 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = __stackBase__ | 0;
 $__nar = __stackBase__ + 8 | 0;
 $__nb = __stackBase__ + 40 | 0;
 $__o = __stackBase__ + 48 | 0;
 $__op = __stackBase__ + 112 | 0;
 $__oe = __stackBase__ + 120 | 0;
 $ref_tmp50 = __stackBase__ + 128 | 0;
 $ref_tmp54 = __stackBase__ + 136 | 0;
 $agg_tmp = __stackBase__ + 144 | 0;
 HEAP32[$__fmt >> 2] = 37;
 HEAP32[$__fmt + 4 >> 2] = 0;
 $arraydecay = $__fmt;
 $add_ptr = $arraydecay + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $0 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($0 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr] = 43;
  $__fmtp_addr_0_i = $arraydecay + 2 | 0;
 }
 if (($0 & 1024 | 0) == 0) {
  $__fmtp_addr_1_i = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i] = 35;
  $__fmtp_addr_1_i = $__fmtp_addr_0_i + 1 | 0;
 }
 $and6_i = $0 & 260;
 $and7_i = $0 >>> 14;
 do {
  if (($and6_i | 0) == 260) {
   if (($and7_i & 1 | 0) == 0) {
    HEAP8[$__fmtp_addr_1_i] = 97;
    $specify_precision_0_off0_ph_i58 = 0;
    break;
   } else {
    HEAP8[$__fmtp_addr_1_i] = 65;
    $specify_precision_0_off0_ph_i58 = 0;
    break;
   }
  } else {
   HEAP8[$__fmtp_addr_1_i] = 46;
   $incdec_ptr11_i = $__fmtp_addr_1_i + 2 | 0;
   HEAP8[$__fmtp_addr_1_i + 1 | 0] = 42;
   if (($and6_i | 0) == 256) {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$incdec_ptr11_i] = 101;
     $specify_precision_0_off0_ph_i58 = 1;
     break;
    } else {
     HEAP8[$incdec_ptr11_i] = 69;
     $specify_precision_0_off0_ph_i58 = 1;
     break;
    }
   } else if (($and6_i | 0) == 4) {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$incdec_ptr11_i] = 102;
     $specify_precision_0_off0_ph_i58 = 1;
     break;
    } else {
     HEAP8[$incdec_ptr11_i] = 70;
     $specify_precision_0_off0_ph_i58 = 1;
     break;
    }
   } else {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$incdec_ptr11_i] = 103;
     $specify_precision_0_off0_ph_i58 = 1;
     break;
    } else {
     HEAP8[$incdec_ptr11_i] = 71;
     $specify_precision_0_off0_ph_i58 = 1;
     break;
    }
   }
  }
 } while (0);
 $arraydecay3 = $__nar | 0;
 HEAP32[$__nb >> 2] = $arraydecay3;
 if (HEAP8[18416] | 0) {
  $5 = HEAP32[2044] | 0;
 } else {
  $call_i = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i;
  HEAP8[18416] = 1;
  $5 = $call_i;
 }
 if ($specify_precision_0_off0_ph_i58) {
  $__nc_0 = __ZNSt3__112__snprintf_lEPcjPvPKcz($arraydecay3, 30, $5, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempInt + 8 >> 3] = $__v, tempInt) | 0) | 0;
 } else {
  $__nc_0 = __ZNSt3__112__snprintf_lEPcjPvPKcz($arraydecay3, 30, $5, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = $__v, tempInt) | 0) | 0;
 }
 do {
  if (($__nc_0 | 0) > 29) {
   $_b_i31 = HEAP8[18416] | 0;
   if ($specify_precision_0_off0_ph_i58) {
    if ($_b_i31) {
     $7 = HEAP32[2044] | 0;
    } else {
     $call_i3436 = _newlocale(1, 3128, 0) | 0;
     HEAP32[2044] = $call_i3436;
     HEAP8[18416] = 1;
     $7 = $call_i3436;
    }
    $__nc_1 = __ZNSt3__112__asprintf_lEPPcPvPKcz($__nb, $7, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempInt + 8 >> 3] = $__v, tempInt) | 0) | 0;
   } else {
    if ($_b_i31) {
     $12 = HEAP32[2044] | 0;
    } else {
     $call_i4143 = _newlocale(1, 3128, 0) | 0;
     HEAP32[2044] = $call_i4143;
     HEAP8[18416] = 1;
     $12 = $call_i4143;
    }
    $__nc_1 = __ZNSt3__112__asprintf_lEPPcPvPKcz($__nb, $12, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempInt + 8 >> 3] = $__v, tempInt) | 0) | 0;
   }
   $14 = HEAP32[$__nb >> 2] | 0;
   if (($14 | 0) != 0) {
    $__nc_2 = $__nc_1;
    $__nbh_sroa_0_1 = $14;
    $16 = $14;
    break;
   }
   $exception_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i >> 2] = 9152;
   ___cxa_throw($exception_i | 0, 15312, 28);
  } else {
   $__nc_2 = $__nc_0;
   $__nbh_sroa_0_1 = 0;
   $16 = HEAP32[$__nb >> 2] | 0;
  }
 } while (0);
 $add_ptr34 = $16 + $__nc_2 | 0;
 $and_i45 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i45 | 0) == 32) {
   $retval_0_i = $add_ptr34;
  } else if (($and_i45 | 0) == 16) {
   $18 = HEAP8[$16] | 0;
   if (($18 << 24 >> 24 | 0) == 45 | ($18 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $16 + 1 | 0;
    break;
   }
   if (!(($__nc_2 | 0) > 1 & $18 << 24 >> 24 == 48)) {
    label = 10655;
    break;
   }
   $19 = HEAP8[$16 + 1 | 0] | 0;
   if (!(($19 << 24 >> 24 | 0) == 120 | ($19 << 24 >> 24 | 0) == 88)) {
    label = 10655;
    break;
   }
   $retval_0_i = $16 + 2 | 0;
  } else {
   label = 10655;
  }
 } while (0);
 if ((label | 0) == 10655) {
  $retval_0_i = $16;
 }
 do {
  if (($16 | 0) == ($arraydecay3 | 0)) {
   $__ob_0 = $__o | 0;
   $__obh_sroa_0_1 = 0;
   $24 = $arraydecay3;
  } else {
   $call43 = _malloc($__nc_2 << 1) | 0;
   if (($call43 | 0) != 0) {
    $__ob_0 = $call43;
    $__obh_sroa_0_1 = $call43;
    $24 = HEAP32[$__nb >> 2] | 0;
    break;
   }
   $exception_i48 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i48 >> 2] = 9152;
   ___cxa_throw($exception_i48 | 0, 15312, 28);
  }
 } while (0);
 $__locale__i_i = $ref_tmp50 | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $26 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$26 >> 2] | 0, HEAP32[$26 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($24, $retval_0_i, $add_ptr34, $__ob_0, $__op, $__oe, $ref_tmp50);
 $28 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i_i = $28 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) == 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$28 >> 2] | 0) + 8 >> 2] & 511]($28 | 0);
 }
 $33 = $__s | 0;
 HEAP32[$agg_tmp >> 2] = HEAP32[$33 >> 2];
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($ref_tmp54, $agg_tmp, $__ob_0, HEAP32[$__op >> 2] | 0, HEAP32[$__oe >> 2] | 0, $__iob, $__fl);
 $39 = HEAP32[$ref_tmp54 >> 2] | 0;
 HEAP32[$33 >> 2] = $39;
 HEAP32[$agg_result >> 2] = $39;
 if (($__obh_sroa_0_1 | 0) != 0) {
  _free($__obh_sroa_0_1);
 }
 if (($__nbh_sroa_0_1 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 _free($__nbh_sroa_0_1);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__112__snprintf_lEPcjPvPKcz($__s, $__n, $__l, $__format, varrp) {
 $__s = $__s | 0;
 $__n = $__n | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 varrp = varrp | 0;
 var $__va = 0, $arraydecay1 = 0, $call = 0, $call3 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = __stackBase__ | 0;
 $arraydecay1 = $__va;
 HEAP32[$arraydecay1 >> 2] = varrp;
 HEAP32[$arraydecay1 + 4 >> 2] = 0;
 $call = _uselocale($__l | 0) | 0;
 $call3 = _vsnprintf($__s | 0, $__n | 0, $__format | 0, $__va | 0) | 0;
 if (($call | 0) == 0) {
  STACKTOP = __stackBase__;
  return $call3 | 0;
 }
 _uselocale($call | 0) | 0;
 STACKTOP = __stackBase__;
 return $call3 | 0;
}
function __ZNSt3__112__asprintf_lEPPcPvPKcz($__s, $__l, $__format, varrp) {
 $__s = $__s | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 varrp = varrp | 0;
 var $__va = 0, $arraydecay1 = 0, $call = 0, $call3 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = __stackBase__ | 0;
 $arraydecay1 = $__va;
 HEAP32[$arraydecay1 >> 2] = varrp;
 HEAP32[$arraydecay1 + 4 >> 2] = 0;
 $call = _uselocale($__l | 0) | 0;
 $call3 = _vasprintf($__s | 0, $__format | 0, $__va | 0) | 0;
 if (($call | 0) == 0) {
  STACKTOP = __stackBase__;
  return $call3 | 0;
 }
 _uselocale($call | 0) | 0;
 STACKTOP = __stackBase__;
 return $call3 | 0;
}
function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $__p_i_i_i90 = 0, $__p_i_i_i = 0, $__grouping = 0, $__locale__i = 0, $0 = 0, $sub_i_i = 0, $5 = 0, $6 = 0, $exception_i_i = 0, $7 = 0, $8 = 0, $9 = 0, $sub_i_i97 = 0, $14 = 0, $15 = 0, $exception_i_i109 = 0, $16 = 0, $17 = 0, $20 = 0, $call_i132133 = 0, $23 = 0, $__nf_0 = 0, $sub_ptr_lhs_cast = 0, $arrayidx10 = 0, $27 = 0, $28 = 0, $call_i139140 = 0, $30 = 0, $incdec_ptr22 = 0, $call_i147148 = 0, $33 = 0, $__ns_0 = 0, $34 = 0, $call_i116 = 0, $35 = 0, $__ns_1 = 0, $36 = 0, $call_i122 = 0, $37 = 0, $__nf_1 = 0, $__ns_2 = 0, $__s_i_i_i = 0, $__size__i_i_i = 0, $conv_i_i_i = 0, $cond_i_i = 0, $40 = 0, $42 = 0, $44 = 0, $incdec_ptr_i_i147 = 0, $incdec_ptr_i_i150 = 0, $__first_addr_i_i_0149 = 0, $45 = 0, $call_i180181 = 0, $arraydecay_i_i_i = 0, $__size__i23_i = 0, $__data__i21_i_i248 = 0, $49 = 0, $__p_0146 = 0, $__dg_0145 = 0, $__dc_0144 = 0, $tobool_i_i_i201 = 0, $55 = 0, $conv_i_i = 0, $__dc_1 = 0, $__dg_1 = 0, $call_i290291 = 0, $60 = 0, $incdec_ptr85 = 0, $add_ptr90 = 0, $61 = 0, $incdec_ptr_i_i278136 = 0, $incdec_ptr_i_i278139 = 0, $__first_addr_i_i268_0138 = 0, $62 = 0, $__nf_2135 = 0, $64 = 0, $call_i216217 = 0, $67 = 0, $call_i173174 = 0, $69 = 0, $incdec_ptr109 = 0, $__nf_3 = 0, $add_ptr116 = 0, $storemerge = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $__p_i_i_i90 = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 16 | 0;
 $__grouping = __stackBase__ + 32 | 0;
 $__locale__i = $__loc | 0;
 $0 = HEAP32[$__locale__i >> 2] | 0;
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17816;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4455] | 0) - 1 | 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 if ((HEAP32[$0 + 12 >> 2] | 0) - $5 >> 2 >>> 0 <= $sub_i_i >>> 0) {
  $exception_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i;
  HEAP32[$7 >> 2] = 9184;
  ___cxa_throw($exception_i_i | 0, 15328, 208);
 }
 $6 = HEAP32[$5 + ($sub_i_i << 2) >> 2] | 0;
 if (($6 | 0) == 0) {
  $exception_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i;
  HEAP32[$7 >> 2] = 9184;
  ___cxa_throw($exception_i_i | 0, 15328, 208);
 }
 $8 = $6;
 $9 = HEAP32[$__locale__i >> 2] | 0;
 if ((HEAP32[4358] | 0) != -1) {
  HEAP32[$__p_i_i_i90 >> 2] = 17432;
  HEAP32[$__p_i_i_i90 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i90 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17432, $__p_i_i_i90, 102);
 }
 $sub_i_i97 = (HEAP32[4359] | 0) - 1 | 0;
 $14 = HEAP32[$9 + 8 >> 2] | 0;
 if ((HEAP32[$9 + 12 >> 2] | 0) - $14 >> 2 >>> 0 <= $sub_i_i97 >>> 0) {
  $exception_i_i109 = ___cxa_allocate_exception(4) | 0;
  $16 = $exception_i_i109;
  HEAP32[$16 >> 2] = 9184;
  ___cxa_throw($exception_i_i109 | 0, 15328, 208);
 }
 $15 = HEAP32[$14 + ($sub_i_i97 << 2) >> 2] | 0;
 if (($15 | 0) == 0) {
  $exception_i_i109 = ___cxa_allocate_exception(4) | 0;
  $16 = $exception_i_i109;
  HEAP32[$16 >> 2] = 9184;
  ___cxa_throw($exception_i_i109 | 0, 15328, 208);
 }
 $17 = $15;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$15 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $17);
 HEAP32[$__oe >> 2] = $__ob;
 $20 = HEAP8[$__nb] | 0;
 if (($20 << 24 >> 24 | 0) == 45 | ($20 << 24 >> 24 | 0) == 43) {
  $call_i132133 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 63]($8, $20) | 0;
  $23 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$__oe >> 2] = $23 + 1;
  HEAP8[$23] = $call_i132133;
  $__nf_0 = $__nb + 1 | 0;
 } else {
  $__nf_0 = $__nb;
 }
 $sub_ptr_lhs_cast = $__ne;
 L12532 : do {
  if (($sub_ptr_lhs_cast - $__nf_0 | 0) > 1) {
   if ((HEAP8[$__nf_0] | 0) != 48) {
    $__ns_1 = $__nf_0;
    label = 10732;
    break;
   }
   $arrayidx10 = $__nf_0 + 1 | 0;
   $27 = HEAP8[$arrayidx10] | 0;
   if (!(($27 << 24 >> 24 | 0) == 120 | ($27 << 24 >> 24 | 0) == 88)) {
    $__ns_1 = $__nf_0;
    label = 10732;
    break;
   }
   $28 = $6;
   $call_i139140 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$28 >> 2] | 0) + 28 >> 2] & 63]($8, 48) | 0;
   $30 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $30 + 1;
   HEAP8[$30] = $call_i139140;
   $incdec_ptr22 = $__nf_0 + 2 | 0;
   $call_i147148 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$28 >> 2] | 0) + 28 >> 2] & 63]($8, HEAP8[$arrayidx10] | 0) | 0;
   $33 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $33 + 1;
   HEAP8[$33] = $call_i147148;
   $__ns_0 = $incdec_ptr22;
   while (1) {
    if ($__ns_0 >>> 0 >= $__ne >>> 0) {
     $__ns_2 = $__ns_0;
     $__nf_1 = $incdec_ptr22;
     break L12532;
    }
    $34 = HEAP8[$__ns_0] | 0;
    if (HEAP8[18416] | 0) {
     $35 = HEAP32[2044] | 0;
    } else {
     $call_i116 = _newlocale(1, 3128, 0) | 0;
     HEAP32[2044] = $call_i116;
     HEAP8[18416] = 1;
     $35 = $call_i116;
    }
    if ((_isxdigit($34 << 24 >> 24 | 0, $35 | 0) | 0) == 0) {
     $__ns_2 = $__ns_0;
     $__nf_1 = $incdec_ptr22;
     break;
    } else {
     $__ns_0 = $__ns_0 + 1 | 0;
    }
   }
  } else {
   $__ns_1 = $__nf_0;
   label = 10732;
  }
 } while (0);
 L12547 : do {
  if ((label | 0) == 10732) {
   while (1) {
    label = 0;
    if ($__ns_1 >>> 0 >= $__ne >>> 0) {
     $__ns_2 = $__ns_1;
     $__nf_1 = $__nf_0;
     break L12547;
    }
    $36 = HEAP8[$__ns_1] | 0;
    if (HEAP8[18416] | 0) {
     $37 = HEAP32[2044] | 0;
    } else {
     $call_i122 = _newlocale(1, 3128, 0) | 0;
     HEAP32[2044] = $call_i122;
     HEAP8[18416] = 1;
     $37 = $call_i122;
    }
    if ((_isdigit($36 << 24 >> 24 | 0, $37 | 0) | 0) == 0) {
     $__ns_2 = $__ns_1;
     $__nf_1 = $__nf_0;
     break;
    } else {
     $__ns_1 = $__ns_1 + 1 | 0;
     label = 10732;
    }
   }
  }
 } while (0);
 $__s_i_i_i = $__grouping;
 $__size__i_i_i = $__grouping;
 $conv_i_i_i = HEAPU8[$__size__i_i_i] | 0;
 if (($conv_i_i_i & 1 | 0) == 0) {
  $cond_i_i = $conv_i_i_i >>> 1;
 } else {
  $cond_i_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i_i | 0) == 0) {
   $40 = HEAP32[$__oe >> 2] | 0;
   $42 = HEAP32[(HEAP32[$6 >> 2] | 0) + 32 >> 2] | 0;
   FUNCTION_TABLE_iiiii[$42 & 15]($8, $__nf_1, $__ns_2, $40) | 0;
   HEAP32[$__oe >> 2] = (HEAP32[$__oe >> 2] | 0) + ($__ns_2 - $__nf_1);
  } else {
   do {
    if (($__nf_1 | 0) != ($__ns_2 | 0)) {
     $incdec_ptr_i_i147 = $__ns_2 - 1 | 0;
     if ($__nf_1 >>> 0 < $incdec_ptr_i_i147 >>> 0) {
      $__first_addr_i_i_0149 = $__nf_1;
      $incdec_ptr_i_i150 = $incdec_ptr_i_i147;
     } else {
      break;
     }
     do {
      $45 = HEAP8[$__first_addr_i_i_0149] | 0;
      HEAP8[$__first_addr_i_i_0149] = HEAP8[$incdec_ptr_i_i150] | 0;
      HEAP8[$incdec_ptr_i_i150] = $45;
      $__first_addr_i_i_0149 = $__first_addr_i_i_0149 + 1 | 0;
      $incdec_ptr_i_i150 = $incdec_ptr_i_i150 - 1 | 0;
     } while ($__first_addr_i_i_0149 >>> 0 < $incdec_ptr_i_i150 >>> 0);
    }
   } while (0);
   $call_i180181 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 16 >> 2] & 255]($17) | 0;
   if ($__nf_1 >>> 0 < $__ns_2 >>> 0) {
    $arraydecay_i_i_i = $__s_i_i_i + 1 | 0;
    $__size__i23_i = $__grouping + 4 | 0;
    $__data__i21_i_i248 = $__grouping + 8 | 0;
    $49 = $6;
    $__dc_0144 = 0;
    $__dg_0145 = 0;
    $__p_0146 = $__nf_1;
    while (1) {
     $tobool_i_i_i201 = (HEAP8[$__size__i_i_i] & 1) == 0;
     do {
      if ((HEAP8[($tobool_i_i_i201 ? $arraydecay_i_i_i : HEAP32[$__data__i21_i_i248 >> 2] | 0) + $__dg_0145 | 0] | 0) > 0) {
       if (($__dc_0144 | 0) != (HEAP8[($tobool_i_i_i201 ? $arraydecay_i_i_i : HEAP32[$__data__i21_i_i248 >> 2] | 0) + $__dg_0145 | 0] | 0)) {
        $__dg_1 = $__dg_0145;
        $__dc_1 = $__dc_0144;
        break;
       }
       $55 = HEAP32[$__oe >> 2] | 0;
       HEAP32[$__oe >> 2] = $55 + 1;
       HEAP8[$55] = $call_i180181;
       $conv_i_i = HEAPU8[$__size__i_i_i] | 0;
       $__dg_1 = ($__dg_0145 >>> 0 < ((($conv_i_i & 1 | 0) == 0 ? $conv_i_i >>> 1 : HEAP32[$__size__i23_i >> 2] | 0) - 1 | 0) >>> 0 & 1) + $__dg_0145 | 0;
       $__dc_1 = 0;
      } else {
       $__dg_1 = $__dg_0145;
       $__dc_1 = $__dc_0144;
      }
     } while (0);
     $call_i290291 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$49 >> 2] | 0) + 28 >> 2] & 63]($8, HEAP8[$__p_0146] | 0) | 0;
     $60 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $60 + 1;
     HEAP8[$60] = $call_i290291;
     $incdec_ptr85 = $__p_0146 + 1 | 0;
     if ($incdec_ptr85 >>> 0 < $__ns_2 >>> 0) {
      $__dc_0144 = $__dc_1 + 1 | 0;
      $__dg_0145 = $__dg_1;
      $__p_0146 = $incdec_ptr85;
     } else {
      break;
     }
    }
   }
   $add_ptr90 = $__ob + ($__nf_1 - $__nb) | 0;
   $61 = HEAP32[$__oe >> 2] | 0;
   if (($add_ptr90 | 0) == ($61 | 0)) {
    break;
   }
   $incdec_ptr_i_i278136 = $61 - 1 | 0;
   if ($add_ptr90 >>> 0 < $incdec_ptr_i_i278136 >>> 0) {
    $__first_addr_i_i268_0138 = $add_ptr90;
    $incdec_ptr_i_i278139 = $incdec_ptr_i_i278136;
   } else {
    break;
   }
   do {
    $62 = HEAP8[$__first_addr_i_i268_0138] | 0;
    HEAP8[$__first_addr_i_i268_0138] = HEAP8[$incdec_ptr_i_i278139] | 0;
    HEAP8[$incdec_ptr_i_i278139] = $62;
    $__first_addr_i_i268_0138 = $__first_addr_i_i268_0138 + 1 | 0;
    $incdec_ptr_i_i278139 = $incdec_ptr_i_i278139 - 1 | 0;
   } while ($__first_addr_i_i268_0138 >>> 0 < $incdec_ptr_i_i278139 >>> 0);
  }
 } while (0);
 L12586 : do {
  if ($__ns_2 >>> 0 < $__ne >>> 0) {
   $44 = $6;
   $__nf_2135 = $__ns_2;
   while (1) {
    $64 = HEAP8[$__nf_2135] | 0;
    if ($64 << 24 >> 24 == 46) {
     break;
    }
    $call_i173174 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$44 >> 2] | 0) + 28 >> 2] & 63]($8, $64) | 0;
    $69 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $69 + 1;
    HEAP8[$69] = $call_i173174;
    $incdec_ptr109 = $__nf_2135 + 1 | 0;
    if ($incdec_ptr109 >>> 0 < $__ne >>> 0) {
     $__nf_2135 = $incdec_ptr109;
    } else {
     $__nf_3 = $incdec_ptr109;
     break L12586;
    }
   }
   $call_i216217 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 12 >> 2] & 255]($17) | 0;
   $67 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $67 + 1;
   HEAP8[$67] = $call_i216217;
   $__nf_3 = $__nf_2135 + 1 | 0;
  } else {
   $__nf_3 = $__ns_2;
  }
 } while (0);
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 32 >> 2] & 15]($8, $__nf_3, $__ne, HEAP32[$__oe >> 2] | 0) | 0;
 $add_ptr116 = (HEAP32[$__oe >> 2] | 0) + ($sub_ptr_lhs_cast - $__nf_3) | 0;
 HEAP32[$__oe >> 2] = $add_ptr116;
 if (($__np | 0) == ($__ne | 0)) {
  $storemerge = $add_ptr116;
 } else {
  $storemerge = $__ob + ($__np - $__nb) | 0;
 }
 HEAP32[$__op >> 2] = $storemerge;
 if ((HEAP8[$__size__i_i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp48 = 0, $ref_tmp52 = 0, $agg_tmp = 0, $arraydecay = 0, $add_ptr = 0, $__fmtflags__i = 0, $0 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_1_i = 0, $and6_i = 0, $and7_i = 0, $scevgep = 0, $scevgep61 = 0, $specify_precision_0_off0_ph_i62 = 0, $arraydecay3 = 0, $call_i = 0, $5 = 0, $__nc_0 = 0, $_b_i30 = 0, $call_i3335 = 0, $7 = 0, $call_i4042 = 0, $12 = 0, $__nc_1 = 0, $13 = 0, $exception_i = 0, $15 = 0, $__nbh_sroa_0_1 = 0, $__nc_2 = 0, $add_ptr32 = 0, $and_i44 = 0, $17 = 0, $18 = 0, $retval_0_i = 0, $call41 = 0, $exception_i47 = 0, $23 = 0, $__obh_sroa_0_1 = 0, $__ob_0 = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $25 = 0, $27 = 0, $__shared_owners__i_i = 0, $32 = 0, $38 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 152 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = __stackBase__ | 0;
 $__nar = __stackBase__ + 8 | 0;
 $__nb = __stackBase__ + 40 | 0;
 $__o = __stackBase__ + 48 | 0;
 $__op = __stackBase__ + 112 | 0;
 $__oe = __stackBase__ + 120 | 0;
 $ref_tmp48 = __stackBase__ + 128 | 0;
 $ref_tmp52 = __stackBase__ + 136 | 0;
 $agg_tmp = __stackBase__ + 144 | 0;
 HEAP32[$__fmt >> 2] = 37;
 HEAP32[$__fmt + 4 >> 2] = 0;
 $arraydecay = $__fmt;
 $add_ptr = $arraydecay + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $0 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($0 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr] = 43;
  $__fmtp_addr_0_i = $arraydecay + 2 | 0;
 }
 if (($0 & 1024 | 0) == 0) {
  $__fmtp_addr_1_i = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i] = 35;
  $__fmtp_addr_1_i = $__fmtp_addr_0_i + 1 | 0;
 }
 $and6_i = $0 & 260;
 $and7_i = $0 >>> 14;
 do {
  if (($and6_i | 0) == 260) {
   HEAP8[$__fmtp_addr_1_i] = 76;
   $scevgep61 = $__fmtp_addr_1_i + 1 | 0;
   if (($and7_i & 1 | 0) == 0) {
    HEAP8[$scevgep61] = 97;
    $specify_precision_0_off0_ph_i62 = 0;
    break;
   } else {
    HEAP8[$scevgep61] = 65;
    $specify_precision_0_off0_ph_i62 = 0;
    break;
   }
  } else {
   HEAP8[$__fmtp_addr_1_i] = 46;
   HEAP8[$__fmtp_addr_1_i + 1 | 0] = 42;
   HEAP8[$__fmtp_addr_1_i + 2 | 0] = 76;
   $scevgep = $__fmtp_addr_1_i + 3 | 0;
   if (($and6_i | 0) == 256) {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$scevgep] = 101;
     $specify_precision_0_off0_ph_i62 = 1;
     break;
    } else {
     HEAP8[$scevgep] = 69;
     $specify_precision_0_off0_ph_i62 = 1;
     break;
    }
   } else if (($and6_i | 0) == 4) {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$scevgep] = 102;
     $specify_precision_0_off0_ph_i62 = 1;
     break;
    } else {
     HEAP8[$scevgep] = 70;
     $specify_precision_0_off0_ph_i62 = 1;
     break;
    }
   } else {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$scevgep] = 103;
     $specify_precision_0_off0_ph_i62 = 1;
     break;
    } else {
     HEAP8[$scevgep] = 71;
     $specify_precision_0_off0_ph_i62 = 1;
     break;
    }
   }
  }
 } while (0);
 $arraydecay3 = $__nar | 0;
 HEAP32[$__nb >> 2] = $arraydecay3;
 if (HEAP8[18416] | 0) {
  $5 = HEAP32[2044] | 0;
 } else {
  $call_i = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i;
  HEAP8[18416] = 1;
  $5 = $call_i;
 }
 if ($specify_precision_0_off0_ph_i62) {
  $__nc_0 = __ZNSt3__112__snprintf_lEPcjPvPKcz($arraydecay3, 30, $5, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempInt + 8 >> 3] = $__v, tempInt) | 0) | 0;
 } else {
  $__nc_0 = __ZNSt3__112__snprintf_lEPcjPvPKcz($arraydecay3, 30, $5, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = $__v, tempInt) | 0) | 0;
 }
 do {
  if (($__nc_0 | 0) > 29) {
   $_b_i30 = HEAP8[18416] | 0;
   if ($specify_precision_0_off0_ph_i62) {
    if ($_b_i30) {
     $7 = HEAP32[2044] | 0;
    } else {
     $call_i3335 = _newlocale(1, 3128, 0) | 0;
     HEAP32[2044] = $call_i3335;
     HEAP8[18416] = 1;
     $7 = $call_i3335;
    }
    $__nc_1 = __ZNSt3__112__asprintf_lEPPcPvPKcz($__nb, $7, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempInt + 8 >> 3] = $__v, tempInt) | 0) | 0;
   } else {
    if ($_b_i30) {
     $12 = HEAP32[2044] | 0;
    } else {
     $call_i4042 = _newlocale(1, 3128, 0) | 0;
     HEAP32[2044] = $call_i4042;
     HEAP8[18416] = 1;
     $12 = $call_i4042;
    }
    $__nc_1 = __ZNSt3__112__asprintf_lEPPcPvPKcz($__nb, $12, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = $__v, tempInt) | 0) | 0;
   }
   $13 = HEAP32[$__nb >> 2] | 0;
   if (($13 | 0) != 0) {
    $__nc_2 = $__nc_1;
    $__nbh_sroa_0_1 = $13;
    $15 = $13;
    break;
   }
   $exception_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i >> 2] = 9152;
   ___cxa_throw($exception_i | 0, 15312, 28);
  } else {
   $__nc_2 = $__nc_0;
   $__nbh_sroa_0_1 = 0;
   $15 = HEAP32[$__nb >> 2] | 0;
  }
 } while (0);
 $add_ptr32 = $15 + $__nc_2 | 0;
 $and_i44 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i44 | 0) == 32) {
   $retval_0_i = $add_ptr32;
  } else if (($and_i44 | 0) == 16) {
   $17 = HEAP8[$15] | 0;
   if (($17 << 24 >> 24 | 0) == 45 | ($17 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $15 + 1 | 0;
    break;
   }
   if (!(($__nc_2 | 0) > 1 & $17 << 24 >> 24 == 48)) {
    label = 10825;
    break;
   }
   $18 = HEAP8[$15 + 1 | 0] | 0;
   if (!(($18 << 24 >> 24 | 0) == 120 | ($18 << 24 >> 24 | 0) == 88)) {
    label = 10825;
    break;
   }
   $retval_0_i = $15 + 2 | 0;
  } else {
   label = 10825;
  }
 } while (0);
 if ((label | 0) == 10825) {
  $retval_0_i = $15;
 }
 do {
  if (($15 | 0) == ($arraydecay3 | 0)) {
   $__ob_0 = $__o | 0;
   $__obh_sroa_0_1 = 0;
   $23 = $arraydecay3;
  } else {
   $call41 = _malloc($__nc_2 << 1) | 0;
   if (($call41 | 0) != 0) {
    $__ob_0 = $call41;
    $__obh_sroa_0_1 = $call41;
    $23 = HEAP32[$__nb >> 2] | 0;
    break;
   }
   $exception_i47 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i47 >> 2] = 9152;
   ___cxa_throw($exception_i47 | 0, 15312, 28);
  }
 } while (0);
 $__locale__i_i = $ref_tmp48 | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $25 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$25 >> 2] | 0, HEAP32[$25 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($23, $retval_0_i, $add_ptr32, $__ob_0, $__op, $__oe, $ref_tmp48);
 $27 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i_i = $27 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) == 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$27 >> 2] | 0) + 8 >> 2] & 511]($27 | 0);
 }
 $32 = $__s | 0;
 HEAP32[$agg_tmp >> 2] = HEAP32[$32 >> 2];
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($ref_tmp52, $agg_tmp, $__ob_0, HEAP32[$__op >> 2] | 0, HEAP32[$__oe >> 2] | 0, $__iob, $__fl);
 $38 = HEAP32[$ref_tmp52 >> 2] | 0;
 HEAP32[$32 >> 2] = $38;
 HEAP32[$agg_result >> 2] = $38;
 if (($__obh_sroa_0_1 | 0) != 0) {
  _free($__obh_sroa_0_1);
 }
 if (($__nbh_sroa_0_1 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 _free($__nbh_sroa_0_1);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp = 0, $agg_tmp = 0, $0 = 0, $add_ptr = 0, $__fmtflags__i = 0, $1 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_113_i_ph = 0, $scevgep = 0, $and9_i = 0, $arraydecay2 = 0, $call_i = 0, $2 = 0, $call5 = 0, $add_ptr7 = 0, $and_i5 = 0, $4 = 0, $5 = 0, $retval_0_i = 0, $arraydecay11 = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $7 = 0, $9 = 0, $__shared_owners__i_i10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = __stackBase__ | 0;
 $__nar = __stackBase__ + 8 | 0;
 $__o = __stackBase__ + 24 | 0;
 $__op = __stackBase__ + 112 | 0;
 $__oe = __stackBase__ + 120 | 0;
 $ref_tmp = __stackBase__ + 128 | 0;
 $agg_tmp = __stackBase__ + 136 | 0;
 $0 = $__fmt | 0;
 HEAP8[$0] = HEAP8[8952] | 0;
 HEAP8[$0 + 1 | 0] = HEAP8[8953 | 0] | 0;
 HEAP8[$0 + 2 | 0] = HEAP8[8954 | 0] | 0;
 HEAP8[$0 + 3 | 0] = HEAP8[8955 | 0] | 0;
 HEAP8[$0 + 4 | 0] = HEAP8[8956 | 0] | 0;
 HEAP8[$0 + 5 | 0] = HEAP8[8957 | 0] | 0;
 $add_ptr = $__fmt + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $1 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($1 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr] = 43;
  $__fmtp_addr_0_i = $__fmt + 2 | 0;
 }
 if (($1 & 512 | 0) == 0) {
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i] = 35;
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i + 1 | 0;
 }
 HEAP8[$__fmtp_addr_113_i_ph] = 108;
 $scevgep = $__fmtp_addr_113_i_ph + 1 | 0;
 $and9_i = $1 & 74;
 do {
  if (($and9_i | 0) == 64) {
   HEAP8[$scevgep] = 111;
  } else if (($and9_i | 0) == 8) {
   if (($1 & 16384 | 0) == 0) {
    HEAP8[$scevgep] = 120;
    break;
   } else {
    HEAP8[$scevgep] = 88;
    break;
   }
  } else {
   HEAP8[$scevgep] = 100;
  }
 } while (0);
 $arraydecay2 = $__nar | 0;
 if (HEAP8[18416] | 0) {
  $2 = HEAP32[2044] | 0;
 } else {
  $call_i = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i;
  HEAP8[18416] = 1;
  $2 = $call_i;
 }
 $call5 = __ZNSt3__111__sprintf_lEPcPvPKcz($arraydecay2, $2, $0, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $__v, tempInt) | 0) | 0;
 $add_ptr7 = $__nar + $call5 | 0;
 $and_i5 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i5 | 0) == 32) {
   $retval_0_i = $add_ptr7;
  } else if (($and_i5 | 0) == 16) {
   $4 = HEAP8[$arraydecay2] | 0;
   if (($4 << 24 >> 24 | 0) == 45 | ($4 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (!(($call5 | 0) > 1 & $4 << 24 >> 24 == 48)) {
    label = 10871;
    break;
   }
   $5 = HEAP8[$__nar + 1 | 0] | 0;
   if (!(($5 << 24 >> 24 | 0) == 120 | ($5 << 24 >> 24 | 0) == 88)) {
    label = 10871;
    break;
   }
   $retval_0_i = $__nar + 2 | 0;
  } else {
   label = 10871;
  }
 } while (0);
 if ((label | 0) == 10871) {
  $retval_0_i = $arraydecay2;
 }
 $arraydecay11 = $__o | 0;
 $__locale__i_i = $ref_tmp | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $7 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$7 >> 2] | 0, HEAP32[$7 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($arraydecay2, $retval_0_i, $add_ptr7, $arraydecay11, $__op, $__oe, $ref_tmp);
 $9 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i_i10 = $9 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i10 >> 2] | 0, HEAP32[$__shared_owners__i_i10 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $14 = $__s | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  $16 = $agg_tmp | 0;
  HEAP32[$16 >> 2] = $15;
  $17 = HEAP32[$__op >> 2] | 0;
  $18 = HEAP32[$__oe >> 2] | 0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay11, $17, $18, $__iob, $__fl);
  STACKTOP = __stackBase__;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$9 >> 2] | 0) + 8 >> 2] & 511]($9 | 0);
 $14 = $__s | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 $16 = $agg_tmp | 0;
 HEAP32[$16 >> 2] = $15;
 $17 = HEAP32[$__op >> 2] | 0;
 $18 = HEAP32[$__oe >> 2] | 0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay11, $17, $18, $__iob, $__fl);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $__p_i_i_i = 0, $__nar = 0, $__o = 0, $agg_tmp = 0, $0 = 0, $arraydecay = 0, $call_i8 = 0, $1 = 0, $call3 = 0, $add_ptr = 0, $and_i = 0, $3 = 0, $4 = 0, $retval_0_i = 0, $__locale_2_i1_i = 0, $5 = 0, $sub_i_i = 0, $13 = 0, $14 = 0, $exception_i_i = 0, $16 = 0, $arraydecay9 = 0, $22 = 0, $add_ptr13 = 0, $__op_0 = 0, $28 = 0, $29 = 0, $30 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i = __stackBase__ | 0;
 $__nar = __stackBase__ + 24 | 0;
 $__o = __stackBase__ + 48 | 0;
 $agg_tmp = __stackBase__ + 88 | 0;
 $0 = __stackBase__ + 16 | 0;
 HEAP8[$0] = HEAP8[8960] | 0;
 HEAP8[$0 + 1 | 0] = HEAP8[8961 | 0] | 0;
 HEAP8[$0 + 2 | 0] = HEAP8[8962 | 0] | 0;
 HEAP8[$0 + 3 | 0] = HEAP8[8963 | 0] | 0;
 HEAP8[$0 + 4 | 0] = HEAP8[8964 | 0] | 0;
 HEAP8[$0 + 5 | 0] = HEAP8[8965 | 0] | 0;
 $arraydecay = $__nar | 0;
 if (HEAP8[18416] | 0) {
  $1 = HEAP32[2044] | 0;
 } else {
  $call_i8 = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i8;
  HEAP8[18416] = 1;
  $1 = $call_i8;
 }
 $call3 = __ZNSt3__111__sprintf_lEPcPvPKcz($arraydecay, $1, $0, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $__v, tempInt) | 0) | 0;
 $add_ptr = $__nar + $call3 | 0;
 $and_i = HEAP32[$__iob + 4 >> 2] & 176;
 do {
  if (($and_i | 0) == 16) {
   $3 = HEAP8[$arraydecay] | 0;
   if (($3 << 24 >> 24 | 0) == 45 | ($3 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (!(($call3 | 0) > 1 & $3 << 24 >> 24 == 48)) {
    label = 10890;
    break;
   }
   $4 = HEAP8[$__nar + 1 | 0] | 0;
   if (!(($4 << 24 >> 24 | 0) == 120 | ($4 << 24 >> 24 | 0) == 88)) {
    label = 10890;
    break;
   }
   $retval_0_i = $__nar + 2 | 0;
  } else if (($and_i | 0) == 32) {
   $retval_0_i = $add_ptr;
  } else {
   label = 10890;
  }
 } while (0);
 if ((label | 0) == 10890) {
  $retval_0_i = $arraydecay;
 }
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $5 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$5 >> 2] | 0, HEAP32[$5 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17816;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4455] | 0) - 1 | 0;
 $13 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $13 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $14 = HEAP32[$13 + ($sub_i_i << 2) >> 2] | 0;
   if (($14 | 0) == 0) {
    break;
   }
   $16 = $14;
   if (((tempValue = HEAP32[$5 >> 2] | 0, HEAP32[$5 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   $arraydecay9 = $__o | 0;
   $22 = HEAP32[(HEAP32[$14 >> 2] | 0) + 32 >> 2] | 0;
   FUNCTION_TABLE_iiiii[$22 & 15]($16, $arraydecay, $add_ptr, $arraydecay9) | 0;
   $add_ptr13 = $__o + $call3 | 0;
   if (($retval_0_i | 0) == ($add_ptr | 0)) {
    $__op_0 = $add_ptr13;
    $28 = $__s | 0;
    $29 = HEAP32[$28 >> 2] | 0;
    $30 = $agg_tmp | 0;
    HEAP32[$30 >> 2] = $29;
    __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay9, $__op_0, $add_ptr13, $__iob, $__fl);
    STACKTOP = __stackBase__;
    return;
   }
   $__op_0 = $__o + ($retval_0_i - $__nar) | 0;
   $28 = $__s | 0;
   $29 = HEAP32[$28 >> 2] | 0;
   $30 = $agg_tmp | 0;
   HEAP32[$30 >> 2] = $29;
   __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay9, $__op_0, $add_ptr13, $__iob, $__fl);
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $__p_i_i_i = 0, $agg_tmp = 0, $__nm = 0, $2 = 0, $__locale_2_i1_i = 0, $6 = 0, $sub_i_i = 0, $14 = 0, $15 = 0, $exception_i_i = 0, $17 = 0, $vtable_i = 0, $__size__i_i_i = 0, $25 = 0, $__data__i21_i_i = 0, $__data__i_i_i = 0, $__data__i21_i_i65_pre_phi = 0, $__data__i_i_i73_pre_phi = 0, $__i_sroa_0_0_ph = 0, $__sbuf__i = 0, $27 = 0, $__i_sroa_0_0 = 0, $tobool_i_i_i58 = 0, $cond_i_i76 = 0, $conv_i_i22_i = 0, $cond_i34_i = 0, $30 = 0, $31 = 0, $__nout__i_i = 0, $32 = 0, $retval_i_i_0 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i = __stackBase__ | 0;
 $agg_tmp = __stackBase__ + 16 | 0;
 $__nm = __stackBase__ + 24 | 0;
 if ((HEAP32[$__iob + 4 >> 2] & 1 | 0) == 0) {
  $2 = HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$agg_tmp >> 2] = HEAP32[$__s >> 2];
  FUNCTION_TABLE_viiiiii[$2 & 31]($agg_result, $this, $agg_tmp, $__iob, $__fl, $__v & 1);
  STACKTOP = __stackBase__;
  return;
 }
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $6 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$6 >> 2] | 0, HEAP32[$6 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4356] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17424;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17424, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4357] | 0) - 1 | 0;
 $14 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $14 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $15 = HEAP32[$14 + ($sub_i_i << 2) >> 2] | 0;
   if (($15 | 0) == 0) {
    break;
   }
   $17 = $15;
   if (((tempValue = HEAP32[$6 >> 2] | 0, HEAP32[$6 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   $vtable_i = HEAP32[$15 >> 2] | 0;
   if ($__v) {
    FUNCTION_TABLE_vii[HEAP32[$vtable_i + 24 >> 2] & 127]($__nm, $17);
   } else {
    FUNCTION_TABLE_vii[HEAP32[$vtable_i + 28 >> 2] & 127]($__nm, $17);
   }
   $__size__i_i_i = $__nm;
   $25 = HEAP8[$__size__i_i_i] | 0;
   if (($25 & 1) == 0) {
    $__data__i_i_i = $__nm + 4 | 0;
    $__i_sroa_0_0_ph = $__data__i_i_i;
    $__data__i_i_i73_pre_phi = $__data__i_i_i;
    $__data__i21_i_i65_pre_phi = $__nm + 8 | 0;
   } else {
    $__data__i21_i_i = $__nm + 8 | 0;
    $__i_sroa_0_0_ph = HEAP32[$__data__i21_i_i >> 2] | 0;
    $__data__i_i_i73_pre_phi = $__nm + 4 | 0;
    $__data__i21_i_i65_pre_phi = $__data__i21_i_i;
   }
   $__sbuf__i = $__s | 0;
   $__i_sroa_0_0 = $__i_sroa_0_0_ph;
   $27 = $25;
   while (1) {
    $tobool_i_i_i58 = ($27 & 1) == 0;
    if ($tobool_i_i_i58) {
     $cond_i_i76 = $__data__i_i_i73_pre_phi;
    } else {
     $cond_i_i76 = HEAP32[$__data__i21_i_i65_pre_phi >> 2] | 0;
    }
    $conv_i_i22_i = $27 & 255;
    if (($conv_i_i22_i & 1 | 0) == 0) {
     $cond_i34_i = $conv_i_i22_i >>> 1;
    } else {
     $cond_i34_i = HEAP32[$__data__i_i_i73_pre_phi >> 2] | 0;
    }
    if (($__i_sroa_0_0 | 0) == ($cond_i_i76 + ($cond_i34_i << 2) | 0)) {
     break;
    }
    $30 = HEAP32[$__i_sroa_0_0 >> 2] | 0;
    $31 = HEAP32[$__sbuf__i >> 2] | 0;
    do {
     if (($31 | 0) != 0) {
      $__nout__i_i = $31 + 24 | 0;
      $32 = HEAP32[$__nout__i_i >> 2] | 0;
      if (($32 | 0) == (HEAP32[$31 + 28 >> 2] | 0)) {
       $retval_i_i_0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$31 >> 2] | 0) + 52 >> 2] & 63]($31, $30) | 0;
      } else {
       HEAP32[$__nout__i_i >> 2] = $32 + 4;
       HEAP32[$32 >> 2] = $30;
       $retval_i_i_0 = $30;
      }
      if (($retval_i_i_0 | 0) != -1) {
       break;
      }
      HEAP32[$__sbuf__i >> 2] = 0;
     }
    } while (0);
    $__i_sroa_0_0 = $__i_sroa_0_0 + 4 | 0;
    $27 = HEAP8[$__size__i_i_i] | 0;
   }
   HEAP32[$agg_result >> 2] = HEAP32[$__sbuf__i >> 2];
   if ($tobool_i_i_i58) {
    STACKTOP = __stackBase__;
    return;
   }
   __ZdlPv(HEAP32[$__data__i21_i_i65_pre_phi >> 2] | 0);
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($agg_result, $this, $__s, $__iob, $__fl, $__v$0, $__v$1) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v$0 = $__v$0 | 0;
 $__v$1 = $__v$1 | 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp = 0, $agg_tmp = 0, $arraydecay = 0, $add_ptr = 0, $__fmtflags__i = 0, $0 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_113_i_ph = 0, $scevgep = 0, $and9_i = 0, $arraydecay2 = 0, $call_i = 0, $1 = 0, $call5 = 0, $add_ptr7 = 0, $and_i5 = 0, $3 = 0, $4 = 0, $retval_0_i = 0, $arraydecay11 = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $6 = 0, $8 = 0, $__shared_owners__i_i10 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 232 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = __stackBase__ | 0;
 $__nar = __stackBase__ + 8 | 0;
 $__o = __stackBase__ + 32 | 0;
 $__op = __stackBase__ + 200 | 0;
 $__oe = __stackBase__ + 208 | 0;
 $ref_tmp = __stackBase__ + 216 | 0;
 $agg_tmp = __stackBase__ + 224 | 0;
 HEAP32[$__fmt >> 2] = 37;
 HEAP32[$__fmt + 4 >> 2] = 0;
 $arraydecay = $__fmt;
 $add_ptr = $arraydecay + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $0 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($0 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr] = 43;
  $__fmtp_addr_0_i = $arraydecay + 2 | 0;
 }
 if (($0 & 512 | 0) == 0) {
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i] = 35;
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i + 1 | 0;
 }
 HEAP8[$__fmtp_addr_113_i_ph] = 108;
 HEAP8[$__fmtp_addr_113_i_ph + 1 | 0] = 108;
 $scevgep = $__fmtp_addr_113_i_ph + 2 | 0;
 $and9_i = $0 & 74;
 do {
  if (($and9_i | 0) == 64) {
   HEAP8[$scevgep] = 111;
  } else if (($and9_i | 0) == 8) {
   if (($0 & 16384 | 0) == 0) {
    HEAP8[$scevgep] = 120;
    break;
   } else {
    HEAP8[$scevgep] = 88;
    break;
   }
  } else {
   HEAP8[$scevgep] = 100;
  }
 } while (0);
 $arraydecay2 = $__nar | 0;
 if (HEAP8[18416] | 0) {
  $1 = HEAP32[2044] | 0;
 } else {
  $call_i = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i;
  HEAP8[18416] = 1;
  $1 = $call_i;
 }
 $call5 = __ZNSt3__111__sprintf_lEPcPvPKcz($arraydecay2, $1, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $__v$0, HEAP32[tempInt + 8 >> 2] = $__v$1, tempInt) | 0) | 0;
 $add_ptr7 = $__nar + $call5 | 0;
 $and_i5 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i5 | 0) == 32) {
   $retval_0_i = $add_ptr7;
  } else if (($and_i5 | 0) == 16) {
   $3 = HEAP8[$arraydecay2] | 0;
   if (($3 << 24 >> 24 | 0) == 45 | ($3 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (!(($call5 | 0) > 1 & $3 << 24 >> 24 == 48)) {
    label = 10967;
    break;
   }
   $4 = HEAP8[$__nar + 1 | 0] | 0;
   if (!(($4 << 24 >> 24 | 0) == 120 | ($4 << 24 >> 24 | 0) == 88)) {
    label = 10967;
    break;
   }
   $retval_0_i = $__nar + 2 | 0;
  } else {
   label = 10967;
  }
 } while (0);
 if ((label | 0) == 10967) {
  $retval_0_i = $arraydecay2;
 }
 $arraydecay11 = $__o | 0;
 $__locale__i_i = $ref_tmp | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $6 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$6 >> 2] | 0, HEAP32[$6 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($arraydecay2, $retval_0_i, $add_ptr7, $arraydecay11, $__op, $__oe, $ref_tmp);
 $8 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i_i10 = $8 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i10 >> 2] | 0, HEAP32[$__shared_owners__i_i10 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $13 = $__s | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  $15 = $agg_tmp | 0;
  HEAP32[$15 >> 2] = $14;
  $16 = HEAP32[$__op >> 2] | 0;
  $17 = HEAP32[$__oe >> 2] | 0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay11, $16, $17, $__iob, $__fl);
  STACKTOP = __stackBase__;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$8 >> 2] | 0) + 8 >> 2] & 511]($8 | 0);
 $13 = $__s | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 $15 = $agg_tmp | 0;
 HEAP32[$15 >> 2] = $14;
 $16 = HEAP32[$__op >> 2] | 0;
 $17 = HEAP32[$__oe >> 2] | 0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay11, $16, $17, $__iob, $__fl);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp = 0, $agg_tmp = 0, $0 = 0, $add_ptr = 0, $__fmtflags__i = 0, $1 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_113_i_ph = 0, $scevgep = 0, $and9_i = 0, $arraydecay2 = 0, $call_i = 0, $2 = 0, $call5 = 0, $add_ptr7 = 0, $and_i5 = 0, $4 = 0, $5 = 0, $retval_0_i = 0, $arraydecay11 = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $7 = 0, $9 = 0, $__shared_owners__i_i10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = __stackBase__ | 0;
 $__nar = __stackBase__ + 8 | 0;
 $__o = __stackBase__ + 24 | 0;
 $__op = __stackBase__ + 112 | 0;
 $__oe = __stackBase__ + 120 | 0;
 $ref_tmp = __stackBase__ + 128 | 0;
 $agg_tmp = __stackBase__ + 136 | 0;
 $0 = $__fmt | 0;
 HEAP8[$0] = HEAP8[8952] | 0;
 HEAP8[$0 + 1 | 0] = HEAP8[8953 | 0] | 0;
 HEAP8[$0 + 2 | 0] = HEAP8[8954 | 0] | 0;
 HEAP8[$0 + 3 | 0] = HEAP8[8955 | 0] | 0;
 HEAP8[$0 + 4 | 0] = HEAP8[8956 | 0] | 0;
 HEAP8[$0 + 5 | 0] = HEAP8[8957 | 0] | 0;
 $add_ptr = $__fmt + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $1 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($1 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr] = 43;
  $__fmtp_addr_0_i = $__fmt + 2 | 0;
 }
 if (($1 & 512 | 0) == 0) {
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i] = 35;
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i + 1 | 0;
 }
 HEAP8[$__fmtp_addr_113_i_ph] = 108;
 $scevgep = $__fmtp_addr_113_i_ph + 1 | 0;
 $and9_i = $1 & 74;
 do {
  if (($and9_i | 0) == 64) {
   HEAP8[$scevgep] = 111;
  } else if (($and9_i | 0) == 8) {
   if (($1 & 16384 | 0) == 0) {
    HEAP8[$scevgep] = 120;
    break;
   } else {
    HEAP8[$scevgep] = 88;
    break;
   }
  } else {
   HEAP8[$scevgep] = 117;
  }
 } while (0);
 $arraydecay2 = $__nar | 0;
 if (HEAP8[18416] | 0) {
  $2 = HEAP32[2044] | 0;
 } else {
  $call_i = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i;
  HEAP8[18416] = 1;
  $2 = $call_i;
 }
 $call5 = __ZNSt3__111__sprintf_lEPcPvPKcz($arraydecay2, $2, $0, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $__v, tempInt) | 0) | 0;
 $add_ptr7 = $__nar + $call5 | 0;
 $and_i5 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i5 | 0) == 32) {
   $retval_0_i = $add_ptr7;
  } else if (($and_i5 | 0) == 16) {
   $4 = HEAP8[$arraydecay2] | 0;
   if (($4 << 24 >> 24 | 0) == 45 | ($4 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (!(($call5 | 0) > 1 & $4 << 24 >> 24 == 48)) {
    label = 10996;
    break;
   }
   $5 = HEAP8[$__nar + 1 | 0] | 0;
   if (!(($5 << 24 >> 24 | 0) == 120 | ($5 << 24 >> 24 | 0) == 88)) {
    label = 10996;
    break;
   }
   $retval_0_i = $__nar + 2 | 0;
  } else {
   label = 10996;
  }
 } while (0);
 if ((label | 0) == 10996) {
  $retval_0_i = $arraydecay2;
 }
 $arraydecay11 = $__o | 0;
 $__locale__i_i = $ref_tmp | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $7 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$7 >> 2] | 0, HEAP32[$7 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($arraydecay2, $retval_0_i, $add_ptr7, $arraydecay11, $__op, $__oe, $ref_tmp);
 $9 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i_i10 = $9 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i10 >> 2] | 0, HEAP32[$__shared_owners__i_i10 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $14 = $__s | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  $16 = $agg_tmp | 0;
  HEAP32[$16 >> 2] = $15;
  $17 = HEAP32[$__op >> 2] | 0;
  $18 = HEAP32[$__oe >> 2] | 0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay11, $17, $18, $__iob, $__fl);
  STACKTOP = __stackBase__;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$9 >> 2] | 0) + 8 >> 2] & 511]($9 | 0);
 $14 = $__s | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 $16 = $agg_tmp | 0;
 HEAP32[$16 >> 2] = $15;
 $17 = HEAP32[$__op >> 2] | 0;
 $18 = HEAP32[$__oe >> 2] | 0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay11, $17, $18, $__iob, $__fl);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $__p_i_i_i64 = 0, $__p_i_i_i = 0, $__grouping = 0, $__locale__i = 0, $0 = 0, $sub_i_i = 0, $5 = 0, $6 = 0, $exception_i_i = 0, $7 = 0, $8 = 0, $9 = 0, $sub_i_i71 = 0, $14 = 0, $15 = 0, $exception_i_i83 = 0, $16 = 0, $17 = 0, $__s_i_i_i = 0, $__size__i_i_i = 0, $conv_i_i_i = 0, $cond_i_i = 0, $23 = 0, $26 = 0, $call_i9596 = 0, $29 = 0, $__nf_0 = 0, $arrayidx17 = 0, $31 = 0, $32 = 0, $call_i103104 = 0, $34 = 0, $call_i111112 = 0, $37 = 0, $__nf_1 = 0, $incdec_ptr_i_i130106 = 0, $incdec_ptr_i_i130109 = 0, $__first_addr_i_i120_0108 = 0, $38 = 0, $call_i222223 = 0, $arraydecay_i_i_i213 = 0, $42 = 0, $__size__i23_i = 0, $__data__i21_i_i = 0, $__p_0105 = 0, $__dg_0104 = 0, $__dc_0103 = 0, $tobool_i_i_i197 = 0, $48 = 0, $conv_i_i = 0, $__dc_1 = 0, $__dg_1 = 0, $call_i8283 = 0, $53 = 0, $incdec_ptr58 = 0, $add_ptr62 = 0, $54 = 0, $incdec_ptr_i_i96 = 0, $incdec_ptr_i_i99 = 0, $__first_addr_i_i_098 = 0, $55 = 0, $storemerge = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $__p_i_i_i64 = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 16 | 0;
 $__grouping = __stackBase__ + 32 | 0;
 $__locale__i = $__loc | 0;
 $0 = HEAP32[$__locale__i >> 2] | 0;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17808;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4453] | 0) - 1 | 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 if ((HEAP32[$0 + 12 >> 2] | 0) - $5 >> 2 >>> 0 <= $sub_i_i >>> 0) {
  $exception_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i;
  HEAP32[$7 >> 2] = 9184;
  ___cxa_throw($exception_i_i | 0, 15328, 208);
 }
 $6 = HEAP32[$5 + ($sub_i_i << 2) >> 2] | 0;
 if (($6 | 0) == 0) {
  $exception_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i;
  HEAP32[$7 >> 2] = 9184;
  ___cxa_throw($exception_i_i | 0, 15328, 208);
 }
 $8 = $6;
 $9 = HEAP32[$__locale__i >> 2] | 0;
 if ((HEAP32[4356] | 0) != -1) {
  HEAP32[$__p_i_i_i64 >> 2] = 17424;
  HEAP32[$__p_i_i_i64 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i64 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17424, $__p_i_i_i64, 102);
 }
 $sub_i_i71 = (HEAP32[4357] | 0) - 1 | 0;
 $14 = HEAP32[$9 + 8 >> 2] | 0;
 if ((HEAP32[$9 + 12 >> 2] | 0) - $14 >> 2 >>> 0 <= $sub_i_i71 >>> 0) {
  $exception_i_i83 = ___cxa_allocate_exception(4) | 0;
  $16 = $exception_i_i83;
  HEAP32[$16 >> 2] = 9184;
  ___cxa_throw($exception_i_i83 | 0, 15328, 208);
 }
 $15 = HEAP32[$14 + ($sub_i_i71 << 2) >> 2] | 0;
 if (($15 | 0) == 0) {
  $exception_i_i83 = ___cxa_allocate_exception(4) | 0;
  $16 = $exception_i_i83;
  HEAP32[$16 >> 2] = 9184;
  ___cxa_throw($exception_i_i83 | 0, 15328, 208);
 }
 $17 = $15;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$15 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $17);
 $__s_i_i_i = $__grouping;
 $__size__i_i_i = $__grouping;
 $conv_i_i_i = HEAPU8[$__size__i_i_i] | 0;
 if (($conv_i_i_i & 1 | 0) == 0) {
  $cond_i_i = $conv_i_i_i >>> 1;
 } else {
  $cond_i_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i_i | 0) == 0) {
   $23 = HEAP32[(HEAP32[$6 >> 2] | 0) + 48 >> 2] | 0;
   FUNCTION_TABLE_iiiii[$23 & 15]($8, $__nb, $__ne, $__ob) | 0;
   HEAP32[$__oe >> 2] = $__ob + ($__ne - $__nb << 2);
  } else {
   HEAP32[$__oe >> 2] = $__ob;
   $26 = HEAP8[$__nb] | 0;
   if (($26 << 24 >> 24 | 0) == 45 | ($26 << 24 >> 24 | 0) == 43) {
    $call_i9596 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 44 >> 2] & 63]($8, $26) | 0;
    $29 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $29 + 4;
    HEAP32[$29 >> 2] = $call_i9596;
    $__nf_0 = $__nb + 1 | 0;
   } else {
    $__nf_0 = $__nb;
   }
   do {
    if (($__ne - $__nf_0 | 0) > 1) {
     if ((HEAP8[$__nf_0] | 0) != 48) {
      $__nf_1 = $__nf_0;
      break;
     }
     $arrayidx17 = $__nf_0 + 1 | 0;
     $31 = HEAP8[$arrayidx17] | 0;
     if (!(($31 << 24 >> 24 | 0) == 120 | ($31 << 24 >> 24 | 0) == 88)) {
      $__nf_1 = $__nf_0;
      break;
     }
     $32 = $6;
     $call_i103104 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 44 >> 2] & 63]($8, 48) | 0;
     $34 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $34 + 4;
     HEAP32[$34 >> 2] = $call_i103104;
     $call_i111112 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 44 >> 2] & 63]($8, HEAP8[$arrayidx17] | 0) | 0;
     $37 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $37 + 4;
     HEAP32[$37 >> 2] = $call_i111112;
     $__nf_1 = $__nf_0 + 2 | 0;
    } else {
     $__nf_1 = $__nf_0;
    }
   } while (0);
   do {
    if (($__nf_1 | 0) != ($__ne | 0)) {
     $incdec_ptr_i_i130106 = $__ne - 1 | 0;
     if ($__nf_1 >>> 0 < $incdec_ptr_i_i130106 >>> 0) {
      $__first_addr_i_i120_0108 = $__nf_1;
      $incdec_ptr_i_i130109 = $incdec_ptr_i_i130106;
     } else {
      break;
     }
     do {
      $38 = HEAP8[$__first_addr_i_i120_0108] | 0;
      HEAP8[$__first_addr_i_i120_0108] = HEAP8[$incdec_ptr_i_i130109] | 0;
      HEAP8[$incdec_ptr_i_i130109] = $38;
      $__first_addr_i_i120_0108 = $__first_addr_i_i120_0108 + 1 | 0;
      $incdec_ptr_i_i130109 = $incdec_ptr_i_i130109 - 1 | 0;
     } while ($__first_addr_i_i120_0108 >>> 0 < $incdec_ptr_i_i130109 >>> 0);
    }
   } while (0);
   $call_i222223 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 16 >> 2] & 255]($17) | 0;
   if ($__nf_1 >>> 0 < $__ne >>> 0) {
    $arraydecay_i_i_i213 = $__s_i_i_i + 1 | 0;
    $42 = $6;
    $__size__i23_i = $__grouping + 4 | 0;
    $__data__i21_i_i = $__grouping + 8 | 0;
    $__dc_0103 = 0;
    $__dg_0104 = 0;
    $__p_0105 = $__nf_1;
    while (1) {
     $tobool_i_i_i197 = (HEAP8[$__size__i_i_i] & 1) == 0;
     do {
      if ((HEAP8[($tobool_i_i_i197 ? $arraydecay_i_i_i213 : HEAP32[$__data__i21_i_i >> 2] | 0) + $__dg_0104 | 0] | 0) == 0) {
       $__dg_1 = $__dg_0104;
       $__dc_1 = $__dc_0103;
      } else {
       if (($__dc_0103 | 0) != (HEAP8[($tobool_i_i_i197 ? $arraydecay_i_i_i213 : HEAP32[$__data__i21_i_i >> 2] | 0) + $__dg_0104 | 0] | 0)) {
        $__dg_1 = $__dg_0104;
        $__dc_1 = $__dc_0103;
        break;
       }
       $48 = HEAP32[$__oe >> 2] | 0;
       HEAP32[$__oe >> 2] = $48 + 4;
       HEAP32[$48 >> 2] = $call_i222223;
       $conv_i_i = HEAPU8[$__size__i_i_i] | 0;
       $__dg_1 = ($__dg_0104 >>> 0 < ((($conv_i_i & 1 | 0) == 0 ? $conv_i_i >>> 1 : HEAP32[$__size__i23_i >> 2] | 0) - 1 | 0) >>> 0 & 1) + $__dg_0104 | 0;
       $__dc_1 = 0;
      }
     } while (0);
     $call_i8283 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$42 >> 2] | 0) + 44 >> 2] & 63]($8, HEAP8[$__p_0105] | 0) | 0;
     $53 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $53 + 4;
     HEAP32[$53 >> 2] = $call_i8283;
     $incdec_ptr58 = $__p_0105 + 1 | 0;
     if ($incdec_ptr58 >>> 0 < $__ne >>> 0) {
      $__dc_0103 = $__dc_1 + 1 | 0;
      $__dg_0104 = $__dg_1;
      $__p_0105 = $incdec_ptr58;
     } else {
      break;
     }
    }
   }
   $add_ptr62 = $__ob + ($__nf_1 - $__nb << 2) | 0;
   $54 = HEAP32[$__oe >> 2] | 0;
   if (($add_ptr62 | 0) == ($54 | 0)) {
    break;
   }
   $incdec_ptr_i_i96 = $54 - 4 | 0;
   if ($add_ptr62 >>> 0 < $incdec_ptr_i_i96 >>> 0) {
    $__first_addr_i_i_098 = $add_ptr62;
    $incdec_ptr_i_i99 = $incdec_ptr_i_i96;
   } else {
    break;
   }
   do {
    $55 = HEAP32[$__first_addr_i_i_098 >> 2] | 0;
    HEAP32[$__first_addr_i_i_098 >> 2] = HEAP32[$incdec_ptr_i_i99 >> 2];
    HEAP32[$incdec_ptr_i_i99 >> 2] = $55;
    $__first_addr_i_i_098 = $__first_addr_i_i_098 + 4 | 0;
    $incdec_ptr_i_i99 = $incdec_ptr_i_i99 - 4 | 0;
   } while ($__first_addr_i_i_098 >>> 0 < $incdec_ptr_i_i99 >>> 0);
  }
 } while (0);
 if (($__np | 0) == ($__ne | 0)) {
  $storemerge = HEAP32[$__oe >> 2] | 0;
 } else {
  $storemerge = $__ob + ($__np - $__nb << 2) | 0;
 }
 HEAP32[$__op >> 2] = $storemerge;
 if ((HEAP8[$__size__i_i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $__s, $__ob, $__op, $__oe, $__iob, $__fl) {
 $agg_result = $agg_result | 0;
 $__s = $__s | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 var $__sp = 0, $__sbuf_ = 0, $0 = 0, $sub_ptr_lhs_cast = 0, $sub_ptr_rhs_cast = 0, $sub_ptr_div = 0, $__width__i = 0, $2 = 0, $__ns_0 = 0, $sub_ptr_lhs_cast4 = 0, $sub_ptr_sub6 = 0, $sub_ptr_div7 = 0, $and_i_i_i18 = 0, $6 = 0, $__p_0_i37_ph = 0, $n_addr_03_i_i_ph = 0, $d_addr_04_i_i = 0, $n_addr_03_i_i = 0, $dec_i_i = 0, $7 = 0, $__size__i_i_i = 0, $cond_i_i = 0, $23 = 0, $sub_ptr_sub29 = 0, $sub_ptr_div30 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__sp = __stackBase__ | 0;
 $__sbuf_ = $__s | 0;
 $0 = HEAP32[$__sbuf_ >> 2] | 0;
 if (($0 | 0) == 0) {
  HEAP32[$agg_result >> 2] = 0;
  STACKTOP = __stackBase__;
  return;
 }
 $sub_ptr_lhs_cast = $__oe;
 $sub_ptr_rhs_cast = $__ob;
 $sub_ptr_div = $sub_ptr_lhs_cast - $sub_ptr_rhs_cast >> 2;
 $__width__i = $__iob + 12 | 0;
 $2 = HEAP32[$__width__i >> 2] | 0;
 $__ns_0 = ($2 | 0) > ($sub_ptr_div | 0) ? $2 - $sub_ptr_div | 0 : 0;
 $sub_ptr_lhs_cast4 = $__op;
 $sub_ptr_sub6 = $sub_ptr_lhs_cast4 - $sub_ptr_rhs_cast | 0;
 $sub_ptr_div7 = $sub_ptr_sub6 >> 2;
 do {
  if (($sub_ptr_sub6 | 0) > 0) {
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__ob, $sub_ptr_div7) | 0) == ($sub_ptr_div7 | 0)) {
    break;
   }
   HEAP32[$__sbuf_ >> 2] = 0;
   HEAP32[$agg_result >> 2] = 0;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 do {
  if (($__ns_0 | 0) > 0) {
   if ($__ns_0 >>> 0 > 1073741822) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
   }
   if ($__ns_0 >>> 0 < 2) {
    HEAP8[$__sp] = $__ns_0 << 1 & 255;
    $n_addr_03_i_i_ph = 1;
    $__p_0_i37_ph = $__sp + 4 | 0;
   } else {
    $and_i_i_i18 = $__ns_0 + 4 & -4;
    $6 = __Znwj($and_i_i_i18 << 2) | 0;
    HEAP32[$__sp + 8 >> 2] = $6;
    HEAP32[$__sp >> 2] = $and_i_i_i18 | 1;
    HEAP32[$__sp + 4 >> 2] = $__ns_0;
    $n_addr_03_i_i_ph = $__ns_0;
    $__p_0_i37_ph = $6;
   }
   $n_addr_03_i_i = $n_addr_03_i_i_ph;
   $d_addr_04_i_i = $__p_0_i37_ph;
   while (1) {
    $dec_i_i = $n_addr_03_i_i - 1 | 0;
    HEAP32[$d_addr_04_i_i >> 2] = $__fl;
    if (($dec_i_i | 0) == 0) {
     break;
    } else {
     $n_addr_03_i_i = $dec_i_i;
     $d_addr_04_i_i = $d_addr_04_i_i + 4 | 0;
    }
   }
   HEAP32[$__p_0_i37_ph + ($__ns_0 << 2) >> 2] = 0;
   $7 = HEAP32[$__sbuf_ >> 2] | 0;
   $__size__i_i_i = $__sp;
   if ((HEAP8[$__size__i_i_i] & 1) == 0) {
    $cond_i_i = $__sp + 4 | 0;
   } else {
    $cond_i_i = HEAP32[$__sp + 8 >> 2] | 0;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, $cond_i_i, $__ns_0) | 0) == ($__ns_0 | 0)) {
    if ((HEAP8[$__size__i_i_i] & 1) == 0) {
     $23 = $7;
     break;
    }
    __ZdlPv(HEAP32[$__sp + 8 >> 2] | 0);
    $23 = $7;
    break;
   }
   HEAP32[$__sbuf_ >> 2] = 0;
   HEAP32[$agg_result >> 2] = 0;
   if ((HEAP8[$__size__i_i_i] & 1) == 0) {
    STACKTOP = __stackBase__;
    return;
   }
   __ZdlPv(HEAP32[$__sp + 8 >> 2] | 0);
   STACKTOP = __stackBase__;
   return;
  } else {
   $23 = $0;
  }
 } while (0);
 $sub_ptr_sub29 = $sub_ptr_lhs_cast - $sub_ptr_lhs_cast4 | 0;
 $sub_ptr_div30 = $sub_ptr_sub29 >> 2;
 do {
  if (($sub_ptr_sub29 | 0) > 0) {
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$23 >> 2] | 0) + 48 >> 2] & 63]($23, $__op, $sub_ptr_div30) | 0) == ($sub_ptr_div30 | 0)) {
    break;
   }
   HEAP32[$__sbuf_ >> 2] = 0;
   HEAP32[$agg_result >> 2] = 0;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 HEAP32[$__width__i >> 2] = 0;
 HEAP32[$agg_result >> 2] = $23;
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($agg_result, $this, $__s, $__iob, $__fl, $__v$0, $__v$1) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v$0 = $__v$0 | 0;
 $__v$1 = $__v$1 | 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp = 0, $agg_tmp = 0, $arraydecay = 0, $add_ptr = 0, $__fmtflags__i = 0, $0 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_113_i_ph = 0, $scevgep = 0, $and9_i = 0, $arraydecay2 = 0, $call_i = 0, $1 = 0, $call5 = 0, $add_ptr7 = 0, $and_i5 = 0, $3 = 0, $4 = 0, $retval_0_i = 0, $arraydecay11 = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $6 = 0, $8 = 0, $__shared_owners__i_i10 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = __stackBase__ | 0;
 $__nar = __stackBase__ + 8 | 0;
 $__o = __stackBase__ + 32 | 0;
 $__op = __stackBase__ + 208 | 0;
 $__oe = __stackBase__ + 216 | 0;
 $ref_tmp = __stackBase__ + 224 | 0;
 $agg_tmp = __stackBase__ + 232 | 0;
 HEAP32[$__fmt >> 2] = 37;
 HEAP32[$__fmt + 4 >> 2] = 0;
 $arraydecay = $__fmt;
 $add_ptr = $arraydecay + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $0 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($0 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr] = 43;
  $__fmtp_addr_0_i = $arraydecay + 2 | 0;
 }
 if (($0 & 512 | 0) == 0) {
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i] = 35;
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i + 1 | 0;
 }
 HEAP8[$__fmtp_addr_113_i_ph] = 108;
 HEAP8[$__fmtp_addr_113_i_ph + 1 | 0] = 108;
 $scevgep = $__fmtp_addr_113_i_ph + 2 | 0;
 $and9_i = $0 & 74;
 do {
  if (($and9_i | 0) == 8) {
   if (($0 & 16384 | 0) == 0) {
    HEAP8[$scevgep] = 120;
    break;
   } else {
    HEAP8[$scevgep] = 88;
    break;
   }
  } else if (($and9_i | 0) == 64) {
   HEAP8[$scevgep] = 111;
  } else {
   HEAP8[$scevgep] = 117;
  }
 } while (0);
 $arraydecay2 = $__nar | 0;
 if (HEAP8[18416] | 0) {
  $1 = HEAP32[2044] | 0;
 } else {
  $call_i = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i;
  HEAP8[18416] = 1;
  $1 = $call_i;
 }
 $call5 = __ZNSt3__111__sprintf_lEPcPvPKcz($arraydecay2, $1, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $__v$0, HEAP32[tempInt + 8 >> 2] = $__v$1, tempInt) | 0) | 0;
 $add_ptr7 = $__nar + $call5 | 0;
 $and_i5 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i5 | 0) == 32) {
   $retval_0_i = $add_ptr7;
  } else if (($and_i5 | 0) == 16) {
   $3 = HEAP8[$arraydecay2] | 0;
   if (($3 << 24 >> 24 | 0) == 45 | ($3 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (!(($call5 | 0) > 1 & $3 << 24 >> 24 == 48)) {
    label = 11117;
    break;
   }
   $4 = HEAP8[$__nar + 1 | 0] | 0;
   if (!(($4 << 24 >> 24 | 0) == 120 | ($4 << 24 >> 24 | 0) == 88)) {
    label = 11117;
    break;
   }
   $retval_0_i = $__nar + 2 | 0;
  } else {
   label = 11117;
  }
 } while (0);
 if ((label | 0) == 11117) {
  $retval_0_i = $arraydecay2;
 }
 $arraydecay11 = $__o | 0;
 $__locale__i_i = $ref_tmp | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $6 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$6 >> 2] | 0, HEAP32[$6 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($arraydecay2, $retval_0_i, $add_ptr7, $arraydecay11, $__op, $__oe, $ref_tmp);
 $8 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i_i10 = $8 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i10 >> 2] | 0, HEAP32[$__shared_owners__i_i10 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $13 = $__s | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  $15 = $agg_tmp | 0;
  HEAP32[$15 >> 2] = $14;
  $16 = HEAP32[$__op >> 2] | 0;
  $17 = HEAP32[$__oe >> 2] | 0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay11, $16, $17, $__iob, $__fl);
  STACKTOP = __stackBase__;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$8 >> 2] | 0) + 8 >> 2] & 511]($8 | 0);
 $13 = $__s | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 $15 = $agg_tmp | 0;
 HEAP32[$15 >> 2] = $14;
 $16 = HEAP32[$__op >> 2] | 0;
 $17 = HEAP32[$__oe >> 2] | 0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay11, $16, $17, $__iob, $__fl);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp50 = 0, $ref_tmp54 = 0, $agg_tmp = 0, $arraydecay = 0, $add_ptr = 0, $__fmtflags__i = 0, $0 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_1_i = 0, $and6_i = 0, $and7_i = 0, $incdec_ptr11_i = 0, $specify_precision_0_off0_ph_i58 = 0, $arraydecay3 = 0, $call_i = 0, $5 = 0, $__nc_0 = 0, $_b_i31 = 0, $call_i3436 = 0, $7 = 0, $call_i4143 = 0, $12 = 0, $__nc_1 = 0, $14 = 0, $exception_i = 0, $16 = 0, $__nbh_sroa_0_1 = 0, $__nc_2 = 0, $add_ptr34 = 0, $and_i45 = 0, $18 = 0, $19 = 0, $retval_0_i = 0, $call43 = 0, $20 = 0, $exception_i48 = 0, $25 = 0, $__obh_sroa_0_1 = 0, $__ob_0 = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $27 = 0, $29 = 0, $__shared_owners__i_i = 0, $34 = 0, $40 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = __stackBase__ | 0;
 $__nar = __stackBase__ + 8 | 0;
 $__nb = __stackBase__ + 40 | 0;
 $__o = __stackBase__ + 48 | 0;
 $__op = __stackBase__ + 280 | 0;
 $__oe = __stackBase__ + 288 | 0;
 $ref_tmp50 = __stackBase__ + 296 | 0;
 $ref_tmp54 = __stackBase__ + 304 | 0;
 $agg_tmp = __stackBase__ + 312 | 0;
 HEAP32[$__fmt >> 2] = 37;
 HEAP32[$__fmt + 4 >> 2] = 0;
 $arraydecay = $__fmt;
 $add_ptr = $arraydecay + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $0 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($0 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr] = 43;
  $__fmtp_addr_0_i = $arraydecay + 2 | 0;
 }
 if (($0 & 1024 | 0) == 0) {
  $__fmtp_addr_1_i = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i] = 35;
  $__fmtp_addr_1_i = $__fmtp_addr_0_i + 1 | 0;
 }
 $and6_i = $0 & 260;
 $and7_i = $0 >>> 14;
 do {
  if (($and6_i | 0) == 260) {
   if (($and7_i & 1 | 0) == 0) {
    HEAP8[$__fmtp_addr_1_i] = 97;
    $specify_precision_0_off0_ph_i58 = 0;
    break;
   } else {
    HEAP8[$__fmtp_addr_1_i] = 65;
    $specify_precision_0_off0_ph_i58 = 0;
    break;
   }
  } else {
   HEAP8[$__fmtp_addr_1_i] = 46;
   $incdec_ptr11_i = $__fmtp_addr_1_i + 2 | 0;
   HEAP8[$__fmtp_addr_1_i + 1 | 0] = 42;
   if (($and6_i | 0) == 256) {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$incdec_ptr11_i] = 101;
     $specify_precision_0_off0_ph_i58 = 1;
     break;
    } else {
     HEAP8[$incdec_ptr11_i] = 69;
     $specify_precision_0_off0_ph_i58 = 1;
     break;
    }
   } else if (($and6_i | 0) == 4) {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$incdec_ptr11_i] = 102;
     $specify_precision_0_off0_ph_i58 = 1;
     break;
    } else {
     HEAP8[$incdec_ptr11_i] = 70;
     $specify_precision_0_off0_ph_i58 = 1;
     break;
    }
   } else {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$incdec_ptr11_i] = 103;
     $specify_precision_0_off0_ph_i58 = 1;
     break;
    } else {
     HEAP8[$incdec_ptr11_i] = 71;
     $specify_precision_0_off0_ph_i58 = 1;
     break;
    }
   }
  }
 } while (0);
 $arraydecay3 = $__nar | 0;
 HEAP32[$__nb >> 2] = $arraydecay3;
 if (HEAP8[18416] | 0) {
  $5 = HEAP32[2044] | 0;
 } else {
  $call_i = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i;
  HEAP8[18416] = 1;
  $5 = $call_i;
 }
 if ($specify_precision_0_off0_ph_i58) {
  $__nc_0 = __ZNSt3__112__snprintf_lEPcjPvPKcz($arraydecay3, 30, $5, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempInt + 8 >> 3] = $__v, tempInt) | 0) | 0;
 } else {
  $__nc_0 = __ZNSt3__112__snprintf_lEPcjPvPKcz($arraydecay3, 30, $5, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = $__v, tempInt) | 0) | 0;
 }
 do {
  if (($__nc_0 | 0) > 29) {
   $_b_i31 = HEAP8[18416] | 0;
   if ($specify_precision_0_off0_ph_i58) {
    if ($_b_i31) {
     $7 = HEAP32[2044] | 0;
    } else {
     $call_i3436 = _newlocale(1, 3128, 0) | 0;
     HEAP32[2044] = $call_i3436;
     HEAP8[18416] = 1;
     $7 = $call_i3436;
    }
    $__nc_1 = __ZNSt3__112__asprintf_lEPPcPvPKcz($__nb, $7, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempInt + 8 >> 3] = $__v, tempInt) | 0) | 0;
   } else {
    if ($_b_i31) {
     $12 = HEAP32[2044] | 0;
    } else {
     $call_i4143 = _newlocale(1, 3128, 0) | 0;
     HEAP32[2044] = $call_i4143;
     HEAP8[18416] = 1;
     $12 = $call_i4143;
    }
    $__nc_1 = __ZNSt3__112__asprintf_lEPPcPvPKcz($__nb, $12, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempInt + 8 >> 3] = $__v, tempInt) | 0) | 0;
   }
   $14 = HEAP32[$__nb >> 2] | 0;
   if (($14 | 0) != 0) {
    $__nc_2 = $__nc_1;
    $__nbh_sroa_0_1 = $14;
    $16 = $14;
    break;
   }
   $exception_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i >> 2] = 9152;
   ___cxa_throw($exception_i | 0, 15312, 28);
  } else {
   $__nc_2 = $__nc_0;
   $__nbh_sroa_0_1 = 0;
   $16 = HEAP32[$__nb >> 2] | 0;
  }
 } while (0);
 $add_ptr34 = $16 + $__nc_2 | 0;
 $and_i45 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i45 | 0) == 16) {
   $18 = HEAP8[$16] | 0;
   if (($18 << 24 >> 24 | 0) == 45 | ($18 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $16 + 1 | 0;
    break;
   }
   if (!(($__nc_2 | 0) > 1 & $18 << 24 >> 24 == 48)) {
    label = 11174;
    break;
   }
   $19 = HEAP8[$16 + 1 | 0] | 0;
   if (!(($19 << 24 >> 24 | 0) == 120 | ($19 << 24 >> 24 | 0) == 88)) {
    label = 11174;
    break;
   }
   $retval_0_i = $16 + 2 | 0;
  } else if (($and_i45 | 0) == 32) {
   $retval_0_i = $add_ptr34;
  } else {
   label = 11174;
  }
 } while (0);
 if ((label | 0) == 11174) {
  $retval_0_i = $16;
 }
 do {
  if (($16 | 0) == ($arraydecay3 | 0)) {
   $__ob_0 = $__o | 0;
   $__obh_sroa_0_1 = 0;
   $25 = $arraydecay3;
  } else {
   $call43 = _malloc($__nc_2 << 3) | 0;
   $20 = $call43;
   if (($call43 | 0) != 0) {
    $__ob_0 = $20;
    $__obh_sroa_0_1 = $20;
    $25 = HEAP32[$__nb >> 2] | 0;
    break;
   }
   $exception_i48 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i48 >> 2] = 9152;
   ___cxa_throw($exception_i48 | 0, 15312, 28);
  }
 } while (0);
 $__locale__i_i = $ref_tmp50 | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $27 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$27 >> 2] | 0, HEAP32[$27 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($25, $retval_0_i, $add_ptr34, $__ob_0, $__op, $__oe, $ref_tmp50);
 $29 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i_i = $29 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) == 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$29 >> 2] | 0) + 8 >> 2] & 511]($29 | 0);
 }
 $34 = $__s | 0;
 HEAP32[$agg_tmp >> 2] = HEAP32[$34 >> 2];
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($ref_tmp54, $agg_tmp, $__ob_0, HEAP32[$__op >> 2] | 0, HEAP32[$__oe >> 2] | 0, $__iob, $__fl);
 $40 = HEAP32[$ref_tmp54 >> 2] | 0;
 HEAP32[$34 >> 2] = $40;
 HEAP32[$agg_result >> 2] = $40;
 if (($__obh_sroa_0_1 | 0) != 0) {
  _free($__obh_sroa_0_1);
 }
 if (($__nbh_sroa_0_1 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 _free($__nbh_sroa_0_1);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $__p_i_i_i90 = 0, $__p_i_i_i = 0, $__grouping = 0, $__locale__i = 0, $0 = 0, $sub_i_i = 0, $5 = 0, $6 = 0, $exception_i_i = 0, $7 = 0, $8 = 0, $9 = 0, $sub_i_i97 = 0, $14 = 0, $15 = 0, $exception_i_i109 = 0, $16 = 0, $17 = 0, $20 = 0, $call_i132133 = 0, $23 = 0, $__nf_0 = 0, $sub_ptr_lhs_cast = 0, $arrayidx10 = 0, $27 = 0, $28 = 0, $call_i139140 = 0, $30 = 0, $incdec_ptr22 = 0, $call_i147148 = 0, $33 = 0, $__ns_0 = 0, $34 = 0, $call_i116 = 0, $35 = 0, $__ns_1 = 0, $36 = 0, $call_i122 = 0, $37 = 0, $__nf_1 = 0, $__ns_2 = 0, $__s_i_i_i = 0, $__size__i_i_i = 0, $conv_i_i_i = 0, $cond_i_i = 0, $40 = 0, $42 = 0, $44 = 0, $incdec_ptr_i_i147 = 0, $incdec_ptr_i_i150 = 0, $__first_addr_i_i_0149 = 0, $45 = 0, $call_i180181 = 0, $arraydecay_i_i_i = 0, $__size__i23_i = 0, $__data__i21_i_i248 = 0, $49 = 0, $__p_0146 = 0, $__dg_0145 = 0, $__dc_0144 = 0, $tobool_i_i_i201 = 0, $55 = 0, $conv_i_i = 0, $__dc_1 = 0, $__dg_1 = 0, $call_i289290 = 0, $60 = 0, $incdec_ptr85 = 0, $add_ptr90 = 0, $61 = 0, $incdec_ptr_i_i278136 = 0, $incdec_ptr_i_i278139 = 0, $__first_addr_i_i268_0138 = 0, $62 = 0, $__nf_2135 = 0, $64 = 0, $call_i216217 = 0, $67 = 0, $call_i173174 = 0, $69 = 0, $incdec_ptr109 = 0, $__nf_3 = 0, $add_ptr116 = 0, $storemerge = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $__p_i_i_i90 = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 16 | 0;
 $__grouping = __stackBase__ + 32 | 0;
 $__locale__i = $__loc | 0;
 $0 = HEAP32[$__locale__i >> 2] | 0;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17808;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4453] | 0) - 1 | 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 if ((HEAP32[$0 + 12 >> 2] | 0) - $5 >> 2 >>> 0 <= $sub_i_i >>> 0) {
  $exception_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i;
  HEAP32[$7 >> 2] = 9184;
  ___cxa_throw($exception_i_i | 0, 15328, 208);
 }
 $6 = HEAP32[$5 + ($sub_i_i << 2) >> 2] | 0;
 if (($6 | 0) == 0) {
  $exception_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i;
  HEAP32[$7 >> 2] = 9184;
  ___cxa_throw($exception_i_i | 0, 15328, 208);
 }
 $8 = $6;
 $9 = HEAP32[$__locale__i >> 2] | 0;
 if ((HEAP32[4356] | 0) != -1) {
  HEAP32[$__p_i_i_i90 >> 2] = 17424;
  HEAP32[$__p_i_i_i90 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i90 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17424, $__p_i_i_i90, 102);
 }
 $sub_i_i97 = (HEAP32[4357] | 0) - 1 | 0;
 $14 = HEAP32[$9 + 8 >> 2] | 0;
 if ((HEAP32[$9 + 12 >> 2] | 0) - $14 >> 2 >>> 0 <= $sub_i_i97 >>> 0) {
  $exception_i_i109 = ___cxa_allocate_exception(4) | 0;
  $16 = $exception_i_i109;
  HEAP32[$16 >> 2] = 9184;
  ___cxa_throw($exception_i_i109 | 0, 15328, 208);
 }
 $15 = HEAP32[$14 + ($sub_i_i97 << 2) >> 2] | 0;
 if (($15 | 0) == 0) {
  $exception_i_i109 = ___cxa_allocate_exception(4) | 0;
  $16 = $exception_i_i109;
  HEAP32[$16 >> 2] = 9184;
  ___cxa_throw($exception_i_i109 | 0, 15328, 208);
 }
 $17 = $15;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$15 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $17);
 HEAP32[$__oe >> 2] = $__ob;
 $20 = HEAP8[$__nb] | 0;
 if (($20 << 24 >> 24 | 0) == 45 | ($20 << 24 >> 24 | 0) == 43) {
  $call_i132133 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 44 >> 2] & 63]($8, $20) | 0;
  $23 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$__oe >> 2] = $23 + 4;
  HEAP32[$23 >> 2] = $call_i132133;
  $__nf_0 = $__nb + 1 | 0;
 } else {
  $__nf_0 = $__nb;
 }
 $sub_ptr_lhs_cast = $__ne;
 L13117 : do {
  if (($sub_ptr_lhs_cast - $__nf_0 | 0) > 1) {
   if ((HEAP8[$__nf_0] | 0) != 48) {
    $__ns_1 = $__nf_0;
    label = 11234;
    break;
   }
   $arrayidx10 = $__nf_0 + 1 | 0;
   $27 = HEAP8[$arrayidx10] | 0;
   if (!(($27 << 24 >> 24 | 0) == 120 | ($27 << 24 >> 24 | 0) == 88)) {
    $__ns_1 = $__nf_0;
    label = 11234;
    break;
   }
   $28 = $6;
   $call_i139140 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$28 >> 2] | 0) + 44 >> 2] & 63]($8, 48) | 0;
   $30 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $30 + 4;
   HEAP32[$30 >> 2] = $call_i139140;
   $incdec_ptr22 = $__nf_0 + 2 | 0;
   $call_i147148 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$28 >> 2] | 0) + 44 >> 2] & 63]($8, HEAP8[$arrayidx10] | 0) | 0;
   $33 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $33 + 4;
   HEAP32[$33 >> 2] = $call_i147148;
   $__ns_0 = $incdec_ptr22;
   while (1) {
    if ($__ns_0 >>> 0 >= $__ne >>> 0) {
     $__ns_2 = $__ns_0;
     $__nf_1 = $incdec_ptr22;
     break L13117;
    }
    $34 = HEAP8[$__ns_0] | 0;
    if (HEAP8[18416] | 0) {
     $35 = HEAP32[2044] | 0;
    } else {
     $call_i116 = _newlocale(1, 3128, 0) | 0;
     HEAP32[2044] = $call_i116;
     HEAP8[18416] = 1;
     $35 = $call_i116;
    }
    if ((_isxdigit($34 << 24 >> 24 | 0, $35 | 0) | 0) == 0) {
     $__ns_2 = $__ns_0;
     $__nf_1 = $incdec_ptr22;
     break;
    } else {
     $__ns_0 = $__ns_0 + 1 | 0;
    }
   }
  } else {
   $__ns_1 = $__nf_0;
   label = 11234;
  }
 } while (0);
 L13132 : do {
  if ((label | 0) == 11234) {
   while (1) {
    label = 0;
    if ($__ns_1 >>> 0 >= $__ne >>> 0) {
     $__ns_2 = $__ns_1;
     $__nf_1 = $__nf_0;
     break L13132;
    }
    $36 = HEAP8[$__ns_1] | 0;
    if (HEAP8[18416] | 0) {
     $37 = HEAP32[2044] | 0;
    } else {
     $call_i122 = _newlocale(1, 3128, 0) | 0;
     HEAP32[2044] = $call_i122;
     HEAP8[18416] = 1;
     $37 = $call_i122;
    }
    if ((_isdigit($36 << 24 >> 24 | 0, $37 | 0) | 0) == 0) {
     $__ns_2 = $__ns_1;
     $__nf_1 = $__nf_0;
     break;
    } else {
     $__ns_1 = $__ns_1 + 1 | 0;
     label = 11234;
    }
   }
  }
 } while (0);
 $__s_i_i_i = $__grouping;
 $__size__i_i_i = $__grouping;
 $conv_i_i_i = HEAPU8[$__size__i_i_i] | 0;
 if (($conv_i_i_i & 1 | 0) == 0) {
  $cond_i_i = $conv_i_i_i >>> 1;
 } else {
  $cond_i_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 do {
  if (($cond_i_i | 0) == 0) {
   $40 = HEAP32[$__oe >> 2] | 0;
   $42 = HEAP32[(HEAP32[$6 >> 2] | 0) + 48 >> 2] | 0;
   FUNCTION_TABLE_iiiii[$42 & 15]($8, $__nf_1, $__ns_2, $40) | 0;
   HEAP32[$__oe >> 2] = (HEAP32[$__oe >> 2] | 0) + ($__ns_2 - $__nf_1 << 2);
  } else {
   do {
    if (($__nf_1 | 0) != ($__ns_2 | 0)) {
     $incdec_ptr_i_i147 = $__ns_2 - 1 | 0;
     if ($__nf_1 >>> 0 < $incdec_ptr_i_i147 >>> 0) {
      $__first_addr_i_i_0149 = $__nf_1;
      $incdec_ptr_i_i150 = $incdec_ptr_i_i147;
     } else {
      break;
     }
     do {
      $45 = HEAP8[$__first_addr_i_i_0149] | 0;
      HEAP8[$__first_addr_i_i_0149] = HEAP8[$incdec_ptr_i_i150] | 0;
      HEAP8[$incdec_ptr_i_i150] = $45;
      $__first_addr_i_i_0149 = $__first_addr_i_i_0149 + 1 | 0;
      $incdec_ptr_i_i150 = $incdec_ptr_i_i150 - 1 | 0;
     } while ($__first_addr_i_i_0149 >>> 0 < $incdec_ptr_i_i150 >>> 0);
    }
   } while (0);
   $call_i180181 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 16 >> 2] & 255]($17) | 0;
   if ($__nf_1 >>> 0 < $__ns_2 >>> 0) {
    $arraydecay_i_i_i = $__s_i_i_i + 1 | 0;
    $__size__i23_i = $__grouping + 4 | 0;
    $__data__i21_i_i248 = $__grouping + 8 | 0;
    $49 = $6;
    $__dc_0144 = 0;
    $__dg_0145 = 0;
    $__p_0146 = $__nf_1;
    while (1) {
     $tobool_i_i_i201 = (HEAP8[$__size__i_i_i] & 1) == 0;
     do {
      if ((HEAP8[($tobool_i_i_i201 ? $arraydecay_i_i_i : HEAP32[$__data__i21_i_i248 >> 2] | 0) + $__dg_0145 | 0] | 0) > 0) {
       if (($__dc_0144 | 0) != (HEAP8[($tobool_i_i_i201 ? $arraydecay_i_i_i : HEAP32[$__data__i21_i_i248 >> 2] | 0) + $__dg_0145 | 0] | 0)) {
        $__dg_1 = $__dg_0145;
        $__dc_1 = $__dc_0144;
        break;
       }
       $55 = HEAP32[$__oe >> 2] | 0;
       HEAP32[$__oe >> 2] = $55 + 4;
       HEAP32[$55 >> 2] = $call_i180181;
       $conv_i_i = HEAPU8[$__size__i_i_i] | 0;
       $__dg_1 = ($__dg_0145 >>> 0 < ((($conv_i_i & 1 | 0) == 0 ? $conv_i_i >>> 1 : HEAP32[$__size__i23_i >> 2] | 0) - 1 | 0) >>> 0 & 1) + $__dg_0145 | 0;
       $__dc_1 = 0;
      } else {
       $__dg_1 = $__dg_0145;
       $__dc_1 = $__dc_0144;
      }
     } while (0);
     $call_i289290 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$49 >> 2] | 0) + 44 >> 2] & 63]($8, HEAP8[$__p_0146] | 0) | 0;
     $60 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $60 + 4;
     HEAP32[$60 >> 2] = $call_i289290;
     $incdec_ptr85 = $__p_0146 + 1 | 0;
     if ($incdec_ptr85 >>> 0 < $__ns_2 >>> 0) {
      $__dc_0144 = $__dc_1 + 1 | 0;
      $__dg_0145 = $__dg_1;
      $__p_0146 = $incdec_ptr85;
     } else {
      break;
     }
    }
   }
   $add_ptr90 = $__ob + ($__nf_1 - $__nb << 2) | 0;
   $61 = HEAP32[$__oe >> 2] | 0;
   if (($add_ptr90 | 0) == ($61 | 0)) {
    break;
   }
   $incdec_ptr_i_i278136 = $61 - 4 | 0;
   if ($add_ptr90 >>> 0 < $incdec_ptr_i_i278136 >>> 0) {
    $__first_addr_i_i268_0138 = $add_ptr90;
    $incdec_ptr_i_i278139 = $incdec_ptr_i_i278136;
   } else {
    break;
   }
   do {
    $62 = HEAP32[$__first_addr_i_i268_0138 >> 2] | 0;
    HEAP32[$__first_addr_i_i268_0138 >> 2] = HEAP32[$incdec_ptr_i_i278139 >> 2];
    HEAP32[$incdec_ptr_i_i278139 >> 2] = $62;
    $__first_addr_i_i268_0138 = $__first_addr_i_i268_0138 + 4 | 0;
    $incdec_ptr_i_i278139 = $incdec_ptr_i_i278139 - 4 | 0;
   } while ($__first_addr_i_i268_0138 >>> 0 < $incdec_ptr_i_i278139 >>> 0);
  }
 } while (0);
 L13171 : do {
  if ($__ns_2 >>> 0 < $__ne >>> 0) {
   $44 = $6;
   $__nf_2135 = $__ns_2;
   while (1) {
    $64 = HEAP8[$__nf_2135] | 0;
    if ($64 << 24 >> 24 == 46) {
     break;
    }
    $call_i173174 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$44 >> 2] | 0) + 44 >> 2] & 63]($8, $64) | 0;
    $69 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $69 + 4;
    HEAP32[$69 >> 2] = $call_i173174;
    $incdec_ptr109 = $__nf_2135 + 1 | 0;
    if ($incdec_ptr109 >>> 0 < $__ne >>> 0) {
     $__nf_2135 = $incdec_ptr109;
    } else {
     $__nf_3 = $incdec_ptr109;
     break L13171;
    }
   }
   $call_i216217 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 12 >> 2] & 255]($17) | 0;
   $67 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $67 + 4;
   HEAP32[$67 >> 2] = $call_i216217;
   $__nf_3 = $__nf_2135 + 1 | 0;
  } else {
   $__nf_3 = $__ns_2;
  }
 } while (0);
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 48 >> 2] & 15]($8, $__nf_3, $__ne, HEAP32[$__oe >> 2] | 0) | 0;
 $add_ptr116 = (HEAP32[$__oe >> 2] | 0) + ($sub_ptr_lhs_cast - $__nf_3 << 2) | 0;
 HEAP32[$__oe >> 2] = $add_ptr116;
 if (($__np | 0) == ($__ne | 0)) {
  $storemerge = $add_ptr116;
 } else {
  $storemerge = $__ob + ($__np - $__nb << 2) | 0;
 }
 HEAP32[$__op >> 2] = $storemerge;
 if ((HEAP8[$__size__i_i_i] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__grouping + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp48 = 0, $ref_tmp52 = 0, $agg_tmp = 0, $arraydecay = 0, $add_ptr = 0, $__fmtflags__i = 0, $0 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_1_i = 0, $and6_i = 0, $and7_i = 0, $scevgep = 0, $scevgep61 = 0, $specify_precision_0_off0_ph_i62 = 0, $arraydecay3 = 0, $call_i = 0, $5 = 0, $__nc_0 = 0, $_b_i30 = 0, $call_i3335 = 0, $7 = 0, $call_i4042 = 0, $12 = 0, $__nc_1 = 0, $13 = 0, $exception_i = 0, $15 = 0, $__nbh_sroa_0_1 = 0, $__nc_2 = 0, $add_ptr32 = 0, $and_i44 = 0, $17 = 0, $18 = 0, $retval_0_i = 0, $call41 = 0, $19 = 0, $exception_i47 = 0, $24 = 0, $__obh_sroa_0_1 = 0, $__ob_0 = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $26 = 0, $28 = 0, $__shared_owners__i_i = 0, $33 = 0, $39 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = __stackBase__ | 0;
 $__nar = __stackBase__ + 8 | 0;
 $__nb = __stackBase__ + 40 | 0;
 $__o = __stackBase__ + 48 | 0;
 $__op = __stackBase__ + 280 | 0;
 $__oe = __stackBase__ + 288 | 0;
 $ref_tmp48 = __stackBase__ + 296 | 0;
 $ref_tmp52 = __stackBase__ + 304 | 0;
 $agg_tmp = __stackBase__ + 312 | 0;
 HEAP32[$__fmt >> 2] = 37;
 HEAP32[$__fmt + 4 >> 2] = 0;
 $arraydecay = $__fmt;
 $add_ptr = $arraydecay + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $0 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($0 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr] = 43;
  $__fmtp_addr_0_i = $arraydecay + 2 | 0;
 }
 if (($0 & 1024 | 0) == 0) {
  $__fmtp_addr_1_i = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i] = 35;
  $__fmtp_addr_1_i = $__fmtp_addr_0_i + 1 | 0;
 }
 $and6_i = $0 & 260;
 $and7_i = $0 >>> 14;
 do {
  if (($and6_i | 0) == 260) {
   HEAP8[$__fmtp_addr_1_i] = 76;
   $scevgep61 = $__fmtp_addr_1_i + 1 | 0;
   if (($and7_i & 1 | 0) == 0) {
    HEAP8[$scevgep61] = 97;
    $specify_precision_0_off0_ph_i62 = 0;
    break;
   } else {
    HEAP8[$scevgep61] = 65;
    $specify_precision_0_off0_ph_i62 = 0;
    break;
   }
  } else {
   HEAP8[$__fmtp_addr_1_i] = 46;
   HEAP8[$__fmtp_addr_1_i + 1 | 0] = 42;
   HEAP8[$__fmtp_addr_1_i + 2 | 0] = 76;
   $scevgep = $__fmtp_addr_1_i + 3 | 0;
   if (($and6_i | 0) == 256) {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$scevgep] = 101;
     $specify_precision_0_off0_ph_i62 = 1;
     break;
    } else {
     HEAP8[$scevgep] = 69;
     $specify_precision_0_off0_ph_i62 = 1;
     break;
    }
   } else if (($and6_i | 0) == 4) {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$scevgep] = 102;
     $specify_precision_0_off0_ph_i62 = 1;
     break;
    } else {
     HEAP8[$scevgep] = 70;
     $specify_precision_0_off0_ph_i62 = 1;
     break;
    }
   } else {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$scevgep] = 103;
     $specify_precision_0_off0_ph_i62 = 1;
     break;
    } else {
     HEAP8[$scevgep] = 71;
     $specify_precision_0_off0_ph_i62 = 1;
     break;
    }
   }
  }
 } while (0);
 $arraydecay3 = $__nar | 0;
 HEAP32[$__nb >> 2] = $arraydecay3;
 if (HEAP8[18416] | 0) {
  $5 = HEAP32[2044] | 0;
 } else {
  $call_i = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i;
  HEAP8[18416] = 1;
  $5 = $call_i;
 }
 if ($specify_precision_0_off0_ph_i62) {
  $__nc_0 = __ZNSt3__112__snprintf_lEPcjPvPKcz($arraydecay3, 30, $5, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempInt + 8 >> 3] = $__v, tempInt) | 0) | 0;
 } else {
  $__nc_0 = __ZNSt3__112__snprintf_lEPcjPvPKcz($arraydecay3, 30, $5, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = $__v, tempInt) | 0) | 0;
 }
 do {
  if (($__nc_0 | 0) > 29) {
   $_b_i30 = HEAP8[18416] | 0;
   if ($specify_precision_0_off0_ph_i62) {
    if ($_b_i30) {
     $7 = HEAP32[2044] | 0;
    } else {
     $call_i3335 = _newlocale(1, 3128, 0) | 0;
     HEAP32[2044] = $call_i3335;
     HEAP8[18416] = 1;
     $7 = $call_i3335;
    }
    $__nc_1 = __ZNSt3__112__asprintf_lEPPcPvPKcz($__nb, $7, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempInt + 8 >> 3] = $__v, tempInt) | 0) | 0;
   } else {
    if ($_b_i30) {
     $12 = HEAP32[2044] | 0;
    } else {
     $call_i4042 = _newlocale(1, 3128, 0) | 0;
     HEAP32[2044] = $call_i4042;
     HEAP8[18416] = 1;
     $12 = $call_i4042;
    }
    $__nc_1 = __ZNSt3__112__asprintf_lEPPcPvPKcz($__nb, $12, $arraydecay, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = $__v, tempInt) | 0) | 0;
   }
   $13 = HEAP32[$__nb >> 2] | 0;
   if (($13 | 0) != 0) {
    $__nc_2 = $__nc_1;
    $__nbh_sroa_0_1 = $13;
    $15 = $13;
    break;
   }
   $exception_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i >> 2] = 9152;
   ___cxa_throw($exception_i | 0, 15312, 28);
  } else {
   $__nc_2 = $__nc_0;
   $__nbh_sroa_0_1 = 0;
   $15 = HEAP32[$__nb >> 2] | 0;
  }
 } while (0);
 $add_ptr32 = $15 + $__nc_2 | 0;
 $and_i44 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i44 | 0) == 32) {
   $retval_0_i = $add_ptr32;
  } else if (($and_i44 | 0) == 16) {
   $17 = HEAP8[$15] | 0;
   if (($17 << 24 >> 24 | 0) == 45 | ($17 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $15 + 1 | 0;
    break;
   }
   if (!(($__nc_2 | 0) > 1 & $17 << 24 >> 24 == 48)) {
    label = 11327;
    break;
   }
   $18 = HEAP8[$15 + 1 | 0] | 0;
   if (!(($18 << 24 >> 24 | 0) == 120 | ($18 << 24 >> 24 | 0) == 88)) {
    label = 11327;
    break;
   }
   $retval_0_i = $15 + 2 | 0;
  } else {
   label = 11327;
  }
 } while (0);
 if ((label | 0) == 11327) {
  $retval_0_i = $15;
 }
 do {
  if (($15 | 0) == ($arraydecay3 | 0)) {
   $__ob_0 = $__o | 0;
   $__obh_sroa_0_1 = 0;
   $24 = $arraydecay3;
  } else {
   $call41 = _malloc($__nc_2 << 3) | 0;
   $19 = $call41;
   if (($call41 | 0) != 0) {
    $__ob_0 = $19;
    $__obh_sroa_0_1 = $19;
    $24 = HEAP32[$__nb >> 2] | 0;
    break;
   }
   $exception_i47 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i47 >> 2] = 9152;
   ___cxa_throw($exception_i47 | 0, 15312, 28);
  }
 } while (0);
 $__locale__i_i = $ref_tmp48 | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $26 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$26 >> 2] | 0, HEAP32[$26 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($24, $retval_0_i, $add_ptr32, $__ob_0, $__op, $__oe, $ref_tmp48);
 $28 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i_i = $28 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) == 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$28 >> 2] | 0) + 8 >> 2] & 511]($28 | 0);
 }
 $33 = $__s | 0;
 HEAP32[$agg_tmp >> 2] = HEAP32[$33 >> 2];
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($ref_tmp52, $agg_tmp, $__ob_0, HEAP32[$__op >> 2] | 0, HEAP32[$__oe >> 2] | 0, $__iob, $__fl);
 $39 = HEAP32[$ref_tmp52 >> 2] | 0;
 HEAP32[$33 >> 2] = $39;
 HEAP32[$agg_result >> 2] = $39;
 if (($__obh_sroa_0_1 | 0) != 0) {
  _free($__obh_sroa_0_1);
 }
 if (($__nbh_sroa_0_1 | 0) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 _free($__nbh_sroa_0_1);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this | 0;
 return 2;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $agg_tmp = 0, $agg_tmp2 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $agg_tmp = __stackBase__ | 0;
 $agg_tmp2 = __stackBase__ + 8 | 0;
 HEAP32[$agg_tmp >> 2] = HEAP32[$__b >> 2];
 HEAP32[$agg_tmp2 >> 2] = HEAP32[$__e >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg_result, $this, $agg_tmp, $agg_tmp2, $__iob, $__err, $__tm, 8944, 8952);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $agg_tmp = 0, $agg_tmp2 = 0, $add_ptr = 0, $call = 0, $__s_i_i_i = 0, $8 = 0, $9 = 0, $cond_i_i4 = 0, $cond_i_i47 = 0, $conv_i_i = 0, $cond_i = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $agg_tmp = __stackBase__ | 0;
 $agg_tmp2 = __stackBase__ + 8 | 0;
 $add_ptr = $this + 8 | 0;
 $call = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr >> 2] | 0) + 20 >> 2] & 255]($add_ptr) | 0;
 HEAP32[$agg_tmp >> 2] = HEAP32[$__b >> 2];
 HEAP32[$agg_tmp2 >> 2] = HEAP32[$__e >> 2];
 $__s_i_i_i = $call;
 $8 = HEAP8[$call] | 0;
 if (($8 & 1) == 0) {
  $cond_i_i47 = $__s_i_i_i + 1 | 0;
  $cond_i_i4 = $__s_i_i_i + 1 | 0;
 } else {
  $9 = HEAP32[$call + 8 >> 2] | 0;
  $cond_i_i47 = $9;
  $cond_i_i4 = $9;
 }
 $conv_i_i = $8 & 255;
 if (($conv_i_i & 1 | 0) == 0) {
  $cond_i = $conv_i_i >>> 1;
 } else {
  $cond_i = HEAP32[$call + 4 >> 2] | 0;
 }
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg_result, $this, $agg_tmp, $agg_tmp2, $__iob, $__err, $__tm, $cond_i_i4, $cond_i_i47 + $cond_i | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $__p_i_i_i = 0, $__nar = 0, $__o = 0, $agg_tmp = 0, $0 = 0, $arraydecay = 0, $call_i8 = 0, $1 = 0, $call3 = 0, $add_ptr = 0, $and_i = 0, $3 = 0, $4 = 0, $retval_0_i = 0, $__locale_2_i1_i = 0, $5 = 0, $sub_i_i = 0, $13 = 0, $14 = 0, $exception_i_i = 0, $16 = 0, $arraydecay9 = 0, $22 = 0, $add_ptr13 = 0, $__op_0 = 0, $28 = 0, $29 = 0, $30 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i = __stackBase__ | 0;
 $__nar = __stackBase__ + 24 | 0;
 $__o = __stackBase__ + 48 | 0;
 $agg_tmp = __stackBase__ + 200 | 0;
 $0 = __stackBase__ + 16 | 0;
 HEAP8[$0] = HEAP8[8960] | 0;
 HEAP8[$0 + 1 | 0] = HEAP8[8961 | 0] | 0;
 HEAP8[$0 + 2 | 0] = HEAP8[8962 | 0] | 0;
 HEAP8[$0 + 3 | 0] = HEAP8[8963 | 0] | 0;
 HEAP8[$0 + 4 | 0] = HEAP8[8964 | 0] | 0;
 HEAP8[$0 + 5 | 0] = HEAP8[8965 | 0] | 0;
 $arraydecay = $__nar | 0;
 if (HEAP8[18416] | 0) {
  $1 = HEAP32[2044] | 0;
 } else {
  $call_i8 = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i8;
  HEAP8[18416] = 1;
  $1 = $call_i8;
 }
 $call3 = __ZNSt3__111__sprintf_lEPcPvPKcz($arraydecay, $1, $0, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $__v, tempInt) | 0) | 0;
 $add_ptr = $__nar + $call3 | 0;
 $and_i = HEAP32[$__iob + 4 >> 2] & 176;
 do {
  if (($and_i | 0) == 16) {
   $3 = HEAP8[$arraydecay] | 0;
   if (($3 << 24 >> 24 | 0) == 45 | ($3 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (!(($call3 | 0) > 1 & $3 << 24 >> 24 == 48)) {
    label = 11372;
    break;
   }
   $4 = HEAP8[$__nar + 1 | 0] | 0;
   if (!(($4 << 24 >> 24 | 0) == 120 | ($4 << 24 >> 24 | 0) == 88)) {
    label = 11372;
    break;
   }
   $retval_0_i = $__nar + 2 | 0;
  } else if (($and_i | 0) == 32) {
   $retval_0_i = $add_ptr;
  } else {
   label = 11372;
  }
 } while (0);
 if ((label | 0) == 11372) {
  $retval_0_i = $arraydecay;
 }
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $5 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$5 >> 2] | 0, HEAP32[$5 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17808;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4453] | 0) - 1 | 0;
 $13 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $13 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $14 = HEAP32[$13 + ($sub_i_i << 2) >> 2] | 0;
   if (($14 | 0) == 0) {
    break;
   }
   $16 = $14;
   if (((tempValue = HEAP32[$5 >> 2] | 0, HEAP32[$5 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   $arraydecay9 = $__o | 0;
   $22 = HEAP32[(HEAP32[$14 >> 2] | 0) + 48 >> 2] | 0;
   FUNCTION_TABLE_iiiii[$22 & 15]($16, $arraydecay, $add_ptr, $arraydecay9) | 0;
   $add_ptr13 = $__o + ($call3 << 2) | 0;
   if (($retval_0_i | 0) == ($add_ptr | 0)) {
    $__op_0 = $add_ptr13;
    $28 = $__s | 0;
    $29 = HEAP32[$28 >> 2] | 0;
    $30 = $agg_tmp | 0;
    HEAP32[$30 >> 2] = $29;
    __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay9, $__op_0, $add_ptr13, $__iob, $__fl);
    STACKTOP = __stackBase__;
    return;
   }
   $__op_0 = $__o + ($retval_0_i - $__nar << 2) | 0;
   $28 = $__s | 0;
   $29 = HEAP32[$28 >> 2] | 0;
   $30 = $agg_tmp | 0;
   HEAP32[$30 >> 2] = $29;
   __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $arraydecay9, $__op_0, $add_ptr13, $__iob, $__fl);
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmtb, $__fmte) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmtb = $__fmtb | 0;
 $__fmte = $__fmte | 0;
 var $__p_i_i_i = 0, $ref_tmp22 = 0, $agg_tmp = 0, $agg_tmp23 = 0, $__locale_2_i1_i = 0, $0 = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $11 = 0, $__sbuf__i_i_i114_phi_trans_insert_pre_pre = 0, $__sbuf__i11_i_i = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $_pre82 = 0, $__fmtb_addr_0_ph80 = 0, $23 = 0, $24 = 0, $29 = 0, $cmp_i_i_i = 0, $30 = 0, $40 = 0, $incdec_ptr = 0, $call_i68 = 0, $incdec_ptr16 = 0, $__fmtb_addr_1 = 0, $__cmd_0 = 0, $__opt_0 = 0, $47 = 0, $__fmtb_addr_0_ph_be = 0, $49 = 0, $50 = 0, $__fmtb_addr_0_pn = 0, $__fmtb_addr_2 = 0, $52 = 0, $__fmtb_addr_2_lcssa = 0, $54 = 0, $55 = 0, $60 = 0, $cmp_i_i_i200 = 0, $65 = 0, $__ninp__i_i = 0, $66 = 0, $__einp__i_i = 0, $retval_i_i_0_off0 = 0, $73 = 0, $76 = 0, $__ninp__i_i274 = 0, $77 = 0, $__einp__i_i275 = 0, $retval_i_i268_0_off0 = 0, $call_i291 = 0, $85 = 0, $88 = 0, $89 = 0, $__sbuf__i_i_i114 = 0, $94 = 0, $cmp_i_i_i134 = 0, $__sbuf__i11_i_i137 = 0, $95 = 0, $101 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i = __stackBase__ | 0;
 $ref_tmp22 = __stackBase__ + 16 | 0;
 $agg_tmp = __stackBase__ + 24 | 0;
 $agg_tmp23 = __stackBase__ + 32 | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17816;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4455] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   $11 = $9;
   if (((tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   HEAP32[$__err >> 2] = 0;
   $__sbuf__i_i_i114_phi_trans_insert_pre_pre = $__b | 0;
   L13325 : do {
    if (($__fmtb | 0) == ($__fmte | 0)) {
     label = 11459;
    } else {
     $__sbuf__i11_i_i = $__e | 0;
     $16 = $9;
     $17 = $9 + 8 | 0;
     $18 = $9;
     $19 = $this;
     $20 = $agg_tmp | 0;
     $21 = $agg_tmp23 | 0;
     $22 = $ref_tmp22 | 0;
     $__fmtb_addr_0_ph80 = $__fmtb;
     $_pre82 = 0;
     L13327 : while (1) {
      $23 = $_pre82;
      while (1) {
       if (($23 | 0) != 0) {
        label = 11459;
        break L13325;
       }
       $24 = HEAP32[$__sbuf__i_i_i114_phi_trans_insert_pre_pre >> 2] | 0;
       do {
        if (($24 | 0) == 0) {
         $29 = 0;
        } else {
         if ((HEAP32[$24 + 12 >> 2] | 0) != (HEAP32[$24 + 16 >> 2] | 0)) {
          $29 = $24;
          break;
         }
         if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 36 >> 2] & 255]($24) | 0) != -1) {
          $29 = $24;
          break;
         }
         HEAP32[$__sbuf__i_i_i114_phi_trans_insert_pre_pre >> 2] = 0;
         $29 = 0;
        }
       } while (0);
       $cmp_i_i_i = ($29 | 0) == 0;
       $30 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
       L13337 : do {
        if (($30 | 0) == 0) {
         label = 11410;
        } else {
         do {
          if ((HEAP32[$30 + 12 >> 2] | 0) == (HEAP32[$30 + 16 >> 2] | 0)) {
           if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 255]($30) | 0) != -1) {
            break;
           }
           HEAP32[$__sbuf__i11_i_i >> 2] = 0;
           label = 11410;
           break L13337;
          }
         } while (0);
         if ($cmp_i_i_i) {
          $40 = $30;
         } else {
          label = 11411;
          break L13327;
         }
        }
       } while (0);
       if ((label | 0) == 11410) {
        label = 0;
        if ($cmp_i_i_i) {
         label = 11411;
         break L13327;
        } else {
         $40 = 0;
        }
       }
       if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 63]($11, HEAP8[$__fmtb_addr_0_ph80] | 0, 0) | 0) << 24 >> 24 == 37) {
        label = 11416;
        break;
       }
       $49 = HEAP8[$__fmtb_addr_0_ph80] | 0;
       if ($49 << 24 >> 24 > -1) {
        $50 = HEAP32[$17 >> 2] | 0;
        if ((HEAP16[$50 + ($49 << 24 >> 24 << 1) >> 1] & 8192) != 0) {
         $__fmtb_addr_0_pn = $__fmtb_addr_0_ph80;
         label = 11427;
         break;
        }
       }
       $__ninp__i_i274 = $29 + 12 | 0;
       $77 = HEAP32[$__ninp__i_i274 >> 2] | 0;
       $__einp__i_i275 = $29 + 16 | 0;
       if (($77 | 0) == (HEAP32[$__einp__i_i275 >> 2] | 0)) {
        $retval_i_i268_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 36 >> 2] & 255]($29) | 0) & 255;
       } else {
        $retval_i_i268_0_off0 = HEAP8[$77] | 0;
       }
       $call_i291 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$18 >> 2] | 0) + 12 >> 2] & 63]($11, $retval_i_i268_0_off0) | 0;
       if ($call_i291 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$18 >> 2] | 0) + 12 >> 2] & 63]($11, HEAP8[$__fmtb_addr_0_ph80] | 0) | 0) << 24 >> 24) {
        label = 11454;
        break;
       }
       HEAP32[$__err >> 2] = 4;
       $23 = 4;
      }
      L13355 : do {
       if ((label | 0) == 11454) {
        label = 0;
        $85 = HEAP32[$__ninp__i_i274 >> 2] | 0;
        if (($85 | 0) == (HEAP32[$__einp__i_i275 >> 2] | 0)) {
         $88 = HEAP32[(HEAP32[$29 >> 2] | 0) + 40 >> 2] | 0;
         FUNCTION_TABLE_ii[$88 & 255]($29) | 0;
        } else {
         HEAP32[$__ninp__i_i274 >> 2] = $85 + 1;
        }
        $__fmtb_addr_0_ph_be = $__fmtb_addr_0_ph80 + 1 | 0;
       } else if ((label | 0) == 11427) {
        while (1) {
         label = 0;
         $__fmtb_addr_2 = $__fmtb_addr_0_pn + 1 | 0;
         if (($__fmtb_addr_2 | 0) == ($__fmte | 0)) {
          $__fmtb_addr_2_lcssa = $__fmte;
          break;
         }
         $52 = HEAP8[$__fmtb_addr_2] | 0;
         if ($52 << 24 >> 24 <= -1) {
          $__fmtb_addr_2_lcssa = $__fmtb_addr_2;
          break;
         }
         if ((HEAP16[$50 + ($52 << 24 >> 24 << 1) >> 1] & 8192) == 0) {
          $__fmtb_addr_2_lcssa = $__fmtb_addr_2;
          break;
         } else {
          $__fmtb_addr_0_pn = $__fmtb_addr_2;
          label = 11427;
         }
        }
        $55 = $29;
        $54 = $40;
        while (1) {
         do {
          if (($55 | 0) == 0) {
           $60 = 0;
          } else {
           if ((HEAP32[$55 + 12 >> 2] | 0) != (HEAP32[$55 + 16 >> 2] | 0)) {
            $60 = $55;
            break;
           }
           if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$55 >> 2] | 0) + 36 >> 2] & 255]($55) | 0) != -1) {
            $60 = $55;
            break;
           }
           HEAP32[$__sbuf__i_i_i114_phi_trans_insert_pre_pre >> 2] = 0;
           $60 = 0;
          }
         } while (0);
         $cmp_i_i_i200 = ($60 | 0) == 0;
         do {
          if (($54 | 0) == 0) {
           label = 11440;
          } else {
           if ((HEAP32[$54 + 12 >> 2] | 0) != (HEAP32[$54 + 16 >> 2] | 0)) {
            if ($cmp_i_i_i200) {
             $65 = $54;
             break;
            } else {
             $__fmtb_addr_0_ph_be = $__fmtb_addr_2_lcssa;
             break L13355;
            }
           }
           if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$54 >> 2] | 0) + 36 >> 2] & 255]($54) | 0) == -1) {
            HEAP32[$__sbuf__i11_i_i >> 2] = 0;
            label = 11440;
            break;
           } else {
            if ($cmp_i_i_i200 ^ ($54 | 0) == 0) {
             $65 = $54;
             break;
            } else {
             $__fmtb_addr_0_ph_be = $__fmtb_addr_2_lcssa;
             break L13355;
            }
           }
          }
         } while (0);
         if ((label | 0) == 11440) {
          label = 0;
          if ($cmp_i_i_i200) {
           $__fmtb_addr_0_ph_be = $__fmtb_addr_2_lcssa;
           break L13355;
          } else {
           $65 = 0;
          }
         }
         $__ninp__i_i = $60 + 12 | 0;
         $66 = HEAP32[$__ninp__i_i >> 2] | 0;
         $__einp__i_i = $60 + 16 | 0;
         if (($66 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
          $retval_i_i_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$60 >> 2] | 0) + 36 >> 2] & 255]($60) | 0) & 255;
         } else {
          $retval_i_i_0_off0 = HEAP8[$66] | 0;
         }
         if ($retval_i_i_0_off0 << 24 >> 24 <= -1) {
          $__fmtb_addr_0_ph_be = $__fmtb_addr_2_lcssa;
          break L13355;
         }
         if ((HEAP16[(HEAP32[$17 >> 2] | 0) + ($retval_i_i_0_off0 << 24 >> 24 << 1) >> 1] & 8192) == 0) {
          $__fmtb_addr_0_ph_be = $__fmtb_addr_2_lcssa;
          break L13355;
         }
         $73 = HEAP32[$__ninp__i_i >> 2] | 0;
         if (($73 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
          $76 = HEAP32[(HEAP32[$60 >> 2] | 0) + 40 >> 2] | 0;
          FUNCTION_TABLE_ii[$76 & 255]($60) | 0;
          $55 = $60;
          $54 = $65;
          continue;
         } else {
          HEAP32[$__ninp__i_i >> 2] = $73 + 1;
          $55 = $60;
          $54 = $65;
          continue;
         }
        }
       } else if ((label | 0) == 11416) {
        label = 0;
        $incdec_ptr = $__fmtb_addr_0_ph80 + 1 | 0;
        if (($incdec_ptr | 0) == ($__fmte | 0)) {
         label = 11417;
         break L13327;
        }
        $call_i68 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 63]($11, HEAP8[$incdec_ptr] | 0, 0) | 0;
        if (($call_i68 << 24 >> 24 | 0) == 69 | ($call_i68 << 24 >> 24 | 0) == 48) {
         $incdec_ptr16 = $__fmtb_addr_0_ph80 + 2 | 0;
         if (($incdec_ptr16 | 0) == ($__fmte | 0)) {
          label = 11420;
          break L13327;
         }
         $__opt_0 = $call_i68;
         $__cmd_0 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 63]($11, HEAP8[$incdec_ptr16] | 0, 0) | 0;
         $__fmtb_addr_1 = $incdec_ptr16;
        } else {
         $__opt_0 = 0;
         $__cmd_0 = $call_i68;
         $__fmtb_addr_1 = $incdec_ptr;
        }
        $47 = HEAP32[(HEAP32[$19 >> 2] | 0) + 36 >> 2] | 0;
        HEAP32[$20 >> 2] = $29;
        HEAP32[$21 >> 2] = $40;
        FUNCTION_TABLE_viiiiiiiii[$47 & 7]($ref_tmp22, $this, $agg_tmp, $agg_tmp23, $__iob, $__err, $__tm, $__cmd_0, $__opt_0);
        HEAP32[$__sbuf__i_i_i114_phi_trans_insert_pre_pre >> 2] = HEAP32[$22 >> 2];
        $__fmtb_addr_0_ph_be = $__fmtb_addr_1 + 1 | 0;
       }
      } while (0);
      if (($__fmtb_addr_0_ph_be | 0) == ($__fmte | 0)) {
       label = 11459;
       break L13325;
      }
      $__fmtb_addr_0_ph80 = $__fmtb_addr_0_ph_be;
      $_pre82 = HEAP32[$__err >> 2] | 0;
     }
     if ((label | 0) == 11420) {
      HEAP32[$__err >> 2] = 4;
      $89 = $29;
      break;
     } else if ((label | 0) == 11411) {
      HEAP32[$__err >> 2] = 4;
      $89 = $29;
      break;
     } else if ((label | 0) == 11417) {
      HEAP32[$__err >> 2] = 4;
      $89 = $29;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 11459) {
    $89 = HEAP32[$__sbuf__i_i_i114_phi_trans_insert_pre_pre >> 2] | 0;
   }
   $__sbuf__i_i_i114 = $__b | 0;
   do {
    if (($89 | 0) != 0) {
     if ((HEAP32[$89 + 12 >> 2] | 0) != (HEAP32[$89 + 16 >> 2] | 0)) {
      break;
     }
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$89 >> 2] | 0) + 36 >> 2] & 255]($89) | 0) != -1) {
      break;
     }
     HEAP32[$__sbuf__i_i_i114 >> 2] = 0;
    }
   } while (0);
   $94 = HEAP32[$__sbuf__i_i_i114 >> 2] | 0;
   $cmp_i_i_i134 = ($94 | 0) == 0;
   $__sbuf__i11_i_i137 = $__e | 0;
   $95 = HEAP32[$__sbuf__i11_i_i137 >> 2] | 0;
   L13413 : do {
    if (($95 | 0) == 0) {
     label = 11469;
    } else {
     do {
      if ((HEAP32[$95 + 12 >> 2] | 0) == (HEAP32[$95 + 16 >> 2] | 0)) {
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$95 >> 2] | 0) + 36 >> 2] & 255]($95) | 0) != -1) {
        break;
       }
       HEAP32[$__sbuf__i11_i_i137 >> 2] = 0;
       label = 11469;
       break L13413;
      }
     } while (0);
     if (!$cmp_i_i_i134) {
      break;
     }
     $101 = $agg_result | 0;
     HEAP32[$101 >> 2] = $94;
     STACKTOP = __stackBase__;
     return;
    }
   } while (0);
   do {
    if ((label | 0) == 11469) {
     if ($cmp_i_i_i134) {
      break;
     }
     $101 = $agg_result | 0;
     HEAP32[$101 >> 2] = $94;
     STACKTOP = __stackBase__;
     return;
    }
   } while (0);
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $101 = $agg_result | 0;
   HEAP32[$101 >> 2] = $94;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $agg_tmp_i = 0, $__p_i_i_i = 0, $__locale_2_i1_i = 0, $0 = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $17 = 0, $add_ptr_i = 0, $call_i = 0, $sub_ptr_sub_i = 0, $22 = 0, $23 = 0, $24 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $agg_tmp_i = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 8 | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17816;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4455] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   if (((tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   $17 = HEAP32[$__e >> 2] | 0;
   $add_ptr_i = $this + 8 | 0;
   $call_i = FUNCTION_TABLE_ii[HEAP32[HEAP32[$add_ptr_i >> 2] >> 2] & 255]($add_ptr_i) | 0;
   HEAP32[$agg_tmp_i >> 2] = $17;
   $sub_ptr_sub_i = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $agg_tmp_i, $call_i, $call_i + 168 | 0, $9, $__err, 0) | 0) - $call_i | 0;
   if (($sub_ptr_sub_i | 0) >= 168) {
    $22 = $__b | 0;
    $23 = HEAP32[$22 >> 2] | 0;
    $24 = $agg_result | 0;
    HEAP32[$24 >> 2] = $23;
    STACKTOP = __stackBase__;
    return;
   }
   HEAP32[$__tm + 24 >> 2] = (($sub_ptr_sub_i | 0) / 12 & -1 | 0) % 7 & -1;
   $22 = $__b | 0;
   $23 = HEAP32[$22 >> 2] | 0;
   $24 = $agg_result | 0;
   HEAP32[$24 >> 2] = $23;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $agg_tmp_i = 0, $__p_i_i_i = 0, $__locale_2_i1_i = 0, $0 = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $17 = 0, $add_ptr_i = 0, $call_i = 0, $sub_ptr_sub_i = 0, $22 = 0, $23 = 0, $24 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $agg_tmp_i = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 8 | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17816;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4455] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   if (((tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   $17 = HEAP32[$__e >> 2] | 0;
   $add_ptr_i = $this + 8 | 0;
   $call_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr_i >> 2] | 0) + 4 >> 2] & 255]($add_ptr_i) | 0;
   HEAP32[$agg_tmp_i >> 2] = $17;
   $sub_ptr_sub_i = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $agg_tmp_i, $call_i, $call_i + 288 | 0, $9, $__err, 0) | 0) - $call_i | 0;
   if (($sub_ptr_sub_i | 0) >= 288) {
    $22 = $__b | 0;
    $23 = HEAP32[$22 >> 2] | 0;
    $24 = $agg_result | 0;
    HEAP32[$24 >> 2] = $23;
    STACKTOP = __stackBase__;
    return;
   }
   HEAP32[$__tm + 16 >> 2] = (($sub_ptr_sub_i | 0) / 12 & -1 | 0) % 12 & -1;
   $22 = $__b | 0;
   $23 = HEAP32[$22 >> 2] | 0;
   $24 = $agg_result | 0;
   HEAP32[$24 >> 2] = $23;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $agg_tmp_i = 0, $__p_i_i_i = 0, $__locale_2_i1_i = 0, $0 = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $call_i = 0, $__t_0_i = 0, $22 = 0, $23 = 0, $24 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $agg_tmp_i = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 8 | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17816;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4455] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   if (((tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   HEAP32[$agg_tmp_i >> 2] = HEAP32[$__e >> 2];
   $call_i = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i, $__err, $9, 4) | 0;
   if ((HEAP32[$__err >> 2] & 4 | 0) != 0) {
    $22 = $__b | 0;
    $23 = HEAP32[$22 >> 2] | 0;
    $24 = $agg_result | 0;
    HEAP32[$24 >> 2] = $23;
    STACKTOP = __stackBase__;
    return;
   }
   if (($call_i | 0) < 69) {
    $__t_0_i = $call_i + 2e3 | 0;
   } else {
    $__t_0_i = ($call_i - 69 | 0) >>> 0 < 31 ? $call_i + 1900 | 0 : $call_i;
   }
   HEAP32[$__tm + 20 >> 2] = $__t_0_i - 1900;
   $22 = $__b | 0;
   $23 = HEAP32[$22 >> 2] | 0;
   $24 = $agg_result | 0;
   HEAP32[$24 >> 2] = $23;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmt, $0) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $0 = $0 | 0;
 var $agg_tmp_i206 = 0, $agg_tmp_i194 = 0, $agg_tmp_i182 = 0, $agg_tmp_i170 = 0, $agg_tmp_i158 = 0, $agg_tmp_i146 = 0, $agg_tmp_i134 = 0, $agg_tmp_i122 = 0, $agg_tmp_i111 = 0, $agg_tmp_i105 = 0, $agg_tmp_i89 = 0, $agg_tmp_i = 0, $__p_i_i_i = 0, $ref_tmp6 = 0, $agg_tmp7 = 0, $agg_tmp8 = 0, $ref_tmp16 = 0, $agg_tmp17 = 0, $agg_tmp18 = 0, $ref_tmp20 = 0, $agg_tmp21 = 0, $agg_tmp22 = 0, $agg_tmp36 = 0, $agg_tmp39 = 0, $ref_tmp41 = 0, $agg_tmp42 = 0, $agg_tmp43 = 0, $ref_tmp45 = 0, $agg_tmp46 = 0, $agg_tmp47 = 0, $ref_tmp51 = 0, $agg_tmp52 = 0, $agg_tmp53 = 0, $agg_tmp60 = 0, $agg_tmp61 = 0, $ref_tmp68 = 0, $agg_tmp69 = 0, $agg_tmp70 = 0, $agg_tmp81 = 0, $__locale_2_i1_i = 0, $1 = 0, $sub_i_i = 0, $9 = 0, $10 = 0, $exception_i_i = 0, $12 = 0, $conv = 0, $23 = 0, $add_ptr_i = 0, $call_i = 0, $sub_ptr_sub_i = 0, $29 = 0, $add_ptr_i90 = 0, $call_i92 = 0, $sub_ptr_sub_i97 = 0, $add_ptr = 0, $call5 = 0, $36 = 0, $__s_i_i_i = 0, $42 = 0, $43 = 0, $cond_i_i214 = 0, $cond_i_i124 = 0, $conv_i_i = 0, $cond_i = 0, $tm_mday = 0, $call_i106 = 0, $51 = 0, $53 = 0, $61 = 0, $call_i112 = 0, $73 = 0, $tm_hour26 = 0, $call_i123 = 0, $78 = 0, $call_i135 = 0, $84 = 0, $sub_i = 0, $89 = 0, $call_i159 = 0, $94 = 0, $101 = 0, $109 = 0, $call_i171 = 0, $121 = 0, $122 = 0, $call_i183 = 0, $134 = 0, $136 = 0, $add_ptr64 = 0, $call67 = 0, $145 = 0, $__s_i_i_i152 = 0, $151 = 0, $152 = 0, $cond_i_i174216 = 0, $cond_i_i216 = 0, $conv_i_i236 = 0, $cond_i257 = 0, $call_i195 = 0, $__t_0_i = 0, $call_i207 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $agg_tmp_i206 = __stackBase__ | 0;
 $agg_tmp_i194 = __stackBase__ + 8 | 0;
 $agg_tmp_i182 = __stackBase__ + 16 | 0;
 $agg_tmp_i170 = __stackBase__ + 24 | 0;
 $agg_tmp_i158 = __stackBase__ + 32 | 0;
 $agg_tmp_i146 = __stackBase__ + 40 | 0;
 $agg_tmp_i134 = __stackBase__ + 48 | 0;
 $agg_tmp_i122 = __stackBase__ + 56 | 0;
 $agg_tmp_i111 = __stackBase__ + 64 | 0;
 $agg_tmp_i105 = __stackBase__ + 72 | 0;
 $agg_tmp_i89 = __stackBase__ + 80 | 0;
 $agg_tmp_i = __stackBase__ + 88 | 0;
 $__p_i_i_i = __stackBase__ + 96 | 0;
 $ref_tmp6 = __stackBase__ + 112 | 0;
 $agg_tmp7 = __stackBase__ + 120 | 0;
 $agg_tmp8 = __stackBase__ + 128 | 0;
 $ref_tmp16 = __stackBase__ + 136 | 0;
 $agg_tmp17 = __stackBase__ + 144 | 0;
 $agg_tmp18 = __stackBase__ + 152 | 0;
 $ref_tmp20 = __stackBase__ + 160 | 0;
 $agg_tmp21 = __stackBase__ + 168 | 0;
 $agg_tmp22 = __stackBase__ + 176 | 0;
 $agg_tmp36 = __stackBase__ + 184 | 0;
 $agg_tmp39 = __stackBase__ + 192 | 0;
 $ref_tmp41 = __stackBase__ + 200 | 0;
 $agg_tmp42 = __stackBase__ + 208 | 0;
 $agg_tmp43 = __stackBase__ + 216 | 0;
 $ref_tmp45 = __stackBase__ + 224 | 0;
 $agg_tmp46 = __stackBase__ + 232 | 0;
 $agg_tmp47 = __stackBase__ + 240 | 0;
 $ref_tmp51 = __stackBase__ + 248 | 0;
 $agg_tmp52 = __stackBase__ + 256 | 0;
 $agg_tmp53 = __stackBase__ + 264 | 0;
 $agg_tmp60 = __stackBase__ + 272 | 0;
 $agg_tmp61 = __stackBase__ + 280 | 0;
 $ref_tmp68 = __stackBase__ + 288 | 0;
 $agg_tmp69 = __stackBase__ + 296 | 0;
 $agg_tmp70 = __stackBase__ + 304 | 0;
 $agg_tmp81 = __stackBase__ + 312 | 0;
 HEAP32[$__err >> 2] = 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $1 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17816;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4455] | 0) - 1 | 0;
 $9 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $9 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $10 = HEAP32[$9 + ($sub_i_i << 2) >> 2] | 0;
   if (($10 | 0) == 0) {
    break;
   }
   $12 = $10;
   if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   $conv = $__fmt << 24 >> 24;
   L13489 : do {
    if (($conv | 0) == 110 | ($conv | 0) == 116) {
     HEAP32[$agg_tmp36 >> 2] = HEAP32[$__e >> 2];
     __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE(0, $__b, $agg_tmp36, $__err, $12);
    } else if (($conv | 0) == 100 | ($conv | 0) == 101) {
     $tm_mday = $__tm + 12 | 0;
     HEAP32[$agg_tmp_i105 >> 2] = HEAP32[$__e >> 2];
     $call_i106 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i105, $__err, $12, 2) | 0;
     $51 = HEAP32[$__err >> 2] | 0;
     do {
      if (($51 & 4 | 0) == 0) {
       if (($call_i106 - 1 | 0) >>> 0 >= 31) {
        break;
       }
       HEAP32[$tm_mday >> 2] = $call_i106;
       break L13489;
      }
     } while (0);
     HEAP32[$__err >> 2] = $51 | 4;
    } else if (($conv | 0) == 98 | ($conv | 0) == 66 | ($conv | 0) == 104) {
     $29 = HEAP32[$__e >> 2] | 0;
     $add_ptr_i90 = $this + 8 | 0;
     $call_i92 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr_i90 >> 2] | 0) + 4 >> 2] & 255]($add_ptr_i90) | 0;
     HEAP32[$agg_tmp_i89 >> 2] = $29;
     $sub_ptr_sub_i97 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $agg_tmp_i89, $call_i92, $call_i92 + 288 | 0, $12, $__err, 0) | 0) - $call_i92 | 0;
     if (($sub_ptr_sub_i97 | 0) >= 288) {
      break;
     }
     HEAP32[$__tm + 16 >> 2] = (($sub_ptr_sub_i97 | 0) / 12 & -1 | 0) % 12 & -1;
    } else if (($conv | 0) == 112) {
     HEAP32[$agg_tmp39 >> 2] = HEAP32[$__e >> 2];
     __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 8 | 0, $__b, $agg_tmp39, $__err, $12);
    } else if (($conv | 0) == 109) {
     HEAP32[$agg_tmp_i146 >> 2] = HEAP32[$__e >> 2];
     $sub_i = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i146, $__err, $12, 2) | 0) - 1 | 0;
     $89 = HEAP32[$__err >> 2] | 0;
     if (($89 & 4 | 0) == 0 & ($sub_i | 0) < 12) {
      HEAP32[$__tm + 16 >> 2] = $sub_i;
      break;
     } else {
      HEAP32[$__err >> 2] = $89 | 4;
      break;
     }
    } else if (($conv | 0) == 37) {
     HEAP32[$agg_tmp81 >> 2] = HEAP32[$__e >> 2];
     __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE(0, $__b, $agg_tmp81, $__err, $12);
    } else if (($conv | 0) == 121) {
     HEAP32[$agg_tmp_i194 >> 2] = HEAP32[$__e >> 2];
     $call_i195 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i194, $__err, $12, 4) | 0;
     if ((HEAP32[$__err >> 2] & 4 | 0) != 0) {
      break;
     }
     if (($call_i195 | 0) < 69) {
      $__t_0_i = $call_i195 + 2e3 | 0;
     } else {
      $__t_0_i = ($call_i195 - 69 | 0) >>> 0 < 31 ? $call_i195 + 1900 | 0 : $call_i195;
     }
     HEAP32[$__tm + 20 >> 2] = $__t_0_i - 1900;
    } else if (($conv | 0) == 89) {
     HEAP32[$agg_tmp_i206 >> 2] = HEAP32[$__e >> 2];
     $call_i207 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i206, $__err, $12, 4) | 0;
     if ((HEAP32[$__err >> 2] & 4 | 0) != 0) {
      break;
     }
     HEAP32[$__tm + 20 >> 2] = $call_i207 - 1900;
    } else if (($conv | 0) == 73) {
     $tm_hour26 = $__tm + 8 | 0;
     HEAP32[$agg_tmp_i122 >> 2] = HEAP32[$__e >> 2];
     $call_i123 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i122, $__err, $12, 2) | 0;
     $78 = HEAP32[$__err >> 2] | 0;
     do {
      if (($78 & 4 | 0) == 0) {
       if (($call_i123 - 1 | 0) >>> 0 >= 12) {
        break;
       }
       HEAP32[$tm_hour26 >> 2] = $call_i123;
       break L13489;
      }
     } while (0);
     HEAP32[$__err >> 2] = $78 | 4;
    } else if (($conv | 0) == 106) {
     HEAP32[$agg_tmp_i134 >> 2] = HEAP32[$__e >> 2];
     $call_i135 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i134, $__err, $12, 3) | 0;
     $84 = HEAP32[$__err >> 2] | 0;
     if (($84 & 4 | 0) == 0 & ($call_i135 | 0) < 366) {
      HEAP32[$__tm + 28 >> 2] = $call_i135;
      break;
     } else {
      HEAP32[$__err >> 2] = $84 | 4;
      break;
     }
    } else if (($conv | 0) == 70) {
     $61 = $__b | 0;
     HEAP32[$agg_tmp21 >> 2] = HEAP32[$61 >> 2];
     HEAP32[$agg_tmp22 >> 2] = HEAP32[$__e >> 2];
     __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp20, $this, $agg_tmp21, $agg_tmp22, $__iob, $__err, $__tm, 8928, 8936);
     HEAP32[$61 >> 2] = HEAP32[$ref_tmp20 >> 2];
    } else if (($conv | 0) == 83) {
     HEAP32[$agg_tmp_i170 >> 2] = HEAP32[$__e >> 2];
     $call_i171 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i170, $__err, $12, 2) | 0;
     $121 = HEAP32[$__err >> 2] | 0;
     if (($121 & 4 | 0) == 0 & ($call_i171 | 0) < 61) {
      HEAP32[$__tm >> 2] = $call_i171;
      break;
     } else {
      HEAP32[$__err >> 2] = $121 | 4;
      break;
     }
    } else if (($conv | 0) == 120) {
     $136 = HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0;
     HEAP32[$agg_tmp60 >> 2] = HEAP32[$__b >> 2];
     HEAP32[$agg_tmp61 >> 2] = HEAP32[$__e >> 2];
     FUNCTION_TABLE_viiiiiii[$136 & 127]($agg_result, $this, $agg_tmp60, $agg_tmp61, $__iob, $__err, $__tm);
     STACKTOP = __stackBase__;
     return;
    } else if (($conv | 0) == 88) {
     $add_ptr64 = $this + 8 | 0;
     $call67 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr64 >> 2] | 0) + 24 >> 2] & 255]($add_ptr64) | 0;
     $145 = $__b | 0;
     HEAP32[$agg_tmp69 >> 2] = HEAP32[$145 >> 2];
     HEAP32[$agg_tmp70 >> 2] = HEAP32[$__e >> 2];
     $__s_i_i_i152 = $call67;
     $151 = HEAP8[$call67] | 0;
     if (($151 & 1) == 0) {
      $cond_i_i216 = $__s_i_i_i152 + 1 | 0;
      $cond_i_i174216 = $__s_i_i_i152 + 1 | 0;
     } else {
      $152 = HEAP32[$call67 + 8 >> 2] | 0;
      $cond_i_i216 = $152;
      $cond_i_i174216 = $152;
     }
     $conv_i_i236 = $151 & 255;
     if (($conv_i_i236 & 1 | 0) == 0) {
      $cond_i257 = $conv_i_i236 >>> 1;
     } else {
      $cond_i257 = HEAP32[$call67 + 4 >> 2] | 0;
     }
     __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp68, $this, $agg_tmp69, $agg_tmp70, $__iob, $__err, $__tm, $cond_i_i174216, $cond_i_i216 + $cond_i257 | 0);
     HEAP32[$145 >> 2] = HEAP32[$ref_tmp68 >> 2];
    } else if (($conv | 0) == 77) {
     HEAP32[$agg_tmp_i158 >> 2] = HEAP32[$__e >> 2];
     $call_i159 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i158, $__err, $12, 2) | 0;
     $94 = HEAP32[$__err >> 2] | 0;
     if (($94 & 4 | 0) == 0 & ($call_i159 | 0) < 60) {
      HEAP32[$__tm + 4 >> 2] = $call_i159;
      break;
     } else {
      HEAP32[$__err >> 2] = $94 | 4;
      break;
     }
    } else if (($conv | 0) == 99) {
     $add_ptr = $this + 8 | 0;
     $call5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr >> 2] | 0) + 12 >> 2] & 255]($add_ptr) | 0;
     $36 = $__b | 0;
     HEAP32[$agg_tmp7 >> 2] = HEAP32[$36 >> 2];
     HEAP32[$agg_tmp8 >> 2] = HEAP32[$__e >> 2];
     $__s_i_i_i = $call5;
     $42 = HEAP8[$call5] | 0;
     if (($42 & 1) == 0) {
      $cond_i_i124 = $__s_i_i_i + 1 | 0;
      $cond_i_i214 = $__s_i_i_i + 1 | 0;
     } else {
      $43 = HEAP32[$call5 + 8 >> 2] | 0;
      $cond_i_i124 = $43;
      $cond_i_i214 = $43;
     }
     $conv_i_i = $42 & 255;
     if (($conv_i_i & 1 | 0) == 0) {
      $cond_i = $conv_i_i >>> 1;
     } else {
      $cond_i = HEAP32[$call5 + 4 >> 2] | 0;
     }
     __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp6, $this, $agg_tmp7, $agg_tmp8, $__iob, $__err, $__tm, $cond_i_i214, $cond_i_i124 + $cond_i | 0);
     HEAP32[$36 >> 2] = HEAP32[$ref_tmp6 >> 2];
    } else if (($conv | 0) == 68) {
     $53 = $__b | 0;
     HEAP32[$agg_tmp17 >> 2] = HEAP32[$53 >> 2];
     HEAP32[$agg_tmp18 >> 2] = HEAP32[$__e >> 2];
     __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp16, $this, $agg_tmp17, $agg_tmp18, $__iob, $__err, $__tm, 8936, 8944);
     HEAP32[$53 >> 2] = HEAP32[$ref_tmp16 >> 2];
    } else if (($conv | 0) == 114) {
     $101 = $__b | 0;
     HEAP32[$agg_tmp42 >> 2] = HEAP32[$101 >> 2];
     HEAP32[$agg_tmp43 >> 2] = HEAP32[$__e >> 2];
     __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp41, $this, $agg_tmp42, $agg_tmp43, $__iob, $__err, $__tm, 8912, 8923);
     HEAP32[$101 >> 2] = HEAP32[$ref_tmp41 >> 2];
    } else if (($conv | 0) == 84) {
     $122 = $__b | 0;
     HEAP32[$agg_tmp52 >> 2] = HEAP32[$122 >> 2];
     HEAP32[$agg_tmp53 >> 2] = HEAP32[$__e >> 2];
     __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp51, $this, $agg_tmp52, $agg_tmp53, $__iob, $__err, $__tm, 8896, 8904);
     HEAP32[$122 >> 2] = HEAP32[$ref_tmp51 >> 2];
    } else if (($conv | 0) == 119) {
     HEAP32[$agg_tmp_i182 >> 2] = HEAP32[$__e >> 2];
     $call_i183 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i182, $__err, $12, 1) | 0;
     $134 = HEAP32[$__err >> 2] | 0;
     if (($134 & 4 | 0) == 0 & ($call_i183 | 0) < 7) {
      HEAP32[$__tm + 24 >> 2] = $call_i183;
      break;
     } else {
      HEAP32[$__err >> 2] = $134 | 4;
      break;
     }
    } else if (($conv | 0) == 97 | ($conv | 0) == 65) {
     $23 = HEAP32[$__e >> 2] | 0;
     $add_ptr_i = $this + 8 | 0;
     $call_i = FUNCTION_TABLE_ii[HEAP32[HEAP32[$add_ptr_i >> 2] >> 2] & 255]($add_ptr_i) | 0;
     HEAP32[$agg_tmp_i >> 2] = $23;
     $sub_ptr_sub_i = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $agg_tmp_i, $call_i, $call_i + 168 | 0, $12, $__err, 0) | 0) - $call_i | 0;
     if (($sub_ptr_sub_i | 0) >= 168) {
      break;
     }
     HEAP32[$__tm + 24 >> 2] = (($sub_ptr_sub_i | 0) / 12 & -1 | 0) % 7 & -1;
    } else if (($conv | 0) == 72) {
     HEAP32[$agg_tmp_i111 >> 2] = HEAP32[$__e >> 2];
     $call_i112 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i111, $__err, $12, 2) | 0;
     $73 = HEAP32[$__err >> 2] | 0;
     if (($73 & 4 | 0) == 0 & ($call_i112 | 0) < 24) {
      HEAP32[$__tm + 8 >> 2] = $call_i112;
      break;
     } else {
      HEAP32[$__err >> 2] = $73 | 4;
      break;
     }
    } else if (($conv | 0) == 82) {
     $109 = $__b | 0;
     HEAP32[$agg_tmp46 >> 2] = HEAP32[$109 >> 2];
     HEAP32[$agg_tmp47 >> 2] = HEAP32[$__e >> 2];
     __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp45, $this, $agg_tmp46, $agg_tmp47, $__iob, $__err, $__tm, 8904, 8909);
     HEAP32[$109 >> 2] = HEAP32[$ref_tmp45 >> 2];
    } else {
     HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    }
   } while (0);
   HEAP32[$agg_result >> 2] = HEAP32[$__b >> 2];
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $__tab__i = 0, $0 = 0, $5 = 0, $cmp_i_i_i = 0, $6 = 0, $cmp_i31_i_i16 = 0, $11 = 0, $12 = 0, $13 = 0, $retval_i_i_0_off0 = 0, $20 = 0, $__ninp__i_i19 = 0, $21 = 0, $24 = 0, $cmp_i31_i_i14 = 0, $25 = 0, $26 = 0, $31 = 0, $cmp_i_i_i67 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $__tab__i = $__ct + 8 | 0;
 L13570 : while (1) {
  $0 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
  do {
   if (($0 | 0) == 0) {
    $5 = 0;
   } else {
    if ((HEAP32[$0 + 12 >> 2] | 0) != (HEAP32[$0 + 16 >> 2] | 0)) {
     $5 = $0;
     break;
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 255]($0) | 0) == -1) {
     HEAP32[$__sbuf__i_i_i >> 2] = 0;
     $5 = 0;
     break;
    } else {
     $5 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
     break;
    }
   }
  } while (0);
  $cmp_i_i_i = ($5 | 0) == 0;
  $6 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  L13579 : do {
   if (($6 | 0) == 0) {
    label = 11614;
   } else {
    do {
     if ((HEAP32[$6 + 12 >> 2] | 0) == (HEAP32[$6 + 16 >> 2] | 0)) {
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 36 >> 2] & 255]($6) | 0) != -1) {
       break;
      }
      HEAP32[$__sbuf__i11_i_i >> 2] = 0;
      label = 11614;
      break L13579;
     }
    } while (0);
    if ($cmp_i_i_i) {
     $11 = $6;
     $cmp_i31_i_i16 = 0;
    } else {
     $25 = $6;
     $cmp_i31_i_i14 = 0;
     break L13570;
    }
   }
  } while (0);
  if ((label | 0) == 11614) {
   label = 0;
   if ($cmp_i_i_i) {
    $25 = 0;
    $cmp_i31_i_i14 = 1;
    break;
   } else {
    $11 = 0;
    $cmp_i31_i_i16 = 1;
   }
  }
  $12 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
  $13 = HEAP32[$12 + 12 >> 2] | 0;
  if (($13 | 0) == (HEAP32[$12 + 16 >> 2] | 0)) {
   $retval_i_i_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 255]($12) | 0) & 255;
  } else {
   $retval_i_i_0_off0 = HEAP8[$13] | 0;
  }
  if ($retval_i_i_0_off0 << 24 >> 24 <= -1) {
   $25 = $11;
   $cmp_i31_i_i14 = $cmp_i31_i_i16;
   break;
  }
  if ((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($retval_i_i_0_off0 << 24 >> 24 << 1) >> 1] & 8192) == 0) {
   $25 = $11;
   $cmp_i31_i_i14 = $cmp_i31_i_i16;
   break;
  }
  $20 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
  $__ninp__i_i19 = $20 + 12 | 0;
  $21 = HEAP32[$__ninp__i_i19 >> 2] | 0;
  if (($21 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) {
   $24 = HEAP32[(HEAP32[$20 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$24 & 255]($20) | 0;
   continue;
  } else {
   HEAP32[$__ninp__i_i19 >> 2] = $21 + 1;
   continue;
  }
 }
 $26 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 do {
  if (($26 | 0) == 0) {
   $31 = 0;
  } else {
   if ((HEAP32[$26 + 12 >> 2] | 0) != (HEAP32[$26 + 16 >> 2] | 0)) {
    $31 = $26;
    break;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 255]($26) | 0) == -1) {
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $31 = 0;
    break;
   } else {
    $31 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
    break;
   }
  }
 } while (0);
 $cmp_i_i_i67 = ($31 | 0) == 0;
 do {
  if ($cmp_i31_i_i14) {
   label = 11633;
  } else {
   if ((HEAP32[$25 + 12 >> 2] | 0) != (HEAP32[$25 + 16 >> 2] | 0)) {
    if (!($cmp_i_i_i67 ^ ($25 | 0) == 0)) {
     break;
    }
    STACKTOP = __stackBase__;
    return;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] & 255]($25) | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 11633;
    break;
   }
   if (!$cmp_i_i_i67) {
    break;
   }
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 do {
  if ((label | 0) == 11633) {
   if ($cmp_i_i_i67) {
    break;
   }
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $agg_tmp = 0, $add_ptr = 0, $call = 0, $conv_i_i = 0, $cond_i = 0, $conv_i_i35 = 0, $cond_i56 = 0, $call6 = 0, $sub_ptr_sub = 0, $14 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $agg_tmp = __stackBase__ | 0;
 $add_ptr = $this + 8 | 0;
 $call = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr >> 2] | 0) + 8 >> 2] & 255]($add_ptr) | 0;
 $conv_i_i = HEAPU8[$call] | 0;
 if (($conv_i_i & 1 | 0) == 0) {
  $cond_i = $conv_i_i >>> 1;
 } else {
  $cond_i = HEAP32[$call + 4 >> 2] | 0;
 }
 $conv_i_i35 = HEAPU8[$call + 12 | 0] | 0;
 if (($conv_i_i35 & 1 | 0) == 0) {
  $cond_i56 = $conv_i_i35 >>> 1;
 } else {
  $cond_i56 = HEAP32[$call + 16 >> 2] | 0;
 }
 if (($cond_i | 0) == (-$cond_i56 | 0)) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  STACKTOP = __stackBase__;
  return;
 }
 HEAP32[$agg_tmp >> 2] = HEAP32[$__e >> 2];
 $call6 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $agg_tmp, $call, $call + 24 | 0, $__ct, $__err, 0) | 0;
 $sub_ptr_sub = $call6 - $call | 0;
 do {
  if (($call6 | 0) == ($call | 0)) {
   if ((HEAP32[$__h >> 2] | 0) != 12) {
    break;
   }
   HEAP32[$__h >> 2] = 0;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 if (($sub_ptr_sub | 0) != 12) {
  STACKTOP = __stackBase__;
  return;
 }
 $14 = HEAP32[$__h >> 2] | 0;
 if (($14 | 0) >= 12) {
  STACKTOP = __stackBase__;
  return;
 }
 HEAP32[$__h >> 2] = $14 + 12;
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $__sbuf__i_i_i = 0, $0 = 0, $5 = 0, $cmp_i_i_i = 0, $__sbuf__i11_i_i = 0, $6 = 0, $cmp_i31_i_i13 = 0, $12 = 0, $13 = 0, $14 = 0, $retval_i_i_0_off0 = 0, $22 = 0, $__ninp__i_i24 = 0, $23 = 0, $26 = 0, $27 = 0, $32 = 0, $cmp_i_i_i72 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__sbuf__i_i_i = $__b | 0;
 $0 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 do {
  if (($0 | 0) == 0) {
   $5 = 0;
  } else {
   if ((HEAP32[$0 + 12 >> 2] | 0) != (HEAP32[$0 + 16 >> 2] | 0)) {
    $5 = $0;
    break;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 255]($0) | 0) == -1) {
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $5 = 0;
    break;
   } else {
    $5 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
    break;
   }
  }
 } while (0);
 $cmp_i_i_i = ($5 | 0) == 0;
 $__sbuf__i11_i_i = $__e | 0;
 $6 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
 L13653 : do {
  if (($6 | 0) == 0) {
   label = 11671;
  } else {
   do {
    if ((HEAP32[$6 + 12 >> 2] | 0) == (HEAP32[$6 + 16 >> 2] | 0)) {
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 36 >> 2] & 255]($6) | 0) != -1) {
      break;
     }
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 11671;
     break L13653;
    }
   } while (0);
   if ($cmp_i_i_i) {
    $12 = $6;
    $cmp_i31_i_i13 = 0;
   } else {
    label = 11672;
   }
  }
 } while (0);
 if ((label | 0) == 11671) {
  if ($cmp_i_i_i) {
   label = 11672;
  } else {
   $12 = 0;
   $cmp_i31_i_i13 = 1;
  }
 }
 if ((label | 0) == 11672) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  STACKTOP = __stackBase__;
  return;
 }
 $13 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 $14 = HEAP32[$13 + 12 >> 2] | 0;
 if (($14 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) {
  $retval_i_i_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 255]($13) | 0) & 255;
 } else {
  $retval_i_i_0_off0 = HEAP8[$14] | 0;
 }
 if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 36 >> 2] & 63]($__ct, $retval_i_i_0_off0, 0) | 0) << 24 >> 24 != 37) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  STACKTOP = __stackBase__;
  return;
 }
 $22 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 $__ninp__i_i24 = $22 + 12 | 0;
 $23 = HEAP32[$__ninp__i_i24 >> 2] | 0;
 if (($23 | 0) == (HEAP32[$22 + 16 >> 2] | 0)) {
  $26 = HEAP32[(HEAP32[$22 >> 2] | 0) + 40 >> 2] | 0;
  FUNCTION_TABLE_ii[$26 & 255]($22) | 0;
 } else {
  HEAP32[$__ninp__i_i24 >> 2] = $23 + 1;
 }
 $27 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 do {
  if (($27 | 0) == 0) {
   $32 = 0;
  } else {
   if ((HEAP32[$27 + 12 >> 2] | 0) != (HEAP32[$27 + 16 >> 2] | 0)) {
    $32 = $27;
    break;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] & 255]($27) | 0) == -1) {
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $32 = 0;
    break;
   } else {
    $32 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
    break;
   }
  }
 } while (0);
 $cmp_i_i_i72 = ($32 | 0) == 0;
 do {
  if ($cmp_i31_i_i13) {
   label = 11691;
  } else {
   if ((HEAP32[$12 + 12 >> 2] | 0) != (HEAP32[$12 + 16 >> 2] | 0)) {
    if (!($cmp_i_i_i72 ^ ($12 | 0) == 0)) {
     break;
    }
    STACKTOP = __stackBase__;
    return;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 255]($12) | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 11691;
    break;
   }
   if (!$cmp_i_i_i72) {
    break;
   }
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 do {
  if ((label | 0) == 11691) {
   if ($cmp_i_i_i72) {
    break;
   }
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $__e, $__err, $__ct, $__n) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 $__n = $__n | 0;
 var $__sbuf__i_i_i = 0, $0 = 0, $5 = 0, $cmp_i_i_i = 0, $__sbuf__i11_i_i = 0, $6 = 0, $12 = 0, $13 = 0, $14 = 0, $retval_i_i_0_off0 = 0, $__tab__i = 0, $22 = 0, $conv = 0, $24 = 0, $__ninp__i_i38 = 0, $25 = 0, $28 = 0, $29 = 0, $__n_addr_0_in = 0, $__r_0_in = 0, $__r_0 = 0, $__n_addr_0 = 0, $30 = 0, $35 = 0, $cmp_i_i_i86 = 0, $40 = 0, $41 = 0, $42 = 0, $cmp_i31_i_i110 = 0, $43 = 0, $retval_i_i114_0_off0 = 0, $add = 0, $51 = 0, $__ninp__i_i163 = 0, $52 = 0, $55 = 0, $60 = 0, $cmp_i_i_i213 = 0, $retval_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__sbuf__i_i_i = $__b | 0;
 $0 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 do {
  if (($0 | 0) == 0) {
   $5 = 0;
  } else {
   if ((HEAP32[$0 + 12 >> 2] | 0) != (HEAP32[$0 + 16 >> 2] | 0)) {
    $5 = $0;
    break;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 255]($0) | 0) == -1) {
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $5 = 0;
    break;
   } else {
    $5 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
    break;
   }
  }
 } while (0);
 $cmp_i_i_i = ($5 | 0) == 0;
 $__sbuf__i11_i_i = $__e | 0;
 $6 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
 L13707 : do {
  if (($6 | 0) == 0) {
   label = 11711;
  } else {
   do {
    if ((HEAP32[$6 + 12 >> 2] | 0) == (HEAP32[$6 + 16 >> 2] | 0)) {
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 36 >> 2] & 255]($6) | 0) != -1) {
      break;
     }
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 11711;
     break L13707;
    }
   } while (0);
   if ($cmp_i_i_i) {
    $12 = $6;
   } else {
    label = 11712;
   }
  }
 } while (0);
 if ((label | 0) == 11711) {
  if ($cmp_i_i_i) {
   label = 11712;
  } else {
   $12 = 0;
  }
 }
 if ((label | 0) == 11712) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $13 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 $14 = HEAP32[$13 + 12 >> 2] | 0;
 if (($14 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) {
  $retval_i_i_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 255]($13) | 0) & 255;
 } else {
  $retval_i_i_0_off0 = HEAP8[$14] | 0;
 }
 do {
  if ($retval_i_i_0_off0 << 24 >> 24 > -1) {
   $__tab__i = $__ct + 8 | 0;
   if ((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($retval_i_i_0_off0 << 24 >> 24 << 1) >> 1] & 2048) == 0) {
    break;
   }
   $22 = $__ct;
   $conv = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$22 >> 2] | 0) + 36 >> 2] & 63]($__ct, $retval_i_i_0_off0, 0) | 0) << 24 >> 24;
   $24 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   $__ninp__i_i38 = $24 + 12 | 0;
   $25 = HEAP32[$__ninp__i_i38 >> 2] | 0;
   if (($25 | 0) == (HEAP32[$24 + 16 >> 2] | 0)) {
    $28 = HEAP32[(HEAP32[$24 >> 2] | 0) + 40 >> 2] | 0;
    FUNCTION_TABLE_ii[$28 & 255]($24) | 0;
    $__r_0_in = $conv;
    $__n_addr_0_in = $__n;
    $29 = $12;
   } else {
    HEAP32[$__ninp__i_i38 >> 2] = $25 + 1;
    $__r_0_in = $conv;
    $__n_addr_0_in = $__n;
    $29 = $12;
   }
   while (1) {
    $__r_0 = $__r_0_in - 48 | 0;
    $__n_addr_0 = $__n_addr_0_in - 1 | 0;
    $30 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
    do {
     if (($30 | 0) == 0) {
      $35 = 0;
     } else {
      if ((HEAP32[$30 + 12 >> 2] | 0) != (HEAP32[$30 + 16 >> 2] | 0)) {
       $35 = $30;
       break;
      }
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 255]($30) | 0) == -1) {
       HEAP32[$__sbuf__i_i_i >> 2] = 0;
       $35 = 0;
       break;
      } else {
       $35 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
       break;
      }
     }
    } while (0);
    $cmp_i_i_i86 = ($35 | 0) == 0;
    if (($29 | 0) == 0) {
     $42 = $35;
     $41 = 0;
    } else {
     do {
      if ((HEAP32[$29 + 12 >> 2] | 0) == (HEAP32[$29 + 16 >> 2] | 0)) {
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 36 >> 2] & 255]($29) | 0) != -1) {
        $40 = $29;
        break;
       }
       HEAP32[$__sbuf__i11_i_i >> 2] = 0;
       $40 = 0;
      } else {
       $40 = $29;
      }
     } while (0);
     $42 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
     $41 = $40;
    }
    $cmp_i31_i_i110 = ($41 | 0) == 0;
    if (!(($cmp_i_i_i86 ^ $cmp_i31_i_i110) & ($__n_addr_0 | 0) > 0)) {
     label = 11741;
     break;
    }
    $43 = HEAP32[$42 + 12 >> 2] | 0;
    if (($43 | 0) == (HEAP32[$42 + 16 >> 2] | 0)) {
     $retval_i_i114_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$42 >> 2] | 0) + 36 >> 2] & 255]($42) | 0) & 255;
    } else {
     $retval_i_i114_0_off0 = HEAP8[$43] | 0;
    }
    if ($retval_i_i114_0_off0 << 24 >> 24 <= -1) {
     $retval_0 = $__r_0;
     label = 11755;
     break;
    }
    if ((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($retval_i_i114_0_off0 << 24 >> 24 << 1) >> 1] & 2048) == 0) {
     $retval_0 = $__r_0;
     label = 11757;
     break;
    }
    $add = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$22 >> 2] | 0) + 36 >> 2] & 63]($__ct, $retval_i_i114_0_off0, 0) | 0) << 24 >> 24) + ($__r_0 * 10 & -1) | 0;
    $51 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
    $__ninp__i_i163 = $51 + 12 | 0;
    $52 = HEAP32[$__ninp__i_i163 >> 2] | 0;
    if (($52 | 0) == (HEAP32[$51 + 16 >> 2] | 0)) {
     $55 = HEAP32[(HEAP32[$51 >> 2] | 0) + 40 >> 2] | 0;
     FUNCTION_TABLE_ii[$55 & 255]($51) | 0;
     $__r_0_in = $add;
     $__n_addr_0_in = $__n_addr_0;
     $29 = $41;
     continue;
    } else {
     HEAP32[$__ninp__i_i163 >> 2] = $52 + 1;
     $__r_0_in = $add;
     $__n_addr_0_in = $__n_addr_0;
     $29 = $41;
     continue;
    }
   }
   if ((label | 0) == 11757) {
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   } else if ((label | 0) == 11741) {
    do {
     if (($42 | 0) == 0) {
      $60 = 0;
     } else {
      if ((HEAP32[$42 + 12 >> 2] | 0) != (HEAP32[$42 + 16 >> 2] | 0)) {
       $60 = $42;
       break;
      }
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$42 >> 2] | 0) + 36 >> 2] & 255]($42) | 0) == -1) {
       HEAP32[$__sbuf__i_i_i >> 2] = 0;
       $60 = 0;
       break;
      } else {
       $60 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
       break;
      }
     }
    } while (0);
    $cmp_i_i_i213 = ($60 | 0) == 0;
    L13765 : do {
     if ($cmp_i31_i_i110) {
      label = 11751;
     } else {
      do {
       if ((HEAP32[$41 + 12 >> 2] | 0) == (HEAP32[$41 + 16 >> 2] | 0)) {
        if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 36 >> 2] & 255]($41) | 0) != -1) {
         break;
        }
        HEAP32[$__sbuf__i11_i_i >> 2] = 0;
        label = 11751;
        break L13765;
       }
      } while (0);
      if ($cmp_i_i_i213) {
       $retval_0 = $__r_0;
      } else {
       break;
      }
      STACKTOP = __stackBase__;
      return $retval_0 | 0;
     }
    } while (0);
    do {
     if ((label | 0) == 11751) {
      if ($cmp_i_i_i213) {
       break;
      } else {
       $retval_0 = $__r_0;
      }
      STACKTOP = __stackBase__;
      return $retval_0 | 0;
     }
    } while (0);
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    $retval_0 = $__r_0;
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   } else if ((label | 0) == 11755) {
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   }
  }
 } while (0);
 HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
 $retval_0 = 0;
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this | 0;
 return 2;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $agg_tmp = 0, $agg_tmp2 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $agg_tmp = __stackBase__ | 0;
 $agg_tmp2 = __stackBase__ + 8 | 0;
 HEAP32[$agg_tmp >> 2] = HEAP32[$__b >> 2];
 HEAP32[$agg_tmp2 >> 2] = HEAP32[$__e >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg_result, $this, $agg_tmp, $agg_tmp2, $__iob, $__err, $__tm, 8864, 8896);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $agg_tmp = 0, $agg_tmp2 = 0, $add_ptr = 0, $call = 0, $8 = 0, $9 = 0, $cond_i_i4 = 0, $cond_i_i47 = 0, $conv_i_i = 0, $cond_i = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $agg_tmp = __stackBase__ | 0;
 $agg_tmp2 = __stackBase__ + 8 | 0;
 $add_ptr = $this + 8 | 0;
 $call = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr >> 2] | 0) + 20 >> 2] & 255]($add_ptr) | 0;
 HEAP32[$agg_tmp >> 2] = HEAP32[$__b >> 2];
 HEAP32[$agg_tmp2 >> 2] = HEAP32[$__e >> 2];
 $8 = HEAP8[$call] | 0;
 if (($8 & 1) == 0) {
  $cond_i_i47 = $call + 4 | 0;
  $cond_i_i4 = $call + 4 | 0;
 } else {
  $9 = HEAP32[$call + 8 >> 2] | 0;
  $cond_i_i47 = $9;
  $cond_i_i4 = $9;
 }
 $conv_i_i = $8 & 255;
 if (($conv_i_i & 1 | 0) == 0) {
  $cond_i = $conv_i_i >>> 1;
 } else {
  $cond_i = HEAP32[$call + 4 >> 2] | 0;
 }
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg_result, $this, $agg_tmp, $agg_tmp2, $__iob, $__err, $__tm, $cond_i_i4, $cond_i_i47 + ($cond_i << 2) | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmtb, $__fmte) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmtb = $__fmtb | 0;
 $__fmte = $__fmte | 0;
 var $__p_i_i_i = 0, $ref_tmp22 = 0, $agg_tmp = 0, $agg_tmp23 = 0, $__locale_2_i1_i = 0, $0 = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $11 = 0, $__sbuf__i_i_i243_phi_trans_insert_pre_pre = 0, $__sbuf__i11_i_i = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $_pre66 = 0, $__fmtb_addr_0_ph64 = 0, $23 = 0, $24 = 0, $25 = 0, $retval_i_i_i_i_0 = 0, $30 = 0, $cmp_i_i_i = 0, $31 = 0, $32 = 0, $retval_i_i7_i_i_0 = 0, $42 = 0, $incdec_ptr = 0, $call_i66 = 0, $incdec_ptr16 = 0, $__fmtb_addr_1 = 0, $__cmd_0 = 0, $__opt_0 = 0, $49 = 0, $__fmtb_addr_0_ph_be = 0, $__fmtb_addr_0_pn = 0, $__fmtb_addr_2 = 0, $__fmtb_addr_2_lcssa = 0, $55 = 0, $56 = 0, $57 = 0, $retval_i_i_i_i96_0 = 0, $62 = 0, $cmp_i_i_i124 = 0, $63 = 0, $retval_i_i7_i_i90_0 = 0, $68 = 0, $__ninp__i_i = 0, $69 = 0, $__einp__i_i = 0, $retval_i_i_0 = 0, $75 = 0, $78 = 0, $__ninp__i_i185 = 0, $79 = 0, $__einp__i_i186 = 0, $retval_i_i179_0 = 0, $call_i200 = 0, $87 = 0, $90 = 0, $91 = 0, $__sbuf__i_i_i243 = 0, $92 = 0, $retval_i_i_i_i234_0 = 0, $97 = 0, $cmp_i_i_i262 = 0, $__sbuf__i11_i_i265 = 0, $98 = 0, $99 = 0, $retval_i_i7_i_i228_0 = 0, $105 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i = __stackBase__ | 0;
 $ref_tmp22 = __stackBase__ + 16 | 0;
 $agg_tmp = __stackBase__ + 24 | 0;
 $agg_tmp23 = __stackBase__ + 32 | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17808;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4453] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   $11 = $9;
   if (((tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   HEAP32[$__err >> 2] = 0;
   $__sbuf__i_i_i243_phi_trans_insert_pre_pre = $__b | 0;
   L13803 : do {
    if (($__fmtb | 0) == ($__fmte | 0)) {
     label = 11846;
    } else {
     $__sbuf__i11_i_i = $__e | 0;
     $16 = $9;
     $17 = $9;
     $18 = $9;
     $19 = $this;
     $20 = $agg_tmp | 0;
     $21 = $agg_tmp23 | 0;
     $22 = $ref_tmp22 | 0;
     $__fmtb_addr_0_ph64 = $__fmtb;
     $_pre66 = 0;
     L13805 : while (1) {
      $23 = $_pre66;
      while (1) {
       if (($23 | 0) != 0) {
        label = 11846;
        break L13803;
       }
       $24 = HEAP32[$__sbuf__i_i_i243_phi_trans_insert_pre_pre >> 2] | 0;
       do {
        if (($24 | 0) == 0) {
         $30 = 0;
        } else {
         $25 = HEAP32[$24 + 12 >> 2] | 0;
         if (($25 | 0) == (HEAP32[$24 + 16 >> 2] | 0)) {
          $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 36 >> 2] & 255]($24) | 0;
         } else {
          $retval_i_i_i_i_0 = HEAP32[$25 >> 2] | 0;
         }
         if (($retval_i_i_i_i_0 | 0) != -1) {
          $30 = $24;
          break;
         }
         HEAP32[$__sbuf__i_i_i243_phi_trans_insert_pre_pre >> 2] = 0;
         $30 = 0;
        }
       } while (0);
       $cmp_i_i_i = ($30 | 0) == 0;
       $31 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
       do {
        if (($31 | 0) == 0) {
         label = 11796;
        } else {
         $32 = HEAP32[$31 + 12 >> 2] | 0;
         if (($32 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) {
          $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 255]($31) | 0;
         } else {
          $retval_i_i7_i_i_0 = HEAP32[$32 >> 2] | 0;
         }
         if (($retval_i_i7_i_i_0 | 0) == -1) {
          HEAP32[$__sbuf__i11_i_i >> 2] = 0;
          label = 11796;
          break;
         } else {
          if ($cmp_i_i_i ^ ($31 | 0) == 0) {
           $42 = $31;
           break;
          } else {
           label = 11798;
           break L13805;
          }
         }
        }
       } while (0);
       if ((label | 0) == 11796) {
        label = 0;
        if ($cmp_i_i_i) {
         label = 11798;
         break L13805;
        } else {
         $42 = 0;
        }
       }
       if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$16 >> 2] | 0) + 52 >> 2] & 63]($11, HEAP32[$__fmtb_addr_0_ph64 >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
        label = 11803;
        break;
       }
       if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$17 >> 2] | 0) + 12 >> 2] & 63]($11, 8192, HEAP32[$__fmtb_addr_0_ph64 >> 2] | 0) | 0) {
        $__fmtb_addr_0_pn = $__fmtb_addr_0_ph64;
        label = 11813;
        break;
       }
       $__ninp__i_i185 = $30 + 12 | 0;
       $79 = HEAP32[$__ninp__i_i185 >> 2] | 0;
       $__einp__i_i186 = $30 + 16 | 0;
       if (($79 | 0) == (HEAP32[$__einp__i_i186 >> 2] | 0)) {
        $retval_i_i179_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 255]($30) | 0;
       } else {
        $retval_i_i179_0 = HEAP32[$79 >> 2] | 0;
       }
       $call_i200 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$18 >> 2] | 0) + 28 >> 2] & 63]($11, $retval_i_i179_0) | 0;
       if (($call_i200 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$18 >> 2] | 0) + 28 >> 2] & 63]($11, HEAP32[$__fmtb_addr_0_ph64 >> 2] | 0) | 0)) {
        label = 11841;
        break;
       }
       HEAP32[$__err >> 2] = 4;
       $23 = 4;
      }
      L13837 : do {
       if ((label | 0) == 11813) {
        while (1) {
         label = 0;
         $__fmtb_addr_2 = $__fmtb_addr_0_pn + 4 | 0;
         if (($__fmtb_addr_2 | 0) == ($__fmte | 0)) {
          $__fmtb_addr_2_lcssa = $__fmte;
          break;
         }
         if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$17 >> 2] | 0) + 12 >> 2] & 63]($11, 8192, HEAP32[$__fmtb_addr_2 >> 2] | 0) | 0) {
          $__fmtb_addr_0_pn = $__fmtb_addr_2;
          label = 11813;
         } else {
          $__fmtb_addr_2_lcssa = $__fmtb_addr_2;
          break;
         }
        }
        $56 = $30;
        $55 = $42;
        while (1) {
         do {
          if (($56 | 0) == 0) {
           $62 = 0;
          } else {
           $57 = HEAP32[$56 + 12 >> 2] | 0;
           if (($57 | 0) == (HEAP32[$56 + 16 >> 2] | 0)) {
            $retval_i_i_i_i96_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$56 >> 2] | 0) + 36 >> 2] & 255]($56) | 0;
           } else {
            $retval_i_i_i_i96_0 = HEAP32[$57 >> 2] | 0;
           }
           if (($retval_i_i_i_i96_0 | 0) != -1) {
            $62 = $56;
            break;
           }
           HEAP32[$__sbuf__i_i_i243_phi_trans_insert_pre_pre >> 2] = 0;
           $62 = 0;
          }
         } while (0);
         $cmp_i_i_i124 = ($62 | 0) == 0;
         do {
          if (($55 | 0) == 0) {
           label = 11828;
          } else {
           $63 = HEAP32[$55 + 12 >> 2] | 0;
           if (($63 | 0) == (HEAP32[$55 + 16 >> 2] | 0)) {
            $retval_i_i7_i_i90_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$55 >> 2] | 0) + 36 >> 2] & 255]($55) | 0;
           } else {
            $retval_i_i7_i_i90_0 = HEAP32[$63 >> 2] | 0;
           }
           if (($retval_i_i7_i_i90_0 | 0) == -1) {
            HEAP32[$__sbuf__i11_i_i >> 2] = 0;
            label = 11828;
            break;
           } else {
            if ($cmp_i_i_i124 ^ ($55 | 0) == 0) {
             $68 = $55;
             break;
            } else {
             $__fmtb_addr_0_ph_be = $__fmtb_addr_2_lcssa;
             break L13837;
            }
           }
          }
         } while (0);
         if ((label | 0) == 11828) {
          label = 0;
          if ($cmp_i_i_i124) {
           $__fmtb_addr_0_ph_be = $__fmtb_addr_2_lcssa;
           break L13837;
          } else {
           $68 = 0;
          }
         }
         $__ninp__i_i = $62 + 12 | 0;
         $69 = HEAP32[$__ninp__i_i >> 2] | 0;
         $__einp__i_i = $62 + 16 | 0;
         if (($69 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
          $retval_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$62 >> 2] | 0) + 36 >> 2] & 255]($62) | 0;
         } else {
          $retval_i_i_0 = HEAP32[$69 >> 2] | 0;
         }
         if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$17 >> 2] | 0) + 12 >> 2] & 63]($11, 8192, $retval_i_i_0) | 0)) {
          $__fmtb_addr_0_ph_be = $__fmtb_addr_2_lcssa;
          break L13837;
         }
         $75 = HEAP32[$__ninp__i_i >> 2] | 0;
         if (($75 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
          $78 = HEAP32[(HEAP32[$62 >> 2] | 0) + 40 >> 2] | 0;
          FUNCTION_TABLE_ii[$78 & 255]($62) | 0;
          $56 = $62;
          $55 = $68;
          continue;
         } else {
          HEAP32[$__ninp__i_i >> 2] = $75 + 4;
          $56 = $62;
          $55 = $68;
          continue;
         }
        }
       } else if ((label | 0) == 11803) {
        label = 0;
        $incdec_ptr = $__fmtb_addr_0_ph64 + 4 | 0;
        if (($incdec_ptr | 0) == ($__fmte | 0)) {
         label = 11804;
         break L13805;
        }
        $call_i66 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$16 >> 2] | 0) + 52 >> 2] & 63]($11, HEAP32[$incdec_ptr >> 2] | 0, 0) | 0;
        if (($call_i66 << 24 >> 24 | 0) == 69 | ($call_i66 << 24 >> 24 | 0) == 48) {
         $incdec_ptr16 = $__fmtb_addr_0_ph64 + 8 | 0;
         if (($incdec_ptr16 | 0) == ($__fmte | 0)) {
          label = 11807;
          break L13805;
         }
         $__opt_0 = $call_i66;
         $__cmd_0 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$16 >> 2] | 0) + 52 >> 2] & 63]($11, HEAP32[$incdec_ptr16 >> 2] | 0, 0) | 0;
         $__fmtb_addr_1 = $incdec_ptr16;
        } else {
         $__opt_0 = 0;
         $__cmd_0 = $call_i66;
         $__fmtb_addr_1 = $incdec_ptr;
        }
        $49 = HEAP32[(HEAP32[$19 >> 2] | 0) + 36 >> 2] | 0;
        HEAP32[$20 >> 2] = $30;
        HEAP32[$21 >> 2] = $42;
        FUNCTION_TABLE_viiiiiiiii[$49 & 7]($ref_tmp22, $this, $agg_tmp, $agg_tmp23, $__iob, $__err, $__tm, $__cmd_0, $__opt_0);
        HEAP32[$__sbuf__i_i_i243_phi_trans_insert_pre_pre >> 2] = HEAP32[$22 >> 2];
        $__fmtb_addr_0_ph_be = $__fmtb_addr_1 + 4 | 0;
       } else if ((label | 0) == 11841) {
        label = 0;
        $87 = HEAP32[$__ninp__i_i185 >> 2] | 0;
        if (($87 | 0) == (HEAP32[$__einp__i_i186 >> 2] | 0)) {
         $90 = HEAP32[(HEAP32[$30 >> 2] | 0) + 40 >> 2] | 0;
         FUNCTION_TABLE_ii[$90 & 255]($30) | 0;
        } else {
         HEAP32[$__ninp__i_i185 >> 2] = $87 + 4;
        }
        $__fmtb_addr_0_ph_be = $__fmtb_addr_0_ph64 + 4 | 0;
       }
      } while (0);
      if (($__fmtb_addr_0_ph_be | 0) == ($__fmte | 0)) {
       label = 11846;
       break L13803;
      }
      $__fmtb_addr_0_ph64 = $__fmtb_addr_0_ph_be;
      $_pre66 = HEAP32[$__err >> 2] | 0;
     }
     if ((label | 0) == 11807) {
      HEAP32[$__err >> 2] = 4;
      $91 = $30;
      break;
     } else if ((label | 0) == 11804) {
      HEAP32[$__err >> 2] = 4;
      $91 = $30;
      break;
     } else if ((label | 0) == 11798) {
      HEAP32[$__err >> 2] = 4;
      $91 = $30;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 11846) {
    $91 = HEAP32[$__sbuf__i_i_i243_phi_trans_insert_pre_pre >> 2] | 0;
   }
   $__sbuf__i_i_i243 = $__b | 0;
   do {
    if (($91 | 0) != 0) {
     $92 = HEAP32[$91 + 12 >> 2] | 0;
     if (($92 | 0) == (HEAP32[$91 + 16 >> 2] | 0)) {
      $retval_i_i_i_i234_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$91 >> 2] | 0) + 36 >> 2] & 255]($91) | 0;
     } else {
      $retval_i_i_i_i234_0 = HEAP32[$92 >> 2] | 0;
     }
     if (($retval_i_i_i_i234_0 | 0) != -1) {
      break;
     }
     HEAP32[$__sbuf__i_i_i243 >> 2] = 0;
    }
   } while (0);
   $97 = HEAP32[$__sbuf__i_i_i243 >> 2] | 0;
   $cmp_i_i_i262 = ($97 | 0) == 0;
   $__sbuf__i11_i_i265 = $__e | 0;
   $98 = HEAP32[$__sbuf__i11_i_i265 >> 2] | 0;
   do {
    if (($98 | 0) == 0) {
     label = 11859;
    } else {
     $99 = HEAP32[$98 + 12 >> 2] | 0;
     if (($99 | 0) == (HEAP32[$98 + 16 >> 2] | 0)) {
      $retval_i_i7_i_i228_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$98 >> 2] | 0) + 36 >> 2] & 255]($98) | 0;
     } else {
      $retval_i_i7_i_i228_0 = HEAP32[$99 >> 2] | 0;
     }
     if (($retval_i_i7_i_i228_0 | 0) == -1) {
      HEAP32[$__sbuf__i11_i_i265 >> 2] = 0;
      label = 11859;
      break;
     }
     if (!($cmp_i_i_i262 ^ ($98 | 0) == 0)) {
      break;
     }
     $105 = $agg_result | 0;
     HEAP32[$105 >> 2] = $97;
     STACKTOP = __stackBase__;
     return;
    }
   } while (0);
   do {
    if ((label | 0) == 11859) {
     if ($cmp_i_i_i262) {
      break;
     }
     $105 = $agg_result | 0;
     HEAP32[$105 >> 2] = $97;
     STACKTOP = __stackBase__;
     return;
    }
   } while (0);
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $105 = $agg_result | 0;
   HEAP32[$105 >> 2] = $97;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $agg_tmp_i = 0, $__p_i_i_i = 0, $__locale_2_i1_i = 0, $0 = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $17 = 0, $add_ptr_i = 0, $call_i = 0, $sub_ptr_sub_i = 0, $22 = 0, $23 = 0, $24 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $agg_tmp_i = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 8 | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17808;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4453] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   if (((tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   $17 = HEAP32[$__e >> 2] | 0;
   $add_ptr_i = $this + 8 | 0;
   $call_i = FUNCTION_TABLE_ii[HEAP32[HEAP32[$add_ptr_i >> 2] >> 2] & 255]($add_ptr_i) | 0;
   HEAP32[$agg_tmp_i >> 2] = $17;
   $sub_ptr_sub_i = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $agg_tmp_i, $call_i, $call_i + 168 | 0, $9, $__err, 0) | 0) - $call_i | 0;
   if (($sub_ptr_sub_i | 0) >= 168) {
    $22 = $__b | 0;
    $23 = HEAP32[$22 >> 2] | 0;
    $24 = $agg_result | 0;
    HEAP32[$24 >> 2] = $23;
    STACKTOP = __stackBase__;
    return;
   }
   HEAP32[$__tm + 24 >> 2] = (($sub_ptr_sub_i | 0) / 12 & -1 | 0) % 7 & -1;
   $22 = $__b | 0;
   $23 = HEAP32[$22 >> 2] | 0;
   $24 = $agg_result | 0;
   HEAP32[$24 >> 2] = $23;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $agg_tmp_i = 0, $__p_i_i_i = 0, $__locale_2_i1_i = 0, $0 = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $17 = 0, $add_ptr_i = 0, $call_i = 0, $sub_ptr_sub_i = 0, $22 = 0, $23 = 0, $24 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $agg_tmp_i = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 8 | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17808;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4453] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   if (((tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   $17 = HEAP32[$__e >> 2] | 0;
   $add_ptr_i = $this + 8 | 0;
   $call_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr_i >> 2] | 0) + 4 >> 2] & 255]($add_ptr_i) | 0;
   HEAP32[$agg_tmp_i >> 2] = $17;
   $sub_ptr_sub_i = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $agg_tmp_i, $call_i, $call_i + 288 | 0, $9, $__err, 0) | 0) - $call_i | 0;
   if (($sub_ptr_sub_i | 0) >= 288) {
    $22 = $__b | 0;
    $23 = HEAP32[$22 >> 2] | 0;
    $24 = $agg_result | 0;
    HEAP32[$24 >> 2] = $23;
    STACKTOP = __stackBase__;
    return;
   }
   HEAP32[$__tm + 16 >> 2] = (($sub_ptr_sub_i | 0) / 12 & -1 | 0) % 12 & -1;
   $22 = $__b | 0;
   $23 = HEAP32[$22 >> 2] | 0;
   $24 = $agg_result | 0;
   HEAP32[$24 >> 2] = $23;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $agg_tmp_i = 0, $__p_i_i_i = 0, $__locale_2_i1_i = 0, $0 = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $call_i = 0, $__t_0_i = 0, $22 = 0, $23 = 0, $24 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $agg_tmp_i = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 8 | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17808;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4453] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   if (((tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   HEAP32[$agg_tmp_i >> 2] = HEAP32[$__e >> 2];
   $call_i = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i, $__err, $9, 4) | 0;
   if ((HEAP32[$__err >> 2] & 4 | 0) != 0) {
    $22 = $__b | 0;
    $23 = HEAP32[$22 >> 2] | 0;
    $24 = $agg_result | 0;
    HEAP32[$24 >> 2] = $23;
    STACKTOP = __stackBase__;
    return;
   }
   if (($call_i | 0) < 69) {
    $__t_0_i = $call_i + 2e3 | 0;
   } else {
    $__t_0_i = ($call_i - 69 | 0) >>> 0 < 31 ? $call_i + 1900 | 0 : $call_i;
   }
   HEAP32[$__tm + 20 >> 2] = $__t_0_i - 1900;
   $22 = $__b | 0;
   $23 = HEAP32[$22 >> 2] | 0;
   $24 = $agg_result | 0;
   HEAP32[$24 >> 2] = $23;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmt, $0) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $0 = $0 | 0;
 var $agg_tmp_i206 = 0, $agg_tmp_i194 = 0, $agg_tmp_i182 = 0, $agg_tmp_i170 = 0, $agg_tmp_i158 = 0, $agg_tmp_i146 = 0, $agg_tmp_i134 = 0, $agg_tmp_i122 = 0, $agg_tmp_i111 = 0, $agg_tmp_i105 = 0, $agg_tmp_i89 = 0, $agg_tmp_i = 0, $__p_i_i_i = 0, $ref_tmp6 = 0, $agg_tmp7 = 0, $agg_tmp8 = 0, $ref_tmp16 = 0, $agg_tmp17 = 0, $agg_tmp18 = 0, $ref_tmp20 = 0, $agg_tmp21 = 0, $agg_tmp22 = 0, $agg_tmp36 = 0, $agg_tmp39 = 0, $ref_tmp41 = 0, $agg_tmp42 = 0, $agg_tmp43 = 0, $ref_tmp45 = 0, $agg_tmp46 = 0, $agg_tmp47 = 0, $ref_tmp51 = 0, $agg_tmp52 = 0, $agg_tmp53 = 0, $agg_tmp60 = 0, $agg_tmp61 = 0, $ref_tmp68 = 0, $agg_tmp69 = 0, $agg_tmp70 = 0, $agg_tmp81 = 0, $__locale_2_i1_i = 0, $1 = 0, $sub_i_i = 0, $9 = 0, $10 = 0, $exception_i_i = 0, $12 = 0, $conv = 0, $23 = 0, $add_ptr_i = 0, $call_i = 0, $sub_ptr_sub_i = 0, $29 = 0, $add_ptr_i90 = 0, $call_i92 = 0, $sub_ptr_sub_i97 = 0, $add_ptr = 0, $call5 = 0, $36 = 0, $42 = 0, $43 = 0, $cond_i_i214 = 0, $cond_i_i124 = 0, $conv_i_i = 0, $cond_i = 0, $tm_mday = 0, $call_i106 = 0, $51 = 0, $53 = 0, $61 = 0, $call_i112 = 0, $73 = 0, $tm_hour26 = 0, $call_i123 = 0, $78 = 0, $call_i135 = 0, $84 = 0, $sub_i = 0, $89 = 0, $call_i159 = 0, $94 = 0, $101 = 0, $109 = 0, $call_i171 = 0, $121 = 0, $122 = 0, $call_i183 = 0, $134 = 0, $136 = 0, $add_ptr64 = 0, $call67 = 0, $145 = 0, $151 = 0, $152 = 0, $cond_i_i174216 = 0, $cond_i_i216 = 0, $conv_i_i236 = 0, $cond_i257 = 0, $call_i195 = 0, $__t_0_i = 0, $call_i207 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $agg_tmp_i206 = __stackBase__ | 0;
 $agg_tmp_i194 = __stackBase__ + 8 | 0;
 $agg_tmp_i182 = __stackBase__ + 16 | 0;
 $agg_tmp_i170 = __stackBase__ + 24 | 0;
 $agg_tmp_i158 = __stackBase__ + 32 | 0;
 $agg_tmp_i146 = __stackBase__ + 40 | 0;
 $agg_tmp_i134 = __stackBase__ + 48 | 0;
 $agg_tmp_i122 = __stackBase__ + 56 | 0;
 $agg_tmp_i111 = __stackBase__ + 64 | 0;
 $agg_tmp_i105 = __stackBase__ + 72 | 0;
 $agg_tmp_i89 = __stackBase__ + 80 | 0;
 $agg_tmp_i = __stackBase__ + 88 | 0;
 $__p_i_i_i = __stackBase__ + 96 | 0;
 $ref_tmp6 = __stackBase__ + 112 | 0;
 $agg_tmp7 = __stackBase__ + 120 | 0;
 $agg_tmp8 = __stackBase__ + 128 | 0;
 $ref_tmp16 = __stackBase__ + 136 | 0;
 $agg_tmp17 = __stackBase__ + 144 | 0;
 $agg_tmp18 = __stackBase__ + 152 | 0;
 $ref_tmp20 = __stackBase__ + 160 | 0;
 $agg_tmp21 = __stackBase__ + 168 | 0;
 $agg_tmp22 = __stackBase__ + 176 | 0;
 $agg_tmp36 = __stackBase__ + 184 | 0;
 $agg_tmp39 = __stackBase__ + 192 | 0;
 $ref_tmp41 = __stackBase__ + 200 | 0;
 $agg_tmp42 = __stackBase__ + 208 | 0;
 $agg_tmp43 = __stackBase__ + 216 | 0;
 $ref_tmp45 = __stackBase__ + 224 | 0;
 $agg_tmp46 = __stackBase__ + 232 | 0;
 $agg_tmp47 = __stackBase__ + 240 | 0;
 $ref_tmp51 = __stackBase__ + 248 | 0;
 $agg_tmp52 = __stackBase__ + 256 | 0;
 $agg_tmp53 = __stackBase__ + 264 | 0;
 $agg_tmp60 = __stackBase__ + 272 | 0;
 $agg_tmp61 = __stackBase__ + 280 | 0;
 $ref_tmp68 = __stackBase__ + 288 | 0;
 $agg_tmp69 = __stackBase__ + 296 | 0;
 $agg_tmp70 = __stackBase__ + 304 | 0;
 $agg_tmp81 = __stackBase__ + 312 | 0;
 HEAP32[$__err >> 2] = 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 $1 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + 1, tempValue;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17808;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4453] | 0) - 1 | 0;
 $9 = HEAP32[$__locale_2_i1_i + 8 >> 2] | 0;
 do {
  if ((HEAP32[$__locale_2_i1_i + 12 >> 2] | 0) - $9 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $10 = HEAP32[$9 + ($sub_i_i << 2) >> 2] | 0;
   if (($10 | 0) == 0) {
    break;
   }
   $12 = $10;
   if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i1_i >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i1_i);
   }
   $conv = $__fmt << 24 >> 24;
   L13979 : do {
    if (($conv | 0) == 98 | ($conv | 0) == 66 | ($conv | 0) == 104) {
     $29 = HEAP32[$__e >> 2] | 0;
     $add_ptr_i90 = $this + 8 | 0;
     $call_i92 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr_i90 >> 2] | 0) + 4 >> 2] & 255]($add_ptr_i90) | 0;
     HEAP32[$agg_tmp_i89 >> 2] = $29;
     $sub_ptr_sub_i97 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $agg_tmp_i89, $call_i92, $call_i92 + 288 | 0, $12, $__err, 0) | 0) - $call_i92 | 0;
     if (($sub_ptr_sub_i97 | 0) >= 288) {
      break;
     }
     HEAP32[$__tm + 16 >> 2] = (($sub_ptr_sub_i97 | 0) / 12 & -1 | 0) % 12 & -1;
    } else if (($conv | 0) == 82) {
     $109 = $__b | 0;
     HEAP32[$agg_tmp46 >> 2] = HEAP32[$109 >> 2];
     HEAP32[$agg_tmp47 >> 2] = HEAP32[$__e >> 2];
     __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp45, $this, $agg_tmp46, $agg_tmp47, $__iob, $__err, $__tm, 8760, 8780);
     HEAP32[$109 >> 2] = HEAP32[$ref_tmp45 >> 2];
    } else if (($conv | 0) == 110 | ($conv | 0) == 116) {
     HEAP32[$agg_tmp36 >> 2] = HEAP32[$__e >> 2];
     __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE(0, $__b, $agg_tmp36, $__err, $12);
    } else if (($conv | 0) == 88) {
     $add_ptr64 = $this + 8 | 0;
     $call67 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr64 >> 2] | 0) + 24 >> 2] & 255]($add_ptr64) | 0;
     $145 = $__b | 0;
     HEAP32[$agg_tmp69 >> 2] = HEAP32[$145 >> 2];
     HEAP32[$agg_tmp70 >> 2] = HEAP32[$__e >> 2];
     $151 = HEAP8[$call67] | 0;
     if (($151 & 1) == 0) {
      $cond_i_i216 = $call67 + 4 | 0;
      $cond_i_i174216 = $call67 + 4 | 0;
     } else {
      $152 = HEAP32[$call67 + 8 >> 2] | 0;
      $cond_i_i216 = $152;
      $cond_i_i174216 = $152;
     }
     $conv_i_i236 = $151 & 255;
     if (($conv_i_i236 & 1 | 0) == 0) {
      $cond_i257 = $conv_i_i236 >>> 1;
     } else {
      $cond_i257 = HEAP32[$call67 + 4 >> 2] | 0;
     }
     __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp68, $this, $agg_tmp69, $agg_tmp70, $__iob, $__err, $__tm, $cond_i_i174216, $cond_i_i216 + ($cond_i257 << 2) | 0);
     HEAP32[$145 >> 2] = HEAP32[$ref_tmp68 >> 2];
    } else if (($conv | 0) == 83) {
     HEAP32[$agg_tmp_i170 >> 2] = HEAP32[$__e >> 2];
     $call_i171 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i170, $__err, $12, 2) | 0;
     $121 = HEAP32[$__err >> 2] | 0;
     if (($121 & 4 | 0) == 0 & ($call_i171 | 0) < 61) {
      HEAP32[$__tm >> 2] = $call_i171;
      break;
     } else {
      HEAP32[$__err >> 2] = $121 | 4;
      break;
     }
    } else if (($conv | 0) == 97 | ($conv | 0) == 65) {
     $23 = HEAP32[$__e >> 2] | 0;
     $add_ptr_i = $this + 8 | 0;
     $call_i = FUNCTION_TABLE_ii[HEAP32[HEAP32[$add_ptr_i >> 2] >> 2] & 255]($add_ptr_i) | 0;
     HEAP32[$agg_tmp_i >> 2] = $23;
     $sub_ptr_sub_i = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $agg_tmp_i, $call_i, $call_i + 168 | 0, $12, $__err, 0) | 0) - $call_i | 0;
     if (($sub_ptr_sub_i | 0) >= 168) {
      break;
     }
     HEAP32[$__tm + 24 >> 2] = (($sub_ptr_sub_i | 0) / 12 & -1 | 0) % 7 & -1;
    } else if (($conv | 0) == 37) {
     HEAP32[$agg_tmp81 >> 2] = HEAP32[$__e >> 2];
     __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE(0, $__b, $agg_tmp81, $__err, $12);
    } else if (($conv | 0) == 73) {
     $tm_hour26 = $__tm + 8 | 0;
     HEAP32[$agg_tmp_i122 >> 2] = HEAP32[$__e >> 2];
     $call_i123 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i122, $__err, $12, 2) | 0;
     $78 = HEAP32[$__err >> 2] | 0;
     do {
      if (($78 & 4 | 0) == 0) {
       if (($call_i123 - 1 | 0) >>> 0 >= 12) {
        break;
       }
       HEAP32[$tm_hour26 >> 2] = $call_i123;
       break L13979;
      }
     } while (0);
     HEAP32[$__err >> 2] = $78 | 4;
    } else if (($conv | 0) == 84) {
     $122 = $__b | 0;
     HEAP32[$agg_tmp52 >> 2] = HEAP32[$122 >> 2];
     HEAP32[$agg_tmp53 >> 2] = HEAP32[$__e >> 2];
     __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp51, $this, $agg_tmp52, $agg_tmp53, $__iob, $__err, $__tm, 8728, 8760);
     HEAP32[$122 >> 2] = HEAP32[$ref_tmp51 >> 2];
    } else if (($conv | 0) == 70) {
     $61 = $__b | 0;
     HEAP32[$agg_tmp21 >> 2] = HEAP32[$61 >> 2];
     HEAP32[$agg_tmp22 >> 2] = HEAP32[$__e >> 2];
     __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp20, $this, $agg_tmp21, $agg_tmp22, $__iob, $__err, $__tm, 8696, 8728);
     HEAP32[$61 >> 2] = HEAP32[$ref_tmp20 >> 2];
    } else if (($conv | 0) == 106) {
     HEAP32[$agg_tmp_i134 >> 2] = HEAP32[$__e >> 2];
     $call_i135 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i134, $__err, $12, 3) | 0;
     $84 = HEAP32[$__err >> 2] | 0;
     if (($84 & 4 | 0) == 0 & ($call_i135 | 0) < 366) {
      HEAP32[$__tm + 28 >> 2] = $call_i135;
      break;
     } else {
      HEAP32[$__err >> 2] = $84 | 4;
      break;
     }
    } else if (($conv | 0) == 72) {
     HEAP32[$agg_tmp_i111 >> 2] = HEAP32[$__e >> 2];
     $call_i112 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i111, $__err, $12, 2) | 0;
     $73 = HEAP32[$__err >> 2] | 0;
     if (($73 & 4 | 0) == 0 & ($call_i112 | 0) < 24) {
      HEAP32[$__tm + 8 >> 2] = $call_i112;
      break;
     } else {
      HEAP32[$__err >> 2] = $73 | 4;
      break;
     }
    } else if (($conv | 0) == 109) {
     HEAP32[$agg_tmp_i146 >> 2] = HEAP32[$__e >> 2];
     $sub_i = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i146, $__err, $12, 2) | 0) - 1 | 0;
     $89 = HEAP32[$__err >> 2] | 0;
     if (($89 & 4 | 0) == 0 & ($sub_i | 0) < 12) {
      HEAP32[$__tm + 16 >> 2] = $sub_i;
      break;
     } else {
      HEAP32[$__err >> 2] = $89 | 4;
      break;
     }
    } else if (($conv | 0) == 121) {
     HEAP32[$agg_tmp_i194 >> 2] = HEAP32[$__e >> 2];
     $call_i195 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i194, $__err, $12, 4) | 0;
     if ((HEAP32[$__err >> 2] & 4 | 0) != 0) {
      break;
     }
     if (($call_i195 | 0) < 69) {
      $__t_0_i = $call_i195 + 2e3 | 0;
     } else {
      $__t_0_i = ($call_i195 - 69 | 0) >>> 0 < 31 ? $call_i195 + 1900 | 0 : $call_i195;
     }
     HEAP32[$__tm + 20 >> 2] = $__t_0_i - 1900;
    } else if (($conv | 0) == 99) {
     $add_ptr = $this + 8 | 0;
     $call5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr >> 2] | 0) + 12 >> 2] & 255]($add_ptr) | 0;
     $36 = $__b | 0;
     HEAP32[$agg_tmp7 >> 2] = HEAP32[$36 >> 2];
     HEAP32[$agg_tmp8 >> 2] = HEAP32[$__e >> 2];
     $42 = HEAP8[$call5] | 0;
     if (($42 & 1) == 0) {
      $cond_i_i124 = $call5 + 4 | 0;
      $cond_i_i214 = $call5 + 4 | 0;
     } else {
      $43 = HEAP32[$call5 + 8 >> 2] | 0;
      $cond_i_i124 = $43;
      $cond_i_i214 = $43;
     }
     $conv_i_i = $42 & 255;
     if (($conv_i_i & 1 | 0) == 0) {
      $cond_i = $conv_i_i >>> 1;
     } else {
      $cond_i = HEAP32[$call5 + 4 >> 2] | 0;
     }
     __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp6, $this, $agg_tmp7, $agg_tmp8, $__iob, $__err, $__tm, $cond_i_i214, $cond_i_i124 + ($cond_i << 2) | 0);
     HEAP32[$36 >> 2] = HEAP32[$ref_tmp6 >> 2];
    } else if (($conv | 0) == 89) {
     HEAP32[$agg_tmp_i206 >> 2] = HEAP32[$__e >> 2];
     $call_i207 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i206, $__err, $12, 4) | 0;
     if ((HEAP32[$__err >> 2] & 4 | 0) != 0) {
      break;
     }
     HEAP32[$__tm + 20 >> 2] = $call_i207 - 1900;
    } else if (($conv | 0) == 100 | ($conv | 0) == 101) {
     $tm_mday = $__tm + 12 | 0;
     HEAP32[$agg_tmp_i105 >> 2] = HEAP32[$__e >> 2];
     $call_i106 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i105, $__err, $12, 2) | 0;
     $51 = HEAP32[$__err >> 2] | 0;
     do {
      if (($51 & 4 | 0) == 0) {
       if (($call_i106 - 1 | 0) >>> 0 >= 31) {
        break;
       }
       HEAP32[$tm_mday >> 2] = $call_i106;
       break L13979;
      }
     } while (0);
     HEAP32[$__err >> 2] = $51 | 4;
    } else if (($conv | 0) == 114) {
     $101 = $__b | 0;
     HEAP32[$agg_tmp42 >> 2] = HEAP32[$101 >> 2];
     HEAP32[$agg_tmp43 >> 2] = HEAP32[$__e >> 2];
     __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp41, $this, $agg_tmp42, $agg_tmp43, $__iob, $__err, $__tm, 8784, 8828);
     HEAP32[$101 >> 2] = HEAP32[$ref_tmp41 >> 2];
    } else if (($conv | 0) == 77) {
     HEAP32[$agg_tmp_i158 >> 2] = HEAP32[$__e >> 2];
     $call_i159 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i158, $__err, $12, 2) | 0;
     $94 = HEAP32[$__err >> 2] | 0;
     if (($94 & 4 | 0) == 0 & ($call_i159 | 0) < 60) {
      HEAP32[$__tm + 4 >> 2] = $call_i159;
      break;
     } else {
      HEAP32[$__err >> 2] = $94 | 4;
      break;
     }
    } else if (($conv | 0) == 120) {
     $136 = HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0;
     HEAP32[$agg_tmp60 >> 2] = HEAP32[$__b >> 2];
     HEAP32[$agg_tmp61 >> 2] = HEAP32[$__e >> 2];
     FUNCTION_TABLE_viiiiiii[$136 & 127]($agg_result, $this, $agg_tmp60, $agg_tmp61, $__iob, $__err, $__tm);
     STACKTOP = __stackBase__;
     return;
    } else if (($conv | 0) == 112) {
     HEAP32[$agg_tmp39 >> 2] = HEAP32[$__e >> 2];
     __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 8 | 0, $__b, $agg_tmp39, $__err, $12);
    } else if (($conv | 0) == 119) {
     HEAP32[$agg_tmp_i182 >> 2] = HEAP32[$__e >> 2];
     $call_i183 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $agg_tmp_i182, $__err, $12, 1) | 0;
     $134 = HEAP32[$__err >> 2] | 0;
     if (($134 & 4 | 0) == 0 & ($call_i183 | 0) < 7) {
      HEAP32[$__tm + 24 >> 2] = $call_i183;
      break;
     } else {
      HEAP32[$__err >> 2] = $134 | 4;
      break;
     }
    } else if (($conv | 0) == 68) {
     $53 = $__b | 0;
     HEAP32[$agg_tmp17 >> 2] = HEAP32[$53 >> 2];
     HEAP32[$agg_tmp18 >> 2] = HEAP32[$__e >> 2];
     __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp16, $this, $agg_tmp17, $agg_tmp18, $__iob, $__err, $__tm, 8832, 8864);
     HEAP32[$53 >> 2] = HEAP32[$ref_tmp16 >> 2];
    } else {
     HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    }
   } while (0);
   HEAP32[$agg_result >> 2] = HEAP32[$__b >> 2];
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $__sbuf__i_i_i = 0, $__sbuf__i11_i_i = 0, $0 = 0, $1 = 0, $2 = 0, $retval_i_i_i_i_0 = 0, $7 = 0, $8 = 0, $9 = 0, $retval_i_i7_i_i_0 = 0, $cmp_i30_i_i = 0, $cmp_i30_i_i9 = 0, $14 = 0, $15 = 0, $16 = 0, $retval_i_i_0 = 0, $22 = 0, $__ninp__i_i18 = 0, $23 = 0, $26 = 0, $cmp_i30_i_i7 = 0, $27 = 0, $28 = 0, $29 = 0, $retval_i_i_i_i36_0 = 0, $34 = 0, $35 = 0, $retval_i_i7_i_i30_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__sbuf__i_i_i = $__b | 0;
 $__sbuf__i11_i_i = $__e | 0;
 $0 = $__ct;
 L14060 : while (1) {
  $1 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
  do {
   if (($1 | 0) == 0) {
    $7 = 1;
   } else {
    $2 = HEAP32[$1 + 12 >> 2] | 0;
    if (($2 | 0) == (HEAP32[$1 + 16 >> 2] | 0)) {
     $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 36 >> 2] & 255]($1) | 0;
    } else {
     $retval_i_i_i_i_0 = HEAP32[$2 >> 2] | 0;
    }
    if (($retval_i_i_i_i_0 | 0) == -1) {
     HEAP32[$__sbuf__i_i_i >> 2] = 0;
     $7 = 1;
     break;
    } else {
     $7 = (HEAP32[$__sbuf__i_i_i >> 2] | 0) == 0;
     break;
    }
   }
  } while (0);
  $8 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
  do {
   if (($8 | 0) == 0) {
    label = 12008;
   } else {
    $9 = HEAP32[$8 + 12 >> 2] | 0;
    if (($9 | 0) == (HEAP32[$8 + 16 >> 2] | 0)) {
     $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0;
    } else {
     $retval_i_i7_i_i_0 = HEAP32[$9 >> 2] | 0;
    }
    if (($retval_i_i7_i_i_0 | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i >> 2] = 0;
     label = 12008;
     break;
    } else {
     $cmp_i30_i_i = ($8 | 0) == 0;
     if ($7 ^ $cmp_i30_i_i) {
      $14 = $8;
      $cmp_i30_i_i9 = $cmp_i30_i_i;
      break;
     } else {
      $27 = $8;
      $cmp_i30_i_i7 = $cmp_i30_i_i;
      break L14060;
     }
    }
   }
  } while (0);
  if ((label | 0) == 12008) {
   label = 0;
   if ($7) {
    $27 = 0;
    $cmp_i30_i_i7 = 1;
    break;
   } else {
    $14 = 0;
    $cmp_i30_i_i9 = 1;
   }
  }
  $15 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
  $16 = HEAP32[$15 + 12 >> 2] | 0;
  if (($16 | 0) == (HEAP32[$15 + 16 >> 2] | 0)) {
   $retval_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 36 >> 2] & 255]($15) | 0;
  } else {
   $retval_i_i_0 = HEAP32[$16 >> 2] | 0;
  }
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] & 63]($__ct, 8192, $retval_i_i_0) | 0)) {
   $27 = $14;
   $cmp_i30_i_i7 = $cmp_i30_i_i9;
   break;
  }
  $22 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
  $__ninp__i_i18 = $22 + 12 | 0;
  $23 = HEAP32[$__ninp__i_i18 >> 2] | 0;
  if (($23 | 0) == (HEAP32[$22 + 16 >> 2] | 0)) {
   $26 = HEAP32[(HEAP32[$22 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$26 & 255]($22) | 0;
   continue;
  } else {
   HEAP32[$__ninp__i_i18 >> 2] = $23 + 4;
   continue;
  }
 }
 $28 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 do {
  if (($28 | 0) == 0) {
   $34 = 1;
  } else {
   $29 = HEAP32[$28 + 12 >> 2] | 0;
   if (($29 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) {
    $retval_i_i_i_i36_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 255]($28) | 0;
   } else {
    $retval_i_i_i_i36_0 = HEAP32[$29 >> 2] | 0;
   }
   if (($retval_i_i_i_i36_0 | 0) == -1) {
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $34 = 1;
    break;
   } else {
    $34 = (HEAP32[$__sbuf__i_i_i >> 2] | 0) == 0;
    break;
   }
  }
 } while (0);
 do {
  if ($cmp_i30_i_i7) {
   label = 12030;
  } else {
   $35 = HEAP32[$27 + 12 >> 2] | 0;
   if (($35 | 0) == (HEAP32[$27 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i30_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] & 255]($27) | 0;
   } else {
    $retval_i_i7_i_i30_0 = HEAP32[$35 >> 2] | 0;
   }
   if (($retval_i_i7_i_i30_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 12030;
    break;
   }
   if (!($34 ^ ($27 | 0) == 0)) {
    break;
   }
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 do {
  if ((label | 0) == 12030) {
   if ($34) {
    break;
   }
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $agg_tmp = 0, $add_ptr = 0, $call = 0, $conv_i_i = 0, $cond_i = 0, $conv_i_i35 = 0, $cond_i56 = 0, $call6 = 0, $sub_ptr_sub = 0, $14 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $agg_tmp = __stackBase__ | 0;
 $add_ptr = $this + 8 | 0;
 $call = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr >> 2] | 0) + 8 >> 2] & 255]($add_ptr) | 0;
 $conv_i_i = HEAPU8[$call] | 0;
 if (($conv_i_i & 1 | 0) == 0) {
  $cond_i = $conv_i_i >>> 1;
 } else {
  $cond_i = HEAP32[$call + 4 >> 2] | 0;
 }
 $conv_i_i35 = HEAPU8[$call + 12 | 0] | 0;
 if (($conv_i_i35 & 1 | 0) == 0) {
  $cond_i56 = $conv_i_i35 >>> 1;
 } else {
  $cond_i56 = HEAP32[$call + 16 >> 2] | 0;
 }
 if (($cond_i | 0) == (-$cond_i56 | 0)) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  STACKTOP = __stackBase__;
  return;
 }
 HEAP32[$agg_tmp >> 2] = HEAP32[$__e >> 2];
 $call6 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $agg_tmp, $call, $call + 24 | 0, $__ct, $__err, 0) | 0;
 $sub_ptr_sub = $call6 - $call | 0;
 do {
  if (($call6 | 0) == ($call | 0)) {
   if ((HEAP32[$__h >> 2] | 0) != 12) {
    break;
   }
   HEAP32[$__h >> 2] = 0;
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 if (($sub_ptr_sub | 0) != 12) {
  STACKTOP = __stackBase__;
  return;
 }
 $14 = HEAP32[$__h >> 2] | 0;
 if (($14 | 0) >= 12) {
  STACKTOP = __stackBase__;
  return;
 }
 HEAP32[$__h >> 2] = $14 + 12;
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $__sbuf__i_i_i = 0, $0 = 0, $1 = 0, $retval_i_i_i_i_0 = 0, $6 = 0, $__sbuf__i11_i_i = 0, $7 = 0, $8 = 0, $retval_i_i7_i_i_0 = 0, $cmp_i30_i_i = 0, $cmp_i30_i_i8 = 0, $14 = 0, $15 = 0, $16 = 0, $retval_i_i_0 = 0, $24 = 0, $__ninp__i_i24 = 0, $25 = 0, $28 = 0, $29 = 0, $30 = 0, $retval_i_i_i_i42_0 = 0, $35 = 0, $36 = 0, $retval_i_i7_i_i36_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__sbuf__i_i_i = $__b | 0;
 $0 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 do {
  if (($0 | 0) == 0) {
   $6 = 1;
  } else {
   $1 = HEAP32[$0 + 12 >> 2] | 0;
   if (($1 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) {
    $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 255]($0) | 0;
   } else {
    $retval_i_i_i_i_0 = HEAP32[$1 >> 2] | 0;
   }
   if (($retval_i_i_i_i_0 | 0) == -1) {
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $6 = 1;
    break;
   } else {
    $6 = (HEAP32[$__sbuf__i_i_i >> 2] | 0) == 0;
    break;
   }
  }
 } while (0);
 $__sbuf__i11_i_i = $__e | 0;
 $7 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
 do {
  if (($7 | 0) == 0) {
   label = 12070;
  } else {
   $8 = HEAP32[$7 + 12 >> 2] | 0;
   if (($8 | 0) == (HEAP32[$7 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 36 >> 2] & 255]($7) | 0;
   } else {
    $retval_i_i7_i_i_0 = HEAP32[$8 >> 2] | 0;
   }
   if (($retval_i_i7_i_i_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 12070;
    break;
   } else {
    $cmp_i30_i_i = ($7 | 0) == 0;
    if ($6 ^ $cmp_i30_i_i) {
     $14 = $7;
     $cmp_i30_i_i8 = $cmp_i30_i_i;
     break;
    } else {
     label = 12072;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 12070) {
  if ($6) {
   label = 12072;
  } else {
   $14 = 0;
   $cmp_i30_i_i8 = 1;
  }
 }
 if ((label | 0) == 12072) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  STACKTOP = __stackBase__;
  return;
 }
 $15 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 $16 = HEAP32[$15 + 12 >> 2] | 0;
 if (($16 | 0) == (HEAP32[$15 + 16 >> 2] | 0)) {
  $retval_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 36 >> 2] & 255]($15) | 0;
 } else {
  $retval_i_i_0 = HEAP32[$16 >> 2] | 0;
 }
 if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 52 >> 2] & 63]($__ct, $retval_i_i_0, 0) | 0) << 24 >> 24 != 37) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  STACKTOP = __stackBase__;
  return;
 }
 $24 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 $__ninp__i_i24 = $24 + 12 | 0;
 $25 = HEAP32[$__ninp__i_i24 >> 2] | 0;
 if (($25 | 0) == (HEAP32[$24 + 16 >> 2] | 0)) {
  $28 = HEAP32[(HEAP32[$24 >> 2] | 0) + 40 >> 2] | 0;
  FUNCTION_TABLE_ii[$28 & 255]($24) | 0;
 } else {
  HEAP32[$__ninp__i_i24 >> 2] = $25 + 4;
 }
 $29 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 do {
  if (($29 | 0) == 0) {
   $35 = 1;
  } else {
   $30 = HEAP32[$29 + 12 >> 2] | 0;
   if (($30 | 0) == (HEAP32[$29 + 16 >> 2] | 0)) {
    $retval_i_i_i_i42_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 36 >> 2] & 255]($29) | 0;
   } else {
    $retval_i_i_i_i42_0 = HEAP32[$30 >> 2] | 0;
   }
   if (($retval_i_i_i_i42_0 | 0) == -1) {
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $35 = 1;
    break;
   } else {
    $35 = (HEAP32[$__sbuf__i_i_i >> 2] | 0) == 0;
    break;
   }
  }
 } while (0);
 do {
  if ($cmp_i30_i_i8) {
   label = 12094;
  } else {
   $36 = HEAP32[$14 + 12 >> 2] | 0;
   if (($36 | 0) == (HEAP32[$14 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i36_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 255]($14) | 0;
   } else {
    $retval_i_i7_i_i36_0 = HEAP32[$36 >> 2] | 0;
   }
   if (($retval_i_i7_i_i36_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 12094;
    break;
   }
   if (!($35 ^ ($14 | 0) == 0)) {
    break;
   }
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 do {
  if ((label | 0) == 12094) {
   if ($35) {
    break;
   }
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $__e, $__err, $__ct, $__n) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 $__n = $__n | 0;
 var $__sbuf__i_i_i = 0, $0 = 0, $1 = 0, $retval_i_i_i_i_0 = 0, $6 = 0, $__sbuf__i11_i_i = 0, $7 = 0, $8 = 0, $retval_i_i7_i_i_0 = 0, $14 = 0, $15 = 0, $16 = 0, $retval_i_i_0 = 0, $21 = 0, $24 = 0, $conv = 0, $26 = 0, $__ninp__i_i40 = 0, $27 = 0, $30 = 0, $31 = 0, $__n_addr_0_in = 0, $__r_0_in = 0, $__r_0 = 0, $__n_addr_0 = 0, $32 = 0, $33 = 0, $retval_i_i_i_i58_0 = 0, $38 = 0, $cmp_i_i_i86 = 0, $39 = 0, $retval_i_i7_i_i52_0 = 0, $44 = 0, $45 = 0, $46 = 0, $cmp_i30_i_i109 = 0, $47 = 0, $retval_i_i113_0 = 0, $add = 0, $54 = 0, $__ninp__i_i150 = 0, $55 = 0, $58 = 0, $59 = 0, $retval_i_i_i_i170_0 = 0, $64 = 0, $65 = 0, $retval_i_i7_i_i164_0 = 0, $retval_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__sbuf__i_i_i = $__b | 0;
 $0 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 do {
  if (($0 | 0) == 0) {
   $6 = 1;
  } else {
   $1 = HEAP32[$0 + 12 >> 2] | 0;
   if (($1 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) {
    $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 255]($0) | 0;
   } else {
    $retval_i_i_i_i_0 = HEAP32[$1 >> 2] | 0;
   }
   if (($retval_i_i_i_i_0 | 0) == -1) {
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $6 = 1;
    break;
   } else {
    $6 = (HEAP32[$__sbuf__i_i_i >> 2] | 0) == 0;
    break;
   }
  }
 } while (0);
 $__sbuf__i11_i_i = $__e | 0;
 $7 = HEAP32[$__sbuf__i11_i_i >> 2] | 0;
 do {
  if (($7 | 0) == 0) {
   label = 12116;
  } else {
   $8 = HEAP32[$7 + 12 >> 2] | 0;
   if (($8 | 0) == (HEAP32[$7 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 36 >> 2] & 255]($7) | 0;
   } else {
    $retval_i_i7_i_i_0 = HEAP32[$8 >> 2] | 0;
   }
   if (($retval_i_i7_i_i_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 12116;
    break;
   } else {
    if ($6 ^ ($7 | 0) == 0) {
     $14 = $7;
     break;
    } else {
     label = 12118;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 12116) {
  if ($6) {
   label = 12118;
  } else {
   $14 = 0;
  }
 }
 if ((label | 0) == 12118) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $15 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 $16 = HEAP32[$15 + 12 >> 2] | 0;
 if (($16 | 0) == (HEAP32[$15 + 16 >> 2] | 0)) {
  $retval_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 36 >> 2] & 255]($15) | 0;
 } else {
  $retval_i_i_0 = HEAP32[$16 >> 2] | 0;
 }
 $21 = $__ct;
 if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$21 >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, $retval_i_i_0) | 0)) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $24 = $__ct;
 $conv = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$24 >> 2] | 0) + 52 >> 2] & 63]($__ct, $retval_i_i_0, 0) | 0) << 24 >> 24;
 $26 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 $__ninp__i_i40 = $26 + 12 | 0;
 $27 = HEAP32[$__ninp__i_i40 >> 2] | 0;
 if (($27 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
  $30 = HEAP32[(HEAP32[$26 >> 2] | 0) + 40 >> 2] | 0;
  FUNCTION_TABLE_ii[$30 & 255]($26) | 0;
  $__r_0_in = $conv;
  $__n_addr_0_in = $__n;
  $31 = $14;
 } else {
  HEAP32[$__ninp__i_i40 >> 2] = $27 + 4;
  $__r_0_in = $conv;
  $__n_addr_0_in = $__n;
  $31 = $14;
 }
 while (1) {
  $__r_0 = $__r_0_in - 48 | 0;
  $__n_addr_0 = $__n_addr_0_in - 1 | 0;
  $32 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
  do {
   if (($32 | 0) == 0) {
    $38 = 0;
   } else {
    $33 = HEAP32[$32 + 12 >> 2] | 0;
    if (($33 | 0) == (HEAP32[$32 + 16 >> 2] | 0)) {
     $retval_i_i_i_i58_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$32 >> 2] | 0) + 36 >> 2] & 255]($32) | 0;
    } else {
     $retval_i_i_i_i58_0 = HEAP32[$33 >> 2] | 0;
    }
    if (($retval_i_i_i_i58_0 | 0) == -1) {
     HEAP32[$__sbuf__i_i_i >> 2] = 0;
     $38 = 0;
     break;
    } else {
     $38 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
     break;
    }
   }
  } while (0);
  $cmp_i_i_i86 = ($38 | 0) == 0;
  if (($31 | 0) == 0) {
   $46 = $38;
   $45 = 0;
  } else {
   $39 = HEAP32[$31 + 12 >> 2] | 0;
   if (($39 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i52_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 255]($31) | 0;
   } else {
    $retval_i_i7_i_i52_0 = HEAP32[$39 >> 2] | 0;
   }
   if (($retval_i_i7_i_i52_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    $44 = 0;
   } else {
    $44 = $31;
   }
   $46 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   $45 = $44;
  }
  $cmp_i30_i_i109 = ($45 | 0) == 0;
  if (!(($cmp_i_i_i86 ^ $cmp_i30_i_i109) & ($__n_addr_0 | 0) > 0)) {
   break;
  }
  $47 = HEAP32[$46 + 12 >> 2] | 0;
  if (($47 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) {
   $retval_i_i113_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 255]($46) | 0;
  } else {
   $retval_i_i113_0 = HEAP32[$47 >> 2] | 0;
  }
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$21 >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, $retval_i_i113_0) | 0)) {
   $retval_0 = $__r_0;
   label = 12167;
   break;
  }
  $add = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$24 >> 2] | 0) + 52 >> 2] & 63]($__ct, $retval_i_i113_0, 0) | 0) << 24 >> 24) + ($__r_0 * 10 & -1) | 0;
  $54 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
  $__ninp__i_i150 = $54 + 12 | 0;
  $55 = HEAP32[$__ninp__i_i150 >> 2] | 0;
  if (($55 | 0) == (HEAP32[$54 + 16 >> 2] | 0)) {
   $58 = HEAP32[(HEAP32[$54 >> 2] | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_ii[$58 & 255]($54) | 0;
   $__r_0_in = $add;
   $__n_addr_0_in = $__n_addr_0;
   $31 = $45;
   continue;
  } else {
   HEAP32[$__ninp__i_i150 >> 2] = $55 + 4;
   $__r_0_in = $add;
   $__n_addr_0_in = $__n_addr_0;
   $31 = $45;
   continue;
  }
 }
 if ((label | 0) == 12167) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 do {
  if (($46 | 0) == 0) {
   $64 = 1;
  } else {
   $59 = HEAP32[$46 + 12 >> 2] | 0;
   if (($59 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) {
    $retval_i_i_i_i170_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 255]($46) | 0;
   } else {
    $retval_i_i_i_i170_0 = HEAP32[$59 >> 2] | 0;
   }
   if (($retval_i_i_i_i170_0 | 0) == -1) {
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $64 = 1;
    break;
   } else {
    $64 = (HEAP32[$__sbuf__i_i_i >> 2] | 0) == 0;
    break;
   }
  }
 } while (0);
 do {
  if ($cmp_i30_i_i109) {
   label = 12162;
  } else {
   $65 = HEAP32[$45 + 12 >> 2] | 0;
   if (($65 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) {
    $retval_i_i7_i_i164_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 255]($45) | 0;
   } else {
    $retval_i_i7_i_i164_0 = HEAP32[$65 >> 2] | 0;
   }
   if (($retval_i_i7_i_i164_0 | 0) == -1) {
    HEAP32[$__sbuf__i11_i_i >> 2] = 0;
    label = 12162;
    break;
   }
   if ($64 ^ ($45 | 0) == 0) {
    $retval_0 = $__r_0;
   } else {
    break;
   }
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  }
 } while (0);
 do {
  if ((label | 0) == 12162) {
   if ($64) {
    break;
   } else {
    $retval_0 = $__r_0;
   }
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  }
 } while (0);
 HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $retval_0 = $__r_0;
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0;
 $0 = $this;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (($1 | 0) == 0) {
  __ZdlPv($0);
  return;
 }
 _freelocale($1 | 0);
 __ZdlPv($0);
 return;
}
function __ZNSt3__110moneypunctIcLb0EED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNSt3__110moneypunctIcLb1EED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNSt3__110moneypunctIwLb0EED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNSt3__110moneypunctIwLb1EED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0 | 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0;
 $0 = $agg_result;
 tempBigInt = 67109634;
 HEAP8[$0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 | 0] = tempBigInt & 255;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0;
 $0 = $agg_result;
 tempBigInt = 67109634;
 HEAP8[$0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 | 0] = tempBigInt & 255;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0;
 $0 = $agg_result;
 tempBigInt = 67109634;
 HEAP8[$0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 | 0] = tempBigInt & 255;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0;
 $0 = $agg_result;
 tempBigInt = 67109634;
 HEAP8[$0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 | 0] = tempBigInt & 255;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0;
 $0 = $agg_result;
 tempBigInt = 67109634;
 HEAP8[$0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 | 0] = tempBigInt & 255;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0;
 $0 = $agg_result;
 tempBigInt = 67109634;
 HEAP8[$0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 | 0] = tempBigInt & 255;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0;
 $0 = $agg_result;
 tempBigInt = 67109634;
 HEAP8[$0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 | 0] = tempBigInt & 255;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0;
 $0 = $agg_result;
 tempBigInt = 67109634;
 HEAP8[$0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 | 0] = tempBigInt & 255;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $__s2_i_i = 0;
 $__s2_i_i = $agg_result;
 HEAP8[$agg_result] = 2;
 HEAP8[$__s2_i_i + 1 | 0] = 45;
 HEAP8[$__s2_i_i + 2 | 0] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $__s2_i_i = 0;
 $__s2_i_i = $agg_result;
 HEAP8[$agg_result] = 2;
 HEAP8[$__s2_i_i + 1 | 0] = 45;
 HEAP8[$__s2_i_i + 2 | 0] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $__data__i59_i = 0;
 HEAP8[$agg_result] = 2;
 $__data__i59_i = $agg_result + 4 | 0;
 HEAP32[$__data__i59_i >> 2] = 45;
 HEAP32[$__data__i59_i + 4 >> 2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $__data__i59_i = 0;
 HEAP8[$agg_result] = 2;
 $__data__i59_i = $agg_result + 4 | 0;
 HEAP32[$__data__i59_i >> 2] = 45;
 HEAP32[$__data__i59_i + 4 >> 2] = 0;
 return;
}
function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($agg_result, $this, $__s, $0, $1, $__tm, $__fmt, $__mod) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $fmt_i = 0, $__nar = 0, $arraydecay = 0, $2 = 0, $arrayinit_element_i = 0, $arrayinit_element2_i = 0, $call5_i = 0, $add_ptr_i = 0, $agg_tmp_sroa_0_0_copyload1 = 0, $__first_addr_i_i_013 = 0, $agg_tmp3_i_sroa_0_012 = 0, $4 = 0, $__nout__i_i_i_i = 0, $5 = 0, $retval_i_i_i_i_0 = 0, $agg_tmp3_i_sroa_0_1 = 0, $incdec_ptr_i_i = 0, $agg_tmp3_i_sroa_0_0_lcssa = 0, $agg_tmp3_i_sroa_0_0__idx = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $fmt_i = __stackBase__ | 0;
 $__nar = __stackBase__ + 8 | 0;
 $arraydecay = $__nar | 0;
 $2 = $fmt_i | 0;
 HEAP8[$2] = 37;
 $arrayinit_element_i = $fmt_i + 1 | 0;
 HEAP8[$arrayinit_element_i] = $__fmt;
 $arrayinit_element2_i = $fmt_i + 2 | 0;
 HEAP8[$arrayinit_element2_i] = $__mod;
 HEAP8[$fmt_i + 3 | 0] = 0;
 if ($__mod << 24 >> 24 != 0) {
  HEAP8[$arrayinit_element_i] = $__mod;
  HEAP8[$arrayinit_element2_i] = $__fmt;
 }
 $call5_i = _strftime($arraydecay | 0, 100, $2 | 0, $__tm | 0, HEAP32[$this + 8 >> 2] | 0) | 0;
 $add_ptr_i = $__nar + $call5_i | 0;
 $agg_tmp_sroa_0_0_copyload1 = HEAP32[$__s >> 2] | 0;
 if (($call5_i | 0) == 0) {
  $agg_tmp3_i_sroa_0_0_lcssa = $agg_tmp_sroa_0_0_copyload1;
  $agg_tmp3_i_sroa_0_0__idx = $agg_result | 0;
  HEAP32[$agg_tmp3_i_sroa_0_0__idx >> 2] = $agg_tmp3_i_sroa_0_0_lcssa;
  STACKTOP = __stackBase__;
  return;
 } else {
  $agg_tmp3_i_sroa_0_012 = $agg_tmp_sroa_0_0_copyload1;
  $__first_addr_i_i_013 = $arraydecay;
 }
 while (1) {
  $4 = HEAP8[$__first_addr_i_i_013] | 0;
  if (($agg_tmp3_i_sroa_0_012 | 0) == 0) {
   $agg_tmp3_i_sroa_0_1 = 0;
  } else {
   $__nout__i_i_i_i = $agg_tmp3_i_sroa_0_012 + 24 | 0;
   $5 = HEAP32[$__nout__i_i_i_i >> 2] | 0;
   if (($5 | 0) == (HEAP32[$agg_tmp3_i_sroa_0_012 + 28 >> 2] | 0)) {
    $retval_i_i_i_i_0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$agg_tmp3_i_sroa_0_012 >> 2] | 0) + 52 >> 2] & 63]($agg_tmp3_i_sroa_0_012, $4 & 255) | 0;
   } else {
    HEAP32[$__nout__i_i_i_i >> 2] = $5 + 1;
    HEAP8[$5] = $4;
    $retval_i_i_i_i_0 = $4 & 255;
   }
   $agg_tmp3_i_sroa_0_1 = ($retval_i_i_i_i_0 | 0) == -1 ? 0 : $agg_tmp3_i_sroa_0_012;
  }
  $incdec_ptr_i_i = $__first_addr_i_i_013 + 1 | 0;
  if (($incdec_ptr_i_i | 0) == ($add_ptr_i | 0)) {
   $agg_tmp3_i_sroa_0_0_lcssa = $agg_tmp3_i_sroa_0_1;
   break;
  } else {
   $agg_tmp3_i_sroa_0_012 = $agg_tmp3_i_sroa_0_1;
   $__first_addr_i_i_013 = $incdec_ptr_i_i;
  }
 }
 $agg_tmp3_i_sroa_0_0__idx = $agg_result | 0;
 HEAP32[$agg_tmp3_i_sroa_0_0__idx >> 2] = $agg_tmp3_i_sroa_0_0_lcssa;
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($agg_result, $this, $__s, $0, $1, $__tm, $__fmt, $__mod) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $__nar = 0, $__ne = 0, $arraydecay = 0, $2 = 0, $agg_tmp_sroa_0_0_copyload1 = 0, $__first_addr_i_i_012 = 0, $agg_tmp3_i_sroa_0_011 = 0, $3 = 0, $__nout__i_i_i_i = 0, $4 = 0, $retval_i_i_i_i_0 = 0, $agg_tmp3_i_sroa_0_1 = 0, $incdec_ptr_i_i = 0, $agg_tmp3_i_sroa_0_0_lcssa = 0, $agg_tmp3_i_sroa_0_0__idx = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 408 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__nar = __stackBase__ | 0;
 $__ne = __stackBase__ + 400 | 0;
 $arraydecay = $__nar | 0;
 HEAP32[$__ne >> 2] = $__nar + 400;
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this + 8 | 0, $arraydecay, $__ne, $__tm, $__fmt, $__mod);
 $2 = HEAP32[$__ne >> 2] | 0;
 $agg_tmp_sroa_0_0_copyload1 = HEAP32[$__s >> 2] | 0;
 if (($arraydecay | 0) == ($2 | 0)) {
  $agg_tmp3_i_sroa_0_0_lcssa = $agg_tmp_sroa_0_0_copyload1;
  $agg_tmp3_i_sroa_0_0__idx = $agg_result | 0;
  HEAP32[$agg_tmp3_i_sroa_0_0__idx >> 2] = $agg_tmp3_i_sroa_0_0_lcssa;
  STACKTOP = __stackBase__;
  return;
 } else {
  $agg_tmp3_i_sroa_0_011 = $agg_tmp_sroa_0_0_copyload1;
  $__first_addr_i_i_012 = $arraydecay;
 }
 while (1) {
  $3 = HEAP32[$__first_addr_i_i_012 >> 2] | 0;
  if (($agg_tmp3_i_sroa_0_011 | 0) == 0) {
   $agg_tmp3_i_sroa_0_1 = 0;
  } else {
   $__nout__i_i_i_i = $agg_tmp3_i_sroa_0_011 + 24 | 0;
   $4 = HEAP32[$__nout__i_i_i_i >> 2] | 0;
   if (($4 | 0) == (HEAP32[$agg_tmp3_i_sroa_0_011 + 28 >> 2] | 0)) {
    $retval_i_i_i_i_0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$agg_tmp3_i_sroa_0_011 >> 2] | 0) + 52 >> 2] & 63]($agg_tmp3_i_sroa_0_011, $3) | 0;
   } else {
    HEAP32[$__nout__i_i_i_i >> 2] = $4 + 4;
    HEAP32[$4 >> 2] = $3;
    $retval_i_i_i_i_0 = $3;
   }
   $agg_tmp3_i_sroa_0_1 = ($retval_i_i_i_i_0 | 0) == -1 ? 0 : $agg_tmp3_i_sroa_0_011;
  }
  $incdec_ptr_i_i = $__first_addr_i_i_012 + 4 | 0;
  if (($incdec_ptr_i_i | 0) == ($2 | 0)) {
   $agg_tmp3_i_sroa_0_0_lcssa = $agg_tmp3_i_sroa_0_1;
   break;
  } else {
   $agg_tmp3_i_sroa_0_011 = $agg_tmp3_i_sroa_0_1;
   $__first_addr_i_i_012 = $incdec_ptr_i_i;
  }
 }
 $agg_tmp3_i_sroa_0_0__idx = $agg_result | 0;
 HEAP32[$agg_tmp3_i_sroa_0_0__idx >> 2] = $agg_tmp3_i_sroa_0_0_lcssa;
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12);
 return;
}
function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12);
 return;
}
function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12);
 return;
}
function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12);
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = HEAP32[$this + 8 >> 2] | 0;
 if (($0 | 0) == 0) {
  return;
 }
 _freelocale($0 | 0);
 return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0;
 $0 = $this;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (($1 | 0) == 0) {
  __ZdlPv($0);
  return;
 }
 _freelocale($1 | 0);
 __ZdlPv($0);
 return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = HEAP32[$this + 8 >> 2] | 0;
 if (($0 | 0) == 0) {
  return;
 }
 _freelocale($0 | 0);
 return;
}
function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this, $__wb, $__we, $__tm, $__fmt, $__mod) {
 $this = $this | 0;
 $__wb = $__wb | 0;
 $__we = $__we | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $fmt_i = 0, $mb = 0, $__nb = 0, $arraydecay = 0, $0 = 0, $arrayinit_element_i = 0, $arrayinit_element2_i = 0, $__loc__i = 0, $sub_ptr_div_i = 0, $call_i = 0, $call1_i = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 120 | 0;
 $fmt_i = __stackBase__ | 0;
 $mb = __stackBase__ + 112 | 0;
 $__nb = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $arraydecay = __stackBase__ + 8 | 0;
 $0 = $fmt_i | 0;
 HEAP8[$0] = 37;
 $arrayinit_element_i = $fmt_i + 1 | 0;
 HEAP8[$arrayinit_element_i] = $__fmt;
 $arrayinit_element2_i = $fmt_i + 2 | 0;
 HEAP8[$arrayinit_element2_i] = $__mod;
 HEAP8[$fmt_i + 3 | 0] = 0;
 if ($__mod << 24 >> 24 != 0) {
  HEAP8[$arrayinit_element_i] = $__mod;
  HEAP8[$arrayinit_element2_i] = $__fmt;
 }
 $__loc__i = $this | 0;
 _strftime($arraydecay | 0, 100, $0 | 0, $__tm | 0, HEAP32[$__loc__i >> 2] | 0) | 0;
 HEAP32[$mb >> 2] = 0;
 HEAP32[$mb + 4 >> 2] = 0;
 HEAP32[$__nb >> 2] = $arraydecay;
 $sub_ptr_div_i = (HEAP32[$__we >> 2] | 0) - $__wb >> 2;
 $call_i = _uselocale(HEAP32[$__loc__i >> 2] | 0) | 0;
 $call1_i = _mbsrtowcs($__wb, $__nb, $sub_ptr_div_i, $mb) | 0;
 if (($call_i | 0) != 0) {
  _uselocale($call_i | 0) | 0;
 }
 if (($call1_i | 0) == -1) {
  __ZNSt3__121__throw_runtime_errorEPKc(2192);
 } else {
  HEAP32[$__we >> 2] = $__wb + ($call1_i << 2);
  STACKTOP = __stackBase__;
  return;
 }
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg_result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p_i_i_i = 0, $__wbuf = 0, $__wb = 0, $__wn = 0, $__loc = 0, $__neg = 0, $agg_tmp = 0, $__atoms = 0, $__nbuf = 0, $__first__i_i_i_i_i = 0, $__second__i_i_i_i_i = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $1 = 0, $3 = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $11 = 0, $12 = 0, $arraydecay9 = 0, $17 = 0, $arraydecay12 = 0, $18 = 0, $19 = 0, $sub_ptr_sub = 0, $call20 = 0, $exception_i = 0, $__h_sroa_0_1 = 0, $__nc_0 = 0, $__nc_1 = 0, $add_ptr_i = 0, $sub_ptr_rhs_cast40 = 0, $__w_043 = 0, $__nc_242 = 0, $__first_addr_i_0 = 0, $__first_addr_i_0_lcssa = 0, $incdec_ptr42 = 0, $incdec_ptr43 = 0, $__nc_2_lcssa = 0, $exception_i28 = 0, $__imp__i_i = 0, $call3_i1_i1_i = 0, $add_ptr_i_i_i = 0, $__sbuf__i_i_i = 0, $39 = 0, $44 = 0, $cmp_i_i_i = 0, $45 = 0, $52 = 0, $__shared_owners__i_i = 0, $57 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 280 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i = __stackBase__ | 0;
 $__wbuf = __stackBase__ + 16 | 0;
 $__wb = __stackBase__ + 120 | 0;
 $__wn = __stackBase__ + 128 | 0;
 $__loc = __stackBase__ + 136 | 0;
 $__neg = __stackBase__ + 144 | 0;
 $agg_tmp = __stackBase__ + 152 | 0;
 $__atoms = __stackBase__ + 160 | 0;
 $__nbuf = __stackBase__ + 176 | 0;
 $__first__i_i_i_i_i = $__wb | 0;
 HEAP32[$__first__i_i_i_i_i >> 2] = $__wbuf;
 $__second__i_i_i_i_i = $__wb + 4 | 0;
 HEAP32[$__second__i_i_i_i_i >> 2] = 176;
 $__locale__i_i = $__loc | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $1 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + 1, tempValue;
 $3 = HEAP32[$__locale__i_i >> 2] | 0;
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17816;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4455] | 0) - 1 | 0;
 $8 = HEAP32[$3 + 8 >> 2] | 0;
 do {
  if ((HEAP32[$3 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   $11 = $9;
   HEAP8[$__neg] = 0;
   $12 = $__e | 0;
   HEAP32[$agg_tmp >> 2] = HEAP32[$12 >> 2];
   do {
    if (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b, $agg_tmp, $__intl, $__loc, HEAP32[$__iob + 4 >> 2] | 0, $__err, $__neg, $11, $__wb, $__wn, $__wbuf + 100 | 0) | 0) {
     $arraydecay9 = $__atoms | 0;
     $17 = HEAP32[(HEAP32[$9 >> 2] | 0) + 32 >> 2] | 0;
     FUNCTION_TABLE_iiiii[$17 & 15]($11, 8680, 8690, $arraydecay9) | 0;
     $arraydecay12 = $__nbuf | 0;
     $18 = HEAP32[$__wn >> 2] | 0;
     $19 = HEAP32[$__first__i_i_i_i_i >> 2] | 0;
     $sub_ptr_sub = $18 - $19 | 0;
     do {
      if (($sub_ptr_sub | 0) > 98) {
       $call20 = _malloc($sub_ptr_sub + 2 | 0) | 0;
       if (($call20 | 0) != 0) {
        $__nc_0 = $call20;
        $__h_sroa_0_1 = $call20;
        break;
       }
       $exception_i = ___cxa_allocate_exception(4) | 0;
       HEAP32[$exception_i >> 2] = 9152;
       ___cxa_throw($exception_i | 0, 15312, 28);
      } else {
       $__nc_0 = $arraydecay12;
       $__h_sroa_0_1 = 0;
      }
     } while (0);
     if ((HEAP8[$__neg] & 1) == 0) {
      $__nc_1 = $__nc_0;
     } else {
      HEAP8[$__nc_0] = 45;
      $__nc_1 = $__nc_0 + 1 | 0;
     }
     if ($19 >>> 0 < $18 >>> 0) {
      $add_ptr_i = $__atoms + 10 | 0;
      $sub_ptr_rhs_cast40 = $__atoms;
      $__nc_242 = $__nc_1;
      $__w_043 = $19;
      while (1) {
       $__first_addr_i_0 = $arraydecay9;
       while (1) {
        if (($__first_addr_i_0 | 0) == ($add_ptr_i | 0)) {
         $__first_addr_i_0_lcssa = $add_ptr_i;
         break;
        }
        if ((HEAP8[$__first_addr_i_0] | 0) == (HEAP8[$__w_043] | 0)) {
         $__first_addr_i_0_lcssa = $__first_addr_i_0;
         break;
        } else {
         $__first_addr_i_0 = $__first_addr_i_0 + 1 | 0;
        }
       }
       HEAP8[$__nc_242] = HEAP8[8680 + ($__first_addr_i_0_lcssa - $sub_ptr_rhs_cast40) | 0] | 0;
       $incdec_ptr42 = $__w_043 + 1 | 0;
       $incdec_ptr43 = $__nc_242 + 1 | 0;
       if ($incdec_ptr42 >>> 0 < (HEAP32[$__wn >> 2] | 0) >>> 0) {
        $__nc_242 = $incdec_ptr43;
        $__w_043 = $incdec_ptr42;
       } else {
        $__nc_2_lcssa = $incdec_ptr43;
        break;
       }
      }
     } else {
      $__nc_2_lcssa = $__nc_1;
     }
     HEAP8[$__nc_2_lcssa] = 0;
     if ((_sscanf($arraydecay12 | 0, 4800, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $__v, tempInt) | 0) | 0) == 1) {
      if (($__h_sroa_0_1 | 0) == 0) {
       break;
      }
      _free($__h_sroa_0_1);
      break;
     }
     $exception_i28 = ___cxa_allocate_exception(8) | 0;
     HEAP32[$exception_i28 >> 2] = 9216;
     $__imp__i_i = $exception_i28 + 4 | 0;
     if (($__imp__i_i | 0) != 0) {
      $call3_i1_i1_i = __Znaj(28) | 0;
      HEAP32[$call3_i1_i1_i + 4 >> 2] = 15;
      HEAP32[$call3_i1_i1_i >> 2] = 15;
      $add_ptr_i_i_i = $call3_i1_i1_i + 12 | 0;
      HEAP32[$__imp__i_i >> 2] = $add_ptr_i_i_i;
      HEAP32[$call3_i1_i1_i + 8 >> 2] = 0;
      _memcpy($add_ptr_i_i_i | 0, 3728, 16) | 0;
     }
     ___cxa_throw($exception_i28 | 0, 15344, 72);
    }
   } while (0);
   $__sbuf__i_i_i = $__b | 0;
   $39 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   do {
    if (($39 | 0) == 0) {
     $44 = 0;
    } else {
     if ((HEAP32[$39 + 12 >> 2] | 0) != (HEAP32[$39 + 16 >> 2] | 0)) {
      $44 = $39;
      break;
     }
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$39 >> 2] | 0) + 36 >> 2] & 255]($39) | 0) != -1) {
      $44 = $39;
      break;
     }
     HEAP32[$__sbuf__i_i_i >> 2] = 0;
     $44 = 0;
    }
   } while (0);
   $cmp_i_i_i = ($44 | 0) == 0;
   $45 = HEAP32[$12 >> 2] | 0;
   do {
    if (($45 | 0) == 0) {
     label = 12318;
    } else {
     if ((HEAP32[$45 + 12 >> 2] | 0) != (HEAP32[$45 + 16 >> 2] | 0)) {
      if ($cmp_i_i_i) {
       break;
      } else {
       label = 12320;
       break;
      }
     }
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 255]($45) | 0) == -1) {
      HEAP32[$12 >> 2] = 0;
      label = 12318;
      break;
     } else {
      if ($cmp_i_i_i ^ ($45 | 0) == 0) {
       break;
      } else {
       label = 12320;
       break;
      }
     }
    }
   } while (0);
   if ((label | 0) == 12318) {
    if ($cmp_i_i_i) {
     label = 12320;
    }
   }
   if ((label | 0) == 12320) {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   }
   HEAP32[$agg_result >> 2] = $44;
   $52 = HEAP32[$__locale__i_i >> 2] | 0;
   $__shared_owners__i_i = $52 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$52 >> 2] | 0) + 8 >> 2] & 511]($52 | 0);
   }
   $57 = HEAP32[$__first__i_i_i_i_i >> 2] | 0;
   HEAP32[$__first__i_i_i_i_i >> 2] = 0;
   if (($57 | 0) == 0) {
    STACKTOP = __stackBase__;
    return;
   }
   FUNCTION_TABLE_vi[HEAP32[$__second__i_i_i_i_i >> 2] & 511]($57);
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b, $__e, $__intl, $__loc, $__flags, $__err, $__neg, $__ct, $__wb, $__wn, $__we) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__flags = $__flags | 0;
 $__err = $__err | 0;
 $__neg = $__neg | 0;
 $__ct = $__ct | 0;
 $__wb = $__wb | 0;
 $__wn = $__wn | 0;
 $__we = $__we | 0;
 var $__gbuf = 0, $__pat = 0, $__dp = 0, $__ts = 0, $__grp = 0, $__size__i_i_i415 = 0, $__sym = 0, $__psn = 0, $__nsn = 0, $__spaces = 0, $__fd = 0, $__et = 0, $arraydecay = 0, $__size__i_i_i409 = 0, $__size__i_i_i403 = 0, $__size__i_i_i397 = 0, $__size__i_i_i391 = 0, $__first__i_i_i569 = 0, $__sbuf__i_i_i626 = 0, $__sbuf__i11_i_i648 = 0, $__tab__i = 0, $arraydecay_i_i_i210 = 0, $__data__i_i = 0, $__cap__i_i = 0, $__size__i21_i_i = 0, $arraydecay_i_i_i1493 = 0, $__size__i23_i1545 = 0, $__data__i21_i_i1484 = 0, $arraydecay_i_i_i = 0, $__size__i23_i1352 = 0, $__data__i21_i_i = 0, $tobool128493 = 0, $arraydecay_i_i_i1953 = 0, $__size__i23_i_i = 0, $__data__i21_i_i2066 = 0, $arrayidx122 = 0, $__second__i_i_i_i = 0, $__size__i23_i1803 = 0, $__p_0694 = 0, $__trailing_sign_0692 = 0, $add_ptr453689 = 0, $__gb_sroa_0_0_load438459686 = 0, $1 = 0, $__gb_sroa_1_4_load448474683 = 0, $__we480680 = 0, $2 = 0, $7 = 0, $cmp_i_i_i645 = 0, $8 = 0, $13 = 0, $conv = 0, $15 = 0, $29 = 0, $30 = 0, $retval_i_i707_0_off0 = 0, $37 = 0, $__ninp__i_i740 = 0, $38 = 0, $retval_i_i734_0_off0 = 0, $43 = 0, $44 = 0, $46 = 0, $cond_i_i193 = 0, $conv_i_i65_i = 0, $cond_i77_i = 0, $arraydecay_i_i_i210_ = 0, $add_i = 0, $mul_i = 0, $_sroa_speculated_i = 0, $cond_i93_sink_i = 0, $call_i_i_i218 = 0, $or_i_i = 0, $49 = 0, $50 = 0, $arraydecay_i_i_i210_836 = 0, $add_ptr_sum_i = 0, $53 = 0, $54 = 0, $59 = 0, $cmp_i_i_i794 = 0, $64 = 0, $65 = 0, $66 = 0, $retval_i_i827_0_off0 = 0, $73 = 0, $__ninp__i_i877 = 0, $74 = 0, $retval_i_i870_0_off0 = 0, $79 = 0, $80 = 0, $82 = 0, $cond_i_i227 = 0, $conv_i_i65_i228 = 0, $cond_i77_i236 = 0, $arraydecay_i_i_i210_837 = 0, $add_i277 = 0, $mul_i278 = 0, $_sroa_speculated_i280 = 0, $cond_i93_sink_i286 = 0, $call_i_i_i295 = 0, $or_i_i291 = 0, $85 = 0, $86 = 0, $arraydecay_i_i_i210_838 = 0, $add_ptr_sum_i250 = 0, $88 = 0, $conv_i_i937 = 0, $cond_i958 = 0, $90 = 0, $conv_i_i978 = 0, $cond_i999 = 0, $cmp38 = 0, $92 = 0, $93 = 0, $94 = 0, $cmp_i_i1443 = 0, $extract_t143 = 0, $98 = 0, $retval_i_i1250_0_off0 = 0, $101 = 0, $__ninp__i_i1312 = 0, $102 = 0, $105 = 0, $conv_i_i1343 = 0, $extract_t140 = 0, $111 = 0, $retval_i_i1435_0_off0 = 0, $114 = 0, $__ninp__i_i1505 = 0, $115 = 0, $118 = 0, $conv_i_i1536 = 0, $extract_t133 = 0, $_pre1040 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $retval_i_i1560_0_off0 = 0, $__ninp__i_i1658 = 0, $cmp_i_i1660 = 0, $131 = 0, $conv_i_i1689 = 0, $retval_i_i1713_0_off0 = 0, $140 = 0, $__ninp__i_i1824 = 0, $141 = 0, $144 = 0, $conv_i_i1855 = 0, $149 = 0, $150 = 0, $arraydecay_i_i_i1953_ = 0, $conv_i_i22_i = 0, $add_ptr_i2078 = 0, $__sym_space_end_sroa_0_0 = 0, $154 = 0, $__sym_space_end_sroa_0_0_lcssa = 0, $sub_ptr_sub_i = 0, $157 = 0, $conv_i_i2775 = 0, $cond_i2796 = 0, $arraydecay_i_i_i210_843 = 0, $add_ptr_i2654 = 0, $agg_tmp4_i_sroa_0_0556 = 0, $agg_tmp29_i_sroa_0_0555 = 0, $incdec_ptr_i9_i_i = 0, $__sym_curr_char_sroa_0_0_ph876 = 0, $conv_i_i22_i2403881 = 0, $__sym_curr_char_sroa_0_0888 = 0, $163 = 0, $164 = 0, $169 = 0, $cmp_i_i_i2275 = 0, $174 = 0, $175 = 0, $176 = 0, $retval_i_i2216_0_off0 = 0, $182 = 0, $__ninp__i_i2187 = 0, $183 = 0, $186 = 0, $incdec_ptr_i = 0, $_pre804 = 0, $conv_i_i22_i2403 = 0, $__sym_curr_char_sroa_0_0_lcssa = 0, $189 = 0, $conv_i_i22_i2150 = 0, $__we485 = 0, $__gb_sroa_1_4_load448472 = 0, $193 = 0, $__gb_sroa_0_0_load438462 = 0, $add_ptr456 = 0, $__ng_0 = 0, $194 = 0, $199 = 0, $cmp_i_i_i1994 = 0, $200 = 0, $205 = 0, $206 = 0, $retval_i_i1896_0_off0 = 0, $213 = 0, $cmp_i297 = 0, $215 = 0, $sub_ptr_sub_i300 = 0, $cond_i301 = 0, $call15_i = 0, $_pr_i = 0, $218 = 0, $add_ptr_i308 = 0, $220 = 0, $__we487 = 0, $conv_i_i1794 = 0, $sub_ptr_sub_i314 = 0, $cond_i317 = 0, $cond15_i = 0, $call16_i = 0, $223 = 0, $__gb_sroa_1_4_load448471 = 0, $224 = 0, $__gb_sroa_0_0_load438464 = 0, $add_ptr458 = 0, $__we486 = 0, $__gb_sroa_1_4_load448470 = 0, $225 = 0, $__gb_sroa_0_0_load438463 = 0, $add_ptr457 = 0, $__ng_1 = 0, $226 = 0, $__ninp__i_i1638 = 0, $227 = 0, $230 = 0, $sub_ptr_sub_i335 = 0, $cond_i338 = 0, $cond15_i344 = 0, $call16_i345 = 0, $231 = 0, $__gb_sroa_1_4_load448468 = 0, $232 = 0, $__gb_sroa_0_0_load438465 = 0, $add_ptr452 = 0, $__gb_sroa_1_4_load448469 = 0, $233 = 0, $__gb_sroa_0_0_load438461 = 0, $add_ptr455 = 0, $235 = 0, $240 = 0, $cmp_i_i_i1403 = 0, $241 = 0, $246 = 0, $247 = 0, $248 = 0, $retval_i_i1286_0_off0 = 0, $255 = 0, $__ninp__i_i1236 = 0, $256 = 0, $259 = 0, $260 = 0, $__we484553 = 0, $261 = 0, $266 = 0, $cmp_i_i_i1116 = 0, $271 = 0, $272 = 0, $273 = 0, $retval_i_i1019_0_off0 = 0, $281 = 0, $cmp_i364 = 0, $283 = 0, $sub_ptr_sub_i368 = 0, $cond_i371 = 0, $call15_i375 = 0, $_pr_i380 = 0, $286 = 0, $add_ptr_i387 = 0, $288 = 0, $__we483 = 0, $289 = 0, $290 = 0, $extract_t112 = 0, $295 = 0, $retval_i_i900_0_off0 = 0, $dec = 0, $297 = 0, $__ninp__i_i595 = 0, $298 = 0, $301 = 0, $__we482 = 0, $__we481 = 0, $__gb_sroa_1_4_load448473 = 0, $305 = 0, $__gb_sroa_0_0_load438460 = 0, $add_ptr454 = 0, $__trailing_sign_1 = 0, $inc296 = 0, $__trailing_sign_0_lcssa = 0, $__gb_sroa_0_0_load438459_lcssa = 0, $_lcssa = 0, $__gb_sroa_1_4_load448474_lcssa = 0, $__size__i_i = 0, $arraydecay_i_i_i_i = 0, $__data__i21_i_i_i = 0, $__size__i23_i = 0, $__i_0 = 0, $conv_i_i579 = 0, $cond_i = 0, $308 = 0, $313 = 0, $cmp_i_i_i526 = 0, $314 = 0, $319 = 0, $320 = 0, $retval_i_i469_0_off0 = 0, $cond_i_i_i = 0, $inc319 = 0, $329 = 0, $__ninp__i_i = 0, $330 = 0, $333 = 0, $__gb_sroa_1_4_load448475 = 0, $336 = 0, $retval_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 440 | 0;
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__gbuf = __stackBase__ | 0;
 $__pat = __stackBase__ + 400 | 0;
 $__dp = __stackBase__ + 408 | 0;
 $__ts = __stackBase__ + 416 | 0;
 $__grp = __stackBase__ + 424 | 0;
 $__size__i_i_i415 = $__grp;
 $__sym = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__psn = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__nsn = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__spaces = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__fd = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__et = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $arraydecay = $__gbuf | 0;
 _memset($__size__i_i_i415 | 0, 0, 12);
 $__size__i_i_i409 = $__sym;
 $__size__i_i_i403 = $__psn;
 $__size__i_i_i397 = $__nsn;
 $__size__i_i_i391 = $__spaces;
 _memset($__size__i_i_i409 | 0, 0, 12);
 _memset($__size__i_i_i403 | 0, 0, 12);
 _memset($__size__i_i_i397 | 0, 0, 12);
 _memset($__size__i_i_i391 | 0, 0, 12);
 __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__psn, $__nsn, $__fd);
 $__first__i_i_i569 = $__wb | 0;
 HEAP32[$__wn >> 2] = HEAP32[$__first__i_i_i569 >> 2];
 $__sbuf__i_i_i626 = $__b | 0;
 $__sbuf__i11_i_i648 = $__e | 0;
 $__tab__i = $__ct + 8 | 0;
 $arraydecay_i_i_i210 = $__spaces + 1 | 0;
 $__data__i_i = $__spaces + 8 | 0;
 $__cap__i_i = $__spaces | 0;
 $__size__i21_i_i = $__spaces + 4 | 0;
 $arraydecay_i_i_i1493 = $__nsn + 1 | 0;
 $__size__i23_i1545 = $__nsn + 4 | 0;
 $__data__i21_i_i1484 = $__nsn + 8 | 0;
 $arraydecay_i_i_i = $__psn + 1 | 0;
 $__size__i23_i1352 = $__psn + 4 | 0;
 $__data__i21_i_i = $__psn + 8 | 0;
 $tobool128493 = ($__flags & 512 | 0) != 0;
 $arraydecay_i_i_i1953 = $__sym + 1 | 0;
 $__size__i23_i_i = $__sym + 4 | 0;
 $__data__i21_i_i2066 = $__sym + 8 | 0;
 $arrayidx122 = $__pat + 3 | 0;
 $__second__i_i_i_i = $__wb + 4 | 0;
 $__size__i23_i1803 = $__grp + 4 | 0;
 $__we480680 = $__we;
 $__gb_sroa_1_4_load448474683 = 176;
 $1 = $arraydecay;
 $__gb_sroa_0_0_load438459686 = $arraydecay;
 $add_ptr453689 = $__gbuf + 400 | 0;
 $__trailing_sign_0692 = 0;
 $__p_0694 = 0;
 L14477 : while (1) {
  $2 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
  do {
   if (($2 | 0) == 0) {
    $7 = 0;
   } else {
    if ((HEAP32[$2 + 12 >> 2] | 0) != (HEAP32[$2 + 16 >> 2] | 0)) {
     $7 = $2;
     break;
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 36 >> 2] & 255]($2) | 0) == -1) {
     HEAP32[$__sbuf__i_i_i626 >> 2] = 0;
     $7 = 0;
     break;
    } else {
     $7 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
     break;
    }
   }
  } while (0);
  $cmp_i_i_i645 = ($7 | 0) == 0;
  $8 = HEAP32[$__sbuf__i11_i_i648 >> 2] | 0;
  do {
   if (($8 | 0) == 0) {
    label = 12349;
   } else {
    if ((HEAP32[$8 + 12 >> 2] | 0) != (HEAP32[$8 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i645) {
      $13 = $8;
      break;
     } else {
      $__gb_sroa_1_4_load448474_lcssa = $__gb_sroa_1_4_load448474683;
      $_lcssa = $1;
      $__gb_sroa_0_0_load438459_lcssa = $__gb_sroa_0_0_load438459686;
      $__trailing_sign_0_lcssa = $__trailing_sign_0692;
      label = 12647;
      break L14477;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 255]($8) | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i648 >> 2] = 0;
     label = 12349;
     break;
    } else {
     if ($cmp_i_i_i645) {
      $13 = $8;
      break;
     } else {
      $__gb_sroa_1_4_load448474_lcssa = $__gb_sroa_1_4_load448474683;
      $_lcssa = $1;
      $__gb_sroa_0_0_load438459_lcssa = $__gb_sroa_0_0_load438459686;
      $__trailing_sign_0_lcssa = $__trailing_sign_0692;
      label = 12647;
      break L14477;
     }
    }
   }
  } while (0);
  if ((label | 0) == 12349) {
   label = 0;
   if ($cmp_i_i_i645) {
    $__gb_sroa_1_4_load448474_lcssa = $__gb_sroa_1_4_load448474683;
    $_lcssa = $1;
    $__gb_sroa_0_0_load438459_lcssa = $__gb_sroa_0_0_load438459686;
    $__trailing_sign_0_lcssa = $__trailing_sign_0692;
    label = 12647;
    break;
   } else {
    $13 = 0;
   }
  }
  $conv = HEAP8[$__pat + $__p_0694 | 0] | 0;
  do {
   if (($conv | 0) == 2) {
    if (!(($__trailing_sign_0692 | 0) != 0 | $__p_0694 >>> 0 < 2)) {
     if (($__p_0694 | 0) == 2) {
      $149 = (HEAP8[$arrayidx122] | 0) != 0;
     } else {
      $149 = 0;
     }
     if (!($tobool128493 | $149)) {
      $__trailing_sign_1 = 0;
      $add_ptr454 = $add_ptr453689;
      $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438459686;
      $305 = $1;
      $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448474683;
      $__we481 = $__we480680;
      break;
     }
    }
    $150 = HEAP8[$__size__i_i_i409] | 0;
    $arraydecay_i_i_i1953_ = ($150 & 1) == 0 ? $arraydecay_i_i_i1953 : HEAP32[$__data__i21_i_i2066 >> 2] | 0;
    L14507 : do {
     if (($__p_0694 | 0) == 0) {
      $__sym_curr_char_sroa_0_0_ph876 = $arraydecay_i_i_i1953_;
     } else {
      if ((HEAPU8[$__pat + ($__p_0694 - 1) | 0] | 0) >= 2) {
       $__sym_curr_char_sroa_0_0_ph876 = $arraydecay_i_i_i1953_;
       break;
      }
      $conv_i_i22_i = $150 & 255;
      $add_ptr_i2078 = $arraydecay_i_i_i1953_ + (($conv_i_i22_i & 1 | 0) == 0 ? $conv_i_i22_i >>> 1 : HEAP32[$__size__i23_i_i >> 2] | 0) | 0;
      $__sym_space_end_sroa_0_0 = $arraydecay_i_i_i1953_;
      while (1) {
       if (($__sym_space_end_sroa_0_0 | 0) == ($add_ptr_i2078 | 0)) {
        $__sym_space_end_sroa_0_0_lcssa = $add_ptr_i2078;
        break;
       }
       $154 = HEAP8[$__sym_space_end_sroa_0_0] | 0;
       if ($154 << 24 >> 24 <= -1) {
        $__sym_space_end_sroa_0_0_lcssa = $__sym_space_end_sroa_0_0;
        break;
       }
       if ((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($154 << 24 >> 24 << 1) >> 1] & 8192) == 0) {
        $__sym_space_end_sroa_0_0_lcssa = $__sym_space_end_sroa_0_0;
        break;
       } else {
        $__sym_space_end_sroa_0_0 = $__sym_space_end_sroa_0_0 + 1 | 0;
       }
      }
      $sub_ptr_sub_i = $__sym_space_end_sroa_0_0_lcssa - $arraydecay_i_i_i1953_ | 0;
      $157 = HEAP8[$__size__i_i_i391] | 0;
      $conv_i_i2775 = $157 & 255;
      $cond_i2796 = ($conv_i_i2775 & 1 | 0) == 0 ? $conv_i_i2775 >>> 1 : HEAP32[$__size__i21_i_i >> 2] | 0;
      if ($sub_ptr_sub_i >>> 0 > $cond_i2796 >>> 0) {
       $__sym_curr_char_sroa_0_0_ph876 = $arraydecay_i_i_i1953_;
       break;
      }
      $arraydecay_i_i_i210_843 = ($157 & 1) == 0 ? $arraydecay_i_i_i210 : HEAP32[$__data__i_i >> 2] | 0;
      $add_ptr_i2654 = $arraydecay_i_i_i210_843 + $cond_i2796 | 0;
      if (($__sym_space_end_sroa_0_0_lcssa | 0) == ($arraydecay_i_i_i1953_ | 0)) {
       $__sym_curr_char_sroa_0_0_ph876 = $arraydecay_i_i_i1953_;
       break;
      }
      $agg_tmp29_i_sroa_0_0555 = $arraydecay_i_i_i1953_;
      $agg_tmp4_i_sroa_0_0556 = $arraydecay_i_i_i210_843 + ($cond_i2796 - $sub_ptr_sub_i) | 0;
      while (1) {
       if ((HEAP8[$agg_tmp4_i_sroa_0_0556] | 0) != (HEAP8[$agg_tmp29_i_sroa_0_0555] | 0)) {
        $__sym_curr_char_sroa_0_0_ph876 = $arraydecay_i_i_i1953_;
        break L14507;
       }
       $incdec_ptr_i9_i_i = $agg_tmp4_i_sroa_0_0556 + 1 | 0;
       if (($incdec_ptr_i9_i_i | 0) == ($add_ptr_i2654 | 0)) {
        $__sym_curr_char_sroa_0_0_ph876 = $__sym_space_end_sroa_0_0_lcssa;
        break;
       } else {
        $agg_tmp29_i_sroa_0_0555 = $agg_tmp29_i_sroa_0_0555 + 1 | 0;
        $agg_tmp4_i_sroa_0_0556 = $incdec_ptr_i9_i_i;
       }
      }
     }
    } while (0);
    $conv_i_i22_i2403881 = $150 & 255;
    L14521 : do {
     if (($__sym_curr_char_sroa_0_0_ph876 | 0) == ($arraydecay_i_i_i1953_ + (($conv_i_i22_i2403881 & 1 | 0) == 0 ? $conv_i_i22_i2403881 >>> 1 : HEAP32[$__size__i23_i_i >> 2] | 0) | 0)) {
      $__sym_curr_char_sroa_0_0_lcssa = $__sym_curr_char_sroa_0_0_ph876;
     } else {
      $163 = $13;
      $__sym_curr_char_sroa_0_0888 = $__sym_curr_char_sroa_0_0_ph876;
      while (1) {
       $164 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
       do {
        if (($164 | 0) == 0) {
         $169 = 0;
        } else {
         if ((HEAP32[$164 + 12 >> 2] | 0) != (HEAP32[$164 + 16 >> 2] | 0)) {
          $169 = $164;
          break;
         }
         if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$164 >> 2] | 0) + 36 >> 2] & 255]($164) | 0) == -1) {
          HEAP32[$__sbuf__i_i_i626 >> 2] = 0;
          $169 = 0;
          break;
         } else {
          $169 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
          break;
         }
        }
       } while (0);
       $cmp_i_i_i2275 = ($169 | 0) == 0;
       do {
        if (($163 | 0) == 0) {
         label = 12513;
        } else {
         if ((HEAP32[$163 + 12 >> 2] | 0) != (HEAP32[$163 + 16 >> 2] | 0)) {
          if ($cmp_i_i_i2275) {
           $174 = $163;
           break;
          } else {
           $__sym_curr_char_sroa_0_0_lcssa = $__sym_curr_char_sroa_0_0888;
           break L14521;
          }
         }
         if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$163 >> 2] | 0) + 36 >> 2] & 255]($163) | 0) == -1) {
          HEAP32[$__sbuf__i11_i_i648 >> 2] = 0;
          label = 12513;
          break;
         } else {
          if ($cmp_i_i_i2275) {
           $174 = $163;
           break;
          } else {
           $__sym_curr_char_sroa_0_0_lcssa = $__sym_curr_char_sroa_0_0888;
           break L14521;
          }
         }
        }
       } while (0);
       if ((label | 0) == 12513) {
        label = 0;
        if ($cmp_i_i_i2275) {
         $__sym_curr_char_sroa_0_0_lcssa = $__sym_curr_char_sroa_0_0888;
         break L14521;
        } else {
         $174 = 0;
        }
       }
       $175 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
       $176 = HEAP32[$175 + 12 >> 2] | 0;
       if (($176 | 0) == (HEAP32[$175 + 16 >> 2] | 0)) {
        $retval_i_i2216_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$175 >> 2] | 0) + 36 >> 2] & 255]($175) | 0) & 255;
       } else {
        $retval_i_i2216_0_off0 = HEAP8[$176] | 0;
       }
       if ($retval_i_i2216_0_off0 << 24 >> 24 != (HEAP8[$__sym_curr_char_sroa_0_0888] | 0)) {
        $__sym_curr_char_sroa_0_0_lcssa = $__sym_curr_char_sroa_0_0888;
        break L14521;
       }
       $182 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
       $__ninp__i_i2187 = $182 + 12 | 0;
       $183 = HEAP32[$__ninp__i_i2187 >> 2] | 0;
       if (($183 | 0) == (HEAP32[$182 + 16 >> 2] | 0)) {
        $186 = HEAP32[(HEAP32[$182 >> 2] | 0) + 40 >> 2] | 0;
        FUNCTION_TABLE_ii[$186 & 255]($182) | 0;
       } else {
        HEAP32[$__ninp__i_i2187 >> 2] = $183 + 1;
       }
       $incdec_ptr_i = $__sym_curr_char_sroa_0_0888 + 1 | 0;
       $_pre804 = HEAP8[$__size__i_i_i409] | 0;
       $conv_i_i22_i2403 = $_pre804 & 255;
       if (($incdec_ptr_i | 0) == ((($_pre804 & 1) == 0 ? $arraydecay_i_i_i1953 : HEAP32[$__data__i21_i_i2066 >> 2] | 0) + (($conv_i_i22_i2403 & 1 | 0) == 0 ? $conv_i_i22_i2403 >>> 1 : HEAP32[$__size__i23_i_i >> 2] | 0) | 0)) {
        $__sym_curr_char_sroa_0_0_lcssa = $incdec_ptr_i;
        break;
       } else {
        $163 = $174;
        $__sym_curr_char_sroa_0_0888 = $incdec_ptr_i;
       }
      }
     }
    } while (0);
    if (!$tobool128493) {
     $__trailing_sign_1 = $__trailing_sign_0692;
     $add_ptr454 = $add_ptr453689;
     $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438459686;
     $305 = $1;
     $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448474683;
     $__we481 = $__we480680;
     break;
    }
    $189 = HEAP8[$__size__i_i_i409] | 0;
    $conv_i_i22_i2150 = $189 & 255;
    if (($__sym_curr_char_sroa_0_0_lcssa | 0) == ((($189 & 1) == 0 ? $arraydecay_i_i_i1953 : HEAP32[$__data__i21_i_i2066 >> 2] | 0) + (($conv_i_i22_i2150 & 1 | 0) == 0 ? $conv_i_i22_i2150 >>> 1 : HEAP32[$__size__i23_i_i >> 2] | 0) | 0)) {
     $__trailing_sign_1 = $__trailing_sign_0692;
     $add_ptr454 = $add_ptr453689;
     $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438459686;
     $305 = $1;
     $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448474683;
     $__we481 = $__we480680;
    } else {
     label = 12526;
     break L14477;
    }
   } else if (($conv | 0) == 4) {
    $15 = HEAP8[$__ts] | 0;
    $__ng_0 = 0;
    $add_ptr456 = $add_ptr453689;
    $__gb_sroa_0_0_load438462 = $__gb_sroa_0_0_load438459686;
    $193 = $1;
    $__gb_sroa_1_4_load448472 = $__gb_sroa_1_4_load448474683;
    $__we485 = $__we480680;
    L14557 : while (1) {
     $194 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
     do {
      if (($194 | 0) == 0) {
       $199 = 0;
      } else {
       if ((HEAP32[$194 + 12 >> 2] | 0) != (HEAP32[$194 + 16 >> 2] | 0)) {
        $199 = $194;
        break;
       }
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$194 >> 2] | 0) + 36 >> 2] & 255]($194) | 0) == -1) {
        HEAP32[$__sbuf__i_i_i626 >> 2] = 0;
        $199 = 0;
        break;
       } else {
        $199 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
        break;
       }
      }
     } while (0);
     $cmp_i_i_i1994 = ($199 | 0) == 0;
     $200 = HEAP32[$__sbuf__i11_i_i648 >> 2] | 0;
     do {
      if (($200 | 0) == 0) {
       label = 12539;
      } else {
       if ((HEAP32[$200 + 12 >> 2] | 0) != (HEAP32[$200 + 16 >> 2] | 0)) {
        if ($cmp_i_i_i1994) {
         break;
        } else {
         break L14557;
        }
       }
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$200 >> 2] | 0) + 36 >> 2] & 255]($200) | 0) == -1) {
        HEAP32[$__sbuf__i11_i_i648 >> 2] = 0;
        label = 12539;
        break;
       } else {
        if ($cmp_i_i_i1994) {
         break;
        } else {
         break L14557;
        }
       }
      }
     } while (0);
     if ((label | 0) == 12539) {
      label = 0;
      if ($cmp_i_i_i1994) {
       break;
      }
     }
     $205 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
     $206 = HEAP32[$205 + 12 >> 2] | 0;
     if (($206 | 0) == (HEAP32[$205 + 16 >> 2] | 0)) {
      $retval_i_i1896_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$205 >> 2] | 0) + 36 >> 2] & 255]($205) | 0) & 255;
     } else {
      $retval_i_i1896_0_off0 = HEAP8[$206] | 0;
     }
     do {
      if ($retval_i_i1896_0_off0 << 24 >> 24 > -1) {
       if ((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($retval_i_i1896_0_off0 << 24 >> 24 << 1) >> 1] & 2048) == 0) {
        label = 12559;
        break;
       }
       $213 = HEAP32[$__wn >> 2] | 0;
       if (($213 | 0) == ($__we485 | 0)) {
        $cmp_i297 = (HEAP32[$__second__i_i_i_i >> 2] | 0) != 176;
        $215 = HEAP32[$__first__i_i_i569 >> 2] | 0;
        $sub_ptr_sub_i300 = $__we485 - $215 | 0;
        $cond_i301 = $sub_ptr_sub_i300 >>> 0 < 2147483647 ? $sub_ptr_sub_i300 << 1 : -1;
        $call15_i = _realloc($cmp_i297 ? $215 : 0, $cond_i301) | 0;
        if (($call15_i | 0) == 0) {
         label = 12549;
         break L14477;
        }
        do {
         if ($cmp_i297) {
          HEAP32[$__first__i_i_i569 >> 2] = $call15_i;
          $218 = $call15_i;
         } else {
          $_pr_i = HEAP32[$__first__i_i_i569 >> 2] | 0;
          HEAP32[$__first__i_i_i569 >> 2] = $call15_i;
          if (($_pr_i | 0) == 0) {
           $218 = $call15_i;
           break;
          }
          FUNCTION_TABLE_vi[HEAP32[$__second__i_i_i_i >> 2] & 511]($_pr_i);
          $218 = HEAP32[$__first__i_i_i569 >> 2] | 0;
         }
        } while (0);
        HEAP32[$__second__i_i_i_i >> 2] = 82;
        $add_ptr_i308 = $218 + $sub_ptr_sub_i300 | 0;
        HEAP32[$__wn >> 2] = $add_ptr_i308;
        $__we487 = (HEAP32[$__first__i_i_i569 >> 2] | 0) + $cond_i301 | 0;
        $220 = $add_ptr_i308;
       } else {
        $__we487 = $__we485;
        $220 = $213;
       }
       HEAP32[$__wn >> 2] = $220 + 1;
       HEAP8[$220] = $retval_i_i1896_0_off0;
       $__ng_1 = $__ng_0 + 1 | 0;
       $add_ptr457 = $add_ptr456;
       $__gb_sroa_0_0_load438463 = $__gb_sroa_0_0_load438462;
       $225 = $193;
       $__gb_sroa_1_4_load448470 = $__gb_sroa_1_4_load448472;
       $__we486 = $__we487;
      } else {
       label = 12559;
      }
     } while (0);
     if ((label | 0) == 12559) {
      label = 0;
      $conv_i_i1794 = HEAPU8[$__size__i_i_i415] | 0;
      if (!(($__ng_0 | 0) != 0 & ((($conv_i_i1794 & 1 | 0) == 0 ? $conv_i_i1794 >>> 1 : HEAP32[$__size__i23_i1803 >> 2] | 0) | 0) != 0 & $retval_i_i1896_0_off0 << 24 >> 24 == $15 << 24 >> 24)) {
       break;
      }
      if (($__gb_sroa_0_0_load438462 | 0) == ($add_ptr456 | 0)) {
       $sub_ptr_sub_i314 = $__gb_sroa_0_0_load438462 - $193 | 0;
       $cond_i317 = $sub_ptr_sub_i314 >>> 0 < 2147483647 ? $sub_ptr_sub_i314 << 1 : -1;
       if (($__gb_sroa_1_4_load448472 | 0) == 176) {
        $cond15_i = 0;
       } else {
        $cond15_i = $193;
       }
       $call16_i = _realloc($cond15_i, $cond_i317) | 0;
       $223 = $call16_i;
       if (($call16_i | 0) == 0) {
        label = 12564;
        break L14477;
       }
       $add_ptr458 = $223 + ($cond_i317 >>> 2 << 2) | 0;
       $__gb_sroa_0_0_load438464 = $223 + ($sub_ptr_sub_i314 >> 2 << 2) | 0;
       $224 = $223;
       $__gb_sroa_1_4_load448471 = 82;
      } else {
       $add_ptr458 = $add_ptr456;
       $__gb_sroa_0_0_load438464 = $__gb_sroa_0_0_load438462;
       $224 = $193;
       $__gb_sroa_1_4_load448471 = $__gb_sroa_1_4_load448472;
      }
      HEAP32[$__gb_sroa_0_0_load438464 >> 2] = $__ng_0;
      $__ng_1 = 0;
      $add_ptr457 = $add_ptr458;
      $__gb_sroa_0_0_load438463 = $__gb_sroa_0_0_load438464 + 4 | 0;
      $225 = $224;
      $__gb_sroa_1_4_load448470 = $__gb_sroa_1_4_load448471;
      $__we486 = $__we485;
     }
     $226 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
     $__ninp__i_i1638 = $226 + 12 | 0;
     $227 = HEAP32[$__ninp__i_i1638 >> 2] | 0;
     if (($227 | 0) == (HEAP32[$226 + 16 >> 2] | 0)) {
      $230 = HEAP32[(HEAP32[$226 >> 2] | 0) + 40 >> 2] | 0;
      FUNCTION_TABLE_ii[$230 & 255]($226) | 0;
      $__ng_0 = $__ng_1;
      $add_ptr456 = $add_ptr457;
      $__gb_sroa_0_0_load438462 = $__gb_sroa_0_0_load438463;
      $193 = $225;
      $__gb_sroa_1_4_load448472 = $__gb_sroa_1_4_load448470;
      $__we485 = $__we486;
      continue;
     } else {
      HEAP32[$__ninp__i_i1638 >> 2] = $227 + 1;
      $__ng_0 = $__ng_1;
      $add_ptr456 = $add_ptr457;
      $__gb_sroa_0_0_load438462 = $__gb_sroa_0_0_load438463;
      $193 = $225;
      $__gb_sroa_1_4_load448472 = $__gb_sroa_1_4_load448470;
      $__we485 = $__we486;
      continue;
     }
    }
    if (($193 | 0) == ($__gb_sroa_0_0_load438462 | 0) | ($__ng_0 | 0) == 0) {
     $add_ptr455 = $add_ptr456;
     $__gb_sroa_0_0_load438461 = $__gb_sroa_0_0_load438462;
     $233 = $193;
     $__gb_sroa_1_4_load448469 = $__gb_sroa_1_4_load448472;
    } else {
     if (($__gb_sroa_0_0_load438462 | 0) == ($add_ptr456 | 0)) {
      $sub_ptr_sub_i335 = $__gb_sroa_0_0_load438462 - $193 | 0;
      $cond_i338 = $sub_ptr_sub_i335 >>> 0 < 2147483647 ? $sub_ptr_sub_i335 << 1 : -1;
      if (($__gb_sroa_1_4_load448472 | 0) == 176) {
       $cond15_i344 = 0;
      } else {
       $cond15_i344 = $193;
      }
      $call16_i345 = _realloc($cond15_i344, $cond_i338) | 0;
      $231 = $call16_i345;
      if (($call16_i345 | 0) == 0) {
       label = 12576;
       break L14477;
      }
      $add_ptr452 = $231 + ($cond_i338 >>> 2 << 2) | 0;
      $__gb_sroa_0_0_load438465 = $231 + ($sub_ptr_sub_i335 >> 2 << 2) | 0;
      $232 = $231;
      $__gb_sroa_1_4_load448468 = 82;
     } else {
      $add_ptr452 = $add_ptr456;
      $__gb_sroa_0_0_load438465 = $__gb_sroa_0_0_load438462;
      $232 = $193;
      $__gb_sroa_1_4_load448468 = $__gb_sroa_1_4_load448472;
     }
     HEAP32[$__gb_sroa_0_0_load438465 >> 2] = $__ng_0;
     $add_ptr455 = $add_ptr452;
     $__gb_sroa_0_0_load438461 = $__gb_sroa_0_0_load438465 + 4 | 0;
     $233 = $232;
     $__gb_sroa_1_4_load448469 = $__gb_sroa_1_4_load448468;
    }
    if ((HEAP32[$__fd >> 2] | 0) > 0) {
     $235 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
     do {
      if (($235 | 0) == 0) {
       $240 = 0;
      } else {
       if ((HEAP32[$235 + 12 >> 2] | 0) != (HEAP32[$235 + 16 >> 2] | 0)) {
        $240 = $235;
        break;
       }
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$235 >> 2] | 0) + 36 >> 2] & 255]($235) | 0) == -1) {
        HEAP32[$__sbuf__i_i_i626 >> 2] = 0;
        $240 = 0;
        break;
       } else {
        $240 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
        break;
       }
      }
     } while (0);
     $cmp_i_i_i1403 = ($240 | 0) == 0;
     $241 = HEAP32[$__sbuf__i11_i_i648 >> 2] | 0;
     do {
      if (($241 | 0) == 0) {
       label = 12593;
      } else {
       if ((HEAP32[$241 + 12 >> 2] | 0) != (HEAP32[$241 + 16 >> 2] | 0)) {
        if ($cmp_i_i_i1403) {
         $246 = $241;
         break;
        } else {
         label = 12600;
         break L14477;
        }
       }
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$241 >> 2] | 0) + 36 >> 2] & 255]($241) | 0) == -1) {
        HEAP32[$__sbuf__i11_i_i648 >> 2] = 0;
        label = 12593;
        break;
       } else {
        if ($cmp_i_i_i1403) {
         $246 = $241;
         break;
        } else {
         label = 12600;
         break L14477;
        }
       }
      }
     } while (0);
     if ((label | 0) == 12593) {
      label = 0;
      if ($cmp_i_i_i1403) {
       label = 12600;
       break L14477;
      } else {
       $246 = 0;
      }
     }
     $247 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
     $248 = HEAP32[$247 + 12 >> 2] | 0;
     if (($248 | 0) == (HEAP32[$247 + 16 >> 2] | 0)) {
      $retval_i_i1286_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$247 >> 2] | 0) + 36 >> 2] & 255]($247) | 0) & 255;
     } else {
      $retval_i_i1286_0_off0 = HEAP8[$248] | 0;
     }
     if ($retval_i_i1286_0_off0 << 24 >> 24 != (HEAP8[$__dp] | 0)) {
      label = 12600;
      break L14477;
     }
     $255 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
     $__ninp__i_i1236 = $255 + 12 | 0;
     $256 = HEAP32[$__ninp__i_i1236 >> 2] | 0;
     if (($256 | 0) == (HEAP32[$255 + 16 >> 2] | 0)) {
      $259 = HEAP32[(HEAP32[$255 >> 2] | 0) + 40 >> 2] | 0;
      FUNCTION_TABLE_ii[$259 & 255]($255) | 0;
      $__we484553 = $__we485;
      $260 = $246;
     } else {
      HEAP32[$__ninp__i_i1236 >> 2] = $256 + 1;
      $__we484553 = $__we485;
      $260 = $246;
     }
     while (1) {
      $261 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
      do {
       if (($261 | 0) == 0) {
        $266 = 0;
       } else {
        if ((HEAP32[$261 + 12 >> 2] | 0) != (HEAP32[$261 + 16 >> 2] | 0)) {
         $266 = $261;
         break;
        }
        if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$261 >> 2] | 0) + 36 >> 2] & 255]($261) | 0) == -1) {
         HEAP32[$__sbuf__i_i_i626 >> 2] = 0;
         $266 = 0;
         break;
        } else {
         $266 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
         break;
        }
       }
      } while (0);
      $cmp_i_i_i1116 = ($266 | 0) == 0;
      do {
       if (($260 | 0) == 0) {
        label = 12616;
       } else {
        if ((HEAP32[$260 + 12 >> 2] | 0) != (HEAP32[$260 + 16 >> 2] | 0)) {
         if ($cmp_i_i_i1116) {
          $271 = $260;
          break;
         } else {
          label = 12624;
          break L14477;
         }
        }
        if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$260 >> 2] | 0) + 36 >> 2] & 255]($260) | 0) == -1) {
         HEAP32[$__sbuf__i11_i_i648 >> 2] = 0;
         label = 12616;
         break;
        } else {
         if ($cmp_i_i_i1116) {
          $271 = $260;
          break;
         } else {
          label = 12624;
          break L14477;
         }
        }
       }
      } while (0);
      if ((label | 0) == 12616) {
       label = 0;
       if ($cmp_i_i_i1116) {
        label = 12624;
        break L14477;
       } else {
        $271 = 0;
       }
      }
      $272 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
      $273 = HEAP32[$272 + 12 >> 2] | 0;
      if (($273 | 0) == (HEAP32[$272 + 16 >> 2] | 0)) {
       $retval_i_i1019_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$272 >> 2] | 0) + 36 >> 2] & 255]($272) | 0) & 255;
      } else {
       $retval_i_i1019_0_off0 = HEAP8[$273] | 0;
      }
      if ($retval_i_i1019_0_off0 << 24 >> 24 <= -1) {
       label = 12624;
       break L14477;
      }
      if ((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($retval_i_i1019_0_off0 << 24 >> 24 << 1) >> 1] & 2048) == 0) {
       label = 12624;
       break L14477;
      }
      $281 = HEAP32[$__wn >> 2] | 0;
      if (($281 | 0) == ($__we484553 | 0)) {
       $cmp_i364 = (HEAP32[$__second__i_i_i_i >> 2] | 0) != 176;
       $283 = HEAP32[$__first__i_i_i569 >> 2] | 0;
       $sub_ptr_sub_i368 = $__we484553 - $283 | 0;
       $cond_i371 = $sub_ptr_sub_i368 >>> 0 < 2147483647 ? $sub_ptr_sub_i368 << 1 : -1;
       $call15_i375 = _realloc($cmp_i364 ? $283 : 0, $cond_i371) | 0;
       if (($call15_i375 | 0) == 0) {
        label = 12627;
        break L14477;
       }
       do {
        if ($cmp_i364) {
         HEAP32[$__first__i_i_i569 >> 2] = $call15_i375;
         $286 = $call15_i375;
        } else {
         $_pr_i380 = HEAP32[$__first__i_i_i569 >> 2] | 0;
         HEAP32[$__first__i_i_i569 >> 2] = $call15_i375;
         if (($_pr_i380 | 0) == 0) {
          $286 = $call15_i375;
          break;
         }
         FUNCTION_TABLE_vi[HEAP32[$__second__i_i_i_i >> 2] & 511]($_pr_i380);
         $286 = HEAP32[$__first__i_i_i569 >> 2] | 0;
        }
       } while (0);
       HEAP32[$__second__i_i_i_i >> 2] = 82;
       $add_ptr_i387 = $286 + $sub_ptr_sub_i368 | 0;
       HEAP32[$__wn >> 2] = $add_ptr_i387;
       $__we483 = (HEAP32[$__first__i_i_i569 >> 2] | 0) + $cond_i371 | 0;
       $288 = $add_ptr_i387;
      } else {
       $__we483 = $__we484553;
       $288 = $281;
      }
      $289 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
      $290 = HEAP32[$289 + 12 >> 2] | 0;
      if (($290 | 0) == (HEAP32[$289 + 16 >> 2] | 0)) {
       $extract_t112 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$289 >> 2] | 0) + 36 >> 2] & 255]($289) | 0) & 255;
       $retval_i_i900_0_off0 = $extract_t112;
       $295 = HEAP32[$__wn >> 2] | 0;
      } else {
       $retval_i_i900_0_off0 = HEAP8[$290] | 0;
       $295 = $288;
      }
      HEAP32[$__wn >> 2] = $295 + 1;
      HEAP8[$295] = $retval_i_i900_0_off0;
      $dec = (HEAP32[$__fd >> 2] | 0) - 1 | 0;
      HEAP32[$__fd >> 2] = $dec;
      $297 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
      $__ninp__i_i595 = $297 + 12 | 0;
      $298 = HEAP32[$__ninp__i_i595 >> 2] | 0;
      if (($298 | 0) == (HEAP32[$297 + 16 >> 2] | 0)) {
       $301 = HEAP32[(HEAP32[$297 >> 2] | 0) + 40 >> 2] | 0;
       FUNCTION_TABLE_ii[$301 & 255]($297) | 0;
      } else {
       HEAP32[$__ninp__i_i595 >> 2] = $298 + 1;
      }
      if (($dec | 0) > 0) {
       $__we484553 = $__we483;
       $260 = $271;
      } else {
       $__we482 = $__we483;
       break;
      }
     }
    } else {
     $__we482 = $__we485;
    }
    if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$__first__i_i_i569 >> 2] | 0)) {
     label = 12645;
     break L14477;
    } else {
     $__trailing_sign_1 = $__trailing_sign_0692;
     $add_ptr454 = $add_ptr455;
     $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438461;
     $305 = $233;
     $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448469;
     $__we481 = $__we482;
    }
   } else if (($conv | 0) == 0) {
    label = 12402;
   } else if (($conv | 0) == 3) {
    $88 = HEAP8[$__size__i_i_i403] | 0;
    $conv_i_i937 = $88 & 255;
    $cond_i958 = ($conv_i_i937 & 1 | 0) == 0 ? $conv_i_i937 >>> 1 : HEAP32[$__size__i23_i1352 >> 2] | 0;
    $90 = HEAP8[$__size__i_i_i397] | 0;
    $conv_i_i978 = $90 & 255;
    $cond_i999 = ($conv_i_i978 & 1 | 0) == 0 ? $conv_i_i978 >>> 1 : HEAP32[$__size__i23_i1545 >> 2] | 0;
    if (($cond_i958 | 0) == (-$cond_i999 | 0)) {
     $__trailing_sign_1 = $__trailing_sign_0692;
     $add_ptr454 = $add_ptr453689;
     $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438459686;
     $305 = $1;
     $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448474683;
     $__we481 = $__we480680;
     break;
    }
    $cmp38 = ($cond_i958 | 0) == 0;
    $92 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
    $93 = HEAP32[$92 + 12 >> 2] | 0;
    $94 = HEAP32[$92 + 16 >> 2] | 0;
    $cmp_i_i1443 = ($93 | 0) == ($94 | 0);
    if (!($cmp38 | ($cond_i999 | 0) == 0)) {
     if ($cmp_i_i1443) {
      $extract_t133 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$92 >> 2] | 0) + 36 >> 2] & 255]($92) | 0) & 255;
      $_pre1040 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
      $retval_i_i1560_0_off0 = $extract_t133;
      $127 = HEAP8[$__size__i_i_i403] | 0;
      $126 = $_pre1040;
      $125 = HEAP32[$_pre1040 + 12 >> 2] | 0;
      $124 = HEAP32[$_pre1040 + 16 >> 2] | 0;
     } else {
      $retval_i_i1560_0_off0 = HEAP8[$93] | 0;
      $127 = $88;
      $126 = $92;
      $125 = $93;
      $124 = $94;
     }
     $__ninp__i_i1658 = $126 + 12 | 0;
     $cmp_i_i1660 = ($125 | 0) == ($124 | 0);
     if ($retval_i_i1560_0_off0 << 24 >> 24 == (HEAP8[($127 & 1) == 0 ? $arraydecay_i_i_i : HEAP32[$__data__i21_i_i >> 2] | 0] | 0)) {
      if ($cmp_i_i1660) {
       $131 = HEAP32[(HEAP32[$126 >> 2] | 0) + 40 >> 2] | 0;
       FUNCTION_TABLE_ii[$131 & 255]($126) | 0;
      } else {
       HEAP32[$__ninp__i_i1658 >> 2] = $125 + 1;
      }
      $conv_i_i1689 = HEAPU8[$__size__i_i_i403] | 0;
      $__trailing_sign_1 = (($conv_i_i1689 & 1 | 0) == 0 ? $conv_i_i1689 >>> 1 : HEAP32[$__size__i23_i1352 >> 2] | 0) >>> 0 > 1 ? $__psn : $__trailing_sign_0692;
      $add_ptr454 = $add_ptr453689;
      $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438459686;
      $305 = $1;
      $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448474683;
      $__we481 = $__we480680;
      break;
     }
     if ($cmp_i_i1660) {
      $retval_i_i1713_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$126 >> 2] | 0) + 36 >> 2] & 255]($126) | 0) & 255;
     } else {
      $retval_i_i1713_0_off0 = HEAP8[$125] | 0;
     }
     if ($retval_i_i1713_0_off0 << 24 >> 24 != (HEAP8[(HEAP8[$__size__i_i_i397] & 1) == 0 ? $arraydecay_i_i_i1493 : HEAP32[$__data__i21_i_i1484 >> 2] | 0] | 0)) {
      label = 12484;
      break L14477;
     }
     $140 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
     $__ninp__i_i1824 = $140 + 12 | 0;
     $141 = HEAP32[$__ninp__i_i1824 >> 2] | 0;
     if (($141 | 0) == (HEAP32[$140 + 16 >> 2] | 0)) {
      $144 = HEAP32[(HEAP32[$140 >> 2] | 0) + 40 >> 2] | 0;
      FUNCTION_TABLE_ii[$144 & 255]($140) | 0;
     } else {
      HEAP32[$__ninp__i_i1824 >> 2] = $141 + 1;
     }
     HEAP8[$__neg] = 1;
     $conv_i_i1855 = HEAPU8[$__size__i_i_i397] | 0;
     $__trailing_sign_1 = (($conv_i_i1855 & 1 | 0) == 0 ? $conv_i_i1855 >>> 1 : HEAP32[$__size__i23_i1545 >> 2] | 0) >>> 0 > 1 ? $__nsn : $__trailing_sign_0692;
     $add_ptr454 = $add_ptr453689;
     $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438459686;
     $305 = $1;
     $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448474683;
     $__we481 = $__we480680;
     break;
    }
    if ($cmp38) {
     if ($cmp_i_i1443) {
      $extract_t140 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$92 >> 2] | 0) + 36 >> 2] & 255]($92) | 0) & 255;
      $retval_i_i1435_0_off0 = $extract_t140;
      $111 = HEAP8[$__size__i_i_i397] | 0;
     } else {
      $retval_i_i1435_0_off0 = HEAP8[$93] | 0;
      $111 = $90;
     }
     if ($retval_i_i1435_0_off0 << 24 >> 24 != (HEAP8[($111 & 1) == 0 ? $arraydecay_i_i_i1493 : HEAP32[$__data__i21_i_i1484 >> 2] | 0] | 0)) {
      $__trailing_sign_1 = $__trailing_sign_0692;
      $add_ptr454 = $add_ptr453689;
      $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438459686;
      $305 = $1;
      $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448474683;
      $__we481 = $__we480680;
      break;
     }
     $114 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
     $__ninp__i_i1505 = $114 + 12 | 0;
     $115 = HEAP32[$__ninp__i_i1505 >> 2] | 0;
     if (($115 | 0) == (HEAP32[$114 + 16 >> 2] | 0)) {
      $118 = HEAP32[(HEAP32[$114 >> 2] | 0) + 40 >> 2] | 0;
      FUNCTION_TABLE_ii[$118 & 255]($114) | 0;
     } else {
      HEAP32[$__ninp__i_i1505 >> 2] = $115 + 1;
     }
     HEAP8[$__neg] = 1;
     $conv_i_i1536 = HEAPU8[$__size__i_i_i397] | 0;
     $__trailing_sign_1 = (($conv_i_i1536 & 1 | 0) == 0 ? $conv_i_i1536 >>> 1 : HEAP32[$__size__i23_i1545 >> 2] | 0) >>> 0 > 1 ? $__nsn : $__trailing_sign_0692;
     $add_ptr454 = $add_ptr453689;
     $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438459686;
     $305 = $1;
     $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448474683;
     $__we481 = $__we480680;
     break;
    }
    if ($cmp_i_i1443) {
     $extract_t143 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$92 >> 2] | 0) + 36 >> 2] & 255]($92) | 0) & 255;
     $retval_i_i1250_0_off0 = $extract_t143;
     $98 = HEAP8[$__size__i_i_i403] | 0;
    } else {
     $retval_i_i1250_0_off0 = HEAP8[$93] | 0;
     $98 = $88;
    }
    if ($retval_i_i1250_0_off0 << 24 >> 24 != (HEAP8[($98 & 1) == 0 ? $arraydecay_i_i_i : HEAP32[$__data__i21_i_i >> 2] | 0] | 0)) {
     HEAP8[$__neg] = 1;
     $__trailing_sign_1 = $__trailing_sign_0692;
     $add_ptr454 = $add_ptr453689;
     $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438459686;
     $305 = $1;
     $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448474683;
     $__we481 = $__we480680;
     break;
    }
    $101 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
    $__ninp__i_i1312 = $101 + 12 | 0;
    $102 = HEAP32[$__ninp__i_i1312 >> 2] | 0;
    if (($102 | 0) == (HEAP32[$101 + 16 >> 2] | 0)) {
     $105 = HEAP32[(HEAP32[$101 >> 2] | 0) + 40 >> 2] | 0;
     FUNCTION_TABLE_ii[$105 & 255]($101) | 0;
    } else {
     HEAP32[$__ninp__i_i1312 >> 2] = $102 + 1;
    }
    $conv_i_i1343 = HEAPU8[$__size__i_i_i403] | 0;
    $__trailing_sign_1 = (($conv_i_i1343 & 1 | 0) == 0 ? $conv_i_i1343 >>> 1 : HEAP32[$__size__i23_i1352 >> 2] | 0) >>> 0 > 1 ? $__psn : $__trailing_sign_0692;
    $add_ptr454 = $add_ptr453689;
    $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438459686;
    $305 = $1;
    $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448474683;
    $__we481 = $__we480680;
   } else if (($conv | 0) == 1) {
    if (($__p_0694 | 0) == 3) {
     $__gb_sroa_1_4_load448474_lcssa = $__gb_sroa_1_4_load448474683;
     $_lcssa = $1;
     $__gb_sroa_0_0_load438459_lcssa = $__gb_sroa_0_0_load438459686;
     $__trailing_sign_0_lcssa = $__trailing_sign_0692;
     label = 12647;
     break L14477;
    }
    $29 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
    $30 = HEAP32[$29 + 12 >> 2] | 0;
    if (($30 | 0) == (HEAP32[$29 + 16 >> 2] | 0)) {
     $retval_i_i707_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 36 >> 2] & 255]($29) | 0) & 255;
    } else {
     $retval_i_i707_0_off0 = HEAP8[$30] | 0;
    }
    if ($retval_i_i707_0_off0 << 24 >> 24 <= -1) {
     label = 12401;
     break L14477;
    }
    if ((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($retval_i_i707_0_off0 << 24 >> 24 << 1) >> 1] & 8192) == 0) {
     label = 12401;
     break L14477;
    }
    $37 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
    $__ninp__i_i740 = $37 + 12 | 0;
    $38 = HEAP32[$__ninp__i_i740 >> 2] | 0;
    if (($38 | 0) == (HEAP32[$37 + 16 >> 2] | 0)) {
     $retval_i_i734_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$37 >> 2] | 0) + 40 >> 2] & 255]($37) | 0) & 255;
    } else {
     HEAP32[$__ninp__i_i740 >> 2] = $38 + 1;
     $retval_i_i734_0_off0 = HEAP8[$38] | 0;
    }
    $43 = HEAP8[$__size__i_i_i391] | 0;
    if (($43 & 1) == 0) {
     $cond_i_i193 = 10;
     $46 = $43;
    } else {
     $44 = HEAP32[$__cap__i_i >> 2] | 0;
     $cond_i_i193 = ($44 & -2) - 1 | 0;
     $46 = $44 & 255;
    }
    $conv_i_i65_i = $46 & 255;
    $cond_i77_i = ($conv_i_i65_i & 1 | 0) == 0 ? $conv_i_i65_i >>> 1 : HEAP32[$__size__i21_i_i >> 2] | 0;
    if (($cond_i77_i | 0) == ($cond_i_i193 | 0)) {
     if (($cond_i_i193 | 0) == -3) {
      label = 12389;
      break L14477;
     }
     $arraydecay_i_i_i210_ = ($46 & 1) == 0 ? $arraydecay_i_i_i210 : HEAP32[$__data__i_i >> 2] | 0;
     do {
      if ($cond_i_i193 >>> 0 < 2147483631) {
       $add_i = $cond_i_i193 + 1 | 0;
       $mul_i = $cond_i_i193 << 1;
       $_sroa_speculated_i = $add_i >>> 0 < $mul_i >>> 0 ? $mul_i : $add_i;
       if ($_sroa_speculated_i >>> 0 < 11) {
        $cond_i93_sink_i = 11;
        break;
       }
       $cond_i93_sink_i = $_sroa_speculated_i + 16 & -16;
      } else {
       $cond_i93_sink_i = -2;
      }
     } while (0);
     $call_i_i_i218 = __Znwj($cond_i93_sink_i) | 0;
     _memcpy($call_i_i_i218 | 0, $arraydecay_i_i_i210_ | 0, $cond_i_i193) | 0;
     if (($cond_i_i193 | 0) != 10) {
      __ZdlPv($arraydecay_i_i_i210_);
     }
     HEAP32[$__data__i_i >> 2] = $call_i_i_i218;
     $or_i_i = $cond_i93_sink_i | 1;
     HEAP32[$__cap__i_i >> 2] = $or_i_i;
     $50 = $or_i_i & 255;
     $49 = $call_i_i_i218;
    } else {
     $50 = $46;
     $49 = HEAP32[$__data__i_i >> 2] | 0;
    }
    $arraydecay_i_i_i210_836 = ($50 & 1) == 0 ? $arraydecay_i_i_i210 : $49;
    HEAP8[$arraydecay_i_i_i210_836 + $cond_i77_i | 0] = $retval_i_i734_0_off0;
    $add_ptr_sum_i = $cond_i77_i + 1 | 0;
    HEAP8[$arraydecay_i_i_i210_836 + $add_ptr_sum_i | 0] = 0;
    if ((HEAP8[$__size__i_i_i391] & 1) == 0) {
     HEAP8[$__size__i_i_i391] = $add_ptr_sum_i << 1 & 255;
     label = 12402;
     break;
    } else {
     HEAP32[$__size__i21_i_i >> 2] = $add_ptr_sum_i;
     label = 12402;
     break;
    }
   } else {
    $__trailing_sign_1 = $__trailing_sign_0692;
    $add_ptr454 = $add_ptr453689;
    $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438459686;
    $305 = $1;
    $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448474683;
    $__we481 = $__we480680;
   }
  } while (0);
  L14787 : do {
   if ((label | 0) == 12402) {
    label = 0;
    if (($__p_0694 | 0) == 3) {
     $__gb_sroa_1_4_load448474_lcssa = $__gb_sroa_1_4_load448474683;
     $_lcssa = $1;
     $__gb_sroa_0_0_load438459_lcssa = $__gb_sroa_0_0_load438459686;
     $__trailing_sign_0_lcssa = $__trailing_sign_0692;
     label = 12647;
     break L14477;
    } else {
     $53 = $13;
    }
    while (1) {
     $54 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
     do {
      if (($54 | 0) == 0) {
       $59 = 0;
      } else {
       if ((HEAP32[$54 + 12 >> 2] | 0) != (HEAP32[$54 + 16 >> 2] | 0)) {
        $59 = $54;
        break;
       }
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$54 >> 2] | 0) + 36 >> 2] & 255]($54) | 0) == -1) {
        HEAP32[$__sbuf__i_i_i626 >> 2] = 0;
        $59 = 0;
        break;
       } else {
        $59 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
        break;
       }
      }
     } while (0);
     $cmp_i_i_i794 = ($59 | 0) == 0;
     do {
      if (($53 | 0) == 0) {
       label = 12415;
      } else {
       if ((HEAP32[$53 + 12 >> 2] | 0) != (HEAP32[$53 + 16 >> 2] | 0)) {
        if ($cmp_i_i_i794) {
         $64 = $53;
         break;
        } else {
         $__trailing_sign_1 = $__trailing_sign_0692;
         $add_ptr454 = $add_ptr453689;
         $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438459686;
         $305 = $1;
         $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448474683;
         $__we481 = $__we480680;
         break L14787;
        }
       }
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$53 >> 2] | 0) + 36 >> 2] & 255]($53) | 0) == -1) {
        HEAP32[$__sbuf__i11_i_i648 >> 2] = 0;
        label = 12415;
        break;
       } else {
        if ($cmp_i_i_i794) {
         $64 = $53;
         break;
        } else {
         $__trailing_sign_1 = $__trailing_sign_0692;
         $add_ptr454 = $add_ptr453689;
         $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438459686;
         $305 = $1;
         $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448474683;
         $__we481 = $__we480680;
         break L14787;
        }
       }
      }
     } while (0);
     if ((label | 0) == 12415) {
      label = 0;
      if ($cmp_i_i_i794) {
       $__trailing_sign_1 = $__trailing_sign_0692;
       $add_ptr454 = $add_ptr453689;
       $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438459686;
       $305 = $1;
       $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448474683;
       $__we481 = $__we480680;
       break L14787;
      } else {
       $64 = 0;
      }
     }
     $65 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
     $66 = HEAP32[$65 + 12 >> 2] | 0;
     if (($66 | 0) == (HEAP32[$65 + 16 >> 2] | 0)) {
      $retval_i_i827_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$65 >> 2] | 0) + 36 >> 2] & 255]($65) | 0) & 255;
     } else {
      $retval_i_i827_0_off0 = HEAP8[$66] | 0;
     }
     if ($retval_i_i827_0_off0 << 24 >> 24 <= -1) {
      $__trailing_sign_1 = $__trailing_sign_0692;
      $add_ptr454 = $add_ptr453689;
      $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438459686;
      $305 = $1;
      $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448474683;
      $__we481 = $__we480680;
      break L14787;
     }
     if ((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($retval_i_i827_0_off0 << 24 >> 24 << 1) >> 1] & 8192) == 0) {
      $__trailing_sign_1 = $__trailing_sign_0692;
      $add_ptr454 = $add_ptr453689;
      $__gb_sroa_0_0_load438460 = $__gb_sroa_0_0_load438459686;
      $305 = $1;
      $__gb_sroa_1_4_load448473 = $__gb_sroa_1_4_load448474683;
      $__we481 = $__we480680;
      break L14787;
     }
     $73 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
     $__ninp__i_i877 = $73 + 12 | 0;
     $74 = HEAP32[$__ninp__i_i877 >> 2] | 0;
     if (($74 | 0) == (HEAP32[$73 + 16 >> 2] | 0)) {
      $retval_i_i870_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 40 >> 2] & 255]($73) | 0) & 255;
     } else {
      HEAP32[$__ninp__i_i877 >> 2] = $74 + 1;
      $retval_i_i870_0_off0 = HEAP8[$74] | 0;
     }
     $79 = HEAP8[$__size__i_i_i391] | 0;
     if (($79 & 1) == 0) {
      $cond_i_i227 = 10;
      $82 = $79;
     } else {
      $80 = HEAP32[$__cap__i_i >> 2] | 0;
      $cond_i_i227 = ($80 & -2) - 1 | 0;
      $82 = $80 & 255;
     }
     $conv_i_i65_i228 = $82 & 255;
     $cond_i77_i236 = ($conv_i_i65_i228 & 1 | 0) == 0 ? $conv_i_i65_i228 >>> 1 : HEAP32[$__size__i21_i_i >> 2] | 0;
     if (($cond_i77_i236 | 0) == ($cond_i_i227 | 0)) {
      if (($cond_i_i227 | 0) == -3) {
       label = 12432;
       break L14477;
      }
      $arraydecay_i_i_i210_837 = ($82 & 1) == 0 ? $arraydecay_i_i_i210 : HEAP32[$__data__i_i >> 2] | 0;
      do {
       if ($cond_i_i227 >>> 0 < 2147483631) {
        $add_i277 = $cond_i_i227 + 1 | 0;
        $mul_i278 = $cond_i_i227 << 1;
        $_sroa_speculated_i280 = $add_i277 >>> 0 < $mul_i278 >>> 0 ? $mul_i278 : $add_i277;
        if ($_sroa_speculated_i280 >>> 0 < 11) {
         $cond_i93_sink_i286 = 11;
         break;
        }
        $cond_i93_sink_i286 = $_sroa_speculated_i280 + 16 & -16;
       } else {
        $cond_i93_sink_i286 = -2;
       }
      } while (0);
      $call_i_i_i295 = __Znwj($cond_i93_sink_i286) | 0;
      _memcpy($call_i_i_i295 | 0, $arraydecay_i_i_i210_837 | 0, $cond_i_i227) | 0;
      if (($cond_i_i227 | 0) != 10) {
       __ZdlPv($arraydecay_i_i_i210_837);
      }
      HEAP32[$__data__i_i >> 2] = $call_i_i_i295;
      $or_i_i291 = $cond_i93_sink_i286 | 1;
      HEAP32[$__cap__i_i >> 2] = $or_i_i291;
      $86 = $or_i_i291 & 255;
      $85 = $call_i_i_i295;
     } else {
      $86 = $82;
      $85 = HEAP32[$__data__i_i >> 2] | 0;
     }
     $arraydecay_i_i_i210_838 = ($86 & 1) == 0 ? $arraydecay_i_i_i210 : $85;
     HEAP8[$arraydecay_i_i_i210_838 + $cond_i77_i236 | 0] = $retval_i_i870_0_off0;
     $add_ptr_sum_i250 = $cond_i77_i236 + 1 | 0;
     HEAP8[$arraydecay_i_i_i210_838 + $add_ptr_sum_i250 | 0] = 0;
     if ((HEAP8[$__size__i_i_i391] & 1) == 0) {
      HEAP8[$__size__i_i_i391] = $add_ptr_sum_i250 << 1 & 255;
      $53 = $64;
      continue;
     } else {
      HEAP32[$__size__i21_i_i >> 2] = $add_ptr_sum_i250;
      $53 = $64;
      continue;
     }
    }
   }
  } while (0);
  $inc296 = $__p_0694 + 1 | 0;
  if ($inc296 >>> 0 < 4) {
   $__we480680 = $__we481;
   $__gb_sroa_1_4_load448474683 = $__gb_sroa_1_4_load448473;
   $1 = $305;
   $__gb_sroa_0_0_load438459686 = $__gb_sroa_0_0_load438460;
   $add_ptr453689 = $add_ptr454;
   $__trailing_sign_0692 = $__trailing_sign_1;
   $__p_0694 = $inc296;
  } else {
   $__gb_sroa_1_4_load448474_lcssa = $__gb_sroa_1_4_load448473;
   $_lcssa = $305;
   $__gb_sroa_0_0_load438459_lcssa = $__gb_sroa_0_0_load438460;
   $__trailing_sign_0_lcssa = $__trailing_sign_1;
   label = 12647;
   break;
  }
 }
 L14843 : do {
  if ((label | 0) == 12401) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $336 = $1;
   $__gb_sroa_1_4_load448475 = $__gb_sroa_1_4_load448474683;
  } else if ((label | 0) == 12600) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $336 = $233;
   $__gb_sroa_1_4_load448475 = $__gb_sroa_1_4_load448469;
  } else if ((label | 0) == 12389) {
   __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
   return 0;
  } else if ((label | 0) == 12624) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $336 = $233;
   $__gb_sroa_1_4_load448475 = $__gb_sroa_1_4_load448469;
  } else if ((label | 0) == 12627) {
   __ZSt17__throw_bad_allocv();
   return 0;
  } else if ((label | 0) == 12645) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $336 = $233;
   $__gb_sroa_1_4_load448475 = $__gb_sroa_1_4_load448469;
  } else if ((label | 0) == 12576) {
   __ZSt17__throw_bad_allocv();
   return 0;
  } else if ((label | 0) == 12484) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $336 = $1;
   $__gb_sroa_1_4_load448475 = $__gb_sroa_1_4_load448474683;
  } else if ((label | 0) == 12549) {
   __ZSt17__throw_bad_allocv();
   return 0;
  } else if ((label | 0) == 12647) {
   L14858 : do {
    if (($__trailing_sign_0_lcssa | 0) != 0) {
     $__size__i_i = $__trailing_sign_0_lcssa;
     $arraydecay_i_i_i_i = $__trailing_sign_0_lcssa + 1 | 0;
     $__data__i21_i_i_i = $__trailing_sign_0_lcssa + 8 | 0;
     $__size__i23_i = $__trailing_sign_0_lcssa + 4 | 0;
     $__i_0 = 1;
     L14860 : while (1) {
      $conv_i_i579 = HEAPU8[$__size__i_i] | 0;
      if (($conv_i_i579 & 1 | 0) == 0) {
       $cond_i = $conv_i_i579 >>> 1;
      } else {
       $cond_i = HEAP32[$__size__i23_i >> 2] | 0;
      }
      if ($__i_0 >>> 0 >= $cond_i >>> 0) {
       break L14858;
      }
      $308 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
      do {
       if (($308 | 0) == 0) {
        $313 = 0;
       } else {
        if ((HEAP32[$308 + 12 >> 2] | 0) != (HEAP32[$308 + 16 >> 2] | 0)) {
         $313 = $308;
         break;
        }
        if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$308 >> 2] | 0) + 36 >> 2] & 255]($308) | 0) == -1) {
         HEAP32[$__sbuf__i_i_i626 >> 2] = 0;
         $313 = 0;
         break;
        } else {
         $313 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
         break;
        }
       }
      } while (0);
      $cmp_i_i_i526 = ($313 | 0) == 0;
      $314 = HEAP32[$__sbuf__i11_i_i648 >> 2] | 0;
      do {
       if (($314 | 0) == 0) {
        label = 12665;
       } else {
        if ((HEAP32[$314 + 12 >> 2] | 0) != (HEAP32[$314 + 16 >> 2] | 0)) {
         if ($cmp_i_i_i526) {
          break;
         } else {
          break L14860;
         }
        }
        if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$314 >> 2] | 0) + 36 >> 2] & 255]($314) | 0) == -1) {
         HEAP32[$__sbuf__i11_i_i648 >> 2] = 0;
         label = 12665;
         break;
        } else {
         if ($cmp_i_i_i526) {
          break;
         } else {
          break L14860;
         }
        }
       }
      } while (0);
      if ((label | 0) == 12665) {
       label = 0;
       if ($cmp_i_i_i526) {
        break;
       }
      }
      $319 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
      $320 = HEAP32[$319 + 12 >> 2] | 0;
      if (($320 | 0) == (HEAP32[$319 + 16 >> 2] | 0)) {
       $retval_i_i469_0_off0 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$319 >> 2] | 0) + 36 >> 2] & 255]($319) | 0) & 255;
      } else {
       $retval_i_i469_0_off0 = HEAP8[$320] | 0;
      }
      if ((HEAP8[$__size__i_i] & 1) == 0) {
       $cond_i_i_i = $arraydecay_i_i_i_i;
      } else {
       $cond_i_i_i = HEAP32[$__data__i21_i_i_i >> 2] | 0;
      }
      if ($retval_i_i469_0_off0 << 24 >> 24 != (HEAP8[$cond_i_i_i + $__i_0 | 0] | 0)) {
       break;
      }
      $inc319 = $__i_0 + 1 | 0;
      $329 = HEAP32[$__sbuf__i_i_i626 >> 2] | 0;
      $__ninp__i_i = $329 + 12 | 0;
      $330 = HEAP32[$__ninp__i_i >> 2] | 0;
      if (($330 | 0) == (HEAP32[$329 + 16 >> 2] | 0)) {
       $333 = HEAP32[(HEAP32[$329 >> 2] | 0) + 40 >> 2] | 0;
       FUNCTION_TABLE_ii[$333 & 255]($329) | 0;
       $__i_0 = $inc319;
       continue;
      } else {
       HEAP32[$__ninp__i_i >> 2] = $330 + 1;
       $__i_0 = $inc319;
       continue;
      }
     }
     HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
     $retval_0 = 0;
     $336 = $_lcssa;
     $__gb_sroa_1_4_load448475 = $__gb_sroa_1_4_load448474_lcssa;
     break L14843;
    }
   } while (0);
   if (($_lcssa | 0) == ($__gb_sroa_0_0_load438459_lcssa | 0)) {
    $retval_0 = 1;
    $336 = $__gb_sroa_0_0_load438459_lcssa;
    $__gb_sroa_1_4_load448475 = $__gb_sroa_1_4_load448474_lcssa;
    break;
   }
   HEAP32[$__et >> 2] = 0;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp, $_lcssa, $__gb_sroa_0_0_load438459_lcssa, $__et);
   if ((HEAP32[$__et >> 2] | 0) == 0) {
    $retval_0 = 1;
    $336 = $_lcssa;
    $__gb_sroa_1_4_load448475 = $__gb_sroa_1_4_load448474_lcssa;
    break;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $336 = $_lcssa;
   $__gb_sroa_1_4_load448475 = $__gb_sroa_1_4_load448474_lcssa;
  } else if ((label | 0) == 12432) {
   __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
   return 0;
  } else if ((label | 0) == 12526) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $336 = $1;
   $__gb_sroa_1_4_load448475 = $__gb_sroa_1_4_load448474683;
  } else if ((label | 0) == 12564) {
   __ZSt17__throw_bad_allocv();
   return 0;
  }
 } while (0);
 if ((HEAP8[$__size__i_i_i391] & 1) != 0) {
  __ZdlPv(HEAP32[$__data__i_i >> 2] | 0);
 }
 if ((HEAP8[$__size__i_i_i397] & 1) != 0) {
  __ZdlPv(HEAP32[$__data__i21_i_i1484 >> 2] | 0);
 }
 if ((HEAP8[$__size__i_i_i403] & 1) != 0) {
  __ZdlPv(HEAP32[$__data__i21_i_i >> 2] | 0);
 }
 if ((HEAP8[$__size__i_i_i409] & 1) != 0) {
  __ZdlPv(HEAP32[$__data__i21_i_i2066 >> 2] | 0);
 }
 if ((HEAP8[$__size__i_i_i415] & 1) != 0) {
  __ZdlPv(HEAP32[$__grp + 8 >> 2] | 0);
 }
 if (($336 | 0) == 0) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 FUNCTION_TABLE_vi[$__gb_sroa_1_4_load448475 & 511]($336);
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $__size__i_i = 0, $sub_ptr_rhs_cast_i_i = 0, $0 = 0, $conv_i_i = 0, $cond_i = 0, $2 = 0, $4 = 0, $cond_i84 = 0, $sub_ptr_sub_i_i = 0, $5 = 0, $cond_i61 = 0, $scevgep20 = 0, $__p_019 = 0, $__first_addr_018 = 0, $incdec_ptr8 = 0, $add9 = 0;
 $__size__i_i = $this;
 $sub_ptr_rhs_cast_i_i = $__first;
 $0 = HEAP8[$__size__i_i] | 0;
 $conv_i_i = $0 & 255;
 if (($conv_i_i & 1 | 0) == 0) {
  $cond_i = $conv_i_i >>> 1;
 } else {
  $cond_i = HEAP32[$this + 4 >> 2] | 0;
 }
 if (($0 & 1) == 0) {
  $cond_i84 = 10;
  $4 = $0;
 } else {
  $2 = HEAP32[$this >> 2] | 0;
  $cond_i84 = ($2 & -2) - 1 | 0;
  $4 = $2 & 255;
 }
 $sub_ptr_sub_i_i = $__last - $sub_ptr_rhs_cast_i_i | 0;
 if (($__last | 0) == ($__first | 0)) {
  return $this | 0;
 }
 if (($cond_i84 - $cond_i | 0) >>> 0 < $sub_ptr_sub_i_i >>> 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $cond_i84, $cond_i + $sub_ptr_sub_i_i - $cond_i84 | 0, $cond_i, $cond_i, 0, 0);
  $5 = HEAP8[$__size__i_i] | 0;
 } else {
  $5 = $4;
 }
 if (($5 & 1) == 0) {
  $cond_i61 = $this + 1 | 0;
 } else {
  $cond_i61 = HEAP32[$this + 8 >> 2] | 0;
 }
 $scevgep20 = $__last + ($cond_i - $sub_ptr_rhs_cast_i_i) | 0;
 $__first_addr_018 = $__first;
 $__p_019 = $cond_i61 + $cond_i | 0;
 while (1) {
  HEAP8[$__p_019] = HEAP8[$__first_addr_018] | 0;
  $incdec_ptr8 = $__first_addr_018 + 1 | 0;
  if (($incdec_ptr8 | 0) == ($__last | 0)) {
   break;
  } else {
   $__first_addr_018 = $incdec_ptr8;
   $__p_019 = $__p_019 + 1 | 0;
  }
 }
 HEAP8[$cond_i61 + $scevgep20 | 0] = 0;
 $add9 = $cond_i + $sub_ptr_sub_i_i | 0;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  HEAP8[$__size__i_i] = $add9 << 1 & 255;
  return $this | 0;
 } else {
  HEAP32[$this + 4 >> 2] = $add9;
  return $this | 0;
 }
 return 0;
}
function __ZNSt3__121__throw_runtime_errorEPKc($msg) {
 $msg = $msg | 0;
 var $exception = 0, $__imp__i = 0, $call_i_i = 0, $call3_i1_i1 = 0, $add_ptr_i_i = 0;
 $exception = ___cxa_allocate_exception(8) | 0;
 HEAP32[$exception >> 2] = 9216;
 $__imp__i = $exception + 4 | 0;
 if (($__imp__i | 0) == 0) {
  ___cxa_throw($exception | 0, 15344, 72);
 }
 $call_i_i = _strlen($msg | 0) | 0;
 $call3_i1_i1 = __Znaj($call_i_i + 13 | 0) | 0;
 HEAP32[$call3_i1_i1 + 4 >> 2] = $call_i_i;
 HEAP32[$call3_i1_i1 >> 2] = $call_i_i;
 $add_ptr_i_i = $call3_i1_i1 + 12 | 0;
 HEAP32[$__imp__i >> 2] = $add_ptr_i_i;
 HEAP32[$call3_i1_i1 + 8 >> 2] = 0;
 _strcpy($add_ptr_i_i | 0, $msg | 0) | 0;
 ___cxa_throw($exception | 0, 15344, 72);
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg_result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p_i_i_i = 0, $__wbuf = 0, $__wb = 0, $__wn = 0, $__loc = 0, $__neg = 0, $agg_tmp = 0, $__first__i_i_i_i_i = 0, $__second__i_i_i_i_i = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $1 = 0, $3 = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $11 = 0, $12 = 0, $13 = 0, $__size__i46_i = 0, $_pre = 0, $call_i86 = 0, $21 = 0, $22 = 0, $24 = 0, $cond_i_i = 0, $conv_i_i65_i = 0, $cond_i77_i = 0, $26 = 0, $cond_i49_i = 0, $add_ptr_sum_i = 0, $call_i92 = 0, $38 = 0, $add_ptr17 = 0, $__w_0 = 0, $__sbuf__i_i_i = 0, $40 = 0, $45 = 0, $cmp_i_i_i = 0, $52 = 0, $__shared_owners__i_i23 = 0, $57 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i = __stackBase__ | 0;
 $__wbuf = __stackBase__ + 16 | 0;
 $__wb = __stackBase__ + 120 | 0;
 $__wn = __stackBase__ + 128 | 0;
 $__loc = __stackBase__ + 136 | 0;
 $__neg = __stackBase__ + 144 | 0;
 $agg_tmp = __stackBase__ + 152 | 0;
 $__first__i_i_i_i_i = $__wb | 0;
 HEAP32[$__first__i_i_i_i_i >> 2] = $__wbuf;
 $__second__i_i_i_i_i = $__wb + 4 | 0;
 HEAP32[$__second__i_i_i_i_i >> 2] = 176;
 $__locale__i_i = $__loc | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $1 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + 1, tempValue;
 $3 = HEAP32[$__locale__i_i >> 2] | 0;
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17816;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4455] | 0) - 1 | 0;
 $8 = HEAP32[$3 + 8 >> 2] | 0;
 do {
  if ((HEAP32[$3 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   $11 = $9;
   HEAP8[$__neg] = 0;
   $12 = $__e | 0;
   $13 = HEAP32[$12 >> 2] | 0;
   HEAP32[$agg_tmp >> 2] = $13;
   if (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b, $agg_tmp, $__intl, $__loc, HEAP32[$__iob + 4 >> 2] | 0, $__err, $__neg, $11, $__wb, $__wn, $__wbuf + 100 | 0) | 0) {
    $__size__i46_i = $__v;
    if ((HEAP8[$__size__i46_i] & 1) == 0) {
     HEAP8[$__v + 1 | 0] = 0;
     HEAP8[$__size__i46_i] = 0;
    } else {
     HEAP8[HEAP32[$__v + 8 >> 2] | 0] = 0;
     HEAP32[$__v + 4 >> 2] = 0;
    }
    $_pre = $9;
    do {
     if ((HEAP8[$__neg] & 1) != 0) {
      $call_i86 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$_pre >> 2] | 0) + 28 >> 2] & 63]($11, 45) | 0;
      $21 = HEAP8[$__size__i46_i] | 0;
      if (($21 & 1) == 0) {
       $cond_i_i = 10;
       $24 = $21;
      } else {
       $22 = HEAP32[$__v >> 2] | 0;
       $cond_i_i = ($22 & -2) - 1 | 0;
       $24 = $22 & 255;
      }
      $conv_i_i65_i = $24 & 255;
      if (($conv_i_i65_i & 1 | 0) == 0) {
       $cond_i77_i = $conv_i_i65_i >>> 1;
      } else {
       $cond_i77_i = HEAP32[$__v + 4 >> 2] | 0;
      }
      if (($cond_i77_i | 0) == ($cond_i_i | 0)) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($__v, $cond_i_i, 1, $cond_i_i, $cond_i_i, 0, 0);
       $26 = HEAP8[$__size__i46_i] | 0;
      } else {
       $26 = $24;
      }
      if (($26 & 1) == 0) {
       $cond_i49_i = $__v + 1 | 0;
      } else {
       $cond_i49_i = HEAP32[$__v + 8 >> 2] | 0;
      }
      HEAP8[$cond_i49_i + $cond_i77_i | 0] = $call_i86;
      $add_ptr_sum_i = $cond_i77_i + 1 | 0;
      HEAP8[$cond_i49_i + $add_ptr_sum_i | 0] = 0;
      if ((HEAP8[$__size__i46_i] & 1) == 0) {
       HEAP8[$__size__i46_i] = $add_ptr_sum_i << 1 & 255;
       break;
      } else {
       HEAP32[$__v + 4 >> 2] = $add_ptr_sum_i;
       break;
      }
     }
    } while (0);
    $call_i92 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$_pre >> 2] | 0) + 28 >> 2] & 63]($11, 48) | 0;
    $38 = HEAP32[$__wn >> 2] | 0;
    $add_ptr17 = $38 - 1 | 0;
    $__w_0 = HEAP32[$__first__i_i_i_i_i >> 2] | 0;
    while (1) {
     if ($__w_0 >>> 0 >= $add_ptr17 >>> 0) {
      break;
     }
     if ((HEAP8[$__w_0] | 0) == $call_i92 << 24 >> 24) {
      $__w_0 = $__w_0 + 1 | 0;
     } else {
      break;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($__v, $__w_0, $38) | 0;
   }
   $__sbuf__i_i_i = $__b | 0;
   $40 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   do {
    if (($40 | 0) == 0) {
     $45 = 0;
    } else {
     if ((HEAP32[$40 + 12 >> 2] | 0) != (HEAP32[$40 + 16 >> 2] | 0)) {
      $45 = $40;
      break;
     }
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$40 >> 2] | 0) + 36 >> 2] & 255]($40) | 0) != -1) {
      $45 = $40;
      break;
     }
     HEAP32[$__sbuf__i_i_i >> 2] = 0;
     $45 = 0;
    }
   } while (0);
   $cmp_i_i_i = ($45 | 0) == 0;
   do {
    if (($13 | 0) == 0) {
     label = 12771;
    } else {
     if ((HEAP32[$13 + 12 >> 2] | 0) != (HEAP32[$13 + 16 >> 2] | 0)) {
      if ($cmp_i_i_i) {
       break;
      } else {
       label = 12773;
       break;
      }
     }
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 255]($13) | 0) == -1) {
      HEAP32[$12 >> 2] = 0;
      label = 12771;
      break;
     } else {
      if ($cmp_i_i_i ^ ($13 | 0) == 0) {
       break;
      } else {
       label = 12773;
       break;
      }
     }
    }
   } while (0);
   if ((label | 0) == 12771) {
    if ($cmp_i_i_i) {
     label = 12773;
    }
   }
   if ((label | 0) == 12773) {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   }
   HEAP32[$agg_result >> 2] = $45;
   $52 = HEAP32[$__locale__i_i >> 2] | 0;
   $__shared_owners__i_i23 = $52 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i_i23 >> 2] | 0, HEAP32[$__shared_owners__i_i23 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$52 >> 2] | 0) + 8 >> 2] & 511]($52 | 0);
   }
   $57 = HEAP32[$__first__i_i_i_i_i >> 2] | 0;
   HEAP32[$__first__i_i_i_i_i >> 2] = 0;
   if (($57 | 0) == 0) {
    STACKTOP = __stackBase__;
    return;
   }
   FUNCTION_TABLE_vi[HEAP32[$__second__i_i_i_i_i >> 2] & 511]($57);
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__psn, $__nsn, $__fd) {
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__psn = $__psn | 0;
 $__nsn = $__nsn | 0;
 $__fd = $__fd | 0;
 var $__p_i_i_i78 = 0, $__p_i_i_i = 0, $ref_tmp = 0, $ref_tmp1 = 0, $0 = 0, $ref_tmp3 = 0, $1 = 0, $ref_tmp7 = 0, $2 = 0, $ref_tmp9 = 0, $3 = 0, $ref_tmp14 = 0, $ref_tmp15 = 0, $4 = 0, $ref_tmp17 = 0, $5 = 0, $ref_tmp21 = 0, $6 = 0, $ref_tmp23 = 0, $7 = 0, $8 = 0, $sub_i_i = 0, $13 = 0, $14 = 0, $exception_i_i = 0, $15 = 0, $16 = 0, $19 = 0, $21 = 0, $__size__i46_i_i_i = 0, $__size__i46_i_i_i102 = 0, $30 = 0, $__size__i46_i_i_i256 = 0, $__size__i46_i_i_i400 = 0, $43 = 0, $sub_i_i85 = 0, $48 = 0, $49 = 0, $exception_i_i97 = 0, $50 = 0, $51 = 0, $54 = 0, $56 = 0, $__size__i46_i_i_i555 = 0, $__size__i46_i_i_i699 = 0, $65 = 0, $__size__i46_i_i_i853 = 0, $__size__i46_i_i_i997 = 0, $storemerge = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 56 | 0;
 $__p_i_i_i78 = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 16 | 0;
 $ref_tmp = __stackBase__ + 32 | 0;
 $ref_tmp1 = __stackBase__ + 40 | 0;
 $0 = $ref_tmp1;
 $ref_tmp3 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $1 = $ref_tmp3;
 $ref_tmp7 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $2 = $ref_tmp7;
 $ref_tmp9 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $3 = $ref_tmp9;
 $ref_tmp14 = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $ref_tmp15 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $4 = $ref_tmp15;
 $ref_tmp17 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $5 = $ref_tmp17;
 $ref_tmp21 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $6 = $ref_tmp21;
 $ref_tmp23 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $7 = $ref_tmp23;
 if ($__intl) {
  $8 = HEAP32[$__loc >> 2] | 0;
  if ((HEAP32[4582] | 0) != -1) {
   HEAP32[$__p_i_i_i >> 2] = 18328;
   HEAP32[$__p_i_i_i + 4 >> 2] = 12;
   HEAP32[$__p_i_i_i + 8 >> 2] = 0;
   __ZNSt3__111__call_onceERVmPvPFvS2_E(18328, $__p_i_i_i, 102);
  }
  $sub_i_i = (HEAP32[4583] | 0) - 1 | 0;
  $13 = HEAP32[$8 + 8 >> 2] | 0;
  if ((HEAP32[$8 + 12 >> 2] | 0) - $13 >> 2 >>> 0 <= $sub_i_i >>> 0) {
   $exception_i_i = ___cxa_allocate_exception(4) | 0;
   $15 = $exception_i_i;
   HEAP32[$15 >> 2] = 9184;
   ___cxa_throw($exception_i_i | 0, 15328, 208);
  }
  $14 = HEAP32[$13 + ($sub_i_i << 2) >> 2] | 0;
  if (($14 | 0) == 0) {
   $exception_i_i = ___cxa_allocate_exception(4) | 0;
   $15 = $exception_i_i;
   HEAP32[$15 >> 2] = 9184;
   ___cxa_throw($exception_i_i | 0, 15328, 208);
  }
  $16 = $14;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$14 >> 2] | 0) + 44 >> 2] & 127]($ref_tmp, $16);
  $19 = $__pat;
  tempBigInt = HEAP32[$ref_tmp >> 2] | 0;
  HEAP8[$19] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[$19 + 1 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[$19 + 2 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[$19 + 3 | 0] = tempBigInt & 255;
  $21 = $14;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$21 >> 2] | 0) + 32 >> 2] & 127]($ref_tmp1, $16);
  $__size__i46_i_i_i = $__nsn;
  if ((HEAP8[$__size__i46_i_i_i] & 1) == 0) {
   HEAP8[$__nsn + 1 | 0] = 0;
   HEAP8[$__size__i46_i_i_i] = 0;
  } else {
   HEAP8[HEAP32[$__nsn + 8 >> 2] | 0] = 0;
   HEAP32[$__nsn + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn, 0);
  HEAP32[$__size__i46_i_i_i >> 2] = HEAP32[$0 >> 2];
  HEAP32[$__size__i46_i_i_i + 4 >> 2] = HEAP32[$0 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i + 8 >> 2] = HEAP32[$0 + 8 >> 2];
  _memset($0 | 0, 0, 12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 127]($ref_tmp3, $16);
  $__size__i46_i_i_i102 = $__psn;
  if ((HEAP8[$__size__i46_i_i_i102] & 1) == 0) {
   HEAP8[$__psn + 1 | 0] = 0;
   HEAP8[$__size__i46_i_i_i102] = 0;
  } else {
   HEAP8[HEAP32[$__psn + 8 >> 2] | 0] = 0;
   HEAP32[$__psn + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn, 0);
  HEAP32[$__size__i46_i_i_i102 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$__size__i46_i_i_i102 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i102 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  _memset($1 | 0, 0, 12);
  $30 = $14;
  HEAP8[$__dp] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 12 >> 2] & 255]($16) | 0;
  HEAP8[$__ts] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 16 >> 2] & 255]($16) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$21 >> 2] | 0) + 20 >> 2] & 127]($ref_tmp7, $16);
  $__size__i46_i_i_i256 = $__grp;
  if ((HEAP8[$__size__i46_i_i_i256] & 1) == 0) {
   HEAP8[$__grp + 1 | 0] = 0;
   HEAP8[$__size__i46_i_i_i256] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] | 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp, 0);
  HEAP32[$__size__i46_i_i_i256 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$__size__i46_i_i_i256 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i256 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  _memset($2 | 0, 0, 12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] & 127]($ref_tmp9, $16);
  $__size__i46_i_i_i400 = $__sym;
  if ((HEAP8[$__size__i46_i_i_i400] & 1) == 0) {
   HEAP8[$__sym + 1 | 0] = 0;
   HEAP8[$__size__i46_i_i_i400] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] | 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym, 0);
  HEAP32[$__size__i46_i_i_i400 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$__size__i46_i_i_i400 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i400 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  _memset($3 | 0, 0, 12);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 255]($16) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = __stackBase__;
  return;
 } else {
  $43 = HEAP32[$__loc >> 2] | 0;
  if ((HEAP32[4584] | 0) != -1) {
   HEAP32[$__p_i_i_i78 >> 2] = 18336;
   HEAP32[$__p_i_i_i78 + 4 >> 2] = 12;
   HEAP32[$__p_i_i_i78 + 8 >> 2] = 0;
   __ZNSt3__111__call_onceERVmPvPFvS2_E(18336, $__p_i_i_i78, 102);
  }
  $sub_i_i85 = (HEAP32[4585] | 0) - 1 | 0;
  $48 = HEAP32[$43 + 8 >> 2] | 0;
  if ((HEAP32[$43 + 12 >> 2] | 0) - $48 >> 2 >>> 0 <= $sub_i_i85 >>> 0) {
   $exception_i_i97 = ___cxa_allocate_exception(4) | 0;
   $50 = $exception_i_i97;
   HEAP32[$50 >> 2] = 9184;
   ___cxa_throw($exception_i_i97 | 0, 15328, 208);
  }
  $49 = HEAP32[$48 + ($sub_i_i85 << 2) >> 2] | 0;
  if (($49 | 0) == 0) {
   $exception_i_i97 = ___cxa_allocate_exception(4) | 0;
   $50 = $exception_i_i97;
   HEAP32[$50 >> 2] = 9184;
   ___cxa_throw($exception_i_i97 | 0, 15328, 208);
  }
  $51 = $49;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$49 >> 2] | 0) + 44 >> 2] & 127]($ref_tmp14, $51);
  $54 = $__pat;
  tempBigInt = HEAP32[$ref_tmp14 >> 2] | 0;
  HEAP8[$54] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[$54 + 1 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[$54 + 2 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[$54 + 3 | 0] = tempBigInt & 255;
  $56 = $49;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$56 >> 2] | 0) + 32 >> 2] & 127]($ref_tmp15, $51);
  $__size__i46_i_i_i555 = $__nsn;
  if ((HEAP8[$__size__i46_i_i_i555] & 1) == 0) {
   HEAP8[$__nsn + 1 | 0] = 0;
   HEAP8[$__size__i46_i_i_i555] = 0;
  } else {
   HEAP8[HEAP32[$__nsn + 8 >> 2] | 0] = 0;
   HEAP32[$__nsn + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn, 0);
  HEAP32[$__size__i46_i_i_i555 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$__size__i46_i_i_i555 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i555 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  _memset($4 | 0, 0, 12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$56 >> 2] | 0) + 28 >> 2] & 127]($ref_tmp17, $51);
  $__size__i46_i_i_i699 = $__psn;
  if ((HEAP8[$__size__i46_i_i_i699] & 1) == 0) {
   HEAP8[$__psn + 1 | 0] = 0;
   HEAP8[$__size__i46_i_i_i699] = 0;
  } else {
   HEAP8[HEAP32[$__psn + 8 >> 2] | 0] = 0;
   HEAP32[$__psn + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn, 0);
  HEAP32[$__size__i46_i_i_i699 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$__size__i46_i_i_i699 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i699 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  _memset($5 | 0, 0, 12);
  $65 = $49;
  HEAP8[$__dp] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$65 >> 2] | 0) + 12 >> 2] & 255]($51) | 0;
  HEAP8[$__ts] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$65 >> 2] | 0) + 16 >> 2] & 255]($51) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$56 >> 2] | 0) + 20 >> 2] & 127]($ref_tmp21, $51);
  $__size__i46_i_i_i853 = $__grp;
  if ((HEAP8[$__size__i46_i_i_i853] & 1) == 0) {
   HEAP8[$__grp + 1 | 0] = 0;
   HEAP8[$__size__i46_i_i_i853] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] | 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp, 0);
  HEAP32[$__size__i46_i_i_i853 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$__size__i46_i_i_i853 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i853 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  _memset($6 | 0, 0, 12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$56 >> 2] | 0) + 24 >> 2] & 127]($ref_tmp23, $51);
  $__size__i46_i_i_i997 = $__sym;
  if ((HEAP8[$__size__i46_i_i_i997] & 1) == 0) {
   HEAP8[$__sym + 1 | 0] = 0;
   HEAP8[$__size__i46_i_i_i997] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] | 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym, 0);
  HEAP32[$__size__i46_i_i_i997 >> 2] = HEAP32[$7 >> 2];
  HEAP32[$__size__i46_i_i_i997 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i997 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  _memset($7 | 0, 0, 12);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$49 >> 2] | 0) + 36 >> 2] & 255]($51) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = __stackBase__;
  return;
 }
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg_result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p_i_i_i = 0, $__wbuf = 0, $__wb = 0, $__wn = 0, $__loc = 0, $__neg = 0, $agg_tmp = 0, $__atoms = 0, $__nbuf = 0, $__first__i_i_i_i_i = 0, $__second__i_i_i_i_i = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $1 = 0, $3 = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $11 = 0, $12 = 0, $arraydecay9 = 0, $17 = 0, $arraydecay12 = 0, $18 = 0, $19 = 0, $sub_ptr_sub = 0, $call21 = 0, $exception_i = 0, $__h_sroa_0_1 = 0, $__nc_0 = 0, $__nc_1 = 0, $add_ptr_i = 0, $sub_ptr_rhs_cast41 = 0, $__w_041 = 0, $__nc_240 = 0, $__first_addr_i_0 = 0, $__first_addr_i_0_lcssa = 0, $incdec_ptr44 = 0, $incdec_ptr45 = 0, $__nc_2_lcssa = 0, $exception_i28 = 0, $__imp__i_i = 0, $call3_i1_i1_i = 0, $add_ptr_i_i_i = 0, $__sbuf__i_i_i = 0, $39 = 0, $40 = 0, $retval_i_i_i_i_0 = 0, $45 = 0, $cmp_i_i_i = 0, $46 = 0, $47 = 0, $retval_i_i7_i_i_0 = 0, $54 = 0, $__shared_owners__i_i = 0, $59 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 600 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i = __stackBase__ | 0;
 $__wbuf = __stackBase__ + 16 | 0;
 $__wb = __stackBase__ + 416 | 0;
 $__wn = __stackBase__ + 424 | 0;
 $__loc = __stackBase__ + 432 | 0;
 $__neg = __stackBase__ + 440 | 0;
 $agg_tmp = __stackBase__ + 448 | 0;
 $__atoms = __stackBase__ + 456 | 0;
 $__nbuf = __stackBase__ + 496 | 0;
 $__first__i_i_i_i_i = $__wb | 0;
 HEAP32[$__first__i_i_i_i_i >> 2] = $__wbuf;
 $__second__i_i_i_i_i = $__wb + 4 | 0;
 HEAP32[$__second__i_i_i_i_i >> 2] = 176;
 $__locale__i_i = $__loc | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $1 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + 1, tempValue;
 $3 = HEAP32[$__locale__i_i >> 2] | 0;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17808;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4453] | 0) - 1 | 0;
 $8 = HEAP32[$3 + 8 >> 2] | 0;
 do {
  if ((HEAP32[$3 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   $11 = $9;
   HEAP8[$__neg] = 0;
   $12 = $__e | 0;
   HEAP32[$agg_tmp >> 2] = HEAP32[$12 >> 2];
   do {
    if (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b, $agg_tmp, $__intl, $__loc, HEAP32[$__iob + 4 >> 2] | 0, $__err, $__neg, $11, $__wb, $__wn, $__wbuf + 400 | 0) | 0) {
     $arraydecay9 = $__atoms | 0;
     $17 = HEAP32[(HEAP32[$9 >> 2] | 0) + 48 >> 2] | 0;
     FUNCTION_TABLE_iiiii[$17 & 15]($11, 8664, 8674, $arraydecay9) | 0;
     $arraydecay12 = $__nbuf | 0;
     $18 = HEAP32[$__wn >> 2] | 0;
     $19 = HEAP32[$__first__i_i_i_i_i >> 2] | 0;
     $sub_ptr_sub = $18 - $19 | 0;
     do {
      if (($sub_ptr_sub | 0) > 392) {
       $call21 = _malloc(($sub_ptr_sub >> 2) + 2 | 0) | 0;
       if (($call21 | 0) != 0) {
        $__nc_0 = $call21;
        $__h_sroa_0_1 = $call21;
        break;
       }
       $exception_i = ___cxa_allocate_exception(4) | 0;
       HEAP32[$exception_i >> 2] = 9152;
       ___cxa_throw($exception_i | 0, 15312, 28);
      } else {
       $__nc_0 = $arraydecay12;
       $__h_sroa_0_1 = 0;
      }
     } while (0);
     if ((HEAP8[$__neg] & 1) == 0) {
      $__nc_1 = $__nc_0;
     } else {
      HEAP8[$__nc_0] = 45;
      $__nc_1 = $__nc_0 + 1 | 0;
     }
     if ($19 >>> 0 < $18 >>> 0) {
      $add_ptr_i = $__atoms + 40 | 0;
      $sub_ptr_rhs_cast41 = $__atoms;
      $__nc_240 = $__nc_1;
      $__w_041 = $19;
      while (1) {
       $__first_addr_i_0 = $arraydecay9;
       while (1) {
        if (($__first_addr_i_0 | 0) == ($add_ptr_i | 0)) {
         $__first_addr_i_0_lcssa = $add_ptr_i;
         break;
        }
        if ((HEAP32[$__first_addr_i_0 >> 2] | 0) == (HEAP32[$__w_041 >> 2] | 0)) {
         $__first_addr_i_0_lcssa = $__first_addr_i_0;
         break;
        } else {
         $__first_addr_i_0 = $__first_addr_i_0 + 4 | 0;
        }
       }
       HEAP8[$__nc_240] = HEAP8[8664 + ($__first_addr_i_0_lcssa - $sub_ptr_rhs_cast41 >> 2) | 0] | 0;
       $incdec_ptr44 = $__w_041 + 4 | 0;
       $incdec_ptr45 = $__nc_240 + 1 | 0;
       if ($incdec_ptr44 >>> 0 < (HEAP32[$__wn >> 2] | 0) >>> 0) {
        $__nc_240 = $incdec_ptr45;
        $__w_041 = $incdec_ptr44;
       } else {
        $__nc_2_lcssa = $incdec_ptr45;
        break;
       }
      }
     } else {
      $__nc_2_lcssa = $__nc_1;
     }
     HEAP8[$__nc_2_lcssa] = 0;
     if ((_sscanf($arraydecay12 | 0, 4800, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $__v, tempInt) | 0) | 0) == 1) {
      if (($__h_sroa_0_1 | 0) == 0) {
       break;
      }
      _free($__h_sroa_0_1);
      break;
     }
     $exception_i28 = ___cxa_allocate_exception(8) | 0;
     HEAP32[$exception_i28 >> 2] = 9216;
     $__imp__i_i = $exception_i28 + 4 | 0;
     if (($__imp__i_i | 0) != 0) {
      $call3_i1_i1_i = __Znaj(28) | 0;
      HEAP32[$call3_i1_i1_i + 4 >> 2] = 15;
      HEAP32[$call3_i1_i1_i >> 2] = 15;
      $add_ptr_i_i_i = $call3_i1_i1_i + 12 | 0;
      HEAP32[$__imp__i_i >> 2] = $add_ptr_i_i_i;
      HEAP32[$call3_i1_i1_i + 8 >> 2] = 0;
      _memcpy($add_ptr_i_i_i | 0, 3728, 16) | 0;
     }
     ___cxa_throw($exception_i28 | 0, 15344, 72);
    }
   } while (0);
   $__sbuf__i_i_i = $__b | 0;
   $39 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   do {
    if (($39 | 0) == 0) {
     $45 = 0;
    } else {
     $40 = HEAP32[$39 + 12 >> 2] | 0;
     if (($40 | 0) == (HEAP32[$39 + 16 >> 2] | 0)) {
      $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$39 >> 2] | 0) + 36 >> 2] & 255]($39) | 0;
     } else {
      $retval_i_i_i_i_0 = HEAP32[$40 >> 2] | 0;
     }
     if (($retval_i_i_i_i_0 | 0) != -1) {
      $45 = $39;
      break;
     }
     HEAP32[$__sbuf__i_i_i >> 2] = 0;
     $45 = 0;
    }
   } while (0);
   $cmp_i_i_i = ($45 | 0) == 0;
   $46 = HEAP32[$12 >> 2] | 0;
   do {
    if (($46 | 0) == 0) {
     label = 12893;
    } else {
     $47 = HEAP32[$46 + 12 >> 2] | 0;
     if (($47 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) {
      $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 255]($46) | 0;
     } else {
      $retval_i_i7_i_i_0 = HEAP32[$47 >> 2] | 0;
     }
     if (($retval_i_i7_i_i_0 | 0) == -1) {
      HEAP32[$12 >> 2] = 0;
      label = 12893;
      break;
     } else {
      if ($cmp_i_i_i ^ ($46 | 0) == 0) {
       break;
      } else {
       label = 12895;
       break;
      }
     }
    }
   } while (0);
   if ((label | 0) == 12893) {
    if ($cmp_i_i_i) {
     label = 12895;
    }
   }
   if ((label | 0) == 12895) {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   }
   HEAP32[$agg_result >> 2] = $45;
   $54 = HEAP32[$__locale__i_i >> 2] | 0;
   $__shared_owners__i_i = $54 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$54 >> 2] | 0) + 8 >> 2] & 511]($54 | 0);
   }
   $59 = HEAP32[$__first__i_i_i_i_i >> 2] | 0;
   HEAP32[$__first__i_i_i_i_i >> 2] = 0;
   if (($59 | 0) == 0) {
    STACKTOP = __stackBase__;
    return;
   }
   FUNCTION_TABLE_vi[HEAP32[$__second__i_i_i_i_i >> 2] & 511]($59);
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b, $__e, $__intl, $__loc, $__flags, $__err, $__neg, $__ct, $__wb, $__wn, $__we) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__flags = $__flags | 0;
 $__err = $__err | 0;
 $__neg = $__neg | 0;
 $__ct = $__ct | 0;
 $__wb = $__wb | 0;
 $__wn = $__wn | 0;
 $__we = $__we | 0;
 var $__we_addr = 0, $__gbuf = 0, $__pat = 0, $__dp = 0, $__ts = 0, $__grp = 0, $__size__i_i_i273 = 0, $__sym = 0, $__psn = 0, $__nsn = 0, $__spaces = 0, $__fd = 0, $__et = 0, $arraydecay = 0, $__size__i_i_i267 = 0, $__size__i_i_i261 = 0, $__size__i_i_i255 = 0, $__size__i_i_i249 = 0, $__first__i_i_i551 = 0, $__sbuf__i_i_i607 = 0, $__sbuf__i11_i_i628 = 0, $1 = 0, $__data__i_i_i155 = 0, $__data__i21_i_i154 = 0, $__cap__i_i_i = 0, $__data__i_i_i1320 = 0, $__data__i21_i_i1312 = 0, $__data__i_i_i = 0, $__data__i21_i_i = 0, $tobool120336 = 0, $__data__i_i_i1797 = 0, $__data__i21_i_i1882 = 0, $arrayidx114 = 0, $__size__i23_i1837 = 0, $__p_0480 = 0, $__trailing_sign_0478 = 0, $add_ptr308475 = 0, $__gb_sroa_0_0_load296314472 = 0, $2 = 0, $__gb_sroa_1_4_load306329469 = 0, $3 = 0, $4 = 0, $retval_i_i_i_i598_0 = 0, $9 = 0, $10 = 0, $11 = 0, $retval_i_i7_i_i592_0 = 0, $16 = 0, $conv = 0, $35 = 0, $36 = 0, $retval_i_i686_0 = 0, $42 = 0, $__ninp__i_i714 = 0, $43 = 0, $retval_i_i708_0 = 0, $48 = 0, $49 = 0, $51 = 0, $cond_i_i152 = 0, $conv_i_i65_i = 0, $cond_i77_i = 0, $53 = 0, $__data__i_i_i155_ = 0, $add_ptr_sum_i = 0, $57 = 0, $58 = 0, $59 = 0, $retval_i_i_i_i738_0 = 0, $64 = 0, $65 = 0, $retval_i_i7_i_i732_0 = 0, $70 = 0, $71 = 0, $72 = 0, $retval_i_i797_0 = 0, $78 = 0, $__ninp__i_i836 = 0, $79 = 0, $retval_i_i829_0 = 0, $84 = 0, $85 = 0, $87 = 0, $cond_i_i167 = 0, $conv_i_i65_i168 = 0, $cond_i77_i176 = 0, $89 = 0, $__data__i_i_i155_583 = 0, $add_ptr_sum_i190 = 0, $92 = 0, $conv_i_i874 = 0, $tobool_i_i876 = 0, $94 = 0, $conv_i_i915 = 0, $tobool_i_i917 = 0, $99 = 0, $100 = 0, $cmp_i_i1273 = 0, $call_i_i1121 = 0, $105 = 0, $retval_i_i1106_0 = 0, $108 = 0, $__ninp__i_i1211 = 0, $109 = 0, $112 = 0, $conv_i_i1241 = 0, $call_i_i1280 = 0, $118 = 0, $retval_i_i1265_0 = 0, $121 = 0, $__ninp__i_i1352 = 0, $122 = 0, $125 = 0, $conv_i_i1382 = 0, $128 = 0, $129 = 0, $call_i_i1439 = 0, $134 = 0, $retval_i_i1424_0 = 0, $137 = 0, $__ninp__i_i1558 = 0, $138 = 0, $cmp_i_i1560 = 0, $141 = 0, $conv_i_i1588 = 0, $retval_i_i1612_0 = 0, $150 = 0, $__ninp__i_i1680 = 0, $151 = 0, $154 = 0, $conv_i_i1710 = 0, $159 = 0, $160 = 0, $__data__i_i_i1797_ = 0, $163 = 0, $__sym_space_end_sroa_0_0 = 0, $conv_i_i22_i = 0, $168 = 0, $tobool_i_i_i2035 = 0, $sub_ptr_div_i = 0, $170 = 0, $conv_i_i2229 = 0, $tobool_i_i2231 = 0, $tobool_i_i_i2355 = 0, $add_ptr_i_i_i = 0, $add_ptr_i2742 = 0, $agg_tmp29_i_sroa_0_0373 = 0, $agg_tmp4_i_sroa_0_0372 = 0, $incdec_ptr_i9_i_i = 0, $180 = 0, $181 = 0, $__sym_curr_char_sroa_0_0 = 0, $conv_i_i22_i2492 = 0, $184 = 0, $185 = 0, $retval_i_i_i_i2261_0 = 0, $190 = 0, $191 = 0, $retval_i_i7_i_i2255_0 = 0, $196 = 0, $197 = 0, $198 = 0, $retval_i_i2194_0 = 0, $204 = 0, $__ninp__i_i2173 = 0, $205 = 0, $208 = 0, $209 = 0, $conv_i_i22_i2134 = 0, $__gb_sroa_1_4_load306327 = 0, $213 = 0, $__gb_sroa_0_0_load296317 = 0, $add_ptr311 = 0, $__ng_0 = 0, $214 = 0, $215 = 0, $retval_i_i_i_i1940_0 = 0, $220 = 0, $221 = 0, $222 = 0, $retval_i_i7_i_i1934_0 = 0, $227 = 0, $228 = 0, $retval_i_i1912_0 = 0, $234 = 0, $236 = 0, $conv_i_i1828 = 0, $cmp_i202 = 0, $sub_ptr_sub_i205 = 0, $cond_i206 = 0, $cond15_i = 0, $call16_i = 0, $240 = 0, $__gb_sroa_1_4_load306326 = 0, $241 = 0, $__gb_sroa_0_0_load296319 = 0, $add_ptr313 = 0, $__gb_sroa_1_4_load306325 = 0, $242 = 0, $__gb_sroa_0_0_load296318 = 0, $add_ptr312 = 0, $__ng_1 = 0, $243 = 0, $__ninp__i_i1748 = 0, $244 = 0, $247 = 0, $cmp_i217 = 0, $sub_ptr_sub_i221 = 0, $cond_i224 = 0, $cond15_i230 = 0, $call16_i231 = 0, $248 = 0, $__gb_sroa_1_4_load306323 = 0, $249 = 0, $__gb_sroa_0_0_load296320 = 0, $add_ptr307 = 0, $__gb_sroa_1_4_load306324 = 0, $250 = 0, $__gb_sroa_0_0_load296316 = 0, $add_ptr310 = 0, $251 = 0, $252 = 0, $253 = 0, $retval_i_i_i_i1494_0 = 0, $258 = 0, $259 = 0, $260 = 0, $retval_i_i7_i_i1488_0 = 0, $265 = 0, $266 = 0, $267 = 0, $retval_i_i1406_0 = 0, $274 = 0, $__ninp__i_i1333 = 0, $275 = 0, $278 = 0, $279 = 0, $280 = 0, $281 = 0, $282 = 0, $retval_i_i_i_i1147_0 = 0, $287 = 0, $288 = 0, $retval_i_i7_i_i1141_0 = 0, $293 = 0, $294 = 0, $295 = 0, $retval_i_i1088_0 = 0, $304 = 0, $305 = 0, $retval_i_i939_0 = 0, $310 = 0, $dec = 0, $311 = 0, $__ninp__i_i577 = 0, $312 = 0, $315 = 0, $__gb_sroa_1_4_load306328 = 0, $319 = 0, $__gb_sroa_0_0_load296315 = 0, $add_ptr309 = 0, $__trailing_sign_1 = 0, $inc282 = 0, $__trailing_sign_0_lcssa = 0, $__gb_sroa_0_0_load296314_lcssa = 0, $_lcssa = 0, $__gb_sroa_1_4_load306329_lcssa = 0, $__size__i_i = 0, $__data__i_i_i_i = 0, $__data__i21_i_i_i = 0, $__i_0 = 0, $conv_i_i561 = 0, $cond_i = 0, $322 = 0, $323 = 0, $retval_i_i_i_i_0 = 0, $328 = 0, $329 = 0, $330 = 0, $retval_i_i7_i_i_0 = 0, $335 = 0, $336 = 0, $retval_i_i452_0 = 0, $cond_i_i_i = 0, $inc303 = 0, $345 = 0, $__ninp__i_i = 0, $346 = 0, $349 = 0, $__gb_sroa_1_4_load306330 = 0, $352 = 0, $retval_0 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 448 | 0;
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__we_addr = __stackBase__ | 0;
 $__gbuf = __stackBase__ + 8 | 0;
 $__pat = __stackBase__ + 408 | 0;
 $__dp = __stackBase__ + 416 | 0;
 $__ts = __stackBase__ + 424 | 0;
 $__grp = __stackBase__ + 432 | 0;
 $__size__i_i_i273 = $__grp;
 $__sym = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__psn = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__nsn = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__spaces = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__fd = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__et = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__we_addr >> 2] = $__we;
 $arraydecay = $__gbuf | 0;
 _memset($__size__i_i_i273 | 0, 0, 12);
 $__size__i_i_i267 = $__sym;
 $__size__i_i_i261 = $__psn;
 $__size__i_i_i255 = $__nsn;
 $__size__i_i_i249 = $__spaces;
 _memset($__size__i_i_i267 | 0, 0, 12);
 _memset($__size__i_i_i261 | 0, 0, 12);
 _memset($__size__i_i_i255 | 0, 0, 12);
 _memset($__size__i_i_i249 | 0, 0, 12);
 __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__psn, $__nsn, $__fd);
 $__first__i_i_i551 = $__wb | 0;
 HEAP32[$__wn >> 2] = HEAP32[$__first__i_i_i551 >> 2];
 $__sbuf__i_i_i607 = $__b | 0;
 $__sbuf__i11_i_i628 = $__e | 0;
 $1 = $__ct;
 $__data__i_i_i155 = $__spaces + 4 | 0;
 $__data__i21_i_i154 = $__spaces + 8 | 0;
 $__cap__i_i_i = $__spaces | 0;
 $__data__i_i_i1320 = $__nsn + 4 | 0;
 $__data__i21_i_i1312 = $__nsn + 8 | 0;
 $__data__i_i_i = $__psn + 4 | 0;
 $__data__i21_i_i = $__psn + 8 | 0;
 $tobool120336 = ($__flags & 512 | 0) != 0;
 $__data__i_i_i1797 = $__sym + 4 | 0;
 $__data__i21_i_i1882 = $__sym + 8 | 0;
 $arrayidx114 = $__pat + 3 | 0;
 $__size__i23_i1837 = $__grp + 4 | 0;
 $__gb_sroa_1_4_load306329469 = 176;
 $2 = $arraydecay;
 $__gb_sroa_0_0_load296314472 = $arraydecay;
 $add_ptr308475 = $__gbuf + 400 | 0;
 $__trailing_sign_0478 = 0;
 $__p_0480 = 0;
 L15168 : while (1) {
  $3 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
  do {
   if (($3 | 0) == 0) {
    $9 = 1;
   } else {
    $4 = HEAP32[$3 + 12 >> 2] | 0;
    if (($4 | 0) == (HEAP32[$3 + 16 >> 2] | 0)) {
     $retval_i_i_i_i598_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 255]($3) | 0;
    } else {
     $retval_i_i_i_i598_0 = HEAP32[$4 >> 2] | 0;
    }
    if (($retval_i_i_i_i598_0 | 0) == -1) {
     HEAP32[$__sbuf__i_i_i607 >> 2] = 0;
     $9 = 1;
     break;
    } else {
     $9 = (HEAP32[$__sbuf__i_i_i607 >> 2] | 0) == 0;
     break;
    }
   }
  } while (0);
  $10 = HEAP32[$__sbuf__i11_i_i628 >> 2] | 0;
  do {
   if (($10 | 0) == 0) {
    label = 12925;
   } else {
    $11 = HEAP32[$10 + 12 >> 2] | 0;
    if (($11 | 0) == (HEAP32[$10 + 16 >> 2] | 0)) {
     $retval_i_i7_i_i592_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 255]($10) | 0;
    } else {
     $retval_i_i7_i_i592_0 = HEAP32[$11 >> 2] | 0;
    }
    if (($retval_i_i7_i_i592_0 | 0) == -1) {
     HEAP32[$__sbuf__i11_i_i628 >> 2] = 0;
     label = 12925;
     break;
    } else {
     if ($9 ^ ($10 | 0) == 0) {
      $16 = $10;
      break;
     } else {
      $__gb_sroa_1_4_load306329_lcssa = $__gb_sroa_1_4_load306329469;
      $_lcssa = $2;
      $__gb_sroa_0_0_load296314_lcssa = $__gb_sroa_0_0_load296314472;
      $__trailing_sign_0_lcssa = $__trailing_sign_0478;
      label = 13191;
      break L15168;
     }
    }
   }
  } while (0);
  if ((label | 0) == 12925) {
   label = 0;
   if ($9) {
    $__gb_sroa_1_4_load306329_lcssa = $__gb_sroa_1_4_load306329469;
    $_lcssa = $2;
    $__gb_sroa_0_0_load296314_lcssa = $__gb_sroa_0_0_load296314472;
    $__trailing_sign_0_lcssa = $__trailing_sign_0478;
    label = 13191;
    break;
   } else {
    $16 = 0;
   }
  }
  $conv = HEAP8[$__pat + $__p_0480 | 0] | 0;
  L15192 : do {
   if (($conv | 0) == 0) {
    label = 12967;
   } else if (($conv | 0) == 2) {
    if (!(($__trailing_sign_0478 | 0) != 0 | $__p_0480 >>> 0 < 2)) {
     if (($__p_0480 | 0) == 2) {
      $159 = (HEAP8[$arrayidx114] | 0) != 0;
     } else {
      $159 = 0;
     }
     if (!($tobool120336 | $159)) {
      $__trailing_sign_1 = 0;
      $add_ptr309 = $add_ptr308475;
      $__gb_sroa_0_0_load296315 = $__gb_sroa_0_0_load296314472;
      $319 = $2;
      $__gb_sroa_1_4_load306328 = $__gb_sroa_1_4_load306329469;
      break;
     }
    }
    $160 = HEAP8[$__size__i_i_i267] | 0;
    $__data__i_i_i1797_ = ($160 & 1) == 0 ? $__data__i_i_i1797 : HEAP32[$__data__i21_i_i1882 >> 2] | 0;
    L15200 : do {
     if (($__p_0480 | 0) == 0) {
      $__sym_curr_char_sroa_0_0 = $__data__i_i_i1797_;
      $181 = $160;
      $180 = $16;
     } else {
      if ((HEAPU8[$__pat + ($__p_0480 - 1) | 0] | 0) < 2) {
       $__sym_space_end_sroa_0_0 = $__data__i_i_i1797_;
       $163 = $160;
      } else {
       $__sym_curr_char_sroa_0_0 = $__data__i_i_i1797_;
       $181 = $160;
       $180 = $16;
       break;
      }
      while (1) {
       $conv_i_i22_i = $163 & 255;
       if (($__sym_space_end_sroa_0_0 | 0) == ((($163 & 1) == 0 ? $__data__i_i_i1797 : HEAP32[$__data__i21_i_i1882 >> 2] | 0) + ((($conv_i_i22_i & 1 | 0) == 0 ? $conv_i_i22_i >>> 1 : HEAP32[$__data__i_i_i1797 >> 2] | 0) << 2) | 0)) {
        $168 = $163;
        break;
       }
       if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] & 63]($__ct, 8192, HEAP32[$__sym_space_end_sroa_0_0 >> 2] | 0) | 0)) {
        label = 13050;
        break;
       }
       $__sym_space_end_sroa_0_0 = $__sym_space_end_sroa_0_0 + 4 | 0;
       $163 = HEAP8[$__size__i_i_i267] | 0;
      }
      if ((label | 0) == 13050) {
       label = 0;
       $168 = HEAP8[$__size__i_i_i267] | 0;
      }
      $tobool_i_i_i2035 = ($168 & 1) == 0;
      $sub_ptr_div_i = $__sym_space_end_sroa_0_0 - ($tobool_i_i_i2035 ? $__data__i_i_i1797 : HEAP32[$__data__i21_i_i1882 >> 2] | 0) >> 2;
      $170 = HEAP8[$__size__i_i_i249] | 0;
      $conv_i_i2229 = $170 & 255;
      $tobool_i_i2231 = ($conv_i_i2229 & 1 | 0) == 0;
      L15210 : do {
       if ($sub_ptr_div_i >>> 0 <= ($tobool_i_i2231 ? $conv_i_i2229 >>> 1 : HEAP32[$__data__i_i_i155 >> 2] | 0) >>> 0) {
        $tobool_i_i_i2355 = ($170 & 1) == 0;
        $add_ptr_i_i_i = ($tobool_i_i_i2355 ? $__data__i_i_i155 : HEAP32[$__data__i21_i_i154 >> 2] | 0) + (($tobool_i_i2231 ? $conv_i_i2229 >>> 1 : HEAP32[$__data__i_i_i155 >> 2] | 0) - $sub_ptr_div_i << 2) | 0;
        $add_ptr_i2742 = ($tobool_i_i_i2355 ? $__data__i_i_i155 : HEAP32[$__data__i21_i_i154 >> 2] | 0) + (($tobool_i_i2231 ? $conv_i_i2229 >>> 1 : HEAP32[$__data__i_i_i155 >> 2] | 0) << 2) | 0;
        if (($add_ptr_i_i_i | 0) == ($add_ptr_i2742 | 0)) {
         $__sym_curr_char_sroa_0_0 = $__sym_space_end_sroa_0_0;
         $181 = $168;
         $180 = $16;
         break L15200;
        } else {
         $agg_tmp4_i_sroa_0_0372 = $add_ptr_i_i_i;
         $agg_tmp29_i_sroa_0_0373 = $tobool_i_i_i2035 ? $__data__i_i_i1797 : HEAP32[$__data__i21_i_i1882 >> 2] | 0;
        }
        while (1) {
         if ((HEAP32[$agg_tmp4_i_sroa_0_0372 >> 2] | 0) != (HEAP32[$agg_tmp29_i_sroa_0_0373 >> 2] | 0)) {
          break L15210;
         }
         $incdec_ptr_i9_i_i = $agg_tmp4_i_sroa_0_0372 + 4 | 0;
         if (($incdec_ptr_i9_i_i | 0) == ($add_ptr_i2742 | 0)) {
          $__sym_curr_char_sroa_0_0 = $__sym_space_end_sroa_0_0;
          $181 = $168;
          $180 = $16;
          break L15200;
         }
         $agg_tmp4_i_sroa_0_0372 = $incdec_ptr_i9_i_i;
         $agg_tmp29_i_sroa_0_0373 = $agg_tmp29_i_sroa_0_0373 + 4 | 0;
        }
       }
      } while (0);
      $__sym_curr_char_sroa_0_0 = $tobool_i_i_i2035 ? $__data__i_i_i1797 : HEAP32[$__data__i21_i_i1882 >> 2] | 0;
      $181 = $168;
      $180 = $16;
     }
    } while (0);
    L15217 : while (1) {
     $conv_i_i22_i2492 = $181 & 255;
     if (($__sym_curr_char_sroa_0_0 | 0) == ((($181 & 1) == 0 ? $__data__i_i_i1797 : HEAP32[$__data__i21_i_i1882 >> 2] | 0) + ((($conv_i_i22_i2492 & 1 | 0) == 0 ? $conv_i_i22_i2492 >>> 1 : HEAP32[$__data__i_i_i1797 >> 2] | 0) << 2) | 0)) {
      break;
     }
     $184 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
     do {
      if (($184 | 0) == 0) {
       $190 = 1;
      } else {
       $185 = HEAP32[$184 + 12 >> 2] | 0;
       if (($185 | 0) == (HEAP32[$184 + 16 >> 2] | 0)) {
        $retval_i_i_i_i2261_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$184 >> 2] | 0) + 36 >> 2] & 255]($184) | 0;
       } else {
        $retval_i_i_i_i2261_0 = HEAP32[$185 >> 2] | 0;
       }
       if (($retval_i_i_i_i2261_0 | 0) == -1) {
        HEAP32[$__sbuf__i_i_i607 >> 2] = 0;
        $190 = 1;
        break;
       } else {
        $190 = (HEAP32[$__sbuf__i_i_i607 >> 2] | 0) == 0;
        break;
       }
      }
     } while (0);
     do {
      if (($180 | 0) == 0) {
       label = 13071;
      } else {
       $191 = HEAP32[$180 + 12 >> 2] | 0;
       if (($191 | 0) == (HEAP32[$180 + 16 >> 2] | 0)) {
        $retval_i_i7_i_i2255_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$180 >> 2] | 0) + 36 >> 2] & 255]($180) | 0;
       } else {
        $retval_i_i7_i_i2255_0 = HEAP32[$191 >> 2] | 0;
       }
       if (($retval_i_i7_i_i2255_0 | 0) == -1) {
        HEAP32[$__sbuf__i11_i_i628 >> 2] = 0;
        label = 13071;
        break;
       } else {
        if ($190 ^ ($180 | 0) == 0) {
         $196 = $180;
         break;
        } else {
         break L15217;
        }
       }
      }
     } while (0);
     if ((label | 0) == 13071) {
      label = 0;
      if ($190) {
       break;
      } else {
       $196 = 0;
      }
     }
     $197 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
     $198 = HEAP32[$197 + 12 >> 2] | 0;
     if (($198 | 0) == (HEAP32[$197 + 16 >> 2] | 0)) {
      $retval_i_i2194_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$197 >> 2] | 0) + 36 >> 2] & 255]($197) | 0;
     } else {
      $retval_i_i2194_0 = HEAP32[$198 >> 2] | 0;
     }
     if (($retval_i_i2194_0 | 0) != (HEAP32[$__sym_curr_char_sroa_0_0 >> 2] | 0)) {
      break;
     }
     $204 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
     $__ninp__i_i2173 = $204 + 12 | 0;
     $205 = HEAP32[$__ninp__i_i2173 >> 2] | 0;
     if (($205 | 0) == (HEAP32[$204 + 16 >> 2] | 0)) {
      $208 = HEAP32[(HEAP32[$204 >> 2] | 0) + 40 >> 2] | 0;
      FUNCTION_TABLE_ii[$208 & 255]($204) | 0;
     } else {
      HEAP32[$__ninp__i_i2173 >> 2] = $205 + 4;
     }
     $__sym_curr_char_sroa_0_0 = $__sym_curr_char_sroa_0_0 + 4 | 0;
     $181 = HEAP8[$__size__i_i_i267] | 0;
     $180 = $196;
    }
    if (!$tobool120336) {
     $__trailing_sign_1 = $__trailing_sign_0478;
     $add_ptr309 = $add_ptr308475;
     $__gb_sroa_0_0_load296315 = $__gb_sroa_0_0_load296314472;
     $319 = $2;
     $__gb_sroa_1_4_load306328 = $__gb_sroa_1_4_load306329469;
     break;
    }
    $209 = HEAP8[$__size__i_i_i267] | 0;
    $conv_i_i22_i2134 = $209 & 255;
    if (($__sym_curr_char_sroa_0_0 | 0) == ((($209 & 1) == 0 ? $__data__i_i_i1797 : HEAP32[$__data__i21_i_i1882 >> 2] | 0) + ((($conv_i_i22_i2134 & 1 | 0) == 0 ? $conv_i_i22_i2134 >>> 1 : HEAP32[$__data__i_i_i1797 >> 2] | 0) << 2) | 0)) {
     $__trailing_sign_1 = $__trailing_sign_0478;
     $add_ptr309 = $add_ptr308475;
     $__gb_sroa_0_0_load296315 = $__gb_sroa_0_0_load296314472;
     $319 = $2;
     $__gb_sroa_1_4_load306328 = $__gb_sroa_1_4_load306329469;
    } else {
     label = 13083;
     break L15168;
    }
   } else if (($conv | 0) == 1) {
    if (($__p_0480 | 0) == 3) {
     $__gb_sroa_1_4_load306329_lcssa = $__gb_sroa_1_4_load306329469;
     $_lcssa = $2;
     $__gb_sroa_0_0_load296314_lcssa = $__gb_sroa_0_0_load296314472;
     $__trailing_sign_0_lcssa = $__trailing_sign_0478;
     label = 13191;
     break L15168;
    }
    $35 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
    $36 = HEAP32[$35 + 12 >> 2] | 0;
    if (($36 | 0) == (HEAP32[$35 + 16 >> 2] | 0)) {
     $retval_i_i686_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] & 255]($35) | 0;
    } else {
     $retval_i_i686_0 = HEAP32[$36 >> 2] | 0;
    }
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] & 63]($__ct, 8192, $retval_i_i686_0) | 0)) {
     label = 12966;
     break L15168;
    }
    $42 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
    $__ninp__i_i714 = $42 + 12 | 0;
    $43 = HEAP32[$__ninp__i_i714 >> 2] | 0;
    if (($43 | 0) == (HEAP32[$42 + 16 >> 2] | 0)) {
     $retval_i_i708_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$42 >> 2] | 0) + 40 >> 2] & 255]($42) | 0;
    } else {
     HEAP32[$__ninp__i_i714 >> 2] = $43 + 4;
     $retval_i_i708_0 = HEAP32[$43 >> 2] | 0;
    }
    $48 = HEAP8[$__size__i_i_i249] | 0;
    if (($48 & 1) == 0) {
     $cond_i_i152 = 1;
     $51 = $48;
    } else {
     $49 = HEAP32[$__cap__i_i_i >> 2] | 0;
     $cond_i_i152 = ($49 & -2) - 1 | 0;
     $51 = $49 & 255;
    }
    $conv_i_i65_i = $51 & 255;
    $cond_i77_i = ($conv_i_i65_i & 1 | 0) == 0 ? $conv_i_i65_i >>> 1 : HEAP32[$__data__i_i_i155 >> 2] | 0;
    if (($cond_i77_i | 0) == ($cond_i_i152 | 0)) {
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($__spaces, $cond_i_i152, 1, $cond_i_i152, $cond_i_i152, 0, 0);
     $53 = HEAP8[$__size__i_i_i249] | 0;
    } else {
     $53 = $51;
    }
    $__data__i_i_i155_ = ($53 & 1) == 0 ? $__data__i_i_i155 : HEAP32[$__data__i21_i_i154 >> 2] | 0;
    HEAP32[$__data__i_i_i155_ + ($cond_i77_i << 2) >> 2] = $retval_i_i708_0;
    $add_ptr_sum_i = $cond_i77_i + 1 | 0;
    HEAP32[$__data__i_i_i155_ + ($add_ptr_sum_i << 2) >> 2] = 0;
    if ((HEAP8[$__size__i_i_i249] & 1) == 0) {
     HEAP8[$__size__i_i_i249] = $add_ptr_sum_i << 1 & 255;
     label = 12967;
     break;
    } else {
     HEAP32[$__data__i_i_i155 >> 2] = $add_ptr_sum_i;
     label = 12967;
     break;
    }
   } else if (($conv | 0) == 3) {
    $92 = HEAP8[$__size__i_i_i261] | 0;
    $conv_i_i874 = $92 & 255;
    $tobool_i_i876 = ($conv_i_i874 & 1 | 0) == 0;
    $94 = HEAP8[$__size__i_i_i255] | 0;
    $conv_i_i915 = $94 & 255;
    $tobool_i_i917 = ($conv_i_i915 & 1 | 0) == 0;
    if ((($tobool_i_i876 ? $conv_i_i874 >>> 1 : HEAP32[$__data__i_i_i >> 2] | 0) | 0) == (-($tobool_i_i917 ? $conv_i_i915 >>> 1 : HEAP32[$__data__i_i_i1320 >> 2] | 0) | 0)) {
     $__trailing_sign_1 = $__trailing_sign_0478;
     $add_ptr309 = $add_ptr308475;
     $__gb_sroa_0_0_load296315 = $__gb_sroa_0_0_load296314472;
     $319 = $2;
     $__gb_sroa_1_4_load306328 = $__gb_sroa_1_4_load306329469;
     break;
    }
    do {
     if ((($tobool_i_i876 ? $conv_i_i874 >>> 1 : HEAP32[$__data__i_i_i >> 2] | 0) | 0) != 0) {
      if ((($tobool_i_i917 ? $conv_i_i915 >>> 1 : HEAP32[$__data__i_i_i1320 >> 2] | 0) | 0) == 0) {
       break;
      }
      $128 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
      $129 = HEAP32[$128 + 12 >> 2] | 0;
      if (($129 | 0) == (HEAP32[$128 + 16 >> 2] | 0)) {
       $call_i_i1439 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$128 >> 2] | 0) + 36 >> 2] & 255]($128) | 0;
       $retval_i_i1424_0 = $call_i_i1439;
       $134 = HEAP8[$__size__i_i_i261] | 0;
      } else {
       $retval_i_i1424_0 = HEAP32[$129 >> 2] | 0;
       $134 = $92;
      }
      $137 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
      $__ninp__i_i1558 = $137 + 12 | 0;
      $138 = HEAP32[$__ninp__i_i1558 >> 2] | 0;
      $cmp_i_i1560 = ($138 | 0) == (HEAP32[$137 + 16 >> 2] | 0);
      if (($retval_i_i1424_0 | 0) == (HEAP32[(($134 & 1) == 0 ? $__data__i_i_i : HEAP32[$__data__i21_i_i >> 2] | 0) >> 2] | 0)) {
       if ($cmp_i_i1560) {
        $141 = HEAP32[(HEAP32[$137 >> 2] | 0) + 40 >> 2] | 0;
        FUNCTION_TABLE_ii[$141 & 255]($137) | 0;
       } else {
        HEAP32[$__ninp__i_i1558 >> 2] = $138 + 4;
       }
       $conv_i_i1588 = HEAPU8[$__size__i_i_i261] | 0;
       $__trailing_sign_1 = (($conv_i_i1588 & 1 | 0) == 0 ? $conv_i_i1588 >>> 1 : HEAP32[$__data__i_i_i >> 2] | 0) >>> 0 > 1 ? $__psn : $__trailing_sign_0478;
       $add_ptr309 = $add_ptr308475;
       $__gb_sroa_0_0_load296315 = $__gb_sroa_0_0_load296314472;
       $319 = $2;
       $__gb_sroa_1_4_load306328 = $__gb_sroa_1_4_load306329469;
       break L15192;
      }
      if ($cmp_i_i1560) {
       $retval_i_i1612_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$137 >> 2] | 0) + 36 >> 2] & 255]($137) | 0;
      } else {
       $retval_i_i1612_0 = HEAP32[$138 >> 2] | 0;
      }
      if (($retval_i_i1612_0 | 0) != (HEAP32[((HEAP8[$__size__i_i_i255] & 1) == 0 ? $__data__i_i_i1320 : HEAP32[$__data__i21_i_i1312 >> 2] | 0) >> 2] | 0)) {
       label = 13039;
       break L15168;
      }
      $150 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
      $__ninp__i_i1680 = $150 + 12 | 0;
      $151 = HEAP32[$__ninp__i_i1680 >> 2] | 0;
      if (($151 | 0) == (HEAP32[$150 + 16 >> 2] | 0)) {
       $154 = HEAP32[(HEAP32[$150 >> 2] | 0) + 40 >> 2] | 0;
       FUNCTION_TABLE_ii[$154 & 255]($150) | 0;
      } else {
       HEAP32[$__ninp__i_i1680 >> 2] = $151 + 4;
      }
      HEAP8[$__neg] = 1;
      $conv_i_i1710 = HEAPU8[$__size__i_i_i255] | 0;
      $__trailing_sign_1 = (($conv_i_i1710 & 1 | 0) == 0 ? $conv_i_i1710 >>> 1 : HEAP32[$__data__i_i_i1320 >> 2] | 0) >>> 0 > 1 ? $__nsn : $__trailing_sign_0478;
      $add_ptr309 = $add_ptr308475;
      $__gb_sroa_0_0_load296315 = $__gb_sroa_0_0_load296314472;
      $319 = $2;
      $__gb_sroa_1_4_load306328 = $__gb_sroa_1_4_load306329469;
      break L15192;
     }
    } while (0);
    $99 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
    $100 = HEAP32[$99 + 12 >> 2] | 0;
    $cmp_i_i1273 = ($100 | 0) == (HEAP32[$99 + 16 >> 2] | 0);
    if ((($tobool_i_i876 ? $conv_i_i874 >>> 1 : HEAP32[$__data__i_i_i >> 2] | 0) | 0) == 0) {
     if ($cmp_i_i1273) {
      $call_i_i1280 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$99 >> 2] | 0) + 36 >> 2] & 255]($99) | 0;
      $retval_i_i1265_0 = $call_i_i1280;
      $118 = HEAP8[$__size__i_i_i255] | 0;
     } else {
      $retval_i_i1265_0 = HEAP32[$100 >> 2] | 0;
      $118 = $94;
     }
     if (($retval_i_i1265_0 | 0) != (HEAP32[(($118 & 1) == 0 ? $__data__i_i_i1320 : HEAP32[$__data__i21_i_i1312 >> 2] | 0) >> 2] | 0)) {
      $__trailing_sign_1 = $__trailing_sign_0478;
      $add_ptr309 = $add_ptr308475;
      $__gb_sroa_0_0_load296315 = $__gb_sroa_0_0_load296314472;
      $319 = $2;
      $__gb_sroa_1_4_load306328 = $__gb_sroa_1_4_load306329469;
      break;
     }
     $121 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
     $__ninp__i_i1352 = $121 + 12 | 0;
     $122 = HEAP32[$__ninp__i_i1352 >> 2] | 0;
     if (($122 | 0) == (HEAP32[$121 + 16 >> 2] | 0)) {
      $125 = HEAP32[(HEAP32[$121 >> 2] | 0) + 40 >> 2] | 0;
      FUNCTION_TABLE_ii[$125 & 255]($121) | 0;
     } else {
      HEAP32[$__ninp__i_i1352 >> 2] = $122 + 4;
     }
     HEAP8[$__neg] = 1;
     $conv_i_i1382 = HEAPU8[$__size__i_i_i255] | 0;
     $__trailing_sign_1 = (($conv_i_i1382 & 1 | 0) == 0 ? $conv_i_i1382 >>> 1 : HEAP32[$__data__i_i_i1320 >> 2] | 0) >>> 0 > 1 ? $__nsn : $__trailing_sign_0478;
     $add_ptr309 = $add_ptr308475;
     $__gb_sroa_0_0_load296315 = $__gb_sroa_0_0_load296314472;
     $319 = $2;
     $__gb_sroa_1_4_load306328 = $__gb_sroa_1_4_load306329469;
     break;
    }
    if ($cmp_i_i1273) {
     $call_i_i1121 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$99 >> 2] | 0) + 36 >> 2] & 255]($99) | 0;
     $retval_i_i1106_0 = $call_i_i1121;
     $105 = HEAP8[$__size__i_i_i261] | 0;
    } else {
     $retval_i_i1106_0 = HEAP32[$100 >> 2] | 0;
     $105 = $92;
    }
    if (($retval_i_i1106_0 | 0) != (HEAP32[(($105 & 1) == 0 ? $__data__i_i_i : HEAP32[$__data__i21_i_i >> 2] | 0) >> 2] | 0)) {
     HEAP8[$__neg] = 1;
     $__trailing_sign_1 = $__trailing_sign_0478;
     $add_ptr309 = $add_ptr308475;
     $__gb_sroa_0_0_load296315 = $__gb_sroa_0_0_load296314472;
     $319 = $2;
     $__gb_sroa_1_4_load306328 = $__gb_sroa_1_4_load306329469;
     break;
    }
    $108 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
    $__ninp__i_i1211 = $108 + 12 | 0;
    $109 = HEAP32[$__ninp__i_i1211 >> 2] | 0;
    if (($109 | 0) == (HEAP32[$108 + 16 >> 2] | 0)) {
     $112 = HEAP32[(HEAP32[$108 >> 2] | 0) + 40 >> 2] | 0;
     FUNCTION_TABLE_ii[$112 & 255]($108) | 0;
    } else {
     HEAP32[$__ninp__i_i1211 >> 2] = $109 + 4;
    }
    $conv_i_i1241 = HEAPU8[$__size__i_i_i261] | 0;
    $__trailing_sign_1 = (($conv_i_i1241 & 1 | 0) == 0 ? $conv_i_i1241 >>> 1 : HEAP32[$__data__i_i_i >> 2] | 0) >>> 0 > 1 ? $__psn : $__trailing_sign_0478;
    $add_ptr309 = $add_ptr308475;
    $__gb_sroa_0_0_load296315 = $__gb_sroa_0_0_load296314472;
    $319 = $2;
    $__gb_sroa_1_4_load306328 = $__gb_sroa_1_4_load306329469;
   } else if (($conv | 0) == 4) {
    $__ng_0 = 0;
    $add_ptr311 = $add_ptr308475;
    $__gb_sroa_0_0_load296317 = $__gb_sroa_0_0_load296314472;
    $213 = $2;
    $__gb_sroa_1_4_load306327 = $__gb_sroa_1_4_load306329469;
    L15327 : while (1) {
     $214 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
     do {
      if (($214 | 0) == 0) {
       $220 = 1;
      } else {
       $215 = HEAP32[$214 + 12 >> 2] | 0;
       if (($215 | 0) == (HEAP32[$214 + 16 >> 2] | 0)) {
        $retval_i_i_i_i1940_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$214 >> 2] | 0) + 36 >> 2] & 255]($214) | 0;
       } else {
        $retval_i_i_i_i1940_0 = HEAP32[$215 >> 2] | 0;
       }
       if (($retval_i_i_i_i1940_0 | 0) == -1) {
        HEAP32[$__sbuf__i_i_i607 >> 2] = 0;
        $220 = 1;
        break;
       } else {
        $220 = (HEAP32[$__sbuf__i_i_i607 >> 2] | 0) == 0;
        break;
       }
      }
     } while (0);
     $221 = HEAP32[$__sbuf__i11_i_i628 >> 2] | 0;
     do {
      if (($221 | 0) == 0) {
       label = 13097;
      } else {
       $222 = HEAP32[$221 + 12 >> 2] | 0;
       if (($222 | 0) == (HEAP32[$221 + 16 >> 2] | 0)) {
        $retval_i_i7_i_i1934_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$221 >> 2] | 0) + 36 >> 2] & 255]($221) | 0;
       } else {
        $retval_i_i7_i_i1934_0 = HEAP32[$222 >> 2] | 0;
       }
       if (($retval_i_i7_i_i1934_0 | 0) == -1) {
        HEAP32[$__sbuf__i11_i_i628 >> 2] = 0;
        label = 13097;
        break;
       } else {
        if ($220 ^ ($221 | 0) == 0) {
         break;
        } else {
         break L15327;
        }
       }
      }
     } while (0);
     if ((label | 0) == 13097) {
      label = 0;
      if ($220) {
       break;
      }
     }
     $227 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
     $228 = HEAP32[$227 + 12 >> 2] | 0;
     if (($228 | 0) == (HEAP32[$227 + 16 >> 2] | 0)) {
      $retval_i_i1912_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$227 >> 2] | 0) + 36 >> 2] & 255]($227) | 0;
     } else {
      $retval_i_i1912_0 = HEAP32[$228 >> 2] | 0;
     }
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, $retval_i_i1912_0) | 0) {
      $234 = HEAP32[$__wn >> 2] | 0;
      if (($234 | 0) == (HEAP32[$__we_addr >> 2] | 0)) {
       __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb, $__wn, $__we_addr);
       $236 = HEAP32[$__wn >> 2] | 0;
      } else {
       $236 = $234;
      }
      HEAP32[$__wn >> 2] = $236 + 4;
      HEAP32[$236 >> 2] = $retval_i_i1912_0;
      $__ng_1 = $__ng_0 + 1 | 0;
      $add_ptr312 = $add_ptr311;
      $__gb_sroa_0_0_load296318 = $__gb_sroa_0_0_load296317;
      $242 = $213;
      $__gb_sroa_1_4_load306325 = $__gb_sroa_1_4_load306327;
     } else {
      $conv_i_i1828 = HEAPU8[$__size__i_i_i273] | 0;
      if (((($conv_i_i1828 & 1 | 0) == 0 ? $conv_i_i1828 >>> 1 : HEAP32[$__size__i23_i1837 >> 2] | 0) | 0) == 0 | ($__ng_0 | 0) == 0) {
       break;
      }
      if (($retval_i_i1912_0 | 0) != (HEAP32[$__ts >> 2] | 0)) {
       break;
      }
      if (($__gb_sroa_0_0_load296317 | 0) == ($add_ptr311 | 0)) {
       $cmp_i202 = ($__gb_sroa_1_4_load306327 | 0) != 176;
       $sub_ptr_sub_i205 = $__gb_sroa_0_0_load296317 - $213 | 0;
       $cond_i206 = $sub_ptr_sub_i205 >>> 0 < 2147483647 ? $sub_ptr_sub_i205 << 1 : -1;
       if ($cmp_i202) {
        $cond15_i = $213;
       } else {
        $cond15_i = 0;
       }
       $call16_i = _realloc($cond15_i, $cond_i206) | 0;
       $240 = $call16_i;
       if (($call16_i | 0) == 0) {
        label = 13114;
        break L15168;
       }
       if (!($cmp_i202 | ($213 | 0) == 0)) {}
       $add_ptr313 = $240 + ($cond_i206 >>> 2 << 2) | 0;
       $__gb_sroa_0_0_load296319 = $240 + ($sub_ptr_sub_i205 >> 2 << 2) | 0;
       $241 = $240;
       $__gb_sroa_1_4_load306326 = 82;
      } else {
       $add_ptr313 = $add_ptr311;
       $__gb_sroa_0_0_load296319 = $__gb_sroa_0_0_load296317;
       $241 = $213;
       $__gb_sroa_1_4_load306326 = $__gb_sroa_1_4_load306327;
      }
      HEAP32[$__gb_sroa_0_0_load296319 >> 2] = $__ng_0;
      $__ng_1 = 0;
      $add_ptr312 = $add_ptr313;
      $__gb_sroa_0_0_load296318 = $__gb_sroa_0_0_load296319 + 4 | 0;
      $242 = $241;
      $__gb_sroa_1_4_load306325 = $__gb_sroa_1_4_load306326;
     }
     $243 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
     $__ninp__i_i1748 = $243 + 12 | 0;
     $244 = HEAP32[$__ninp__i_i1748 >> 2] | 0;
     if (($244 | 0) == (HEAP32[$243 + 16 >> 2] | 0)) {
      $247 = HEAP32[(HEAP32[$243 >> 2] | 0) + 40 >> 2] | 0;
      FUNCTION_TABLE_ii[$247 & 255]($243) | 0;
      $__ng_0 = $__ng_1;
      $add_ptr311 = $add_ptr312;
      $__gb_sroa_0_0_load296317 = $__gb_sroa_0_0_load296318;
      $213 = $242;
      $__gb_sroa_1_4_load306327 = $__gb_sroa_1_4_load306325;
      continue;
     } else {
      HEAP32[$__ninp__i_i1748 >> 2] = $244 + 4;
      $__ng_0 = $__ng_1;
      $add_ptr311 = $add_ptr312;
      $__gb_sroa_0_0_load296317 = $__gb_sroa_0_0_load296318;
      $213 = $242;
      $__gb_sroa_1_4_load306327 = $__gb_sroa_1_4_load306325;
      continue;
     }
    }
    if (($213 | 0) == ($__gb_sroa_0_0_load296317 | 0) | ($__ng_0 | 0) == 0) {
     $add_ptr310 = $add_ptr311;
     $__gb_sroa_0_0_load296316 = $__gb_sroa_0_0_load296317;
     $250 = $213;
     $__gb_sroa_1_4_load306324 = $__gb_sroa_1_4_load306327;
    } else {
     if (($__gb_sroa_0_0_load296317 | 0) == ($add_ptr311 | 0)) {
      $cmp_i217 = ($__gb_sroa_1_4_load306327 | 0) != 176;
      $sub_ptr_sub_i221 = $__gb_sroa_0_0_load296317 - $213 | 0;
      $cond_i224 = $sub_ptr_sub_i221 >>> 0 < 2147483647 ? $sub_ptr_sub_i221 << 1 : -1;
      if ($cmp_i217) {
       $cond15_i230 = $213;
      } else {
       $cond15_i230 = 0;
      }
      $call16_i231 = _realloc($cond15_i230, $cond_i224) | 0;
      $248 = $call16_i231;
      if (($call16_i231 | 0) == 0) {
       label = 13128;
       break L15168;
      }
      if (!($cmp_i217 | ($213 | 0) == 0)) {}
      $add_ptr307 = $248 + ($cond_i224 >>> 2 << 2) | 0;
      $__gb_sroa_0_0_load296320 = $248 + ($sub_ptr_sub_i221 >> 2 << 2) | 0;
      $249 = $248;
      $__gb_sroa_1_4_load306323 = 82;
     } else {
      $add_ptr307 = $add_ptr311;
      $__gb_sroa_0_0_load296320 = $__gb_sroa_0_0_load296317;
      $249 = $213;
      $__gb_sroa_1_4_load306323 = $__gb_sroa_1_4_load306327;
     }
     HEAP32[$__gb_sroa_0_0_load296320 >> 2] = $__ng_0;
     $add_ptr310 = $add_ptr307;
     $__gb_sroa_0_0_load296316 = $__gb_sroa_0_0_load296320 + 4 | 0;
     $250 = $249;
     $__gb_sroa_1_4_load306324 = $__gb_sroa_1_4_load306323;
    }
    $251 = HEAP32[$__fd >> 2] | 0;
    if (($251 | 0) > 0) {
     $252 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
     do {
      if (($252 | 0) == 0) {
       $258 = 1;
      } else {
       $253 = HEAP32[$252 + 12 >> 2] | 0;
       if (($253 | 0) == (HEAP32[$252 + 16 >> 2] | 0)) {
        $retval_i_i_i_i1494_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$252 >> 2] | 0) + 36 >> 2] & 255]($252) | 0;
       } else {
        $retval_i_i_i_i1494_0 = HEAP32[$253 >> 2] | 0;
       }
       if (($retval_i_i_i_i1494_0 | 0) == -1) {
        HEAP32[$__sbuf__i_i_i607 >> 2] = 0;
        $258 = 1;
        break;
       } else {
        $258 = (HEAP32[$__sbuf__i_i_i607 >> 2] | 0) == 0;
        break;
       }
      }
     } while (0);
     $259 = HEAP32[$__sbuf__i11_i_i628 >> 2] | 0;
     do {
      if (($259 | 0) == 0) {
       label = 13148;
      } else {
       $260 = HEAP32[$259 + 12 >> 2] | 0;
       if (($260 | 0) == (HEAP32[$259 + 16 >> 2] | 0)) {
        $retval_i_i7_i_i1488_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$259 >> 2] | 0) + 36 >> 2] & 255]($259) | 0;
       } else {
        $retval_i_i7_i_i1488_0 = HEAP32[$260 >> 2] | 0;
       }
       if (($retval_i_i7_i_i1488_0 | 0) == -1) {
        HEAP32[$__sbuf__i11_i_i628 >> 2] = 0;
        label = 13148;
        break;
       } else {
        if ($258 ^ ($259 | 0) == 0) {
         $265 = $259;
         break;
        } else {
         label = 13154;
         break L15168;
        }
       }
      }
     } while (0);
     if ((label | 0) == 13148) {
      label = 0;
      if ($258) {
       label = 13154;
       break L15168;
      } else {
       $265 = 0;
      }
     }
     $266 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
     $267 = HEAP32[$266 + 12 >> 2] | 0;
     if (($267 | 0) == (HEAP32[$266 + 16 >> 2] | 0)) {
      $retval_i_i1406_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$266 >> 2] | 0) + 36 >> 2] & 255]($266) | 0;
     } else {
      $retval_i_i1406_0 = HEAP32[$267 >> 2] | 0;
     }
     if (($retval_i_i1406_0 | 0) != (HEAP32[$__dp >> 2] | 0)) {
      label = 13154;
      break L15168;
     }
     $274 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
     $__ninp__i_i1333 = $274 + 12 | 0;
     $275 = HEAP32[$__ninp__i_i1333 >> 2] | 0;
     if (($275 | 0) == (HEAP32[$274 + 16 >> 2] | 0)) {
      $278 = HEAP32[(HEAP32[$274 >> 2] | 0) + 40 >> 2] | 0;
      FUNCTION_TABLE_ii[$278 & 255]($274) | 0;
      $280 = $265;
      $279 = $251;
     } else {
      HEAP32[$__ninp__i_i1333 >> 2] = $275 + 4;
      $280 = $265;
      $279 = $251;
     }
     while (1) {
      $281 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
      do {
       if (($281 | 0) == 0) {
        $287 = 1;
       } else {
        $282 = HEAP32[$281 + 12 >> 2] | 0;
        if (($282 | 0) == (HEAP32[$281 + 16 >> 2] | 0)) {
         $retval_i_i_i_i1147_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$281 >> 2] | 0) + 36 >> 2] & 255]($281) | 0;
        } else {
         $retval_i_i_i_i1147_0 = HEAP32[$282 >> 2] | 0;
        }
        if (($retval_i_i_i_i1147_0 | 0) == -1) {
         HEAP32[$__sbuf__i_i_i607 >> 2] = 0;
         $287 = 1;
         break;
        } else {
         $287 = (HEAP32[$__sbuf__i_i_i607 >> 2] | 0) == 0;
         break;
        }
       }
      } while (0);
      do {
       if (($280 | 0) == 0) {
        label = 13171;
       } else {
        $288 = HEAP32[$280 + 12 >> 2] | 0;
        if (($288 | 0) == (HEAP32[$280 + 16 >> 2] | 0)) {
         $retval_i_i7_i_i1141_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$280 >> 2] | 0) + 36 >> 2] & 255]($280) | 0;
        } else {
         $retval_i_i7_i_i1141_0 = HEAP32[$288 >> 2] | 0;
        }
        if (($retval_i_i7_i_i1141_0 | 0) == -1) {
         HEAP32[$__sbuf__i11_i_i628 >> 2] = 0;
         label = 13171;
         break;
        } else {
         if ($287 ^ ($280 | 0) == 0) {
          $293 = $280;
          break;
         } else {
          label = 13178;
          break L15168;
         }
        }
       }
      } while (0);
      if ((label | 0) == 13171) {
       label = 0;
       if ($287) {
        label = 13178;
        break L15168;
       } else {
        $293 = 0;
       }
      }
      $294 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
      $295 = HEAP32[$294 + 12 >> 2] | 0;
      if (($295 | 0) == (HEAP32[$294 + 16 >> 2] | 0)) {
       $retval_i_i1088_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$294 >> 2] | 0) + 36 >> 2] & 255]($294) | 0;
      } else {
       $retval_i_i1088_0 = HEAP32[$295 >> 2] | 0;
      }
      if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, $retval_i_i1088_0) | 0)) {
       label = 13178;
       break L15168;
      }
      if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$__we_addr >> 2] | 0)) {
       __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb, $__wn, $__we_addr);
      }
      $304 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
      $305 = HEAP32[$304 + 12 >> 2] | 0;
      if (($305 | 0) == (HEAP32[$304 + 16 >> 2] | 0)) {
       $retval_i_i939_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$304 >> 2] | 0) + 36 >> 2] & 255]($304) | 0;
      } else {
       $retval_i_i939_0 = HEAP32[$305 >> 2] | 0;
      }
      $310 = HEAP32[$__wn >> 2] | 0;
      HEAP32[$__wn >> 2] = $310 + 4;
      HEAP32[$310 >> 2] = $retval_i_i939_0;
      $dec = $279 - 1 | 0;
      HEAP32[$__fd >> 2] = $dec;
      $311 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
      $__ninp__i_i577 = $311 + 12 | 0;
      $312 = HEAP32[$__ninp__i_i577 >> 2] | 0;
      if (($312 | 0) == (HEAP32[$311 + 16 >> 2] | 0)) {
       $315 = HEAP32[(HEAP32[$311 >> 2] | 0) + 40 >> 2] | 0;
       FUNCTION_TABLE_ii[$315 & 255]($311) | 0;
      } else {
       HEAP32[$__ninp__i_i577 >> 2] = $312 + 4;
      }
      if (($dec | 0) > 0) {
       $280 = $293;
       $279 = $dec;
      } else {
       break;
      }
     }
    }
    if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$__first__i_i_i551 >> 2] | 0)) {
     label = 13189;
     break L15168;
    } else {
     $__trailing_sign_1 = $__trailing_sign_0478;
     $add_ptr309 = $add_ptr310;
     $__gb_sroa_0_0_load296315 = $__gb_sroa_0_0_load296316;
     $319 = $250;
     $__gb_sroa_1_4_load306328 = $__gb_sroa_1_4_load306324;
    }
   } else {
    $__trailing_sign_1 = $__trailing_sign_0478;
    $add_ptr309 = $add_ptr308475;
    $__gb_sroa_0_0_load296315 = $__gb_sroa_0_0_load296314472;
    $319 = $2;
    $__gb_sroa_1_4_load306328 = $__gb_sroa_1_4_load306329469;
   }
  } while (0);
  L15467 : do {
   if ((label | 0) == 12967) {
    label = 0;
    if (($__p_0480 | 0) == 3) {
     $__gb_sroa_1_4_load306329_lcssa = $__gb_sroa_1_4_load306329469;
     $_lcssa = $2;
     $__gb_sroa_0_0_load296314_lcssa = $__gb_sroa_0_0_load296314472;
     $__trailing_sign_0_lcssa = $__trailing_sign_0478;
     label = 13191;
     break L15168;
    } else {
     $57 = $16;
    }
    while (1) {
     $58 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
     do {
      if (($58 | 0) == 0) {
       $64 = 1;
      } else {
       $59 = HEAP32[$58 + 12 >> 2] | 0;
       if (($59 | 0) == (HEAP32[$58 + 16 >> 2] | 0)) {
        $retval_i_i_i_i738_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$58 >> 2] | 0) + 36 >> 2] & 255]($58) | 0;
       } else {
        $retval_i_i_i_i738_0 = HEAP32[$59 >> 2] | 0;
       }
       if (($retval_i_i_i_i738_0 | 0) == -1) {
        HEAP32[$__sbuf__i_i_i607 >> 2] = 0;
        $64 = 1;
        break;
       } else {
        $64 = (HEAP32[$__sbuf__i_i_i607 >> 2] | 0) == 0;
        break;
       }
      }
     } while (0);
     do {
      if (($57 | 0) == 0) {
       label = 12981;
      } else {
       $65 = HEAP32[$57 + 12 >> 2] | 0;
       if (($65 | 0) == (HEAP32[$57 + 16 >> 2] | 0)) {
        $retval_i_i7_i_i732_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$57 >> 2] | 0) + 36 >> 2] & 255]($57) | 0;
       } else {
        $retval_i_i7_i_i732_0 = HEAP32[$65 >> 2] | 0;
       }
       if (($retval_i_i7_i_i732_0 | 0) == -1) {
        HEAP32[$__sbuf__i11_i_i628 >> 2] = 0;
        label = 12981;
        break;
       } else {
        if ($64 ^ ($57 | 0) == 0) {
         $70 = $57;
         break;
        } else {
         $__trailing_sign_1 = $__trailing_sign_0478;
         $add_ptr309 = $add_ptr308475;
         $__gb_sroa_0_0_load296315 = $__gb_sroa_0_0_load296314472;
         $319 = $2;
         $__gb_sroa_1_4_load306328 = $__gb_sroa_1_4_load306329469;
         break L15467;
        }
       }
      }
     } while (0);
     if ((label | 0) == 12981) {
      label = 0;
      if ($64) {
       $__trailing_sign_1 = $__trailing_sign_0478;
       $add_ptr309 = $add_ptr308475;
       $__gb_sroa_0_0_load296315 = $__gb_sroa_0_0_load296314472;
       $319 = $2;
       $__gb_sroa_1_4_load306328 = $__gb_sroa_1_4_load306329469;
       break L15467;
      } else {
       $70 = 0;
      }
     }
     $71 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
     $72 = HEAP32[$71 + 12 >> 2] | 0;
     if (($72 | 0) == (HEAP32[$71 + 16 >> 2] | 0)) {
      $retval_i_i797_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$71 >> 2] | 0) + 36 >> 2] & 255]($71) | 0;
     } else {
      $retval_i_i797_0 = HEAP32[$72 >> 2] | 0;
     }
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] & 63]($__ct, 8192, $retval_i_i797_0) | 0)) {
      $__trailing_sign_1 = $__trailing_sign_0478;
      $add_ptr309 = $add_ptr308475;
      $__gb_sroa_0_0_load296315 = $__gb_sroa_0_0_load296314472;
      $319 = $2;
      $__gb_sroa_1_4_load306328 = $__gb_sroa_1_4_load306329469;
      break L15467;
     }
     $78 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
     $__ninp__i_i836 = $78 + 12 | 0;
     $79 = HEAP32[$__ninp__i_i836 >> 2] | 0;
     if (($79 | 0) == (HEAP32[$78 + 16 >> 2] | 0)) {
      $retval_i_i829_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$78 >> 2] | 0) + 40 >> 2] & 255]($78) | 0;
     } else {
      HEAP32[$__ninp__i_i836 >> 2] = $79 + 4;
      $retval_i_i829_0 = HEAP32[$79 >> 2] | 0;
     }
     $84 = HEAP8[$__size__i_i_i249] | 0;
     if (($84 & 1) == 0) {
      $cond_i_i167 = 1;
      $87 = $84;
     } else {
      $85 = HEAP32[$__cap__i_i_i >> 2] | 0;
      $cond_i_i167 = ($85 & -2) - 1 | 0;
      $87 = $85 & 255;
     }
     $conv_i_i65_i168 = $87 & 255;
     $cond_i77_i176 = ($conv_i_i65_i168 & 1 | 0) == 0 ? $conv_i_i65_i168 >>> 1 : HEAP32[$__data__i_i_i155 >> 2] | 0;
     if (($cond_i77_i176 | 0) == ($cond_i_i167 | 0)) {
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($__spaces, $cond_i_i167, 1, $cond_i_i167, $cond_i_i167, 0, 0);
      $89 = HEAP8[$__size__i_i_i249] | 0;
     } else {
      $89 = $87;
     }
     $__data__i_i_i155_583 = ($89 & 1) == 0 ? $__data__i_i_i155 : HEAP32[$__data__i21_i_i154 >> 2] | 0;
     HEAP32[$__data__i_i_i155_583 + ($cond_i77_i176 << 2) >> 2] = $retval_i_i829_0;
     $add_ptr_sum_i190 = $cond_i77_i176 + 1 | 0;
     HEAP32[$__data__i_i_i155_583 + ($add_ptr_sum_i190 << 2) >> 2] = 0;
     if ((HEAP8[$__size__i_i_i249] & 1) == 0) {
      HEAP8[$__size__i_i_i249] = $add_ptr_sum_i190 << 1 & 255;
      $57 = $70;
      continue;
     } else {
      HEAP32[$__data__i_i_i155 >> 2] = $add_ptr_sum_i190;
      $57 = $70;
      continue;
     }
    }
   }
  } while (0);
  $inc282 = $__p_0480 + 1 | 0;
  if ($inc282 >>> 0 < 4) {
   $__gb_sroa_1_4_load306329469 = $__gb_sroa_1_4_load306328;
   $2 = $319;
   $__gb_sroa_0_0_load296314472 = $__gb_sroa_0_0_load296315;
   $add_ptr308475 = $add_ptr309;
   $__trailing_sign_0478 = $__trailing_sign_1;
   $__p_0480 = $inc282;
  } else {
   $__gb_sroa_1_4_load306329_lcssa = $__gb_sroa_1_4_load306328;
   $_lcssa = $319;
   $__gb_sroa_0_0_load296314_lcssa = $__gb_sroa_0_0_load296315;
   $__trailing_sign_0_lcssa = $__trailing_sign_1;
   label = 13191;
   break;
  }
 }
 L15514 : do {
  if ((label | 0) == 13189) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $352 = $250;
   $__gb_sroa_1_4_load306330 = $__gb_sroa_1_4_load306324;
  } else if ((label | 0) == 13191) {
   L15517 : do {
    if (($__trailing_sign_0_lcssa | 0) != 0) {
     $__size__i_i = $__trailing_sign_0_lcssa;
     $__data__i_i_i_i = $__trailing_sign_0_lcssa + 4 | 0;
     $__data__i21_i_i_i = $__trailing_sign_0_lcssa + 8 | 0;
     $__i_0 = 1;
     L15519 : while (1) {
      $conv_i_i561 = HEAPU8[$__size__i_i] | 0;
      if (($conv_i_i561 & 1 | 0) == 0) {
       $cond_i = $conv_i_i561 >>> 1;
      } else {
       $cond_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
      }
      if ($__i_0 >>> 0 >= $cond_i >>> 0) {
       break L15517;
      }
      $322 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
      do {
       if (($322 | 0) == 0) {
        $328 = 1;
       } else {
        $323 = HEAP32[$322 + 12 >> 2] | 0;
        if (($323 | 0) == (HEAP32[$322 + 16 >> 2] | 0)) {
         $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$322 >> 2] | 0) + 36 >> 2] & 255]($322) | 0;
        } else {
         $retval_i_i_i_i_0 = HEAP32[$323 >> 2] | 0;
        }
        if (($retval_i_i_i_i_0 | 0) == -1) {
         HEAP32[$__sbuf__i_i_i607 >> 2] = 0;
         $328 = 1;
         break;
        } else {
         $328 = (HEAP32[$__sbuf__i_i_i607 >> 2] | 0) == 0;
         break;
        }
       }
      } while (0);
      $329 = HEAP32[$__sbuf__i11_i_i628 >> 2] | 0;
      do {
       if (($329 | 0) == 0) {
        label = 13210;
       } else {
        $330 = HEAP32[$329 + 12 >> 2] | 0;
        if (($330 | 0) == (HEAP32[$329 + 16 >> 2] | 0)) {
         $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$329 >> 2] | 0) + 36 >> 2] & 255]($329) | 0;
        } else {
         $retval_i_i7_i_i_0 = HEAP32[$330 >> 2] | 0;
        }
        if (($retval_i_i7_i_i_0 | 0) == -1) {
         HEAP32[$__sbuf__i11_i_i628 >> 2] = 0;
         label = 13210;
         break;
        } else {
         if ($328 ^ ($329 | 0) == 0) {
          break;
         } else {
          break L15519;
         }
        }
       }
      } while (0);
      if ((label | 0) == 13210) {
       label = 0;
       if ($328) {
        break;
       }
      }
      $335 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
      $336 = HEAP32[$335 + 12 >> 2] | 0;
      if (($336 | 0) == (HEAP32[$335 + 16 >> 2] | 0)) {
       $retval_i_i452_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$335 >> 2] | 0) + 36 >> 2] & 255]($335) | 0;
      } else {
       $retval_i_i452_0 = HEAP32[$336 >> 2] | 0;
      }
      if ((HEAP8[$__size__i_i] & 1) == 0) {
       $cond_i_i_i = $__data__i_i_i_i;
      } else {
       $cond_i_i_i = HEAP32[$__data__i21_i_i_i >> 2] | 0;
      }
      if (($retval_i_i452_0 | 0) != (HEAP32[$cond_i_i_i + ($__i_0 << 2) >> 2] | 0)) {
       break;
      }
      $inc303 = $__i_0 + 1 | 0;
      $345 = HEAP32[$__sbuf__i_i_i607 >> 2] | 0;
      $__ninp__i_i = $345 + 12 | 0;
      $346 = HEAP32[$__ninp__i_i >> 2] | 0;
      if (($346 | 0) == (HEAP32[$345 + 16 >> 2] | 0)) {
       $349 = HEAP32[(HEAP32[$345 >> 2] | 0) + 40 >> 2] | 0;
       FUNCTION_TABLE_ii[$349 & 255]($345) | 0;
       $__i_0 = $inc303;
       continue;
      } else {
       HEAP32[$__ninp__i_i >> 2] = $346 + 4;
       $__i_0 = $inc303;
       continue;
      }
     }
     HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
     $retval_0 = 0;
     $352 = $_lcssa;
     $__gb_sroa_1_4_load306330 = $__gb_sroa_1_4_load306329_lcssa;
     break L15514;
    }
   } while (0);
   if (($_lcssa | 0) == ($__gb_sroa_0_0_load296314_lcssa | 0)) {
    $retval_0 = 1;
    $352 = $__gb_sroa_0_0_load296314_lcssa;
    $__gb_sroa_1_4_load306330 = $__gb_sroa_1_4_load306329_lcssa;
    break;
   }
   HEAP32[$__et >> 2] = 0;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp, $_lcssa, $__gb_sroa_0_0_load296314_lcssa, $__et);
   if ((HEAP32[$__et >> 2] | 0) == 0) {
    $retval_0 = 1;
    $352 = $_lcssa;
    $__gb_sroa_1_4_load306330 = $__gb_sroa_1_4_load306329_lcssa;
    break;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $352 = $_lcssa;
   $__gb_sroa_1_4_load306330 = $__gb_sroa_1_4_load306329_lcssa;
  } else if ((label | 0) == 13083) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $352 = $2;
   $__gb_sroa_1_4_load306330 = $__gb_sroa_1_4_load306329469;
  } else if ((label | 0) == 12966) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $352 = $2;
   $__gb_sroa_1_4_load306330 = $__gb_sroa_1_4_load306329469;
  } else if ((label | 0) == 13128) {
   __ZSt17__throw_bad_allocv();
   return 0;
  } else if ((label | 0) == 13178) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $352 = $250;
   $__gb_sroa_1_4_load306330 = $__gb_sroa_1_4_load306324;
  } else if ((label | 0) == 13039) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $352 = $2;
   $__gb_sroa_1_4_load306330 = $__gb_sroa_1_4_load306329469;
  } else if ((label | 0) == 13154) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $352 = $250;
   $__gb_sroa_1_4_load306330 = $__gb_sroa_1_4_load306324;
  } else if ((label | 0) == 13114) {
   __ZSt17__throw_bad_allocv();
   return 0;
  }
 } while (0);
 if ((HEAP8[$__size__i_i_i249] & 1) != 0) {
  __ZdlPv(HEAP32[$__data__i21_i_i154 >> 2] | 0);
 }
 if ((HEAP8[$__size__i_i_i255] & 1) != 0) {
  __ZdlPv(HEAP32[$__data__i21_i_i1312 >> 2] | 0);
 }
 if ((HEAP8[$__size__i_i_i261] & 1) != 0) {
  __ZdlPv(HEAP32[$__data__i21_i_i >> 2] | 0);
 }
 if ((HEAP8[$__size__i_i_i267] & 1) != 0) {
  __ZdlPv(HEAP32[$__data__i21_i_i1882 >> 2] | 0);
 }
 if ((HEAP8[$__size__i_i_i273] & 1) != 0) {
  __ZdlPv(HEAP32[$__grp + 8 >> 2] | 0);
 }
 if (($352 | 0) == 0) {
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 FUNCTION_TABLE_vi[$__gb_sroa_1_4_load306330 & 511]($352);
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $__size__i_i = 0, $sub_ptr_rhs_cast_i_i = 0, $0 = 0, $conv_i_i = 0, $cond_i = 0, $2 = 0, $4 = 0, $cond_i84 = 0, $sub_ptr_div_i_i = 0, $5 = 0, $cond_i61 = 0, $add_ptr = 0, $10 = 0, $__p_019 = 0, $__first_addr_018 = 0, $incdec_ptr8 = 0, $__p_0_lcssa = 0, $add9 = 0;
 $__size__i_i = $this;
 $sub_ptr_rhs_cast_i_i = $__first;
 $0 = HEAP8[$__size__i_i] | 0;
 $conv_i_i = $0 & 255;
 if (($conv_i_i & 1 | 0) == 0) {
  $cond_i = $conv_i_i >>> 1;
 } else {
  $cond_i = HEAP32[$this + 4 >> 2] | 0;
 }
 if (($0 & 1) == 0) {
  $cond_i84 = 1;
  $4 = $0;
 } else {
  $2 = HEAP32[$this >> 2] | 0;
  $cond_i84 = ($2 & -2) - 1 | 0;
  $4 = $2 & 255;
 }
 $sub_ptr_div_i_i = $__last - $sub_ptr_rhs_cast_i_i >> 2;
 if (($sub_ptr_div_i_i | 0) == 0) {
  return $this | 0;
 }
 if (($cond_i84 - $cond_i | 0) >>> 0 < $sub_ptr_div_i_i >>> 0) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $cond_i84, $cond_i + $sub_ptr_div_i_i - $cond_i84 | 0, $cond_i, $cond_i, 0, 0);
  $5 = HEAP8[$__size__i_i] | 0;
 } else {
  $5 = $4;
 }
 if (($5 & 1) == 0) {
  $cond_i61 = $this + 4 | 0;
 } else {
  $cond_i61 = HEAP32[$this + 8 >> 2] | 0;
 }
 $add_ptr = $cond_i61 + ($cond_i << 2) | 0;
 if (($__first | 0) == ($__last | 0)) {
  $__p_0_lcssa = $add_ptr;
 } else {
  $10 = $cond_i + (($__last - 4 + (-$sub_ptr_rhs_cast_i_i | 0) | 0) >>> 2) + 1 | 0;
  $__first_addr_018 = $__first;
  $__p_019 = $add_ptr;
  while (1) {
   HEAP32[$__p_019 >> 2] = HEAP32[$__first_addr_018 >> 2];
   $incdec_ptr8 = $__first_addr_018 + 4 | 0;
   if (($incdec_ptr8 | 0) == ($__last | 0)) {
    break;
   } else {
    $__first_addr_018 = $incdec_ptr8;
    $__p_019 = $__p_019 + 4 | 0;
   }
  }
  $__p_0_lcssa = $cond_i61 + ($10 << 2) | 0;
 }
 HEAP32[$__p_0_lcssa >> 2] = 0;
 $add9 = $cond_i + $sub_ptr_div_i_i | 0;
 if ((HEAP8[$__size__i_i] & 1) == 0) {
  HEAP8[$__size__i_i] = $add9 << 1 & 255;
  return $this | 0;
 } else {
  HEAP32[$this + 4 >> 2] = $add9;
  return $this | 0;
 }
 return 0;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg_result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p_i_i_i = 0, $__wbuf = 0, $__wb = 0, $__wn = 0, $__loc = 0, $__neg = 0, $agg_tmp = 0, $__first__i_i_i_i_i = 0, $__second__i_i_i_i_i = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $1 = 0, $3 = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $11 = 0, $12 = 0, $13 = 0, $__size__i46_i = 0, $_pre = 0, $call_i85 = 0, $21 = 0, $22 = 0, $24 = 0, $cond_i_i = 0, $conv_i_i65_i = 0, $cond_i77_i = 0, $26 = 0, $cond_i49_i = 0, $add_ptr_sum_i = 0, $call_i91 = 0, $38 = 0, $add_ptr17 = 0, $__w_0 = 0, $__sbuf__i_i_i = 0, $40 = 0, $41 = 0, $retval_i_i_i_i_0 = 0, $46 = 0, $cmp_i_i_i = 0, $47 = 0, $retval_i_i7_i_i_0 = 0, $54 = 0, $__shared_owners__i_i23 = 0, $59 = 0, label = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 456 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i = __stackBase__ | 0;
 $__wbuf = __stackBase__ + 16 | 0;
 $__wb = __stackBase__ + 416 | 0;
 $__wn = __stackBase__ + 424 | 0;
 $__loc = __stackBase__ + 432 | 0;
 $__neg = __stackBase__ + 440 | 0;
 $agg_tmp = __stackBase__ + 448 | 0;
 $__first__i_i_i_i_i = $__wb | 0;
 HEAP32[$__first__i_i_i_i_i >> 2] = $__wbuf;
 $__second__i_i_i_i_i = $__wb + 4 | 0;
 HEAP32[$__second__i_i_i_i_i >> 2] = 176;
 $__locale__i_i = $__loc | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $1 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + 1, tempValue;
 $3 = HEAP32[$__locale__i_i >> 2] | 0;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17808;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4453] | 0) - 1 | 0;
 $8 = HEAP32[$3 + 8 >> 2] | 0;
 do {
  if ((HEAP32[$3 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   $11 = $9;
   HEAP8[$__neg] = 0;
   $12 = $__e | 0;
   $13 = HEAP32[$12 >> 2] | 0;
   HEAP32[$agg_tmp >> 2] = $13;
   if (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b, $agg_tmp, $__intl, $__loc, HEAP32[$__iob + 4 >> 2] | 0, $__err, $__neg, $11, $__wb, $__wn, $__wbuf + 400 | 0) | 0) {
    $__size__i46_i = $__v;
    if ((HEAP8[$__size__i46_i] & 1) == 0) {
     HEAP32[$__v + 4 >> 2] = 0;
     HEAP8[$__size__i46_i] = 0;
    } else {
     HEAP32[HEAP32[$__v + 8 >> 2] >> 2] = 0;
     HEAP32[$__v + 4 >> 2] = 0;
    }
    $_pre = $9;
    do {
     if ((HEAP8[$__neg] & 1) != 0) {
      $call_i85 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$_pre >> 2] | 0) + 44 >> 2] & 63]($11, 45) | 0;
      $21 = HEAP8[$__size__i46_i] | 0;
      if (($21 & 1) == 0) {
       $cond_i_i = 1;
       $24 = $21;
      } else {
       $22 = HEAP32[$__v >> 2] | 0;
       $cond_i_i = ($22 & -2) - 1 | 0;
       $24 = $22 & 255;
      }
      $conv_i_i65_i = $24 & 255;
      if (($conv_i_i65_i & 1 | 0) == 0) {
       $cond_i77_i = $conv_i_i65_i >>> 1;
      } else {
       $cond_i77_i = HEAP32[$__v + 4 >> 2] | 0;
      }
      if (($cond_i77_i | 0) == ($cond_i_i | 0)) {
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($__v, $cond_i_i, 1, $cond_i_i, $cond_i_i, 0, 0);
       $26 = HEAP8[$__size__i46_i] | 0;
      } else {
       $26 = $24;
      }
      if (($26 & 1) == 0) {
       $cond_i49_i = $__v + 4 | 0;
      } else {
       $cond_i49_i = HEAP32[$__v + 8 >> 2] | 0;
      }
      HEAP32[$cond_i49_i + ($cond_i77_i << 2) >> 2] = $call_i85;
      $add_ptr_sum_i = $cond_i77_i + 1 | 0;
      HEAP32[$cond_i49_i + ($add_ptr_sum_i << 2) >> 2] = 0;
      if ((HEAP8[$__size__i46_i] & 1) == 0) {
       HEAP8[$__size__i46_i] = $add_ptr_sum_i << 1 & 255;
       break;
      } else {
       HEAP32[$__v + 4 >> 2] = $add_ptr_sum_i;
       break;
      }
     }
    } while (0);
    $call_i91 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$_pre >> 2] | 0) + 44 >> 2] & 63]($11, 48) | 0;
    $38 = HEAP32[$__wn >> 2] | 0;
    $add_ptr17 = $38 - 4 | 0;
    $__w_0 = HEAP32[$__first__i_i_i_i_i >> 2] | 0;
    while (1) {
     if ($__w_0 >>> 0 >= $add_ptr17 >>> 0) {
      break;
     }
     if ((HEAP32[$__w_0 >> 2] | 0) == ($call_i91 | 0)) {
      $__w_0 = $__w_0 + 4 | 0;
     } else {
      break;
     }
    }
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($__v, $__w_0, $38) | 0;
   }
   $__sbuf__i_i_i = $__b | 0;
   $40 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   do {
    if (($40 | 0) == 0) {
     $46 = 0;
    } else {
     $41 = HEAP32[$40 + 12 >> 2] | 0;
     if (($41 | 0) == (HEAP32[$40 + 16 >> 2] | 0)) {
      $retval_i_i_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$40 >> 2] | 0) + 36 >> 2] & 255]($40) | 0;
     } else {
      $retval_i_i_i_i_0 = HEAP32[$41 >> 2] | 0;
     }
     if (($retval_i_i_i_i_0 | 0) != -1) {
      $46 = $40;
      break;
     }
     HEAP32[$__sbuf__i_i_i >> 2] = 0;
     $46 = 0;
    }
   } while (0);
   $cmp_i_i_i = ($46 | 0) == 0;
   do {
    if (($13 | 0) == 0) {
     label = 13311;
    } else {
     $47 = HEAP32[$13 + 12 >> 2] | 0;
     if (($47 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) {
      $retval_i_i7_i_i_0 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 255]($13) | 0;
     } else {
      $retval_i_i7_i_i_0 = HEAP32[$47 >> 2] | 0;
     }
     if (($retval_i_i7_i_i_0 | 0) == -1) {
      HEAP32[$12 >> 2] = 0;
      label = 13311;
      break;
     } else {
      if ($cmp_i_i_i ^ ($13 | 0) == 0) {
       break;
      } else {
       label = 13313;
       break;
      }
     }
    }
   } while (0);
   if ((label | 0) == 13311) {
    if ($cmp_i_i_i) {
     label = 13313;
    }
   }
   if ((label | 0) == 13313) {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   }
   HEAP32[$agg_result >> 2] = $46;
   $54 = HEAP32[$__locale__i_i >> 2] | 0;
   $__shared_owners__i_i23 = $54 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i_i23 >> 2] | 0, HEAP32[$__shared_owners__i_i23 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$54 >> 2] | 0) + 8 >> 2] & 511]($54 | 0);
   }
   $59 = HEAP32[$__first__i_i_i_i_i >> 2] | 0;
   HEAP32[$__first__i_i_i_i_i >> 2] = 0;
   if (($59 | 0) == 0) {
    STACKTOP = __stackBase__;
    return;
   }
   FUNCTION_TABLE_vi[HEAP32[$__second__i_i_i_i_i >> 2] & 511]($59);
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__psn, $__nsn, $__fd) {
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__psn = $__psn | 0;
 $__nsn = $__nsn | 0;
 $__fd = $__fd | 0;
 var $__p_i_i_i77 = 0, $__p_i_i_i = 0, $ref_tmp = 0, $ref_tmp1 = 0, $0 = 0, $ref_tmp3 = 0, $1 = 0, $ref_tmp7 = 0, $2 = 0, $ref_tmp9 = 0, $3 = 0, $ref_tmp14 = 0, $ref_tmp15 = 0, $4 = 0, $ref_tmp17 = 0, $5 = 0, $ref_tmp21 = 0, $6 = 0, $ref_tmp23 = 0, $7 = 0, $8 = 0, $sub_i_i = 0, $13 = 0, $14 = 0, $exception_i_i = 0, $15 = 0, $16 = 0, $19 = 0, $21 = 0, $__size__i46_i_i_i = 0, $__size__i46_i_i_i102 = 0, $30 = 0, $__size__i46_i_i_i256 = 0, $__size__i46_i_i_i397 = 0, $43 = 0, $sub_i_i84 = 0, $48 = 0, $49 = 0, $exception_i_i96 = 0, $50 = 0, $51 = 0, $54 = 0, $56 = 0, $__size__i46_i_i_i552 = 0, $__size__i46_i_i_i696 = 0, $65 = 0, $__size__i46_i_i_i850 = 0, $__size__i46_i_i_i994 = 0, $storemerge = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 56 | 0;
 $__p_i_i_i77 = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 16 | 0;
 $ref_tmp = __stackBase__ + 32 | 0;
 $ref_tmp1 = __stackBase__ + 40 | 0;
 $0 = $ref_tmp1;
 $ref_tmp3 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $1 = $ref_tmp3;
 $ref_tmp7 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $2 = $ref_tmp7;
 $ref_tmp9 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $3 = $ref_tmp9;
 $ref_tmp14 = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $ref_tmp15 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $4 = $ref_tmp15;
 $ref_tmp17 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $5 = $ref_tmp17;
 $ref_tmp21 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $6 = $ref_tmp21;
 $ref_tmp23 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $7 = $ref_tmp23;
 if ($__intl) {
  $8 = HEAP32[$__loc >> 2] | 0;
  if ((HEAP32[4578] | 0) != -1) {
   HEAP32[$__p_i_i_i >> 2] = 18312;
   HEAP32[$__p_i_i_i + 4 >> 2] = 12;
   HEAP32[$__p_i_i_i + 8 >> 2] = 0;
   __ZNSt3__111__call_onceERVmPvPFvS2_E(18312, $__p_i_i_i, 102);
  }
  $sub_i_i = (HEAP32[4579] | 0) - 1 | 0;
  $13 = HEAP32[$8 + 8 >> 2] | 0;
  if ((HEAP32[$8 + 12 >> 2] | 0) - $13 >> 2 >>> 0 <= $sub_i_i >>> 0) {
   $exception_i_i = ___cxa_allocate_exception(4) | 0;
   $15 = $exception_i_i;
   HEAP32[$15 >> 2] = 9184;
   ___cxa_throw($exception_i_i | 0, 15328, 208);
  }
  $14 = HEAP32[$13 + ($sub_i_i << 2) >> 2] | 0;
  if (($14 | 0) == 0) {
   $exception_i_i = ___cxa_allocate_exception(4) | 0;
   $15 = $exception_i_i;
   HEAP32[$15 >> 2] = 9184;
   ___cxa_throw($exception_i_i | 0, 15328, 208);
  }
  $16 = $14;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$14 >> 2] | 0) + 44 >> 2] & 127]($ref_tmp, $16);
  $19 = $__pat;
  tempBigInt = HEAP32[$ref_tmp >> 2] | 0;
  HEAP8[$19] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[$19 + 1 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[$19 + 2 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[$19 + 3 | 0] = tempBigInt & 255;
  $21 = $14;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$21 >> 2] | 0) + 32 >> 2] & 127]($ref_tmp1, $16);
  $__size__i46_i_i_i = $__nsn;
  if ((HEAP8[$__size__i46_i_i_i] & 1) == 0) {
   HEAP32[$__nsn + 4 >> 2] = 0;
   HEAP8[$__size__i46_i_i_i] = 0;
  } else {
   HEAP32[HEAP32[$__nsn + 8 >> 2] >> 2] = 0;
   HEAP32[$__nsn + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn, 0);
  HEAP32[$__size__i46_i_i_i >> 2] = HEAP32[$0 >> 2];
  HEAP32[$__size__i46_i_i_i + 4 >> 2] = HEAP32[$0 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i + 8 >> 2] = HEAP32[$0 + 8 >> 2];
  _memset($0 | 0, 0, 12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 127]($ref_tmp3, $16);
  $__size__i46_i_i_i102 = $__psn;
  if ((HEAP8[$__size__i46_i_i_i102] & 1) == 0) {
   HEAP32[$__psn + 4 >> 2] = 0;
   HEAP8[$__size__i46_i_i_i102] = 0;
  } else {
   HEAP32[HEAP32[$__psn + 8 >> 2] >> 2] = 0;
   HEAP32[$__psn + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn, 0);
  HEAP32[$__size__i46_i_i_i102 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$__size__i46_i_i_i102 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i102 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  _memset($1 | 0, 0, 12);
  $30 = $14;
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 12 >> 2] & 255]($16) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 16 >> 2] & 255]($16) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$14 >> 2] | 0) + 20 >> 2] & 127]($ref_tmp7, $16);
  $__size__i46_i_i_i256 = $__grp;
  if ((HEAP8[$__size__i46_i_i_i256] & 1) == 0) {
   HEAP8[$__grp + 1 | 0] = 0;
   HEAP8[$__size__i46_i_i_i256] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] | 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp, 0);
  HEAP32[$__size__i46_i_i_i256 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$__size__i46_i_i_i256 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i256 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  _memset($2 | 0, 0, 12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] & 127]($ref_tmp9, $16);
  $__size__i46_i_i_i397 = $__sym;
  if ((HEAP8[$__size__i46_i_i_i397] & 1) == 0) {
   HEAP32[$__sym + 4 >> 2] = 0;
   HEAP8[$__size__i46_i_i_i397] = 0;
  } else {
   HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym, 0);
  HEAP32[$__size__i46_i_i_i397 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$__size__i46_i_i_i397 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i397 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  _memset($3 | 0, 0, 12);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 255]($16) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = __stackBase__;
  return;
 } else {
  $43 = HEAP32[$__loc >> 2] | 0;
  if ((HEAP32[4580] | 0) != -1) {
   HEAP32[$__p_i_i_i77 >> 2] = 18320;
   HEAP32[$__p_i_i_i77 + 4 >> 2] = 12;
   HEAP32[$__p_i_i_i77 + 8 >> 2] = 0;
   __ZNSt3__111__call_onceERVmPvPFvS2_E(18320, $__p_i_i_i77, 102);
  }
  $sub_i_i84 = (HEAP32[4581] | 0) - 1 | 0;
  $48 = HEAP32[$43 + 8 >> 2] | 0;
  if ((HEAP32[$43 + 12 >> 2] | 0) - $48 >> 2 >>> 0 <= $sub_i_i84 >>> 0) {
   $exception_i_i96 = ___cxa_allocate_exception(4) | 0;
   $50 = $exception_i_i96;
   HEAP32[$50 >> 2] = 9184;
   ___cxa_throw($exception_i_i96 | 0, 15328, 208);
  }
  $49 = HEAP32[$48 + ($sub_i_i84 << 2) >> 2] | 0;
  if (($49 | 0) == 0) {
   $exception_i_i96 = ___cxa_allocate_exception(4) | 0;
   $50 = $exception_i_i96;
   HEAP32[$50 >> 2] = 9184;
   ___cxa_throw($exception_i_i96 | 0, 15328, 208);
  }
  $51 = $49;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$49 >> 2] | 0) + 44 >> 2] & 127]($ref_tmp14, $51);
  $54 = $__pat;
  tempBigInt = HEAP32[$ref_tmp14 >> 2] | 0;
  HEAP8[$54] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[$54 + 1 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[$54 + 2 | 0] = tempBigInt & 255;
  tempBigInt = tempBigInt >> 8;
  HEAP8[$54 + 3 | 0] = tempBigInt & 255;
  $56 = $49;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$56 >> 2] | 0) + 32 >> 2] & 127]($ref_tmp15, $51);
  $__size__i46_i_i_i552 = $__nsn;
  if ((HEAP8[$__size__i46_i_i_i552] & 1) == 0) {
   HEAP32[$__nsn + 4 >> 2] = 0;
   HEAP8[$__size__i46_i_i_i552] = 0;
  } else {
   HEAP32[HEAP32[$__nsn + 8 >> 2] >> 2] = 0;
   HEAP32[$__nsn + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn, 0);
  HEAP32[$__size__i46_i_i_i552 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$__size__i46_i_i_i552 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i552 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  _memset($4 | 0, 0, 12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$56 >> 2] | 0) + 28 >> 2] & 127]($ref_tmp17, $51);
  $__size__i46_i_i_i696 = $__psn;
  if ((HEAP8[$__size__i46_i_i_i696] & 1) == 0) {
   HEAP32[$__psn + 4 >> 2] = 0;
   HEAP8[$__size__i46_i_i_i696] = 0;
  } else {
   HEAP32[HEAP32[$__psn + 8 >> 2] >> 2] = 0;
   HEAP32[$__psn + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn, 0);
  HEAP32[$__size__i46_i_i_i696 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$__size__i46_i_i_i696 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i696 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  _memset($5 | 0, 0, 12);
  $65 = $49;
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$65 >> 2] | 0) + 12 >> 2] & 255]($51) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$65 >> 2] | 0) + 16 >> 2] & 255]($51) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$49 >> 2] | 0) + 20 >> 2] & 127]($ref_tmp21, $51);
  $__size__i46_i_i_i850 = $__grp;
  if ((HEAP8[$__size__i46_i_i_i850] & 1) == 0) {
   HEAP8[$__grp + 1 | 0] = 0;
   HEAP8[$__size__i46_i_i_i850] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] | 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp, 0);
  HEAP32[$__size__i46_i_i_i850 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$__size__i46_i_i_i850 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i850 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  _memset($6 | 0, 0, 12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$56 >> 2] | 0) + 24 >> 2] & 127]($ref_tmp23, $51);
  $__size__i46_i_i_i994 = $__sym;
  if ((HEAP8[$__size__i46_i_i_i994] & 1) == 0) {
   HEAP32[$__sym + 4 >> 2] = 0;
   HEAP8[$__size__i46_i_i_i994] = 0;
  } else {
   HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym, 0);
  HEAP32[$__size__i46_i_i_i994 >> 2] = HEAP32[$7 >> 2];
  HEAP32[$__size__i46_i_i_i994 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i994 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  _memset($7 | 0, 0, 12);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$65 >> 2] | 0) + 36 >> 2] & 255]($51) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = __stackBase__;
  return;
 }
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b, $__n, $__e) {
 $__b = $__b | 0;
 $__n = $__n | 0;
 $__e = $__e | 0;
 var $__second__i_i_i = 0, $cmp = 0, $__first__i_i_i56 = 0, $2 = 0, $sub_ptr_rhs_cast = 0, $sub_ptr_sub = 0, $cond = 0, $sub_ptr_div10 = 0, $cond15 = 0, $call16 = 0, $4 = 0, $_pr = 0, $8 = 0;
 $__second__i_i_i = $__b + 4 | 0;
 $cmp = (HEAP32[$__second__i_i_i >> 2] | 0) != 176;
 $__first__i_i_i56 = $__b | 0;
 $2 = HEAP32[$__first__i_i_i56 >> 2] | 0;
 $sub_ptr_rhs_cast = $2;
 $sub_ptr_sub = (HEAP32[$__e >> 2] | 0) - $sub_ptr_rhs_cast | 0;
 $cond = $sub_ptr_sub >>> 0 < 2147483647 ? $sub_ptr_sub << 1 : -1;
 $sub_ptr_div10 = (HEAP32[$__n >> 2] | 0) - $sub_ptr_rhs_cast >> 2;
 if ($cmp) {
  $cond15 = $2;
 } else {
  $cond15 = 0;
 }
 $call16 = _realloc($cond15, $cond) | 0;
 $4 = $call16;
 if (($call16 | 0) == 0) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($cmp) {
   HEAP32[$__first__i_i_i56 >> 2] = $4;
   $8 = $4;
  } else {
   $_pr = HEAP32[$__first__i_i_i56 >> 2] | 0;
   HEAP32[$__first__i_i_i56 >> 2] = $4;
   if (($_pr | 0) == 0) {
    $8 = $4;
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[$__second__i_i_i >> 2] & 511]($_pr);
   $8 = HEAP32[$__first__i_i_i56 >> 2] | 0;
  }
 } while (0);
 HEAP32[$__second__i_i_i >> 2] = 82;
 HEAP32[$__n >> 2] = $8 + ($sub_ptr_div10 << 2);
 HEAP32[$__e >> 2] = (HEAP32[$__first__i_i_i56 >> 2] | 0) + ($cond >>> 2 << 2);
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($agg_result, $this, $__s, $__intl, $__iob, $__fl, $__units) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__units = +$__units;
 var $__p_i_i_i = 0, $__bb = 0, $__loc = 0, $__pat = 0, $__dp = 0, $__ts = 0, $__grp = 0, $__size__i_i_i91 = 0, $__sym = 0, $__size__i_i_i85 = 0, $__sn = 0, $__size__i_i_i79 = 0, $__fd = 0, $__mbuf = 0, $__mi = 0, $__me = 0, $agg_tmp = 0, $arraydecay = 0, $arraydecay2 = 0, $call = 0, $call_i51 = 0, $0 = 0, $call6 = 0, $1 = 0, $exception_i = 0, $call10 = 0, $exception_i52 = 0, $__hd_sroa_0_1 = 0, $__hn_sroa_0_1 = 0, $__n_0 = 0, $__db_0 = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $8 = 0, $10 = 0, $sub_i_i = 0, $15 = 0, $16 = 0, $exception_i_i = 0, $18 = 0, $19 = 0, $add_ptr = 0, $21 = 0, $24 = 0, $arraydecay29 = 0, $25 = 0, $conv_i_i = 0, $cond_i = 0, $conv_i_i353 = 0, $cond_i374 = 0, $conv_i_i425 = 0, $cond_i446 = 0, $conv_i_i466 = 0, $cond_i487 = 0, $add36_pn = 0, $cond = 0, $call46 = 0, $exception_i60 = 0, $__hw_sroa_0_1 = 0, $__mb_0 = 0, $61 = 0, $__shared_owners__i_i = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 280 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i = __stackBase__ | 0;
 $__bb = __stackBase__ + 120 | 0;
 $__loc = __stackBase__ + 232 | 0;
 $__pat = __stackBase__ + 240 | 0;
 $__dp = __stackBase__ + 248 | 0;
 $__ts = __stackBase__ + 256 | 0;
 $__grp = __stackBase__ + 264 | 0;
 $__size__i_i_i91 = $__grp;
 $__sym = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__size__i_i_i85 = $__sym;
 $__sn = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__size__i_i_i79 = $__sn;
 $__fd = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__mbuf = STACKTOP;
 STACKTOP = STACKTOP + 100 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__mi = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__me = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $agg_tmp = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $arraydecay = __stackBase__ + 16 | 0;
 HEAP32[$__bb >> 2] = $arraydecay;
 $arraydecay2 = __stackBase__ + 128 | 0;
 $call = _snprintf($arraydecay | 0, 100, 3464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = $__units, tempInt) | 0) | 0;
 do {
  if ($call >>> 0 > 99) {
   if (HEAP8[18416] | 0) {
    $0 = HEAP32[2044] | 0;
   } else {
    $call_i51 = _newlocale(1, 3128, 0) | 0;
    HEAP32[2044] = $call_i51;
    HEAP8[18416] = 1;
    $0 = $call_i51;
   }
   $call6 = __ZNSt3__112__asprintf_lEPPcPvPKcz($__bb, $0, 3464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = $__units, tempInt) | 0) | 0;
   $1 = HEAP32[$__bb >> 2] | 0;
   if (($1 | 0) == 0) {
    $exception_i = ___cxa_allocate_exception(4) | 0;
    HEAP32[$exception_i >> 2] = 9152;
    ___cxa_throw($exception_i | 0, 15312, 28);
   }
   $call10 = _malloc($call6) | 0;
   if (($call10 | 0) != 0) {
    $__db_0 = $call10;
    $__n_0 = $call6;
    $__hn_sroa_0_1 = $1;
    $__hd_sroa_0_1 = $call10;
    break;
   }
   $exception_i52 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i52 >> 2] = 9152;
   ___cxa_throw($exception_i52 | 0, 15312, 28);
  } else {
   $__db_0 = $arraydecay2;
   $__n_0 = $call;
   $__hn_sroa_0_1 = 0;
   $__hd_sroa_0_1 = 0;
  }
 } while (0);
 $__locale__i_i = $__loc | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $8 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$8 >> 2] | 0, HEAP32[$8 >> 2] = tempValue + 1, tempValue;
 $10 = HEAP32[$__locale__i_i >> 2] | 0;
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17816;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4455] | 0) - 1 | 0;
 $15 = HEAP32[$10 + 8 >> 2] | 0;
 do {
  if ((HEAP32[$10 + 12 >> 2] | 0) - $15 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $16 = HEAP32[$15 + ($sub_i_i << 2) >> 2] | 0;
   if (($16 | 0) == 0) {
    break;
   }
   $18 = $16;
   $19 = HEAP32[$__bb >> 2] | 0;
   $add_ptr = $19 + $__n_0 | 0;
   $21 = HEAP32[(HEAP32[$16 >> 2] | 0) + 32 >> 2] | 0;
   FUNCTION_TABLE_iiiii[$21 & 15]($18, $19, $add_ptr, $__db_0) | 0;
   if (($__n_0 | 0) == 0) {
    $24 = 0;
   } else {
    $24 = (HEAP8[HEAP32[$__bb >> 2] | 0] | 0) == 45;
   }
   _memset($__size__i_i_i91 | 0, 0, 12);
   _memset($__size__i_i_i85 | 0, 0, 12);
   _memset($__size__i_i_i79 | 0, 0, 12);
   __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl, $24, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd);
   $arraydecay29 = $__mbuf | 0;
   $25 = HEAP32[$__fd >> 2] | 0;
   if (($__n_0 | 0) > ($25 | 0)) {
    $conv_i_i = HEAPU8[$__size__i_i_i79] | 0;
    if (($conv_i_i & 1 | 0) == 0) {
     $cond_i = $conv_i_i >>> 1;
    } else {
     $cond_i = HEAP32[$__sn + 4 >> 2] | 0;
    }
    $conv_i_i353 = HEAPU8[$__size__i_i_i85] | 0;
    if (($conv_i_i353 & 1 | 0) == 0) {
     $cond_i374 = $conv_i_i353 >>> 1;
    } else {
     $cond_i374 = HEAP32[$__sym + 4 >> 2] | 0;
    }
    $add36_pn = ($__n_0 - $25 << 1 | 1) + $cond_i + $cond_i374 | 0;
   } else {
    $conv_i_i425 = HEAPU8[$__size__i_i_i79] | 0;
    if (($conv_i_i425 & 1 | 0) == 0) {
     $cond_i446 = $conv_i_i425 >>> 1;
    } else {
     $cond_i446 = HEAP32[$__sn + 4 >> 2] | 0;
    }
    $conv_i_i466 = HEAPU8[$__size__i_i_i85] | 0;
    if (($conv_i_i466 & 1 | 0) == 0) {
     $cond_i487 = $conv_i_i466 >>> 1;
    } else {
     $cond_i487 = HEAP32[$__sym + 4 >> 2] | 0;
    }
    $add36_pn = $cond_i446 + 2 + $cond_i487 | 0;
   }
   $cond = $add36_pn + $25 | 0;
   do {
    if ($cond >>> 0 > 100) {
     $call46 = _malloc($cond) | 0;
     if (($call46 | 0) != 0) {
      $__mb_0 = $call46;
      $__hw_sroa_0_1 = $call46;
      break;
     }
     $exception_i60 = ___cxa_allocate_exception(4) | 0;
     HEAP32[$exception_i60 >> 2] = 9152;
     ___cxa_throw($exception_i60 | 0, 15312, 28);
    } else {
     $__mb_0 = $arraydecay29;
     $__hw_sroa_0_1 = 0;
    }
   } while (0);
   __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb_0, $__mi, $__me, HEAP32[$__iob + 4 >> 2] | 0, $__db_0, $__db_0 + $__n_0 | 0, $18, $24, $__pat, HEAP8[$__dp] | 0, HEAP8[$__ts] | 0, $__grp, $__sym, $__sn, $25);
   HEAP32[$agg_tmp >> 2] = HEAP32[$__s >> 2];
   __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $__mb_0, HEAP32[$__mi >> 2] | 0, HEAP32[$__me >> 2] | 0, $__iob, $__fl);
   if (($__hw_sroa_0_1 | 0) != 0) {
    _free($__hw_sroa_0_1);
   }
   if ((HEAP8[$__size__i_i_i79] & 1) != 0) {
    __ZdlPv(HEAP32[$__sn + 8 >> 2] | 0);
   }
   if ((HEAP8[$__size__i_i_i85] & 1) != 0) {
    __ZdlPv(HEAP32[$__sym + 8 >> 2] | 0);
   }
   if ((HEAP8[$__size__i_i_i91] & 1) != 0) {
    __ZdlPv(HEAP32[$__grp + 8 >> 2] | 0);
   }
   $61 = HEAP32[$__locale__i_i >> 2] | 0;
   $__shared_owners__i_i = $61 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$61 >> 2] | 0) + 8 >> 2] & 511]($61 | 0);
   }
   if (($__hd_sroa_0_1 | 0) != 0) {
    _free($__hd_sroa_0_1);
   }
   if (($__hn_sroa_0_1 | 0) == 0) {
    STACKTOP = __stackBase__;
    return;
   }
   _free($__hn_sroa_0_1);
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl, $__neg, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__intl = $__intl | 0;
 $__neg = $__neg | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $__p_i_i_i82 = 0, $__p_i_i_i = 0, $ref_tmp = 0, $tmpcast59 = 0, $ref_tmp4 = 0, $0 = 0, $ref_tmp6 = 0, $tmpcast58 = 0, $ref_tmp7 = 0, $1 = 0, $ref_tmp11 = 0, $2 = 0, $ref_tmp13 = 0, $3 = 0, $ref_tmp21 = 0, $tmpcast57 = 0, $ref_tmp22 = 0, $4 = 0, $ref_tmp25 = 0, $tmpcast = 0, $ref_tmp26 = 0, $5 = 0, $ref_tmp31 = 0, $6 = 0, $ref_tmp33 = 0, $7 = 0, $8 = 0, $sub_i_i = 0, $13 = 0, $14 = 0, $exception_i_i = 0, $15 = 0, $16 = 0, $vtable_i = 0, $19 = 0, $__size__i46_i_i_i = 0, $27 = 0, $__size__i46_i_i_i117 = 0, $34 = 0, $37 = 0, $__size__i46_i_i_i271 = 0, $__size__i46_i_i_i415 = 0, $sub_i_i89 = 0, $52 = 0, $53 = 0, $exception_i_i101 = 0, $54 = 0, $55 = 0, $vtable_i498 = 0, $58 = 0, $__size__i46_i_i_i570 = 0, $66 = 0, $__size__i46_i_i_i718 = 0, $73 = 0, $76 = 0, $__size__i46_i_i_i872 = 0, $__size__i46_i_i_i1016 = 0, $storemerge = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 $__p_i_i_i82 = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 16 | 0;
 $ref_tmp = __stackBase__ + 32 | 0;
 $tmpcast59 = $ref_tmp;
 $ref_tmp4 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $0 = $ref_tmp4;
 $ref_tmp6 = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $tmpcast58 = $ref_tmp6;
 $ref_tmp7 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $1 = $ref_tmp7;
 $ref_tmp11 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $2 = $ref_tmp11;
 $ref_tmp13 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $3 = $ref_tmp13;
 $ref_tmp21 = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $tmpcast57 = $ref_tmp21;
 $ref_tmp22 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $4 = $ref_tmp22;
 $ref_tmp25 = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $tmpcast = $ref_tmp25;
 $ref_tmp26 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $5 = $ref_tmp26;
 $ref_tmp31 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $6 = $ref_tmp31;
 $ref_tmp33 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $7 = $ref_tmp33;
 $8 = HEAP32[$__loc >> 2] | 0;
 if ($__intl) {
  if ((HEAP32[4582] | 0) != -1) {
   HEAP32[$__p_i_i_i >> 2] = 18328;
   HEAP32[$__p_i_i_i + 4 >> 2] = 12;
   HEAP32[$__p_i_i_i + 8 >> 2] = 0;
   __ZNSt3__111__call_onceERVmPvPFvS2_E(18328, $__p_i_i_i, 102);
  }
  $sub_i_i = (HEAP32[4583] | 0) - 1 | 0;
  $13 = HEAP32[$8 + 8 >> 2] | 0;
  if ((HEAP32[$8 + 12 >> 2] | 0) - $13 >> 2 >>> 0 <= $sub_i_i >>> 0) {
   $exception_i_i = ___cxa_allocate_exception(4) | 0;
   $15 = $exception_i_i;
   HEAP32[$15 >> 2] = 9184;
   ___cxa_throw($exception_i_i | 0, 15328, 208);
  }
  $14 = HEAP32[$13 + ($sub_i_i << 2) >> 2] | 0;
  if (($14 | 0) == 0) {
   $exception_i_i = ___cxa_allocate_exception(4) | 0;
   $15 = $exception_i_i;
   HEAP32[$15 >> 2] = 9184;
   ___cxa_throw($exception_i_i | 0, 15328, 208);
  }
  $16 = $14;
  $vtable_i = HEAP32[$14 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$vtable_i + 44 >> 2] & 127]($tmpcast59, $16);
   $19 = $__pat;
   tempBigInt = HEAP32[$ref_tmp >> 2] | 0;
   HEAP8[$19] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$19 + 1 | 0] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$19 + 2 | 0] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$19 + 3 | 0] = tempBigInt & 255;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$14 >> 2] | 0) + 32 >> 2] & 127]($ref_tmp4, $16);
   $__size__i46_i_i_i = $__sn;
   if ((HEAP8[$__size__i46_i_i_i] & 1) == 0) {
    HEAP8[$__sn + 1 | 0] = 0;
    HEAP8[$__size__i46_i_i_i] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] | 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn, 0);
   HEAP32[$__size__i46_i_i_i >> 2] = HEAP32[$0 >> 2];
   HEAP32[$__size__i46_i_i_i + 4 >> 2] = HEAP32[$0 + 4 >> 2];
   HEAP32[$__size__i46_i_i_i + 8 >> 2] = HEAP32[$0 + 8 >> 2];
   _memset($0 | 0, 0, 12);
  } else {
   FUNCTION_TABLE_vii[HEAP32[$vtable_i + 40 >> 2] & 127]($tmpcast58, $16);
   $27 = $__pat;
   tempBigInt = HEAP32[$ref_tmp6 >> 2] | 0;
   HEAP8[$27] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$27 + 1 | 0] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$27 + 2 | 0] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$27 + 3 | 0] = tempBigInt & 255;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$14 >> 2] | 0) + 28 >> 2] & 127]($ref_tmp7, $16);
   $__size__i46_i_i_i117 = $__sn;
   if ((HEAP8[$__size__i46_i_i_i117] & 1) == 0) {
    HEAP8[$__sn + 1 | 0] = 0;
    HEAP8[$__size__i46_i_i_i117] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] | 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn, 0);
   HEAP32[$__size__i46_i_i_i117 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$__size__i46_i_i_i117 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   HEAP32[$__size__i46_i_i_i117 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
   _memset($1 | 0, 0, 12);
  }
  $34 = $14;
  HEAP8[$__dp] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$34 >> 2] | 0) + 12 >> 2] & 255]($16) | 0;
  HEAP8[$__ts] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$34 >> 2] | 0) + 16 >> 2] & 255]($16) | 0;
  $37 = $14;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$37 >> 2] | 0) + 20 >> 2] & 127]($ref_tmp11, $16);
  $__size__i46_i_i_i271 = $__grp;
  if ((HEAP8[$__size__i46_i_i_i271] & 1) == 0) {
   HEAP8[$__grp + 1 | 0] = 0;
   HEAP8[$__size__i46_i_i_i271] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] | 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp, 0);
  HEAP32[$__size__i46_i_i_i271 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$__size__i46_i_i_i271 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i271 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  _memset($2 | 0, 0, 12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$37 >> 2] | 0) + 24 >> 2] & 127]($ref_tmp13, $16);
  $__size__i46_i_i_i415 = $__sym;
  if ((HEAP8[$__size__i46_i_i_i415] & 1) == 0) {
   HEAP8[$__sym + 1 | 0] = 0;
   HEAP8[$__size__i46_i_i_i415] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] | 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym, 0);
  HEAP32[$__size__i46_i_i_i415 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$__size__i46_i_i_i415 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i415 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  _memset($3 | 0, 0, 12);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 255]($16) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = __stackBase__;
  return;
 } else {
  if ((HEAP32[4584] | 0) != -1) {
   HEAP32[$__p_i_i_i82 >> 2] = 18336;
   HEAP32[$__p_i_i_i82 + 4 >> 2] = 12;
   HEAP32[$__p_i_i_i82 + 8 >> 2] = 0;
   __ZNSt3__111__call_onceERVmPvPFvS2_E(18336, $__p_i_i_i82, 102);
  }
  $sub_i_i89 = (HEAP32[4585] | 0) - 1 | 0;
  $52 = HEAP32[$8 + 8 >> 2] | 0;
  if ((HEAP32[$8 + 12 >> 2] | 0) - $52 >> 2 >>> 0 <= $sub_i_i89 >>> 0) {
   $exception_i_i101 = ___cxa_allocate_exception(4) | 0;
   $54 = $exception_i_i101;
   HEAP32[$54 >> 2] = 9184;
   ___cxa_throw($exception_i_i101 | 0, 15328, 208);
  }
  $53 = HEAP32[$52 + ($sub_i_i89 << 2) >> 2] | 0;
  if (($53 | 0) == 0) {
   $exception_i_i101 = ___cxa_allocate_exception(4) | 0;
   $54 = $exception_i_i101;
   HEAP32[$54 >> 2] = 9184;
   ___cxa_throw($exception_i_i101 | 0, 15328, 208);
  }
  $55 = $53;
  $vtable_i498 = HEAP32[$53 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$vtable_i498 + 44 >> 2] & 127]($tmpcast57, $55);
   $58 = $__pat;
   tempBigInt = HEAP32[$ref_tmp21 >> 2] | 0;
   HEAP8[$58] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$58 + 1 | 0] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$58 + 2 | 0] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$58 + 3 | 0] = tempBigInt & 255;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$53 >> 2] | 0) + 32 >> 2] & 127]($ref_tmp22, $55);
   $__size__i46_i_i_i570 = $__sn;
   if ((HEAP8[$__size__i46_i_i_i570] & 1) == 0) {
    HEAP8[$__sn + 1 | 0] = 0;
    HEAP8[$__size__i46_i_i_i570] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] | 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn, 0);
   HEAP32[$__size__i46_i_i_i570 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$__size__i46_i_i_i570 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   HEAP32[$__size__i46_i_i_i570 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
   _memset($4 | 0, 0, 12);
  } else {
   FUNCTION_TABLE_vii[HEAP32[$vtable_i498 + 40 >> 2] & 127]($tmpcast, $55);
   $66 = $__pat;
   tempBigInt = HEAP32[$ref_tmp25 >> 2] | 0;
   HEAP8[$66] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$66 + 1 | 0] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$66 + 2 | 0] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$66 + 3 | 0] = tempBigInt & 255;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$53 >> 2] | 0) + 28 >> 2] & 127]($ref_tmp26, $55);
   $__size__i46_i_i_i718 = $__sn;
   if ((HEAP8[$__size__i46_i_i_i718] & 1) == 0) {
    HEAP8[$__sn + 1 | 0] = 0;
    HEAP8[$__size__i46_i_i_i718] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] | 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn, 0);
   HEAP32[$__size__i46_i_i_i718 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$__size__i46_i_i_i718 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   HEAP32[$__size__i46_i_i_i718 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
   _memset($5 | 0, 0, 12);
  }
  $73 = $53;
  HEAP8[$__dp] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 12 >> 2] & 255]($55) | 0;
  HEAP8[$__ts] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 16 >> 2] & 255]($55) | 0;
  $76 = $53;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$76 >> 2] | 0) + 20 >> 2] & 127]($ref_tmp31, $55);
  $__size__i46_i_i_i872 = $__grp;
  if ((HEAP8[$__size__i46_i_i_i872] & 1) == 0) {
   HEAP8[$__grp + 1 | 0] = 0;
   HEAP8[$__size__i46_i_i_i872] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] | 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp, 0);
  HEAP32[$__size__i46_i_i_i872 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$__size__i46_i_i_i872 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i872 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  _memset($6 | 0, 0, 12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$76 >> 2] | 0) + 24 >> 2] & 127]($ref_tmp33, $55);
  $__size__i46_i_i_i1016 = $__sym;
  if ((HEAP8[$__size__i46_i_i_i1016] & 1) == 0) {
   HEAP8[$__sym + 1 | 0] = 0;
   HEAP8[$__size__i46_i_i_i1016] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] | 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym, 0);
  HEAP32[$__size__i46_i_i_i1016 >> 2] = HEAP32[$7 >> 2];
  HEAP32[$__size__i46_i_i_i1016 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i1016 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  _memset($7 | 0, 0, 12);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$53 >> 2] | 0) + 36 >> 2] & 255]($55) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = __stackBase__;
  return;
 }
}
function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb, $__mi, $__me, $__flags, $__db, $__de, $__ct, $__neg, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__mb = $__mb | 0;
 $__mi = $__mi | 0;
 $__me = $__me | 0;
 $__flags = $__flags | 0;
 $__db = $__db | 0;
 $__de = $__de | 0;
 $__ct = $__ct | 0;
 $__neg = $__neg | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $__size__i_i_i = 0, $arraydecay_i_i_i_i495 = 0, $__data__i21_i_i_i486 = 0, $__size__i23_i_i = 0, $__size__i_i_i526 = 0, $tobool = 0, $arraydecay_i_i_i_i743 = 0, $__size__i23_i_i681 = 0, $__data__i21_i_i_i651 = 0, $__tab__i = 0, $cmp24 = 0, $__size__i_i_i423 = 0, $arraydecay_i_i_i_i398 = 0, $__data__i21_i_i_i389 = 0, $__size__i23_i343 = 0, $1 = 0, $__p_0122 = 0, $__db_addr_0121 = 0, $conv = 0, $call_i = 0, $6 = 0, $7 = 0, $conv_i_i_i = 0, $cond_i_i = 0, $cond_i_i_i497 = 0, $10 = 0, $11 = 0, $12 = 0, $conv_i_i_i527 = 0, $tobool_i_i_i529 = 0, $cond_i_i548 = 0, $14 = 0, $cond_i_i_i745138 = 0, $cond_i_i_i662 = 0, $cond_i_i693 = 0, $add_ptr_i694 = 0, $16 = 0, $__result_addr_i_i574_0119 = 0, $agg_tmp7_i576_sroa_0_0118 = 0, $incdec_ptr_i_i_i602 = 0, $incdec_ptr_i_i603 = 0, $__result_addr_i_i574_0_lcssa = 0, $18 = 0, $incdec_ptr15___db_addr_0 = 0, $__d_0 = 0, $19 = 0, $__d_0_lcssa127 = 0, $scevgep128 = 0, $umax = 0, $scevgep130131 = 0, $24 = 0, $__f_0100 = 0, $__d_199 = 0, $incdec_ptr30 = 0, $25 = 0, $dec = 0, $cmp28 = 0, $scevgep132 = 0, $__d_1_lcssa143 = 0, $__f_0_lcssa141 = 0, $__d_1_lcssa142 = 0, $__f_0_lcssa140 = 0, $cond = 0, $27 = 0, $28 = 0, $__f_1106 = 0, $dec41 = 0, $29 = 0, $_lcssa = 0, $__d_2 = 0, $call_i453 = 0, $31 = 0, $32 = 0, $conv_i_i_i424 = 0, $cond_i_i445 = 0, $cond_i_i_i400 = 0, $__gl_0112 = 0, $__ig_0111 = 0, $__ng_0110 = 0, $__d_3109 = 0, $36 = 0, $inc = 0, $37 = 0, $conv_i_i334 = 0, $cond_i355 = 0, $tobool_i_i_i_i294 = 0, $cond_i_i_i312 = 0, $cond_i_i_i266 = 0, $__ng_1 = 0, $__ig_1 = 0, $__gl_1 = 0, $incdec_ptr78 = 0, $43 = 0, $44 = 0, $45 = 0, $incdec_ptr_i_i221113 = 0, $incdec_ptr_i_i221116 = 0, $__first_addr_i_i_0115 = 0, $46 = 0, $incdec_ptr2_i_i = 0, $incdec_ptr_i_i221 = 0, $__db_addr_2 = 0, $inc83 = 0, $48 = 0, $conv_i_i = 0, $tobool_i_i = 0, $cond_i = 0, $50 = 0, $cond_i_i_i205144 = 0, $cond_i_i_i = 0, $cond_i_i155 = 0, $add_ptr_i = 0, $52 = 0, $agg_tmp7_i_sroa_0_092 = 0, $agg_tmp7_i_sroa_0_095 = 0, $__result_addr_i_i_094 = 0, $incdec_ptr_i_i = 0, $agg_tmp7_i_sroa_0_0 = 0, $__result_addr_i_i_0_lcssa = 0, $and92 = 0, label = 0;
 HEAP32[$__me >> 2] = $__mb;
 $0 = $__ct;
 $__size__i_i_i = $__sn;
 $arraydecay_i_i_i_i495 = $__sn + 1 | 0;
 $__data__i21_i_i_i486 = $__sn + 8 | 0;
 $__size__i23_i_i = $__sn + 4 | 0;
 $__size__i_i_i526 = $__sym;
 $tobool = ($__flags & 512 | 0) == 0;
 $arraydecay_i_i_i_i743 = $__sym + 1 | 0;
 $__size__i23_i_i681 = $__sym + 4 | 0;
 $__data__i21_i_i_i651 = $__sym + 8 | 0;
 $__tab__i = $__ct + 8 | 0;
 $cmp24 = ($__fd | 0) > 0;
 $__size__i_i_i423 = $__grp;
 $arraydecay_i_i_i_i398 = $__grp + 1 | 0;
 $__data__i21_i_i_i389 = $__grp + 8 | 0;
 $__size__i23_i343 = $__grp + 4 | 0;
 $1 = -$__fd | 0;
 $__db_addr_0121 = $__db;
 $__p_0122 = 0;
 while (1) {
  $conv = HEAP8[$__pat + $__p_0122 | 0] | 0;
  do {
   if (($conv | 0) == 3) {
    $7 = HEAP8[$__size__i_i_i] | 0;
    $conv_i_i_i = $7 & 255;
    if (($conv_i_i_i & 1 | 0) == 0) {
     $cond_i_i = $conv_i_i_i >>> 1;
    } else {
     $cond_i_i = HEAP32[$__size__i23_i_i >> 2] | 0;
    }
    if (($cond_i_i | 0) == 0) {
     $__db_addr_2 = $__db_addr_0121;
     break;
    }
    if (($7 & 1) == 0) {
     $cond_i_i_i497 = $arraydecay_i_i_i_i495;
    } else {
     $cond_i_i_i497 = HEAP32[$__data__i21_i_i_i486 >> 2] | 0;
    }
    $10 = HEAP8[$cond_i_i_i497] | 0;
    $11 = HEAP32[$__me >> 2] | 0;
    HEAP32[$__me >> 2] = $11 + 1;
    HEAP8[$11] = $10;
    $__db_addr_2 = $__db_addr_0121;
   } else if (($conv | 0) == 4) {
    $18 = HEAP32[$__me >> 2] | 0;
    $incdec_ptr15___db_addr_0 = $__neg ? $__db_addr_0121 + 1 | 0 : $__db_addr_0121;
    $__d_0 = $incdec_ptr15___db_addr_0;
    while (1) {
     if ($__d_0 >>> 0 >= $__de >>> 0) {
      break;
     }
     $19 = HEAP8[$__d_0] | 0;
     if ($19 << 24 >> 24 <= -1) {
      break;
     }
     if ((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($19 << 24 >> 24 << 1) >> 1] & 2048) == 0) {
      break;
     } else {
      $__d_0 = $__d_0 + 1 | 0;
     }
    }
    $__d_0_lcssa127 = $__d_0;
    if ($cmp24) {
     if ($__d_0 >>> 0 > $incdec_ptr15___db_addr_0 >>> 0) {
      $scevgep128 = $incdec_ptr15___db_addr_0 + (-$__d_0_lcssa127 | 0) | 0;
      $umax = $scevgep128 >>> 0 < $1 >>> 0 ? $1 : $scevgep128;
      $scevgep130131 = $umax + $__fd | 0;
      $__d_199 = $__d_0;
      $__f_0100 = $__fd;
      $24 = $18;
      while (1) {
       $incdec_ptr30 = $__d_199 - 1 | 0;
       $25 = HEAP8[$incdec_ptr30] | 0;
       HEAP32[$__me >> 2] = $24 + 1;
       HEAP8[$24] = $25;
       $dec = $__f_0100 - 1 | 0;
       $cmp28 = ($dec | 0) > 0;
       if (!($incdec_ptr30 >>> 0 > $incdec_ptr15___db_addr_0 >>> 0 & $cmp28)) {
        break;
       }
       $__d_199 = $incdec_ptr30;
       $__f_0100 = $dec;
       $24 = HEAP32[$__me >> 2] | 0;
      }
      $scevgep132 = $__d_0 + $umax | 0;
      if ($cmp28) {
       $__f_0_lcssa141 = $scevgep130131;
       $__d_1_lcssa143 = $scevgep132;
       label = 13576;
      } else {
       $cond = 0;
       $__f_0_lcssa140 = $scevgep130131;
       $__d_1_lcssa142 = $scevgep132;
      }
     } else {
      $__f_0_lcssa141 = $__fd;
      $__d_1_lcssa143 = $__d_0;
      label = 13576;
     }
     if ((label | 0) == 13576) {
      label = 0;
      $cond = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] & 63]($__ct, 48) | 0;
      $__f_0_lcssa140 = $__f_0_lcssa141;
      $__d_1_lcssa142 = $__d_1_lcssa143;
     }
     $27 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $27 + 1;
     if (($__f_0_lcssa140 | 0) > 0) {
      $__f_1106 = $__f_0_lcssa140;
      $28 = $27;
      while (1) {
       HEAP8[$28] = $cond;
       $dec41 = $__f_1106 - 1 | 0;
       $29 = HEAP32[$__me >> 2] | 0;
       HEAP32[$__me >> 2] = $29 + 1;
       if (($dec41 | 0) > 0) {
        $__f_1106 = $dec41;
        $28 = $29;
       } else {
        $_lcssa = $29;
        break;
       }
      }
     } else {
      $_lcssa = $27;
     }
     HEAP8[$_lcssa] = $__dp;
     $__d_2 = $__d_1_lcssa142;
    } else {
     $__d_2 = $__d_0;
    }
    if (($__d_2 | 0) == ($incdec_ptr15___db_addr_0 | 0)) {
     $call_i453 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] & 63]($__ct, 48) | 0;
     $31 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $31 + 1;
     HEAP8[$31] = $call_i453;
    } else {
     $32 = HEAP8[$__size__i_i_i423] | 0;
     $conv_i_i_i424 = $32 & 255;
     if (($conv_i_i_i424 & 1 | 0) == 0) {
      $cond_i_i445 = $conv_i_i_i424 >>> 1;
     } else {
      $cond_i_i445 = HEAP32[$__size__i23_i343 >> 2] | 0;
     }
     if (($cond_i_i445 | 0) == 0) {
      $__d_3109 = $__d_2;
      $__ng_0110 = 0;
      $__ig_0111 = 0;
      $__gl_0112 = -1;
     } else {
      if (($32 & 1) == 0) {
       $cond_i_i_i400 = $arraydecay_i_i_i_i398;
      } else {
       $cond_i_i_i400 = HEAP32[$__data__i21_i_i_i389 >> 2] | 0;
      }
      $__d_3109 = $__d_2;
      $__ng_0110 = 0;
      $__ig_0111 = 0;
      $__gl_0112 = HEAP8[$cond_i_i_i400] | 0;
     }
     while (1) {
      do {
       if (($__ng_0110 | 0) == ($__gl_0112 | 0)) {
        $36 = HEAP32[$__me >> 2] | 0;
        HEAP32[$__me >> 2] = $36 + 1;
        HEAP8[$36] = $__ts;
        $inc = $__ig_0111 + 1 | 0;
        $37 = HEAP8[$__size__i_i_i423] | 0;
        $conv_i_i334 = $37 & 255;
        if (($conv_i_i334 & 1 | 0) == 0) {
         $cond_i355 = $conv_i_i334 >>> 1;
        } else {
         $cond_i355 = HEAP32[$__size__i23_i343 >> 2] | 0;
        }
        if ($inc >>> 0 >= $cond_i355 >>> 0) {
         $__gl_1 = $__gl_0112;
         $__ig_1 = $inc;
         $__ng_1 = 0;
         break;
        }
        $tobool_i_i_i_i294 = ($37 & 1) == 0;
        if ($tobool_i_i_i_i294) {
         $cond_i_i_i312 = $arraydecay_i_i_i_i398;
        } else {
         $cond_i_i_i312 = HEAP32[$__data__i21_i_i_i389 >> 2] | 0;
        }
        if ((HEAP8[$cond_i_i_i312 + $inc | 0] | 0) == 127) {
         $__gl_1 = -1;
         $__ig_1 = $inc;
         $__ng_1 = 0;
         break;
        }
        if ($tobool_i_i_i_i294) {
         $cond_i_i_i266 = $arraydecay_i_i_i_i398;
        } else {
         $cond_i_i_i266 = HEAP32[$__data__i21_i_i_i389 >> 2] | 0;
        }
        $__gl_1 = HEAP8[$cond_i_i_i266 + $inc | 0] | 0;
        $__ig_1 = $inc;
        $__ng_1 = 0;
       } else {
        $__gl_1 = $__gl_0112;
        $__ig_1 = $__ig_0111;
        $__ng_1 = $__ng_0110;
       }
      } while (0);
      $incdec_ptr78 = $__d_3109 - 1 | 0;
      $43 = HEAP8[$incdec_ptr78] | 0;
      $44 = HEAP32[$__me >> 2] | 0;
      HEAP32[$__me >> 2] = $44 + 1;
      HEAP8[$44] = $43;
      if (($incdec_ptr78 | 0) == ($incdec_ptr15___db_addr_0 | 0)) {
       break;
      } else {
       $__d_3109 = $incdec_ptr78;
       $__ng_0110 = $__ng_1 + 1 | 0;
       $__ig_0111 = $__ig_1;
       $__gl_0112 = $__gl_1;
      }
     }
    }
    $45 = HEAP32[$__me >> 2] | 0;
    if (($18 | 0) == ($45 | 0)) {
     $__db_addr_2 = $incdec_ptr15___db_addr_0;
     break;
    }
    $incdec_ptr_i_i221113 = $45 - 1 | 0;
    if ($18 >>> 0 < $incdec_ptr_i_i221113 >>> 0) {
     $__first_addr_i_i_0115 = $18;
     $incdec_ptr_i_i221116 = $incdec_ptr_i_i221113;
    } else {
     $__db_addr_2 = $incdec_ptr15___db_addr_0;
     break;
    }
    while (1) {
     $46 = HEAP8[$__first_addr_i_i_0115] | 0;
     HEAP8[$__first_addr_i_i_0115] = HEAP8[$incdec_ptr_i_i221116] | 0;
     HEAP8[$incdec_ptr_i_i221116] = $46;
     $incdec_ptr2_i_i = $__first_addr_i_i_0115 + 1 | 0;
     $incdec_ptr_i_i221 = $incdec_ptr_i_i221116 - 1 | 0;
     if ($incdec_ptr2_i_i >>> 0 < $incdec_ptr_i_i221 >>> 0) {
      $__first_addr_i_i_0115 = $incdec_ptr2_i_i;
      $incdec_ptr_i_i221116 = $incdec_ptr_i_i221;
     } else {
      $__db_addr_2 = $incdec_ptr15___db_addr_0;
      break;
     }
    }
   } else if (($conv | 0) == 1) {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $call_i = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] & 63]($__ct, 32) | 0;
    $6 = HEAP32[$__me >> 2] | 0;
    HEAP32[$__me >> 2] = $6 + 1;
    HEAP8[$6] = $call_i;
    $__db_addr_2 = $__db_addr_0121;
   } else if (($conv | 0) == 0) {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $__db_addr_2 = $__db_addr_0121;
   } else if (($conv | 0) == 2) {
    $12 = HEAP8[$__size__i_i_i526] | 0;
    $conv_i_i_i527 = $12 & 255;
    $tobool_i_i_i529 = ($conv_i_i_i527 & 1 | 0) == 0;
    if ($tobool_i_i_i529) {
     $cond_i_i548 = $conv_i_i_i527 >>> 1;
    } else {
     $cond_i_i548 = HEAP32[$__size__i23_i_i681 >> 2] | 0;
    }
    if (($cond_i_i548 | 0) == 0 | $tobool) {
     $__db_addr_2 = $__db_addr_0121;
     break;
    }
    if (($12 & 1) == 0) {
     $cond_i_i_i662 = $arraydecay_i_i_i_i743;
     $cond_i_i_i745138 = $arraydecay_i_i_i_i743;
    } else {
     $14 = HEAP32[$__data__i21_i_i_i651 >> 2] | 0;
     $cond_i_i_i662 = $14;
     $cond_i_i_i745138 = $14;
    }
    if ($tobool_i_i_i529) {
     $cond_i_i693 = $conv_i_i_i527 >>> 1;
    } else {
     $cond_i_i693 = HEAP32[$__size__i23_i_i681 >> 2] | 0;
    }
    $add_ptr_i694 = $cond_i_i_i662 + $cond_i_i693 | 0;
    $16 = HEAP32[$__me >> 2] | 0;
    if (($cond_i_i_i745138 | 0) == ($add_ptr_i694 | 0)) {
     $__result_addr_i_i574_0_lcssa = $16;
    } else {
     $agg_tmp7_i576_sroa_0_0118 = $cond_i_i_i745138;
     $__result_addr_i_i574_0119 = $16;
     while (1) {
      HEAP8[$__result_addr_i_i574_0119] = HEAP8[$agg_tmp7_i576_sroa_0_0118] | 0;
      $incdec_ptr_i_i_i602 = $agg_tmp7_i576_sroa_0_0118 + 1 | 0;
      $incdec_ptr_i_i603 = $__result_addr_i_i574_0119 + 1 | 0;
      if (($incdec_ptr_i_i_i602 | 0) == ($add_ptr_i694 | 0)) {
       $__result_addr_i_i574_0_lcssa = $incdec_ptr_i_i603;
       break;
      } else {
       $agg_tmp7_i576_sroa_0_0118 = $incdec_ptr_i_i_i602;
       $__result_addr_i_i574_0119 = $incdec_ptr_i_i603;
      }
     }
    }
    HEAP32[$__me >> 2] = $__result_addr_i_i574_0_lcssa;
    $__db_addr_2 = $__db_addr_0121;
   } else {
    $__db_addr_2 = $__db_addr_0121;
   }
  } while (0);
  $inc83 = $__p_0122 + 1 | 0;
  if ($inc83 >>> 0 < 4) {
   $__db_addr_0121 = $__db_addr_2;
   $__p_0122 = $inc83;
  } else {
   break;
  }
 }
 $48 = HEAP8[$__size__i_i_i] | 0;
 $conv_i_i = $48 & 255;
 $tobool_i_i = ($conv_i_i & 1 | 0) == 0;
 if ($tobool_i_i) {
  $cond_i = $conv_i_i >>> 1;
 } else {
  $cond_i = HEAP32[$__size__i23_i_i >> 2] | 0;
 }
 if ($cond_i >>> 0 > 1) {
  if (($48 & 1) == 0) {
   $cond_i_i_i = $arraydecay_i_i_i_i495;
   $cond_i_i_i205144 = $arraydecay_i_i_i_i495;
  } else {
   $50 = HEAP32[$__data__i21_i_i_i486 >> 2] | 0;
   $cond_i_i_i = $50;
   $cond_i_i_i205144 = $50;
  }
  if ($tobool_i_i) {
   $cond_i_i155 = $conv_i_i >>> 1;
  } else {
   $cond_i_i155 = HEAP32[$__size__i23_i_i >> 2] | 0;
  }
  $add_ptr_i = $cond_i_i_i + $cond_i_i155 | 0;
  $52 = HEAP32[$__me >> 2] | 0;
  $agg_tmp7_i_sroa_0_092 = $cond_i_i_i205144 + 1 | 0;
  if (($agg_tmp7_i_sroa_0_092 | 0) == ($add_ptr_i | 0)) {
   $__result_addr_i_i_0_lcssa = $52;
  } else {
   $__result_addr_i_i_094 = $52;
   $agg_tmp7_i_sroa_0_095 = $agg_tmp7_i_sroa_0_092;
   while (1) {
    HEAP8[$__result_addr_i_i_094] = HEAP8[$agg_tmp7_i_sroa_0_095] | 0;
    $incdec_ptr_i_i = $__result_addr_i_i_094 + 1 | 0;
    $agg_tmp7_i_sroa_0_0 = $agg_tmp7_i_sroa_0_095 + 1 | 0;
    if (($agg_tmp7_i_sroa_0_0 | 0) == ($add_ptr_i | 0)) {
     $__result_addr_i_i_0_lcssa = $incdec_ptr_i_i;
     break;
    } else {
     $__result_addr_i_i_094 = $incdec_ptr_i_i;
     $agg_tmp7_i_sroa_0_095 = $agg_tmp7_i_sroa_0_0;
    }
   }
  }
  HEAP32[$__me >> 2] = $__result_addr_i_i_0_lcssa;
 }
 $and92 = $__flags & 176;
 if (($and92 | 0) == 32) {
  HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
  return;
 } else if (($and92 | 0) == 16) {
  return;
 } else {
  HEAP32[$__mi >> 2] = $__mb;
  return;
 }
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg_result, $this, $__s, $__intl, $__iob, $__fl, $__digits) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__digits = $__digits | 0;
 var $__p_i_i_i = 0, $__loc = 0, $__pat = 0, $__dp = 0, $__ts = 0, $__grp = 0, $__size__i_i_i77 = 0, $__sym = 0, $__size__i_i_i71 = 0, $__sn = 0, $__size__i_i_i65 = 0, $__fd = 0, $__mbuf = 0, $__mi = 0, $__me = 0, $agg_tmp = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $1 = 0, $3 = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $11 = 0, $__s_i_i = 0, $__size__i_i = 0, $12 = 0, $conv_i_i = 0, $cond_i = 0, $cond_i_i_i = 0, $15 = 0, $18 = 0, $arraydecay = 0, $19 = 0, $conv_i_i178 = 0, $tobool_i_i180 = 0, $cond_i199 = 0, $21 = 0, $cond_i369 = 0, $conv_i_i389 = 0, $cond_i410 = 0, $conv_i_i446 = 0, $cond_i467 = 0, $conv_i_i487 = 0, $cond_i508 = 0, $conv_i_i528 = 0, $cond_i549 = 0, $add19_pn = 0, $cond = 0, $call28 = 0, $exception_i = 0, $44 = 0, $__h_sroa_0_1 = 0, $__mb_0 = 0, $46 = 0, $cond_i_i29588 = 0, $cond_i_i = 0, $conv_i_i219 = 0, $cond_i240 = 0, $61 = 0, $__shared_owners__i_i59 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i = __stackBase__ | 0;
 $__loc = __stackBase__ + 16 | 0;
 $__pat = __stackBase__ + 24 | 0;
 $__dp = __stackBase__ + 32 | 0;
 $__ts = __stackBase__ + 40 | 0;
 $__grp = __stackBase__ + 48 | 0;
 $__size__i_i_i77 = $__grp;
 $__sym = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__size__i_i_i71 = $__sym;
 $__sn = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__size__i_i_i65 = $__sn;
 $__fd = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__mbuf = STACKTOP;
 STACKTOP = STACKTOP + 100 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__mi = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__me = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $agg_tmp = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__locale__i_i = $__loc | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $1 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + 1, tempValue;
 $3 = HEAP32[$__locale__i_i >> 2] | 0;
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17816;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4455] | 0) - 1 | 0;
 $8 = HEAP32[$3 + 8 >> 2] | 0;
 do {
  if ((HEAP32[$3 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   $11 = $9;
   $__s_i_i = $__digits;
   $__size__i_i = $__digits;
   $12 = HEAP8[$__size__i_i] | 0;
   $conv_i_i = $12 & 255;
   if (($conv_i_i & 1 | 0) == 0) {
    $cond_i = $conv_i_i >>> 1;
   } else {
    $cond_i = HEAP32[$__digits + 4 >> 2] | 0;
   }
   if (($cond_i | 0) == 0) {
    $18 = 0;
   } else {
    if (($12 & 1) == 0) {
     $cond_i_i_i = $__s_i_i + 1 | 0;
    } else {
     $cond_i_i_i = HEAP32[$__digits + 8 >> 2] | 0;
    }
    $15 = HEAP8[$cond_i_i_i] | 0;
    $18 = $15 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$9 >> 2] | 0) + 28 >> 2] & 63]($11, 45) | 0) << 24 >> 24;
   }
   _memset($__size__i_i_i77 | 0, 0, 12);
   _memset($__size__i_i_i71 | 0, 0, 12);
   _memset($__size__i_i_i65 | 0, 0, 12);
   __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl, $18, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd);
   $arraydecay = $__mbuf | 0;
   $19 = HEAP8[$__size__i_i] | 0;
   $conv_i_i178 = $19 & 255;
   $tobool_i_i180 = ($conv_i_i178 & 1 | 0) == 0;
   if ($tobool_i_i180) {
    $cond_i199 = $conv_i_i178 >>> 1;
   } else {
    $cond_i199 = HEAP32[$__digits + 4 >> 2] | 0;
   }
   $21 = HEAP32[$__fd >> 2] | 0;
   if (($cond_i199 | 0) > ($21 | 0)) {
    if ($tobool_i_i180) {
     $cond_i369 = $conv_i_i178 >>> 1;
    } else {
     $cond_i369 = HEAP32[$__digits + 4 >> 2] | 0;
    }
    $conv_i_i389 = HEAPU8[$__size__i_i_i65] | 0;
    if (($conv_i_i389 & 1 | 0) == 0) {
     $cond_i410 = $conv_i_i389 >>> 1;
    } else {
     $cond_i410 = HEAP32[$__sn + 4 >> 2] | 0;
    }
    $conv_i_i446 = HEAPU8[$__size__i_i_i71] | 0;
    if (($conv_i_i446 & 1 | 0) == 0) {
     $cond_i467 = $conv_i_i446 >>> 1;
    } else {
     $cond_i467 = HEAP32[$__sym + 4 >> 2] | 0;
    }
    $add19_pn = ($cond_i369 - $21 << 1 | 1) + $cond_i410 + $cond_i467 | 0;
   } else {
    $conv_i_i487 = HEAPU8[$__size__i_i_i65] | 0;
    if (($conv_i_i487 & 1 | 0) == 0) {
     $cond_i508 = $conv_i_i487 >>> 1;
    } else {
     $cond_i508 = HEAP32[$__sn + 4 >> 2] | 0;
    }
    $conv_i_i528 = HEAPU8[$__size__i_i_i71] | 0;
    if (($conv_i_i528 & 1 | 0) == 0) {
     $cond_i549 = $conv_i_i528 >>> 1;
    } else {
     $cond_i549 = HEAP32[$__sym + 4 >> 2] | 0;
    }
    $add19_pn = $cond_i508 + 2 + $cond_i549 | 0;
   }
   $cond = $add19_pn + $21 | 0;
   do {
    if ($cond >>> 0 > 100) {
     $call28 = _malloc($cond) | 0;
     if (($call28 | 0) != 0) {
      $__mb_0 = $call28;
      $__h_sroa_0_1 = $call28;
      $44 = HEAP8[$__size__i_i] | 0;
      break;
     }
     $exception_i = ___cxa_allocate_exception(4) | 0;
     HEAP32[$exception_i >> 2] = 9152;
     ___cxa_throw($exception_i | 0, 15312, 28);
    } else {
     $__mb_0 = $arraydecay;
     $__h_sroa_0_1 = 0;
     $44 = $19;
    }
   } while (0);
   if (($44 & 1) == 0) {
    $cond_i_i = $__s_i_i + 1 | 0;
    $cond_i_i29588 = $__s_i_i + 1 | 0;
   } else {
    $46 = HEAP32[$__digits + 8 >> 2] | 0;
    $cond_i_i = $46;
    $cond_i_i29588 = $46;
   }
   $conv_i_i219 = $44 & 255;
   if (($conv_i_i219 & 1 | 0) == 0) {
    $cond_i240 = $conv_i_i219 >>> 1;
   } else {
    $cond_i240 = HEAP32[$__digits + 4 >> 2] | 0;
   }
   __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb_0, $__mi, $__me, HEAP32[$__iob + 4 >> 2] | 0, $cond_i_i29588, $cond_i_i + $cond_i240 | 0, $11, $18, $__pat, HEAP8[$__dp] | 0, HEAP8[$__ts] | 0, $__grp, $__sym, $__sn, $21);
   HEAP32[$agg_tmp >> 2] = HEAP32[$__s >> 2];
   __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $__mb_0, HEAP32[$__mi >> 2] | 0, HEAP32[$__me >> 2] | 0, $__iob, $__fl);
   if (($__h_sroa_0_1 | 0) != 0) {
    _free($__h_sroa_0_1);
   }
   if ((HEAP8[$__size__i_i_i65] & 1) != 0) {
    __ZdlPv(HEAP32[$__sn + 8 >> 2] | 0);
   }
   if ((HEAP8[$__size__i_i_i71] & 1) != 0) {
    __ZdlPv(HEAP32[$__sym + 8 >> 2] | 0);
   }
   if ((HEAP8[$__size__i_i_i77] & 1) != 0) {
    __ZdlPv(HEAP32[$__grp + 8 >> 2] | 0);
   }
   $61 = HEAP32[$__locale__i_i >> 2] | 0;
   $__shared_owners__i_i59 = $61 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i_i59 >> 2] | 0, HEAP32[$__shared_owners__i_i59 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    STACKTOP = __stackBase__;
    return;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$61 >> 2] | 0) + 8 >> 2] & 511]($61 | 0);
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($agg_result, $this, $__s, $__intl, $__iob, $__fl, $__units) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__units = +$__units;
 var $__p_i_i_i = 0, $__bb = 0, $__loc = 0, $__pat = 0, $__dp = 0, $__ts = 0, $__grp = 0, $__size__i_i_i90 = 0, $__sym = 0, $__size__i_i_i84 = 0, $__sn = 0, $__size__i_i_i78 = 0, $__fd = 0, $__mbuf = 0, $__mi = 0, $__me = 0, $agg_tmp = 0, $arraydecay = 0, $arraydecay2 = 0, $call = 0, $call_i51 = 0, $0 = 0, $call6 = 0, $1 = 0, $exception_i = 0, $call10 = 0, $6 = 0, $exception_i52 = 0, $__hd_sroa_0_1 = 0, $__hn_sroa_0_1 = 0, $__n_0 = 0, $__db_0 = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $9 = 0, $11 = 0, $sub_i_i = 0, $16 = 0, $17 = 0, $exception_i_i = 0, $19 = 0, $20 = 0, $add_ptr = 0, $22 = 0, $25 = 0, $arraydecay29 = 0, $26 = 0, $conv_i_i = 0, $cond_i = 0, $conv_i_i350 = 0, $cond_i371 = 0, $conv_i_i422 = 0, $cond_i443 = 0, $conv_i_i463 = 0, $cond_i484 = 0, $add36_pn = 0, $cond = 0, $call46 = 0, $35 = 0, $exception_i60 = 0, $__hw_sroa_0_1 = 0, $__mb_0 = 0, $64 = 0, $__shared_owners__i_i = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 576 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i = __stackBase__ | 0;
 $__bb = __stackBase__ + 120 | 0;
 $__loc = __stackBase__ + 528 | 0;
 $__pat = __stackBase__ + 536 | 0;
 $__dp = __stackBase__ + 544 | 0;
 $__ts = __stackBase__ + 552 | 0;
 $__grp = __stackBase__ + 560 | 0;
 $__size__i_i_i90 = $__grp;
 $__sym = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__size__i_i_i84 = $__sym;
 $__sn = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__size__i_i_i78 = $__sn;
 $__fd = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__mbuf = STACKTOP;
 STACKTOP = STACKTOP + 400 | 0;
 $__mi = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__me = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $agg_tmp = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $arraydecay = __stackBase__ + 16 | 0;
 HEAP32[$__bb >> 2] = $arraydecay;
 $arraydecay2 = __stackBase__ + 128 | 0;
 $call = _snprintf($arraydecay | 0, 100, 3464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = $__units, tempInt) | 0) | 0;
 do {
  if ($call >>> 0 > 99) {
   if (HEAP8[18416] | 0) {
    $0 = HEAP32[2044] | 0;
   } else {
    $call_i51 = _newlocale(1, 3128, 0) | 0;
    HEAP32[2044] = $call_i51;
    HEAP8[18416] = 1;
    $0 = $call_i51;
   }
   $call6 = __ZNSt3__112__asprintf_lEPPcPvPKcz($__bb, $0, 3464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempInt >> 3] = $__units, tempInt) | 0) | 0;
   $1 = HEAP32[$__bb >> 2] | 0;
   if (($1 | 0) == 0) {
    $exception_i = ___cxa_allocate_exception(4) | 0;
    HEAP32[$exception_i >> 2] = 9152;
    ___cxa_throw($exception_i | 0, 15312, 28);
   }
   $call10 = _malloc($call6 << 2) | 0;
   $6 = $call10;
   if (($call10 | 0) != 0) {
    $__db_0 = $6;
    $__n_0 = $call6;
    $__hn_sroa_0_1 = $1;
    $__hd_sroa_0_1 = $6;
    break;
   }
   $exception_i52 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i52 >> 2] = 9152;
   ___cxa_throw($exception_i52 | 0, 15312, 28);
  } else {
   $__db_0 = $arraydecay2;
   $__n_0 = $call;
   $__hn_sroa_0_1 = 0;
   $__hd_sroa_0_1 = 0;
  }
 } while (0);
 $__locale__i_i = $__loc | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $9 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$9 >> 2] | 0, HEAP32[$9 >> 2] = tempValue + 1, tempValue;
 $11 = HEAP32[$__locale__i_i >> 2] | 0;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17808;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4453] | 0) - 1 | 0;
 $16 = HEAP32[$11 + 8 >> 2] | 0;
 do {
  if ((HEAP32[$11 + 12 >> 2] | 0) - $16 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $17 = HEAP32[$16 + ($sub_i_i << 2) >> 2] | 0;
   if (($17 | 0) == 0) {
    break;
   }
   $19 = $17;
   $20 = HEAP32[$__bb >> 2] | 0;
   $add_ptr = $20 + $__n_0 | 0;
   $22 = HEAP32[(HEAP32[$17 >> 2] | 0) + 48 >> 2] | 0;
   FUNCTION_TABLE_iiiii[$22 & 15]($19, $20, $add_ptr, $__db_0) | 0;
   if (($__n_0 | 0) == 0) {
    $25 = 0;
   } else {
    $25 = (HEAP8[HEAP32[$__bb >> 2] | 0] | 0) == 45;
   }
   _memset($__size__i_i_i90 | 0, 0, 12);
   _memset($__size__i_i_i84 | 0, 0, 12);
   _memset($__size__i_i_i78 | 0, 0, 12);
   __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl, $25, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd);
   $arraydecay29 = $__mbuf | 0;
   $26 = HEAP32[$__fd >> 2] | 0;
   if (($__n_0 | 0) > ($26 | 0)) {
    $conv_i_i = HEAPU8[$__size__i_i_i78] | 0;
    if (($conv_i_i & 1 | 0) == 0) {
     $cond_i = $conv_i_i >>> 1;
    } else {
     $cond_i = HEAP32[$__sn + 4 >> 2] | 0;
    }
    $conv_i_i350 = HEAPU8[$__size__i_i_i84] | 0;
    if (($conv_i_i350 & 1 | 0) == 0) {
     $cond_i371 = $conv_i_i350 >>> 1;
    } else {
     $cond_i371 = HEAP32[$__sym + 4 >> 2] | 0;
    }
    $add36_pn = ($__n_0 - $26 << 1 | 1) + $cond_i + $cond_i371 | 0;
   } else {
    $conv_i_i422 = HEAPU8[$__size__i_i_i78] | 0;
    if (($conv_i_i422 & 1 | 0) == 0) {
     $cond_i443 = $conv_i_i422 >>> 1;
    } else {
     $cond_i443 = HEAP32[$__sn + 4 >> 2] | 0;
    }
    $conv_i_i463 = HEAPU8[$__size__i_i_i84] | 0;
    if (($conv_i_i463 & 1 | 0) == 0) {
     $cond_i484 = $conv_i_i463 >>> 1;
    } else {
     $cond_i484 = HEAP32[$__sym + 4 >> 2] | 0;
    }
    $add36_pn = $cond_i443 + 2 + $cond_i484 | 0;
   }
   $cond = $add36_pn + $26 | 0;
   do {
    if ($cond >>> 0 > 100) {
     $call46 = _malloc($cond << 2) | 0;
     $35 = $call46;
     if (($call46 | 0) != 0) {
      $__mb_0 = $35;
      $__hw_sroa_0_1 = $35;
      break;
     }
     $exception_i60 = ___cxa_allocate_exception(4) | 0;
     HEAP32[$exception_i60 >> 2] = 9152;
     ___cxa_throw($exception_i60 | 0, 15312, 28);
    } else {
     $__mb_0 = $arraydecay29;
     $__hw_sroa_0_1 = 0;
    }
   } while (0);
   __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb_0, $__mi, $__me, HEAP32[$__iob + 4 >> 2] | 0, $__db_0, $__db_0 + ($__n_0 << 2) | 0, $19, $25, $__pat, HEAP32[$__dp >> 2] | 0, HEAP32[$__ts >> 2] | 0, $__grp, $__sym, $__sn, $26);
   HEAP32[$agg_tmp >> 2] = HEAP32[$__s >> 2];
   __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $__mb_0, HEAP32[$__mi >> 2] | 0, HEAP32[$__me >> 2] | 0, $__iob, $__fl);
   if (($__hw_sroa_0_1 | 0) != 0) {
    _free($__hw_sroa_0_1);
   }
   if ((HEAP8[$__size__i_i_i78] & 1) != 0) {
    __ZdlPv(HEAP32[$__sn + 8 >> 2] | 0);
   }
   if ((HEAP8[$__size__i_i_i84] & 1) != 0) {
    __ZdlPv(HEAP32[$__sym + 8 >> 2] | 0);
   }
   if ((HEAP8[$__size__i_i_i90] & 1) != 0) {
    __ZdlPv(HEAP32[$__grp + 8 >> 2] | 0);
   }
   $64 = HEAP32[$__locale__i_i >> 2] | 0;
   $__shared_owners__i_i = $64 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$64 >> 2] | 0) + 8 >> 2] & 511]($64 | 0);
   }
   if (($__hd_sroa_0_1 | 0) != 0) {
    _free($__hd_sroa_0_1);
   }
   if (($__hn_sroa_0_1 | 0) == 0) {
    STACKTOP = __stackBase__;
    return;
   }
   _free($__hn_sroa_0_1);
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl, $__neg, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__intl = $__intl | 0;
 $__neg = $__neg | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $__p_i_i_i81 = 0, $__p_i_i_i = 0, $ref_tmp = 0, $tmpcast59 = 0, $ref_tmp4 = 0, $0 = 0, $ref_tmp6 = 0, $tmpcast58 = 0, $ref_tmp7 = 0, $1 = 0, $ref_tmp11 = 0, $2 = 0, $ref_tmp13 = 0, $3 = 0, $ref_tmp21 = 0, $tmpcast57 = 0, $ref_tmp22 = 0, $4 = 0, $ref_tmp25 = 0, $tmpcast = 0, $ref_tmp26 = 0, $5 = 0, $ref_tmp31 = 0, $6 = 0, $ref_tmp33 = 0, $7 = 0, $8 = 0, $sub_i_i = 0, $13 = 0, $14 = 0, $exception_i_i = 0, $15 = 0, $16 = 0, $vtable_i = 0, $19 = 0, $__size__i46_i_i_i = 0, $27 = 0, $__size__i46_i_i_i117 = 0, $34 = 0, $__size__i46_i_i_i271 = 0, $__size__i46_i_i_i412 = 0, $sub_i_i88 = 0, $52 = 0, $53 = 0, $exception_i_i100 = 0, $54 = 0, $55 = 0, $vtable_i495 = 0, $58 = 0, $__size__i46_i_i_i567 = 0, $66 = 0, $__size__i46_i_i_i715 = 0, $73 = 0, $__size__i46_i_i_i869 = 0, $__size__i46_i_i_i1013 = 0, $storemerge = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 $__p_i_i_i81 = __stackBase__ | 0;
 $__p_i_i_i = __stackBase__ + 16 | 0;
 $ref_tmp = __stackBase__ + 32 | 0;
 $tmpcast59 = $ref_tmp;
 $ref_tmp4 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $0 = $ref_tmp4;
 $ref_tmp6 = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $tmpcast58 = $ref_tmp6;
 $ref_tmp7 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $1 = $ref_tmp7;
 $ref_tmp11 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $2 = $ref_tmp11;
 $ref_tmp13 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $3 = $ref_tmp13;
 $ref_tmp21 = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $tmpcast57 = $ref_tmp21;
 $ref_tmp22 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $4 = $ref_tmp22;
 $ref_tmp25 = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $tmpcast = $ref_tmp25;
 $ref_tmp26 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $5 = $ref_tmp26;
 $ref_tmp31 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $6 = $ref_tmp31;
 $ref_tmp33 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $7 = $ref_tmp33;
 $8 = HEAP32[$__loc >> 2] | 0;
 if ($__intl) {
  if ((HEAP32[4578] | 0) != -1) {
   HEAP32[$__p_i_i_i >> 2] = 18312;
   HEAP32[$__p_i_i_i + 4 >> 2] = 12;
   HEAP32[$__p_i_i_i + 8 >> 2] = 0;
   __ZNSt3__111__call_onceERVmPvPFvS2_E(18312, $__p_i_i_i, 102);
  }
  $sub_i_i = (HEAP32[4579] | 0) - 1 | 0;
  $13 = HEAP32[$8 + 8 >> 2] | 0;
  if ((HEAP32[$8 + 12 >> 2] | 0) - $13 >> 2 >>> 0 <= $sub_i_i >>> 0) {
   $exception_i_i = ___cxa_allocate_exception(4) | 0;
   $15 = $exception_i_i;
   HEAP32[$15 >> 2] = 9184;
   ___cxa_throw($exception_i_i | 0, 15328, 208);
  }
  $14 = HEAP32[$13 + ($sub_i_i << 2) >> 2] | 0;
  if (($14 | 0) == 0) {
   $exception_i_i = ___cxa_allocate_exception(4) | 0;
   $15 = $exception_i_i;
   HEAP32[$15 >> 2] = 9184;
   ___cxa_throw($exception_i_i | 0, 15328, 208);
  }
  $16 = $14;
  $vtable_i = HEAP32[$14 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$vtable_i + 44 >> 2] & 127]($tmpcast59, $16);
   $19 = $__pat;
   tempBigInt = HEAP32[$ref_tmp >> 2] | 0;
   HEAP8[$19] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$19 + 1 | 0] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$19 + 2 | 0] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$19 + 3 | 0] = tempBigInt & 255;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$14 >> 2] | 0) + 32 >> 2] & 127]($ref_tmp4, $16);
   $__size__i46_i_i_i = $__sn;
   if ((HEAP8[$__size__i46_i_i_i] & 1) == 0) {
    HEAP32[$__sn + 4 >> 2] = 0;
    HEAP8[$__size__i46_i_i_i] = 0;
   } else {
    HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn, 0);
   HEAP32[$__size__i46_i_i_i >> 2] = HEAP32[$0 >> 2];
   HEAP32[$__size__i46_i_i_i + 4 >> 2] = HEAP32[$0 + 4 >> 2];
   HEAP32[$__size__i46_i_i_i + 8 >> 2] = HEAP32[$0 + 8 >> 2];
   _memset($0 | 0, 0, 12);
  } else {
   FUNCTION_TABLE_vii[HEAP32[$vtable_i + 40 >> 2] & 127]($tmpcast58, $16);
   $27 = $__pat;
   tempBigInt = HEAP32[$ref_tmp6 >> 2] | 0;
   HEAP8[$27] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$27 + 1 | 0] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$27 + 2 | 0] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$27 + 3 | 0] = tempBigInt & 255;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$14 >> 2] | 0) + 28 >> 2] & 127]($ref_tmp7, $16);
   $__size__i46_i_i_i117 = $__sn;
   if ((HEAP8[$__size__i46_i_i_i117] & 1) == 0) {
    HEAP32[$__sn + 4 >> 2] = 0;
    HEAP8[$__size__i46_i_i_i117] = 0;
   } else {
    HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn, 0);
   HEAP32[$__size__i46_i_i_i117 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$__size__i46_i_i_i117 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   HEAP32[$__size__i46_i_i_i117 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
   _memset($1 | 0, 0, 12);
  }
  $34 = $14;
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$34 >> 2] | 0) + 12 >> 2] & 255]($16) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$34 >> 2] | 0) + 16 >> 2] & 255]($16) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$14 >> 2] | 0) + 20 >> 2] & 127]($ref_tmp11, $16);
  $__size__i46_i_i_i271 = $__grp;
  if ((HEAP8[$__size__i46_i_i_i271] & 1) == 0) {
   HEAP8[$__grp + 1 | 0] = 0;
   HEAP8[$__size__i46_i_i_i271] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] | 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp, 0);
  HEAP32[$__size__i46_i_i_i271 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$__size__i46_i_i_i271 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i271 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  _memset($2 | 0, 0, 12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$14 >> 2] | 0) + 24 >> 2] & 127]($ref_tmp13, $16);
  $__size__i46_i_i_i412 = $__sym;
  if ((HEAP8[$__size__i46_i_i_i412] & 1) == 0) {
   HEAP32[$__sym + 4 >> 2] = 0;
   HEAP8[$__size__i46_i_i_i412] = 0;
  } else {
   HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym, 0);
  HEAP32[$__size__i46_i_i_i412 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$__size__i46_i_i_i412 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i412 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  _memset($3 | 0, 0, 12);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] & 255]($16) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = __stackBase__;
  return;
 } else {
  if ((HEAP32[4580] | 0) != -1) {
   HEAP32[$__p_i_i_i81 >> 2] = 18320;
   HEAP32[$__p_i_i_i81 + 4 >> 2] = 12;
   HEAP32[$__p_i_i_i81 + 8 >> 2] = 0;
   __ZNSt3__111__call_onceERVmPvPFvS2_E(18320, $__p_i_i_i81, 102);
  }
  $sub_i_i88 = (HEAP32[4581] | 0) - 1 | 0;
  $52 = HEAP32[$8 + 8 >> 2] | 0;
  if ((HEAP32[$8 + 12 >> 2] | 0) - $52 >> 2 >>> 0 <= $sub_i_i88 >>> 0) {
   $exception_i_i100 = ___cxa_allocate_exception(4) | 0;
   $54 = $exception_i_i100;
   HEAP32[$54 >> 2] = 9184;
   ___cxa_throw($exception_i_i100 | 0, 15328, 208);
  }
  $53 = HEAP32[$52 + ($sub_i_i88 << 2) >> 2] | 0;
  if (($53 | 0) == 0) {
   $exception_i_i100 = ___cxa_allocate_exception(4) | 0;
   $54 = $exception_i_i100;
   HEAP32[$54 >> 2] = 9184;
   ___cxa_throw($exception_i_i100 | 0, 15328, 208);
  }
  $55 = $53;
  $vtable_i495 = HEAP32[$53 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$vtable_i495 + 44 >> 2] & 127]($tmpcast57, $55);
   $58 = $__pat;
   tempBigInt = HEAP32[$ref_tmp21 >> 2] | 0;
   HEAP8[$58] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$58 + 1 | 0] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$58 + 2 | 0] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$58 + 3 | 0] = tempBigInt & 255;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$53 >> 2] | 0) + 32 >> 2] & 127]($ref_tmp22, $55);
   $__size__i46_i_i_i567 = $__sn;
   if ((HEAP8[$__size__i46_i_i_i567] & 1) == 0) {
    HEAP32[$__sn + 4 >> 2] = 0;
    HEAP8[$__size__i46_i_i_i567] = 0;
   } else {
    HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn, 0);
   HEAP32[$__size__i46_i_i_i567 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$__size__i46_i_i_i567 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   HEAP32[$__size__i46_i_i_i567 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
   _memset($4 | 0, 0, 12);
  } else {
   FUNCTION_TABLE_vii[HEAP32[$vtable_i495 + 40 >> 2] & 127]($tmpcast, $55);
   $66 = $__pat;
   tempBigInt = HEAP32[$ref_tmp25 >> 2] | 0;
   HEAP8[$66] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$66 + 1 | 0] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$66 + 2 | 0] = tempBigInt & 255;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$66 + 3 | 0] = tempBigInt & 255;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$53 >> 2] | 0) + 28 >> 2] & 127]($ref_tmp26, $55);
   $__size__i46_i_i_i715 = $__sn;
   if ((HEAP8[$__size__i46_i_i_i715] & 1) == 0) {
    HEAP32[$__sn + 4 >> 2] = 0;
    HEAP8[$__size__i46_i_i_i715] = 0;
   } else {
    HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn, 0);
   HEAP32[$__size__i46_i_i_i715 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$__size__i46_i_i_i715 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   HEAP32[$__size__i46_i_i_i715 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
   _memset($5 | 0, 0, 12);
  }
  $73 = $53;
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 12 >> 2] & 255]($55) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 16 >> 2] & 255]($55) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$53 >> 2] | 0) + 20 >> 2] & 127]($ref_tmp31, $55);
  $__size__i46_i_i_i869 = $__grp;
  if ((HEAP8[$__size__i46_i_i_i869] & 1) == 0) {
   HEAP8[$__grp + 1 | 0] = 0;
   HEAP8[$__size__i46_i_i_i869] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] | 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp, 0);
  HEAP32[$__size__i46_i_i_i869 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$__size__i46_i_i_i869 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i869 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  _memset($6 | 0, 0, 12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$53 >> 2] | 0) + 24 >> 2] & 127]($ref_tmp33, $55);
  $__size__i46_i_i_i1013 = $__sym;
  if ((HEAP8[$__size__i46_i_i_i1013] & 1) == 0) {
   HEAP32[$__sym + 4 >> 2] = 0;
   HEAP8[$__size__i46_i_i_i1013] = 0;
  } else {
   HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym, 0);
  HEAP32[$__size__i46_i_i_i1013 >> 2] = HEAP32[$7 >> 2];
  HEAP32[$__size__i46_i_i_i1013 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$__size__i46_i_i_i1013 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  _memset($7 | 0, 0, 12);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 36 >> 2] & 255]($55) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = __stackBase__;
  return;
 }
}
function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb, $__mi, $__me, $__flags, $__db, $__de, $__ct, $__neg, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__mb = $__mb | 0;
 $__mi = $__mi | 0;
 $__me = $__me | 0;
 $__flags = $__flags | 0;
 $__db = $__db | 0;
 $__de = $__de | 0;
 $__ct = $__ct | 0;
 $__neg = $__neg | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $__size__i_i_i = 0, $__data__i_i_i_i489 = 0, $__data__i21_i_i_i481 = 0, $__size__i_i_i520 = 0, $tobool = 0, $__data__i_i_i_i594 = 0, $__data__i21_i_i_i696 = 0, $1 = 0, $cmp24 = 0, $__size__i_i_i419 = 0, $arraydecay_i_i_i_i395 = 0, $__data__i21_i_i_i386 = 0, $__size__i23_i341 = 0, $__p_0120 = 0, $__db_addr_0119 = 0, $conv = 0, $call_i = 0, $6 = 0, $7 = 0, $conv_i_i_i = 0, $cond_i_i = 0, $cond_i_i_i492 = 0, $10 = 0, $11 = 0, $12 = 0, $conv_i_i_i521 = 0, $tobool_i_i_i523 = 0, $cond_i_i542 = 0, $14 = 0, $cond_i_i_i597131138_in = 0, $cond_i_i_i597136 = 0, $cond_i_i_i707 = 0, $cond_i_i738 = 0, $add_ptr_i739 = 0, $16 = 0, $18 = 0, $__result_addr_i_i619_0117 = 0, $agg_tmp7_i621_sroa_0_0116 = 0, $incdec_ptr_i_i_i647 = 0, $__result_addr_i_i619_0_lcssa = 0, $20 = 0, $incdec_ptr15___db_addr_0 = 0, $__d_0 = 0, $__f_098 = 0, $__d_197 = 0, $23 = 0, $24 = 0, $cmp28 = 0, $__d_1_lcssa143 = 0, $__f_0_lcssa141 = 0, $__d_1_lcssa142 = 0, $__f_0_lcssa140 = 0, $cond = 0, $26 = 0, $27 = 0, $__f_1104 = 0, $dec41 = 0, $28 = 0, $_lcssa = 0, $__d_2 = 0, $call_i448 = 0, $30 = 0, $31 = 0, $conv_i_i_i420 = 0, $cond_i_i441 = 0, $cond_i_i_i397 = 0, $__gl_0110 = 0, $__ig_0109 = 0, $__ng_0108 = 0, $__d_3107 = 0, $35 = 0, $inc = 0, $36 = 0, $conv_i_i332 = 0, $cond_i353 = 0, $tobool_i_i_i_i293 = 0, $cond_i_i_i311 = 0, $cond_i_i_i266 = 0, $__ng_1 = 0, $__ig_1 = 0, $__gl_1 = 0, $incdec_ptr78 = 0, $42 = 0, $43 = 0, $44 = 0, $incdec_ptr_i_i221111 = 0, $incdec_ptr_i_i221114 = 0, $__first_addr_i_i_0113 = 0, $45 = 0, $incdec_ptr2_i_i = 0, $incdec_ptr_i_i221 = 0, $__db_addr_2 = 0, $inc83 = 0, $47 = 0, $conv_i_i = 0, $tobool_i_i = 0, $cond_i = 0, $49 = 0, $cond_i_i_i205122147_in = 0, $cond_i_i_i205145 = 0, $cond_i_i_i = 0, $cond_i_i155 = 0, $add_ptr_i = 0, $51 = 0, $agg_tmp7_i_sroa_0_090 = 0, $55 = 0, $agg_tmp7_i_sroa_0_093 = 0, $__result_addr_i_i_092 = 0, $agg_tmp7_i_sroa_0_0 = 0, $__result_addr_i_i_0_lcssa = 0, $and92 = 0, label = 0;
 HEAP32[$__me >> 2] = $__mb;
 $0 = $__ct;
 $__size__i_i_i = $__sn;
 $__data__i_i_i_i489 = $__sn + 4 | 0;
 $__data__i21_i_i_i481 = $__sn + 8 | 0;
 $__size__i_i_i520 = $__sym;
 $tobool = ($__flags & 512 | 0) == 0;
 $__data__i_i_i_i594 = $__sym + 4 | 0;
 $__data__i21_i_i_i696 = $__sym + 8 | 0;
 $1 = $__ct;
 $cmp24 = ($__fd | 0) > 0;
 $__size__i_i_i419 = $__grp;
 $arraydecay_i_i_i_i395 = $__grp + 1 | 0;
 $__data__i21_i_i_i386 = $__grp + 8 | 0;
 $__size__i23_i341 = $__grp + 4 | 0;
 $__db_addr_0119 = $__db;
 $__p_0120 = 0;
 while (1) {
  $conv = HEAP8[$__pat + $__p_0120 | 0] | 0;
  do {
   if (($conv | 0) == 0) {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $__db_addr_2 = $__db_addr_0119;
   } else if (($conv | 0) == 1) {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $call_i = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 63]($__ct, 32) | 0;
    $6 = HEAP32[$__me >> 2] | 0;
    HEAP32[$__me >> 2] = $6 + 4;
    HEAP32[$6 >> 2] = $call_i;
    $__db_addr_2 = $__db_addr_0119;
   } else if (($conv | 0) == 3) {
    $7 = HEAP8[$__size__i_i_i] | 0;
    $conv_i_i_i = $7 & 255;
    if (($conv_i_i_i & 1 | 0) == 0) {
     $cond_i_i = $conv_i_i_i >>> 1;
    } else {
     $cond_i_i = HEAP32[$__data__i_i_i_i489 >> 2] | 0;
    }
    if (($cond_i_i | 0) == 0) {
     $__db_addr_2 = $__db_addr_0119;
     break;
    }
    if (($7 & 1) == 0) {
     $cond_i_i_i492 = $__data__i_i_i_i489;
    } else {
     $cond_i_i_i492 = HEAP32[$__data__i21_i_i_i481 >> 2] | 0;
    }
    $10 = HEAP32[$cond_i_i_i492 >> 2] | 0;
    $11 = HEAP32[$__me >> 2] | 0;
    HEAP32[$__me >> 2] = $11 + 4;
    HEAP32[$11 >> 2] = $10;
    $__db_addr_2 = $__db_addr_0119;
   } else if (($conv | 0) == 2) {
    $12 = HEAP8[$__size__i_i_i520] | 0;
    $conv_i_i_i521 = $12 & 255;
    $tobool_i_i_i523 = ($conv_i_i_i521 & 1 | 0) == 0;
    if ($tobool_i_i_i523) {
     $cond_i_i542 = $conv_i_i_i521 >>> 1;
    } else {
     $cond_i_i542 = HEAP32[$__data__i_i_i_i594 >> 2] | 0;
    }
    if (($cond_i_i542 | 0) == 0 | $tobool) {
     $__db_addr_2 = $__db_addr_0119;
     break;
    }
    if (($12 & 1) == 0) {
     $cond_i_i_i707 = $__data__i_i_i_i594;
     $cond_i_i_i597136 = $__data__i_i_i_i594;
     $cond_i_i_i597131138_in = $__data__i_i_i_i594;
    } else {
     $14 = HEAP32[$__data__i21_i_i_i696 >> 2] | 0;
     $cond_i_i_i707 = $14;
     $cond_i_i_i597136 = $14;
     $cond_i_i_i597131138_in = $14;
    }
    if ($tobool_i_i_i523) {
     $cond_i_i738 = $conv_i_i_i521 >>> 1;
    } else {
     $cond_i_i738 = HEAP32[$__data__i_i_i_i594 >> 2] | 0;
    }
    $add_ptr_i739 = $cond_i_i_i707 + ($cond_i_i738 << 2) | 0;
    $16 = HEAP32[$__me >> 2] | 0;
    if (($cond_i_i_i597136 | 0) == ($add_ptr_i739 | 0)) {
     $__result_addr_i_i619_0_lcssa = $16;
    } else {
     $18 = ($cond_i_i_i707 + ($cond_i_i738 - 1 << 2) + (-$cond_i_i_i597131138_in | 0) | 0) >>> 2;
     $agg_tmp7_i621_sroa_0_0116 = $cond_i_i_i597136;
     $__result_addr_i_i619_0117 = $16;
     while (1) {
      HEAP32[$__result_addr_i_i619_0117 >> 2] = HEAP32[$agg_tmp7_i621_sroa_0_0116 >> 2];
      $incdec_ptr_i_i_i647 = $agg_tmp7_i621_sroa_0_0116 + 4 | 0;
      if (($incdec_ptr_i_i_i647 | 0) == ($add_ptr_i739 | 0)) {
       break;
      }
      $agg_tmp7_i621_sroa_0_0116 = $incdec_ptr_i_i_i647;
      $__result_addr_i_i619_0117 = $__result_addr_i_i619_0117 + 4 | 0;
     }
     $__result_addr_i_i619_0_lcssa = $16 + ($18 + 1 << 2) | 0;
    }
    HEAP32[$__me >> 2] = $__result_addr_i_i619_0_lcssa;
    $__db_addr_2 = $__db_addr_0119;
   } else if (($conv | 0) == 4) {
    $20 = HEAP32[$__me >> 2] | 0;
    $incdec_ptr15___db_addr_0 = $__neg ? $__db_addr_0119 + 4 | 0 : $__db_addr_0119;
    $__d_0 = $incdec_ptr15___db_addr_0;
    while (1) {
     if ($__d_0 >>> 0 >= $__de >>> 0) {
      break;
     }
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, HEAP32[$__d_0 >> 2] | 0) | 0) {
      $__d_0 = $__d_0 + 4 | 0;
     } else {
      break;
     }
    }
    if ($cmp24) {
     if ($__d_0 >>> 0 > $incdec_ptr15___db_addr_0 >>> 0) {
      $__d_197 = $__d_0;
      $__f_098 = $__fd;
      do {
       $__d_197 = $__d_197 - 4 | 0;
       $23 = HEAP32[$__d_197 >> 2] | 0;
       $24 = HEAP32[$__me >> 2] | 0;
       HEAP32[$__me >> 2] = $24 + 4;
       HEAP32[$24 >> 2] = $23;
       $__f_098 = $__f_098 - 1 | 0;
       $cmp28 = ($__f_098 | 0) > 0;
      } while ($__d_197 >>> 0 > $incdec_ptr15___db_addr_0 >>> 0 & $cmp28);
      if ($cmp28) {
       $__f_0_lcssa141 = $__f_098;
       $__d_1_lcssa143 = $__d_197;
       label = 13881;
      } else {
       $cond = 0;
       $__f_0_lcssa140 = $__f_098;
       $__d_1_lcssa142 = $__d_197;
      }
     } else {
      $__f_0_lcssa141 = $__fd;
      $__d_1_lcssa143 = $__d_0;
      label = 13881;
     }
     if ((label | 0) == 13881) {
      label = 0;
      $cond = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 63]($__ct, 48) | 0;
      $__f_0_lcssa140 = $__f_0_lcssa141;
      $__d_1_lcssa142 = $__d_1_lcssa143;
     }
     $26 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $26 + 4;
     if (($__f_0_lcssa140 | 0) > 0) {
      $__f_1104 = $__f_0_lcssa140;
      $27 = $26;
      while (1) {
       HEAP32[$27 >> 2] = $cond;
       $dec41 = $__f_1104 - 1 | 0;
       $28 = HEAP32[$__me >> 2] | 0;
       HEAP32[$__me >> 2] = $28 + 4;
       if (($dec41 | 0) > 0) {
        $__f_1104 = $dec41;
        $27 = $28;
       } else {
        $_lcssa = $28;
        break;
       }
      }
     } else {
      $_lcssa = $26;
     }
     HEAP32[$_lcssa >> 2] = $__dp;
     $__d_2 = $__d_1_lcssa142;
    } else {
     $__d_2 = $__d_0;
    }
    if (($__d_2 | 0) == ($incdec_ptr15___db_addr_0 | 0)) {
     $call_i448 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 63]($__ct, 48) | 0;
     $30 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $30 + 4;
     HEAP32[$30 >> 2] = $call_i448;
    } else {
     $31 = HEAP8[$__size__i_i_i419] | 0;
     $conv_i_i_i420 = $31 & 255;
     if (($conv_i_i_i420 & 1 | 0) == 0) {
      $cond_i_i441 = $conv_i_i_i420 >>> 1;
     } else {
      $cond_i_i441 = HEAP32[$__size__i23_i341 >> 2] | 0;
     }
     if (($cond_i_i441 | 0) == 0) {
      $__d_3107 = $__d_2;
      $__ng_0108 = 0;
      $__ig_0109 = 0;
      $__gl_0110 = -1;
     } else {
      if (($31 & 1) == 0) {
       $cond_i_i_i397 = $arraydecay_i_i_i_i395;
      } else {
       $cond_i_i_i397 = HEAP32[$__data__i21_i_i_i386 >> 2] | 0;
      }
      $__d_3107 = $__d_2;
      $__ng_0108 = 0;
      $__ig_0109 = 0;
      $__gl_0110 = HEAP8[$cond_i_i_i397] | 0;
     }
     while (1) {
      do {
       if (($__ng_0108 | 0) == ($__gl_0110 | 0)) {
        $35 = HEAP32[$__me >> 2] | 0;
        HEAP32[$__me >> 2] = $35 + 4;
        HEAP32[$35 >> 2] = $__ts;
        $inc = $__ig_0109 + 1 | 0;
        $36 = HEAP8[$__size__i_i_i419] | 0;
        $conv_i_i332 = $36 & 255;
        if (($conv_i_i332 & 1 | 0) == 0) {
         $cond_i353 = $conv_i_i332 >>> 1;
        } else {
         $cond_i353 = HEAP32[$__size__i23_i341 >> 2] | 0;
        }
        if ($inc >>> 0 >= $cond_i353 >>> 0) {
         $__gl_1 = $__gl_0110;
         $__ig_1 = $inc;
         $__ng_1 = 0;
         break;
        }
        $tobool_i_i_i_i293 = ($36 & 1) == 0;
        if ($tobool_i_i_i_i293) {
         $cond_i_i_i311 = $arraydecay_i_i_i_i395;
        } else {
         $cond_i_i_i311 = HEAP32[$__data__i21_i_i_i386 >> 2] | 0;
        }
        if ((HEAP8[$cond_i_i_i311 + $inc | 0] | 0) == 127) {
         $__gl_1 = -1;
         $__ig_1 = $inc;
         $__ng_1 = 0;
         break;
        }
        if ($tobool_i_i_i_i293) {
         $cond_i_i_i266 = $arraydecay_i_i_i_i395;
        } else {
         $cond_i_i_i266 = HEAP32[$__data__i21_i_i_i386 >> 2] | 0;
        }
        $__gl_1 = HEAP8[$cond_i_i_i266 + $inc | 0] | 0;
        $__ig_1 = $inc;
        $__ng_1 = 0;
       } else {
        $__gl_1 = $__gl_0110;
        $__ig_1 = $__ig_0109;
        $__ng_1 = $__ng_0108;
       }
      } while (0);
      $incdec_ptr78 = $__d_3107 - 4 | 0;
      $42 = HEAP32[$incdec_ptr78 >> 2] | 0;
      $43 = HEAP32[$__me >> 2] | 0;
      HEAP32[$__me >> 2] = $43 + 4;
      HEAP32[$43 >> 2] = $42;
      if (($incdec_ptr78 | 0) == ($incdec_ptr15___db_addr_0 | 0)) {
       break;
      } else {
       $__d_3107 = $incdec_ptr78;
       $__ng_0108 = $__ng_1 + 1 | 0;
       $__ig_0109 = $__ig_1;
       $__gl_0110 = $__gl_1;
      }
     }
    }
    $44 = HEAP32[$__me >> 2] | 0;
    if (($20 | 0) == ($44 | 0)) {
     $__db_addr_2 = $incdec_ptr15___db_addr_0;
     break;
    }
    $incdec_ptr_i_i221111 = $44 - 4 | 0;
    if ($20 >>> 0 < $incdec_ptr_i_i221111 >>> 0) {
     $__first_addr_i_i_0113 = $20;
     $incdec_ptr_i_i221114 = $incdec_ptr_i_i221111;
    } else {
     $__db_addr_2 = $incdec_ptr15___db_addr_0;
     break;
    }
    while (1) {
     $45 = HEAP32[$__first_addr_i_i_0113 >> 2] | 0;
     HEAP32[$__first_addr_i_i_0113 >> 2] = HEAP32[$incdec_ptr_i_i221114 >> 2];
     HEAP32[$incdec_ptr_i_i221114 >> 2] = $45;
     $incdec_ptr2_i_i = $__first_addr_i_i_0113 + 4 | 0;
     $incdec_ptr_i_i221 = $incdec_ptr_i_i221114 - 4 | 0;
     if ($incdec_ptr2_i_i >>> 0 < $incdec_ptr_i_i221 >>> 0) {
      $__first_addr_i_i_0113 = $incdec_ptr2_i_i;
      $incdec_ptr_i_i221114 = $incdec_ptr_i_i221;
     } else {
      $__db_addr_2 = $incdec_ptr15___db_addr_0;
      break;
     }
    }
   } else {
    $__db_addr_2 = $__db_addr_0119;
   }
  } while (0);
  $inc83 = $__p_0120 + 1 | 0;
  if ($inc83 >>> 0 < 4) {
   $__db_addr_0119 = $__db_addr_2;
   $__p_0120 = $inc83;
  } else {
   break;
  }
 }
 $47 = HEAP8[$__size__i_i_i] | 0;
 $conv_i_i = $47 & 255;
 $tobool_i_i = ($conv_i_i & 1 | 0) == 0;
 if ($tobool_i_i) {
  $cond_i = $conv_i_i >>> 1;
 } else {
  $cond_i = HEAP32[$__data__i_i_i_i489 >> 2] | 0;
 }
 if ($cond_i >>> 0 > 1) {
  if (($47 & 1) == 0) {
   $cond_i_i_i = $__data__i_i_i_i489;
   $cond_i_i_i205145 = $__data__i_i_i_i489;
   $cond_i_i_i205122147_in = $__data__i_i_i_i489;
  } else {
   $49 = HEAP32[$__data__i21_i_i_i481 >> 2] | 0;
   $cond_i_i_i = $49;
   $cond_i_i_i205145 = $49;
   $cond_i_i_i205122147_in = $49;
  }
  if ($tobool_i_i) {
   $cond_i_i155 = $conv_i_i >>> 1;
  } else {
   $cond_i_i155 = HEAP32[$__data__i_i_i_i489 >> 2] | 0;
  }
  $add_ptr_i = $cond_i_i_i + ($cond_i_i155 << 2) | 0;
  $51 = HEAP32[$__me >> 2] | 0;
  $agg_tmp7_i_sroa_0_090 = $cond_i_i_i205145 + 4 | 0;
  if (($agg_tmp7_i_sroa_0_090 | 0) == ($add_ptr_i | 0)) {
   $__result_addr_i_i_0_lcssa = $51;
  } else {
   $55 = (($cond_i_i_i + ($cond_i_i155 - 2 << 2) + (-$cond_i_i_i205122147_in | 0) | 0) >>> 2) + 1 | 0;
   $__result_addr_i_i_092 = $51;
   $agg_tmp7_i_sroa_0_093 = $agg_tmp7_i_sroa_0_090;
   while (1) {
    HEAP32[$__result_addr_i_i_092 >> 2] = HEAP32[$agg_tmp7_i_sroa_0_093 >> 2];
    $agg_tmp7_i_sroa_0_0 = $agg_tmp7_i_sroa_0_093 + 4 | 0;
    if (($agg_tmp7_i_sroa_0_0 | 0) == ($add_ptr_i | 0)) {
     break;
    } else {
     $__result_addr_i_i_092 = $__result_addr_i_i_092 + 4 | 0;
     $agg_tmp7_i_sroa_0_093 = $agg_tmp7_i_sroa_0_0;
    }
   }
   $__result_addr_i_i_0_lcssa = $51 + ($55 << 2) | 0;
  }
  HEAP32[$__me >> 2] = $__result_addr_i_i_0_lcssa;
 }
 $and92 = $__flags & 176;
 if (($and92 | 0) == 32) {
  HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
  return;
 } else if (($and92 | 0) == 16) {
  return;
 } else {
  HEAP32[$__mi >> 2] = $__mb;
  return;
 }
}
function __ZNSt3__18messagesIcED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__18messagesIwED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this, $__nm, $0) {
 $this = $this | 0;
 $__nm = $__nm | 0;
 $0 = $0 | 0;
 var $cond_i_i_i = 0, $call2 = 0;
 if ((HEAP8[$__nm] & 1) == 0) {
  $cond_i_i_i = $__nm + 1 | 0;
 } else {
  $cond_i_i_i = HEAP32[$__nm + 8 >> 2] | 0;
 }
 $call2 = __Z7catopenPKci($cond_i_i_i | 0, 200) | 0;
 return $call2 >>> ((($call2 | 0) != -1 & 1) >>> 0) | 0;
}
function __ZNKSt3__18messagesIcE8do_closeEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 __Z8catcloseP8_nl_catd((($__c | 0) == -1 ? -1 : $__c << 1) | 0) | 0;
 return;
}
function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this, $__nm, $0) {
 $this = $this | 0;
 $__nm = $__nm | 0;
 $0 = $0 | 0;
 var $cond_i_i_i = 0, $call2 = 0;
 if ((HEAP8[$__nm] & 1) == 0) {
  $cond_i_i_i = $__nm + 1 | 0;
 } else {
  $cond_i_i_i = HEAP32[$__nm + 8 >> 2] | 0;
 }
 $call2 = __Z7catopenPKci($cond_i_i_i | 0, 200) | 0;
 return $call2 >>> ((($call2 | 0) != -1 & 1) >>> 0) | 0;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg_result, $this, $__s, $__intl, $__iob, $__fl, $__digits) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__digits = $__digits | 0;
 var $__p_i_i_i = 0, $__loc = 0, $__pat = 0, $__dp = 0, $__ts = 0, $__grp = 0, $__size__i_i_i77 = 0, $__sym = 0, $__size__i_i_i71 = 0, $__sn = 0, $__size__i_i_i65 = 0, $__fd = 0, $__mbuf = 0, $__mi = 0, $__me = 0, $agg_tmp = 0, $__locale__i_i = 0, $__locale_2_i1_i = 0, $1 = 0, $3 = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $11 = 0, $__size__i_i = 0, $12 = 0, $conv_i_i = 0, $cond_i = 0, $cond_i_i_i = 0, $15 = 0, $18 = 0, $arraydecay = 0, $19 = 0, $conv_i_i176 = 0, $tobool_i_i178 = 0, $cond_i197 = 0, $21 = 0, $cond_i367 = 0, $conv_i_i387 = 0, $cond_i408 = 0, $conv_i_i444 = 0, $cond_i465 = 0, $conv_i_i485 = 0, $cond_i506 = 0, $conv_i_i526 = 0, $cond_i547 = 0, $add18_pn = 0, $cond = 0, $call27 = 0, $31 = 0, $exception_i = 0, $43 = 0, $__h_sroa_0_1 = 0, $__mb_0 = 0, $45 = 0, $cond_i_i29387 = 0, $cond_i_i = 0, $conv_i_i217 = 0, $cond_i238 = 0, $63 = 0, $__shared_owners__i_i59 = 0, tempParam = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i = __stackBase__ | 0;
 $__loc = __stackBase__ + 16 | 0;
 $__pat = __stackBase__ + 24 | 0;
 $__dp = __stackBase__ + 32 | 0;
 $__ts = __stackBase__ + 40 | 0;
 $__grp = __stackBase__ + 48 | 0;
 $__size__i_i_i77 = $__grp;
 $__sym = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__size__i_i_i71 = $__sym;
 $__sn = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__size__i_i_i65 = $__sn;
 $__fd = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__mbuf = STACKTOP;
 STACKTOP = STACKTOP + 400 | 0;
 $__mi = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__me = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $agg_tmp = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 >> 3 << 3;
 $__locale__i_i = $__loc | 0;
 $__locale_2_i1_i = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i1_i;
 $1 = $__locale_2_i1_i + 4 | 0;
 tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + 1, tempValue;
 $3 = HEAP32[$__locale__i_i >> 2] | 0;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17808;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i, 102);
 }
 $sub_i_i = (HEAP32[4453] | 0) - 1 | 0;
 $8 = HEAP32[$3 + 8 >> 2] | 0;
 do {
  if ((HEAP32[$3 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
   $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
   if (($9 | 0) == 0) {
    break;
   }
   $11 = $9;
   $__size__i_i = $__digits;
   $12 = HEAP8[$__size__i_i] | 0;
   $conv_i_i = $12 & 255;
   if (($conv_i_i & 1 | 0) == 0) {
    $cond_i = $conv_i_i >>> 1;
   } else {
    $cond_i = HEAP32[$__digits + 4 >> 2] | 0;
   }
   if (($cond_i | 0) == 0) {
    $18 = 0;
   } else {
    if (($12 & 1) == 0) {
     $cond_i_i_i = $__digits + 4 | 0;
    } else {
     $cond_i_i_i = HEAP32[$__digits + 8 >> 2] | 0;
    }
    $15 = HEAP32[$cond_i_i_i >> 2] | 0;
    $18 = ($15 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$9 >> 2] | 0) + 44 >> 2] & 63]($11, 45) | 0);
   }
   _memset($__size__i_i_i77 | 0, 0, 12);
   _memset($__size__i_i_i71 | 0, 0, 12);
   _memset($__size__i_i_i65 | 0, 0, 12);
   __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl, $18, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd);
   $arraydecay = $__mbuf | 0;
   $19 = HEAP8[$__size__i_i] | 0;
   $conv_i_i176 = $19 & 255;
   $tobool_i_i178 = ($conv_i_i176 & 1 | 0) == 0;
   if ($tobool_i_i178) {
    $cond_i197 = $conv_i_i176 >>> 1;
   } else {
    $cond_i197 = HEAP32[$__digits + 4 >> 2] | 0;
   }
   $21 = HEAP32[$__fd >> 2] | 0;
   if (($cond_i197 | 0) > ($21 | 0)) {
    if ($tobool_i_i178) {
     $cond_i367 = $conv_i_i176 >>> 1;
    } else {
     $cond_i367 = HEAP32[$__digits + 4 >> 2] | 0;
    }
    $conv_i_i387 = HEAPU8[$__size__i_i_i65] | 0;
    if (($conv_i_i387 & 1 | 0) == 0) {
     $cond_i408 = $conv_i_i387 >>> 1;
    } else {
     $cond_i408 = HEAP32[$__sn + 4 >> 2] | 0;
    }
    $conv_i_i444 = HEAPU8[$__size__i_i_i71] | 0;
    if (($conv_i_i444 & 1 | 0) == 0) {
     $cond_i465 = $conv_i_i444 >>> 1;
    } else {
     $cond_i465 = HEAP32[$__sym + 4 >> 2] | 0;
    }
    $add18_pn = ($cond_i367 - $21 << 1 | 1) + $cond_i408 + $cond_i465 | 0;
   } else {
    $conv_i_i485 = HEAPU8[$__size__i_i_i65] | 0;
    if (($conv_i_i485 & 1 | 0) == 0) {
     $cond_i506 = $conv_i_i485 >>> 1;
    } else {
     $cond_i506 = HEAP32[$__sn + 4 >> 2] | 0;
    }
    $conv_i_i526 = HEAPU8[$__size__i_i_i71] | 0;
    if (($conv_i_i526 & 1 | 0) == 0) {
     $cond_i547 = $conv_i_i526 >>> 1;
    } else {
     $cond_i547 = HEAP32[$__sym + 4 >> 2] | 0;
    }
    $add18_pn = $cond_i506 + 2 + $cond_i547 | 0;
   }
   $cond = $add18_pn + $21 | 0;
   do {
    if ($cond >>> 0 > 100) {
     $call27 = _malloc($cond << 2) | 0;
     $31 = $call27;
     if (($call27 | 0) != 0) {
      $__mb_0 = $31;
      $__h_sroa_0_1 = $31;
      $43 = HEAP8[$__size__i_i] | 0;
      break;
     }
     $exception_i = ___cxa_allocate_exception(4) | 0;
     HEAP32[$exception_i >> 2] = 9152;
     ___cxa_throw($exception_i | 0, 15312, 28);
    } else {
     $__mb_0 = $arraydecay;
     $__h_sroa_0_1 = 0;
     $43 = $19;
    }
   } while (0);
   if (($43 & 1) == 0) {
    $cond_i_i = $__digits + 4 | 0;
    $cond_i_i29387 = $__digits + 4 | 0;
   } else {
    $45 = HEAP32[$__digits + 8 >> 2] | 0;
    $cond_i_i = $45;
    $cond_i_i29387 = $45;
   }
   $conv_i_i217 = $43 & 255;
   if (($conv_i_i217 & 1 | 0) == 0) {
    $cond_i238 = $conv_i_i217 >>> 1;
   } else {
    $cond_i238 = HEAP32[$__digits + 4 >> 2] | 0;
   }
   __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb_0, $__mi, $__me, HEAP32[$__iob + 4 >> 2] | 0, $cond_i_i29387, $cond_i_i + ($cond_i238 << 2) | 0, $11, $18, $__pat, HEAP32[$__dp >> 2] | 0, HEAP32[$__ts >> 2] | 0, $__grp, $__sym, $__sn, $21);
   HEAP32[$agg_tmp >> 2] = HEAP32[$__s >> 2];
   __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $agg_tmp, $__mb_0, HEAP32[$__mi >> 2] | 0, HEAP32[$__me >> 2] | 0, $__iob, $__fl);
   if (($__h_sroa_0_1 | 0) != 0) {
    _free($__h_sroa_0_1);
   }
   if ((HEAP8[$__size__i_i_i65] & 1) != 0) {
    __ZdlPv(HEAP32[$__sn + 8 >> 2] | 0);
   }
   if ((HEAP8[$__size__i_i_i71] & 1) != 0) {
    __ZdlPv(HEAP32[$__sym + 8 >> 2] | 0);
   }
   if ((HEAP8[$__size__i_i_i77] & 1) != 0) {
    __ZdlPv(HEAP32[$__grp + 8 >> 2] | 0);
   }
   $63 = HEAP32[$__locale__i_i >> 2] | 0;
   $__shared_owners__i_i59 = $63 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i_i59 >> 2] | 0, HEAP32[$__shared_owners__i_i59 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    STACKTOP = __stackBase__;
    return;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$63 >> 2] | 0) + 8 >> 2] & 511]($63 | 0);
   STACKTOP = __stackBase__;
   return;
  }
 } while (0);
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 9184;
 ___cxa_throw($exception_i_i | 0, 15328, 208);
}
function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg_result, $this, $__c, $__set, $__msgid, $__dflt) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__c = $__c | 0;
 $__set = $__set | 0;
 $__msgid = $__msgid | 0;
 $__dflt = $__dflt | 0;
 var $__ndflt = 0, $__size__i_i_i89 = 0, $__size__i_i_i37 = 0, $__s_i_i_i_i122 = 0, $0 = 0, $1 = 0, $cond_i_i_i144103 = 0, $cond_i_i_i199 = 0, $conv_i_i = 0, $cond_i = 0, $add_ptr = 0, $arraydecay_i_i_i30 = 0, $__data__i_i = 0, $__cap__i_i = 0, $__size__i21_i_i = 0, $5 = 0, $__wb_addr_i_0101 = 0, $6 = 0, $7 = 0, $9 = 0, $cond_i_i = 0, $conv_i_i65_i = 0, $cond_i77_i = 0, $arraydecay_i_i_i30_ = 0, $add_i = 0, $mul_i = 0, $_sroa_speculated_i = 0, $cond_i93_sink_i = 0, $call_i_i_i35 = 0, $or_i_i = 0, $12 = 0, $arraydecay_i_i_i30_109 = 0, $add_ptr_sum_i = 0, $14 = 0, $conv_i6_i_i = 0, $15 = 0, $incdec_ptr_i99 = 0, $17 = 0, $21 = 0, $22 = 0, $cond_i_i_i = 0, $call10 = 0, $call16 = 0, $add_ptr17 = 0, $arraydecay_i_i_i63 = 0, $__size__i21_i_i72 = 0, $__data__i21_i_i61 = 0, $__cap__i_i_i40 = 0, $23 = 0, $__nb_addr_i_096 = 0, $24 = 0, $25 = 0, $27 = 0, $cond_i_i44 = 0, $conv_i_i65_i45 = 0, $cond_i77_i53 = 0, $29 = 0, $cond_i49_i65 = 0, $add_ptr_sum_i67 = 0, $31 = 0, $conv_i6_i_i75 = 0, $32 = 0, $incdec_ptr_i = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__ndflt = __stackBase__ | 0;
 $__size__i_i_i89 = $__ndflt;
 _memset($__size__i_i_i89 | 0, 0, 12);
 $__size__i_i_i37 = $agg_result;
 $__s_i_i_i_i122 = $__dflt;
 $0 = HEAP8[$__dflt] | 0;
 if (($0 & 1) == 0) {
  $cond_i_i_i199 = $__s_i_i_i_i122 + 1 | 0;
  $cond_i_i_i144103 = $__s_i_i_i_i122 + 1 | 0;
 } else {
  $1 = HEAP32[$__dflt + 8 >> 2] | 0;
  $cond_i_i_i199 = $1;
  $cond_i_i_i144103 = $1;
 }
 $conv_i_i = $0 & 255;
 if (($conv_i_i & 1 | 0) == 0) {
  $cond_i = $conv_i_i >>> 1;
 } else {
  $cond_i = HEAP32[$__dflt + 4 >> 2] | 0;
 }
 $add_ptr = $cond_i_i_i199 + $cond_i | 0;
 do {
  if ($cond_i_i_i144103 >>> 0 < $add_ptr >>> 0) {
   $arraydecay_i_i_i30 = $__ndflt + 1 | 0;
   $__data__i_i = $__ndflt + 8 | 0;
   $__cap__i_i = $__ndflt | 0;
   $__size__i21_i_i = $__ndflt + 4 | 0;
   $__wb_addr_i_0101 = $cond_i_i_i144103;
   $5 = 0;
   while (1) {
    $6 = HEAP8[$__wb_addr_i_0101] | 0;
    if (($5 & 1) == 0) {
     $cond_i_i = 10;
     $9 = $5;
    } else {
     $7 = HEAP32[$__cap__i_i >> 2] | 0;
     $cond_i_i = ($7 & -2) - 1 | 0;
     $9 = $7 & 255;
    }
    $conv_i_i65_i = $9 & 255;
    $cond_i77_i = ($conv_i_i65_i & 1 | 0) == 0 ? $conv_i_i65_i >>> 1 : HEAP32[$__size__i21_i_i >> 2] | 0;
    if (($cond_i77_i | 0) == ($cond_i_i | 0)) {
     if (($cond_i_i | 0) == -3) {
      label = 14034;
      break;
     }
     $arraydecay_i_i_i30_ = ($9 & 1) == 0 ? $arraydecay_i_i_i30 : HEAP32[$__data__i_i >> 2] | 0;
     do {
      if ($cond_i_i >>> 0 < 2147483631) {
       $add_i = $cond_i_i + 1 | 0;
       $mul_i = $cond_i_i << 1;
       $_sroa_speculated_i = $add_i >>> 0 < $mul_i >>> 0 ? $mul_i : $add_i;
       if ($_sroa_speculated_i >>> 0 < 11) {
        $cond_i93_sink_i = 11;
        break;
       }
       $cond_i93_sink_i = $_sroa_speculated_i + 16 & -16;
      } else {
       $cond_i93_sink_i = -2;
      }
     } while (0);
     $call_i_i_i35 = __Znwj($cond_i93_sink_i) | 0;
     _memcpy($call_i_i_i35 | 0, $arraydecay_i_i_i30_ | 0, $cond_i_i) | 0;
     if (($cond_i_i | 0) != 10) {
      __ZdlPv($arraydecay_i_i_i30_);
     }
     HEAP32[$__data__i_i >> 2] = $call_i_i_i35;
     $or_i_i = $cond_i93_sink_i | 1;
     HEAP32[$__cap__i_i >> 2] = $or_i_i;
     $12 = $or_i_i & 255;
    } else {
     $12 = $9;
    }
    $arraydecay_i_i_i30_109 = ($12 & 1) == 0 ? $arraydecay_i_i_i30 : HEAP32[$__data__i_i >> 2] | 0;
    HEAP8[$arraydecay_i_i_i30_109 + $cond_i77_i | 0] = $6;
    $add_ptr_sum_i = $cond_i77_i + 1 | 0;
    HEAP8[$arraydecay_i_i_i30_109 + $add_ptr_sum_i | 0] = 0;
    $14 = HEAP8[$__size__i_i_i89] | 0;
    if (($14 & 1) == 0) {
     $conv_i6_i_i = $add_ptr_sum_i << 1 & 255;
     HEAP8[$__size__i_i_i89] = $conv_i6_i_i;
     $15 = $conv_i6_i_i;
    } else {
     HEAP32[$__size__i21_i_i >> 2] = $add_ptr_sum_i;
     $15 = $14;
    }
    $incdec_ptr_i99 = $__wb_addr_i_0101 + 1 | 0;
    if ($incdec_ptr_i99 >>> 0 < $add_ptr >>> 0) {
     $__wb_addr_i_0101 = $incdec_ptr_i99;
     $5 = $15;
    } else {
     label = 14047;
     break;
    }
   }
   if ((label | 0) == 14047) {
    $17 = ($__c | 0) == -1 ? -1 : $__c << 1;
    if (($15 & 1) == 0) {
     $21 = $17;
     label = 14052;
     break;
    }
    $cond_i_i_i = HEAP32[$__ndflt + 8 >> 2] | 0;
    $22 = $17;
    break;
   } else if ((label | 0) == 14034) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
   }
  } else {
   $21 = ($__c | 0) == -1 ? -1 : $__c << 1;
   label = 14052;
  }
 } while (0);
 if ((label | 0) == 14052) {
  $cond_i_i_i = $__ndflt + 1 | 0;
  $22 = $21;
 }
 $call10 = __Z7catgetsP8_nl_catdiiPKc($22 | 0, $__set | 0, $__msgid | 0, $cond_i_i_i | 0) | 0;
 _memset($__size__i_i_i37 | 0, 0, 12);
 $call16 = _strlen($call10 | 0) | 0;
 $add_ptr17 = $call10 + $call16 | 0;
 if (($call16 | 0) > 0) {
  $arraydecay_i_i_i63 = $agg_result + 1 | 0;
  $__size__i21_i_i72 = $agg_result + 4 | 0;
  $__data__i21_i_i61 = $agg_result + 8 | 0;
  $__cap__i_i_i40 = $agg_result | 0;
  $__nb_addr_i_096 = $call10;
  $23 = 0;
  while (1) {
   $24 = HEAP8[$__nb_addr_i_096] | 0;
   if (($23 & 1) == 0) {
    $cond_i_i44 = 10;
    $27 = $23;
   } else {
    $25 = HEAP32[$__cap__i_i_i40 >> 2] | 0;
    $cond_i_i44 = ($25 & -2) - 1 | 0;
    $27 = $25 & 255;
   }
   $conv_i_i65_i45 = $27 & 255;
   if (($conv_i_i65_i45 & 1 | 0) == 0) {
    $cond_i77_i53 = $conv_i_i65_i45 >>> 1;
   } else {
    $cond_i77_i53 = HEAP32[$__size__i21_i_i72 >> 2] | 0;
   }
   if (($cond_i77_i53 | 0) == ($cond_i_i44 | 0)) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($agg_result, $cond_i_i44, 1, $cond_i_i44, $cond_i_i44, 0, 0);
    $29 = HEAP8[$__size__i_i_i37] | 0;
   } else {
    $29 = $27;
   }
   if (($29 & 1) == 0) {
    $cond_i49_i65 = $arraydecay_i_i_i63;
   } else {
    $cond_i49_i65 = HEAP32[$__data__i21_i_i61 >> 2] | 0;
   }
   HEAP8[$cond_i49_i65 + $cond_i77_i53 | 0] = $24;
   $add_ptr_sum_i67 = $cond_i77_i53 + 1 | 0;
   HEAP8[$cond_i49_i65 + $add_ptr_sum_i67 | 0] = 0;
   $31 = HEAP8[$__size__i_i_i37] | 0;
   if (($31 & 1) == 0) {
    $conv_i6_i_i75 = $add_ptr_sum_i67 << 1 & 255;
    HEAP8[$__size__i_i_i37] = $conv_i6_i_i75;
    $32 = $conv_i6_i_i75;
   } else {
    HEAP32[$__size__i21_i_i72 >> 2] = $add_ptr_sum_i67;
    $32 = $31;
   }
   $incdec_ptr_i = $__nb_addr_i_096 + 1 | 0;
   if ($incdec_ptr_i >>> 0 < $add_ptr17 >>> 0) {
    $__nb_addr_i_096 = $incdec_ptr_i;
    $23 = $32;
   } else {
    break;
   }
  }
 }
 if ((HEAP8[$__size__i_i_i89] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__ndflt + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__18messagesIwE8do_closeEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 __Z8catcloseP8_nl_catd((($__c | 0) == -1 ? -1 : $__c << 1) | 0) | 0;
 return;
}
function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg_result, $this, $__c, $__set, $__msgid, $__dflt) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__c = $__c | 0;
 $__set = $__set | 0;
 $__msgid = $__msgid | 0;
 $__dflt = $__dflt | 0;
 var $__mb_i226 = 0, $__buf_i228 = 0, $__bn_i229 = 0, $__wn_i = 0, $__mb_i = 0, $__buf_i = 0, $__bn_i = 0, $__nn_i = 0, $__ndflt = 0, $__size__i_i_i120 = 0, $temp_lvalue = 0, $temp_lvalue12 = 0, $__size__i_i_i115 = 0, $0 = 0, $2 = 0, $3 = 0, $cond_i_i_i151 = 0, $cond_i_i_i102 = 0, $conv_i_i = 0, $cond_i115 = 0, $add_ptr = 0, $7 = 0, $arraydecay_i239 = 0, $add_ptr_i240 = 0, $arraydecay_i_i_i49 = 0, $__data__i_i = 0, $__cap__i_i = 0, $__size__i21_i_i = 0, $vtable_i237 = 0, $__wb_addr_i_0143 = 0, $cmp4_i = 0, $9 = 0, $exception_i = 0, $__imp__i_i = 0, $call3_i1_i1_i = 0, $add_ptr_i_i_i = 0, $17 = 0, $__p_i230_0138 = 0, $18 = 0, $19 = 0, $21 = 0, $cond_i_i = 0, $conv_i_i65_i = 0, $cond_i77_i = 0, $arraydecay_i_i_i49_ = 0, $add_i = 0, $mul_i = 0, $_sroa_speculated_i = 0, $cond_i93_sink_i = 0, $call_i_i_i5355 = 0, $or_i_i = 0, $24 = 0, $arraydecay_i_i_i49_155 = 0, $add_ptr_sum_i = 0, $26 = 0, $conv_i6_i_i = 0, $27 = 0, $incdec_ptr_i251 = 0, $29 = 0, $31 = 0, $38 = 0, $39 = 0, $cond_i_i_i217 = 0, $call11 = 0, $40 = 0, $call19 = 0, $add_ptr20 = 0, $42 = 0, $sub_ptr_lhs_cast_i = 0, $arraydecay_i = 0, $add_ptr5_i = 0, $__data__i_i_i = 0, $__data__i21_i_i95 = 0, $__cap__i_i_i76 = 0, $vtable_i = 0, $43 = 0, $__nb_addr_i_0133 = 0, $cmp6_i = 0, $45 = 0, $exception_i56 = 0, $__imp__i_i57 = 0, $call3_i1_i1_i61 = 0, $add_ptr_i_i_i64 = 0, $53 = 0, $__p_i_0128 = 0, $54 = 0, $55 = 0, $57 = 0, $cond_i_i80 = 0, $conv_i_i65_i81 = 0, $cond_i77_i88 = 0, $59 = 0, $cond_i49_i98 = 0, $add_ptr_sum_i100 = 0, $61 = 0, $conv_i6_i_i107 = 0, $62 = 0, $incdec_ptr_i = 0, $64 = 0, $65 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__mb_i226 = __stackBase__ | 0;
 $__buf_i228 = __stackBase__ + 8 | 0;
 $__bn_i229 = __stackBase__ + 40 | 0;
 $__wn_i = __stackBase__ + 48 | 0;
 $__mb_i = __stackBase__ + 56 | 0;
 $__buf_i = __stackBase__ + 64 | 0;
 $__bn_i = __stackBase__ + 192 | 0;
 $__nn_i = __stackBase__ + 200 | 0;
 $__ndflt = __stackBase__ + 208 | 0;
 $__size__i_i_i120 = $__ndflt;
 $temp_lvalue = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $temp_lvalue12 = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 _memset($__size__i_i_i120 | 0, 0, 12);
 $__size__i_i_i115 = $agg_result;
 $0 = $temp_lvalue | 0;
 HEAP32[$temp_lvalue + 4 >> 2] = 0;
 HEAP32[$temp_lvalue >> 2] = 10848;
 $2 = HEAP8[$__dflt] | 0;
 if (($2 & 1) == 0) {
  $cond_i_i_i102 = $__dflt + 4 | 0;
  $cond_i_i_i151 = $__dflt + 4 | 0;
 } else {
  $3 = HEAP32[$__dflt + 8 >> 2] | 0;
  $cond_i_i_i102 = $3;
  $cond_i_i_i151 = $3;
 }
 $conv_i_i = $2 & 255;
 if (($conv_i_i & 1 | 0) == 0) {
  $cond_i115 = $conv_i_i >>> 1;
 } else {
  $cond_i115 = HEAP32[$__dflt + 4 >> 2] | 0;
 }
 $add_ptr = $cond_i_i_i102 + ($cond_i115 << 2) | 0;
 do {
  if ($cond_i_i_i151 >>> 0 < $add_ptr >>> 0) {
   $7 = $temp_lvalue;
   $arraydecay_i239 = $__buf_i228 | 0;
   $add_ptr_i240 = $__buf_i228 + 32 | 0;
   $arraydecay_i_i_i49 = $__ndflt + 1 | 0;
   $__data__i_i = $__ndflt + 8 | 0;
   $__cap__i_i = $__ndflt | 0;
   $__size__i21_i_i = $__ndflt + 4 | 0;
   $__wb_addr_i_0143 = $cond_i_i_i151;
   $vtable_i237 = 10848;
   L16567 : while (1) {
    HEAP32[$__wn_i >> 2] = $__wb_addr_i_0143;
    $cmp4_i = (FUNCTION_TABLE_iiiiiiiii[HEAP32[$vtable_i237 + 12 >> 2] & 31]($0, $__mb_i226, $__wb_addr_i_0143, $add_ptr, $__wn_i, $arraydecay_i239, $add_ptr_i240, $__bn_i229) | 0) == 2;
    $9 = HEAP32[$__wn_i >> 2] | 0;
    if ($cmp4_i | ($9 | 0) == ($__wb_addr_i_0143 | 0)) {
     label = 14094;
     break;
    }
    if ($arraydecay_i239 >>> 0 < (HEAP32[$__bn_i229 >> 2] | 0) >>> 0) {
     $__p_i230_0138 = $arraydecay_i239;
     $17 = HEAP8[$__size__i_i_i120] | 0;
     while (1) {
      $18 = HEAP8[$__p_i230_0138] | 0;
      if (($17 & 1) == 0) {
       $cond_i_i = 10;
       $21 = $17;
      } else {
       $19 = HEAP32[$__cap__i_i >> 2] | 0;
       $cond_i_i = ($19 & -2) - 1 | 0;
       $21 = $19 & 255;
      }
      $conv_i_i65_i = $21 & 255;
      $cond_i77_i = ($conv_i_i65_i & 1 | 0) == 0 ? $conv_i_i65_i >>> 1 : HEAP32[$__size__i21_i_i >> 2] | 0;
      if (($cond_i77_i | 0) == ($cond_i_i | 0)) {
       if (($cond_i_i | 0) == -3) {
        label = 14104;
        break L16567;
       }
       $arraydecay_i_i_i49_ = ($21 & 1) == 0 ? $arraydecay_i_i_i49 : HEAP32[$__data__i_i >> 2] | 0;
       do {
        if ($cond_i_i >>> 0 < 2147483631) {
         $add_i = $cond_i_i + 1 | 0;
         $mul_i = $cond_i_i << 1;
         $_sroa_speculated_i = $add_i >>> 0 < $mul_i >>> 0 ? $mul_i : $add_i;
         if ($_sroa_speculated_i >>> 0 < 11) {
          $cond_i93_sink_i = 11;
          break;
         }
         $cond_i93_sink_i = $_sroa_speculated_i + 16 & -16;
        } else {
         $cond_i93_sink_i = -2;
        }
       } while (0);
       $call_i_i_i5355 = __Znwj($cond_i93_sink_i) | 0;
       _memcpy($call_i_i_i5355 | 0, $arraydecay_i_i_i49_ | 0, $cond_i_i) | 0;
       if (($cond_i_i | 0) != 10) {
        __ZdlPv($arraydecay_i_i_i49_);
       }
       HEAP32[$__data__i_i >> 2] = $call_i_i_i5355;
       $or_i_i = $cond_i93_sink_i | 1;
       HEAP32[$__cap__i_i >> 2] = $or_i_i;
       $24 = $or_i_i & 255;
      } else {
       $24 = $21;
      }
      $arraydecay_i_i_i49_155 = ($24 & 1) == 0 ? $arraydecay_i_i_i49 : HEAP32[$__data__i_i >> 2] | 0;
      HEAP8[$arraydecay_i_i_i49_155 + $cond_i77_i | 0] = $18;
      $add_ptr_sum_i = $cond_i77_i + 1 | 0;
      HEAP8[$arraydecay_i_i_i49_155 + $add_ptr_sum_i | 0] = 0;
      $26 = HEAP8[$__size__i_i_i120] | 0;
      if (($26 & 1) == 0) {
       $conv_i6_i_i = $add_ptr_sum_i << 1 & 255;
       HEAP8[$__size__i_i_i120] = $conv_i6_i_i;
       $27 = $conv_i6_i_i;
      } else {
       HEAP32[$__size__i21_i_i >> 2] = $add_ptr_sum_i;
       $27 = $26;
      }
      $incdec_ptr_i251 = $__p_i230_0138 + 1 | 0;
      if ($incdec_ptr_i251 >>> 0 < (HEAP32[$__bn_i229 >> 2] | 0) >>> 0) {
       $__p_i230_0138 = $incdec_ptr_i251;
       $17 = $27;
      } else {
       break;
      }
     }
     $29 = HEAP32[$__wn_i >> 2] | 0;
    } else {
     $29 = $9;
    }
    if ($29 >>> 0 >= $add_ptr >>> 0) {
     label = 14120;
     break;
    }
    $__wb_addr_i_0143 = $29;
    $vtable_i237 = HEAP32[$7 >> 2] | 0;
   }
   if ((label | 0) == 14120) {
    $31 = ($__c | 0) == -1 ? -1 : $__c << 1;
    if ((HEAP8[$__size__i_i_i120] & 1) == 0) {
     $38 = $31;
     label = 14127;
     break;
    }
    $cond_i_i_i217 = HEAP32[$__ndflt + 8 >> 2] | 0;
    $39 = $31;
    break;
   } else if ((label | 0) == 14094) {
    $exception_i = ___cxa_allocate_exception(8) | 0;
    HEAP32[$exception_i >> 2] = 9216;
    $__imp__i_i = $exception_i + 4 | 0;
    if (($__imp__i_i | 0) != 0) {
     $call3_i1_i1_i = __Znaj(33) | 0;
     HEAP32[$call3_i1_i1_i + 4 >> 2] = 20;
     HEAP32[$call3_i1_i1_i >> 2] = 20;
     $add_ptr_i_i_i = $call3_i1_i1_i + 12 | 0;
     HEAP32[$__imp__i_i >> 2] = $add_ptr_i_i_i;
     HEAP32[$call3_i1_i1_i + 8 >> 2] = 0;
     _memcpy($add_ptr_i_i_i | 0, 2192, 21) | 0;
    }
    ___cxa_throw($exception_i | 0, 15344, 72);
   } else if ((label | 0) == 14104) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
   }
  } else {
   $38 = ($__c | 0) == -1 ? -1 : $__c << 1;
   label = 14127;
  }
 } while (0);
 if ((label | 0) == 14127) {
  $cond_i_i_i217 = $__ndflt + 1 | 0;
  $39 = $38;
 }
 $call11 = __Z7catgetsP8_nl_catdiiPKc($39 | 0, $__set | 0, $__msgid | 0, $cond_i_i_i217 | 0) | 0;
 _memset($__size__i_i_i115 | 0, 0, 12);
 $40 = $temp_lvalue12 | 0;
 HEAP32[$temp_lvalue12 + 4 >> 2] = 0;
 HEAP32[$temp_lvalue12 >> 2] = 10792;
 $call19 = _strlen($call11 | 0) | 0;
 $add_ptr20 = $call11 + $call19 | 0;
 L16613 : do {
  if (($call19 | 0) >= 1) {
   $42 = $temp_lvalue12;
   $sub_ptr_lhs_cast_i = $add_ptr20;
   $arraydecay_i = $__buf_i | 0;
   $add_ptr5_i = $__buf_i + 128 | 0;
   $__data__i_i_i = $agg_result + 4 | 0;
   $__data__i21_i_i95 = $agg_result + 8 | 0;
   $__cap__i_i_i76 = $agg_result | 0;
   $__nb_addr_i_0133 = $call11;
   $43 = 0;
   $vtable_i = 10792;
   while (1) {
    HEAP32[$__nn_i >> 2] = $__nb_addr_i_0133;
    $cmp6_i = (FUNCTION_TABLE_iiiiiiiii[HEAP32[$vtable_i + 16 >> 2] & 31]($40, $__mb_i, $__nb_addr_i_0133, ($sub_ptr_lhs_cast_i - $__nb_addr_i_0133 | 0) > 32 ? $__nb_addr_i_0133 + 32 | 0 : $add_ptr20, $__nn_i, $arraydecay_i, $add_ptr5_i, $__bn_i) | 0) == 2;
    $45 = HEAP32[$__nn_i >> 2] | 0;
    if ($cmp6_i | ($45 | 0) == ($__nb_addr_i_0133 | 0)) {
     break;
    }
    if ($arraydecay_i >>> 0 < (HEAP32[$__bn_i >> 2] | 0) >>> 0) {
     $__p_i_0128 = $arraydecay_i;
     $53 = $43;
     while (1) {
      $54 = HEAP32[$__p_i_0128 >> 2] | 0;
      if (($53 & 1) == 0) {
       $cond_i_i80 = 1;
       $57 = $53;
      } else {
       $55 = HEAP32[$__cap__i_i_i76 >> 2] | 0;
       $cond_i_i80 = ($55 & -2) - 1 | 0;
       $57 = $55 & 255;
      }
      $conv_i_i65_i81 = $57 & 255;
      if (($conv_i_i65_i81 & 1 | 0) == 0) {
       $cond_i77_i88 = $conv_i_i65_i81 >>> 1;
      } else {
       $cond_i77_i88 = HEAP32[$__data__i_i_i >> 2] | 0;
      }
      if (($cond_i77_i88 | 0) == ($cond_i_i80 | 0)) {
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($agg_result, $cond_i_i80, 1, $cond_i_i80, $cond_i_i80, 0, 0);
       $59 = HEAP8[$__size__i_i_i115] | 0;
      } else {
       $59 = $57;
      }
      if (($59 & 1) == 0) {
       $cond_i49_i98 = $__data__i_i_i;
      } else {
       $cond_i49_i98 = HEAP32[$__data__i21_i_i95 >> 2] | 0;
      }
      HEAP32[$cond_i49_i98 + ($cond_i77_i88 << 2) >> 2] = $54;
      $add_ptr_sum_i100 = $cond_i77_i88 + 1 | 0;
      HEAP32[$cond_i49_i98 + ($add_ptr_sum_i100 << 2) >> 2] = 0;
      $61 = HEAP8[$__size__i_i_i115] | 0;
      if (($61 & 1) == 0) {
       $conv_i6_i_i107 = $add_ptr_sum_i100 << 1 & 255;
       HEAP8[$__size__i_i_i115] = $conv_i6_i_i107;
       $62 = $conv_i6_i_i107;
      } else {
       HEAP32[$__data__i_i_i >> 2] = $add_ptr_sum_i100;
       $62 = $61;
      }
      $incdec_ptr_i = $__p_i_0128 + 4 | 0;
      if ($incdec_ptr_i >>> 0 < (HEAP32[$__bn_i >> 2] | 0) >>> 0) {
       $__p_i_0128 = $incdec_ptr_i;
       $53 = $62;
      } else {
       break;
      }
     }
     $65 = HEAP32[$__nn_i >> 2] | 0;
     $64 = $62;
    } else {
     $65 = $45;
     $64 = $43;
    }
    if ($65 >>> 0 >= $add_ptr20 >>> 0) {
     break L16613;
    }
    $__nb_addr_i_0133 = $65;
    $43 = $64;
    $vtable_i = HEAP32[$42 >> 2] | 0;
   }
   $exception_i56 = ___cxa_allocate_exception(8) | 0;
   HEAP32[$exception_i56 >> 2] = 9216;
   $__imp__i_i57 = $exception_i56 + 4 | 0;
   if (($__imp__i_i57 | 0) != 0) {
    $call3_i1_i1_i61 = __Znaj(33) | 0;
    HEAP32[$call3_i1_i1_i61 + 4 >> 2] = 20;
    HEAP32[$call3_i1_i1_i61 >> 2] = 20;
    $add_ptr_i_i_i64 = $call3_i1_i1_i61 + 12 | 0;
    HEAP32[$__imp__i_i57 >> 2] = $add_ptr_i_i_i64;
    HEAP32[$call3_i1_i1_i61 + 8 >> 2] = 0;
    _memcpy($add_ptr_i_i_i64 | 0, 2192, 21) | 0;
   }
   ___cxa_throw($exception_i56 | 0, 15344, 72);
  }
 } while (0);
 if ((HEAP8[$__size__i_i_i120] & 1) == 0) {
  STACKTOP = __stackBase__;
  return;
 }
 __ZdlPv(HEAP32[$__ndflt + 8 >> 2] | 0);
 STACKTOP = __stackBase__;
 return;
}
function __ZNSt3__17codecvtIwc10_mbstate_tED2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 10312;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (($1 | 0) == 0) {
  return;
 }
 _freelocale($1 | 0);
 return;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this | 0;
 var $exception = 0, $__imp__i = 0, $call3_i1_i1 = 0, $add_ptr_i_i = 0, $5 = 0;
 $exception = ___cxa_allocate_exception(8) | 0;
 HEAP32[$exception >> 2] = 9280;
 $__imp__i = $exception + 4 | 0;
 if (($__imp__i | 0) == 0) {
  $5 = $exception;
  HEAP32[$5 >> 2] = 9248;
  ___cxa_throw($exception | 0, 15360, 100);
 }
 $call3_i1_i1 = __Znaj(19) | 0;
 HEAP32[$call3_i1_i1 + 4 >> 2] = 6;
 HEAP32[$call3_i1_i1 >> 2] = 6;
 $add_ptr_i_i = $call3_i1_i1 + 12 | 0;
 HEAP32[$__imp__i >> 2] = $add_ptr_i_i;
 HEAP32[$call3_i1_i1 + 8 >> 2] = 0;
 HEAP8[$add_ptr_i_i] = HEAP8[3352] | 0;
 HEAP8[$add_ptr_i_i + 1 | 0] = HEAP8[3353 | 0] | 0;
 HEAP8[$add_ptr_i_i + 2 | 0] = HEAP8[3354 | 0] | 0;
 HEAP8[$add_ptr_i_i + 3 | 0] = HEAP8[3355 | 0] | 0;
 HEAP8[$add_ptr_i_i + 4 | 0] = HEAP8[3356 | 0] | 0;
 HEAP8[$add_ptr_i_i + 5 | 0] = HEAP8[3357 | 0] | 0;
 HEAP8[$add_ptr_i_i + 6 | 0] = HEAP8[3358 | 0] | 0;
 $5 = $exception;
 HEAP32[$5 >> 2] = 9248;
 ___cxa_throw($exception | 0, 15360, 100);
}
function __ZNSt3__16locale5__impC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $__p_i_i_i1479 = 0, $__p_i_i_i1423 = 0, $__p_i_i_i1367 = 0, $__p_i_i_i1305 = 0, $__p_i_i_i1248 = 0, $__p_i_i_i1192 = 0, $__p_i_i_i1136 = 0, $__p_i_i_i1080 = 0, $__p_i_i_i1024 = 0, $__p_i_i_i968 = 0, $__p_i_i_i912 = 0, $__p_i_i_i856 = 0, $__p_i_i_i800 = 0, $__p_i_i_i744 = 0, $__p_i_i_i688 = 0, $__p_i_i_i632 = 0, $__p_i_i_i576 = 0, $__p_i_i_i520 = 0, $__p_i_i_i464 = 0, $__p_i_i_i408 = 0, $__p_i_i_i352 = 0, $__p_i_i_i296 = 0, $__p_i_i_i240 = 0, $__p_i_i_i184 = 0, $__p_i_i_i128 = 0, $__p_i_i_i72 = 0, $__p_i_i_i16 = 0, $__p_i_i_i = 0, $facets_ = 0, $__begin__i_i2 = 0, $__end__i_i = 0, $buf__i_i_i_i = 0, $1 = 0, $2 = 0, $__n_addr_0_i_i = 0, $3 = 0, $name_ = 0, $__s2_i_i = 0, $4 = 0, $10 = 0, $sub_i_i = 0, $12 = 0, $13 = 0, $sub_ptr_div_i_i = 0, $add_ptr_i_i14 = 0, $20 = 0, $21 = 0, $__shared_owners__i7_i = 0, $29 = 0, $sub_i_i22 = 0, $31 = 0, $32 = 0, $sub_ptr_div_i_i32 = 0, $add_ptr_i_i42 = 0, $39 = 0, $40 = 0, $__shared_owners__i7_i62 = 0, $50 = 0, $sub_i_i78 = 0, $52 = 0, $53 = 0, $sub_ptr_div_i_i88 = 0, $add_ptr_i_i98 = 0, $60 = 0, $61 = 0, $__shared_owners__i7_i118 = 0, $69 = 0, $sub_i_i134 = 0, $71 = 0, $72 = 0, $sub_ptr_div_i_i144 = 0, $add_ptr_i_i154 = 0, $79 = 0, $80 = 0, $__shared_owners__i7_i174 = 0, $88 = 0, $sub_i_i190 = 0, $90 = 0, $91 = 0, $sub_ptr_div_i_i200 = 0, $add_ptr_i_i210 = 0, $98 = 0, $99 = 0, $__shared_owners__i7_i230 = 0, $107 = 0, $sub_i_i246 = 0, $109 = 0, $110 = 0, $sub_ptr_div_i_i256 = 0, $add_ptr_i_i266 = 0, $117 = 0, $118 = 0, $__shared_owners__i7_i286 = 0, $126 = 0, $sub_i_i302 = 0, $128 = 0, $129 = 0, $sub_ptr_div_i_i312 = 0, $add_ptr_i_i322 = 0, $136 = 0, $137 = 0, $__shared_owners__i7_i342 = 0, $145 = 0, $sub_i_i358 = 0, $147 = 0, $148 = 0, $sub_ptr_div_i_i368 = 0, $add_ptr_i_i378 = 0, $155 = 0, $156 = 0, $__shared_owners__i7_i398 = 0, $164 = 0, $sub_i_i414 = 0, $166 = 0, $167 = 0, $sub_ptr_div_i_i424 = 0, $add_ptr_i_i434 = 0, $174 = 0, $175 = 0, $__shared_owners__i7_i454 = 0, $183 = 0, $sub_i_i470 = 0, $185 = 0, $186 = 0, $sub_ptr_div_i_i480 = 0, $add_ptr_i_i490 = 0, $193 = 0, $194 = 0, $__shared_owners__i7_i510 = 0, $202 = 0, $sub_i_i526 = 0, $204 = 0, $205 = 0, $sub_ptr_div_i_i536 = 0, $add_ptr_i_i546 = 0, $212 = 0, $213 = 0, $__shared_owners__i7_i566 = 0, $221 = 0, $sub_i_i582 = 0, $223 = 0, $224 = 0, $sub_ptr_div_i_i592 = 0, $add_ptr_i_i602 = 0, $231 = 0, $232 = 0, $__shared_owners__i7_i622 = 0, $240 = 0, $sub_i_i638 = 0, $242 = 0, $243 = 0, $sub_ptr_div_i_i648 = 0, $add_ptr_i_i658 = 0, $250 = 0, $251 = 0, $__shared_owners__i7_i678 = 0, $259 = 0, $sub_i_i694 = 0, $261 = 0, $262 = 0, $sub_ptr_div_i_i704 = 0, $add_ptr_i_i714 = 0, $269 = 0, $270 = 0, $__shared_owners__i7_i734 = 0, $278 = 0, $sub_i_i750 = 0, $280 = 0, $281 = 0, $sub_ptr_div_i_i760 = 0, $add_ptr_i_i770 = 0, $288 = 0, $289 = 0, $__shared_owners__i7_i790 = 0, $297 = 0, $sub_i_i806 = 0, $299 = 0, $300 = 0, $sub_ptr_div_i_i816 = 0, $add_ptr_i_i826 = 0, $307 = 0, $308 = 0, $__shared_owners__i7_i846 = 0, $316 = 0, $sub_i_i862 = 0, $318 = 0, $319 = 0, $sub_ptr_div_i_i872 = 0, $add_ptr_i_i882 = 0, $326 = 0, $327 = 0, $__shared_owners__i7_i902 = 0, $335 = 0, $sub_i_i918 = 0, $337 = 0, $338 = 0, $sub_ptr_div_i_i928 = 0, $add_ptr_i_i938 = 0, $345 = 0, $346 = 0, $__shared_owners__i7_i958 = 0, $354 = 0, $sub_i_i974 = 0, $356 = 0, $357 = 0, $sub_ptr_div_i_i984 = 0, $add_ptr_i_i994 = 0, $364 = 0, $365 = 0, $__shared_owners__i7_i1014 = 0, $373 = 0, $sub_i_i1030 = 0, $375 = 0, $376 = 0, $sub_ptr_div_i_i1040 = 0, $add_ptr_i_i1050 = 0, $383 = 0, $384 = 0, $__shared_owners__i7_i1070 = 0, $392 = 0, $sub_i_i1086 = 0, $394 = 0, $395 = 0, $sub_ptr_div_i_i1096 = 0, $add_ptr_i_i1106 = 0, $402 = 0, $403 = 0, $__shared_owners__i7_i1126 = 0, $411 = 0, $sub_i_i1142 = 0, $413 = 0, $414 = 0, $sub_ptr_div_i_i1152 = 0, $add_ptr_i_i1162 = 0, $421 = 0, $422 = 0, $__shared_owners__i7_i1182 = 0, $430 = 0, $sub_i_i1198 = 0, $432 = 0, $433 = 0, $sub_ptr_div_i_i1208 = 0, $add_ptr_i_i1218 = 0, $440 = 0, $441 = 0, $__shared_owners__i7_i1238 = 0, $449 = 0, $sub_i_i1254 = 0, $451 = 0, $452 = 0, $sub_ptr_div_i_i1264 = 0, $add_ptr_i_i1274 = 0, $459 = 0, $460 = 0, $__shared_owners__i7_i1294 = 0, $call_i1_i1304 = 0, $466 = 0, $469 = 0, $sub_i_i1311 = 0, $471 = 0, $472 = 0, $sub_ptr_div_i_i1321 = 0, $add_ptr_i_i1331 = 0, $479 = 0, $480 = 0, $__shared_owners__i7_i1351 = 0, $call_i1_i1366 = 0, $486 = 0, $489 = 0, $sub_i_i1373 = 0, $491 = 0, $492 = 0, $sub_ptr_div_i_i1383 = 0, $add_ptr_i_i1393 = 0, $499 = 0, $500 = 0, $__shared_owners__i7_i1413 = 0, $508 = 0, $sub_i_i1429 = 0, $510 = 0, $511 = 0, $sub_ptr_div_i_i1439 = 0, $add_ptr_i_i1449 = 0, $518 = 0, $519 = 0, $__shared_owners__i7_i1469 = 0, $527 = 0, $sub_i_i1485 = 0, $529 = 0, $530 = 0, $sub_ptr_div_i_i1495 = 0, $add_ptr_i_i1505 = 0, $537 = 0, $538 = 0, $__shared_owners__i7_i1525 = 0, $543 = 0, $arrayidx_i24_i1531 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 448 | 0;
 $__p_i_i_i1479 = __stackBase__ | 0;
 $__p_i_i_i1423 = __stackBase__ + 16 | 0;
 $__p_i_i_i1367 = __stackBase__ + 32 | 0;
 $__p_i_i_i1305 = __stackBase__ + 48 | 0;
 $__p_i_i_i1248 = __stackBase__ + 64 | 0;
 $__p_i_i_i1192 = __stackBase__ + 80 | 0;
 $__p_i_i_i1136 = __stackBase__ + 96 | 0;
 $__p_i_i_i1080 = __stackBase__ + 112 | 0;
 $__p_i_i_i1024 = __stackBase__ + 128 | 0;
 $__p_i_i_i968 = __stackBase__ + 144 | 0;
 $__p_i_i_i912 = __stackBase__ + 160 | 0;
 $__p_i_i_i856 = __stackBase__ + 176 | 0;
 $__p_i_i_i800 = __stackBase__ + 192 | 0;
 $__p_i_i_i744 = __stackBase__ + 208 | 0;
 $__p_i_i_i688 = __stackBase__ + 224 | 0;
 $__p_i_i_i632 = __stackBase__ + 240 | 0;
 $__p_i_i_i576 = __stackBase__ + 256 | 0;
 $__p_i_i_i520 = __stackBase__ + 272 | 0;
 $__p_i_i_i464 = __stackBase__ + 288 | 0;
 $__p_i_i_i408 = __stackBase__ + 304 | 0;
 $__p_i_i_i352 = __stackBase__ + 320 | 0;
 $__p_i_i_i296 = __stackBase__ + 336 | 0;
 $__p_i_i_i240 = __stackBase__ + 352 | 0;
 $__p_i_i_i184 = __stackBase__ + 368 | 0;
 $__p_i_i_i128 = __stackBase__ + 384 | 0;
 $__p_i_i_i72 = __stackBase__ + 400 | 0;
 $__p_i_i_i16 = __stackBase__ + 416 | 0;
 $__p_i_i_i = __stackBase__ + 432 | 0;
 HEAP32[$this + 4 >> 2] = $refs - 1;
 HEAP32[$this >> 2] = 10568;
 $facets_ = $this + 8 | 0;
 $__begin__i_i2 = $facets_ | 0;
 $__end__i_i = $this + 12 | 0;
 HEAP8[$this + 136 | 0] = 1;
 $buf__i_i_i_i = $this + 24 | 0;
 $1 = $buf__i_i_i_i;
 HEAP32[$__end__i_i >> 2] = $1;
 HEAP32[$__begin__i_i2 >> 2] = $1;
 HEAP32[$this + 16 >> 2] = $buf__i_i_i_i + 112;
 $__n_addr_0_i_i = 28;
 $2 = $1;
 do {
  if (($2 | 0) == 0) {
   $3 = 0;
  } else {
   HEAP32[$2 >> 2] = 0;
   $3 = HEAP32[$__end__i_i >> 2] | 0;
  }
  $2 = $3 + 4 | 0;
  HEAP32[$__end__i_i >> 2] = $2;
  $__n_addr_0_i_i = $__n_addr_0_i_i - 1 | 0;
 } while (($__n_addr_0_i_i | 0) != 0);
 $name_ = $this + 144 | 0;
 $__s2_i_i = $name_;
 HEAP8[$name_] = 2;
 HEAP8[$__s2_i_i + 1 | 0] = 67;
 HEAP8[$__s2_i_i + 2 | 0] = 0;
 $4 = HEAP32[$__begin__i_i2 >> 2] | 0;
 if (($4 | 0) != ($2 | 0)) {
  HEAP32[$__end__i_i >> 2] = $3 + (-(($3 + (-$4 | 0) | 0) >>> 2) << 2);
 }
 HEAP32[2101] = 0;
 HEAP32[2100] = 10272;
 if ((HEAP32[4374] | 0) != -1) {
  HEAP32[$__p_i_i_i >> 2] = 17496;
  HEAP32[$__p_i_i_i + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17496, $__p_i_i_i, 102);
 }
 $10 = HEAP32[4375] | 0;
 $sub_i_i = $10 - 1 | 0;
 tempValue = HEAP32[2101] | 0, HEAP32[2101] = tempValue + 1, tempValue;
 $12 = HEAP32[$__end__i_i >> 2] | 0;
 $13 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i = $12 - $13 >> 2;
 do {
  if ($sub_ptr_div_i_i >>> 0 > $sub_i_i >>> 0) {
   $20 = $13;
  } else {
   if ($sub_ptr_div_i_i >>> 0 < $10 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $10 - $sub_ptr_div_i_i | 0);
    $20 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i >>> 0 <= $10 >>> 0) {
    $20 = $13;
    break;
   }
   $add_ptr_i_i14 = $13 + ($10 << 2) | 0;
   if (($add_ptr_i_i14 | 0) == ($12 | 0)) {
    $20 = $13;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $12 + ((($12 - 4 + (-$add_ptr_i_i14 | 0) | 0) >>> 2 ^ -1) << 2);
   $20 = $13;
  }
 } while (0);
 $21 = HEAP32[$20 + ($sub_i_i << 2) >> 2] | 0;
 do {
  if (($21 | 0) != 0) {
   $__shared_owners__i7_i = $21 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i >> 2] | 0, HEAP32[$__shared_owners__i7_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$21 >> 2] | 0) + 8 >> 2] & 511]($21 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i << 2) >> 2] = 8400;
 HEAP32[2099] = 0;
 HEAP32[2098] = 10232;
 if ((HEAP32[4372] | 0) != -1) {
  HEAP32[$__p_i_i_i16 >> 2] = 17488;
  HEAP32[$__p_i_i_i16 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i16 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17488, $__p_i_i_i16, 102);
 }
 $29 = HEAP32[4373] | 0;
 $sub_i_i22 = $29 - 1 | 0;
 tempValue = HEAP32[2099] | 0, HEAP32[2099] = tempValue + 1, tempValue;
 $31 = HEAP32[$__end__i_i >> 2] | 0;
 $32 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i32 = $31 - $32 >> 2;
 do {
  if ($sub_ptr_div_i_i32 >>> 0 > $sub_i_i22 >>> 0) {
   $39 = $32;
  } else {
   if ($sub_ptr_div_i_i32 >>> 0 < $29 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $29 - $sub_ptr_div_i_i32 | 0);
    $39 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i32 >>> 0 <= $29 >>> 0) {
    $39 = $32;
    break;
   }
   $add_ptr_i_i42 = $32 + ($29 << 2) | 0;
   if (($add_ptr_i_i42 | 0) == ($31 | 0)) {
    $39 = $32;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $31 + ((($31 - 4 + (-$add_ptr_i_i42 | 0) | 0) >>> 2 ^ -1) << 2);
   $39 = $32;
  }
 } while (0);
 $40 = HEAP32[$39 + ($sub_i_i22 << 2) >> 2] | 0;
 do {
  if (($40 | 0) != 0) {
   $__shared_owners__i7_i62 = $40 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i62 >> 2] | 0, HEAP32[$__shared_owners__i7_i62 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$40 >> 2] | 0) + 8 >> 2] & 511]($40 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i22 << 2) >> 2] = 8392;
 HEAP32[2155] = 0;
 HEAP32[2154] = 10680;
 HEAP32[2156] = 0;
 HEAP8[8628] = 0;
 HEAP32[2156] = HEAP32[(___ctype_b_loc() | 0) >> 2];
 if ((HEAP32[4454] | 0) != -1) {
  HEAP32[$__p_i_i_i72 >> 2] = 17816;
  HEAP32[$__p_i_i_i72 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i72 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17816, $__p_i_i_i72, 102);
 }
 $50 = HEAP32[4455] | 0;
 $sub_i_i78 = $50 - 1 | 0;
 tempValue = HEAP32[2155] | 0, HEAP32[2155] = tempValue + 1, tempValue;
 $52 = HEAP32[$__end__i_i >> 2] | 0;
 $53 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i88 = $52 - $53 >> 2;
 do {
  if ($sub_ptr_div_i_i88 >>> 0 > $sub_i_i78 >>> 0) {
   $60 = $53;
  } else {
   if ($sub_ptr_div_i_i88 >>> 0 < $50 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $50 - $sub_ptr_div_i_i88 | 0);
    $60 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i88 >>> 0 <= $50 >>> 0) {
    $60 = $53;
    break;
   }
   $add_ptr_i_i98 = $53 + ($50 << 2) | 0;
   if (($add_ptr_i_i98 | 0) == ($52 | 0)) {
    $60 = $53;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $52 + ((($52 - 4 + (-$add_ptr_i_i98 | 0) | 0) >>> 2 ^ -1) << 2);
   $60 = $53;
  }
 } while (0);
 $61 = HEAP32[$60 + ($sub_i_i78 << 2) >> 2] | 0;
 do {
  if (($61 | 0) != 0) {
   $__shared_owners__i7_i118 = $61 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i118 >> 2] | 0, HEAP32[$__shared_owners__i7_i118 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$61 >> 2] | 0) + 8 >> 2] & 511]($61 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i78 << 2) >> 2] = 8616;
 HEAP32[2153] = 0;
 HEAP32[2152] = 10600;
 if ((HEAP32[4452] | 0) != -1) {
  HEAP32[$__p_i_i_i128 >> 2] = 17808;
  HEAP32[$__p_i_i_i128 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i128 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17808, $__p_i_i_i128, 102);
 }
 $69 = HEAP32[4453] | 0;
 $sub_i_i134 = $69 - 1 | 0;
 tempValue = HEAP32[2153] | 0, HEAP32[2153] = tempValue + 1, tempValue;
 $71 = HEAP32[$__end__i_i >> 2] | 0;
 $72 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i144 = $71 - $72 >> 2;
 do {
  if ($sub_ptr_div_i_i144 >>> 0 > $sub_i_i134 >>> 0) {
   $79 = $72;
  } else {
   if ($sub_ptr_div_i_i144 >>> 0 < $69 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $69 - $sub_ptr_div_i_i144 | 0);
    $79 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i144 >>> 0 <= $69 >>> 0) {
    $79 = $72;
    break;
   }
   $add_ptr_i_i154 = $72 + ($69 << 2) | 0;
   if (($add_ptr_i_i154 | 0) == ($71 | 0)) {
    $79 = $72;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $71 + ((($71 - 4 + (-$add_ptr_i_i154 | 0) | 0) >>> 2 ^ -1) << 2);
   $79 = $72;
  }
 } while (0);
 $80 = HEAP32[$79 + ($sub_i_i134 << 2) >> 2] | 0;
 do {
  if (($80 | 0) != 0) {
   $__shared_owners__i7_i174 = $80 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i174 >> 2] | 0, HEAP32[$__shared_owners__i7_i174 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$80 >> 2] | 0) + 8 >> 2] & 511]($80 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i134 << 2) >> 2] = 8608;
 HEAP32[2107] = 0;
 HEAP32[2106] = 10368;
 if ((HEAP32[4378] | 0) != -1) {
  HEAP32[$__p_i_i_i184 >> 2] = 17512;
  HEAP32[$__p_i_i_i184 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i184 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17512, $__p_i_i_i184, 102);
 }
 $88 = HEAP32[4379] | 0;
 $sub_i_i190 = $88 - 1 | 0;
 tempValue = HEAP32[2107] | 0, HEAP32[2107] = tempValue + 1, tempValue;
 $90 = HEAP32[$__end__i_i >> 2] | 0;
 $91 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i200 = $90 - $91 >> 2;
 do {
  if ($sub_ptr_div_i_i200 >>> 0 > $sub_i_i190 >>> 0) {
   $98 = $91;
  } else {
   if ($sub_ptr_div_i_i200 >>> 0 < $88 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $88 - $sub_ptr_div_i_i200 | 0);
    $98 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i200 >>> 0 <= $88 >>> 0) {
    $98 = $91;
    break;
   }
   $add_ptr_i_i210 = $91 + ($88 << 2) | 0;
   if (($add_ptr_i_i210 | 0) == ($90 | 0)) {
    $98 = $91;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $90 + ((($90 - 4 + (-$add_ptr_i_i210 | 0) | 0) >>> 2 ^ -1) << 2);
   $98 = $91;
  }
 } while (0);
 $99 = HEAP32[$98 + ($sub_i_i190 << 2) >> 2] | 0;
 do {
  if (($99 | 0) != 0) {
   $__shared_owners__i7_i230 = $99 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i230 >> 2] | 0, HEAP32[$__shared_owners__i7_i230 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$99 >> 2] | 0) + 8 >> 2] & 511]($99 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i190 << 2) >> 2] = 8424;
 HEAP32[2103] = 0;
 HEAP32[2102] = 10312;
 HEAP32[2104] = 0;
 if ((HEAP32[4376] | 0) != -1) {
  HEAP32[$__p_i_i_i240 >> 2] = 17504;
  HEAP32[$__p_i_i_i240 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i240 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17504, $__p_i_i_i240, 102);
 }
 $107 = HEAP32[4377] | 0;
 $sub_i_i246 = $107 - 1 | 0;
 tempValue = HEAP32[2103] | 0, HEAP32[2103] = tempValue + 1, tempValue;
 $109 = HEAP32[$__end__i_i >> 2] | 0;
 $110 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i256 = $109 - $110 >> 2;
 do {
  if ($sub_ptr_div_i_i256 >>> 0 > $sub_i_i246 >>> 0) {
   $117 = $110;
  } else {
   if ($sub_ptr_div_i_i256 >>> 0 < $107 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $107 - $sub_ptr_div_i_i256 | 0);
    $117 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i256 >>> 0 <= $107 >>> 0) {
    $117 = $110;
    break;
   }
   $add_ptr_i_i266 = $110 + ($107 << 2) | 0;
   if (($add_ptr_i_i266 | 0) == ($109 | 0)) {
    $117 = $110;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $109 + ((($109 - 4 + (-$add_ptr_i_i266 | 0) | 0) >>> 2 ^ -1) << 2);
   $117 = $110;
  }
 } while (0);
 $118 = HEAP32[$117 + ($sub_i_i246 << 2) >> 2] | 0;
 do {
  if (($118 | 0) != 0) {
   $__shared_owners__i7_i286 = $118 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i286 >> 2] | 0, HEAP32[$__shared_owners__i7_i286 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$118 >> 2] | 0) + 8 >> 2] & 511]($118 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i246 << 2) >> 2] = 8408;
 HEAP32[2109] = 0;
 HEAP32[2108] = 10424;
 if ((HEAP32[4380] | 0) != -1) {
  HEAP32[$__p_i_i_i296 >> 2] = 17520;
  HEAP32[$__p_i_i_i296 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i296 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17520, $__p_i_i_i296, 102);
 }
 $126 = HEAP32[4381] | 0;
 $sub_i_i302 = $126 - 1 | 0;
 tempValue = HEAP32[2109] | 0, HEAP32[2109] = tempValue + 1, tempValue;
 $128 = HEAP32[$__end__i_i >> 2] | 0;
 $129 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i312 = $128 - $129 >> 2;
 do {
  if ($sub_ptr_div_i_i312 >>> 0 > $sub_i_i302 >>> 0) {
   $136 = $129;
  } else {
   if ($sub_ptr_div_i_i312 >>> 0 < $126 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $126 - $sub_ptr_div_i_i312 | 0);
    $136 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i312 >>> 0 <= $126 >>> 0) {
    $136 = $129;
    break;
   }
   $add_ptr_i_i322 = $129 + ($126 << 2) | 0;
   if (($add_ptr_i_i322 | 0) == ($128 | 0)) {
    $136 = $129;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $128 + ((($128 - 4 + (-$add_ptr_i_i322 | 0) | 0) >>> 2 ^ -1) << 2);
   $136 = $129;
  }
 } while (0);
 $137 = HEAP32[$136 + ($sub_i_i302 << 2) >> 2] | 0;
 do {
  if (($137 | 0) != 0) {
   $__shared_owners__i7_i342 = $137 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i342 >> 2] | 0, HEAP32[$__shared_owners__i7_i342 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$137 >> 2] | 0) + 8 >> 2] & 511]($137 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i302 << 2) >> 2] = 8432;
 HEAP32[2111] = 0;
 HEAP32[2110] = 10480;
 if ((HEAP32[4382] | 0) != -1) {
  HEAP32[$__p_i_i_i352 >> 2] = 17528;
  HEAP32[$__p_i_i_i352 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i352 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17528, $__p_i_i_i352, 102);
 }
 $145 = HEAP32[4383] | 0;
 $sub_i_i358 = $145 - 1 | 0;
 tempValue = HEAP32[2111] | 0, HEAP32[2111] = tempValue + 1, tempValue;
 $147 = HEAP32[$__end__i_i >> 2] | 0;
 $148 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i368 = $147 - $148 >> 2;
 do {
  if ($sub_ptr_div_i_i368 >>> 0 > $sub_i_i358 >>> 0) {
   $155 = $148;
  } else {
   if ($sub_ptr_div_i_i368 >>> 0 < $145 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $145 - $sub_ptr_div_i_i368 | 0);
    $155 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i368 >>> 0 <= $145 >>> 0) {
    $155 = $148;
    break;
   }
   $add_ptr_i_i378 = $148 + ($145 << 2) | 0;
   if (($add_ptr_i_i378 | 0) == ($147 | 0)) {
    $155 = $148;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $147 + ((($147 - 4 + (-$add_ptr_i_i378 | 0) | 0) >>> 2 ^ -1) << 2);
   $155 = $148;
  }
 } while (0);
 $156 = HEAP32[$155 + ($sub_i_i358 << 2) >> 2] | 0;
 do {
  if (($156 | 0) != 0) {
   $__shared_owners__i7_i398 = $156 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i398 >> 2] | 0, HEAP32[$__shared_owners__i7_i398 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$156 >> 2] | 0) + 8 >> 2] & 511]($156 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i358 << 2) >> 2] = 8440;
 HEAP32[2081] = 0;
 HEAP32[2080] = 9776;
 HEAP8[8328] = 46;
 HEAP8[8329] = 44;
 _memset(8332, 0, 12);
 if ((HEAP32[4358] | 0) != -1) {
  HEAP32[$__p_i_i_i408 >> 2] = 17432;
  HEAP32[$__p_i_i_i408 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i408 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17432, $__p_i_i_i408, 102);
 }
 $164 = HEAP32[4359] | 0;
 $sub_i_i414 = $164 - 1 | 0;
 tempValue = HEAP32[2081] | 0, HEAP32[2081] = tempValue + 1, tempValue;
 $166 = HEAP32[$__end__i_i >> 2] | 0;
 $167 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i424 = $166 - $167 >> 2;
 do {
  if ($sub_ptr_div_i_i424 >>> 0 > $sub_i_i414 >>> 0) {
   $174 = $167;
  } else {
   if ($sub_ptr_div_i_i424 >>> 0 < $164 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $164 - $sub_ptr_div_i_i424 | 0);
    $174 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i424 >>> 0 <= $164 >>> 0) {
    $174 = $167;
    break;
   }
   $add_ptr_i_i434 = $167 + ($164 << 2) | 0;
   if (($add_ptr_i_i434 | 0) == ($166 | 0)) {
    $174 = $167;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $166 + ((($166 - 4 + (-$add_ptr_i_i434 | 0) | 0) >>> 2 ^ -1) << 2);
   $174 = $167;
  }
 } while (0);
 $175 = HEAP32[$174 + ($sub_i_i414 << 2) >> 2] | 0;
 do {
  if (($175 | 0) != 0) {
   $__shared_owners__i7_i454 = $175 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i454 >> 2] | 0, HEAP32[$__shared_owners__i7_i454 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$175 >> 2] | 0) + 8 >> 2] & 511]($175 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i414 << 2) >> 2] = 8320;
 HEAP32[2073] = 0;
 HEAP32[2072] = 9728;
 HEAP32[2074] = 46;
 HEAP32[2075] = 44;
 _memset(8304, 0, 12);
 if ((HEAP32[4356] | 0) != -1) {
  HEAP32[$__p_i_i_i464 >> 2] = 17424;
  HEAP32[$__p_i_i_i464 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i464 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17424, $__p_i_i_i464, 102);
 }
 $183 = HEAP32[4357] | 0;
 $sub_i_i470 = $183 - 1 | 0;
 tempValue = HEAP32[2073] | 0, HEAP32[2073] = tempValue + 1, tempValue;
 $185 = HEAP32[$__end__i_i >> 2] | 0;
 $186 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i480 = $185 - $186 >> 2;
 do {
  if ($sub_ptr_div_i_i480 >>> 0 > $sub_i_i470 >>> 0) {
   $193 = $186;
  } else {
   if ($sub_ptr_div_i_i480 >>> 0 < $183 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $183 - $sub_ptr_div_i_i480 | 0);
    $193 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i480 >>> 0 <= $183 >>> 0) {
    $193 = $186;
    break;
   }
   $add_ptr_i_i490 = $186 + ($183 << 2) | 0;
   if (($add_ptr_i_i490 | 0) == ($185 | 0)) {
    $193 = $186;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $185 + ((($185 - 4 + (-$add_ptr_i_i490 | 0) | 0) >>> 2 ^ -1) << 2);
   $193 = $186;
  }
 } while (0);
 $194 = HEAP32[$193 + ($sub_i_i470 << 2) >> 2] | 0;
 do {
  if (($194 | 0) != 0) {
   $__shared_owners__i7_i510 = $194 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i510 >> 2] | 0, HEAP32[$__shared_owners__i7_i510 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$194 >> 2] | 0) + 8 >> 2] & 511]($194 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i470 << 2) >> 2] = 8288;
 HEAP32[2097] = 0;
 HEAP32[2096] = 10160;
 if ((HEAP32[4370] | 0) != -1) {
  HEAP32[$__p_i_i_i520 >> 2] = 17480;
  HEAP32[$__p_i_i_i520 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i520 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17480, $__p_i_i_i520, 102);
 }
 $202 = HEAP32[4371] | 0;
 $sub_i_i526 = $202 - 1 | 0;
 tempValue = HEAP32[2097] | 0, HEAP32[2097] = tempValue + 1, tempValue;
 $204 = HEAP32[$__end__i_i >> 2] | 0;
 $205 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i536 = $204 - $205 >> 2;
 do {
  if ($sub_ptr_div_i_i536 >>> 0 > $sub_i_i526 >>> 0) {
   $212 = $205;
  } else {
   if ($sub_ptr_div_i_i536 >>> 0 < $202 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $202 - $sub_ptr_div_i_i536 | 0);
    $212 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i536 >>> 0 <= $202 >>> 0) {
    $212 = $205;
    break;
   }
   $add_ptr_i_i546 = $205 + ($202 << 2) | 0;
   if (($add_ptr_i_i546 | 0) == ($204 | 0)) {
    $212 = $205;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $204 + ((($204 - 4 + (-$add_ptr_i_i546 | 0) | 0) >>> 2 ^ -1) << 2);
   $212 = $205;
  }
 } while (0);
 $213 = HEAP32[$212 + ($sub_i_i526 << 2) >> 2] | 0;
 do {
  if (($213 | 0) != 0) {
   $__shared_owners__i7_i566 = $213 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i566 >> 2] | 0, HEAP32[$__shared_owners__i7_i566 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$213 >> 2] | 0) + 8 >> 2] & 511]($213 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i526 << 2) >> 2] = 8384;
 HEAP32[2095] = 0;
 HEAP32[2094] = 10088;
 if ((HEAP32[4368] | 0) != -1) {
  HEAP32[$__p_i_i_i576 >> 2] = 17472;
  HEAP32[$__p_i_i_i576 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i576 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17472, $__p_i_i_i576, 102);
 }
 $221 = HEAP32[4369] | 0;
 $sub_i_i582 = $221 - 1 | 0;
 tempValue = HEAP32[2095] | 0, HEAP32[2095] = tempValue + 1, tempValue;
 $223 = HEAP32[$__end__i_i >> 2] | 0;
 $224 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i592 = $223 - $224 >> 2;
 do {
  if ($sub_ptr_div_i_i592 >>> 0 > $sub_i_i582 >>> 0) {
   $231 = $224;
  } else {
   if ($sub_ptr_div_i_i592 >>> 0 < $221 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $221 - $sub_ptr_div_i_i592 | 0);
    $231 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i592 >>> 0 <= $221 >>> 0) {
    $231 = $224;
    break;
   }
   $add_ptr_i_i602 = $224 + ($221 << 2) | 0;
   if (($add_ptr_i_i602 | 0) == ($223 | 0)) {
    $231 = $224;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $223 + ((($223 - 4 + (-$add_ptr_i_i602 | 0) | 0) >>> 2 ^ -1) << 2);
   $231 = $224;
  }
 } while (0);
 $232 = HEAP32[$231 + ($sub_i_i582 << 2) >> 2] | 0;
 do {
  if (($232 | 0) != 0) {
   $__shared_owners__i7_i622 = $232 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i622 >> 2] | 0, HEAP32[$__shared_owners__i7_i622 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$232 >> 2] | 0) + 8 >> 2] & 511]($232 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i582 << 2) >> 2] = 8376;
 HEAP32[2093] = 0;
 HEAP32[2092] = 10024;
 if ((HEAP32[4366] | 0) != -1) {
  HEAP32[$__p_i_i_i632 >> 2] = 17464;
  HEAP32[$__p_i_i_i632 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i632 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17464, $__p_i_i_i632, 102);
 }
 $240 = HEAP32[4367] | 0;
 $sub_i_i638 = $240 - 1 | 0;
 tempValue = HEAP32[2093] | 0, HEAP32[2093] = tempValue + 1, tempValue;
 $242 = HEAP32[$__end__i_i >> 2] | 0;
 $243 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i648 = $242 - $243 >> 2;
 do {
  if ($sub_ptr_div_i_i648 >>> 0 > $sub_i_i638 >>> 0) {
   $250 = $243;
  } else {
   if ($sub_ptr_div_i_i648 >>> 0 < $240 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $240 - $sub_ptr_div_i_i648 | 0);
    $250 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i648 >>> 0 <= $240 >>> 0) {
    $250 = $243;
    break;
   }
   $add_ptr_i_i658 = $243 + ($240 << 2) | 0;
   if (($add_ptr_i_i658 | 0) == ($242 | 0)) {
    $250 = $243;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $242 + ((($242 - 4 + (-$add_ptr_i_i658 | 0) | 0) >>> 2 ^ -1) << 2);
   $250 = $243;
  }
 } while (0);
 $251 = HEAP32[$250 + ($sub_i_i638 << 2) >> 2] | 0;
 do {
  if (($251 | 0) != 0) {
   $__shared_owners__i7_i678 = $251 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i678 >> 2] | 0, HEAP32[$__shared_owners__i7_i678 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$251 >> 2] | 0) + 8 >> 2] & 511]($251 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i638 << 2) >> 2] = 8368;
 HEAP32[2091] = 0;
 HEAP32[2090] = 9960;
 if ((HEAP32[4364] | 0) != -1) {
  HEAP32[$__p_i_i_i688 >> 2] = 17456;
  HEAP32[$__p_i_i_i688 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i688 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17456, $__p_i_i_i688, 102);
 }
 $259 = HEAP32[4365] | 0;
 $sub_i_i694 = $259 - 1 | 0;
 tempValue = HEAP32[2091] | 0, HEAP32[2091] = tempValue + 1, tempValue;
 $261 = HEAP32[$__end__i_i >> 2] | 0;
 $262 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i704 = $261 - $262 >> 2;
 do {
  if ($sub_ptr_div_i_i704 >>> 0 > $sub_i_i694 >>> 0) {
   $269 = $262;
  } else {
   if ($sub_ptr_div_i_i704 >>> 0 < $259 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $259 - $sub_ptr_div_i_i704 | 0);
    $269 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i704 >>> 0 <= $259 >>> 0) {
    $269 = $262;
    break;
   }
   $add_ptr_i_i714 = $262 + ($259 << 2) | 0;
   if (($add_ptr_i_i714 | 0) == ($261 | 0)) {
    $269 = $262;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $261 + ((($261 - 4 + (-$add_ptr_i_i714 | 0) | 0) >>> 2 ^ -1) << 2);
   $269 = $262;
  }
 } while (0);
 $270 = HEAP32[$269 + ($sub_i_i694 << 2) >> 2] | 0;
 do {
  if (($270 | 0) != 0) {
   $__shared_owners__i7_i734 = $270 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i734 >> 2] | 0, HEAP32[$__shared_owners__i7_i734 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$270 >> 2] | 0) + 8 >> 2] & 511]($270 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i694 << 2) >> 2] = 8360;
 HEAP32[2165] = 0;
 HEAP32[2164] = 11608;
 if ((HEAP32[4584] | 0) != -1) {
  HEAP32[$__p_i_i_i744 >> 2] = 18336;
  HEAP32[$__p_i_i_i744 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i744 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(18336, $__p_i_i_i744, 102);
 }
 $278 = HEAP32[4585] | 0;
 $sub_i_i750 = $278 - 1 | 0;
 tempValue = HEAP32[2165] | 0, HEAP32[2165] = tempValue + 1, tempValue;
 $280 = HEAP32[$__end__i_i >> 2] | 0;
 $281 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i760 = $280 - $281 >> 2;
 do {
  if ($sub_ptr_div_i_i760 >>> 0 > $sub_i_i750 >>> 0) {
   $288 = $281;
  } else {
   if ($sub_ptr_div_i_i760 >>> 0 < $278 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $278 - $sub_ptr_div_i_i760 | 0);
    $288 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i760 >>> 0 <= $278 >>> 0) {
    $288 = $281;
    break;
   }
   $add_ptr_i_i770 = $281 + ($278 << 2) | 0;
   if (($add_ptr_i_i770 | 0) == ($280 | 0)) {
    $288 = $281;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $280 + ((($280 - 4 + (-$add_ptr_i_i770 | 0) | 0) >>> 2 ^ -1) << 2);
   $288 = $281;
  }
 } while (0);
 $289 = HEAP32[$288 + ($sub_i_i750 << 2) >> 2] | 0;
 do {
  if (($289 | 0) != 0) {
   $__shared_owners__i7_i790 = $289 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i790 >> 2] | 0, HEAP32[$__shared_owners__i7_i790 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$289 >> 2] | 0) + 8 >> 2] & 511]($289 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i750 << 2) >> 2] = 8656;
 HEAP32[2163] = 0;
 HEAP32[2162] = 11544;
 if ((HEAP32[4582] | 0) != -1) {
  HEAP32[$__p_i_i_i800 >> 2] = 18328;
  HEAP32[$__p_i_i_i800 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i800 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(18328, $__p_i_i_i800, 102);
 }
 $297 = HEAP32[4583] | 0;
 $sub_i_i806 = $297 - 1 | 0;
 tempValue = HEAP32[2163] | 0, HEAP32[2163] = tempValue + 1, tempValue;
 $299 = HEAP32[$__end__i_i >> 2] | 0;
 $300 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i816 = $299 - $300 >> 2;
 do {
  if ($sub_ptr_div_i_i816 >>> 0 > $sub_i_i806 >>> 0) {
   $307 = $300;
  } else {
   if ($sub_ptr_div_i_i816 >>> 0 < $297 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $297 - $sub_ptr_div_i_i816 | 0);
    $307 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i816 >>> 0 <= $297 >>> 0) {
    $307 = $300;
    break;
   }
   $add_ptr_i_i826 = $300 + ($297 << 2) | 0;
   if (($add_ptr_i_i826 | 0) == ($299 | 0)) {
    $307 = $300;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $299 + ((($299 - 4 + (-$add_ptr_i_i826 | 0) | 0) >>> 2 ^ -1) << 2);
   $307 = $300;
  }
 } while (0);
 $308 = HEAP32[$307 + ($sub_i_i806 << 2) >> 2] | 0;
 do {
  if (($308 | 0) != 0) {
   $__shared_owners__i7_i846 = $308 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i846 >> 2] | 0, HEAP32[$__shared_owners__i7_i846 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$308 >> 2] | 0) + 8 >> 2] & 511]($308 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i806 << 2) >> 2] = 8648;
 HEAP32[2161] = 0;
 HEAP32[2160] = 11480;
 if ((HEAP32[4580] | 0) != -1) {
  HEAP32[$__p_i_i_i856 >> 2] = 18320;
  HEAP32[$__p_i_i_i856 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i856 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(18320, $__p_i_i_i856, 102);
 }
 $316 = HEAP32[4581] | 0;
 $sub_i_i862 = $316 - 1 | 0;
 tempValue = HEAP32[2161] | 0, HEAP32[2161] = tempValue + 1, tempValue;
 $318 = HEAP32[$__end__i_i >> 2] | 0;
 $319 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i872 = $318 - $319 >> 2;
 do {
  if ($sub_ptr_div_i_i872 >>> 0 > $sub_i_i862 >>> 0) {
   $326 = $319;
  } else {
   if ($sub_ptr_div_i_i872 >>> 0 < $316 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $316 - $sub_ptr_div_i_i872 | 0);
    $326 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i872 >>> 0 <= $316 >>> 0) {
    $326 = $319;
    break;
   }
   $add_ptr_i_i882 = $319 + ($316 << 2) | 0;
   if (($add_ptr_i_i882 | 0) == ($318 | 0)) {
    $326 = $319;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $318 + ((($318 - 4 + (-$add_ptr_i_i882 | 0) | 0) >>> 2 ^ -1) << 2);
   $326 = $319;
  }
 } while (0);
 $327 = HEAP32[$326 + ($sub_i_i862 << 2) >> 2] | 0;
 do {
  if (($327 | 0) != 0) {
   $__shared_owners__i7_i902 = $327 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i902 >> 2] | 0, HEAP32[$__shared_owners__i7_i902 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$327 >> 2] | 0) + 8 >> 2] & 511]($327 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i862 << 2) >> 2] = 8640;
 HEAP32[2159] = 0;
 HEAP32[2158] = 11416;
 if ((HEAP32[4578] | 0) != -1) {
  HEAP32[$__p_i_i_i912 >> 2] = 18312;
  HEAP32[$__p_i_i_i912 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i912 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(18312, $__p_i_i_i912, 102);
 }
 $335 = HEAP32[4579] | 0;
 $sub_i_i918 = $335 - 1 | 0;
 tempValue = HEAP32[2159] | 0, HEAP32[2159] = tempValue + 1, tempValue;
 $337 = HEAP32[$__end__i_i >> 2] | 0;
 $338 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i928 = $337 - $338 >> 2;
 do {
  if ($sub_ptr_div_i_i928 >>> 0 > $sub_i_i918 >>> 0) {
   $345 = $338;
  } else {
   if ($sub_ptr_div_i_i928 >>> 0 < $335 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $335 - $sub_ptr_div_i_i928 | 0);
    $345 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i928 >>> 0 <= $335 >>> 0) {
    $345 = $338;
    break;
   }
   $add_ptr_i_i938 = $338 + ($335 << 2) | 0;
   if (($add_ptr_i_i938 | 0) == ($337 | 0)) {
    $345 = $338;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $337 + ((($337 - 4 + (-$add_ptr_i_i938 | 0) | 0) >>> 2 ^ -1) << 2);
   $345 = $338;
  }
 } while (0);
 $346 = HEAP32[$345 + ($sub_i_i918 << 2) >> 2] | 0;
 do {
  if (($346 | 0) != 0) {
   $__shared_owners__i7_i958 = $346 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i958 >> 2] | 0, HEAP32[$__shared_owners__i7_i958 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$346 >> 2] | 0) + 8 >> 2] & 511]($346 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i918 << 2) >> 2] = 8632;
 HEAP32[2055] = 0;
 HEAP32[2054] = 9432;
 if ((HEAP32[4346] | 0) != -1) {
  HEAP32[$__p_i_i_i968 >> 2] = 17384;
  HEAP32[$__p_i_i_i968 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i968 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17384, $__p_i_i_i968, 102);
 }
 $354 = HEAP32[4347] | 0;
 $sub_i_i974 = $354 - 1 | 0;
 tempValue = HEAP32[2055] | 0, HEAP32[2055] = tempValue + 1, tempValue;
 $356 = HEAP32[$__end__i_i >> 2] | 0;
 $357 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i984 = $356 - $357 >> 2;
 do {
  if ($sub_ptr_div_i_i984 >>> 0 > $sub_i_i974 >>> 0) {
   $364 = $357;
  } else {
   if ($sub_ptr_div_i_i984 >>> 0 < $354 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $354 - $sub_ptr_div_i_i984 | 0);
    $364 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i984 >>> 0 <= $354 >>> 0) {
    $364 = $357;
    break;
   }
   $add_ptr_i_i994 = $357 + ($354 << 2) | 0;
   if (($add_ptr_i_i994 | 0) == ($356 | 0)) {
    $364 = $357;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $356 + ((($356 - 4 + (-$add_ptr_i_i994 | 0) | 0) >>> 2 ^ -1) << 2);
   $364 = $357;
  }
 } while (0);
 $365 = HEAP32[$364 + ($sub_i_i974 << 2) >> 2] | 0;
 do {
  if (($365 | 0) != 0) {
   $__shared_owners__i7_i1014 = $365 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i1014 >> 2] | 0, HEAP32[$__shared_owners__i7_i1014 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$365 >> 2] | 0) + 8 >> 2] & 511]($365 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i974 << 2) >> 2] = 8216;
 HEAP32[2053] = 0;
 HEAP32[2052] = 9392;
 if ((HEAP32[4344] | 0) != -1) {
  HEAP32[$__p_i_i_i1024 >> 2] = 17376;
  HEAP32[$__p_i_i_i1024 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i1024 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17376, $__p_i_i_i1024, 102);
 }
 $373 = HEAP32[4345] | 0;
 $sub_i_i1030 = $373 - 1 | 0;
 tempValue = HEAP32[2053] | 0, HEAP32[2053] = tempValue + 1, tempValue;
 $375 = HEAP32[$__end__i_i >> 2] | 0;
 $376 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i1040 = $375 - $376 >> 2;
 do {
  if ($sub_ptr_div_i_i1040 >>> 0 > $sub_i_i1030 >>> 0) {
   $383 = $376;
  } else {
   if ($sub_ptr_div_i_i1040 >>> 0 < $373 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $373 - $sub_ptr_div_i_i1040 | 0);
    $383 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i1040 >>> 0 <= $373 >>> 0) {
    $383 = $376;
    break;
   }
   $add_ptr_i_i1050 = $376 + ($373 << 2) | 0;
   if (($add_ptr_i_i1050 | 0) == ($375 | 0)) {
    $383 = $376;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $375 + ((($375 - 4 + (-$add_ptr_i_i1050 | 0) | 0) >>> 2 ^ -1) << 2);
   $383 = $376;
  }
 } while (0);
 $384 = HEAP32[$383 + ($sub_i_i1030 << 2) >> 2] | 0;
 do {
  if (($384 | 0) != 0) {
   $__shared_owners__i7_i1070 = $384 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i1070 >> 2] | 0, HEAP32[$__shared_owners__i7_i1070 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$384 >> 2] | 0) + 8 >> 2] & 511]($384 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i1030 << 2) >> 2] = 8208;
 HEAP32[2051] = 0;
 HEAP32[2050] = 9352;
 if ((HEAP32[4342] | 0) != -1) {
  HEAP32[$__p_i_i_i1080 >> 2] = 17368;
  HEAP32[$__p_i_i_i1080 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i1080 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17368, $__p_i_i_i1080, 102);
 }
 $392 = HEAP32[4343] | 0;
 $sub_i_i1086 = $392 - 1 | 0;
 tempValue = HEAP32[2051] | 0, HEAP32[2051] = tempValue + 1, tempValue;
 $394 = HEAP32[$__end__i_i >> 2] | 0;
 $395 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i1096 = $394 - $395 >> 2;
 do {
  if ($sub_ptr_div_i_i1096 >>> 0 > $sub_i_i1086 >>> 0) {
   $402 = $395;
  } else {
   if ($sub_ptr_div_i_i1096 >>> 0 < $392 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $392 - $sub_ptr_div_i_i1096 | 0);
    $402 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i1096 >>> 0 <= $392 >>> 0) {
    $402 = $395;
    break;
   }
   $add_ptr_i_i1106 = $395 + ($392 << 2) | 0;
   if (($add_ptr_i_i1106 | 0) == ($394 | 0)) {
    $402 = $395;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $394 + ((($394 - 4 + (-$add_ptr_i_i1106 | 0) | 0) >>> 2 ^ -1) << 2);
   $402 = $395;
  }
 } while (0);
 $403 = HEAP32[$402 + ($sub_i_i1086 << 2) >> 2] | 0;
 do {
  if (($403 | 0) != 0) {
   $__shared_owners__i7_i1126 = $403 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i1126 >> 2] | 0, HEAP32[$__shared_owners__i7_i1126 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$403 >> 2] | 0) + 8 >> 2] & 511]($403 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i1086 << 2) >> 2] = 8200;
 HEAP32[2049] = 0;
 HEAP32[2048] = 9312;
 if ((HEAP32[4340] | 0) != -1) {
  HEAP32[$__p_i_i_i1136 >> 2] = 17360;
  HEAP32[$__p_i_i_i1136 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i1136 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17360, $__p_i_i_i1136, 102);
 }
 $411 = HEAP32[4341] | 0;
 $sub_i_i1142 = $411 - 1 | 0;
 tempValue = HEAP32[2049] | 0, HEAP32[2049] = tempValue + 1, tempValue;
 $413 = HEAP32[$__end__i_i >> 2] | 0;
 $414 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i1152 = $413 - $414 >> 2;
 do {
  if ($sub_ptr_div_i_i1152 >>> 0 > $sub_i_i1142 >>> 0) {
   $421 = $414;
  } else {
   if ($sub_ptr_div_i_i1152 >>> 0 < $411 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $411 - $sub_ptr_div_i_i1152 | 0);
    $421 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i1152 >>> 0 <= $411 >>> 0) {
    $421 = $414;
    break;
   }
   $add_ptr_i_i1162 = $414 + ($411 << 2) | 0;
   if (($add_ptr_i_i1162 | 0) == ($413 | 0)) {
    $421 = $414;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $413 + ((($413 - 4 + (-$add_ptr_i_i1162 | 0) | 0) >>> 2 ^ -1) << 2);
   $421 = $414;
  }
 } while (0);
 $422 = HEAP32[$421 + ($sub_i_i1142 << 2) >> 2] | 0;
 do {
  if (($422 | 0) != 0) {
   $__shared_owners__i7_i1182 = $422 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i1182 >> 2] | 0, HEAP32[$__shared_owners__i7_i1182 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$422 >> 2] | 0) + 8 >> 2] & 511]($422 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i1142 << 2) >> 2] = 8192;
 HEAP32[2069] = 0;
 HEAP32[2068] = 9632;
 HEAP32[2070] = 9680;
 if ((HEAP32[4354] | 0) != -1) {
  HEAP32[$__p_i_i_i1192 >> 2] = 17416;
  HEAP32[$__p_i_i_i1192 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i1192 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17416, $__p_i_i_i1192, 102);
 }
 $430 = HEAP32[4355] | 0;
 $sub_i_i1198 = $430 - 1 | 0;
 tempValue = HEAP32[2069] | 0, HEAP32[2069] = tempValue + 1, tempValue;
 $432 = HEAP32[$__end__i_i >> 2] | 0;
 $433 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i1208 = $432 - $433 >> 2;
 do {
  if ($sub_ptr_div_i_i1208 >>> 0 > $sub_i_i1198 >>> 0) {
   $440 = $433;
  } else {
   if ($sub_ptr_div_i_i1208 >>> 0 < $430 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $430 - $sub_ptr_div_i_i1208 | 0);
    $440 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i1208 >>> 0 <= $430 >>> 0) {
    $440 = $433;
    break;
   }
   $add_ptr_i_i1218 = $433 + ($430 << 2) | 0;
   if (($add_ptr_i_i1218 | 0) == ($432 | 0)) {
    $440 = $433;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $432 + ((($432 - 4 + (-$add_ptr_i_i1218 | 0) | 0) >>> 2 ^ -1) << 2);
   $440 = $433;
  }
 } while (0);
 $441 = HEAP32[$440 + ($sub_i_i1198 << 2) >> 2] | 0;
 do {
  if (($441 | 0) != 0) {
   $__shared_owners__i7_i1238 = $441 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i1238 >> 2] | 0, HEAP32[$__shared_owners__i7_i1238 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$441 >> 2] | 0) + 8 >> 2] & 511]($441 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i1198 << 2) >> 2] = 8272;
 HEAP32[2065] = 0;
 HEAP32[2064] = 9536;
 HEAP32[2066] = 9584;
 if ((HEAP32[4352] | 0) != -1) {
  HEAP32[$__p_i_i_i1248 >> 2] = 17408;
  HEAP32[$__p_i_i_i1248 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i1248 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17408, $__p_i_i_i1248, 102);
 }
 $449 = HEAP32[4353] | 0;
 $sub_i_i1254 = $449 - 1 | 0;
 tempValue = HEAP32[2065] | 0, HEAP32[2065] = tempValue + 1, tempValue;
 $451 = HEAP32[$__end__i_i >> 2] | 0;
 $452 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i1264 = $451 - $452 >> 2;
 do {
  if ($sub_ptr_div_i_i1264 >>> 0 > $sub_i_i1254 >>> 0) {
   $459 = $452;
  } else {
   if ($sub_ptr_div_i_i1264 >>> 0 < $449 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $449 - $sub_ptr_div_i_i1264 | 0);
    $459 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i1264 >>> 0 <= $449 >>> 0) {
    $459 = $452;
    break;
   }
   $add_ptr_i_i1274 = $452 + ($449 << 2) | 0;
   if (($add_ptr_i_i1274 | 0) == ($451 | 0)) {
    $459 = $452;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $451 + ((($451 - 4 + (-$add_ptr_i_i1274 | 0) | 0) >>> 2 ^ -1) << 2);
   $459 = $452;
  }
 } while (0);
 $460 = HEAP32[$459 + ($sub_i_i1254 << 2) >> 2] | 0;
 do {
  if (($460 | 0) != 0) {
   $__shared_owners__i7_i1294 = $460 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i1294 >> 2] | 0, HEAP32[$__shared_owners__i7_i1294 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$460 >> 2] | 0) + 8 >> 2] & 511]($460 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i1254 << 2) >> 2] = 8256;
 HEAP32[2061] = 0;
 HEAP32[2060] = 10536;
 if (HEAP8[18416] | 0) {
  $466 = HEAP32[2044] | 0;
 } else {
  $call_i1_i1304 = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i1_i1304;
  HEAP8[18416] = 1;
  $466 = $call_i1_i1304;
 }
 HEAP32[2062] = $466;
 HEAP32[2060] = 9504;
 if ((HEAP32[4350] | 0) != -1) {
  HEAP32[$__p_i_i_i1305 >> 2] = 17400;
  HEAP32[$__p_i_i_i1305 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i1305 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17400, $__p_i_i_i1305, 102);
 }
 $469 = HEAP32[4351] | 0;
 $sub_i_i1311 = $469 - 1 | 0;
 tempValue = HEAP32[2061] | 0, HEAP32[2061] = tempValue + 1, tempValue;
 $471 = HEAP32[$__end__i_i >> 2] | 0;
 $472 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i1321 = $471 - $472 >> 2;
 do {
  if ($sub_ptr_div_i_i1321 >>> 0 > $sub_i_i1311 >>> 0) {
   $479 = $472;
  } else {
   if ($sub_ptr_div_i_i1321 >>> 0 < $469 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $469 - $sub_ptr_div_i_i1321 | 0);
    $479 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i1321 >>> 0 <= $469 >>> 0) {
    $479 = $472;
    break;
   }
   $add_ptr_i_i1331 = $472 + ($469 << 2) | 0;
   if (($add_ptr_i_i1331 | 0) == ($471 | 0)) {
    $479 = $472;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $471 + ((($471 - 4 + (-$add_ptr_i_i1331 | 0) | 0) >>> 2 ^ -1) << 2);
   $479 = $472;
  }
 } while (0);
 $480 = HEAP32[$479 + ($sub_i_i1311 << 2) >> 2] | 0;
 do {
  if (($480 | 0) != 0) {
   $__shared_owners__i7_i1351 = $480 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i1351 >> 2] | 0, HEAP32[$__shared_owners__i7_i1351 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$480 >> 2] | 0) + 8 >> 2] & 511]($480 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i1311 << 2) >> 2] = 8240;
 HEAP32[2057] = 0;
 HEAP32[2056] = 10536;
 if (HEAP8[18416] | 0) {
  $486 = HEAP32[2044] | 0;
 } else {
  $call_i1_i1366 = _newlocale(1, 3128, 0) | 0;
  HEAP32[2044] = $call_i1_i1366;
  HEAP8[18416] = 1;
  $486 = $call_i1_i1366;
 }
 HEAP32[2058] = $486;
 HEAP32[2056] = 9472;
 if ((HEAP32[4348] | 0) != -1) {
  HEAP32[$__p_i_i_i1367 >> 2] = 17392;
  HEAP32[$__p_i_i_i1367 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i1367 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17392, $__p_i_i_i1367, 102);
 }
 $489 = HEAP32[4349] | 0;
 $sub_i_i1373 = $489 - 1 | 0;
 tempValue = HEAP32[2057] | 0, HEAP32[2057] = tempValue + 1, tempValue;
 $491 = HEAP32[$__end__i_i >> 2] | 0;
 $492 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i1383 = $491 - $492 >> 2;
 do {
  if ($sub_ptr_div_i_i1383 >>> 0 > $sub_i_i1373 >>> 0) {
   $499 = $492;
  } else {
   if ($sub_ptr_div_i_i1383 >>> 0 < $489 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $489 - $sub_ptr_div_i_i1383 | 0);
    $499 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i1383 >>> 0 <= $489 >>> 0) {
    $499 = $492;
    break;
   }
   $add_ptr_i_i1393 = $492 + ($489 << 2) | 0;
   if (($add_ptr_i_i1393 | 0) == ($491 | 0)) {
    $499 = $492;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $491 + ((($491 - 4 + (-$add_ptr_i_i1393 | 0) | 0) >>> 2 ^ -1) << 2);
   $499 = $492;
  }
 } while (0);
 $500 = HEAP32[$499 + ($sub_i_i1373 << 2) >> 2] | 0;
 do {
  if (($500 | 0) != 0) {
   $__shared_owners__i7_i1413 = $500 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i1413 >> 2] | 0, HEAP32[$__shared_owners__i7_i1413 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$500 >> 2] | 0) + 8 >> 2] & 511]($500 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i1373 << 2) >> 2] = 8224;
 HEAP32[2089] = 0;
 HEAP32[2088] = 9864;
 if ((HEAP32[4362] | 0) != -1) {
  HEAP32[$__p_i_i_i1423 >> 2] = 17448;
  HEAP32[$__p_i_i_i1423 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i1423 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17448, $__p_i_i_i1423, 102);
 }
 $508 = HEAP32[4363] | 0;
 $sub_i_i1429 = $508 - 1 | 0;
 tempValue = HEAP32[2089] | 0, HEAP32[2089] = tempValue + 1, tempValue;
 $510 = HEAP32[$__end__i_i >> 2] | 0;
 $511 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i1439 = $510 - $511 >> 2;
 do {
  if ($sub_ptr_div_i_i1439 >>> 0 > $sub_i_i1429 >>> 0) {
   $518 = $511;
  } else {
   if ($sub_ptr_div_i_i1439 >>> 0 < $508 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $508 - $sub_ptr_div_i_i1439 | 0);
    $518 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i1439 >>> 0 <= $508 >>> 0) {
    $518 = $511;
    break;
   }
   $add_ptr_i_i1449 = $511 + ($508 << 2) | 0;
   if (($add_ptr_i_i1449 | 0) == ($510 | 0)) {
    $518 = $511;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $510 + ((($510 - 4 + (-$add_ptr_i_i1449 | 0) | 0) >>> 2 ^ -1) << 2);
   $518 = $511;
  }
 } while (0);
 $519 = HEAP32[$518 + ($sub_i_i1429 << 2) >> 2] | 0;
 do {
  if (($519 | 0) != 0) {
   $__shared_owners__i7_i1469 = $519 + 4 | 0;
   if (((tempValue = HEAP32[$__shared_owners__i7_i1469 >> 2] | 0, HEAP32[$__shared_owners__i7_i1469 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$519 >> 2] | 0) + 8 >> 2] & 511]($519 | 0);
  }
 } while (0);
 HEAP32[(HEAP32[$__begin__i_i2 >> 2] | 0) + ($sub_i_i1429 << 2) >> 2] = 8352;
 HEAP32[2087] = 0;
 HEAP32[2086] = 9824;
 if ((HEAP32[4360] | 0) != -1) {
  HEAP32[$__p_i_i_i1479 >> 2] = 17440;
  HEAP32[$__p_i_i_i1479 + 4 >> 2] = 12;
  HEAP32[$__p_i_i_i1479 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(17440, $__p_i_i_i1479, 102);
 }
 $527 = HEAP32[4361] | 0;
 $sub_i_i1485 = $527 - 1 | 0;
 tempValue = HEAP32[2087] | 0, HEAP32[2087] = tempValue + 1, tempValue;
 $529 = HEAP32[$__end__i_i >> 2] | 0;
 $530 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $sub_ptr_div_i_i1495 = $529 - $530 >> 2;
 do {
  if ($sub_ptr_div_i_i1495 >>> 0 > $sub_i_i1485 >>> 0) {
   $537 = $530;
  } else {
   if ($sub_ptr_div_i_i1495 >>> 0 < $527 >>> 0) {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_, $527 - $sub_ptr_div_i_i1495 | 0);
    $537 = HEAP32[$__begin__i_i2 >> 2] | 0;
    break;
   }
   if ($sub_ptr_div_i_i1495 >>> 0 <= $527 >>> 0) {
    $537 = $530;
    break;
   }
   $add_ptr_i_i1505 = $530 + ($527 << 2) | 0;
   if (($add_ptr_i_i1505 | 0) == ($529 | 0)) {
    $537 = $530;
    break;
   }
   HEAP32[$__end__i_i >> 2] = $529 + ((($529 - 4 + (-$add_ptr_i_i1505 | 0) | 0) >>> 2 ^ -1) << 2);
   $537 = $530;
  }
 } while (0);
 $538 = HEAP32[$537 + ($sub_i_i1485 << 2) >> 2] | 0;
 if (($538 | 0) == 0) {
  $543 = HEAP32[$__begin__i_i2 >> 2] | 0;
  $arrayidx_i24_i1531 = $543 + ($sub_i_i1485 << 2) | 0;
  HEAP32[$arrayidx_i24_i1531 >> 2] = 8344;
  STACKTOP = __stackBase__;
  return;
 }
 $__shared_owners__i7_i1525 = $538 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i7_i1525 >> 2] | 0, HEAP32[$__shared_owners__i7_i1525 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $543 = HEAP32[$__begin__i_i2 >> 2] | 0;
  $arrayidx_i24_i1531 = $543 + ($sub_i_i1485 << 2) | 0;
  HEAP32[$arrayidx_i24_i1531 >> 2] = 8344;
  STACKTOP = __stackBase__;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$538 >> 2] | 0) + 8 >> 2] & 511]($538 | 0);
 $543 = HEAP32[$__begin__i_i2 >> 2] | 0;
 $arrayidx_i24_i1531 = $543 + ($sub_i_i1485 << 2) | 0;
 HEAP32[$arrayidx_i24_i1531 >> 2] = 8344;
 STACKTOP = __stackBase__;
 return;
}
function __ZNKSt3__15ctypeIcE8do_widenEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 return $c | 0;
}
function __ZNKSt3__17codecvtIcc10_mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this, $0, $frm, $1, $frm_nxt, $to, $2, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $1 = $1 | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $2 = $2 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc10_mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this, $0, $frm, $1, $frm_nxt, $to, $2, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $1 = $1 | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $2 = $2 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc10_mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc10_mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 1;
}
function __ZNKSt3__17codecvtIcc10_mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 1;
}
function __ZNKSt3__17codecvtIcc10_mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 1;
}
function __ZNKSt3__15ctypeIwE8do_widenEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 return $c << 24 >> 24 | 0;
}
function __ZNKSt3__15ctypeIwE9do_narrowEwc($this, $c, $dfault) {
 $this = $this | 0;
 $c = $c | 0;
 $dfault = $dfault | 0;
 return ($c >>> 0 < 128 ? $c & 255 : $dfault) | 0;
}
function __ZNKSt3__15ctypeIcE9do_narrowEcc($this, $c, $dfault) {
 $this = $this | 0;
 $c = $c | 0;
 $dfault = $dfault | 0;
 return ($c << 24 >> 24 > -1 ? $c : $dfault) | 0;
}
function __ZNKSt3__17codecvtIcc10_mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $end = $end | 0;
 $mx = $mx | 0;
 var $sub_ptr_sub = 0;
 $sub_ptr_sub = $end - $frm | 0;
 return ($sub_ptr_sub >>> 0 < $mx >>> 0 ? $sub_ptr_sub : $mx) | 0;
}
function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this | 0;
 HEAP32[$this + 4 >> 2] = (tempValue = HEAP32[4384] | 0, HEAP32[4384] = tempValue + 1, tempValue) + 1;
 return;
}
function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this, $low, $high, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dest = $dest | 0;
 var $dest_addr_06 = 0, $low_addr_05 = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_05 = $low;
  $dest_addr_06 = $dest;
 }
 while (1) {
  HEAP32[$dest_addr_06 >> 2] = HEAP8[$low_addr_05] | 0;
  $incdec_ptr = $low_addr_05 + 1 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   break;
  } else {
   $low_addr_05 = $incdec_ptr;
   $dest_addr_06 = $dest_addr_06 + 4 | 0;
  }
 }
 return $low_addr_0_lcssa | 0;
}
function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this, $low, $high, $dfault, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dfault = $dfault | 0;
 $dest = $dest | 0;
 var $2 = 0, $dest_addr_08 = 0, $low_addr_07 = 0, $3 = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 }
 $2 = (($high - 4 + (-$low | 0) | 0) >>> 2) + 1 | 0;
 $low_addr_07 = $low;
 $dest_addr_08 = $dest;
 while (1) {
  $3 = HEAP32[$low_addr_07 >> 2] | 0;
  HEAP8[$dest_addr_08] = $3 >>> 0 < 128 ? $3 & 255 : $dfault;
  $incdec_ptr = $low_addr_07 + 4 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   break;
  } else {
   $low_addr_07 = $incdec_ptr;
   $dest_addr_08 = $dest_addr_08 + 1 | 0;
  }
 }
 $low_addr_0_lcssa = $low + ($2 << 2) | 0;
 return $low_addr_0_lcssa | 0;
}
function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this, $low, $high, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dest = $dest | 0;
 var $dest_addr_06 = 0, $low_addr_05 = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_05 = $low;
  $dest_addr_06 = $dest;
 }
 while (1) {
  HEAP8[$dest_addr_06] = HEAP8[$low_addr_05] | 0;
  $incdec_ptr = $low_addr_05 + 1 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   break;
  } else {
   $low_addr_05 = $incdec_ptr;
   $dest_addr_06 = $dest_addr_06 + 1 | 0;
  }
 }
 return $low_addr_0_lcssa | 0;
}
function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this, $low, $high, $dfault, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dfault = $dfault | 0;
 $dest = $dest | 0;
 var $dest_addr_09 = 0, $low_addr_08 = 0, $0 = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_08 = $low;
  $dest_addr_09 = $dest;
 }
 while (1) {
  $0 = HEAP8[$low_addr_08] | 0;
  HEAP8[$dest_addr_09] = $0 << 24 >> 24 > -1 ? $0 : $dfault;
  $incdec_ptr = $low_addr_08 + 1 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   break;
  } else {
   $low_addr_08 = $incdec_ptr;
   $dest_addr_09 = $dest_addr_09 + 1 | 0;
  }
 }
 return $low_addr_0_lcssa | 0;
}
function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this | 0;
 __ZNSt3__16locale5__impD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this | 0;
 var $__end__i = 0, $1 = 0, $__begin__i = 0, $2 = 0, $3 = 0, $i_09 = 0, $4 = 0, $__shared_owners__i = 0, $inc = 0, $10 = 0, $11 = 0, $14 = 0, $16 = 0;
 HEAP32[$this >> 2] = 10568;
 $__end__i = $this + 12 | 0;
 $1 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i = $this + 8 | 0;
 $2 = HEAP32[$__begin__i >> 2] | 0;
 if (($1 | 0) == ($2 | 0)) {
  $11 = $1;
 } else {
  $i_09 = 0;
  $3 = $2;
  while (1) {
   $4 = HEAP32[$3 + ($i_09 << 2) >> 2] | 0;
   do {
    if (($4 | 0) != 0) {
     $__shared_owners__i = $4 + 4 | 0;
     if (((tempValue = HEAP32[$__shared_owners__i >> 2] | 0, HEAP32[$__shared_owners__i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
      break;
     }
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$4 >> 2] | 0) + 8 >> 2] & 511]($4 | 0);
    }
   } while (0);
   $inc = $i_09 + 1 | 0;
   $10 = HEAP32[$__begin__i >> 2] | 0;
   if ($inc >>> 0 < (HEAP32[$__end__i >> 2] | 0) - $10 >> 2 >>> 0) {
    $i_09 = $inc;
    $3 = $10;
   } else {
    $11 = $10;
    break;
   }
  }
 }
 if ((HEAP8[$this + 144 | 0] & 1) == 0) {
  $14 = $11;
 } else {
  __ZdlPv(HEAP32[$this + 152 >> 2] | 0);
  $14 = HEAP32[$__begin__i >> 2] | 0;
 }
 if (($14 | 0) == 0) {
  return;
 }
 $16 = HEAP32[$__end__i >> 2] | 0;
 if (($14 | 0) != ($16 | 0)) {
  HEAP32[$__end__i >> 2] = $16 + ((($16 - 4 + (-$14 | 0) | 0) >>> 2 ^ -1) << 2);
 }
 if (($14 | 0) == ($this + 24 | 0)) {
  HEAP8[$this + 136 | 0] = 0;
  return;
 } else {
  __ZdlPv($14);
  return;
 }
}
function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 511]($this);
 return;
}
function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 10680;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 do {
  if (($1 | 0) != 0) {
   if ((HEAP8[$this + 12 | 0] & 1) == 0) {
    break;
   }
   __ZdaPv($1);
  }
 } while (0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 10680;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (($1 | 0) == 0) {
  return;
 }
 if ((HEAP8[$this + 12 | 0] & 1) == 0) {
  return;
 }
 __ZdaPv($1);
 return;
}
function __ZNSt3__17codecvtIcc10_mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIwE5do_isEtw($this, $m, $c) {
 $this = $this | 0;
 $m = $m | 0;
 $c = $c | 0;
 var $cond = 0;
 if ($c >>> 0 >= 128) {
  $cond = 0;
  return $cond | 0;
 }
 $cond = (HEAP16[(HEAP32[(___ctype_b_loc() | 0) >> 2] | 0) + ($c << 1) >> 1] & $m) << 16 >> 16 != 0;
 return $cond | 0;
}
function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this, $low, $high, $vec) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $vec = $vec | 0;
 var $vec_addr_08 = 0, $low_addr_07 = 0, $0 = 0, $cond_off0 = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_07 = $low;
  $vec_addr_08 = $vec;
 }
 while (1) {
  $0 = HEAP32[$low_addr_07 >> 2] | 0;
  if ($0 >>> 0 < 128) {
   $cond_off0 = HEAP16[(HEAP32[(___ctype_b_loc() | 0) >> 2] | 0) + ($0 << 1) >> 1] | 0;
  } else {
   $cond_off0 = 0;
  }
  HEAP16[$vec_addr_08 >> 1] = $cond_off0;
  $incdec_ptr = $low_addr_07 + 4 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   break;
  } else {
   $low_addr_07 = $incdec_ptr;
   $vec_addr_08 = $vec_addr_08 + 2 | 0;
  }
 }
 return $low_addr_0_lcssa | 0;
}
function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this, $m, $low, $high) {
 $this = $this | 0;
 $m = $m | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $low_addr_08 = 0, $0 = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0, label = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_08 = $low;
 }
 while (1) {
  $0 = HEAP32[$low_addr_08 >> 2] | 0;
  if ($0 >>> 0 < 128) {
   if ((HEAP16[(HEAP32[(___ctype_b_loc() | 0) >> 2] | 0) + ($0 << 1) >> 1] & $m) << 16 >> 16 != 0) {
    $low_addr_0_lcssa = $low_addr_08;
    label = 14700;
    break;
   }
  }
  $incdec_ptr = $low_addr_08 + 4 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   label = 14701;
   break;
  } else {
   $low_addr_08 = $incdec_ptr;
  }
 }
 if ((label | 0) == 14700) {
  return $low_addr_0_lcssa | 0;
 } else if ((label | 0) == 14701) {
  return $low_addr_0_lcssa | 0;
 }
 return 0;
}
function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this, $m, $low, $high) {
 $this = $this | 0;
 $m = $m | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $low_addr_0 = 0, $0 = 0, $low_addr_0_lcssa = 0, label = 0;
 $low_addr_0 = $low;
 while (1) {
  if (($low_addr_0 | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   label = 14709;
   break;
  }
  $0 = HEAP32[$low_addr_0 >> 2] | 0;
  if ($0 >>> 0 >= 128) {
   $low_addr_0_lcssa = $low_addr_0;
   label = 14710;
   break;
  }
  if ((HEAP16[(HEAP32[(___ctype_b_loc() | 0) >> 2] | 0) + ($0 << 1) >> 1] & $m) << 16 >> 16 == 0) {
   $low_addr_0_lcssa = $low_addr_0;
   label = 14711;
   break;
  } else {
   $low_addr_0 = $low_addr_0 + 4 | 0;
  }
 }
 if ((label | 0) == 14711) {
  return $low_addr_0_lcssa | 0;
 } else if ((label | 0) == 14709) {
  return $low_addr_0_lcssa | 0;
 } else if ((label | 0) == 14710) {
  return $low_addr_0_lcssa | 0;
 }
 return 0;
}
function __ZNKSt3__15ctypeIwE10do_toupperEw($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $cond = 0;
 if ($c >>> 0 >= 128) {
  $cond = $c;
  return $cond | 0;
 }
 $cond = HEAP32[(HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0) + ($c << 2) >> 2] | 0;
 return $cond | 0;
}
function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $low_addr_07 = 0, $0 = 0, $cond = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_07 = $low;
 }
 while (1) {
  $0 = HEAP32[$low_addr_07 >> 2] | 0;
  if ($0 >>> 0 < 128) {
   $cond = HEAP32[(HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0) + ($0 << 2) >> 2] | 0;
  } else {
   $cond = $0;
  }
  HEAP32[$low_addr_07 >> 2] = $cond;
  $incdec_ptr = $low_addr_07 + 4 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   break;
  } else {
   $low_addr_07 = $incdec_ptr;
  }
 }
 return $low_addr_0_lcssa | 0;
}
function __ZNKSt3__15ctypeIwE10do_tolowerEw($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $cond = 0;
 if ($c >>> 0 >= 128) {
  $cond = $c;
  return $cond | 0;
 }
 $cond = HEAP32[(HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0) + ($c << 2) >> 2] | 0;
 return $cond | 0;
}
function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $low_addr_07 = 0, $0 = 0, $cond = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_07 = $low;
 }
 while (1) {
  $0 = HEAP32[$low_addr_07 >> 2] | 0;
  if ($0 >>> 0 < 128) {
   $cond = HEAP32[(HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0) + ($0 << 2) >> 2] | 0;
  } else {
   $cond = $0;
  }
  HEAP32[$low_addr_07 >> 2] = $cond;
  $incdec_ptr = $low_addr_07 + 4 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   break;
  } else {
   $low_addr_07 = $incdec_ptr;
  }
 }
 return $low_addr_0_lcssa | 0;
}
function __ZNKSt3__15ctypeIcE10do_toupperEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $cond = 0;
 if ($c << 24 >> 24 <= -1) {
  $cond = $c;
  return $cond | 0;
 }
 $cond = HEAP32[(HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0) + ($c << 24 >> 24 << 2) >> 2] & 255;
 return $cond | 0;
}
function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $low_addr_08 = 0, $0 = 0, $cond = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_08 = $low;
 }
 while (1) {
  $0 = HEAP8[$low_addr_08] | 0;
  if ($0 << 24 >> 24 > -1) {
   $cond = HEAP32[(HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0) + ($0 << 24 >> 24 << 2) >> 2] & 255;
  } else {
   $cond = $0;
  }
  HEAP8[$low_addr_08] = $cond;
  $incdec_ptr = $low_addr_08 + 1 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   break;
  } else {
   $low_addr_08 = $incdec_ptr;
  }
 }
 return $low_addr_0_lcssa | 0;
}
function __ZNKSt3__15ctypeIcE10do_tolowerEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $cond = 0;
 if ($c << 24 >> 24 <= -1) {
  $cond = $c;
  return $cond | 0;
 }
 $cond = HEAP32[(HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0) + ($c << 24 >> 24 << 2) >> 2] & 255;
 return $cond | 0;
}
function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $low_addr_08 = 0, $0 = 0, $cond = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_08 = $low;
 }
 while (1) {
  $0 = HEAP8[$low_addr_08] | 0;
  if ($0 << 24 >> 24 > -1) {
   $cond = HEAP32[(HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0) + ($0 << 24 >> 24 << 2) >> 2] & 255;
  } else {
   $cond = $0;
  }
  HEAP8[$low_addr_08] = $cond;
  $incdec_ptr = $low_addr_08 + 1 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   break;
  } else {
   $low_addr_08 = $incdec_ptr;
  }
 }
 return $low_addr_0_lcssa | 0;
}
function __ZNSt3__17codecvtIwc10_mbstate_tED0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0;
 HEAP32[$this >> 2] = 10312;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (($1 | 0) == 0) {
  $3 = $this;
  __ZdlPv($3);
  return;
 }
 _freelocale($1 | 0);
 $3 = $this;
 __ZdlPv($3);
 return;
}
function __ZNKSt3__17codecvtIwc10_mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this, $st, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $fend_0 = 0, $fend_0_lcssa = 0, $sub_ptr_lhs_cast7 = 0, $__l = 0, $fend_175 = 0, $frm_addr_074 = 0, $to_addr_073 = 0, $call_i = 0, $call1_i = 0, $4 = 0, $frm_addr_156 = 0, $5 = 0, $call_i115 = 0, $call1_i124 = 0, $add_ptr = 0, $incdec_ptr21 = 0, $frm_addr_1_lcssa = 0, $add_ptr27 = 0, $call_i223 = 0, $13 = 0, $incdec_ptr52 = 0, $fend_2 = 0, $fend_2_lcssa = 0, $16 = 0, $17 = 0, $fend_3 = 0, $18 = 0, $retval_0 = 0, label = 0;
 $fend_0 = $frm;
 while (1) {
  if (($fend_0 | 0) == ($frm_end | 0)) {
   $fend_0_lcssa = $frm_end;
   break;
  }
  if ((HEAP32[$fend_0 >> 2] | 0) == 0) {
   $fend_0_lcssa = $fend_0;
   break;
  } else {
   $fend_0 = $fend_0 + 4 | 0;
  }
 }
 HEAP32[$to_nxt >> 2] = $to;
 HEAP32[$frm_nxt >> 2] = $frm;
 L17332 : do {
  if (($frm | 0) == ($frm_end | 0) | ($to | 0) == ($to_end | 0)) {
   $18 = $frm;
  } else {
   $sub_ptr_lhs_cast7 = $to_end;
   $__l = $this + 8 | 0;
   $to_addr_073 = $to;
   $frm_addr_074 = $frm;
   $fend_175 = $fend_0_lcssa;
   while (1) {
    $call_i = _uselocale(HEAP32[$__l >> 2] | 0) | 0;
    $call1_i = _wcsnrtombs($to_addr_073, $frm_nxt, $fend_175 - $frm_addr_074 >> 2, $sub_ptr_lhs_cast7 - $to_addr_073 | 0, 0) | 0;
    if (($call_i | 0) != 0) {
     _uselocale($call_i | 0) | 0;
    }
    if (($call1_i | 0) == (-1 | 0)) {
     label = 14791;
     break;
    } else if (($call1_i | 0) == 0) {
     $retval_0 = 1;
     label = 14816;
     break;
    }
    $add_ptr27 = (HEAP32[$to_nxt >> 2] | 0) + $call1_i | 0;
    HEAP32[$to_nxt >> 2] = $add_ptr27;
    if (($add_ptr27 | 0) == ($to_end | 0)) {
     label = 14810;
     break;
    }
    if (($fend_175 | 0) == ($frm_end | 0)) {
     $fend_3 = $frm_end;
     $17 = $add_ptr27;
     $16 = HEAP32[$frm_nxt >> 2] | 0;
    } else {
     $call_i223 = _uselocale(HEAP32[$__l >> 2] | 0) | 0;
     if (($call_i223 | 0) != 0) {
      _uselocale($call_i223 | 0) | 0;
     }
     $13 = HEAP32[$to_nxt >> 2] | 0;
     if (($13 | 0) == ($to_end | 0)) {
      $retval_0 = 1;
      label = 14815;
      break;
     }
     HEAP32[$to_nxt >> 2] = $13 + 1;
     HEAP8[$13] = 0;
     $incdec_ptr52 = (HEAP32[$frm_nxt >> 2] | 0) + 4 | 0;
     HEAP32[$frm_nxt >> 2] = $incdec_ptr52;
     $fend_2 = $incdec_ptr52;
     while (1) {
      if (($fend_2 | 0) == ($frm_end | 0)) {
       $fend_2_lcssa = $frm_end;
       break;
      }
      if ((HEAP32[$fend_2 >> 2] | 0) == 0) {
       $fend_2_lcssa = $fend_2;
       break;
      } else {
       $fend_2 = $fend_2 + 4 | 0;
      }
     }
     $fend_3 = $fend_2_lcssa;
     $17 = HEAP32[$to_nxt >> 2] | 0;
     $16 = $incdec_ptr52;
    }
    if (($16 | 0) == ($frm_end | 0) | ($17 | 0) == ($to_end | 0)) {
     $18 = $16;
     break L17332;
    } else {
     $to_addr_073 = $17;
     $frm_addr_074 = $16;
     $fend_175 = $fend_3;
    }
   }
   if ((label | 0) == 14815) {
    return $retval_0 | 0;
   } else if ((label | 0) == 14810) {
    $18 = HEAP32[$frm_nxt >> 2] | 0;
    break;
   } else if ((label | 0) == 14791) {
    HEAP32[$to_nxt >> 2] = $to_addr_073;
    L17357 : do {
     if (($frm_addr_074 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
      $frm_addr_1_lcssa = $frm_addr_074;
     } else {
      $frm_addr_156 = $frm_addr_074;
      $4 = $to_addr_073;
      while (1) {
       $5 = HEAP32[$frm_addr_156 >> 2] | 0;
       $call_i115 = _uselocale(HEAP32[$__l >> 2] | 0) | 0;
       $call1_i124 = _wcrtomb($4, $5, 0) | 0;
       if (($call_i115 | 0) != 0) {
        _uselocale($call_i115 | 0) | 0;
       }
       if (($call1_i124 | 0) == -1) {
        $frm_addr_1_lcssa = $frm_addr_156;
        break L17357;
       }
       $add_ptr = (HEAP32[$to_nxt >> 2] | 0) + $call1_i124 | 0;
       HEAP32[$to_nxt >> 2] = $add_ptr;
       $incdec_ptr21 = $frm_addr_156 + 4 | 0;
       if (($incdec_ptr21 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
        $frm_addr_1_lcssa = $incdec_ptr21;
        break;
       } else {
        $frm_addr_156 = $incdec_ptr21;
        $4 = $add_ptr;
       }
      }
     }
    } while (0);
    HEAP32[$frm_nxt >> 2] = $frm_addr_1_lcssa;
    $retval_0 = 2;
    return $retval_0 | 0;
   } else if ((label | 0) == 14816) {
    return $retval_0 | 0;
   }
  }
 } while (0);
 $retval_0 = ($18 | 0) != ($frm_end | 0) & 1;
 return $retval_0 | 0;
}
function __ZNKSt3__17codecvtIwc10_mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $0 = 0, $1 = 0, $sub_ptr_lhs_cast67 = 0, $2 = 0, $sub_ptr_lhs_cast12 = 0, $3 = 0, $4 = 0, $conv = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $arrayidx = 0, $conv73 = 0, $and85 = 0, $add101 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $incdec_ptr165 = 0, $retval_0 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 do {
  if (($mode & 2 | 0) != 0) {
   if (($to_end - $to | 0) < 3) {
    $retval_0 = 1;
    return $retval_0 | 0;
   } else {
    HEAP32[$to_nxt >> 2] = $to + 1;
    HEAP8[$to] = -17;
    $0 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $0 + 1;
    HEAP8[$0] = -69;
    $1 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $1 + 1;
    HEAP8[$1] = -65;
    break;
   }
  }
 } while (0);
 $sub_ptr_lhs_cast67 = $frm_end;
 $2 = HEAP32[$frm_nxt >> 2] | 0;
 if ($2 >>> 0 >= $frm_end >>> 0) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 $sub_ptr_lhs_cast12 = $to_end;
 $3 = $2;
 L17380 : while (1) {
  $4 = HEAP16[$3 >> 1] | 0;
  $conv = $4 & 65535;
  if ($conv >>> 0 > $Maxcode >>> 0) {
   $retval_0 = 2;
   label = 14847;
   break;
  }
  do {
   if (($4 & 65535) < 128) {
    $5 = HEAP32[$to_nxt >> 2] | 0;
    if (($sub_ptr_lhs_cast12 - $5 | 0) < 1) {
     $retval_0 = 1;
     label = 14850;
     break L17380;
    }
    HEAP32[$to_nxt >> 2] = $5 + 1;
    HEAP8[$5] = $4 & 255;
   } else {
    if (($4 & 65535) < 2048) {
     $6 = HEAP32[$to_nxt >> 2] | 0;
     if (($sub_ptr_lhs_cast12 - $6 | 0) < 2) {
      $retval_0 = 1;
      label = 14855;
      break L17380;
     }
     HEAP32[$to_nxt >> 2] = $6 + 1;
     HEAP8[$6] = ($conv >>> 6 | 192) & 255;
     $7 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $7 + 1;
     HEAP8[$7] = ($conv & 63 | 128) & 255;
     break;
    }
    if (($4 & 65535) < 55296) {
     $8 = HEAP32[$to_nxt >> 2] | 0;
     if (($sub_ptr_lhs_cast12 - $8 | 0) < 3) {
      $retval_0 = 1;
      label = 14845;
      break L17380;
     }
     HEAP32[$to_nxt >> 2] = $8 + 1;
     HEAP8[$8] = ($conv >>> 12 | 224) & 255;
     $9 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $9 + 1;
     HEAP8[$9] = ($conv >>> 6 & 63 | 128) & 255;
     $10 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $10 + 1;
     HEAP8[$10] = ($conv & 63 | 128) & 255;
     break;
    }
    if (($4 & 65535) >= 56320) {
     if (($4 & 65535) < 57344) {
      $retval_0 = 2;
      label = 14852;
      break L17380;
     }
     $17 = HEAP32[$to_nxt >> 2] | 0;
     if (($sub_ptr_lhs_cast12 - $17 | 0) < 3) {
      $retval_0 = 1;
      label = 14853;
      break L17380;
     }
     HEAP32[$to_nxt >> 2] = $17 + 1;
     HEAP8[$17] = ($conv >>> 12 | 224) & 255;
     $18 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $18 + 1;
     HEAP8[$18] = ($conv >>> 6 & 63 | 128) & 255;
     $19 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $19 + 1;
     HEAP8[$19] = ($conv & 63 | 128) & 255;
     break;
    }
    if (($sub_ptr_lhs_cast67 - $3 | 0) < 4) {
     $retval_0 = 1;
     label = 14856;
     break L17380;
    }
    $arrayidx = $3 + 2 | 0;
    $conv73 = HEAPU16[$arrayidx >> 1] | 0;
    if (($conv73 & 64512 | 0) != 56320) {
     $retval_0 = 2;
     label = 14848;
     break L17380;
    }
    if (($sub_ptr_lhs_cast12 - (HEAP32[$to_nxt >> 2] | 0) | 0) < 4) {
     $retval_0 = 1;
     label = 14854;
     break L17380;
    }
    $and85 = $conv & 960;
    if ((($and85 << 10) + 65536 | $conv << 10 & 64512 | $conv73 & 1023) >>> 0 > $Maxcode >>> 0) {
     $retval_0 = 2;
     label = 14851;
     break L17380;
    }
    HEAP32[$frm_nxt >> 2] = $arrayidx;
    $add101 = ($and85 >>> 6) + 1 | 0;
    $13 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $13 + 1;
    HEAP8[$13] = ($add101 >>> 2 | 240) & 255;
    $14 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $14 + 1;
    HEAP8[$14] = ($conv >>> 2 & 15 | $add101 << 4 & 48 | 128) & 255;
    $15 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $15 + 1;
    HEAP8[$15] = ($conv << 4 & 48 | $conv73 >>> 6 & 15 | 128) & 255;
    $16 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $16 + 1;
    HEAP8[$16] = ($conv73 & 63 | 128) & 255;
   }
  } while (0);
  $incdec_ptr165 = (HEAP32[$frm_nxt >> 2] | 0) + 2 | 0;
  HEAP32[$frm_nxt >> 2] = $incdec_ptr165;
  if ($incdec_ptr165 >>> 0 < $frm_end >>> 0) {
   $3 = $incdec_ptr165;
  } else {
   $retval_0 = 0;
   label = 14846;
   break;
  }
 }
 if ((label | 0) == 14847) {
  return $retval_0 | 0;
 } else if ((label | 0) == 14855) {
  return $retval_0 | 0;
 } else if ((label | 0) == 14853) {
  return $retval_0 | 0;
 } else if ((label | 0) == 14850) {
  return $retval_0 | 0;
 } else if ((label | 0) == 14852) {
  return $retval_0 | 0;
 } else if ((label | 0) == 14846) {
  return $retval_0 | 0;
 } else if ((label | 0) == 14845) {
  return $retval_0 | 0;
 } else if ((label | 0) == 14856) {
  return $retval_0 | 0;
 } else if ((label | 0) == 14851) {
  return $retval_0 | 0;
 } else if ((label | 0) == 14854) {
  return $retval_0 | 0;
 } else if ((label | 0) == 14848) {
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNSt3__17codecvtIDsc10_mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDsc10_mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $_frm_nxt = 0, $_to_nxt = 0, $call = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = __stackBase__ | 0;
 $_to_nxt = __stackBase__ + 8 | 0;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $call = __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = $frm + ((HEAP32[$_frm_nxt >> 2] | 0) - $frm >> 1 << 1);
 HEAP32[$to_nxt >> 2] = $to + ((HEAP32[$_to_nxt >> 2] | 0) - $to);
 STACKTOP = __stackBase__;
 return $call | 0;
}
function __ZNKSt3__17codecvtIDsc10_mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $_frm_nxt = 0, $_to_nxt = 0, $call = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = __stackBase__ | 0;
 $_to_nxt = __stackBase__ + 8 | 0;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $call = __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = $frm + ((HEAP32[$_frm_nxt >> 2] | 0) - $frm);
 HEAP32[$to_nxt >> 2] = $to + ((HEAP32[$_to_nxt >> 2] | 0) - $to >> 1 << 1);
 STACKTOP = __stackBase__;
 return $call | 0;
}
function __ZNKSt3__17codecvtIwc10_mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this, $st, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $save_state = 0, $tmpcast = 0, $fend_0 = 0, $fend_0_lcssa = 0, $1 = 0, $sub_ptr_lhs_cast7 = 0, $__l = 0, $fend_185 = 0, $frm_addr_084 = 0, $to_addr_083 = 0, $2$1 = 0, $sub_ptr_lhs_cast = 0, $call_i = 0, $call1_i = 0, $frm_addr_165 = 0, $storemerge64 = 0, $call_i108 = 0, $call1_i117 = 0, $frm_addr_2 = 0, $incdec_ptr24 = 0, $frm_addr_1_lcssa = 0, $add_ptr31 = 0, $_pre105 = 0, $call_i217 = 0, $call1_i226 = 0, $incdec_ptr43 = 0, $fend_2 = 0, $fend_2_lcssa = 0, $16 = 0, $17 = 0, $fend_3 = 0, $18 = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $save_state = __stackBase__ | 0;
 $tmpcast = $save_state;
 $fend_0 = $frm;
 while (1) {
  if (($fend_0 | 0) == ($frm_end | 0)) {
   $fend_0_lcssa = $frm_end;
   break;
  }
  if ((HEAP8[$fend_0] | 0) == 0) {
   $fend_0_lcssa = $fend_0;
   break;
  } else {
   $fend_0 = $fend_0 + 1 | 0;
  }
 }
 HEAP32[$to_nxt >> 2] = $to;
 HEAP32[$frm_nxt >> 2] = $frm;
 L17425 : do {
  if (($frm | 0) == ($frm_end | 0) | ($to | 0) == ($to_end | 0)) {
   $18 = $frm;
  } else {
   $1 = $st;
   $sub_ptr_lhs_cast7 = $to_end;
   $__l = $this + 8 | 0;
   $to_addr_083 = $to;
   $frm_addr_084 = $frm;
   $fend_185 = $fend_0_lcssa;
   while (1) {
    $2$1 = HEAP32[$1 + 4 >> 2] | 0;
    HEAP32[$save_state >> 2] = HEAP32[$1 >> 2];
    HEAP32[$save_state + 4 >> 2] = $2$1;
    $sub_ptr_lhs_cast = $fend_185;
    $call_i = _uselocale(HEAP32[$__l >> 2] | 0) | 0;
    $call1_i = _mbsnrtowcs($to_addr_083, $frm_nxt, $sub_ptr_lhs_cast - $frm_addr_084 | 0, $sub_ptr_lhs_cast7 - $to_addr_083 >> 2, $st) | 0;
    if (($call_i | 0) != 0) {
     _uselocale($call_i | 0) | 0;
    }
    if (($call1_i | 0) == 0) {
     $retval_0 = 2;
     label = 14895;
     break;
    } else if (($call1_i | 0) == (-1 | 0)) {
     label = 14869;
     break;
    }
    $add_ptr31 = (HEAP32[$to_nxt >> 2] | 0) + ($call1_i << 2) | 0;
    HEAP32[$to_nxt >> 2] = $add_ptr31;
    if (($add_ptr31 | 0) == ($to_end | 0)) {
     label = 14891;
     break;
    }
    $_pre105 = HEAP32[$frm_nxt >> 2] | 0;
    if (($fend_185 | 0) == ($frm_end | 0)) {
     $fend_3 = $frm_end;
     $17 = $add_ptr31;
     $16 = $_pre105;
    } else {
     $call_i217 = _uselocale(HEAP32[$__l >> 2] | 0) | 0;
     $call1_i226 = _mbrtowc($add_ptr31, $_pre105, 1, $st) | 0;
     if (($call_i217 | 0) != 0) {
      _uselocale($call_i217 | 0) | 0;
     }
     if (($call1_i226 | 0) != 0) {
      $retval_0 = 2;
      label = 14894;
      break;
     }
     HEAP32[$to_nxt >> 2] = (HEAP32[$to_nxt >> 2] | 0) + 4;
     $incdec_ptr43 = (HEAP32[$frm_nxt >> 2] | 0) + 1 | 0;
     HEAP32[$frm_nxt >> 2] = $incdec_ptr43;
     $fend_2 = $incdec_ptr43;
     while (1) {
      if (($fend_2 | 0) == ($frm_end | 0)) {
       $fend_2_lcssa = $frm_end;
       break;
      }
      if ((HEAP8[$fend_2] | 0) == 0) {
       $fend_2_lcssa = $fend_2;
       break;
      } else {
       $fend_2 = $fend_2 + 1 | 0;
      }
     }
     $fend_3 = $fend_2_lcssa;
     $17 = HEAP32[$to_nxt >> 2] | 0;
     $16 = $incdec_ptr43;
    }
    if (($16 | 0) == ($frm_end | 0) | ($17 | 0) == ($to_end | 0)) {
     $18 = $16;
     break L17425;
    } else {
     $to_addr_083 = $17;
     $frm_addr_084 = $16;
     $fend_185 = $fend_3;
    }
   }
   if ((label | 0) == 14894) {
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   } else if ((label | 0) == 14895) {
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   } else if ((label | 0) == 14891) {
    $18 = HEAP32[$frm_nxt >> 2] | 0;
    break;
   } else if ((label | 0) == 14869) {
    HEAP32[$to_nxt >> 2] = $to_addr_083;
    L17450 : do {
     if (($frm_addr_084 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
      $frm_addr_1_lcssa = $frm_addr_084;
     } else {
      $storemerge64 = $to_addr_083;
      $frm_addr_165 = $frm_addr_084;
      while (1) {
       $call_i108 = _uselocale(HEAP32[$__l >> 2] | 0) | 0;
       $call1_i117 = _mbrtowc($storemerge64, $frm_addr_165, $sub_ptr_lhs_cast - $frm_addr_165 | 0, $tmpcast) | 0;
       if (($call_i108 | 0) != 0) {
        _uselocale($call_i108 | 0) | 0;
       }
       if (($call1_i117 | 0) == 0) {
        $frm_addr_2 = $frm_addr_165 + 1 | 0;
       } else if (($call1_i117 | 0) == (-2 | 0)) {
        label = 14876;
        break;
       } else if (($call1_i117 | 0) == (-1 | 0)) {
        label = 14875;
        break;
       } else {
        $frm_addr_2 = $frm_addr_165 + $call1_i117 | 0;
       }
       $incdec_ptr24 = (HEAP32[$to_nxt >> 2] | 0) + 4 | 0;
       HEAP32[$to_nxt >> 2] = $incdec_ptr24;
       if (($frm_addr_2 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
        $frm_addr_1_lcssa = $frm_addr_2;
        break L17450;
       } else {
        $storemerge64 = $incdec_ptr24;
        $frm_addr_165 = $frm_addr_2;
       }
      }
      if ((label | 0) == 14876) {
       HEAP32[$frm_nxt >> 2] = $frm_addr_165;
       $retval_0 = 1;
       STACKTOP = __stackBase__;
       return $retval_0 | 0;
      } else if ((label | 0) == 14875) {
       HEAP32[$frm_nxt >> 2] = $frm_addr_165;
       $retval_0 = 2;
       STACKTOP = __stackBase__;
       return $retval_0 | 0;
      }
     }
    } while (0);
    HEAP32[$frm_nxt >> 2] = $frm_addr_1_lcssa;
    $retval_0 = ($frm_addr_1_lcssa | 0) != ($frm_end | 0) & 1;
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   }
  }
 } while (0);
 $retval_0 = ($18 | 0) != ($frm_end | 0) & 1;
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __ZNKSt3__17codecvtIwc10_mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $st, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $call_i = 0;
 HEAP32[$to_nxt >> 2] = $to;
 $call_i = _uselocale(HEAP32[$this + 8 >> 2] | 0) | 0;
 if (($call_i | 0) == 0) {
  return 0;
 }
 _uselocale($call_i | 0) | 0;
 return 0;
}
function __ZNKSt3__17codecvtIwc10_mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 var $__l = 0, $call_i10 = 0, $2 = 0, $call_i116 = 0, $call1_i67 = 0, $cmp7 = 0, $_ = 0;
 $__l = $this + 8 | 0;
 $call_i10 = _uselocale(HEAP32[$__l >> 2] | 0) | 0;
 if (($call_i10 | 0) != 0) {
  _uselocale($call_i10 | 0) | 0;
 }
 $2 = HEAP32[$__l >> 2] | 0;
 if (($2 | 0) == 0) {
  return 1;
 }
 $call_i116 = _uselocale($2 | 0) | 0;
 $call1_i67 = ___locale_mb_cur_max() | 0;
 if (($call_i116 | 0) == 0) {
  $cmp7 = ($call1_i67 | 0) == 1;
  $_ = $cmp7 & 1;
  return $_ | 0;
 }
 _uselocale($call_i116 | 0) | 0;
 $cmp7 = ($call1_i67 | 0) == 1;
 $_ = $cmp7 & 1;
 return $_ | 0;
}
function __ZNKSt3__17codecvtIwc10_mbstate_tE9do_lengthERS1_PKcS5_j($this, $st, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 var $sub_ptr_lhs_cast = 0, $__l = 0, $cond_i = 0, $nwchar_t_020 = 0, $nbytes_019 = 0, $frm_addr_018 = 0, $call_i = 0, $call_i13 = 0, $frm_addr_1 = 0, $call1_i_pn = 0, $nbytes_1 = 0, $inc4 = 0, $nbytes_0_lcssa = 0, label = 0;
 if (($mx | 0) == 0 | ($frm | 0) == ($frm_end | 0)) {
  $nbytes_0_lcssa = 0;
  return $nbytes_0_lcssa | 0;
 }
 $sub_ptr_lhs_cast = $frm_end;
 $__l = $this + 8 | 0;
 $cond_i = ($st | 0) != 0 ? $st : 264;
 $frm_addr_018 = $frm;
 $nbytes_019 = 0;
 $nwchar_t_020 = 0;
 while (1) {
  $call_i = _uselocale(HEAP32[$__l >> 2] | 0) | 0;
  $call_i13 = _mbrtowc(0, $frm_addr_018, $sub_ptr_lhs_cast - $frm_addr_018 | 0, $cond_i) | 0;
  if (($call_i | 0) != 0) {
   _uselocale($call_i | 0) | 0;
  }
  if (($call_i13 | 0) == (-1 | 0) | ($call_i13 | 0) == (-2 | 0)) {
   $nbytes_0_lcssa = $nbytes_019;
   label = 14937;
   break;
  } else if (($call_i13 | 0) == 0) {
   $call1_i_pn = 1;
   $frm_addr_1 = $frm_addr_018 + 1 | 0;
  } else {
   $call1_i_pn = $call_i13;
   $frm_addr_1 = $frm_addr_018 + $call_i13 | 0;
  }
  $nbytes_1 = $call1_i_pn + $nbytes_019 | 0;
  $inc4 = $nwchar_t_020 + 1 | 0;
  if ($inc4 >>> 0 >= $mx >>> 0 | ($frm_addr_1 | 0) == ($frm_end | 0)) {
   $nbytes_0_lcssa = $nbytes_1;
   label = 14936;
   break;
  } else {
   $frm_addr_018 = $frm_addr_1;
   $nbytes_019 = $nbytes_1;
   $nwchar_t_020 = $inc4;
  }
 }
 if ((label | 0) == 14937) {
  return $nbytes_0_lcssa | 0;
 } else if ((label | 0) == 14936) {
  return $nbytes_0_lcssa | 0;
 }
 return 0;
}
function __ZNKSt3__17codecvtIwc10_mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 var $0 = 0, $call_i3 = 0, $call1_i = 0, $cond = 0;
 $0 = HEAP32[$this + 8 >> 2] | 0;
 if (($0 | 0) == 0) {
  $cond = 1;
  return $cond | 0;
 }
 $call_i3 = _uselocale($0 | 0) | 0;
 $call1_i = ___locale_mb_cur_max() | 0;
 if (($call_i3 | 0) == 0) {
  $cond = $call1_i;
  return $cond | 0;
 }
 _uselocale($call_i3 | 0) | 0;
 $cond = $call1_i;
 return $cond | 0;
}
function __ZNKSt3__17codecvtIDsc10_mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDsc10_mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNKSt3__17codecvtIDsc10_mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNKSt3__17codecvtIDsc10_mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 4;
}
function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $_pre73 = 0, $add_ptr = 0, $3 = 0, $sub_ptr_lhs_cast29 = 0, $sub_ptr_lhs_cast148 = 0, $4 = 0, $5 = 0, $6 = 0, $conv14 = 0, $conv36 = 0, $or = 0, $10 = 0, $11 = 0, $conv81 = 0, $or96 = 0, $13 = 0, $14 = 0, $15 = 0, $conv140 = 0, $conv143 = 0, $and155 = 0, $conv157 = 0, $and161 = 0, $and165 = 0, $incdec_ptr195 = 0, $incdec_ptr203 = 0, $20 = 0, $21 = 0, $retval_0 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 $_pre73 = HEAP32[$frm_nxt >> 2] | 0;
 do {
  if (($mode & 4 | 0) == 0) {
   $3 = $_pre73;
  } else {
   if (($frm_end - $_pre73 | 0) <= 2) {
    $3 = $_pre73;
    break;
   }
   if ((HEAP8[$_pre73] | 0) != -17) {
    $3 = $_pre73;
    break;
   }
   if ((HEAP8[$_pre73 + 1 | 0] | 0) != -69) {
    $3 = $_pre73;
    break;
   }
   if ((HEAP8[$_pre73 + 2 | 0] | 0) != -65) {
    $3 = $_pre73;
    break;
   }
   $add_ptr = $_pre73 + 3 | 0;
   HEAP32[$frm_nxt >> 2] = $add_ptr;
   $3 = $add_ptr;
  }
 } while (0);
 L17526 : do {
  if ($3 >>> 0 < $frm_end >>> 0) {
   $sub_ptr_lhs_cast29 = $frm_end;
   $sub_ptr_lhs_cast148 = $to_end;
   $5 = HEAP32[$to_nxt >> 2] | 0;
   $4 = $3;
   L17528 : while (1) {
    if ($5 >>> 0 >= $to_end >>> 0) {
     $21 = $4;
     break L17526;
    }
    $6 = HEAP8[$4] | 0;
    $conv14 = $6 & 255;
    if ($conv14 >>> 0 > $Maxcode >>> 0) {
     $retval_0 = 2;
     label = 15003;
     break;
    }
    do {
     if ($6 << 24 >> 24 > -1) {
      HEAP16[$5 >> 1] = $6 & 255;
      HEAP32[$frm_nxt >> 2] = (HEAP32[$frm_nxt >> 2] | 0) + 1;
     } else {
      if (($6 & 255) < 194) {
       $retval_0 = 2;
       label = 15005;
       break L17528;
      }
      if (($6 & 255) < 224) {
       if (($sub_ptr_lhs_cast29 - $4 | 0) < 2) {
        $retval_0 = 1;
        label = 15014;
        break L17528;
       }
       $conv36 = HEAPU8[$4 + 1 | 0] | 0;
       if (($conv36 & 192 | 0) != 128) {
        $retval_0 = 2;
        label = 15011;
        break L17528;
       }
       $or = $conv36 & 63 | $conv14 << 6 & 1984;
       if ($or >>> 0 > $Maxcode >>> 0) {
        $retval_0 = 2;
        label = 15002;
        break L17528;
       }
       HEAP16[$5 >> 1] = $or & 65535;
       HEAP32[$frm_nxt >> 2] = (HEAP32[$frm_nxt >> 2] | 0) + 2;
       break;
      }
      if (($6 & 255) < 240) {
       if (($sub_ptr_lhs_cast29 - $4 | 0) < 3) {
        $retval_0 = 1;
        label = 15017;
        break L17528;
       }
       $10 = HEAP8[$4 + 1 | 0] | 0;
       $11 = HEAP8[$4 + 2 | 0] | 0;
       if (($conv14 | 0) == 237) {
        if (($10 & -32) << 24 >> 24 != -128) {
         $retval_0 = 2;
         label = 15009;
         break L17528;
        }
       } else if (($conv14 | 0) == 224) {
        if (($10 & -32) << 24 >> 24 != -96) {
         $retval_0 = 2;
         label = 15016;
         break L17528;
        }
       } else {
        if (($10 & -64) << 24 >> 24 != -128) {
         $retval_0 = 2;
         label = 15012;
         break L17528;
        }
       }
       $conv81 = $11 & 255;
       if (($conv81 & 192 | 0) != 128) {
        $retval_0 = 2;
        label = 15010;
        break L17528;
       }
       $or96 = ($10 & 255) << 6 & 4032 | $conv14 << 12 | $conv81 & 63;
       if (($or96 & 65535) >>> 0 > $Maxcode >>> 0) {
        $retval_0 = 2;
        label = 15008;
        break L17528;
       }
       HEAP16[$5 >> 1] = $or96 & 65535;
       HEAP32[$frm_nxt >> 2] = (HEAP32[$frm_nxt >> 2] | 0) + 3;
       break;
      }
      if (($6 & 255) >= 245) {
       $retval_0 = 2;
       label = 15004;
       break L17528;
      }
      if (($sub_ptr_lhs_cast29 - $4 | 0) < 4) {
       $retval_0 = 1;
       label = 15001;
       break L17528;
      }
      $13 = HEAP8[$4 + 1 | 0] | 0;
      $14 = HEAP8[$4 + 2 | 0] | 0;
      $15 = HEAP8[$4 + 3 | 0] | 0;
      if (($conv14 | 0) == 240) {
       if (($13 + 112 & 255) >= 48) {
        $retval_0 = 2;
        label = 14999;
        break L17528;
       }
      } else if (($conv14 | 0) == 244) {
       if (($13 & -16) << 24 >> 24 != -128) {
        $retval_0 = 2;
        label = 15e3;
        break L17528;
       }
      } else {
       if (($13 & -64) << 24 >> 24 != -128) {
        $retval_0 = 2;
        label = 15006;
        break L17528;
       }
      }
      $conv140 = $14 & 255;
      if (($conv140 & 192 | 0) != 128) {
       $retval_0 = 2;
       label = 15018;
       break L17528;
      }
      $conv143 = $15 & 255;
      if (($conv143 & 192 | 0) != 128) {
       $retval_0 = 2;
       label = 15013;
       break L17528;
      }
      if (($sub_ptr_lhs_cast148 - $5 | 0) < 4) {
       $retval_0 = 1;
       label = 15015;
       break L17528;
      }
      $and155 = $conv14 & 7;
      $conv157 = $13 & 255;
      $and161 = $conv140 << 6;
      $and165 = $conv143 & 63;
      if (($conv157 << 12 & 258048 | $and155 << 18 | $and161 & 4032 | $and165) >>> 0 > $Maxcode >>> 0) {
       $retval_0 = 2;
       label = 14998;
       break L17528;
      }
      HEAP16[$5 >> 1] = ($conv157 << 2 & 60 | $conv140 >>> 4 & 3 | (($conv157 >>> 4 & 3 | $and155 << 2) << 6) + 16320 | 55296) & 65535;
      $incdec_ptr195 = (HEAP32[$to_nxt >> 2] | 0) + 2 | 0;
      HEAP32[$to_nxt >> 2] = $incdec_ptr195;
      HEAP16[$incdec_ptr195 >> 1] = ($and165 | $and161 & 960 | 56320) & 65535;
      HEAP32[$frm_nxt >> 2] = (HEAP32[$frm_nxt >> 2] | 0) + 4;
     }
    } while (0);
    $incdec_ptr203 = (HEAP32[$to_nxt >> 2] | 0) + 2 | 0;
    HEAP32[$to_nxt >> 2] = $incdec_ptr203;
    $20 = HEAP32[$frm_nxt >> 2] | 0;
    if ($20 >>> 0 < $frm_end >>> 0) {
     $5 = $incdec_ptr203;
     $4 = $20;
    } else {
     $21 = $20;
     break L17526;
    }
   }
   if ((label | 0) == 15011) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15012) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15013) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15014) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15015) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15016) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15003) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15004) {
    return $retval_0 | 0;
   } else if ((label | 0) == 14998) {
    return $retval_0 | 0;
   } else if ((label | 0) == 14999) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15e3) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15001) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15002) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15008) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15009) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15010) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15005) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15006) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15017) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15018) {
    return $retval_0 | 0;
   }
  } else {
   $21 = $3;
  }
 } while (0);
 $retval_0 = $21 >>> 0 < $frm_end >>> 0 & 1;
 return $retval_0 | 0;
}
function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $frm_nxt_1_ph = 0, $sub_ptr_lhs_cast28 = 0, $frm_nxt_181 = 0, $nchar16_t_080 = 0, $3 = 0, $conv14 = 0, $conv33 = 0, $sub_ptr_rhs_cast54 = 0, $5 = 0, $6 = 0, $conv87 = 0, $sub_ptr_rhs_cast111 = 0, $7 = 0, $8 = 0, $9 = 0, $conv154 = 0, $conv158 = 0, $nchar16_t_1 = 0, $frm_nxt_2 = 0, $inc186 = 0, $frm_nxt_1_lcssa = 0, $retval_0 = 0, label = 0;
 do {
  if (($mode & 4 | 0) == 0) {
   $frm_nxt_1_ph = $frm;
  } else {
   if (($frm_end - $frm | 0) <= 2) {
    $frm_nxt_1_ph = $frm;
    break;
   }
   if ((HEAP8[$frm] | 0) != -17) {
    $frm_nxt_1_ph = $frm;
    break;
   }
   if ((HEAP8[$frm + 1 | 0] | 0) != -69) {
    $frm_nxt_1_ph = $frm;
    break;
   }
   $frm_nxt_1_ph = (HEAP8[$frm + 2 | 0] | 0) == -65 ? $frm + 3 | 0 : $frm;
  }
 } while (0);
 L17595 : do {
  if ($frm_nxt_1_ph >>> 0 < $frm_end >>> 0 & ($mx | 0) != 0) {
   $sub_ptr_lhs_cast28 = $frm_end;
   $nchar16_t_080 = 0;
   $frm_nxt_181 = $frm_nxt_1_ph;
   L17597 : while (1) {
    $3 = HEAP8[$frm_nxt_181] | 0;
    $conv14 = $3 & 255;
    if ($conv14 >>> 0 > $Maxcode >>> 0) {
     $frm_nxt_1_lcssa = $frm_nxt_181;
     break L17595;
    }
    do {
     if ($3 << 24 >> 24 > -1) {
      $frm_nxt_2 = $frm_nxt_181 + 1 | 0;
      $nchar16_t_1 = $nchar16_t_080;
     } else {
      if (($3 & 255) < 194) {
       $frm_nxt_1_lcssa = $frm_nxt_181;
       break L17595;
      }
      if (($3 & 255) < 224) {
       if (($sub_ptr_lhs_cast28 - $frm_nxt_181 | 0) < 2) {
        $frm_nxt_1_lcssa = $frm_nxt_181;
        break L17595;
       }
       $conv33 = HEAPU8[$frm_nxt_181 + 1 | 0] | 0;
       if (($conv33 & 192 | 0) != 128) {
        $frm_nxt_1_lcssa = $frm_nxt_181;
        break L17595;
       }
       if (($conv33 & 63 | $conv14 << 6 & 1984) >>> 0 > $Maxcode >>> 0) {
        $frm_nxt_1_lcssa = $frm_nxt_181;
        break L17595;
       }
       $frm_nxt_2 = $frm_nxt_181 + 2 | 0;
       $nchar16_t_1 = $nchar16_t_080;
       break;
      }
      if (($3 & 255) < 240) {
       $sub_ptr_rhs_cast54 = $frm_nxt_181;
       if (($sub_ptr_lhs_cast28 - $sub_ptr_rhs_cast54 | 0) < 3) {
        $frm_nxt_1_lcssa = $frm_nxt_181;
        break L17595;
       }
       $5 = HEAP8[$frm_nxt_181 + 1 | 0] | 0;
       $6 = HEAP8[$frm_nxt_181 + 2 | 0] | 0;
       if (($conv14 | 0) == 237) {
        if (($5 & -32) << 24 >> 24 != -128) {
         label = 15041;
         break L17597;
        }
       } else if (($conv14 | 0) == 224) {
        if (($5 & -32) << 24 >> 24 != -96) {
         label = 15039;
         break L17597;
        }
       } else {
        if (($5 & -64) << 24 >> 24 != -128) {
         label = 15043;
         break L17597;
        }
       }
       $conv87 = $6 & 255;
       if (($conv87 & 192 | 0) != 128) {
        $frm_nxt_1_lcssa = $frm_nxt_181;
        break L17595;
       }
       if ((($5 & 255) << 6 & 4032 | $conv14 << 12 & 61440 | $conv87 & 63) >>> 0 > $Maxcode >>> 0) {
        $frm_nxt_1_lcssa = $frm_nxt_181;
        break L17595;
       }
       $frm_nxt_2 = $frm_nxt_181 + 3 | 0;
       $nchar16_t_1 = $nchar16_t_080;
       break;
      }
      if (($3 & 255) >= 245) {
       $frm_nxt_1_lcssa = $frm_nxt_181;
       break L17595;
      }
      $sub_ptr_rhs_cast111 = $frm_nxt_181;
      if (($sub_ptr_lhs_cast28 - $sub_ptr_rhs_cast111 | 0) < 4) {
       $frm_nxt_1_lcssa = $frm_nxt_181;
       break L17595;
      }
      if (($mx - $nchar16_t_080 | 0) >>> 0 < 2) {
       $frm_nxt_1_lcssa = $frm_nxt_181;
       break L17595;
      }
      $7 = HEAP8[$frm_nxt_181 + 1 | 0] | 0;
      $8 = HEAP8[$frm_nxt_181 + 2 | 0] | 0;
      $9 = HEAP8[$frm_nxt_181 + 3 | 0] | 0;
      if (($conv14 | 0) == 244) {
       if (($7 & -16) << 24 >> 24 != -128) {
        label = 15054;
        break L17597;
       }
      } else if (($conv14 | 0) == 240) {
       if (($7 + 112 & 255) >= 48) {
        label = 15052;
        break L17597;
       }
      } else {
       if (($7 & -64) << 24 >> 24 != -128) {
        label = 15056;
        break L17597;
       }
      }
      $conv154 = $8 & 255;
      if (($conv154 & 192 | 0) != 128) {
       $frm_nxt_1_lcssa = $frm_nxt_181;
       break L17595;
      }
      $conv158 = $9 & 255;
      if (($conv158 & 192 | 0) != 128) {
       $frm_nxt_1_lcssa = $frm_nxt_181;
       break L17595;
      }
      if ((($7 & 255) << 12 & 258048 | $conv14 << 18 & 1835008 | $conv154 << 6 & 4032 | $conv158 & 63) >>> 0 > $Maxcode >>> 0) {
       $frm_nxt_1_lcssa = $frm_nxt_181;
       break L17595;
      }
      $frm_nxt_2 = $frm_nxt_181 + 4 | 0;
      $nchar16_t_1 = $nchar16_t_080 + 1 | 0;
     }
    } while (0);
    $inc186 = $nchar16_t_1 + 1 | 0;
    if ($frm_nxt_2 >>> 0 < $frm_end >>> 0 & $inc186 >>> 0 < $mx >>> 0) {
     $nchar16_t_080 = $inc186;
     $frm_nxt_181 = $frm_nxt_2;
    } else {
     $frm_nxt_1_lcssa = $frm_nxt_2;
     break L17595;
    }
   }
   if ((label | 0) == 15054) {
    $retval_0 = $sub_ptr_rhs_cast111 - $frm | 0;
    return $retval_0 | 0;
   } else if ((label | 0) == 15056) {
    $retval_0 = $sub_ptr_rhs_cast111 - $frm | 0;
    return $retval_0 | 0;
   } else if ((label | 0) == 15039) {
    $retval_0 = $sub_ptr_rhs_cast54 - $frm | 0;
    return $retval_0 | 0;
   } else if ((label | 0) == 15041) {
    $retval_0 = $sub_ptr_rhs_cast54 - $frm | 0;
    return $retval_0 | 0;
   } else if ((label | 0) == 15043) {
    $retval_0 = $sub_ptr_rhs_cast54 - $frm | 0;
    return $retval_0 | 0;
   } else if ((label | 0) == 15052) {
    $retval_0 = $sub_ptr_rhs_cast111 - $frm | 0;
    return $retval_0 | 0;
   }
  } else {
   $frm_nxt_1_lcssa = $frm_nxt_1_ph;
  }
 } while (0);
 $retval_0 = $frm_nxt_1_lcssa - $frm | 0;
 return $retval_0 | 0;
}
function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $0 = 0, $1 = 0, $2 = 0, $sub_ptr_lhs_cast13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $sub_ptr_sub39 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $incdec_ptr84 = 0, $retval_0 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 do {
  if (($mode & 2 | 0) != 0) {
   if (($to_end - $to | 0) < 3) {
    $retval_0 = 1;
    return $retval_0 | 0;
   } else {
    HEAP32[$to_nxt >> 2] = $to + 1;
    HEAP8[$to] = -17;
    $0 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $0 + 1;
    HEAP8[$0] = -69;
    $1 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $1 + 1;
    HEAP8[$1] = -65;
    break;
   }
  }
 } while (0);
 $2 = HEAP32[$frm_nxt >> 2] | 0;
 if ($2 >>> 0 >= $frm_end >>> 0) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 $sub_ptr_lhs_cast13 = $to_end;
 $3 = $2;
 L17658 : while (1) {
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 & -2048 | 0) == 55296 | $4 >>> 0 > $Maxcode >>> 0) {
   $retval_0 = 2;
   label = 15090;
   break;
  }
  do {
   if ($4 >>> 0 < 128) {
    $5 = HEAP32[$to_nxt >> 2] | 0;
    if (($sub_ptr_lhs_cast13 - $5 | 0) < 1) {
     $retval_0 = 1;
     label = 15093;
     break L17658;
    }
    HEAP32[$to_nxt >> 2] = $5 + 1;
    HEAP8[$5] = $4 & 255;
   } else {
    if ($4 >>> 0 < 2048) {
     $6 = HEAP32[$to_nxt >> 2] | 0;
     if (($sub_ptr_lhs_cast13 - $6 | 0) < 2) {
      $retval_0 = 1;
      label = 15091;
      break L17658;
     }
     HEAP32[$to_nxt >> 2] = $6 + 1;
     HEAP8[$6] = ($4 >>> 6 | 192) & 255;
     $7 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $7 + 1;
     HEAP8[$7] = ($4 & 63 | 128) & 255;
     break;
    }
    $8 = HEAP32[$to_nxt >> 2] | 0;
    $sub_ptr_sub39 = $sub_ptr_lhs_cast13 - $8 | 0;
    if ($4 >>> 0 < 65536) {
     if (($sub_ptr_sub39 | 0) < 3) {
      $retval_0 = 1;
      label = 15094;
      break L17658;
     }
     HEAP32[$to_nxt >> 2] = $8 + 1;
     HEAP8[$8] = ($4 >>> 12 | 224) & 255;
     $9 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $9 + 1;
     HEAP8[$9] = ($4 >>> 6 & 63 | 128) & 255;
     $10 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $10 + 1;
     HEAP8[$10] = ($4 & 63 | 128) & 255;
     break;
    } else {
     if (($sub_ptr_sub39 | 0) < 4) {
      $retval_0 = 1;
      label = 15096;
      break L17658;
     }
     HEAP32[$to_nxt >> 2] = $8 + 1;
     HEAP8[$8] = ($4 >>> 18 | 240) & 255;
     $11 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $11 + 1;
     HEAP8[$11] = ($4 >>> 12 & 63 | 128) & 255;
     $12 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $12 + 1;
     HEAP8[$12] = ($4 >>> 6 & 63 | 128) & 255;
     $13 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $13 + 1;
     HEAP8[$13] = ($4 & 63 | 128) & 255;
     break;
    }
   }
  } while (0);
  $incdec_ptr84 = (HEAP32[$frm_nxt >> 2] | 0) + 4 | 0;
  HEAP32[$frm_nxt >> 2] = $incdec_ptr84;
  if ($incdec_ptr84 >>> 0 < $frm_end >>> 0) {
   $3 = $incdec_ptr84;
  } else {
   $retval_0 = 0;
   label = 15095;
   break;
  }
 }
 if ((label | 0) == 15096) {
  return $retval_0 | 0;
 } else if ((label | 0) == 15095) {
  return $retval_0 | 0;
 } else if ((label | 0) == 15090) {
  return $retval_0 | 0;
 } else if ((label | 0) == 15093) {
  return $retval_0 | 0;
 } else if ((label | 0) == 15094) {
  return $retval_0 | 0;
 } else if ((label | 0) == 15091) {
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNKSt3__17codecvtIDsc10_mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 return __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, 1114111, 0) | 0;
}
function __ZNSt3__17codecvtIDic10_mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDic10_mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $_frm_nxt = 0, $_to_nxt = 0, $call = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = __stackBase__ | 0;
 $_to_nxt = __stackBase__ + 8 | 0;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $call = __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = $frm + ((HEAP32[$_frm_nxt >> 2] | 0) - $frm >> 2 << 2);
 HEAP32[$to_nxt >> 2] = $to + ((HEAP32[$_to_nxt >> 2] | 0) - $to);
 STACKTOP = __stackBase__;
 return $call | 0;
}
function __ZNKSt3__17codecvtIDic10_mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $_frm_nxt = 0, $_to_nxt = 0, $call = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = __stackBase__ | 0;
 $_to_nxt = __stackBase__ + 8 | 0;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $call = __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = $frm + ((HEAP32[$_frm_nxt >> 2] | 0) - $frm);
 HEAP32[$to_nxt >> 2] = $to + ((HEAP32[$_to_nxt >> 2] | 0) - $to >> 2 << 2);
 STACKTOP = __stackBase__;
 return $call | 0;
}
function __ZNKSt3__17codecvtIDic10_mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDic10_mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNKSt3__17codecvtIDic10_mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNKSt3__17codecvtIDic10_mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 4;
}
function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $_pre63 = 0, $add_ptr = 0, $3 = 0, $sub_ptr_lhs_cast29 = 0, $4 = 0, $5 = 0, $6 = 0, $conv14 = 0, $conv36 = 0, $or = 0, $10 = 0, $11 = 0, $conv79 = 0, $or94 = 0, $13 = 0, $14 = 0, $15 = 0, $conv136 = 0, $conv139 = 0, $or158 = 0, $incdec_ptr169 = 0, $19 = 0, $20 = 0, $retval_0 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 $_pre63 = HEAP32[$frm_nxt >> 2] | 0;
 do {
  if (($mode & 4 | 0) == 0) {
   $3 = $_pre63;
  } else {
   if (($frm_end - $_pre63 | 0) <= 2) {
    $3 = $_pre63;
    break;
   }
   if ((HEAP8[$_pre63] | 0) != -17) {
    $3 = $_pre63;
    break;
   }
   if ((HEAP8[$_pre63 + 1 | 0] | 0) != -69) {
    $3 = $_pre63;
    break;
   }
   if ((HEAP8[$_pre63 + 2 | 0] | 0) != -65) {
    $3 = $_pre63;
    break;
   }
   $add_ptr = $_pre63 + 3 | 0;
   HEAP32[$frm_nxt >> 2] = $add_ptr;
   $3 = $add_ptr;
  }
 } while (0);
 L17698 : do {
  if ($3 >>> 0 < $frm_end >>> 0) {
   $sub_ptr_lhs_cast29 = $frm_end;
   $5 = HEAP32[$to_nxt >> 2] | 0;
   $4 = $3;
   L17700 : while (1) {
    if ($5 >>> 0 >= $to_end >>> 0) {
     $20 = $4;
     break L17698;
    }
    $6 = HEAP8[$4] | 0;
    $conv14 = $6 & 255;
    do {
     if ($6 << 24 >> 24 > -1) {
      if ($conv14 >>> 0 > $Maxcode >>> 0) {
       $retval_0 = 2;
       label = 15149;
       break L17700;
      }
      HEAP32[$5 >> 2] = $conv14;
      HEAP32[$frm_nxt >> 2] = (HEAP32[$frm_nxt >> 2] | 0) + 1;
     } else {
      if (($6 & 255) < 194) {
       $retval_0 = 2;
       label = 15163;
       break L17700;
      }
      if (($6 & 255) < 224) {
       if (($sub_ptr_lhs_cast29 - $4 | 0) < 2) {
        $retval_0 = 1;
        label = 15155;
        break L17700;
       }
       $conv36 = HEAPU8[$4 + 1 | 0] | 0;
       if (($conv36 & 192 | 0) != 128) {
        $retval_0 = 2;
        label = 15150;
        break L17700;
       }
       $or = $conv36 & 63 | $conv14 << 6 & 1984;
       if ($or >>> 0 > $Maxcode >>> 0) {
        $retval_0 = 2;
        label = 15158;
        break L17700;
       }
       HEAP32[$5 >> 2] = $or;
       HEAP32[$frm_nxt >> 2] = (HEAP32[$frm_nxt >> 2] | 0) + 2;
       break;
      }
      if (($6 & 255) < 240) {
       if (($sub_ptr_lhs_cast29 - $4 | 0) < 3) {
        $retval_0 = 1;
        label = 15159;
        break L17700;
       }
       $10 = HEAP8[$4 + 1 | 0] | 0;
       $11 = HEAP8[$4 + 2 | 0] | 0;
       if (($conv14 | 0) == 237) {
        if (($10 & -32) << 24 >> 24 != -128) {
         $retval_0 = 2;
         label = 15152;
         break L17700;
        }
       } else if (($conv14 | 0) == 224) {
        if (($10 & -32) << 24 >> 24 != -96) {
         $retval_0 = 2;
         label = 15154;
         break L17700;
        }
       } else {
        if (($10 & -64) << 24 >> 24 != -128) {
         $retval_0 = 2;
         label = 15153;
         break L17700;
        }
       }
       $conv79 = $11 & 255;
       if (($conv79 & 192 | 0) != 128) {
        $retval_0 = 2;
        label = 15146;
        break L17700;
       }
       $or94 = ($10 & 255) << 6 & 4032 | $conv14 << 12 & 61440 | $conv79 & 63;
       if ($or94 >>> 0 > $Maxcode >>> 0) {
        $retval_0 = 2;
        label = 15160;
        break L17700;
       }
       HEAP32[$5 >> 2] = $or94;
       HEAP32[$frm_nxt >> 2] = (HEAP32[$frm_nxt >> 2] | 0) + 3;
       break;
      }
      if (($6 & 255) >= 245) {
       $retval_0 = 2;
       label = 15151;
       break L17700;
      }
      if (($sub_ptr_lhs_cast29 - $4 | 0) < 4) {
       $retval_0 = 1;
       label = 15157;
       break L17700;
      }
      $13 = HEAP8[$4 + 1 | 0] | 0;
      $14 = HEAP8[$4 + 2 | 0] | 0;
      $15 = HEAP8[$4 + 3 | 0] | 0;
      if (($conv14 | 0) == 244) {
       if (($13 & -16) << 24 >> 24 != -128) {
        $retval_0 = 2;
        label = 15162;
        break L17700;
       }
      } else if (($conv14 | 0) == 240) {
       if (($13 + 112 & 255) >= 48) {
        $retval_0 = 2;
        label = 15164;
        break L17700;
       }
      } else {
       if (($13 & -64) << 24 >> 24 != -128) {
        $retval_0 = 2;
        label = 15161;
        break L17700;
       }
      }
      $conv136 = $14 & 255;
      if (($conv136 & 192 | 0) != 128) {
       $retval_0 = 2;
       label = 15156;
       break L17700;
      }
      $conv139 = $15 & 255;
      if (($conv139 & 192 | 0) != 128) {
       $retval_0 = 2;
       label = 15148;
       break L17700;
      }
      $or158 = ($13 & 255) << 12 & 258048 | $conv14 << 18 & 1835008 | $conv136 << 6 & 4032 | $conv139 & 63;
      if ($or158 >>> 0 > $Maxcode >>> 0) {
       $retval_0 = 2;
       label = 15147;
       break L17700;
      }
      HEAP32[$5 >> 2] = $or158;
      HEAP32[$frm_nxt >> 2] = (HEAP32[$frm_nxt >> 2] | 0) + 4;
     }
    } while (0);
    $incdec_ptr169 = (HEAP32[$to_nxt >> 2] | 0) + 4 | 0;
    HEAP32[$to_nxt >> 2] = $incdec_ptr169;
    $19 = HEAP32[$frm_nxt >> 2] | 0;
    if ($19 >>> 0 < $frm_end >>> 0) {
     $5 = $incdec_ptr169;
     $4 = $19;
    } else {
     $20 = $19;
     break L17698;
    }
   }
   if ((label | 0) == 15160) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15161) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15162) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15163) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15154) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15155) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15156) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15164) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15157) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15158) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15159) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15146) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15147) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15148) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15151) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15152) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15153) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15149) {
    return $retval_0 | 0;
   } else if ((label | 0) == 15150) {
    return $retval_0 | 0;
   }
  } else {
   $20 = $3;
  }
 } while (0);
 $retval_0 = $20 >>> 0 < $frm_end >>> 0 & 1;
 return $retval_0 | 0;
}
function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $frm_nxt_1_ph = 0, $sub_ptr_lhs_cast28 = 0, $frm_nxt_177 = 0, $nchar32_t_076 = 0, $3 = 0, $conv14 = 0, $conv33 = 0, $sub_ptr_rhs_cast52 = 0, $5 = 0, $6 = 0, $conv85 = 0, $sub_ptr_rhs_cast109 = 0, $7 = 0, $8 = 0, $9 = 0, $conv150 = 0, $conv154 = 0, $frm_nxt_2 = 0, $frm_nxt_1_lcssa = 0, $retval_0 = 0, label = 0;
 do {
  if (($mode & 4 | 0) == 0) {
   $frm_nxt_1_ph = $frm;
  } else {
   if (($frm_end - $frm | 0) <= 2) {
    $frm_nxt_1_ph = $frm;
    break;
   }
   if ((HEAP8[$frm] | 0) != -17) {
    $frm_nxt_1_ph = $frm;
    break;
   }
   if ((HEAP8[$frm + 1 | 0] | 0) != -69) {
    $frm_nxt_1_ph = $frm;
    break;
   }
   $frm_nxt_1_ph = (HEAP8[$frm + 2 | 0] | 0) == -65 ? $frm + 3 | 0 : $frm;
  }
 } while (0);
 L17765 : do {
  if ($frm_nxt_1_ph >>> 0 < $frm_end >>> 0 & ($mx | 0) != 0) {
   $sub_ptr_lhs_cast28 = $frm_end;
   $nchar32_t_076 = 1;
   $frm_nxt_177 = $frm_nxt_1_ph;
   L17767 : while (1) {
    $3 = HEAP8[$frm_nxt_177] | 0;
    $conv14 = $3 & 255;
    do {
     if ($3 << 24 >> 24 > -1) {
      if ($conv14 >>> 0 > $Maxcode >>> 0) {
       $frm_nxt_1_lcssa = $frm_nxt_177;
       break L17765;
      }
      $frm_nxt_2 = $frm_nxt_177 + 1 | 0;
     } else {
      if (($3 & 255) < 194) {
       $frm_nxt_1_lcssa = $frm_nxt_177;
       break L17765;
      }
      if (($3 & 255) < 224) {
       if (($sub_ptr_lhs_cast28 - $frm_nxt_177 | 0) < 2) {
        $frm_nxt_1_lcssa = $frm_nxt_177;
        break L17765;
       }
       $conv33 = HEAPU8[$frm_nxt_177 + 1 | 0] | 0;
       if (($conv33 & 192 | 0) != 128) {
        $frm_nxt_1_lcssa = $frm_nxt_177;
        break L17765;
       }
       if (($conv33 & 63 | $conv14 << 6 & 1984) >>> 0 > $Maxcode >>> 0) {
        $frm_nxt_1_lcssa = $frm_nxt_177;
        break L17765;
       }
       $frm_nxt_2 = $frm_nxt_177 + 2 | 0;
       break;
      }
      if (($3 & 255) < 240) {
       $sub_ptr_rhs_cast52 = $frm_nxt_177;
       if (($sub_ptr_lhs_cast28 - $sub_ptr_rhs_cast52 | 0) < 3) {
        $frm_nxt_1_lcssa = $frm_nxt_177;
        break L17765;
       }
       $5 = HEAP8[$frm_nxt_177 + 1 | 0] | 0;
       $6 = HEAP8[$frm_nxt_177 + 2 | 0] | 0;
       if (($conv14 | 0) == 237) {
        if (($5 & -32) << 24 >> 24 != -128) {
         label = 15188;
         break L17767;
        }
       } else if (($conv14 | 0) == 224) {
        if (($5 & -32) << 24 >> 24 != -96) {
         label = 15186;
         break L17767;
        }
       } else {
        if (($5 & -64) << 24 >> 24 != -128) {
         label = 15190;
         break L17767;
        }
       }
       $conv85 = $6 & 255;
       if (($conv85 & 192 | 0) != 128) {
        $frm_nxt_1_lcssa = $frm_nxt_177;
        break L17765;
       }
       if ((($5 & 255) << 6 & 4032 | $conv14 << 12 & 61440 | $conv85 & 63) >>> 0 > $Maxcode >>> 0) {
        $frm_nxt_1_lcssa = $frm_nxt_177;
        break L17765;
       }
       $frm_nxt_2 = $frm_nxt_177 + 3 | 0;
       break;
      }
      if (($3 & 255) >= 245) {
       $frm_nxt_1_lcssa = $frm_nxt_177;
       break L17765;
      }
      $sub_ptr_rhs_cast109 = $frm_nxt_177;
      if (($sub_ptr_lhs_cast28 - $sub_ptr_rhs_cast109 | 0) < 4) {
       $frm_nxt_1_lcssa = $frm_nxt_177;
       break L17765;
      }
      $7 = HEAP8[$frm_nxt_177 + 1 | 0] | 0;
      $8 = HEAP8[$frm_nxt_177 + 2 | 0] | 0;
      $9 = HEAP8[$frm_nxt_177 + 3 | 0] | 0;
      if (($conv14 | 0) == 244) {
       if (($7 & -16) << 24 >> 24 != -128) {
        label = 15200;
        break L17767;
       }
      } else if (($conv14 | 0) == 240) {
       if (($7 + 112 & 255) >= 48) {
        label = 15198;
        break L17767;
       }
      } else {
       if (($7 & -64) << 24 >> 24 != -128) {
        label = 15202;
        break L17767;
       }
      }
      $conv150 = $8 & 255;
      if (($conv150 & 192 | 0) != 128) {
       $frm_nxt_1_lcssa = $frm_nxt_177;
       break L17765;
      }
      $conv154 = $9 & 255;
      if (($conv154 & 192 | 0) != 128) {
       $frm_nxt_1_lcssa = $frm_nxt_177;
       break L17765;
      }
      if ((($7 & 255) << 12 & 258048 | $conv14 << 18 & 1835008 | $conv150 << 6 & 4032 | $conv154 & 63) >>> 0 > $Maxcode >>> 0) {
       $frm_nxt_1_lcssa = $frm_nxt_177;
       break L17765;
      }
      $frm_nxt_2 = $frm_nxt_177 + 4 | 0;
     }
    } while (0);
    if (!($frm_nxt_2 >>> 0 < $frm_end >>> 0 & $nchar32_t_076 >>> 0 < $mx >>> 0)) {
     $frm_nxt_1_lcssa = $frm_nxt_2;
     break L17765;
    }
    $nchar32_t_076 = $nchar32_t_076 + 1 | 0;
    $frm_nxt_177 = $frm_nxt_2;
   }
   if ((label | 0) == 15202) {
    $retval_0 = $sub_ptr_rhs_cast109 - $frm | 0;
    return $retval_0 | 0;
   } else if ((label | 0) == 15186) {
    $retval_0 = $sub_ptr_rhs_cast52 - $frm | 0;
    return $retval_0 | 0;
   } else if ((label | 0) == 15198) {
    $retval_0 = $sub_ptr_rhs_cast109 - $frm | 0;
    return $retval_0 | 0;
   } else if ((label | 0) == 15200) {
    $retval_0 = $sub_ptr_rhs_cast109 - $frm | 0;
    return $retval_0 | 0;
   } else if ((label | 0) == 15190) {
    $retval_0 = $sub_ptr_rhs_cast52 - $frm | 0;
    return $retval_0 | 0;
   } else if ((label | 0) == 15188) {
    $retval_0 = $sub_ptr_rhs_cast52 - $frm | 0;
    return $retval_0 | 0;
   }
  } else {
   $frm_nxt_1_lcssa = $frm_nxt_1_ph;
  }
 } while (0);
 $retval_0 = $frm_nxt_1_lcssa - $frm | 0;
 return $retval_0 | 0;
}
function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return HEAP8[$this + 8 | 0] | 0;
}
function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 8 >> 2] | 0;
}
function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return HEAP8[$this + 9 | 0] | 0;
}
function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 12 >> 2] | 0;
}
function __ZNKSt3__18numpunctIcE11do_truenameEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $__s2_i_i = 0, $0 = 0;
 $__s2_i_i = $agg_result;
 HEAP8[$agg_result] = 8;
 $0 = $__s2_i_i + 1 | 0;
 tempBigInt = 1702195828;
 HEAP8[$0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 | 0] = tempBigInt & 255;
 HEAP8[$__s2_i_i + 5 | 0] = 0;
 return;
}
function __ZNKSt3__17codecvtIDic10_mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 return __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, 1114111, 0) | 0;
}
function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this | 0;
 var $3 = 0;
 HEAP32[$this >> 2] = 9776;
 if ((HEAP8[$this + 12 | 0] & 1) == 0) {
  $3 = $this;
  __ZdlPv($3);
  return;
 }
 __ZdlPv(HEAP32[$this + 20 >> 2] | 0);
 $3 = $this;
 __ZdlPv($3);
 return;
}
function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 9776;
 if ((HEAP8[$this + 12 | 0] & 1) == 0) {
  return;
 }
 __ZdlPv(HEAP32[$this + 20 >> 2] | 0);
 return;
}
function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this | 0;
 var $3 = 0;
 HEAP32[$this >> 2] = 9728;
 if ((HEAP8[$this + 16 | 0] & 1) == 0) {
  $3 = $this;
  __ZdlPv($3);
  return;
 }
 __ZdlPv(HEAP32[$this + 24 >> 2] | 0);
 $3 = $this;
 __ZdlPv($3);
 return;
}
function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 9728;
 if ((HEAP8[$this + 16 | 0] & 1) == 0) {
  return;
 }
 __ZdlPv(HEAP32[$this + 24 >> 2] | 0);
 return;
}
function __ZNKSt3__18numpunctIwE11do_truenameEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $call_i_i_i = 0, $0 = 0, $d_addr_05_i_i = 0, $n_addr_04_i_i = 0, $s_addr_03_i_i = 0, $dec_i_i = 0;
 $call_i_i_i = __Znwj(32) | 0;
 $0 = $call_i_i_i;
 HEAP32[$agg_result + 8 >> 2] = $0;
 HEAP32[$agg_result >> 2] = 9;
 HEAP32[$agg_result + 4 >> 2] = 4;
 $s_addr_03_i_i = 2736;
 $n_addr_04_i_i = 4;
 $d_addr_05_i_i = $0;
 while (1) {
  $dec_i_i = $n_addr_04_i_i - 1 | 0;
  HEAP32[$d_addr_05_i_i >> 2] = HEAP32[$s_addr_03_i_i >> 2];
  if (($dec_i_i | 0) == 0) {
   break;
  } else {
   $s_addr_03_i_i = $s_addr_03_i_i + 4 | 0;
   $n_addr_04_i_i = $dec_i_i;
   $d_addr_05_i_i = $d_addr_05_i_i + 4 | 0;
  }
 }
 HEAP32[$call_i_i_i + 16 >> 2] = 0;
 return;
}
function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $__s2_i_i = 0, $arraydecay_i_i = 0;
 $__s2_i_i = $agg_result;
 HEAP8[$agg_result] = 10;
 $arraydecay_i_i = $__s2_i_i + 1 | 0;
 HEAP8[$arraydecay_i_i] = HEAP8[2720] | 0;
 HEAP8[$arraydecay_i_i + 1 | 0] = HEAP8[2721 | 0] | 0;
 HEAP8[$arraydecay_i_i + 2 | 0] = HEAP8[2722 | 0] | 0;
 HEAP8[$arraydecay_i_i + 3 | 0] = HEAP8[2723 | 0] | 0;
 HEAP8[$arraydecay_i_i + 4 | 0] = HEAP8[2724 | 0] | 0;
 HEAP8[$__s2_i_i + 6 | 0] = 0;
 return;
}
function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $call_i_i_i = 0, $0 = 0, $d_addr_05_i_i = 0, $n_addr_04_i_i = 0, $s_addr_03_i_i = 0, $dec_i_i = 0;
 $call_i_i_i = __Znwj(32) | 0;
 $0 = $call_i_i_i;
 HEAP32[$agg_result + 8 >> 2] = $0;
 HEAP32[$agg_result >> 2] = 9;
 HEAP32[$agg_result + 4 >> 2] = 5;
 $s_addr_03_i_i = 2680;
 $n_addr_04_i_i = 5;
 $d_addr_05_i_i = $0;
 while (1) {
  $dec_i_i = $n_addr_04_i_i - 1 | 0;
  HEAP32[$d_addr_05_i_i >> 2] = HEAP32[$s_addr_03_i_i >> 2];
  if (($dec_i_i | 0) == 0) {
   break;
  } else {
   $s_addr_03_i_i = $s_addr_03_i_i + 4 | 0;
   $n_addr_04_i_i = $dec_i_i;
   $d_addr_05_i_i = $d_addr_05_i_i + 4 | 0;
  }
 }
 HEAP32[$call_i_i_i + 20 >> 2] = 0;
 return;
}
function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this | 0;
 var $1 = 0;
 if (HEAP8[18496] | 0) {
  $1 = HEAP32[2266] | 0;
  return $1 | 0;
 }
 if (!(HEAP8[18384] | 0)) {
  _memset(7688 | 0, 0 | 0, 168 | 0);
  _atexit(280, 0, ___dso_handle | 0) | 0;
  HEAP8[18384] = 1;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7688, 5152) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7700, 5096) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7712, 5064) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7724, 5040) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7736, 5e3) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7748, 4984) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7760, 4944) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7772, 4928) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7784, 4896) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7796, 4840) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7808, 4816) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7820, 4792) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7832, 4784) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7844, 4776) | 0;
 HEAP32[2266] = 7688;
 HEAP8[18496] = 1;
 $1 = 7688;
 return $1 | 0;
}
function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this | 0;
 var $1 = 0;
 if (HEAP8[18440] | 0) {
  $1 = HEAP32[2244] | 0;
  return $1 | 0;
 }
 if (!(HEAP8[18360] | 0)) {
  _memset(6944 | 0, 0 | 0, 168 | 0);
  _atexit(156, 0, ___dso_handle | 0) | 0;
  HEAP8[18360] = 1;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6944, 5912, 6) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6956, 5864, 6) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6968, 5808, 7) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6980, 5752, 9) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6992, 5664, 8) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(7004, 5624, 6) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(7016, 5528, 8) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(7028, 5496, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(7040, 5464, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(7052, 5400, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(7064, 5368, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(7076, 5344, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(7088, 5288, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(7100, 5232, 3) | 0;
 HEAP32[2244] = 6944;
 HEAP8[18440] = 1;
 $1 = 6944;
 return $1 | 0;
}
function __ZNKSt3__18numpunctIcE11do_groupingEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $__size__i43_i_i = 0, $1 = 0, $2 = 0, $3 = 0, $and_i_i_i_i_i = 0, $call_i_i_i_i_i = 0, $__p_0_i_i_i = 0;
 $__size__i43_i_i = $this + 12 | 0;
 if ((HEAP8[$__size__i43_i_i] & 1) == 0) {
  $1 = $agg_result;
  HEAP32[$1 >> 2] = HEAP32[$__size__i43_i_i >> 2];
  HEAP32[$1 + 4 >> 2] = HEAP32[$__size__i43_i_i + 4 >> 2];
  HEAP32[$1 + 8 >> 2] = HEAP32[$__size__i43_i_i + 8 >> 2];
  return;
 }
 $2 = HEAP32[$this + 20 >> 2] | 0;
 $3 = HEAP32[$this + 16 >> 2] | 0;
 if (($3 | 0) == -1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 }
 if ($3 >>> 0 < 11) {
  HEAP8[$agg_result] = $3 << 1 & 255;
  $__p_0_i_i_i = $agg_result + 1 | 0;
 } else {
  $and_i_i_i_i_i = $3 + 16 & -16;
  $call_i_i_i_i_i = __Znwj($and_i_i_i_i_i) | 0;
  HEAP32[$agg_result + 8 >> 2] = $call_i_i_i_i_i;
  HEAP32[$agg_result >> 2] = $and_i_i_i_i_i | 1;
  HEAP32[$agg_result + 4 >> 2] = $3;
  $__p_0_i_i_i = $call_i_i_i_i_i;
 }
 _memcpy($__p_0_i_i_i | 0, $2 | 0, $3) | 0;
 HEAP8[$__p_0_i_i_i + $3 | 0] = 0;
 return;
}
function __ZNKSt3__18numpunctIwE11do_groupingEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $__size__i43_i_i = 0, $1 = 0, $2 = 0, $3 = 0, $and_i_i_i_i_i = 0, $call_i_i_i_i_i = 0, $__p_0_i_i_i = 0;
 $__size__i43_i_i = $this + 16 | 0;
 if ((HEAP8[$__size__i43_i_i] & 1) == 0) {
  $1 = $agg_result;
  HEAP32[$1 >> 2] = HEAP32[$__size__i43_i_i >> 2];
  HEAP32[$1 + 4 >> 2] = HEAP32[$__size__i43_i_i + 4 >> 2];
  HEAP32[$1 + 8 >> 2] = HEAP32[$__size__i43_i_i + 8 >> 2];
  return;
 }
 $2 = HEAP32[$this + 24 >> 2] | 0;
 $3 = HEAP32[$this + 20 >> 2] | 0;
 if (($3 | 0) == -1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 }
 if ($3 >>> 0 < 11) {
  HEAP8[$agg_result] = $3 << 1 & 255;
  $__p_0_i_i_i = $agg_result + 1 | 0;
 } else {
  $and_i_i_i_i_i = $3 + 16 & -16;
  $call_i_i_i_i_i = __Znwj($and_i_i_i_i_i) | 0;
  HEAP32[$agg_result + 8 >> 2] = $call_i_i_i_i_i;
  HEAP32[$agg_result >> 2] = $and_i_i_i_i_i | 1;
  HEAP32[$agg_result + 4 >> 2] = $3;
  $__p_0_i_i_i = $call_i_i_i_i_i;
 }
 _memcpy($__p_0_i_i_i | 0, $2 | 0, $3) | 0;
 HEAP8[$__p_0_i_i_i + $3 | 0] = 0;
 return;
}
function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this | 0;
 var $1 = 0;
 if (HEAP8[18488] | 0) {
  $1 = HEAP32[2264] | 0;
  return $1 | 0;
 }
 if (!(HEAP8[18376] | 0)) {
  _memset(7400 | 0, 0 | 0, 288 | 0);
  _atexit(180, 0, ___dso_handle | 0) | 0;
  HEAP8[18376] = 1;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7400, 768) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7412, 744) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7424, 704) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7436, 688) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7448, 648) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7460, 632) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7472, 600) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7484, 576) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7496, 536) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7508, 520) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7520, 440) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7532, 416) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7544, 392) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7556, 376) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7568, 352) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7580, 336) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7592, 648) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7604, 304) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7616, 288) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7628, 6096) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7640, 6072) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7652, 6040) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7664, 6016) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7676, 5984) | 0;
 HEAP32[2264] = 7400;
 HEAP8[18488] = 1;
 $1 = 7400;
 return $1 | 0;
}
function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this | 0;
 var $1 = 0;
 if (HEAP8[18432] | 0) {
  $1 = HEAP32[2242] | 0;
  return $1 | 0;
 }
 if (!(HEAP8[18352] | 0)) {
  _memset(6656 | 0, 0 | 0, 288 | 0);
  _atexit(128, 0, ___dso_handle | 0) | 0;
  HEAP8[18352] = 1;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6656, 1760, 7) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6668, 1704, 8) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6680, 1672, 5) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6692, 1632, 5) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6704, 1040, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6716, 1504, 4) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6728, 1472, 4) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6740, 1416, 6) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6752, 1368, 9) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6764, 1312, 7) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6776, 1264, 8) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6788, 1208, 8) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6800, 1184, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6812, 1152, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6824, 1128, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6836, 1064, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6848, 1040, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6860, 1008, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6872, 984, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6884, 952, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6896, 928, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6908, 888, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6920, 864, 3) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(6932, 824, 3) | 0;
 HEAP32[2242] = 6656;
 HEAP8[18432] = 1;
 $1 = 6656;
 return $1 | 0;
}
function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this | 0;
 var $1 = 0;
 if (HEAP8[18504] | 0) {
  $1 = HEAP32[2268] | 0;
  return $1 | 0;
 }
 if (!(HEAP8[18392] | 0)) {
  _memset(7856 | 0, 0 | 0, 288 | 0);
  _atexit(126, 0, ___dso_handle | 0) | 0;
  HEAP8[18392] = 1;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7856, 1848) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(7868, 1832) | 0;
 HEAP32[2268] = 7856;
 HEAP8[18504] = 1;
 $1 = 7856;
 return $1 | 0;
}
function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this | 0;
 var $1 = 0;
 if (HEAP8[18448] | 0) {
  $1 = HEAP32[2246] | 0;
  return $1 | 0;
 }
 if (!(HEAP8[18368] | 0)) {
  _memset(7112 | 0, 0 | 0, 288 | 0);
  _atexit(256, 0, ___dso_handle | 0) | 0;
  HEAP8[18368] = 1;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(7112, 1944, 2) | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(7124, 1880, 2) | 0;
 HEAP32[2246] = 7112;
 HEAP8[18448] = 1;
 $1 = 7112;
 return $1 | 0;
}
function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this | 0;
 var $$etemp$1 = 0, $st$2$0 = 0, $st$3$1 = 0;
 if (HEAP8[18512] | 0) {
  return 9080;
 }
 HEAP8[9080] = 16;
 $$etemp$1 = 9081;
 $st$2$0 = $$etemp$1 | 0;
 tempBigInt = 623865125;
 HEAP8[$st$2$0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$2$0 + 1 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$2$0 + 2 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$2$0 + 3 | 0] = tempBigInt & 255;
 $st$3$1 = $$etemp$1 + 4 | 0;
 tempBigInt = 2032480100;
 HEAP8[$st$3$1] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$3$1 + 1 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$3$1 + 2 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$3$1 + 3 | 0] = tempBigInt & 255;
 HEAP8[9089 | 0] = 0;
 _atexit(272, 9080, ___dso_handle | 0) | 0;
 HEAP8[18512] = 1;
 return 9080;
}
function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this | 0;
 var $call_i_i_i = 0, $0 = 0, $d_addr_05_i_i = 0, $n_addr_04_i_i = 0, $s_addr_03_i_i = 0, $dec_i_i = 0;
 if (HEAP8[18456] | 0) {
  return 8992;
 }
 $call_i_i_i = __Znwj(48) | 0;
 $0 = $call_i_i_i;
 HEAP32[2250] = $0;
 HEAP32[2248] = 13;
 HEAP32[2249] = 8;
 $s_addr_03_i_i = 2608;
 $n_addr_04_i_i = 8;
 $d_addr_05_i_i = $0;
 while (1) {
  $dec_i_i = $n_addr_04_i_i - 1 | 0;
  HEAP32[$d_addr_05_i_i >> 2] = HEAP32[$s_addr_03_i_i >> 2];
  if (($dec_i_i | 0) == 0) {
   break;
  } else {
   $s_addr_03_i_i = $s_addr_03_i_i + 4 | 0;
   $n_addr_04_i_i = $dec_i_i;
   $d_addr_05_i_i = $d_addr_05_i_i + 4 | 0;
  }
 }
 HEAP32[$call_i_i_i + 32 >> 2] = 0;
 _atexit(206, 8992, ___dso_handle | 0) | 0;
 HEAP8[18456] = 1;
 return 8992;
}
function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this | 0;
 var $$etemp$1 = 0, $st$2$0 = 0, $st$3$1 = 0;
 if (HEAP8[18536] | 0) {
  return 9128;
 }
 HEAP8[9128] = 16;
 $$etemp$1 = 9129;
 $st$2$0 = $$etemp$1 | 0;
 tempBigInt = 624576549;
 HEAP8[$st$2$0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$2$0 + 1 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$2$0 + 2 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$2$0 + 3 | 0] = tempBigInt & 255;
 $st$3$1 = $$etemp$1 + 4 | 0;
 tempBigInt = 1394948685;
 HEAP8[$st$3$1] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$3$1 + 1 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$3$1 + 2 | 0] = tempBigInt & 255;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$3$1 + 3 | 0] = tempBigInt & 255;
 HEAP8[9137 | 0] = 0;
 _atexit(272, 9128, ___dso_handle | 0) | 0;
 HEAP8[18536] = 1;
 return 9128;
}
function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this | 0;
 var $call_i_i_i = 0, $0 = 0, $d_addr_05_i_i = 0, $n_addr_04_i_i = 0, $s_addr_03_i_i = 0, $dec_i_i = 0;
 if (HEAP8[18480] | 0) {
  return 9040;
 }
 $call_i_i_i = __Znwj(48) | 0;
 $0 = $call_i_i_i;
 HEAP32[2262] = $0;
 HEAP32[2260] = 13;
 HEAP32[2261] = 8;
 $s_addr_03_i_i = 2520;
 $n_addr_04_i_i = 8;
 $d_addr_05_i_i = $0;
 while (1) {
  $dec_i_i = $n_addr_04_i_i - 1 | 0;
  HEAP32[$d_addr_05_i_i >> 2] = HEAP32[$s_addr_03_i_i >> 2];
  if (($dec_i_i | 0) == 0) {
   break;
  } else {
   $s_addr_03_i_i = $s_addr_03_i_i + 4 | 0;
   $n_addr_04_i_i = $dec_i_i;
   $d_addr_05_i_i = $d_addr_05_i_i + 4 | 0;
  }
 }
 HEAP32[$call_i_i_i + 32 >> 2] = 0;
 _atexit(206, 9040, ___dso_handle | 0) | 0;
 HEAP8[18480] = 1;
 return 9040;
}
function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this | 0;
 var $call_i_i_i = 0;
 if (HEAP8[18528] | 0) {
  return 9112;
 }
 $call_i_i_i = __Znwj(32) | 0;
 HEAP32[2280] = $call_i_i_i;
 HEAP32[2278] = 33;
 HEAP32[2279] = 20;
 _memcpy($call_i_i_i | 0, 2480 | 0, 20) | 0;
 HEAP8[$call_i_i_i + 20 | 0] = 0;
 _atexit(272, 9112, ___dso_handle | 0) | 0;
 HEAP8[18528] = 1;
 return 9112;
}
function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this | 0;
 var $call_i_i_i = 0, $0 = 0, $d_addr_05_i_i = 0, $n_addr_04_i_i = 0, $s_addr_03_i_i = 0, $dec_i_i = 0;
 if (HEAP8[18472] | 0) {
  return 9024;
 }
 $call_i_i_i = __Znwj(96) | 0;
 $0 = $call_i_i_i;
 HEAP32[2258] = $0;
 HEAP32[2256] = 25;
 HEAP32[2257] = 20;
 $s_addr_03_i_i = 2368;
 $n_addr_04_i_i = 20;
 $d_addr_05_i_i = $0;
 while (1) {
  $dec_i_i = $n_addr_04_i_i - 1 | 0;
  HEAP32[$d_addr_05_i_i >> 2] = HEAP32[$s_addr_03_i_i >> 2];
  if (($dec_i_i | 0) == 0) {
   break;
  } else {
   $s_addr_03_i_i = $s_addr_03_i_i + 4 | 0;
   $n_addr_04_i_i = $dec_i_i;
   $d_addr_05_i_i = $d_addr_05_i_i + 4 | 0;
  }
 }
 HEAP32[$call_i_i_i + 80 >> 2] = 0;
 _atexit(206, 9024, ___dso_handle | 0) | 0;
 HEAP8[18472] = 1;
 return 9024;
}
function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this | 0;
 var $call_i_i_i = 0;
 if (HEAP8[18520] | 0) {
  return 9096;
 }
 $call_i_i_i = __Znwj(16) | 0;
 HEAP32[2276] = $call_i_i_i;
 HEAP32[2274] = 17;
 HEAP32[2275] = 11;
 _memcpy($call_i_i_i | 0, 2336 | 0, 11) | 0;
 HEAP8[$call_i_i_i + 11 | 0] = 0;
 _atexit(272, 9096, ___dso_handle | 0) | 0;
 HEAP8[18520] = 1;
 return 9096;
}
function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this | 0;
 var $call_i_i_i = 0, $0 = 0, $d_addr_05_i_i = 0, $n_addr_04_i_i = 0, $s_addr_03_i_i = 0, $dec_i_i = 0;
 if (HEAP8[18464] | 0) {
  return 9008;
 }
 $call_i_i_i = __Znwj(48) | 0;
 $0 = $call_i_i_i;
 HEAP32[2254] = $0;
 HEAP32[2252] = 13;
 HEAP32[2253] = 11;
 $s_addr_03_i_i = 2256;
 $n_addr_04_i_i = 11;
 $d_addr_05_i_i = $0;
 while (1) {
  $dec_i_i = $n_addr_04_i_i - 1 | 0;
  HEAP32[$d_addr_05_i_i >> 2] = HEAP32[$s_addr_03_i_i >> 2];
  if (($dec_i_i | 0) == 0) {
   break;
  } else {
   $s_addr_03_i_i = $s_addr_03_i_i + 4 | 0;
   $n_addr_04_i_i = $dec_i_i;
   $d_addr_05_i_i = $d_addr_05_i_i + 4 | 0;
  }
 }
 HEAP32[$call_i_i_i + 44 >> 2] = 0;
 _atexit(206, 9008, ___dso_handle | 0) | 0;
 HEAP8[18464] = 1;
 return 9008;
}
function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp) {
 $__vp = $__vp | 0;
 var $0 = 0, $2 = 0, $this_adjusted_i = 0, $memptr_ptr_i = 0, $8 = 0;
 $0 = $__vp + 4 | 0;
 $2 = (HEAP32[$__vp >> 2] | 0) + (HEAP32[$0 + 4 >> 2] | 0) | 0;
 $this_adjusted_i = $2;
 $memptr_ptr_i = HEAP32[$0 >> 2] | 0;
 if (($memptr_ptr_i & 1 | 0) == 0) {
  $8 = $memptr_ptr_i;
  FUNCTION_TABLE_vi[$8 & 511]($this_adjusted_i);
  return;
 } else {
  $8 = HEAP32[(HEAP32[$2 >> 2] | 0) + ($memptr_ptr_i - 1) >> 2] | 0;
  FUNCTION_TABLE_vi[$8 & 511]($this_adjusted_i);
  return;
 }
}
function ___cxx_global_array_dtor($0) {
 $0 = $0 | 0;
 var $arraydestroy_elementPast = 0, $arraydestroy_element = 0;
 $arraydestroy_elementPast = 7400;
 while (1) {
  $arraydestroy_element = $arraydestroy_elementPast - 12 | 0;
  if ((HEAP8[$arraydestroy_element] & 1) != 0) {
   __ZdlPv(HEAP32[$arraydestroy_elementPast - 12 + 8 >> 2] | 0);
  }
  if (($arraydestroy_element | 0) == 7112) {
   break;
  } else {
   $arraydestroy_elementPast = $arraydestroy_element;
  }
 }
 return;
}
function ___cxx_global_array_dtor53($0) {
 $0 = $0 | 0;
 var $arraydestroy_elementPast = 0, $arraydestroy_element = 0;
 $arraydestroy_elementPast = 8144;
 while (1) {
  $arraydestroy_element = $arraydestroy_elementPast - 12 | 0;
  if ((HEAP8[$arraydestroy_element] & 1) != 0) {
   __ZdlPv(HEAP32[$arraydestroy_elementPast - 12 + 8 >> 2] | 0);
  }
  if (($arraydestroy_element | 0) == 7856) {
   break;
  } else {
   $arraydestroy_elementPast = $arraydestroy_element;
  }
 }
 return;
}
function ___cxx_global_array_dtor56($0) {
 $0 = $0 | 0;
 var $arraydestroy_elementPast = 0, $arraydestroy_element = 0;
 $arraydestroy_elementPast = 6944;
 while (1) {
  $arraydestroy_element = $arraydestroy_elementPast - 12 | 0;
  if ((HEAP8[$arraydestroy_element] & 1) != 0) {
   __ZdlPv(HEAP32[$arraydestroy_elementPast - 12 + 8 >> 2] | 0);
  }
  if (($arraydestroy_element | 0) == 6656) {
   break;
  } else {
   $arraydestroy_elementPast = $arraydestroy_element;
  }
 }
 return;
}
function ___cxx_global_array_dtor81($0) {
 $0 = $0 | 0;
 var $arraydestroy_elementPast = 0, $arraydestroy_element = 0;
 $arraydestroy_elementPast = 7688;
 while (1) {
  $arraydestroy_element = $arraydestroy_elementPast - 12 | 0;
  if ((HEAP8[$arraydestroy_element] & 1) != 0) {
   __ZdlPv(HEAP32[$arraydestroy_elementPast - 12 + 8 >> 2] | 0);
  }
  if (($arraydestroy_element | 0) == 7400) {
   break;
  } else {
   $arraydestroy_elementPast = $arraydestroy_element;
  }
 }
 return;
}
function ___cxx_global_array_dtor105($0) {
 $0 = $0 | 0;
 if ((HEAP8[7100] & 1) != 0) {
  __ZdlPv(HEAP32[1777] | 0);
 }
 if ((HEAP8[7088] & 1) != 0) {
  __ZdlPv(HEAP32[1774] | 0);
 }
 if ((HEAP8[7076] & 1) != 0) {
  __ZdlPv(HEAP32[1771] | 0);
 }
 if ((HEAP8[7064] & 1) != 0) {
  __ZdlPv(HEAP32[1768] | 0);
 }
 if ((HEAP8[7052] & 1) != 0) {
  __ZdlPv(HEAP32[1765] | 0);
 }
 if ((HEAP8[7040] & 1) != 0) {
  __ZdlPv(HEAP32[1762] | 0);
 }
 if ((HEAP8[7028] & 1) != 0) {
  __ZdlPv(HEAP32[1759] | 0);
 }
 if ((HEAP8[7016] & 1) != 0) {
  __ZdlPv(HEAP32[1756] | 0);
 }
 if ((HEAP8[7004] & 1) != 0) {
  __ZdlPv(HEAP32[1753] | 0);
 }
 if ((HEAP8[6992] & 1) != 0) {
  __ZdlPv(HEAP32[1750] | 0);
 }
 if ((HEAP8[6980] & 1) != 0) {
  __ZdlPv(HEAP32[1747] | 0);
 }
 if ((HEAP8[6968] & 1) != 0) {
  __ZdlPv(HEAP32[1744] | 0);
 }
 if ((HEAP8[6956] & 1) != 0) {
  __ZdlPv(HEAP32[1741] | 0);
 }
 if ((HEAP8[6944] & 1) == 0) {
  return;
 }
 __ZdlPv(HEAP32[1738] | 0);
 return;
}
function ___cxx_global_array_dtor120($0) {
 $0 = $0 | 0;
 if ((HEAP8[7844] & 1) != 0) {
  __ZdlPv(HEAP32[1963] | 0);
 }
 if ((HEAP8[7832] & 1) != 0) {
  __ZdlPv(HEAP32[1960] | 0);
 }
 if ((HEAP8[7820] & 1) != 0) {
  __ZdlPv(HEAP32[1957] | 0);
 }
 if ((HEAP8[7808] & 1) != 0) {
  __ZdlPv(HEAP32[1954] | 0);
 }
 if ((HEAP8[7796] & 1) != 0) {
  __ZdlPv(HEAP32[1951] | 0);
 }
 if ((HEAP8[7784] & 1) != 0) {
  __ZdlPv(HEAP32[1948] | 0);
 }
 if ((HEAP8[7772] & 1) != 0) {
  __ZdlPv(HEAP32[1945] | 0);
 }
 if ((HEAP8[7760] & 1) != 0) {
  __ZdlPv(HEAP32[1942] | 0);
 }
 if ((HEAP8[7748] & 1) != 0) {
  __ZdlPv(HEAP32[1939] | 0);
 }
 if ((HEAP8[7736] & 1) != 0) {
  __ZdlPv(HEAP32[1936] | 0);
 }
 if ((HEAP8[7724] & 1) != 0) {
  __ZdlPv(HEAP32[1933] | 0);
 }
 if ((HEAP8[7712] & 1) != 0) {
  __ZdlPv(HEAP32[1930] | 0);
 }
 if ((HEAP8[7700] & 1) != 0) {
  __ZdlPv(HEAP32[1927] | 0);
 }
 if ((HEAP8[7688] & 1) == 0) {
  return;
 }
 __ZdlPv(HEAP32[1924] | 0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $__first__i_i_i = 0, $__end_ = 0, $1 = 0, $sub_ptr_lhs_cast = 0, $sub_ptr_rhs_cast = 0, $2 = 0, $__n_addr_0_i = 0, $3 = 0, $__second__i_i_i = 0, $__begin__i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $sub_ptr_sub_i_i_i = 0, $mul_i = 0, $_sroa_speculated = 0, $__allocated__i_i_i_i27 = 0, $retval_i_03945 = 0, $retval_i_040 = 0, $cond_i_i = 0, $9 = 0, $__n_addr_0_i18 = 0, $10 = 0, $add_ptr5_i_i = 0, $11 = 0, $sub_ptr_sub_i_i = 0, $add_ptr_i_i = 0, $13 = 0, $14 = 0, label = 0;
 $__first__i_i_i = $this + 8 | 0;
 $__end_ = $this + 4 | 0;
 $1 = HEAP32[$__end_ >> 2] | 0;
 $sub_ptr_lhs_cast = HEAP32[$__first__i_i_i >> 2] | 0;
 $sub_ptr_rhs_cast = $1;
 if ($sub_ptr_lhs_cast - $sub_ptr_rhs_cast >> 2 >>> 0 >= $__n >>> 0) {
  $__n_addr_0_i = $__n;
  $2 = $1;
  do {
   if (($2 | 0) == 0) {
    $3 = 0;
   } else {
    HEAP32[$2 >> 2] = 0;
    $3 = HEAP32[$__end_ >> 2] | 0;
   }
   $2 = $3 + 4 | 0;
   HEAP32[$__end_ >> 2] = $2;
   $__n_addr_0_i = $__n_addr_0_i - 1 | 0;
  } while (($__n_addr_0_i | 0) != 0);
  return;
 }
 $__second__i_i_i = $this + 16 | 0;
 $__begin__i = $this | 0;
 $sub_ptr_rhs_cast_i = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_div_i = $sub_ptr_rhs_cast - $sub_ptr_rhs_cast_i >> 2;
 $add = $sub_ptr_div_i + $__n | 0;
 if ($add >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 }
 $sub_ptr_sub_i_i_i = $sub_ptr_lhs_cast - $sub_ptr_rhs_cast_i | 0;
 do {
  if ($sub_ptr_sub_i_i_i >> 2 >>> 0 > 536870910) {
   $retval_i_03945 = 1073741823;
   label = 15469;
  } else {
   $mul_i = $sub_ptr_sub_i_i_i >> 1;
   $_sroa_speculated = $mul_i >>> 0 < $add >>> 0 ? $add : $mul_i;
   if (($_sroa_speculated | 0) == 0) {
    $cond_i_i = 0;
    $retval_i_040 = 0;
    break;
   }
   $__allocated__i_i_i_i27 = $this + 128 | 0;
   if (!((HEAP8[$__allocated__i_i_i_i27] & 1) == 0 & $_sroa_speculated >>> 0 < 29)) {
    $retval_i_03945 = $_sroa_speculated;
    label = 15469;
    break;
   }
   HEAP8[$__allocated__i_i_i_i27] = 1;
   $cond_i_i = $__second__i_i_i;
   $retval_i_040 = $_sroa_speculated;
  }
 } while (0);
 if ((label | 0) == 15469) {
  $cond_i_i = __Znwj($retval_i_03945 << 2) | 0;
  $retval_i_040 = $retval_i_03945;
 }
 $__n_addr_0_i18 = $__n;
 $9 = $cond_i_i + ($sub_ptr_div_i << 2) | 0;
 do {
  if (($9 | 0) == 0) {
   $10 = 0;
  } else {
   HEAP32[$9 >> 2] = 0;
   $10 = $9;
  }
  $9 = $10 + 4 | 0;
  $__n_addr_0_i18 = $__n_addr_0_i18 - 1 | 0;
 } while (($__n_addr_0_i18 | 0) != 0);
 $add_ptr5_i_i = $cond_i_i + ($retval_i_040 << 2) | 0;
 $11 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_sub_i_i = (HEAP32[$__end_ >> 2] | 0) - $11 | 0;
 $add_ptr_i_i = $cond_i_i + ($sub_ptr_div_i - ($sub_ptr_sub_i_i >> 2) << 2) | 0;
 $13 = $add_ptr_i_i;
 $14 = $11;
 _memcpy($13 | 0, $14 | 0, $sub_ptr_sub_i_i) | 0;
 HEAP32[$__begin__i >> 2] = $add_ptr_i_i;
 HEAP32[$__end_ >> 2] = $9;
 HEAP32[$__first__i_i_i >> 2] = $add_ptr5_i_i;
 if (($11 | 0) == 0) {
  return;
 }
 if (($11 | 0) == ($__second__i_i_i | 0)) {
  HEAP8[$this + 128 | 0] = 0;
  return;
 } else {
  __ZdlPv($14);
  return;
 }
}
function __ZNSt8bad_castD2Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNKSt8bad_cast4whatEv($this) {
 $this = $this | 0;
 return 2072 | 0;
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this | 0;
 return;
}
function _mbrtowc($wc, $src, $n, $st) {
 $wc = $wc | 0;
 $src = $src | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $wc_addr = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $conv = 0, $sub = 0, $n_addr_0 = 0, $c_0 = 0, $s_0 = 0, $6 = 0, $shr24 = 0, $7 = 0, $n_addr_1 = 0, $c_1 = 0, $s_1 = 0, $c_2 = 0, $retval_0 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $wc_addr = __stackBase__ | 0;
 HEAP32[$wc_addr >> 2] = $wc;
 $0 = (($st | 0) == 0 ? 256 : $st) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 L18147 : do {
  if (($src | 0) == 0) {
   if (($1 | 0) == 0) {
    $retval_0 = 0;
   } else {
    break;
   }
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  } else {
   if (($wc | 0) == 0) {
    $2 = $wc_addr;
    HEAP32[$wc_addr >> 2] = $2;
    $3 = $2;
   } else {
    $3 = $wc;
   }
   if (($n | 0) == 0) {
    $retval_0 = -2;
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   }
   do {
    if (($1 | 0) == 0) {
     $4 = HEAP8[$src] | 0;
     $conv = $4 & 255;
     if ($4 << 24 >> 24 > -1) {
      HEAP32[$3 >> 2] = $conv;
      $retval_0 = $4 << 24 >> 24 != 0 & 1;
      STACKTOP = __stackBase__;
      return $retval_0 | 0;
     } else {
      $sub = $conv - 194 | 0;
      if ($sub >>> 0 > 50) {
       break L18147;
      }
      $s_0 = $src + 1 | 0;
      $c_0 = HEAP32[___fsmu8 + ($sub << 2) >> 2] | 0;
      $n_addr_0 = $n - 1 | 0;
      break;
     }
    } else {
     $s_0 = $src;
     $c_0 = $1;
     $n_addr_0 = $n;
    }
   } while (0);
   L18163 : do {
    if (($n_addr_0 | 0) == 0) {
     $c_2 = $c_0;
    } else {
     $6 = HEAP8[$s_0] | 0;
     $shr24 = ($6 & 255) >>> 3;
     if (($shr24 - 16 | $shr24 + ($c_0 >> 26)) >>> 0 > 7) {
      break L18147;
     } else {
      $s_1 = $s_0;
      $c_1 = $c_0;
      $n_addr_1 = $n_addr_0;
      $7 = $6;
     }
     while (1) {
      $s_1 = $s_1 + 1 | 0;
      $c_1 = ($7 & 255) - 128 | $c_1 << 6;
      $n_addr_1 = $n_addr_1 - 1 | 0;
      if (($c_1 | 0) >= 0) {
       break;
      }
      if (($n_addr_1 | 0) == 0) {
       $c_2 = $c_1;
       break L18163;
      }
      $7 = HEAP8[$s_1] | 0;
      if ((($7 & 255) - 128 | 0) >>> 0 > 63) {
       break L18147;
      }
     }
     HEAP32[$0 >> 2] = 0;
     HEAP32[$3 >> 2] = $c_1;
     $retval_0 = $n - $n_addr_1 | 0;
     STACKTOP = __stackBase__;
     return $retval_0 | 0;
    }
   } while (0);
   HEAP32[$0 >> 2] = $c_2;
   $retval_0 = -2;
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  }
 } while (0);
 HEAP32[$0 >> 2] = 0;
 HEAP32[(___errno_location() | 0) >> 2] = 138;
 $retval_0 = -1;
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function _mbsnrtowcs($wcs, $src, $n, $wn, $st) {
 $wcs = $wcs | 0;
 $src = $src | 0;
 $n = $n | 0;
 $wn = $wn | 0;
 $st = $st | 0;
 var $wbuf = 0, $s = 0, $0 = 0, $tobool = 0, $wn_addr_0_ph = 0, $ws_0_ph = 0, $arraydecay10 = 0, $_pr67 = 0, $ws_056 = 0, $cnt_055 = 0, $n_addr_054 = 0, $wn_addr_053 = 0, $div = 0, $cmp = 0, $wn_addr_0_div = 0, $sub = 0, $call = 0, $wn_addr_1 = 0, $ws_1 = 0, $add15 = 0, $1 = 0, $2 = 0, $ws_048 = 0, $wn_addr_2 = 0, $n_addr_1 = 0, $cnt_1 = 0, $3 = 0, $ws_243 = 0, $cnt_242 = 0, $n_addr_241 = 0, $wn_addr_340 = 0, $call24 = 0, $add_ptr36 = 0, $dec = 0, $inc = 0, $5 = 0, $cnt_3 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 1032 | 0;
 $wbuf = __stackBase__ | 0;
 $s = __stackBase__ + 1024 | 0;
 $0 = HEAP32[$src >> 2] | 0;
 HEAP32[$s >> 2] = $0;
 $tobool = ($wcs | 0) != 0;
 $wn_addr_0_ph = $tobool ? $wn : 256;
 $ws_0_ph = $tobool ? $wcs : $wbuf | 0;
 L18178 : do {
  if (($0 | 0) == 0 | ($wn_addr_0_ph | 0) == 0) {
   $cnt_1 = 0;
   $n_addr_1 = $n;
   $wn_addr_2 = $wn_addr_0_ph;
   $ws_048 = $ws_0_ph;
   $2 = $0;
  } else {
   $arraydecay10 = $wbuf | 0;
   $wn_addr_053 = $wn_addr_0_ph;
   $n_addr_054 = $n;
   $cnt_055 = 0;
   $ws_056 = $ws_0_ph;
   $_pr67 = $0;
   while (1) {
    $div = $n_addr_054 >>> 2;
    $cmp = $div >>> 0 >= $wn_addr_053 >>> 0;
    if (!($cmp | $n_addr_054 >>> 0 > 131)) {
     $cnt_1 = $cnt_055;
     $n_addr_1 = $n_addr_054;
     $wn_addr_2 = $wn_addr_053;
     $ws_048 = $ws_056;
     $2 = $_pr67;
     break L18178;
    }
    $wn_addr_0_div = $cmp ? $wn_addr_053 : $div;
    $sub = $n_addr_054 - $wn_addr_0_div | 0;
    $call = _mbsrtowcs($ws_056, $s, $wn_addr_0_div, $st) | 0;
    if (($call | 0) == -1) {
     break;
    }
    if (($ws_056 | 0) == ($arraydecay10 | 0)) {
     $ws_1 = $arraydecay10;
     $wn_addr_1 = $wn_addr_053;
    } else {
     $ws_1 = $ws_056 + ($call << 2) | 0;
     $wn_addr_1 = $wn_addr_053 - $call | 0;
    }
    $add15 = $call + $cnt_055 | 0;
    $1 = HEAP32[$s >> 2] | 0;
    if (($1 | 0) == 0 | ($wn_addr_1 | 0) == 0) {
     $cnt_1 = $add15;
     $n_addr_1 = $sub;
     $wn_addr_2 = $wn_addr_1;
     $ws_048 = $ws_1;
     $2 = $1;
     break L18178;
    } else {
     $wn_addr_053 = $wn_addr_1;
     $n_addr_054 = $sub;
     $cnt_055 = $add15;
     $ws_056 = $ws_1;
     $_pr67 = $1;
    }
   }
   $cnt_1 = -1;
   $n_addr_1 = $sub;
   $wn_addr_2 = 0;
   $ws_048 = $ws_056;
   $2 = HEAP32[$s >> 2] | 0;
  }
 } while (0);
 L18189 : do {
  if (($2 | 0) == 0) {
   $cnt_3 = $cnt_1;
   $5 = $2;
  } else {
   if (($wn_addr_2 | 0) == 0 | ($n_addr_1 | 0) == 0) {
    $cnt_3 = $cnt_1;
    $5 = $2;
    break;
   } else {
    $wn_addr_340 = $wn_addr_2;
    $n_addr_241 = $n_addr_1;
    $cnt_242 = $cnt_1;
    $ws_243 = $ws_048;
    $3 = $2;
   }
   while (1) {
    $call24 = _mbrtowc($ws_243, $3, $n_addr_241, $st) | 0;
    if (($call24 + 2 | 0) >>> 0 < 3) {
     break;
    }
    $add_ptr36 = $3 + $call24 | 0;
    HEAP32[$s >> 2] = $add_ptr36;
    $dec = $wn_addr_340 - 1 | 0;
    $inc = $cnt_242 + 1 | 0;
    if (($dec | 0) == 0 | ($n_addr_241 | 0) == ($call24 | 0)) {
     $cnt_3 = $inc;
     $5 = $add_ptr36;
     break L18189;
    } else {
     $wn_addr_340 = $dec;
     $n_addr_241 = $n_addr_241 - $call24 | 0;
     $cnt_242 = $inc;
     $ws_243 = $ws_243 + 4 | 0;
     $3 = $add_ptr36;
    }
   }
   if (($call24 | 0) == (-1 | 0)) {
    $cnt_3 = -1;
    $5 = $3;
    break;
   } else if (($call24 | 0) == 0) {
    HEAP32[$s >> 2] = 0;
    $cnt_3 = $cnt_242;
    $5 = 0;
    break;
   } else {
    HEAP32[$st >> 2] = 0;
    $cnt_3 = $cnt_242;
    $5 = $3;
    break;
   }
  }
 } while (0);
 if (!$tobool) {
  STACKTOP = __stackBase__;
  return $cnt_3 | 0;
 }
 HEAP32[$src >> 2] = $5;
 STACKTOP = __stackBase__;
 return $cnt_3 | 0;
}
function _mbsrtowcs($ws, $src, $wn, $st) {
 $ws = $ws | 0;
 $src = $src | 0;
 $wn = $wn | 0;
 $st = $st | 0;
 var $0 = 0, $1 = 0, $2 = 0, $wn_addr_4_ph = 0, $ws_addr_0_ph = 0, $s_5_ph = 0, $wn_addr_0 = 0, $s_0 = 0, $3 = 0, $6 = 0, $s_179 = 0, $wn_addr_178 = 0, $9 = 0, $11 = 0, $wn_addr_2 = 0, $s_2 = 0, $conv15 = 0, $sub22 = 0, $wn_addr_3 = 0, $s_3 = 0, $c_2 = 0, $shr72 = 0, $incdec_ptr41 = 0, $incdec_ptr52 = 0, $s_4 = 0, $s_591 = 0, $ws_addr_090 = 0, $wn_addr_489 = 0, $16 = 0, $s_684 = 0, $ws_addr_183 = 0, $wn_addr_582 = 0, $19 = 0, $incdec_ptr99 = 0, $incdec_ptr101 = 0, $sub102 = 0, $24 = 0, $wn_addr_6 = 0, $ws_addr_2 = 0, $s_7 = 0, $conv105 = 0, $dec113 = 0, $sub116 = 0, $wn_addr_7 = 0, $ws_addr_3 = 0, $s_8 = 0, $c_4 = 0, $conv125 = 0, $shr12673 = 0, $incdec_ptr138 = 0, $or141 = 0, $sub146 = 0, $incdec_ptr153 = 0, $or156 = 0, $sub161 = 0, $s_9 = 0, $c_5 = 0, $wn_addr_8 = 0, $ws_addr_4 = 0, $s_10 = 0, $c_6 = 0, $s_10105 = 0, $ws_addr_4103 = 0, $wn_addr_8101 = 0, $s_10104 = 0, $ws_addr_4102 = 0, $retval_0 = 0, label = 0;
 $0 = HEAP32[$src >> 2] | 0;
 do {
  if (($st | 0) == 0) {
   label = 15536;
  } else {
   $1 = $st | 0;
   $2 = HEAP32[$1 >> 2] | 0;
   if (($2 | 0) == 0) {
    label = 15536;
    break;
   }
   if (($ws | 0) == 0) {
    $c_2 = $2;
    $s_3 = $0;
    $wn_addr_3 = $wn;
    label = 15547;
    break;
   }
   HEAP32[$1 >> 2] = 0;
   $c_4 = $2;
   $s_8 = $0;
   $ws_addr_3 = $ws;
   $wn_addr_7 = $wn;
   label = 15567;
  }
 } while (0);
 if ((label | 0) == 15536) {
  if (($ws | 0) == 0) {
   $s_0 = $0;
   $wn_addr_0 = $wn;
   label = 15538;
  } else {
   $s_5_ph = $0;
   $ws_addr_0_ph = $ws;
   $wn_addr_4_ph = $wn;
   label = 15537;
  }
 }
 L18210 : while (1) {
  if ((label | 0) == 15538) {
   label = 0;
   $3 = HEAP8[$s_0] | 0;
   do {
    if ((($3 & 255) - 1 | 0) >>> 0 < 127) {
     if (($s_0 & 3 | 0) != 0) {
      $s_2 = $s_0;
      $wn_addr_2 = $wn_addr_0;
      $11 = $3;
      break;
     }
     $6 = HEAP32[$s_0 >> 2] | 0;
     if ((($6 - 16843009 | $6) & -2139062144 | 0) == 0) {
      $wn_addr_178 = $wn_addr_0;
      $s_179 = $s_0;
     } else {
      $s_2 = $s_0;
      $wn_addr_2 = $wn_addr_0;
      $11 = $6 & 255;
      break;
     }
     do {
      $s_179 = $s_179 + 4 | 0;
      $wn_addr_178 = $wn_addr_178 - 4 | 0;
      $9 = HEAP32[$s_179 >> 2] | 0;
     } while ((($9 - 16843009 | $9) & -2139062144 | 0) == 0);
     $s_2 = $s_179;
     $wn_addr_2 = $wn_addr_178;
     $11 = $9 & 255;
    } else {
     $s_2 = $s_0;
     $wn_addr_2 = $wn_addr_0;
     $11 = $3;
    }
   } while (0);
   $conv15 = $11 & 255;
   if (($conv15 - 1 | 0) >>> 0 < 127) {
    $s_0 = $s_2 + 1 | 0;
    $wn_addr_0 = $wn_addr_2 - 1 | 0;
    label = 15538;
    continue;
   }
   $sub22 = $conv15 - 194 | 0;
   if ($sub22 >>> 0 > 50) {
    $wn_addr_8101 = $wn_addr_2;
    $ws_addr_4103 = $ws;
    $s_10105 = $s_2;
    label = 15578;
    break;
   }
   $c_2 = HEAP32[___fsmu8 + ($sub22 << 2) >> 2] | 0;
   $s_3 = $s_2 + 1 | 0;
   $wn_addr_3 = $wn_addr_2;
   label = 15547;
   continue;
  } else if ((label | 0) == 15567) {
   label = 0;
   $conv125 = HEAPU8[$s_8] | 0;
   $shr12673 = $conv125 >>> 3;
   if (($shr12673 - 16 | $shr12673 + ($c_4 >> 26)) >>> 0 > 7) {
    label = 15568;
    break;
   }
   $incdec_ptr138 = $s_8 + 1 | 0;
   $or141 = $conv125 - 128 | $c_4 << 6;
   do {
    if (($or141 | 0) < 0) {
     $sub146 = (HEAPU8[$incdec_ptr138] | 0) - 128 | 0;
     if ($sub146 >>> 0 > 63) {
      label = 15571;
      break L18210;
     }
     $incdec_ptr153 = $s_8 + 2 | 0;
     $or156 = $sub146 | $or141 << 6;
     if (($or156 | 0) >= 0) {
      $c_5 = $or156;
      $s_9 = $incdec_ptr153;
      break;
     }
     $sub161 = (HEAPU8[$incdec_ptr153] | 0) - 128 | 0;
     if ($sub161 >>> 0 > 63) {
      label = 15574;
      break L18210;
     }
     $c_5 = $sub161 | $or156 << 6;
     $s_9 = $s_8 + 3 | 0;
    } else {
     $c_5 = $or141;
     $s_9 = $incdec_ptr138;
    }
   } while (0);
   HEAP32[$ws_addr_3 >> 2] = $c_5;
   $s_5_ph = $s_9;
   $ws_addr_0_ph = $ws_addr_3 + 4 | 0;
   $wn_addr_4_ph = $wn_addr_7 - 1 | 0;
   label = 15537;
   continue;
  } else if ((label | 0) == 15537) {
   label = 0;
   if (($wn_addr_4_ph | 0) == 0) {
    $retval_0 = $wn;
    label = 15585;
    break;
   } else {
    $wn_addr_489 = $wn_addr_4_ph;
    $ws_addr_090 = $ws_addr_0_ph;
    $s_591 = $s_5_ph;
   }
   while (1) {
    $16 = HEAP8[$s_591] | 0;
    do {
     if ((($16 & 255) - 1 | 0) >>> 0 < 127) {
      if (($s_591 & 3 | 0) == 0 & $wn_addr_489 >>> 0 > 3) {
       $wn_addr_582 = $wn_addr_489;
       $ws_addr_183 = $ws_addr_090;
       $s_684 = $s_591;
      } else {
       $s_7 = $s_591;
       $ws_addr_2 = $ws_addr_090;
       $wn_addr_6 = $wn_addr_489;
       $24 = $16;
       break;
      }
      while (1) {
       $19 = HEAP32[$s_684 >> 2] | 0;
       if ((($19 - 16843009 | $19) & -2139062144 | 0) != 0) {
        label = 15561;
        break;
       }
       HEAP32[$ws_addr_183 >> 2] = $19 & 255;
       HEAP32[$ws_addr_183 + 4 >> 2] = HEAPU8[$s_684 + 1 | 0] | 0;
       HEAP32[$ws_addr_183 + 8 >> 2] = HEAPU8[$s_684 + 2 | 0] | 0;
       $incdec_ptr99 = $s_684 + 4 | 0;
       $incdec_ptr101 = $ws_addr_183 + 16 | 0;
       HEAP32[$ws_addr_183 + 12 >> 2] = HEAPU8[$s_684 + 3 | 0] | 0;
       $sub102 = $wn_addr_582 - 4 | 0;
       if ($sub102 >>> 0 > 3) {
        $wn_addr_582 = $sub102;
        $ws_addr_183 = $incdec_ptr101;
        $s_684 = $incdec_ptr99;
       } else {
        label = 15562;
        break;
       }
      }
      if ((label | 0) == 15561) {
       label = 0;
       $s_7 = $s_684;
       $ws_addr_2 = $ws_addr_183;
       $wn_addr_6 = $wn_addr_582;
       $24 = $19 & 255;
       break;
      } else if ((label | 0) == 15562) {
       label = 0;
       $s_7 = $incdec_ptr99;
       $ws_addr_2 = $incdec_ptr101;
       $wn_addr_6 = $sub102;
       $24 = HEAP8[$incdec_ptr99] | 0;
       break;
      }
     } else {
      $s_7 = $s_591;
      $ws_addr_2 = $ws_addr_090;
      $wn_addr_6 = $wn_addr_489;
      $24 = $16;
     }
    } while (0);
    $conv105 = $24 & 255;
    if (($conv105 - 1 | 0) >>> 0 >= 127) {
     break;
    }
    HEAP32[$ws_addr_2 >> 2] = $conv105;
    $dec113 = $wn_addr_6 - 1 | 0;
    if (($dec113 | 0) == 0) {
     $retval_0 = $wn;
     label = 15588;
     break L18210;
    } else {
     $wn_addr_489 = $dec113;
     $ws_addr_090 = $ws_addr_2 + 4 | 0;
     $s_591 = $s_7 + 1 | 0;
    }
   }
   $sub116 = $conv105 - 194 | 0;
   if ($sub116 >>> 0 > 50) {
    $wn_addr_8101 = $wn_addr_6;
    $ws_addr_4103 = $ws_addr_2;
    $s_10105 = $s_7;
    label = 15578;
    break;
   }
   $c_4 = HEAP32[___fsmu8 + ($sub116 << 2) >> 2] | 0;
   $s_8 = $s_7 + 1 | 0;
   $ws_addr_3 = $ws_addr_2;
   $wn_addr_7 = $wn_addr_6;
   label = 15567;
   continue;
  } else if ((label | 0) == 15547) {
   label = 0;
   $shr72 = (HEAPU8[$s_3] | 0) >>> 3;
   if (($shr72 - 16 | $shr72 + ($c_2 >> 26)) >>> 0 > 7) {
    label = 15548;
    break;
   }
   $incdec_ptr41 = $s_3 + 1 | 0;
   do {
    if (($c_2 & 33554432 | 0) == 0) {
     $s_4 = $incdec_ptr41;
    } else {
     if (((HEAPU8[$incdec_ptr41] | 0) - 128 | 0) >>> 0 > 63) {
      label = 15551;
      break L18210;
     }
     $incdec_ptr52 = $s_3 + 2 | 0;
     if (($c_2 & 524288 | 0) == 0) {
      $s_4 = $incdec_ptr52;
      break;
     }
     if (((HEAPU8[$incdec_ptr52] | 0) - 128 | 0) >>> 0 > 63) {
      label = 15554;
      break L18210;
     }
     $s_4 = $s_3 + 3 | 0;
    }
   } while (0);
   $s_0 = $s_4;
   $wn_addr_0 = $wn_addr_3 - 1 | 0;
   label = 15538;
   continue;
  }
 }
 if ((label | 0) == 15548) {
  $c_6 = $c_2;
  $s_10 = $s_3 - 1 | 0;
  $ws_addr_4 = $ws;
  $wn_addr_8 = $wn_addr_3;
  label = 15577;
 } else if ((label | 0) == 15585) {
  return $retval_0 | 0;
 } else if ((label | 0) == 15571) {
  $c_6 = $or141;
  $s_10 = $s_8 - 1 | 0;
  $ws_addr_4 = $ws_addr_3;
  $wn_addr_8 = $wn_addr_7;
  label = 15577;
 } else if ((label | 0) == 15568) {
  $c_6 = $c_4;
  $s_10 = $s_8 - 1 | 0;
  $ws_addr_4 = $ws_addr_3;
  $wn_addr_8 = $wn_addr_7;
  label = 15577;
 } else if ((label | 0) == 15551) {
  $c_6 = $c_2;
  $s_10 = $s_3 - 1 | 0;
  $ws_addr_4 = $ws;
  $wn_addr_8 = $wn_addr_3;
  label = 15577;
 } else if ((label | 0) == 15554) {
  $c_6 = $c_2;
  $s_10 = $s_3 - 1 | 0;
  $ws_addr_4 = $ws;
  $wn_addr_8 = $wn_addr_3;
  label = 15577;
 } else if ((label | 0) == 15574) {
  $c_6 = $or156;
  $s_10 = $s_8 - 1 | 0;
  $ws_addr_4 = $ws_addr_3;
  $wn_addr_8 = $wn_addr_7;
  label = 15577;
 } else if ((label | 0) == 15588) {
  return $retval_0 | 0;
 }
 if ((label | 0) == 15577) {
  if (($c_6 | 0) == 0) {
   $wn_addr_8101 = $wn_addr_8;
   $ws_addr_4103 = $ws_addr_4;
   $s_10105 = $s_10;
   label = 15578;
  } else {
   $ws_addr_4102 = $ws_addr_4;
   $s_10104 = $s_10;
  }
 }
 do {
  if ((label | 0) == 15578) {
   if ((HEAP8[$s_10105] | 0) != 0) {
    $ws_addr_4102 = $ws_addr_4103;
    $s_10104 = $s_10105;
    break;
   }
   if (($ws_addr_4103 | 0) != 0) {
    HEAP32[$ws_addr_4103 >> 2] = 0;
    HEAP32[$src >> 2] = 0;
   }
   $retval_0 = $wn - $wn_addr_8101 | 0;
   return $retval_0 | 0;
  }
 } while (0);
 HEAP32[(___errno_location() | 0) >> 2] = 138;
 if (($ws_addr_4102 | 0) == 0) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 HEAP32[$src >> 2] = $s_10104;
 $retval_0 = -1;
 return $retval_0 | 0;
}
function _wcrtomb($s, $wc, $st) {
 $s = $s | 0;
 $wc = $wc | 0;
 $st = $st | 0;
 var $retval_0 = 0;
 if (($s | 0) == 0) {
  $retval_0 = 1;
  return $retval_0 | 0;
 }
 if ($wc >>> 0 < 128) {
  HEAP8[$s] = $wc & 255;
  $retval_0 = 1;
  return $retval_0 | 0;
 }
 if ($wc >>> 0 < 2048) {
  HEAP8[$s] = ($wc >>> 6 | 192) & 255;
  HEAP8[$s + 1 | 0] = ($wc & 63 | 128) & 255;
  $retval_0 = 2;
  return $retval_0 | 0;
 }
 if ($wc >>> 0 < 55296 | ($wc - 57344 | 0) >>> 0 < 8192) {
  HEAP8[$s] = ($wc >>> 12 | 224) & 255;
  HEAP8[$s + 1 | 0] = ($wc >>> 6 & 63 | 128) & 255;
  HEAP8[$s + 2 | 0] = ($wc & 63 | 128) & 255;
  $retval_0 = 3;
  return $retval_0 | 0;
 }
 if (($wc - 65536 | 0) >>> 0 < 1048576) {
  HEAP8[$s] = ($wc >>> 18 | 240) & 255;
  HEAP8[$s + 1 | 0] = ($wc >>> 12 & 63 | 128) & 255;
  HEAP8[$s + 2 | 0] = ($wc >>> 6 & 63 | 128) & 255;
  HEAP8[$s + 3 | 0] = ($wc & 63 | 128) & 255;
  $retval_0 = 4;
  return $retval_0 | 0;
 } else {
  HEAP32[(___errno_location() | 0) >> 2] = 138;
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 return 0;
}
function _wcsnrtombs($dst, $wcs, $wn, $n, $st) {
 $dst = $dst | 0;
 $wcs = $wcs | 0;
 $wn = $wn | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $buf = 0, $ws = 0, $0 = 0, $tobool = 0, $n_addr_0_ph = 0, $s_0_ph = 0, $arraydecay10 = 0, $_pr65 = 0, $s_054 = 0, $cnt_053 = 0, $wn_addr_052 = 0, $n_addr_051 = 0, $cmp = 0, $n_addr_0_wn_addr_0 = 0, $sub = 0, $call = 0, $n_addr_1 = 0, $s_1 = 0, $add15 = 0, $1 = 0, $2 = 0, $s_046 = 0, $n_addr_2 = 0, $wn_addr_1 = 0, $cnt_1 = 0, $3 = 0, $s_241 = 0, $cnt_240 = 0, $wn_addr_239 = 0, $n_addr_338 = 0, $call24 = 0, $incdec_ptr = 0, $dec = 0, $inc = 0, $5 = 0, $cnt_3 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 264 | 0;
 $buf = __stackBase__ | 0;
 $ws = __stackBase__ + 256 | 0;
 $0 = HEAP32[$wcs >> 2] | 0;
 HEAP32[$ws >> 2] = $0;
 $tobool = ($dst | 0) != 0;
 $n_addr_0_ph = $tobool ? $n : 256;
 $s_0_ph = $tobool ? $dst : $buf | 0;
 L18300 : do {
  if (($0 | 0) == 0 | ($n_addr_0_ph | 0) == 0) {
   $cnt_1 = 0;
   $wn_addr_1 = $wn;
   $n_addr_2 = $n_addr_0_ph;
   $s_046 = $s_0_ph;
   $2 = $0;
  } else {
   $arraydecay10 = $buf | 0;
   $n_addr_051 = $n_addr_0_ph;
   $wn_addr_052 = $wn;
   $cnt_053 = 0;
   $s_054 = $s_0_ph;
   $_pr65 = $0;
   while (1) {
    $cmp = $wn_addr_052 >>> 0 >= $n_addr_051 >>> 0;
    if (!($cmp | $wn_addr_052 >>> 0 > 32)) {
     $cnt_1 = $cnt_053;
     $wn_addr_1 = $wn_addr_052;
     $n_addr_2 = $n_addr_051;
     $s_046 = $s_054;
     $2 = $_pr65;
     break L18300;
    }
    $n_addr_0_wn_addr_0 = $cmp ? $n_addr_051 : $wn_addr_052;
    $sub = $wn_addr_052 - $n_addr_0_wn_addr_0 | 0;
    $call = _wcsrtombs($s_054, $ws, $n_addr_0_wn_addr_0, 0) | 0;
    if (($call | 0) == -1) {
     break;
    }
    if (($s_054 | 0) == ($arraydecay10 | 0)) {
     $s_1 = $arraydecay10;
     $n_addr_1 = $n_addr_051;
    } else {
     $s_1 = $s_054 + $call | 0;
     $n_addr_1 = $n_addr_051 - $call | 0;
    }
    $add15 = $call + $cnt_053 | 0;
    $1 = HEAP32[$ws >> 2] | 0;
    if (($1 | 0) == 0 | ($n_addr_1 | 0) == 0) {
     $cnt_1 = $add15;
     $wn_addr_1 = $sub;
     $n_addr_2 = $n_addr_1;
     $s_046 = $s_1;
     $2 = $1;
     break L18300;
    } else {
     $n_addr_051 = $n_addr_1;
     $wn_addr_052 = $sub;
     $cnt_053 = $add15;
     $s_054 = $s_1;
     $_pr65 = $1;
    }
   }
   $cnt_1 = -1;
   $wn_addr_1 = $sub;
   $n_addr_2 = 0;
   $s_046 = $s_054;
   $2 = HEAP32[$ws >> 2] | 0;
  }
 } while (0);
 L18311 : do {
  if (($2 | 0) == 0) {
   $cnt_3 = $cnt_1;
   $5 = $2;
  } else {
   if (($n_addr_2 | 0) == 0 | ($wn_addr_1 | 0) == 0) {
    $cnt_3 = $cnt_1;
    $5 = $2;
    break;
   } else {
    $n_addr_338 = $n_addr_2;
    $wn_addr_239 = $wn_addr_1;
    $cnt_240 = $cnt_1;
    $s_241 = $s_046;
    $3 = $2;
   }
   while (1) {
    $call24 = _wcrtomb($s_241, HEAP32[$3 >> 2] | 0, 0) | 0;
    if (($call24 + 1 | 0) >>> 0 < 2) {
     break;
    }
    $incdec_ptr = $3 + 4 | 0;
    HEAP32[$ws >> 2] = $incdec_ptr;
    $dec = $wn_addr_239 - 1 | 0;
    $inc = $cnt_240 + 1 | 0;
    if (($n_addr_338 | 0) == ($call24 | 0) | ($dec | 0) == 0) {
     $cnt_3 = $inc;
     $5 = $incdec_ptr;
     break L18311;
    } else {
     $n_addr_338 = $n_addr_338 - $call24 | 0;
     $wn_addr_239 = $dec;
     $cnt_240 = $inc;
     $s_241 = $s_241 + $call24 | 0;
     $3 = $incdec_ptr;
    }
   }
   if (($call24 | 0) != 0) {
    $cnt_3 = -1;
    $5 = $3;
    break;
   }
   HEAP32[$ws >> 2] = 0;
   $cnt_3 = $cnt_240;
   $5 = 0;
  }
 } while (0);
 if (!$tobool) {
  STACKTOP = __stackBase__;
  return $cnt_3 | 0;
 }
 HEAP32[$wcs >> 2] = $5;
 STACKTOP = __stackBase__;
 return $cnt_3 | 0;
}
function _wcsrtombs($s, $ws, $n, $st) {
 $s = $s | 0;
 $ws = $ws | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $buf = 0, $0 = 0, $arraydecay = 0, $1 = 0, $2 = 0, $ws2_047 = 0, $n_addr_046 = 0, $call = 0, $call_pn = 0, $n_addr_1 = 0, $incdec_ptr = 0, $3 = 0, $4 = 0, $s_addr_065 = 0, $n_addr_264 = 0, $5 = 0, $s_addr_0_lcssa = 0, $n_addr_2_lcssa = 0, $arraydecay30 = 0, $call12 = 0, $6 = 0, $n_addr_3 = 0, $s_addr_1 = 0, $incdec_ptr20 = 0, $7 = 0, $s_addr_258 = 0, $n_addr_457 = 0, $8 = 0, $call31 = 0, $9 = 0, $10 = 0, $n_addr_5 = 0, $s_addr_3 = 0, $incdec_ptr49 = 0, $n_addr_452 = 0, $retval_0 = 0, label = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $buf = __stackBase__ | 0;
 if (($s | 0) == 0) {
  $0 = HEAP32[$ws >> 2] | 0;
  $arraydecay = $buf | 0;
  $1 = HEAP32[$0 >> 2] | 0;
  if (($1 | 0) == 0) {
   $retval_0 = 0;
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  } else {
   $n_addr_046 = 0;
   $ws2_047 = $0;
   $2 = $1;
  }
  while (1) {
   if ($2 >>> 0 > 127) {
    $call = _wcrtomb($arraydecay, $2, 0) | 0;
    if (($call | 0) == -1) {
     $retval_0 = -1;
     label = 15657;
     break;
    } else {
     $call_pn = $call;
    }
   } else {
    $call_pn = 1;
   }
   $n_addr_1 = $call_pn + $n_addr_046 | 0;
   $incdec_ptr = $ws2_047 + 4 | 0;
   $3 = HEAP32[$incdec_ptr >> 2] | 0;
   if (($3 | 0) == 0) {
    $retval_0 = $n_addr_1;
    label = 15656;
    break;
   } else {
    $n_addr_046 = $n_addr_1;
    $ws2_047 = $incdec_ptr;
    $2 = $3;
   }
  }
  if ((label | 0) == 15656) {
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  } else if ((label | 0) == 15657) {
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  }
 }
 L18337 : do {
  if ($n >>> 0 > 3) {
   $n_addr_264 = $n;
   $s_addr_065 = $s;
   $4 = HEAP32[$ws >> 2] | 0;
   while (1) {
    $5 = HEAP32[$4 >> 2] | 0;
    if (($5 | 0) == 0) {
     $n_addr_2_lcssa = $n_addr_264;
     $s_addr_0_lcssa = $s_addr_065;
     break L18337;
    }
    if ($5 >>> 0 > 127) {
     $call12 = _wcrtomb($s_addr_065, $5, 0) | 0;
     if (($call12 | 0) == -1) {
      $retval_0 = -1;
      break;
     }
     $s_addr_1 = $s_addr_065 + $call12 | 0;
     $n_addr_3 = $n_addr_264 - $call12 | 0;
     $6 = $4;
    } else {
     HEAP8[$s_addr_065] = $5 & 255;
     $s_addr_1 = $s_addr_065 + 1 | 0;
     $n_addr_3 = $n_addr_264 - 1 | 0;
     $6 = HEAP32[$ws >> 2] | 0;
    }
    $incdec_ptr20 = $6 + 4 | 0;
    HEAP32[$ws >> 2] = $incdec_ptr20;
    if ($n_addr_3 >>> 0 > 3) {
     $n_addr_264 = $n_addr_3;
     $s_addr_065 = $s_addr_1;
     $4 = $incdec_ptr20;
    } else {
     $n_addr_2_lcssa = $n_addr_3;
     $s_addr_0_lcssa = $s_addr_1;
     break L18337;
    }
   }
   STACKTOP = __stackBase__;
   return $retval_0 | 0;
  } else {
   $n_addr_2_lcssa = $n;
   $s_addr_0_lcssa = $s;
  }
 } while (0);
 L18349 : do {
  if (($n_addr_2_lcssa | 0) == 0) {
   $n_addr_452 = 0;
  } else {
   $arraydecay30 = $buf | 0;
   $n_addr_457 = $n_addr_2_lcssa;
   $s_addr_258 = $s_addr_0_lcssa;
   $7 = HEAP32[$ws >> 2] | 0;
   while (1) {
    $8 = HEAP32[$7 >> 2] | 0;
    if (($8 | 0) == 0) {
     label = 15649;
     break;
    }
    if ($8 >>> 0 > 127) {
     $call31 = _wcrtomb($arraydecay30, $8, 0) | 0;
     if (($call31 | 0) == -1) {
      $retval_0 = -1;
      label = 15655;
      break;
     }
     if ($call31 >>> 0 > $n_addr_457 >>> 0) {
      label = 15645;
      break;
     }
     $9 = HEAP32[$7 >> 2] | 0;
     _wcrtomb($s_addr_258, $9, 0) | 0;
     $s_addr_3 = $s_addr_258 + $call31 | 0;
     $n_addr_5 = $n_addr_457 - $call31 | 0;
     $10 = $7;
    } else {
     HEAP8[$s_addr_258] = $8 & 255;
     $s_addr_3 = $s_addr_258 + 1 | 0;
     $n_addr_5 = $n_addr_457 - 1 | 0;
     $10 = HEAP32[$ws >> 2] | 0;
    }
    $incdec_ptr49 = $10 + 4 | 0;
    HEAP32[$ws >> 2] = $incdec_ptr49;
    if (($n_addr_5 | 0) == 0) {
     $n_addr_452 = 0;
     break L18349;
    } else {
     $n_addr_457 = $n_addr_5;
     $s_addr_258 = $s_addr_3;
     $7 = $incdec_ptr49;
    }
   }
   if ((label | 0) == 15649) {
    HEAP8[$s_addr_258] = 0;
    $n_addr_452 = $n_addr_457;
    break;
   } else if ((label | 0) == 15655) {
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   } else if ((label | 0) == 15645) {
    $retval_0 = $n - $n_addr_457 | 0;
    STACKTOP = __stackBase__;
    return $retval_0 | 0;
   }
  }
 } while (0);
 HEAP32[$ws >> 2] = 0;
 $retval_0 = $n - $n_addr_452 | 0;
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __ZNSt8bad_castD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv($this, $thrown_type, $0) {
 $this = $this | 0;
 $thrown_type = $thrown_type | 0;
 $0 = $0 | 0;
 return ($this | 0) == ($thrown_type | 0) | 0;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $dst_ptr_leading_to_static_ptr_i = 0, $1 = 0, $path_dst_ptr_to_static_ptr6_i = 0, $number_to_static_ptr11_i = 0;
 if ((HEAP32[$info + 8 >> 2] | 0) != ($this | 0)) {
  return;
 }
 $dst_ptr_leading_to_static_ptr_i = $info + 16 | 0;
 $1 = HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] | 0;
 if (($1 | 0) == 0) {
  HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] = $adjustedPtr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
  return;
 }
 if (($1 | 0) != ($adjustedPtr | 0)) {
  $number_to_static_ptr11_i = $info + 36 | 0;
  HEAP32[$number_to_static_ptr11_i >> 2] = (HEAP32[$number_to_static_ptr11_i >> 2] | 0) + 1;
  HEAP32[$info + 24 >> 2] = 2;
  HEAP8[$info + 54 | 0] = 1;
  return;
 }
 $path_dst_ptr_to_static_ptr6_i = $info + 24 | 0;
 if ((HEAP32[$path_dst_ptr_to_static_ptr6_i >> 2] | 0) != 2) {
  return;
 }
 HEAP32[$path_dst_ptr_to_static_ptr6_i >> 2] = $path_below;
 return;
}
function __ZN10__cxxabiv123__fundamental_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv119__pointer_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this, $thrown_type, $adjustedPtr) {
 $this = $this | 0;
 $thrown_type = $thrown_type | 0;
 $adjustedPtr = $adjustedPtr | 0;
 var $info = 0, $4 = 0, $5 = 0, $retval_0 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 56 | 0;
 $info = __stackBase__ | 0;
 if (($this | 0) == ($thrown_type | 0)) {
  $retval_0 = 1;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 if (($thrown_type | 0) == 0) {
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 $4 = ___dynamic_cast($thrown_type, 16920, 16904, -1) | 0;
 $5 = $4;
 if (($4 | 0) == 0) {
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 _memset($info | 0, 0, 56);
 HEAP32[$info >> 2] = $5;
 HEAP32[$info + 8 >> 2] = $this;
 HEAP32[$info + 12 >> 2] = -1;
 HEAP32[$info + 48 >> 2] = 1;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 15]($5, $info, HEAP32[$adjustedPtr >> 2] | 0, 1);
 if ((HEAP32[$info + 24 >> 2] | 0) != 1) {
  $retval_0 = 0;
  STACKTOP = __stackBase__;
  return $retval_0 | 0;
 }
 HEAP32[$adjustedPtr >> 2] = HEAP32[$info + 16 >> 2];
 $retval_0 = 1;
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $dst_ptr_leading_to_static_ptr_i = 0, $3 = 0, $path_dst_ptr_to_static_ptr6_i = 0, $number_to_static_ptr11_i = 0, $6 = 0;
 if (($this | 0) != (HEAP32[$info + 8 >> 2] | 0)) {
  $6 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 15]($6, $info, $adjustedPtr, $path_below);
  return;
 }
 $dst_ptr_leading_to_static_ptr_i = $info + 16 | 0;
 $3 = HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] | 0;
 if (($3 | 0) == 0) {
  HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] = $adjustedPtr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
  return;
 }
 if (($3 | 0) != ($adjustedPtr | 0)) {
  $number_to_static_ptr11_i = $info + 36 | 0;
  HEAP32[$number_to_static_ptr11_i >> 2] = (HEAP32[$number_to_static_ptr11_i >> 2] | 0) + 1;
  HEAP32[$info + 24 >> 2] = 2;
  HEAP8[$info + 54 | 0] = 1;
  return;
 }
 $path_dst_ptr_to_static_ptr6_i = $info + 24 | 0;
 if ((HEAP32[$path_dst_ptr_to_static_ptr6_i >> 2] | 0) != 2) {
  return;
 }
 HEAP32[$path_dst_ptr_to_static_ptr6_i >> 2] = $path_below;
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $dst_ptr_leading_to_static_ptr_i = 0, $3 = 0, $path_dst_ptr_to_static_ptr6_i = 0, $number_to_static_ptr11_i = 0, $6 = 0, $add_ptr = 0, $7 = 0, $shr_i16 = 0, $offset_to_base_0_i21 = 0, $12 = 0, $search_done = 0, $15 = 0, $p_0 = 0, $16 = 0, $shr_i = 0, $offset_to_base_0_i = 0, $20 = 0, $incdec_ptr6 = 0, label = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  $dst_ptr_leading_to_static_ptr_i = $info + 16 | 0;
  $3 = HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] | 0;
  if (($3 | 0) == 0) {
   HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] = $adjustedPtr;
   HEAP32[$info + 24 >> 2] = $path_below;
   HEAP32[$info + 36 >> 2] = 1;
   return;
  }
  if (($3 | 0) != ($adjustedPtr | 0)) {
   $number_to_static_ptr11_i = $info + 36 | 0;
   HEAP32[$number_to_static_ptr11_i >> 2] = (HEAP32[$number_to_static_ptr11_i >> 2] | 0) + 1;
   HEAP32[$info + 24 >> 2] = 2;
   HEAP8[$info + 54 | 0] = 1;
   return;
  }
  $path_dst_ptr_to_static_ptr6_i = $info + 24 | 0;
  if ((HEAP32[$path_dst_ptr_to_static_ptr6_i >> 2] | 0) != 2) {
   return;
  }
  HEAP32[$path_dst_ptr_to_static_ptr6_i >> 2] = $path_below;
  return;
 }
 $6 = HEAP32[$this + 12 >> 2] | 0;
 $add_ptr = $this + 16 + ($6 << 3) | 0;
 $7 = HEAP32[$this + 20 >> 2] | 0;
 $shr_i16 = $7 >> 8;
 if (($7 & 1 | 0) == 0) {
  $offset_to_base_0_i21 = $shr_i16;
 } else {
  $offset_to_base_0_i21 = HEAP32[(HEAP32[$adjustedPtr >> 2] | 0) + $shr_i16 >> 2] | 0;
 }
 $12 = HEAP32[$this + 16 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 15]($12, $info, $adjustedPtr + $offset_to_base_0_i21 | 0, ($7 & 2 | 0) != 0 ? $path_below : 2);
 if (($6 | 0) <= 1) {
  return;
 }
 $search_done = $info + 54 | 0;
 $15 = $adjustedPtr;
 $p_0 = $this + 24 | 0;
 while (1) {
  $16 = HEAP32[$p_0 + 4 >> 2] | 0;
  $shr_i = $16 >> 8;
  if (($16 & 1 | 0) == 0) {
   $offset_to_base_0_i = $shr_i;
  } else {
   $offset_to_base_0_i = HEAP32[(HEAP32[$15 >> 2] | 0) + $shr_i >> 2] | 0;
  }
  $20 = HEAP32[$p_0 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$20 >> 2] | 0) + 28 >> 2] & 15]($20, $info, $adjustedPtr + $offset_to_base_0_i | 0, ($16 & 2 | 0) != 0 ? $path_below : 2);
  if ((HEAP8[$search_done] & 1) != 0) {
   label = 15724;
   break;
  }
  $incdec_ptr6 = $p_0 + 8 | 0;
  if ($incdec_ptr6 >>> 0 < $add_ptr >>> 0) {
   $p_0 = $incdec_ptr6;
  } else {
   label = 15721;
   break;
  }
 }
 if ((label | 0) == 15721) {
  return;
 } else if ((label | 0) == 15724) {
  return;
 }
}
function __ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv($this, $thrown_type, $adjustedPtr) {
 $this = $this | 0;
 $thrown_type = $thrown_type | 0;
 $adjustedPtr = $adjustedPtr | 0;
 var $info = 0, $4 = 0, $7 = 0, $11 = 0, $13 = 0, $17 = 0, $19 = 0, $22 = 0, $23 = 0, $retval_0 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 56 | 0;
 $info = __stackBase__ | 0;
 HEAP32[$adjustedPtr >> 2] = HEAP32[HEAP32[$adjustedPtr >> 2] >> 2];
 $4 = $thrown_type | 0;
 do {
  if (($this | 0) == ($4 | 0) | ($4 | 0) == 16984) {
   $retval_0 = 1;
  } else {
   if (($thrown_type | 0) == 0) {
    $retval_0 = 0;
    break;
   }
   $7 = ___dynamic_cast($thrown_type, 16920, 16872, -1) | 0;
   if (($7 | 0) == 0) {
    $retval_0 = 0;
    break;
   }
   if ((HEAP32[$7 + 8 >> 2] & (HEAP32[$this + 8 >> 2] ^ -1) | 0) != 0) {
    $retval_0 = 0;
    break;
   }
   $11 = HEAP32[$this + 12 >> 2] | 0;
   $13 = $7 + 12 | 0;
   if (($11 | 0) == (HEAP32[$13 >> 2] | 0) | ($11 | 0) == 15288) {
    $retval_0 = 1;
    break;
   }
   if (($11 | 0) == 0) {
    $retval_0 = 0;
    break;
   }
   $17 = ___dynamic_cast($11, 16920, 16904, -1) | 0;
   if (($17 | 0) == 0) {
    $retval_0 = 0;
    break;
   }
   $19 = HEAP32[$13 >> 2] | 0;
   if (($19 | 0) == 0) {
    $retval_0 = 0;
    break;
   }
   $22 = ___dynamic_cast($19, 16920, 16904, -1) | 0;
   $23 = $22;
   if (($22 | 0) == 0) {
    $retval_0 = 0;
    break;
   }
   _memset($info | 0, 0, 56);
   HEAP32[$info >> 2] = $23;
   HEAP32[$info + 8 >> 2] = $17;
   HEAP32[$info + 12 >> 2] = -1;
   HEAP32[$info + 48 >> 2] = 1;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] & 15]($23, $info, HEAP32[$adjustedPtr >> 2] | 0, 1);
   if ((HEAP32[$info + 24 >> 2] | 0) != 1) {
    $retval_0 = 0;
    break;
   }
   HEAP32[$adjustedPtr >> 2] = HEAP32[$info + 16 >> 2];
   $retval_0 = 1;
  }
 } while (0);
 STACKTOP = __stackBase__;
 return $retval_0 | 0;
}
function ___dynamic_cast($static_ptr, $static_type, $dst_type, $src2dst_offset) {
 $static_ptr = $static_ptr | 0;
 $static_type = $static_type | 0;
 $dst_type = $dst_type | 0;
 $src2dst_offset = $src2dst_offset | 0;
 var $info = 0, $1 = 0, $add_ptr = 0, $4 = 0, $5 = 0, $dst_ptr_leading_to_static_ptr = 0, $dst_ptr_not_leading_to_static_ptr = 0, $path_dst_ptr_to_static_ptr = 0, $path_dynamic_ptr_to_static_ptr = 0, $path_dynamic_ptr_to_dst_ptr = 0, $number_to_dst_ptr = 0, $14 = 0, $dst_ptr_0 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 56 | 0;
 $info = __stackBase__ | 0;
 $1 = HEAP32[$static_ptr >> 2] | 0;
 $add_ptr = $static_ptr + (HEAP32[$1 - 8 >> 2] | 0) | 0;
 $4 = HEAP32[$1 - 4 >> 2] | 0;
 $5 = $4;
 HEAP32[$info >> 2] = $dst_type;
 HEAP32[$info + 4 >> 2] = $static_ptr;
 HEAP32[$info + 8 >> 2] = $static_type;
 HEAP32[$info + 12 >> 2] = $src2dst_offset;
 $dst_ptr_leading_to_static_ptr = $info + 16 | 0;
 $dst_ptr_not_leading_to_static_ptr = $info + 20 | 0;
 $path_dst_ptr_to_static_ptr = $info + 24 | 0;
 $path_dynamic_ptr_to_static_ptr = $info + 28 | 0;
 $path_dynamic_ptr_to_dst_ptr = $info + 32 | 0;
 $number_to_dst_ptr = $info + 40 | 0;
 _memset($dst_ptr_leading_to_static_ptr | 0, 0, 39);
 if (($4 | 0) == ($dst_type | 0)) {
  HEAP32[$info + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 20 >> 2] & 31]($5, $info, $add_ptr, $add_ptr, 1, 0);
  STACKTOP = __stackBase__;
  return ((HEAP32[$path_dst_ptr_to_static_ptr >> 2] | 0) == 1 ? $add_ptr : 0) | 0;
 }
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 24 >> 2] & 7]($5, $info, $add_ptr, 1, 0);
 $14 = HEAP32[$info + 36 >> 2] | 0;
 if (($14 | 0) == 1) {
  do {
   if ((HEAP32[$path_dst_ptr_to_static_ptr >> 2] | 0) != 1) {
    if ((HEAP32[$number_to_dst_ptr >> 2] | 0) != 0) {
     $dst_ptr_0 = 0;
     STACKTOP = __stackBase__;
     return $dst_ptr_0 | 0;
    }
    if ((HEAP32[$path_dynamic_ptr_to_static_ptr >> 2] | 0) != 1) {
     $dst_ptr_0 = 0;
     STACKTOP = __stackBase__;
     return $dst_ptr_0 | 0;
    }
    if ((HEAP32[$path_dynamic_ptr_to_dst_ptr >> 2] | 0) == 1) {
     break;
    } else {
     $dst_ptr_0 = 0;
    }
    STACKTOP = __stackBase__;
    return $dst_ptr_0 | 0;
   }
  } while (0);
  $dst_ptr_0 = HEAP32[$dst_ptr_leading_to_static_ptr >> 2] | 0;
  STACKTOP = __stackBase__;
  return $dst_ptr_0 | 0;
 } else if (($14 | 0) == 0) {
  if ((HEAP32[$number_to_dst_ptr >> 2] | 0) != 1) {
   $dst_ptr_0 = 0;
   STACKTOP = __stackBase__;
   return $dst_ptr_0 | 0;
  }
  if ((HEAP32[$path_dynamic_ptr_to_static_ptr >> 2] | 0) != 1) {
   $dst_ptr_0 = 0;
   STACKTOP = __stackBase__;
   return $dst_ptr_0 | 0;
  }
  $dst_ptr_0 = (HEAP32[$path_dynamic_ptr_to_dst_ptr >> 2] | 0) == 1 ? HEAP32[$dst_ptr_not_leading_to_static_ptr >> 2] | 0 : 0;
  STACKTOP = __stackBase__;
  return $dst_ptr_0 | 0;
 } else {
  $dst_ptr_0 = 0;
  STACKTOP = __stackBase__;
  return $dst_ptr_0 | 0;
 }
 return 0;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $0 = 0, $path_dynamic_ptr_to_static_ptr_i = 0, $dst_ptr_not_leading_to_static_ptr = 0, $is_dst_type_derived_from_static_type = 0, $10 = 0, $add_ptr = 0, $found_our_static_ptr = 0, $found_any_static_type = 0, $search_done = 0, $__flags34 = 0, $path_dst_ptr_to_static_ptr = 0, $11 = 0, $is_dst_type_derived_from_static_type13_0_off0140 = 0, $p_0139 = 0, $does_dst_type_point_to_our_static_type_0_off0138 = 0, $12 = 0, $shr_i107 = 0, $offset_to_base_0_i112 = 0, $16 = 0, $does_dst_type_point_to_our_static_type_1_off0 = 0, $is_dst_type_derived_from_static_type13_1_off0 = 0, $incdec_ptr = 0, $does_dst_type_point_to_our_static_type_0_off0_lcssa = 0, $is_dst_type_derived_from_static_type13_2_off0 = 0, $is_dst_type_derived_from_static_type13_2_off0146 = 0, $number_to_dst_ptr = 0, $is_dst_type_derived_from_static_type13_2_off0147 = 0, $33 = 0, $add_ptr64 = 0, $34 = 0, $shr_i121 = 0, $offset_to_base_0_i126 = 0, $39 = 0, $incdec_ptr69 = 0, $42 = 0, $number_to_static_ptr76 = 0, $search_done79 = 0, $44 = 0, $p65_0 = 0, $47 = 0, $shr_i92 = 0, $offset_to_base_0_i97 = 0, $51 = 0, $incdec_ptr84 = 0, $path_dst_ptr_to_static_ptr99 = 0, $search_done92 = 0, $54 = 0, $search_done110 = 0, $55 = 0, $p65_1 = 0, $60 = 0, $shr_i76 = 0, $offset_to_base_0_i81 = 0, $64 = 0, $incdec_ptr105 = 0, $p65_2 = 0, $70 = 0, $shr_i = 0, $offset_to_base_0_i = 0, $74 = 0, $incdec_ptr120 = 0, label = 0;
 $0 = $this | 0;
 if (($0 | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) != ($current_ptr | 0)) {
   return;
  }
  $path_dynamic_ptr_to_static_ptr_i = $info + 28 | 0;
  if ((HEAP32[$path_dynamic_ptr_to_static_ptr_i >> 2] | 0) == 1) {
   return;
  }
  HEAP32[$path_dynamic_ptr_to_static_ptr_i >> 2] = $path_below;
  return;
 }
 if (($0 | 0) == (HEAP32[$info >> 2] | 0)) {
  do {
   if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
    $dst_ptr_not_leading_to_static_ptr = $info + 20 | 0;
    if ((HEAP32[$dst_ptr_not_leading_to_static_ptr >> 2] | 0) == ($current_ptr | 0)) {
     break;
    }
    HEAP32[$info + 32 >> 2] = $path_below;
    $is_dst_type_derived_from_static_type = $info + 44 | 0;
    if ((HEAP32[$is_dst_type_derived_from_static_type >> 2] | 0) == 4) {
     return;
    }
    $10 = HEAP32[$this + 12 >> 2] | 0;
    $add_ptr = $this + 16 + ($10 << 3) | 0;
    L18511 : do {
     if (($10 | 0) > 0) {
      $found_our_static_ptr = $info + 52 | 0;
      $found_any_static_type = $info + 53 | 0;
      $search_done = $info + 54 | 0;
      $__flags34 = $this + 8 | 0;
      $path_dst_ptr_to_static_ptr = $info + 24 | 0;
      $11 = $current_ptr;
      $does_dst_type_point_to_our_static_type_0_off0138 = 0;
      $p_0139 = $this + 16 | 0;
      $is_dst_type_derived_from_static_type13_0_off0140 = 0;
      L18513 : while (1) {
       HEAP8[$found_our_static_ptr] = 0;
       HEAP8[$found_any_static_type] = 0;
       $12 = HEAP32[$p_0139 + 4 >> 2] | 0;
       $shr_i107 = $12 >> 8;
       if (($12 & 1 | 0) == 0) {
        $offset_to_base_0_i112 = $shr_i107;
       } else {
        $offset_to_base_0_i112 = HEAP32[(HEAP32[$11 >> 2] | 0) + $shr_i107 >> 2] | 0;
       }
       $16 = HEAP32[$p_0139 >> 2] | 0;
       FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$16 >> 2] | 0) + 20 >> 2] & 31]($16, $info, $current_ptr, $current_ptr + $offset_to_base_0_i112 | 0, 2 - ($12 >>> 1 & 1) | 0, $use_strcmp);
       if ((HEAP8[$search_done] & 1) != 0) {
        $is_dst_type_derived_from_static_type13_2_off0 = $is_dst_type_derived_from_static_type13_0_off0140;
        $does_dst_type_point_to_our_static_type_0_off0_lcssa = $does_dst_type_point_to_our_static_type_0_off0138;
        break;
       }
       do {
        if ((HEAP8[$found_any_static_type] & 1) == 0) {
         $is_dst_type_derived_from_static_type13_1_off0 = $is_dst_type_derived_from_static_type13_0_off0140;
         $does_dst_type_point_to_our_static_type_1_off0 = $does_dst_type_point_to_our_static_type_0_off0138;
        } else {
         if ((HEAP8[$found_our_static_ptr] & 1) == 0) {
          if ((HEAP32[$__flags34 >> 2] & 1 | 0) == 0) {
           $is_dst_type_derived_from_static_type13_2_off0 = 1;
           $does_dst_type_point_to_our_static_type_0_off0_lcssa = $does_dst_type_point_to_our_static_type_0_off0138;
           break L18513;
          } else {
           $is_dst_type_derived_from_static_type13_1_off0 = 1;
           $does_dst_type_point_to_our_static_type_1_off0 = $does_dst_type_point_to_our_static_type_0_off0138;
           break;
          }
         }
         if ((HEAP32[$path_dst_ptr_to_static_ptr >> 2] | 0) == 1) {
          label = 15786;
          break L18511;
         }
         if ((HEAP32[$__flags34 >> 2] & 2 | 0) == 0) {
          label = 15786;
          break L18511;
         } else {
          $is_dst_type_derived_from_static_type13_1_off0 = 1;
          $does_dst_type_point_to_our_static_type_1_off0 = 1;
         }
        }
       } while (0);
       $incdec_ptr = $p_0139 + 8 | 0;
       if ($incdec_ptr >>> 0 < $add_ptr >>> 0) {
        $does_dst_type_point_to_our_static_type_0_off0138 = $does_dst_type_point_to_our_static_type_1_off0;
        $p_0139 = $incdec_ptr;
        $is_dst_type_derived_from_static_type13_0_off0140 = $is_dst_type_derived_from_static_type13_1_off0;
       } else {
        $is_dst_type_derived_from_static_type13_2_off0 = $is_dst_type_derived_from_static_type13_1_off0;
        $does_dst_type_point_to_our_static_type_0_off0_lcssa = $does_dst_type_point_to_our_static_type_1_off0;
        break;
       }
      }
      if ($does_dst_type_point_to_our_static_type_0_off0_lcssa) {
       $is_dst_type_derived_from_static_type13_2_off0147 = $is_dst_type_derived_from_static_type13_2_off0;
       label = 15785;
      } else {
       $is_dst_type_derived_from_static_type13_2_off0146 = $is_dst_type_derived_from_static_type13_2_off0;
       label = 15782;
      }
     } else {
      $is_dst_type_derived_from_static_type13_2_off0146 = 0;
      label = 15782;
     }
    } while (0);
    do {
     if ((label | 0) == 15782) {
      HEAP32[$dst_ptr_not_leading_to_static_ptr >> 2] = $current_ptr;
      $number_to_dst_ptr = $info + 40 | 0;
      HEAP32[$number_to_dst_ptr >> 2] = (HEAP32[$number_to_dst_ptr >> 2] | 0) + 1;
      if ((HEAP32[$info + 36 >> 2] | 0) != 1) {
       $is_dst_type_derived_from_static_type13_2_off0147 = $is_dst_type_derived_from_static_type13_2_off0146;
       label = 15785;
       break;
      }
      if ((HEAP32[$info + 24 >> 2] | 0) != 2) {
       $is_dst_type_derived_from_static_type13_2_off0147 = $is_dst_type_derived_from_static_type13_2_off0146;
       label = 15785;
       break;
      }
      HEAP8[$info + 54 | 0] = 1;
      if ($is_dst_type_derived_from_static_type13_2_off0146) {
       label = 15786;
      } else {
       label = 15787;
      }
     }
    } while (0);
    if ((label | 0) == 15785) {
     if ($is_dst_type_derived_from_static_type13_2_off0147) {
      label = 15786;
     } else {
      label = 15787;
     }
    }
    if ((label | 0) == 15786) {
     HEAP32[$is_dst_type_derived_from_static_type >> 2] = 3;
     return;
    } else if ((label | 0) == 15787) {
     HEAP32[$is_dst_type_derived_from_static_type >> 2] = 4;
     return;
    }
   }
  } while (0);
  if (($path_below | 0) != 1) {
   return;
  }
  HEAP32[$info + 32 >> 2] = 1;
  return;
 }
 $33 = HEAP32[$this + 12 >> 2] | 0;
 $add_ptr64 = $this + 16 + ($33 << 3) | 0;
 $34 = HEAP32[$this + 20 >> 2] | 0;
 $shr_i121 = $34 >> 8;
 if (($34 & 1 | 0) == 0) {
  $offset_to_base_0_i126 = $shr_i121;
 } else {
  $offset_to_base_0_i126 = HEAP32[(HEAP32[$current_ptr >> 2] | 0) + $shr_i121 >> 2] | 0;
 }
 $39 = HEAP32[$this + 16 >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$39 >> 2] | 0) + 24 >> 2] & 7]($39, $info, $current_ptr + $offset_to_base_0_i126 | 0, ($34 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
 $incdec_ptr69 = $this + 24 | 0;
 if (($33 | 0) <= 1) {
  return;
 }
 $42 = HEAP32[$this + 8 >> 2] | 0;
 do {
  if (($42 & 2 | 0) == 0) {
   $number_to_static_ptr76 = $info + 36 | 0;
   if ((HEAP32[$number_to_static_ptr76 >> 2] | 0) == 1) {
    break;
   }
   if (($42 & 1 | 0) == 0) {
    $search_done110 = $info + 54 | 0;
    $55 = $current_ptr;
    $p65_2 = $incdec_ptr69;
    while (1) {
     if ((HEAP8[$search_done110] & 1) != 0) {
      label = 15825;
      break;
     }
     if ((HEAP32[$number_to_static_ptr76 >> 2] | 0) == 1) {
      label = 15826;
      break;
     }
     $70 = HEAP32[$p65_2 + 4 >> 2] | 0;
     $shr_i = $70 >> 8;
     if (($70 & 1 | 0) == 0) {
      $offset_to_base_0_i = $shr_i;
     } else {
      $offset_to_base_0_i = HEAP32[(HEAP32[$55 >> 2] | 0) + $shr_i >> 2] | 0;
     }
     $74 = HEAP32[$p65_2 >> 2] | 0;
     FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$74 >> 2] | 0) + 24 >> 2] & 7]($74, $info, $current_ptr + $offset_to_base_0_i | 0, ($70 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
     $incdec_ptr120 = $p65_2 + 8 | 0;
     if ($incdec_ptr120 >>> 0 < $add_ptr64 >>> 0) {
      $p65_2 = $incdec_ptr120;
     } else {
      label = 15814;
      break;
     }
    }
    if ((label | 0) == 15825) {
     return;
    } else if ((label | 0) == 15826) {
     return;
    } else if ((label | 0) == 15814) {
     return;
    }
   }
   $path_dst_ptr_to_static_ptr99 = $info + 24 | 0;
   $search_done92 = $info + 54 | 0;
   $54 = $current_ptr;
   $p65_1 = $incdec_ptr69;
   while (1) {
    if ((HEAP8[$search_done92] & 1) != 0) {
     label = 15827;
     break;
    }
    if ((HEAP32[$number_to_static_ptr76 >> 2] | 0) == 1) {
     if ((HEAP32[$path_dst_ptr_to_static_ptr99 >> 2] | 0) == 1) {
      label = 15820;
      break;
     }
    }
    $60 = HEAP32[$p65_1 + 4 >> 2] | 0;
    $shr_i76 = $60 >> 8;
    if (($60 & 1 | 0) == 0) {
     $offset_to_base_0_i81 = $shr_i76;
    } else {
     $offset_to_base_0_i81 = HEAP32[(HEAP32[$54 >> 2] | 0) + $shr_i76 >> 2] | 0;
    }
    $64 = HEAP32[$p65_1 >> 2] | 0;
    FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$64 >> 2] | 0) + 24 >> 2] & 7]($64, $info, $current_ptr + $offset_to_base_0_i81 | 0, ($60 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
    $incdec_ptr105 = $p65_1 + 8 | 0;
    if ($incdec_ptr105 >>> 0 < $add_ptr64 >>> 0) {
     $p65_1 = $incdec_ptr105;
    } else {
     label = 15824;
     break;
    }
   }
   if ((label | 0) == 15820) {
    return;
   } else if ((label | 0) == 15824) {
    return;
   } else if ((label | 0) == 15827) {
    return;
   }
  }
 } while (0);
 $search_done79 = $info + 54 | 0;
 $44 = $current_ptr;
 $p65_0 = $incdec_ptr69;
 while (1) {
  if ((HEAP8[$search_done79] & 1) != 0) {
   label = 15817;
   break;
  }
  $47 = HEAP32[$p65_0 + 4 >> 2] | 0;
  $shr_i92 = $47 >> 8;
  if (($47 & 1 | 0) == 0) {
   $offset_to_base_0_i97 = $shr_i92;
  } else {
   $offset_to_base_0_i97 = HEAP32[(HEAP32[$44 >> 2] | 0) + $shr_i92 >> 2] | 0;
  }
  $51 = HEAP32[$p65_0 >> 2] | 0;
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$51 >> 2] | 0) + 24 >> 2] & 7]($51, $info, $current_ptr + $offset_to_base_0_i97 | 0, ($47 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
  $incdec_ptr84 = $p65_0 + 8 | 0;
  if ($incdec_ptr84 >>> 0 < $add_ptr64 >>> 0) {
   $p65_0 = $incdec_ptr84;
  } else {
   label = 15822;
   break;
  }
 }
 if ((label | 0) == 15822) {
  return;
 } else if ((label | 0) == 15817) {
  return;
 }
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $path_dynamic_ptr_to_static_ptr_i = 0, $dst_ptr_not_leading_to_static_ptr = 0, $number_to_dst_ptr = 0;
 if ((HEAP32[$info + 8 >> 2] | 0) == ($this | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) != ($current_ptr | 0)) {
   return;
  }
  $path_dynamic_ptr_to_static_ptr_i = $info + 28 | 0;
  if ((HEAP32[$path_dynamic_ptr_to_static_ptr_i >> 2] | 0) == 1) {
   return;
  }
  HEAP32[$path_dynamic_ptr_to_static_ptr_i >> 2] = $path_below;
  return;
 }
 if ((HEAP32[$info >> 2] | 0) != ($this | 0)) {
  return;
 }
 do {
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $dst_ptr_not_leading_to_static_ptr = $info + 20 | 0;
   if ((HEAP32[$dst_ptr_not_leading_to_static_ptr >> 2] | 0) == ($current_ptr | 0)) {
    break;
   }
   HEAP32[$info + 32 >> 2] = $path_below;
   HEAP32[$dst_ptr_not_leading_to_static_ptr >> 2] = $current_ptr;
   $number_to_dst_ptr = $info + 40 | 0;
   HEAP32[$number_to_dst_ptr >> 2] = (HEAP32[$number_to_dst_ptr >> 2] | 0) + 1;
   do {
    if ((HEAP32[$info + 36 >> 2] | 0) == 1) {
     if ((HEAP32[$info + 24 >> 2] | 0) != 2) {
      break;
     }
     HEAP8[$info + 54 | 0] = 1;
    }
   } while (0);
   HEAP32[$info + 44 >> 2] = 4;
   return;
  }
 } while (0);
 if (($path_below | 0) != 1) {
  return;
 }
 HEAP32[$info + 32 >> 2] = 1;
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $dst_ptr_leading_to_static_ptr_i = 0, $2 = 0, $path_dst_ptr_to_static_ptr12_i = 0, $4 = 0, $5 = 0, $number_to_static_ptr26_i = 0;
 if ((HEAP32[$info + 8 >> 2] | 0) != ($this | 0)) {
  return;
 }
 HEAP8[$info + 53 | 0] = 1;
 if ((HEAP32[$info + 4 >> 2] | 0) != ($current_ptr | 0)) {
  return;
 }
 HEAP8[$info + 52 | 0] = 1;
 $dst_ptr_leading_to_static_ptr_i = $info + 16 | 0;
 $2 = HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] | 0;
 if (($2 | 0) == 0) {
  HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] = $dst_ptr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
  if (!((HEAP32[$info + 48 >> 2] | 0) == 1 & ($path_below | 0) == 1)) {
   return;
  }
  HEAP8[$info + 54 | 0] = 1;
  return;
 }
 if (($2 | 0) != ($dst_ptr | 0)) {
  $number_to_static_ptr26_i = $info + 36 | 0;
  HEAP32[$number_to_static_ptr26_i >> 2] = (HEAP32[$number_to_static_ptr26_i >> 2] | 0) + 1;
  HEAP8[$info + 54 | 0] = 1;
  return;
 }
 $path_dst_ptr_to_static_ptr12_i = $info + 24 | 0;
 $4 = HEAP32[$path_dst_ptr_to_static_ptr12_i >> 2] | 0;
 if (($4 | 0) == 2) {
  HEAP32[$path_dst_ptr_to_static_ptr12_i >> 2] = $path_below;
  $5 = $path_below;
 } else {
  $5 = $4;
 }
 if (!((HEAP32[$info + 48 >> 2] | 0) == 1 & ($5 | 0) == 1)) {
  return;
 }
 HEAP8[$info + 54 | 0] = 1;
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $0 = 0, $path_dynamic_ptr_to_static_ptr_i = 0, $dst_ptr_not_leading_to_static_ptr = 0, $is_dst_type_derived_from_static_type = 0, $found_our_static_ptr = 0, $found_any_static_type = 0, $10 = 0, $is_dst_type_derived_from_static_type13_0_off034 = 0, $number_to_dst_ptr = 0, $20 = 0, label = 0;
 $0 = $this | 0;
 if (($0 | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) != ($current_ptr | 0)) {
   return;
  }
  $path_dynamic_ptr_to_static_ptr_i = $info + 28 | 0;
  if ((HEAP32[$path_dynamic_ptr_to_static_ptr_i >> 2] | 0) == 1) {
   return;
  }
  HEAP32[$path_dynamic_ptr_to_static_ptr_i >> 2] = $path_below;
  return;
 }
 if (($0 | 0) != (HEAP32[$info >> 2] | 0)) {
  $20 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$20 >> 2] | 0) + 24 >> 2] & 7]($20, $info, $current_ptr, $path_below, $use_strcmp);
  return;
 }
 do {
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $dst_ptr_not_leading_to_static_ptr = $info + 20 | 0;
   if ((HEAP32[$dst_ptr_not_leading_to_static_ptr >> 2] | 0) == ($current_ptr | 0)) {
    break;
   }
   HEAP32[$info + 32 >> 2] = $path_below;
   $is_dst_type_derived_from_static_type = $info + 44 | 0;
   if ((HEAP32[$is_dst_type_derived_from_static_type >> 2] | 0) == 4) {
    return;
   }
   $found_our_static_ptr = $info + 52 | 0;
   HEAP8[$found_our_static_ptr] = 0;
   $found_any_static_type = $info + 53 | 0;
   HEAP8[$found_any_static_type] = 0;
   $10 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 31]($10, $info, $current_ptr, $current_ptr, 1, $use_strcmp);
   if ((HEAP8[$found_any_static_type] & 1) == 0) {
    $is_dst_type_derived_from_static_type13_0_off034 = 0;
    label = 15882;
   } else {
    if ((HEAP8[$found_our_static_ptr] & 1) == 0) {
     $is_dst_type_derived_from_static_type13_0_off034 = 1;
     label = 15882;
    }
   }
   L18665 : do {
    if ((label | 0) == 15882) {
     HEAP32[$dst_ptr_not_leading_to_static_ptr >> 2] = $current_ptr;
     $number_to_dst_ptr = $info + 40 | 0;
     HEAP32[$number_to_dst_ptr >> 2] = (HEAP32[$number_to_dst_ptr >> 2] | 0) + 1;
     do {
      if ((HEAP32[$info + 36 >> 2] | 0) == 1) {
       if ((HEAP32[$info + 24 >> 2] | 0) != 2) {
        label = 15885;
        break;
       }
       HEAP8[$info + 54 | 0] = 1;
       if ($is_dst_type_derived_from_static_type13_0_off034) {
        break L18665;
       }
      } else {
       label = 15885;
      }
     } while (0);
     if ((label | 0) == 15885) {
      if ($is_dst_type_derived_from_static_type13_0_off034) {
       break;
      }
     }
     HEAP32[$is_dst_type_derived_from_static_type >> 2] = 4;
     return;
    }
   } while (0);
   HEAP32[$is_dst_type_derived_from_static_type >> 2] = 3;
   return;
  }
 } while (0);
 if (($path_below | 0) != 1) {
  return;
 }
 HEAP32[$info + 32 >> 2] = 1;
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $dst_ptr_leading_to_static_ptr_i = 0, $4 = 0, $path_dst_ptr_to_static_ptr12_i = 0, $6 = 0, $7 = 0, $number_to_static_ptr26_i = 0, $found_our_static_ptr2 = 0, $11 = 0, $found_any_static_type5 = 0, $13 = 0, $14 = 0, $add_ptr = 0, $15 = 0, $shr_i30 = 0, $offset_to_base_0_i35 = 0, $20 = 0, $path_dst_ptr_to_static_ptr = 0, $__flags = 0, $search_done = 0, $23 = 0, $p_0 = 0, $33 = 0, $shr_i = 0, $offset_to_base_0_i = 0, $37 = 0;
 if (($this | 0) != (HEAP32[$info + 8 >> 2] | 0)) {
  $found_our_static_ptr2 = $info + 52 | 0;
  $11 = HEAP8[$found_our_static_ptr2] & 1;
  $found_any_static_type5 = $info + 53 | 0;
  $13 = HEAP8[$found_any_static_type5] & 1;
  $14 = HEAP32[$this + 12 >> 2] | 0;
  $add_ptr = $this + 16 + ($14 << 3) | 0;
  HEAP8[$found_our_static_ptr2] = 0;
  HEAP8[$found_any_static_type5] = 0;
  $15 = HEAP32[$this + 20 >> 2] | 0;
  $shr_i30 = $15 >> 8;
  if (($15 & 1 | 0) == 0) {
   $offset_to_base_0_i35 = $shr_i30;
  } else {
   $offset_to_base_0_i35 = HEAP32[(HEAP32[$current_ptr >> 2] | 0) + $shr_i30 >> 2] | 0;
  }
  $20 = HEAP32[$this + 16 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$20 >> 2] | 0) + 20 >> 2] & 31]($20, $info, $dst_ptr, $current_ptr + $offset_to_base_0_i35 | 0, ($15 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
  L18687 : do {
   if (($14 | 0) > 1) {
    $path_dst_ptr_to_static_ptr = $info + 24 | 0;
    $__flags = $this + 8 | 0;
    $search_done = $info + 54 | 0;
    $23 = $current_ptr;
    $p_0 = $this + 24 | 0;
    do {
     if ((HEAP8[$search_done] & 1) != 0) {
      break L18687;
     }
     do {
      if ((HEAP8[$found_our_static_ptr2] & 1) == 0) {
       if ((HEAP8[$found_any_static_type5] & 1) == 0) {
        break;
       }
       if ((HEAP32[$__flags >> 2] & 1 | 0) == 0) {
        break L18687;
       }
      } else {
       if ((HEAP32[$path_dst_ptr_to_static_ptr >> 2] | 0) == 1) {
        break L18687;
       }
       if ((HEAP32[$__flags >> 2] & 2 | 0) == 0) {
        break L18687;
       }
      }
     } while (0);
     HEAP8[$found_our_static_ptr2] = 0;
     HEAP8[$found_any_static_type5] = 0;
     $33 = HEAP32[$p_0 + 4 >> 2] | 0;
     $shr_i = $33 >> 8;
     if (($33 & 1 | 0) == 0) {
      $offset_to_base_0_i = $shr_i;
     } else {
      $offset_to_base_0_i = HEAP32[(HEAP32[$23 >> 2] | 0) + $shr_i >> 2] | 0;
     }
     $37 = HEAP32[$p_0 >> 2] | 0;
     FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$37 >> 2] | 0) + 20 >> 2] & 31]($37, $info, $dst_ptr, $current_ptr + $offset_to_base_0_i | 0, ($33 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
     $p_0 = $p_0 + 8 | 0;
    } while ($p_0 >>> 0 < $add_ptr >>> 0);
   }
  } while (0);
  HEAP8[$found_our_static_ptr2] = $11;
  HEAP8[$found_any_static_type5] = $13;
  return;
 }
 HEAP8[$info + 53 | 0] = 1;
 if ((HEAP32[$info + 4 >> 2] | 0) != ($current_ptr | 0)) {
  return;
 }
 HEAP8[$info + 52 | 0] = 1;
 $dst_ptr_leading_to_static_ptr_i = $info + 16 | 0;
 $4 = HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] | 0;
 if (($4 | 0) == 0) {
  HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] = $dst_ptr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
  if (!((HEAP32[$info + 48 >> 2] | 0) == 1 & ($path_below | 0) == 1)) {
   return;
  }
  HEAP8[$info + 54 | 0] = 1;
  return;
 }
 if (($4 | 0) != ($dst_ptr | 0)) {
  $number_to_static_ptr26_i = $info + 36 | 0;
  HEAP32[$number_to_static_ptr26_i >> 2] = (HEAP32[$number_to_static_ptr26_i >> 2] | 0) + 1;
  HEAP8[$info + 54 | 0] = 1;
  return;
 }
 $path_dst_ptr_to_static_ptr12_i = $info + 24 | 0;
 $6 = HEAP32[$path_dst_ptr_to_static_ptr12_i >> 2] | 0;
 if (($6 | 0) == 2) {
  HEAP32[$path_dst_ptr_to_static_ptr12_i >> 2] = $path_below;
  $7 = $path_below;
 } else {
  $7 = $6;
 }
 if (!((HEAP32[$info + 48 >> 2] | 0) == 1 & ($7 | 0) == 1)) {
  return;
 }
 HEAP8[$info + 54 | 0] = 1;
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $dst_ptr_leading_to_static_ptr_i = 0, $4 = 0, $path_dst_ptr_to_static_ptr12_i = 0, $6 = 0, $7 = 0, $number_to_static_ptr26_i = 0, $10 = 0;
 if (($this | 0) != (HEAP32[$info + 8 >> 2] | 0)) {
  $10 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 31]($10, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
  return;
 }
 HEAP8[$info + 53 | 0] = 1;
 if ((HEAP32[$info + 4 >> 2] | 0) != ($current_ptr | 0)) {
  return;
 }
 HEAP8[$info + 52 | 0] = 1;
 $dst_ptr_leading_to_static_ptr_i = $info + 16 | 0;
 $4 = HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] | 0;
 if (($4 | 0) == 0) {
  HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] = $dst_ptr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
  if (!((HEAP32[$info + 48 >> 2] | 0) == 1 & ($path_below | 0) == 1)) {
   return;
  }
  HEAP8[$info + 54 | 0] = 1;
  return;
 }
 if (($4 | 0) != ($dst_ptr | 0)) {
  $number_to_static_ptr26_i = $info + 36 | 0;
  HEAP32[$number_to_static_ptr26_i >> 2] = (HEAP32[$number_to_static_ptr26_i >> 2] | 0) + 1;
  HEAP8[$info + 54 | 0] = 1;
  return;
 }
 $path_dst_ptr_to_static_ptr12_i = $info + 24 | 0;
 $6 = HEAP32[$path_dst_ptr_to_static_ptr12_i >> 2] | 0;
 if (($6 | 0) == 2) {
  HEAP32[$path_dst_ptr_to_static_ptr12_i >> 2] = $path_below;
  $7 = $path_below;
 } else {
  $7 = $6;
 }
 if (!((HEAP32[$info + 48 >> 2] | 0) == 1 & ($7 | 0) == 1)) {
  return;
 }
 HEAP8[$info + 54 | 0] = 1;
 return;
}
function _malloc($bytes) {
 $bytes = $bytes | 0;
 var $cond = 0, $shr = 0, $0 = 0, $shr3 = 0, $add8 = 0, $shl = 0, $1 = 0, $2 = 0, $3 = 0, $fd9 = 0, $4 = 0, $bk = 0, $shl22 = 0, $9 = 0, $shl37 = 0, $and41 = 0, $sub44 = 0, $and46 = 0, $shr47 = 0, $and49 = 0, $shr51 = 0, $and53 = 0, $shr55 = 0, $and57 = 0, $shr59 = 0, $and61 = 0, $add64 = 0, $shl65 = 0, $13 = 0, $14 = 0, $15 = 0, $fd69 = 0, $16 = 0, $bk78 = 0, $shl90 = 0, $sub91 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $shr101 = 0, $shl102 = 0, $25 = 0, $26 = 0, $shl105 = 0, $27 = 0, $28 = 0, $_pre_phi = 0, $F104_0 = 0, $32 = 0, $sub2_i = 0, $and3_i = 0, $shr4_i = 0, $and6_i = 0, $shr7_i = 0, $and9_i = 0, $shr11_i = 0, $and13_i = 0, $shr15_i = 0, $and17_i = 0, $33 = 0, $rsize_0_i = 0, $v_0_i = 0, $t_0_i = 0, $35 = 0, $36 = 0, $cond7_i = 0, $sub31_i = 0, $cmp32_i = 0, $38 = 0, $39 = 0, $add_ptr_i = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $bk47_i = 0, $fd50_i = 0, $arrayidx61_i = 0, $47 = 0, $arrayidx65_i = 0, $48 = 0, $RP_0_i = 0, $R_0_i = 0, $arrayidx71_i = 0, $49 = 0, $arrayidx75_i = 0, $50 = 0, $R_1_i = 0, $index_i = 0, $arrayidx94_i = 0, $arrayidx113_i = 0, $61 = 0, $64 = 0, $add177_i = 0, $67 = 0, $70 = 0, $71 = 0, $shr194_i = 0, $shl195_i = 0, $72 = 0, $73 = 0, $shl198_i = 0, $74 = 0, $75 = 0, $_pre_phi_i = 0, $F197_0_i = 0, $add_ptr225_i = 0, $add143 = 0, $and144 = 0, $79 = 0, $sub_i107 = 0, $shr_i108 = 0, $and_i112 = 0, $shl_i113 = 0, $and8_i = 0, $shl9_i = 0, $and12_i = 0, $add17_i = 0, $idx_0_i = 0, $80 = 0, $cond_i = 0, $rst_0_i = 0, $sizebits_0_i = 0, $t_0_i121 = 0, $rsize_0_i122 = 0, $v_0_i123 = 0, $and32_i = 0, $sub33_i = 0, $rsize_1_i = 0, $v_1_i = 0, $82 = 0, $83 = 0, $rst_1_i = 0, $t_1_i = 0, $rsize_2_i = 0, $v_2_i = 0, $shl59_i = 0, $and63_i = 0, $sub69_i = 0, $and72_i = 0, $shr74_i = 0, $and76_i = 0, $shr78_i = 0, $and80_i = 0, $shr82_i = 0, $and84_i = 0, $shr86_i = 0, $and88_i = 0, $t_2_ph_i = 0, $v_326_i = 0, $rsize_325_i = 0, $t_224_i = 0, $sub100_i = 0, $cmp101_i = 0, $sub100_rsize_3_i = 0, $t_2_v_3_i = 0, $86 = 0, $87 = 0, $v_3_lcssa_i = 0, $rsize_3_lcssa_i = 0, $89 = 0, $90 = 0, $add_ptr_i128 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $bk135_i = 0, $fd138_i = 0, $arrayidx150_i = 0, $98 = 0, $arrayidx154_i133 = 0, $99 = 0, $RP_0_i136 = 0, $R_0_i137 = 0, $arrayidx160_i = 0, $100 = 0, $arrayidx164_i = 0, $101 = 0, $R_1_i139 = 0, $index_i140 = 0, $arrayidx183_i = 0, $arrayidx203_i = 0, $112 = 0, $115 = 0, $add267_i = 0, $118 = 0, $shr282_i = 0, $shl287_i = 0, $121 = 0, $122 = 0, $shl290_i = 0, $123 = 0, $124 = 0, $_pre_phi_i147 = 0, $F289_0_i = 0, $129 = 0, $shr317_i = 0, $and330_i = 0, $shl332_i = 0, $and335_i = 0, $shl337_i = 0, $and340_i = 0, $add345_i = 0, $I315_0_i = 0, $arrayidx354_i = 0, $132 = 0, $shl361_i = 0, $cond382_i = 0, $T_0_i = 0, $K372_0_i = 0, $arrayidx393_i = 0, $139 = 0, $fd412_i = 0, $145 = 0, $147 = 0, $add_ptr436_i = 0, $nb_0 = 0, $153 = 0, $sub159 = 0, $154 = 0, $155 = 0, $159 = 0, $162 = 0, $sub187 = 0, $163 = 0, $164 = 0, $call_i_i = 0, $add_i149 = 0, $169 = 0, $sub_i150 = 0, $add9_i = 0, $neg_i151 = 0, $and11_i = 0, $170 = 0, $171 = 0, $add17_i152 = 0, $173 = 0, $174 = 0, $sp_0_i_i = 0, $base_i_i = 0, $175 = 0, $size_i_i = 0, $177 = 0, $call34_i = 0, $178 = 0, $179 = 0, $sub38_i = 0, $ssize_0_i = 0, $180 = 0, $add51_i = 0, $181 = 0, $call65_i = 0, $cmp66_i160 = 0, $and77_i = 0, $call80_i = 0, $cmp82_i = 0, $ssize_1_i = 0, $br_0_i = 0, $tsize_0_i = 0, $tbase_0_i = 0, $sub109_i = 0, $185 = 0, $and101_i = 0, $ssize_2_i = 0, $tsize_0758385_i = 0, $tsize_1_i = 0, $call128_i = 0, $call129_i = 0, $sub_ptr_sub_i = 0, $cmp138_i166 = 0, $call128_tbase_1_i = 0, $tbase_292_i = 0, $tsize_291_i = 0, $add147_i = 0, $189 = 0, $190 = 0, $i_02_i_i = 0, $shl_i_i = 0, $192 = 0, $195 = 0, $cond_i_i = 0, $sub5_i_i = 0, $sp_0105_i = 0, $201 = 0, $size185_i = 0, $202 = 0, $203 = 0, $205 = 0, $206 = 0, $add212_i = 0, $208 = 0, $209 = 0, $cond_i28_i = 0, $sub5_i30_i = 0, $add_ptr224_i = 0, $sp_1101_i = 0, $base223_i = 0, $217 = 0, $size242_i = 0, $220 = 0, $cond_i43_i = 0, $222 = 0, $cond15_i_i = 0, $add_ptr16_i_i = 0, $224 = 0, $add_ptr4_sum_i50_i = 0, $add_ptr17_i_i = 0, $225 = 0, $sub18_i_i = 0, $add_i_i = 0, $add26_i_i = 0, $add_ptr16_sum_i_i = 0, $234 = 0, $and37_i_i = 0, $shr_i55_i = 0, $236 = 0, $238 = 0, $239 = 0, $fd59_i_i = 0, $fd68_pre_phi_i_i = 0, $247 = 0, $249 = 0, $251 = 0, $253 = 0, $bk82_i_i = 0, $fd85_i_i = 0, $add_ptr16_sum56_i_i = 0, $258 = 0, $259 = 0, $arrayidx99_i_i = 0, $260 = 0, $RP_0_i_i = 0, $R_0_i_i = 0, $arrayidx103_i_i = 0, $261 = 0, $arrayidx107_i_i = 0, $262 = 0, $R_1_i_i = 0, $265 = 0, $arrayidx123_i_i = 0, $arrayidx143_i_i = 0, $add_ptr16_sum2728_i_i = 0, $275 = 0, $279 = 0, $qsize_0_i_i = 0, $oldfirst_0_i_i = 0, $head208_i_i = 0, $shr214_i_i = 0, $shl221_i_i = 0, $285 = 0, $286 = 0, $shl226_i_i = 0, $287 = 0, $288 = 0, $_pre_phi_i68_i = 0, $F224_0_i_i = 0, $293 = 0, $shr253_i_i = 0, $and264_i_i = 0, $shl265_i_i = 0, $and268_i_i = 0, $shl270_i_i = 0, $and273_i_i = 0, $add278_i_i = 0, $I252_0_i_i = 0, $arrayidx287_i_i = 0, $296 = 0, $shl294_i_i = 0, $cond315_i_i = 0, $T_0_i69_i = 0, $K305_0_i_i = 0, $arrayidx325_i_i = 0, $303 = 0, $fd344_i_i = 0, $309 = 0, $311 = 0, $316 = 0, $sp_0_i_i_i = 0, $317 = 0, $318 = 0, $add_ptr_i_i_i = 0, $320 = 0, $cond_i18_i = 0, $add_ptr7_i_i = 0, $cond13_i_i = 0, $add_ptr14_i_i = 0, $323 = 0, $cond_i_i_i = 0, $sub5_i_i_i = 0, $330 = 0, $add_ptr2416_i_i = 0, $332 = 0, $sub_ptr_sub_i_i = 0, $335 = 0, $shr_i_i = 0, $shl_i21_i = 0, $337 = 0, $338 = 0, $shl39_i_i = 0, $339 = 0, $340 = 0, $_pre_phi_i_i = 0, $F_0_i_i = 0, $343 = 0, $shr58_i_i = 0, $and69_i_i = 0, $shl70_i_i = 0, $and73_i_i = 0, $shl75_i_i = 0, $and78_i_i = 0, $add83_i_i = 0, $I57_0_i_i = 0, $arrayidx91_i_i = 0, $345 = 0, $shl95_i_i = 0, $cond115_i_i = 0, $T_0_i_i = 0, $K105_0_i_i = 0, $arrayidx126_i_i = 0, $348 = 0, $fd145_i_i = 0, $351 = 0, $353 = 0, $355 = 0, $sub253_i = 0, $356 = 0, $357 = 0, $mem_0 = 0, label = 0;
 do {
  if ($bytes >>> 0 < 245) {
   if ($bytes >>> 0 < 11) {
    $cond = 16;
   } else {
    $cond = $bytes + 11 & -8;
   }
   $shr = $cond >>> 3;
   $0 = HEAP32[1546] | 0;
   $shr3 = $0 >>> ($shr >>> 0);
   if (($shr3 & 3 | 0) != 0) {
    $add8 = ($shr3 & 1 ^ 1) + $shr | 0;
    $shl = $add8 << 1;
    $1 = 6224 + ($shl << 2) | 0;
    $2 = 6224 + ($shl + 2 << 2) | 0;
    $3 = HEAP32[$2 >> 2] | 0;
    $fd9 = $3 + 8 | 0;
    $4 = HEAP32[$fd9 >> 2] | 0;
    do {
     if (($1 | 0) == ($4 | 0)) {
      HEAP32[1546] = $0 & (1 << $add8 ^ -1);
     } else {
      if ($4 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
       _abort();
       return 0;
       return 0;
      }
      $bk = $4 + 12 | 0;
      if ((HEAP32[$bk >> 2] | 0) == ($3 | 0)) {
       HEAP32[$bk >> 2] = $1;
       HEAP32[$2 >> 2] = $4;
       break;
      } else {
       _abort();
       return 0;
       return 0;
      }
     }
    } while (0);
    $shl22 = $add8 << 3;
    HEAP32[$3 + 4 >> 2] = $shl22 | 3;
    $9 = $3 + ($shl22 | 4) | 0;
    HEAP32[$9 >> 2] = HEAP32[$9 >> 2] | 1;
    $mem_0 = $fd9;
    return $mem_0 | 0;
   }
   if ($cond >>> 0 <= (HEAP32[1548] | 0) >>> 0) {
    $nb_0 = $cond;
    break;
   }
   if (($shr3 | 0) != 0) {
    $shl37 = 2 << $shr;
    $and41 = $shr3 << $shr & ($shl37 | -$shl37);
    $sub44 = ($and41 & -$and41) - 1 | 0;
    $and46 = $sub44 >>> 12 & 16;
    $shr47 = $sub44 >>> ($and46 >>> 0);
    $and49 = $shr47 >>> 5 & 8;
    $shr51 = $shr47 >>> ($and49 >>> 0);
    $and53 = $shr51 >>> 2 & 4;
    $shr55 = $shr51 >>> ($and53 >>> 0);
    $and57 = $shr55 >>> 1 & 2;
    $shr59 = $shr55 >>> ($and57 >>> 0);
    $and61 = $shr59 >>> 1 & 1;
    $add64 = ($and49 | $and46 | $and53 | $and57 | $and61) + ($shr59 >>> ($and61 >>> 0)) | 0;
    $shl65 = $add64 << 1;
    $13 = 6224 + ($shl65 << 2) | 0;
    $14 = 6224 + ($shl65 + 2 << 2) | 0;
    $15 = HEAP32[$14 >> 2] | 0;
    $fd69 = $15 + 8 | 0;
    $16 = HEAP32[$fd69 >> 2] | 0;
    do {
     if (($13 | 0) == ($16 | 0)) {
      HEAP32[1546] = $0 & (1 << $add64 ^ -1);
     } else {
      if ($16 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
       _abort();
       return 0;
       return 0;
      }
      $bk78 = $16 + 12 | 0;
      if ((HEAP32[$bk78 >> 2] | 0) == ($15 | 0)) {
       HEAP32[$bk78 >> 2] = $13;
       HEAP32[$14 >> 2] = $16;
       break;
      } else {
       _abort();
       return 0;
       return 0;
      }
     }
    } while (0);
    $shl90 = $add64 << 3;
    $sub91 = $shl90 - $cond | 0;
    HEAP32[$15 + 4 >> 2] = $cond | 3;
    $20 = $15;
    $21 = $20 + $cond | 0;
    HEAP32[$20 + ($cond | 4) >> 2] = $sub91 | 1;
    HEAP32[$20 + $shl90 >> 2] = $sub91;
    $23 = HEAP32[1548] | 0;
    if (($23 | 0) != 0) {
     $24 = HEAP32[1551] | 0;
     $shr101 = $23 >>> 3;
     $shl102 = $shr101 << 1;
     $25 = 6224 + ($shl102 << 2) | 0;
     $26 = HEAP32[1546] | 0;
     $shl105 = 1 << $shr101;
     do {
      if (($26 & $shl105 | 0) == 0) {
       HEAP32[1546] = $26 | $shl105;
       $F104_0 = $25;
       $_pre_phi = 6224 + ($shl102 + 2 << 2) | 0;
      } else {
       $27 = 6224 + ($shl102 + 2 << 2) | 0;
       $28 = HEAP32[$27 >> 2] | 0;
       if ($28 >>> 0 >= (HEAP32[1550] | 0) >>> 0) {
        $F104_0 = $28;
        $_pre_phi = $27;
        break;
       }
       _abort();
       return 0;
       return 0;
      }
     } while (0);
     HEAP32[$_pre_phi >> 2] = $24;
     HEAP32[$F104_0 + 12 >> 2] = $24;
     HEAP32[$24 + 8 >> 2] = $F104_0;
     HEAP32[$24 + 12 >> 2] = $25;
    }
    HEAP32[1548] = $sub91;
    HEAP32[1551] = $21;
    $mem_0 = $fd69;
    return $mem_0 | 0;
   }
   $32 = HEAP32[1547] | 0;
   if (($32 | 0) == 0) {
    $nb_0 = $cond;
    break;
   }
   $sub2_i = ($32 & -$32) - 1 | 0;
   $and3_i = $sub2_i >>> 12 & 16;
   $shr4_i = $sub2_i >>> ($and3_i >>> 0);
   $and6_i = $shr4_i >>> 5 & 8;
   $shr7_i = $shr4_i >>> ($and6_i >>> 0);
   $and9_i = $shr7_i >>> 2 & 4;
   $shr11_i = $shr7_i >>> ($and9_i >>> 0);
   $and13_i = $shr11_i >>> 1 & 2;
   $shr15_i = $shr11_i >>> ($and13_i >>> 0);
   $and17_i = $shr15_i >>> 1 & 1;
   $33 = HEAP32[6488 + (($and6_i | $and3_i | $and9_i | $and13_i | $and17_i) + ($shr15_i >>> ($and17_i >>> 0)) << 2) >> 2] | 0;
   $t_0_i = $33;
   $v_0_i = $33;
   $rsize_0_i = (HEAP32[$33 + 4 >> 2] & -8) - $cond | 0;
   while (1) {
    $35 = HEAP32[$t_0_i + 16 >> 2] | 0;
    if (($35 | 0) == 0) {
     $36 = HEAP32[$t_0_i + 20 >> 2] | 0;
     if (($36 | 0) == 0) {
      break;
     } else {
      $cond7_i = $36;
     }
    } else {
     $cond7_i = $35;
    }
    $sub31_i = (HEAP32[$cond7_i + 4 >> 2] & -8) - $cond | 0;
    $cmp32_i = $sub31_i >>> 0 < $rsize_0_i >>> 0;
    $t_0_i = $cond7_i;
    $v_0_i = $cmp32_i ? $cond7_i : $v_0_i;
    $rsize_0_i = $cmp32_i ? $sub31_i : $rsize_0_i;
   }
   $38 = $v_0_i;
   $39 = HEAP32[1550] | 0;
   if ($38 >>> 0 < $39 >>> 0) {
    _abort();
    return 0;
    return 0;
   }
   $add_ptr_i = $38 + $cond | 0;
   $40 = $add_ptr_i;
   if ($38 >>> 0 >= $add_ptr_i >>> 0) {
    _abort();
    return 0;
    return 0;
   }
   $41 = HEAP32[$v_0_i + 24 >> 2] | 0;
   $42 = HEAP32[$v_0_i + 12 >> 2] | 0;
   do {
    if (($42 | 0) == ($v_0_i | 0)) {
     $arrayidx61_i = $v_0_i + 20 | 0;
     $47 = HEAP32[$arrayidx61_i >> 2] | 0;
     if (($47 | 0) == 0) {
      $arrayidx65_i = $v_0_i + 16 | 0;
      $48 = HEAP32[$arrayidx65_i >> 2] | 0;
      if (($48 | 0) == 0) {
       $R_1_i = 0;
       break;
      } else {
       $R_0_i = $48;
       $RP_0_i = $arrayidx65_i;
      }
     } else {
      $R_0_i = $47;
      $RP_0_i = $arrayidx61_i;
     }
     while (1) {
      $arrayidx71_i = $R_0_i + 20 | 0;
      $49 = HEAP32[$arrayidx71_i >> 2] | 0;
      if (($49 | 0) != 0) {
       $R_0_i = $49;
       $RP_0_i = $arrayidx71_i;
       continue;
      }
      $arrayidx75_i = $R_0_i + 16 | 0;
      $50 = HEAP32[$arrayidx75_i >> 2] | 0;
      if (($50 | 0) == 0) {
       break;
      } else {
       $R_0_i = $50;
       $RP_0_i = $arrayidx75_i;
      }
     }
     if ($RP_0_i >>> 0 < $39 >>> 0) {
      _abort();
      return 0;
      return 0;
     } else {
      HEAP32[$RP_0_i >> 2] = 0;
      $R_1_i = $R_0_i;
      break;
     }
    } else {
     $43 = HEAP32[$v_0_i + 8 >> 2] | 0;
     if ($43 >>> 0 < $39 >>> 0) {
      _abort();
      return 0;
      return 0;
     }
     $bk47_i = $43 + 12 | 0;
     if ((HEAP32[$bk47_i >> 2] | 0) != ($v_0_i | 0)) {
      _abort();
      return 0;
      return 0;
     }
     $fd50_i = $42 + 8 | 0;
     if ((HEAP32[$fd50_i >> 2] | 0) == ($v_0_i | 0)) {
      HEAP32[$bk47_i >> 2] = $42;
      HEAP32[$fd50_i >> 2] = $43;
      $R_1_i = $42;
      break;
     } else {
      _abort();
      return 0;
      return 0;
     }
    }
   } while (0);
   L18952 : do {
    if (($41 | 0) != 0) {
     $index_i = $v_0_i + 28 | 0;
     $arrayidx94_i = 6488 + (HEAP32[$index_i >> 2] << 2) | 0;
     do {
      if (($v_0_i | 0) == (HEAP32[$arrayidx94_i >> 2] | 0)) {
       HEAP32[$arrayidx94_i >> 2] = $R_1_i;
       if (($R_1_i | 0) != 0) {
        break;
       }
       HEAP32[1547] = HEAP32[1547] & (1 << HEAP32[$index_i >> 2] ^ -1);
       break L18952;
      } else {
       if ($41 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
        _abort();
        return 0;
        return 0;
       }
       $arrayidx113_i = $41 + 16 | 0;
       if ((HEAP32[$arrayidx113_i >> 2] | 0) == ($v_0_i | 0)) {
        HEAP32[$arrayidx113_i >> 2] = $R_1_i;
       } else {
        HEAP32[$41 + 20 >> 2] = $R_1_i;
       }
       if (($R_1_i | 0) == 0) {
        break L18952;
       }
      }
     } while (0);
     if ($R_1_i >>> 0 < (HEAP32[1550] | 0) >>> 0) {
      _abort();
      return 0;
      return 0;
     }
     HEAP32[$R_1_i + 24 >> 2] = $41;
     $61 = HEAP32[$v_0_i + 16 >> 2] | 0;
     do {
      if (($61 | 0) != 0) {
       if ($61 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
        _abort();
        return 0;
        return 0;
       } else {
        HEAP32[$R_1_i + 16 >> 2] = $61;
        HEAP32[$61 + 24 >> 2] = $R_1_i;
        break;
       }
      }
     } while (0);
     $64 = HEAP32[$v_0_i + 20 >> 2] | 0;
     if (($64 | 0) == 0) {
      break;
     }
     if ($64 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
      _abort();
      return 0;
      return 0;
     } else {
      HEAP32[$R_1_i + 20 >> 2] = $64;
      HEAP32[$64 + 24 >> 2] = $R_1_i;
      break;
     }
    }
   } while (0);
   if ($rsize_0_i >>> 0 < 16) {
    $add177_i = $rsize_0_i + $cond | 0;
    HEAP32[$v_0_i + 4 >> 2] = $add177_i | 3;
    $67 = $38 + ($add177_i + 4) | 0;
    HEAP32[$67 >> 2] = HEAP32[$67 >> 2] | 1;
   } else {
    HEAP32[$v_0_i + 4 >> 2] = $cond | 3;
    HEAP32[$38 + ($cond | 4) >> 2] = $rsize_0_i | 1;
    HEAP32[$38 + ($rsize_0_i + $cond) >> 2] = $rsize_0_i;
    $70 = HEAP32[1548] | 0;
    if (($70 | 0) != 0) {
     $71 = HEAP32[1551] | 0;
     $shr194_i = $70 >>> 3;
     $shl195_i = $shr194_i << 1;
     $72 = 6224 + ($shl195_i << 2) | 0;
     $73 = HEAP32[1546] | 0;
     $shl198_i = 1 << $shr194_i;
     do {
      if (($73 & $shl198_i | 0) == 0) {
       HEAP32[1546] = $73 | $shl198_i;
       $F197_0_i = $72;
       $_pre_phi_i = 6224 + ($shl195_i + 2 << 2) | 0;
      } else {
       $74 = 6224 + ($shl195_i + 2 << 2) | 0;
       $75 = HEAP32[$74 >> 2] | 0;
       if ($75 >>> 0 >= (HEAP32[1550] | 0) >>> 0) {
        $F197_0_i = $75;
        $_pre_phi_i = $74;
        break;
       }
       _abort();
       return 0;
       return 0;
      }
     } while (0);
     HEAP32[$_pre_phi_i >> 2] = $71;
     HEAP32[$F197_0_i + 12 >> 2] = $71;
     HEAP32[$71 + 8 >> 2] = $F197_0_i;
     HEAP32[$71 + 12 >> 2] = $72;
    }
    HEAP32[1548] = $rsize_0_i;
    HEAP32[1551] = $40;
   }
   $add_ptr225_i = $v_0_i + 8 | 0;
   if (($add_ptr225_i | 0) == 0) {
    $nb_0 = $cond;
    break;
   } else {
    $mem_0 = $add_ptr225_i;
   }
   return $mem_0 | 0;
  } else {
   if ($bytes >>> 0 > 4294967231) {
    $nb_0 = -1;
    break;
   }
   $add143 = $bytes + 11 | 0;
   $and144 = $add143 & -8;
   $79 = HEAP32[1547] | 0;
   if (($79 | 0) == 0) {
    $nb_0 = $and144;
    break;
   }
   $sub_i107 = -$and144 | 0;
   $shr_i108 = $add143 >>> 8;
   do {
    if (($shr_i108 | 0) == 0) {
     $idx_0_i = 0;
    } else {
     if ($and144 >>> 0 > 16777215) {
      $idx_0_i = 31;
      break;
     }
     $and_i112 = ($shr_i108 + 1048320 | 0) >>> 16 & 8;
     $shl_i113 = $shr_i108 << $and_i112;
     $and8_i = ($shl_i113 + 520192 | 0) >>> 16 & 4;
     $shl9_i = $shl_i113 << $and8_i;
     $and12_i = ($shl9_i + 245760 | 0) >>> 16 & 2;
     $add17_i = 14 - ($and8_i | $and_i112 | $and12_i) + ($shl9_i << $and12_i >>> 15) | 0;
     $idx_0_i = $and144 >>> (($add17_i + 7 | 0) >>> 0) & 1 | $add17_i << 1;
    }
   } while (0);
   $80 = HEAP32[6488 + ($idx_0_i << 2) >> 2] | 0;
   L18760 : do {
    if (($80 | 0) == 0) {
     $v_2_i = 0;
     $rsize_2_i = $sub_i107;
     $t_1_i = 0;
    } else {
     if (($idx_0_i | 0) == 31) {
      $cond_i = 0;
     } else {
      $cond_i = 25 - ($idx_0_i >>> 1) | 0;
     }
     $v_0_i123 = 0;
     $rsize_0_i122 = $sub_i107;
     $t_0_i121 = $80;
     $sizebits_0_i = $and144 << $cond_i;
     $rst_0_i = 0;
     while (1) {
      $and32_i = HEAP32[$t_0_i121 + 4 >> 2] & -8;
      $sub33_i = $and32_i - $and144 | 0;
      if ($sub33_i >>> 0 < $rsize_0_i122 >>> 0) {
       if (($and32_i | 0) == ($and144 | 0)) {
        $v_2_i = $t_0_i121;
        $rsize_2_i = $sub33_i;
        $t_1_i = $t_0_i121;
        break L18760;
       } else {
        $v_1_i = $t_0_i121;
        $rsize_1_i = $sub33_i;
       }
      } else {
       $v_1_i = $v_0_i123;
       $rsize_1_i = $rsize_0_i122;
      }
      $82 = HEAP32[$t_0_i121 + 20 >> 2] | 0;
      $83 = HEAP32[$t_0_i121 + 16 + ($sizebits_0_i >>> 31 << 2) >> 2] | 0;
      $rst_1_i = ($82 | 0) == 0 | ($82 | 0) == ($83 | 0) ? $rst_0_i : $82;
      if (($83 | 0) == 0) {
       $v_2_i = $v_1_i;
       $rsize_2_i = $rsize_1_i;
       $t_1_i = $rst_1_i;
       break;
      } else {
       $v_0_i123 = $v_1_i;
       $rsize_0_i122 = $rsize_1_i;
       $t_0_i121 = $83;
       $sizebits_0_i = $sizebits_0_i << 1;
       $rst_0_i = $rst_1_i;
      }
     }
    }
   } while (0);
   if (($t_1_i | 0) == 0 & ($v_2_i | 0) == 0) {
    $shl59_i = 2 << $idx_0_i;
    $and63_i = $79 & ($shl59_i | -$shl59_i);
    if (($and63_i | 0) == 0) {
     $nb_0 = $and144;
     break;
    }
    $sub69_i = ($and63_i & -$and63_i) - 1 | 0;
    $and72_i = $sub69_i >>> 12 & 16;
    $shr74_i = $sub69_i >>> ($and72_i >>> 0);
    $and76_i = $shr74_i >>> 5 & 8;
    $shr78_i = $shr74_i >>> ($and76_i >>> 0);
    $and80_i = $shr78_i >>> 2 & 4;
    $shr82_i = $shr78_i >>> ($and80_i >>> 0);
    $and84_i = $shr82_i >>> 1 & 2;
    $shr86_i = $shr82_i >>> ($and84_i >>> 0);
    $and88_i = $shr86_i >>> 1 & 1;
    $t_2_ph_i = HEAP32[6488 + (($and76_i | $and72_i | $and80_i | $and84_i | $and88_i) + ($shr86_i >>> ($and88_i >>> 0)) << 2) >> 2] | 0;
   } else {
    $t_2_ph_i = $t_1_i;
   }
   if (($t_2_ph_i | 0) == 0) {
    $rsize_3_lcssa_i = $rsize_2_i;
    $v_3_lcssa_i = $v_2_i;
   } else {
    $t_224_i = $t_2_ph_i;
    $rsize_325_i = $rsize_2_i;
    $v_326_i = $v_2_i;
    while (1) {
     $sub100_i = (HEAP32[$t_224_i + 4 >> 2] & -8) - $and144 | 0;
     $cmp101_i = $sub100_i >>> 0 < $rsize_325_i >>> 0;
     $sub100_rsize_3_i = $cmp101_i ? $sub100_i : $rsize_325_i;
     $t_2_v_3_i = $cmp101_i ? $t_224_i : $v_326_i;
     $86 = HEAP32[$t_224_i + 16 >> 2] | 0;
     if (($86 | 0) != 0) {
      $t_224_i = $86;
      $rsize_325_i = $sub100_rsize_3_i;
      $v_326_i = $t_2_v_3_i;
      continue;
     }
     $87 = HEAP32[$t_224_i + 20 >> 2] | 0;
     if (($87 | 0) == 0) {
      $rsize_3_lcssa_i = $sub100_rsize_3_i;
      $v_3_lcssa_i = $t_2_v_3_i;
      break;
     } else {
      $t_224_i = $87;
      $rsize_325_i = $sub100_rsize_3_i;
      $v_326_i = $t_2_v_3_i;
     }
    }
   }
   if (($v_3_lcssa_i | 0) == 0) {
    $nb_0 = $and144;
    break;
   }
   if ($rsize_3_lcssa_i >>> 0 >= ((HEAP32[1548] | 0) - $and144 | 0) >>> 0) {
    $nb_0 = $and144;
    break;
   }
   $89 = $v_3_lcssa_i;
   $90 = HEAP32[1550] | 0;
   if ($89 >>> 0 < $90 >>> 0) {
    _abort();
    return 0;
    return 0;
   }
   $add_ptr_i128 = $89 + $and144 | 0;
   $91 = $add_ptr_i128;
   if ($89 >>> 0 >= $add_ptr_i128 >>> 0) {
    _abort();
    return 0;
    return 0;
   }
   $92 = HEAP32[$v_3_lcssa_i + 24 >> 2] | 0;
   $93 = HEAP32[$v_3_lcssa_i + 12 >> 2] | 0;
   do {
    if (($93 | 0) == ($v_3_lcssa_i | 0)) {
     $arrayidx150_i = $v_3_lcssa_i + 20 | 0;
     $98 = HEAP32[$arrayidx150_i >> 2] | 0;
     if (($98 | 0) == 0) {
      $arrayidx154_i133 = $v_3_lcssa_i + 16 | 0;
      $99 = HEAP32[$arrayidx154_i133 >> 2] | 0;
      if (($99 | 0) == 0) {
       $R_1_i139 = 0;
       break;
      } else {
       $R_0_i137 = $99;
       $RP_0_i136 = $arrayidx154_i133;
      }
     } else {
      $R_0_i137 = $98;
      $RP_0_i136 = $arrayidx150_i;
     }
     while (1) {
      $arrayidx160_i = $R_0_i137 + 20 | 0;
      $100 = HEAP32[$arrayidx160_i >> 2] | 0;
      if (($100 | 0) != 0) {
       $R_0_i137 = $100;
       $RP_0_i136 = $arrayidx160_i;
       continue;
      }
      $arrayidx164_i = $R_0_i137 + 16 | 0;
      $101 = HEAP32[$arrayidx164_i >> 2] | 0;
      if (($101 | 0) == 0) {
       break;
      } else {
       $R_0_i137 = $101;
       $RP_0_i136 = $arrayidx164_i;
      }
     }
     if ($RP_0_i136 >>> 0 < $90 >>> 0) {
      _abort();
      return 0;
      return 0;
     } else {
      HEAP32[$RP_0_i136 >> 2] = 0;
      $R_1_i139 = $R_0_i137;
      break;
     }
    } else {
     $94 = HEAP32[$v_3_lcssa_i + 8 >> 2] | 0;
     if ($94 >>> 0 < $90 >>> 0) {
      _abort();
      return 0;
      return 0;
     }
     $bk135_i = $94 + 12 | 0;
     if ((HEAP32[$bk135_i >> 2] | 0) != ($v_3_lcssa_i | 0)) {
      _abort();
      return 0;
      return 0;
     }
     $fd138_i = $93 + 8 | 0;
     if ((HEAP32[$fd138_i >> 2] | 0) == ($v_3_lcssa_i | 0)) {
      HEAP32[$bk135_i >> 2] = $93;
      HEAP32[$fd138_i >> 2] = $94;
      $R_1_i139 = $93;
      break;
     } else {
      _abort();
      return 0;
      return 0;
     }
    }
   } while (0);
   L18810 : do {
    if (($92 | 0) != 0) {
     $index_i140 = $v_3_lcssa_i + 28 | 0;
     $arrayidx183_i = 6488 + (HEAP32[$index_i140 >> 2] << 2) | 0;
     do {
      if (($v_3_lcssa_i | 0) == (HEAP32[$arrayidx183_i >> 2] | 0)) {
       HEAP32[$arrayidx183_i >> 2] = $R_1_i139;
       if (($R_1_i139 | 0) != 0) {
        break;
       }
       HEAP32[1547] = HEAP32[1547] & (1 << HEAP32[$index_i140 >> 2] ^ -1);
       break L18810;
      } else {
       if ($92 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
        _abort();
        return 0;
        return 0;
       }
       $arrayidx203_i = $92 + 16 | 0;
       if ((HEAP32[$arrayidx203_i >> 2] | 0) == ($v_3_lcssa_i | 0)) {
        HEAP32[$arrayidx203_i >> 2] = $R_1_i139;
       } else {
        HEAP32[$92 + 20 >> 2] = $R_1_i139;
       }
       if (($R_1_i139 | 0) == 0) {
        break L18810;
       }
      }
     } while (0);
     if ($R_1_i139 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
      _abort();
      return 0;
      return 0;
     }
     HEAP32[$R_1_i139 + 24 >> 2] = $92;
     $112 = HEAP32[$v_3_lcssa_i + 16 >> 2] | 0;
     do {
      if (($112 | 0) != 0) {
       if ($112 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
        _abort();
        return 0;
        return 0;
       } else {
        HEAP32[$R_1_i139 + 16 >> 2] = $112;
        HEAP32[$112 + 24 >> 2] = $R_1_i139;
        break;
       }
      }
     } while (0);
     $115 = HEAP32[$v_3_lcssa_i + 20 >> 2] | 0;
     if (($115 | 0) == 0) {
      break;
     }
     if ($115 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
      _abort();
      return 0;
      return 0;
     } else {
      HEAP32[$R_1_i139 + 20 >> 2] = $115;
      HEAP32[$115 + 24 >> 2] = $R_1_i139;
      break;
     }
    }
   } while (0);
   do {
    if ($rsize_3_lcssa_i >>> 0 < 16) {
     $add267_i = $rsize_3_lcssa_i + $and144 | 0;
     HEAP32[$v_3_lcssa_i + 4 >> 2] = $add267_i | 3;
     $118 = $89 + ($add267_i + 4) | 0;
     HEAP32[$118 >> 2] = HEAP32[$118 >> 2] | 1;
    } else {
     HEAP32[$v_3_lcssa_i + 4 >> 2] = $and144 | 3;
     HEAP32[$89 + ($and144 | 4) >> 2] = $rsize_3_lcssa_i | 1;
     HEAP32[$89 + ($rsize_3_lcssa_i + $and144) >> 2] = $rsize_3_lcssa_i;
     $shr282_i = $rsize_3_lcssa_i >>> 3;
     if ($rsize_3_lcssa_i >>> 0 < 256) {
      $shl287_i = $shr282_i << 1;
      $121 = 6224 + ($shl287_i << 2) | 0;
      $122 = HEAP32[1546] | 0;
      $shl290_i = 1 << $shr282_i;
      do {
       if (($122 & $shl290_i | 0) == 0) {
        HEAP32[1546] = $122 | $shl290_i;
        $F289_0_i = $121;
        $_pre_phi_i147 = 6224 + ($shl287_i + 2 << 2) | 0;
       } else {
        $123 = 6224 + ($shl287_i + 2 << 2) | 0;
        $124 = HEAP32[$123 >> 2] | 0;
        if ($124 >>> 0 >= (HEAP32[1550] | 0) >>> 0) {
         $F289_0_i = $124;
         $_pre_phi_i147 = $123;
         break;
        }
        _abort();
        return 0;
        return 0;
       }
      } while (0);
      HEAP32[$_pre_phi_i147 >> 2] = $91;
      HEAP32[$F289_0_i + 12 >> 2] = $91;
      HEAP32[$89 + ($and144 + 8) >> 2] = $F289_0_i;
      HEAP32[$89 + ($and144 + 12) >> 2] = $121;
      break;
     }
     $129 = $add_ptr_i128;
     $shr317_i = $rsize_3_lcssa_i >>> 8;
     do {
      if (($shr317_i | 0) == 0) {
       $I315_0_i = 0;
      } else {
       if ($rsize_3_lcssa_i >>> 0 > 16777215) {
        $I315_0_i = 31;
        break;
       }
       $and330_i = ($shr317_i + 1048320 | 0) >>> 16 & 8;
       $shl332_i = $shr317_i << $and330_i;
       $and335_i = ($shl332_i + 520192 | 0) >>> 16 & 4;
       $shl337_i = $shl332_i << $and335_i;
       $and340_i = ($shl337_i + 245760 | 0) >>> 16 & 2;
       $add345_i = 14 - ($and335_i | $and330_i | $and340_i) + ($shl337_i << $and340_i >>> 15) | 0;
       $I315_0_i = $rsize_3_lcssa_i >>> (($add345_i + 7 | 0) >>> 0) & 1 | $add345_i << 1;
      }
     } while (0);
     $arrayidx354_i = 6488 + ($I315_0_i << 2) | 0;
     HEAP32[$89 + ($and144 + 28) >> 2] = $I315_0_i;
     HEAP32[$89 + ($and144 + 20) >> 2] = 0;
     HEAP32[$89 + ($and144 + 16) >> 2] = 0;
     $132 = HEAP32[1547] | 0;
     $shl361_i = 1 << $I315_0_i;
     if (($132 & $shl361_i | 0) == 0) {
      HEAP32[1547] = $132 | $shl361_i;
      HEAP32[$arrayidx354_i >> 2] = $129;
      HEAP32[$89 + ($and144 + 24) >> 2] = $arrayidx354_i;
      HEAP32[$89 + ($and144 + 12) >> 2] = $129;
      HEAP32[$89 + ($and144 + 8) >> 2] = $129;
      break;
     }
     if (($I315_0_i | 0) == 31) {
      $cond382_i = 0;
     } else {
      $cond382_i = 25 - ($I315_0_i >>> 1) | 0;
     }
     $K372_0_i = $rsize_3_lcssa_i << $cond382_i;
     $T_0_i = HEAP32[$arrayidx354_i >> 2] | 0;
     while (1) {
      if ((HEAP32[$T_0_i + 4 >> 2] & -8 | 0) == ($rsize_3_lcssa_i | 0)) {
       break;
      }
      $arrayidx393_i = $T_0_i + 16 + ($K372_0_i >>> 31 << 2) | 0;
      $139 = HEAP32[$arrayidx393_i >> 2] | 0;
      if (($139 | 0) == 0) {
       label = 16102;
       break;
      } else {
       $K372_0_i = $K372_0_i << 1;
       $T_0_i = $139;
      }
     }
     if ((label | 0) == 16102) {
      if ($arrayidx393_i >>> 0 < (HEAP32[1550] | 0) >>> 0) {
       _abort();
       return 0;
       return 0;
      } else {
       HEAP32[$arrayidx393_i >> 2] = $129;
       HEAP32[$89 + ($and144 + 24) >> 2] = $T_0_i;
       HEAP32[$89 + ($and144 + 12) >> 2] = $129;
       HEAP32[$89 + ($and144 + 8) >> 2] = $129;
       break;
      }
     }
     $fd412_i = $T_0_i + 8 | 0;
     $145 = HEAP32[$fd412_i >> 2] | 0;
     $147 = HEAP32[1550] | 0;
     if ($T_0_i >>> 0 < $147 >>> 0) {
      _abort();
      return 0;
      return 0;
     }
     if ($145 >>> 0 < $147 >>> 0) {
      _abort();
      return 0;
      return 0;
     } else {
      HEAP32[$145 + 12 >> 2] = $129;
      HEAP32[$fd412_i >> 2] = $129;
      HEAP32[$89 + ($and144 + 8) >> 2] = $145;
      HEAP32[$89 + ($and144 + 12) >> 2] = $T_0_i;
      HEAP32[$89 + ($and144 + 24) >> 2] = 0;
      break;
     }
    }
   } while (0);
   $add_ptr436_i = $v_3_lcssa_i + 8 | 0;
   if (($add_ptr436_i | 0) == 0) {
    $nb_0 = $and144;
    break;
   } else {
    $mem_0 = $add_ptr436_i;
   }
   return $mem_0 | 0;
  }
 } while (0);
 $153 = HEAP32[1548] | 0;
 if ($nb_0 >>> 0 <= $153 >>> 0) {
  $sub159 = $153 - $nb_0 | 0;
  $154 = HEAP32[1551] | 0;
  if ($sub159 >>> 0 > 15) {
   $155 = $154;
   HEAP32[1551] = $155 + $nb_0;
   HEAP32[1548] = $sub159;
   HEAP32[$155 + ($nb_0 + 4) >> 2] = $sub159 | 1;
   HEAP32[$155 + $153 >> 2] = $sub159;
   HEAP32[$154 + 4 >> 2] = $nb_0 | 3;
  } else {
   HEAP32[1548] = 0;
   HEAP32[1551] = 0;
   HEAP32[$154 + 4 >> 2] = $153 | 3;
   $159 = $154 + ($153 + 4) | 0;
   HEAP32[$159 >> 2] = HEAP32[$159 >> 2] | 1;
  }
  $mem_0 = $154 + 8 | 0;
  return $mem_0 | 0;
 }
 $162 = HEAP32[1549] | 0;
 if ($nb_0 >>> 0 < $162 >>> 0) {
  $sub187 = $162 - $nb_0 | 0;
  HEAP32[1549] = $sub187;
  $163 = HEAP32[1552] | 0;
  $164 = $163;
  HEAP32[1552] = $164 + $nb_0;
  HEAP32[$164 + ($nb_0 + 4) >> 2] = $sub187 | 1;
  HEAP32[$163 + 4 >> 2] = $nb_0 | 3;
  $mem_0 = $163 + 8 | 0;
  return $mem_0 | 0;
 }
 do {
  if ((HEAP32[58] | 0) == 0) {
   $call_i_i = _sysconf(8) | 0;
   if (($call_i_i - 1 & $call_i_i | 0) == 0) {
    HEAP32[60] = $call_i_i;
    HEAP32[59] = $call_i_i;
    HEAP32[61] = -1;
    HEAP32[62] = 2097152;
    HEAP32[63] = 0;
    HEAP32[1657] = 0;
    HEAP32[58] = (_time(0) | 0) & -16 ^ 1431655768;
    break;
   } else {
    _abort();
    return 0;
    return 0;
   }
  }
 } while (0);
 $add_i149 = $nb_0 + 48 | 0;
 $169 = HEAP32[60] | 0;
 $sub_i150 = $nb_0 + 47 | 0;
 $add9_i = $169 + $sub_i150 | 0;
 $neg_i151 = -$169 | 0;
 $and11_i = $add9_i & $neg_i151;
 if ($and11_i >>> 0 <= $nb_0 >>> 0) {
  $mem_0 = 0;
  return $mem_0 | 0;
 }
 $170 = HEAP32[1656] | 0;
 do {
  if (($170 | 0) != 0) {
   $171 = HEAP32[1654] | 0;
   $add17_i152 = $171 + $and11_i | 0;
   if ($add17_i152 >>> 0 <= $171 >>> 0 | $add17_i152 >>> 0 > $170 >>> 0) {
    $mem_0 = 0;
   } else {
    break;
   }
   return $mem_0 | 0;
  }
 } while (0);
 L19019 : do {
  if ((HEAP32[1657] & 4 | 0) == 0) {
   $173 = HEAP32[1552] | 0;
   L19021 : do {
    if (($173 | 0) == 0) {
     label = 16132;
    } else {
     $174 = $173;
     $sp_0_i_i = 6632;
     while (1) {
      $base_i_i = $sp_0_i_i | 0;
      $175 = HEAP32[$base_i_i >> 2] | 0;
      if ($175 >>> 0 <= $174 >>> 0) {
       $size_i_i = $sp_0_i_i + 4 | 0;
       if (($175 + (HEAP32[$size_i_i >> 2] | 0) | 0) >>> 0 > $174 >>> 0) {
        break;
       }
      }
      $177 = HEAP32[$sp_0_i_i + 8 >> 2] | 0;
      if (($177 | 0) == 0) {
       label = 16132;
       break L19021;
      } else {
       $sp_0_i_i = $177;
      }
     }
     if (($sp_0_i_i | 0) == 0) {
      label = 16132;
      break;
     }
     $and77_i = $add9_i - (HEAP32[1549] | 0) & $neg_i151;
     if ($and77_i >>> 0 >= 2147483647) {
      $tsize_0758385_i = 0;
      break;
     }
     $call80_i = _sbrk($and77_i | 0) | 0;
     $cmp82_i = ($call80_i | 0) == ((HEAP32[$base_i_i >> 2] | 0) + (HEAP32[$size_i_i >> 2] | 0) | 0);
     $tbase_0_i = $cmp82_i ? $call80_i : -1;
     $tsize_0_i = $cmp82_i ? $and77_i : 0;
     $br_0_i = $call80_i;
     $ssize_1_i = $and77_i;
     label = 16141;
    }
   } while (0);
   do {
    if ((label | 0) == 16132) {
     $call34_i = _sbrk(0) | 0;
     if (($call34_i | 0) == -1) {
      $tsize_0758385_i = 0;
      break;
     }
     $178 = $call34_i;
     $179 = HEAP32[59] | 0;
     $sub38_i = $179 - 1 | 0;
     if (($sub38_i & $178 | 0) == 0) {
      $ssize_0_i = $and11_i;
     } else {
      $ssize_0_i = $and11_i - $178 + ($sub38_i + $178 & -$179) | 0;
     }
     $180 = HEAP32[1654] | 0;
     $add51_i = $180 + $ssize_0_i | 0;
     if (!($ssize_0_i >>> 0 > $nb_0 >>> 0 & $ssize_0_i >>> 0 < 2147483647)) {
      $tsize_0758385_i = 0;
      break;
     }
     $181 = HEAP32[1656] | 0;
     if (($181 | 0) != 0) {
      if ($add51_i >>> 0 <= $180 >>> 0 | $add51_i >>> 0 > $181 >>> 0) {
       $tsize_0758385_i = 0;
       break;
      }
     }
     $call65_i = _sbrk($ssize_0_i | 0) | 0;
     $cmp66_i160 = ($call65_i | 0) == ($call34_i | 0);
     $tbase_0_i = $cmp66_i160 ? $call34_i : -1;
     $tsize_0_i = $cmp66_i160 ? $ssize_0_i : 0;
     $br_0_i = $call65_i;
     $ssize_1_i = $ssize_0_i;
     label = 16141;
    }
   } while (0);
   L19041 : do {
    if ((label | 0) == 16141) {
     $sub109_i = -$ssize_1_i | 0;
     if (($tbase_0_i | 0) != -1) {
      $tsize_291_i = $tsize_0_i;
      $tbase_292_i = $tbase_0_i;
      label = 16152;
      break L19019;
     }
     do {
      if (($br_0_i | 0) != -1 & $ssize_1_i >>> 0 < 2147483647 & $ssize_1_i >>> 0 < $add_i149 >>> 0) {
       $185 = HEAP32[60] | 0;
       $and101_i = $sub_i150 - $ssize_1_i + $185 & -$185;
       if ($and101_i >>> 0 >= 2147483647) {
        $ssize_2_i = $ssize_1_i;
        break;
       }
       if ((_sbrk($and101_i | 0) | 0) == -1) {
        _sbrk($sub109_i | 0) | 0;
        $tsize_0758385_i = $tsize_0_i;
        break L19041;
       } else {
        $ssize_2_i = $and101_i + $ssize_1_i | 0;
        break;
       }
      } else {
       $ssize_2_i = $ssize_1_i;
      }
     } while (0);
     if (($br_0_i | 0) == -1) {
      $tsize_0758385_i = $tsize_0_i;
     } else {
      $tsize_291_i = $ssize_2_i;
      $tbase_292_i = $br_0_i;
      label = 16152;
      break L19019;
     }
    }
   } while (0);
   HEAP32[1657] = HEAP32[1657] | 4;
   $tsize_1_i = $tsize_0758385_i;
   label = 16149;
  } else {
   $tsize_1_i = 0;
   label = 16149;
  }
 } while (0);
 do {
  if ((label | 0) == 16149) {
   if ($and11_i >>> 0 >= 2147483647) {
    break;
   }
   $call128_i = _sbrk($and11_i | 0) | 0;
   $call129_i = _sbrk(0) | 0;
   if (!(($call129_i | 0) != -1 & ($call128_i | 0) != -1 & $call128_i >>> 0 < $call129_i >>> 0)) {
    break;
   }
   $sub_ptr_sub_i = $call129_i - $call128_i | 0;
   $cmp138_i166 = $sub_ptr_sub_i >>> 0 > ($nb_0 + 40 | 0) >>> 0;
   $call128_tbase_1_i = $cmp138_i166 ? $call128_i : -1;
   if (($call128_tbase_1_i | 0) != -1) {
    $tsize_291_i = $cmp138_i166 ? $sub_ptr_sub_i : $tsize_1_i;
    $tbase_292_i = $call128_tbase_1_i;
    label = 16152;
   }
  }
 } while (0);
 do {
  if ((label | 0) == 16152) {
   $add147_i = (HEAP32[1654] | 0) + $tsize_291_i | 0;
   HEAP32[1654] = $add147_i;
   if ($add147_i >>> 0 > (HEAP32[1655] | 0) >>> 0) {
    HEAP32[1655] = $add147_i;
   }
   $189 = HEAP32[1552] | 0;
   L19061 : do {
    if (($189 | 0) == 0) {
     $190 = HEAP32[1550] | 0;
     if (($190 | 0) == 0 | $tbase_292_i >>> 0 < $190 >>> 0) {
      HEAP32[1550] = $tbase_292_i;
     }
     HEAP32[1658] = $tbase_292_i;
     HEAP32[1659] = $tsize_291_i;
     HEAP32[1661] = 0;
     HEAP32[1555] = HEAP32[58];
     HEAP32[1554] = -1;
     $i_02_i_i = 0;
     do {
      $shl_i_i = $i_02_i_i << 1;
      $192 = 6224 + ($shl_i_i << 2) | 0;
      HEAP32[6224 + ($shl_i_i + 3 << 2) >> 2] = $192;
      HEAP32[6224 + ($shl_i_i + 2 << 2) >> 2] = $192;
      $i_02_i_i = $i_02_i_i + 1 | 0;
     } while ($i_02_i_i >>> 0 < 32);
     $195 = $tbase_292_i + 8 | 0;
     if (($195 & 7 | 0) == 0) {
      $cond_i_i = 0;
     } else {
      $cond_i_i = -$195 & 7;
     }
     $sub5_i_i = $tsize_291_i - 40 - $cond_i_i | 0;
     HEAP32[1552] = $tbase_292_i + $cond_i_i;
     HEAP32[1549] = $sub5_i_i;
     HEAP32[$tbase_292_i + ($cond_i_i + 4) >> 2] = $sub5_i_i | 1;
     HEAP32[$tbase_292_i + ($tsize_291_i - 36) >> 2] = 40;
     HEAP32[1553] = HEAP32[62];
    } else {
     $sp_0105_i = 6632;
     while (1) {
      $201 = HEAP32[$sp_0105_i >> 2] | 0;
      $size185_i = $sp_0105_i + 4 | 0;
      $202 = HEAP32[$size185_i >> 2] | 0;
      if (($tbase_292_i | 0) == ($201 + $202 | 0)) {
       label = 16164;
       break;
      }
      $203 = HEAP32[$sp_0105_i + 8 >> 2] | 0;
      if (($203 | 0) == 0) {
       break;
      } else {
       $sp_0105_i = $203;
      }
     }
     do {
      if ((label | 0) == 16164) {
       if ((HEAP32[$sp_0105_i + 12 >> 2] & 8 | 0) != 0) {
        break;
       }
       $205 = $189;
       if (!($205 >>> 0 >= $201 >>> 0 & $205 >>> 0 < $tbase_292_i >>> 0)) {
        break;
       }
       HEAP32[$size185_i >> 2] = $202 + $tsize_291_i;
       $206 = HEAP32[1552] | 0;
       $add212_i = (HEAP32[1549] | 0) + $tsize_291_i | 0;
       $208 = $206;
       $209 = $206 + 8 | 0;
       if (($209 & 7 | 0) == 0) {
        $cond_i28_i = 0;
       } else {
        $cond_i28_i = -$209 & 7;
       }
       $sub5_i30_i = $add212_i - $cond_i28_i | 0;
       HEAP32[1552] = $208 + $cond_i28_i;
       HEAP32[1549] = $sub5_i30_i;
       HEAP32[$208 + ($cond_i28_i + 4) >> 2] = $sub5_i30_i | 1;
       HEAP32[$208 + ($add212_i + 4) >> 2] = 40;
       HEAP32[1553] = HEAP32[62];
       break L19061;
      }
     } while (0);
     if ($tbase_292_i >>> 0 < (HEAP32[1550] | 0) >>> 0) {
      HEAP32[1550] = $tbase_292_i;
     }
     $add_ptr224_i = $tbase_292_i + $tsize_291_i | 0;
     $sp_1101_i = 6632;
     while (1) {
      $base223_i = $sp_1101_i | 0;
      if ((HEAP32[$base223_i >> 2] | 0) == ($add_ptr224_i | 0)) {
       label = 16174;
       break;
      }
      $217 = HEAP32[$sp_1101_i + 8 >> 2] | 0;
      if (($217 | 0) == 0) {
       break;
      } else {
       $sp_1101_i = $217;
      }
     }
     do {
      if ((label | 0) == 16174) {
       if ((HEAP32[$sp_1101_i + 12 >> 2] & 8 | 0) != 0) {
        break;
       }
       HEAP32[$base223_i >> 2] = $tbase_292_i;
       $size242_i = $sp_1101_i + 4 | 0;
       HEAP32[$size242_i >> 2] = (HEAP32[$size242_i >> 2] | 0) + $tsize_291_i;
       $220 = $tbase_292_i + 8 | 0;
       if (($220 & 7 | 0) == 0) {
        $cond_i43_i = 0;
       } else {
        $cond_i43_i = -$220 & 7;
       }
       $222 = $tbase_292_i + ($tsize_291_i + 8) | 0;
       if (($222 & 7 | 0) == 0) {
        $cond15_i_i = 0;
       } else {
        $cond15_i_i = -$222 & 7;
       }
       $add_ptr16_i_i = $tbase_292_i + ($cond15_i_i + $tsize_291_i) | 0;
       $224 = $add_ptr16_i_i;
       $add_ptr4_sum_i50_i = $cond_i43_i + $nb_0 | 0;
       $add_ptr17_i_i = $tbase_292_i + $add_ptr4_sum_i50_i | 0;
       $225 = $add_ptr17_i_i;
       $sub18_i_i = $add_ptr16_i_i - ($tbase_292_i + $cond_i43_i) - $nb_0 | 0;
       HEAP32[$tbase_292_i + ($cond_i43_i + 4) >> 2] = $nb_0 | 3;
       do {
        if (($224 | 0) == (HEAP32[1552] | 0)) {
         $add_i_i = (HEAP32[1549] | 0) + $sub18_i_i | 0;
         HEAP32[1549] = $add_i_i;
         HEAP32[1552] = $225;
         HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 4) >> 2] = $add_i_i | 1;
        } else {
         if (($224 | 0) == (HEAP32[1551] | 0)) {
          $add26_i_i = (HEAP32[1548] | 0) + $sub18_i_i | 0;
          HEAP32[1548] = $add26_i_i;
          HEAP32[1551] = $225;
          HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 4) >> 2] = $add26_i_i | 1;
          HEAP32[$tbase_292_i + ($add26_i_i + $add_ptr4_sum_i50_i) >> 2] = $add26_i_i;
          break;
         }
         $add_ptr16_sum_i_i = $tsize_291_i + 4 | 0;
         $234 = HEAP32[$tbase_292_i + ($add_ptr16_sum_i_i + $cond15_i_i) >> 2] | 0;
         if (($234 & 3 | 0) == 1) {
          $and37_i_i = $234 & -8;
          $shr_i55_i = $234 >>> 3;
          L19105 : do {
           if ($234 >>> 0 < 256) {
            $236 = HEAP32[$tbase_292_i + (($cond15_i_i | 8) + $tsize_291_i) >> 2] | 0;
            $238 = HEAP32[$tbase_292_i + ($tsize_291_i + 12 + $cond15_i_i) >> 2] | 0;
            $239 = 6224 + ($shr_i55_i << 1 << 2) | 0;
            do {
             if (($236 | 0) != ($239 | 0)) {
              if ($236 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
               _abort();
               return 0;
               return 0;
              }
              if ((HEAP32[$236 + 12 >> 2] | 0) == ($224 | 0)) {
               break;
              }
              _abort();
              return 0;
              return 0;
             }
            } while (0);
            if (($238 | 0) == ($236 | 0)) {
             HEAP32[1546] = HEAP32[1546] & (1 << $shr_i55_i ^ -1);
             break;
            }
            do {
             if (($238 | 0) == ($239 | 0)) {
              $fd68_pre_phi_i_i = $238 + 8 | 0;
             } else {
              if ($238 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
               _abort();
               return 0;
               return 0;
              }
              $fd59_i_i = $238 + 8 | 0;
              if ((HEAP32[$fd59_i_i >> 2] | 0) == ($224 | 0)) {
               $fd68_pre_phi_i_i = $fd59_i_i;
               break;
              }
              _abort();
              return 0;
              return 0;
             }
            } while (0);
            HEAP32[$236 + 12 >> 2] = $238;
            HEAP32[$fd68_pre_phi_i_i >> 2] = $236;
           } else {
            $247 = $add_ptr16_i_i;
            $249 = HEAP32[$tbase_292_i + (($cond15_i_i | 24) + $tsize_291_i) >> 2] | 0;
            $251 = HEAP32[$tbase_292_i + ($tsize_291_i + 12 + $cond15_i_i) >> 2] | 0;
            do {
             if (($251 | 0) == ($247 | 0)) {
              $add_ptr16_sum56_i_i = $cond15_i_i | 16;
              $258 = $tbase_292_i + ($add_ptr16_sum_i_i + $add_ptr16_sum56_i_i) | 0;
              $259 = HEAP32[$258 >> 2] | 0;
              if (($259 | 0) == 0) {
               $arrayidx99_i_i = $tbase_292_i + ($add_ptr16_sum56_i_i + $tsize_291_i) | 0;
               $260 = HEAP32[$arrayidx99_i_i >> 2] | 0;
               if (($260 | 0) == 0) {
                $R_1_i_i = 0;
                break;
               } else {
                $R_0_i_i = $260;
                $RP_0_i_i = $arrayidx99_i_i;
               }
              } else {
               $R_0_i_i = $259;
               $RP_0_i_i = $258;
              }
              while (1) {
               $arrayidx103_i_i = $R_0_i_i + 20 | 0;
               $261 = HEAP32[$arrayidx103_i_i >> 2] | 0;
               if (($261 | 0) != 0) {
                $R_0_i_i = $261;
                $RP_0_i_i = $arrayidx103_i_i;
                continue;
               }
               $arrayidx107_i_i = $R_0_i_i + 16 | 0;
               $262 = HEAP32[$arrayidx107_i_i >> 2] | 0;
               if (($262 | 0) == 0) {
                break;
               } else {
                $R_0_i_i = $262;
                $RP_0_i_i = $arrayidx107_i_i;
               }
              }
              if ($RP_0_i_i >>> 0 < (HEAP32[1550] | 0) >>> 0) {
               _abort();
               return 0;
               return 0;
              } else {
               HEAP32[$RP_0_i_i >> 2] = 0;
               $R_1_i_i = $R_0_i_i;
               break;
              }
             } else {
              $253 = HEAP32[$tbase_292_i + (($cond15_i_i | 8) + $tsize_291_i) >> 2] | 0;
              if ($253 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
               _abort();
               return 0;
               return 0;
              }
              $bk82_i_i = $253 + 12 | 0;
              if ((HEAP32[$bk82_i_i >> 2] | 0) != ($247 | 0)) {
               _abort();
               return 0;
               return 0;
              }
              $fd85_i_i = $251 + 8 | 0;
              if ((HEAP32[$fd85_i_i >> 2] | 0) == ($247 | 0)) {
               HEAP32[$bk82_i_i >> 2] = $251;
               HEAP32[$fd85_i_i >> 2] = $253;
               $R_1_i_i = $251;
               break;
              } else {
               _abort();
               return 0;
               return 0;
              }
             }
            } while (0);
            if (($249 | 0) == 0) {
             break;
            }
            $265 = $tbase_292_i + ($tsize_291_i + 28 + $cond15_i_i) | 0;
            $arrayidx123_i_i = 6488 + (HEAP32[$265 >> 2] << 2) | 0;
            do {
             if (($247 | 0) == (HEAP32[$arrayidx123_i_i >> 2] | 0)) {
              HEAP32[$arrayidx123_i_i >> 2] = $R_1_i_i;
              if (($R_1_i_i | 0) != 0) {
               break;
              }
              HEAP32[1547] = HEAP32[1547] & (1 << HEAP32[$265 >> 2] ^ -1);
              break L19105;
             } else {
              if ($249 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
               _abort();
               return 0;
               return 0;
              }
              $arrayidx143_i_i = $249 + 16 | 0;
              if ((HEAP32[$arrayidx143_i_i >> 2] | 0) == ($247 | 0)) {
               HEAP32[$arrayidx143_i_i >> 2] = $R_1_i_i;
              } else {
               HEAP32[$249 + 20 >> 2] = $R_1_i_i;
              }
              if (($R_1_i_i | 0) == 0) {
               break L19105;
              }
             }
            } while (0);
            if ($R_1_i_i >>> 0 < (HEAP32[1550] | 0) >>> 0) {
             _abort();
             return 0;
             return 0;
            }
            HEAP32[$R_1_i_i + 24 >> 2] = $249;
            $add_ptr16_sum2728_i_i = $cond15_i_i | 16;
            $275 = HEAP32[$tbase_292_i + ($add_ptr16_sum2728_i_i + $tsize_291_i) >> 2] | 0;
            do {
             if (($275 | 0) != 0) {
              if ($275 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
               _abort();
               return 0;
               return 0;
              } else {
               HEAP32[$R_1_i_i + 16 >> 2] = $275;
               HEAP32[$275 + 24 >> 2] = $R_1_i_i;
               break;
              }
             }
            } while (0);
            $279 = HEAP32[$tbase_292_i + ($add_ptr16_sum_i_i + $add_ptr16_sum2728_i_i) >> 2] | 0;
            if (($279 | 0) == 0) {
             break;
            }
            if ($279 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
             _abort();
             return 0;
             return 0;
            } else {
             HEAP32[$R_1_i_i + 20 >> 2] = $279;
             HEAP32[$279 + 24 >> 2] = $R_1_i_i;
             break;
            }
           }
          } while (0);
          $oldfirst_0_i_i = $tbase_292_i + (($and37_i_i | $cond15_i_i) + $tsize_291_i) | 0;
          $qsize_0_i_i = $and37_i_i + $sub18_i_i | 0;
         } else {
          $oldfirst_0_i_i = $224;
          $qsize_0_i_i = $sub18_i_i;
         }
         $head208_i_i = $oldfirst_0_i_i + 4 | 0;
         HEAP32[$head208_i_i >> 2] = HEAP32[$head208_i_i >> 2] & -2;
         HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 4) >> 2] = $qsize_0_i_i | 1;
         HEAP32[$tbase_292_i + ($qsize_0_i_i + $add_ptr4_sum_i50_i) >> 2] = $qsize_0_i_i;
         $shr214_i_i = $qsize_0_i_i >>> 3;
         if ($qsize_0_i_i >>> 0 < 256) {
          $shl221_i_i = $shr214_i_i << 1;
          $285 = 6224 + ($shl221_i_i << 2) | 0;
          $286 = HEAP32[1546] | 0;
          $shl226_i_i = 1 << $shr214_i_i;
          do {
           if (($286 & $shl226_i_i | 0) == 0) {
            HEAP32[1546] = $286 | $shl226_i_i;
            $F224_0_i_i = $285;
            $_pre_phi_i68_i = 6224 + ($shl221_i_i + 2 << 2) | 0;
           } else {
            $287 = 6224 + ($shl221_i_i + 2 << 2) | 0;
            $288 = HEAP32[$287 >> 2] | 0;
            if ($288 >>> 0 >= (HEAP32[1550] | 0) >>> 0) {
             $F224_0_i_i = $288;
             $_pre_phi_i68_i = $287;
             break;
            }
            _abort();
            return 0;
            return 0;
           }
          } while (0);
          HEAP32[$_pre_phi_i68_i >> 2] = $225;
          HEAP32[$F224_0_i_i + 12 >> 2] = $225;
          HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 8) >> 2] = $F224_0_i_i;
          HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 12) >> 2] = $285;
          break;
         }
         $293 = $add_ptr17_i_i;
         $shr253_i_i = $qsize_0_i_i >>> 8;
         do {
          if (($shr253_i_i | 0) == 0) {
           $I252_0_i_i = 0;
          } else {
           if ($qsize_0_i_i >>> 0 > 16777215) {
            $I252_0_i_i = 31;
            break;
           }
           $and264_i_i = ($shr253_i_i + 1048320 | 0) >>> 16 & 8;
           $shl265_i_i = $shr253_i_i << $and264_i_i;
           $and268_i_i = ($shl265_i_i + 520192 | 0) >>> 16 & 4;
           $shl270_i_i = $shl265_i_i << $and268_i_i;
           $and273_i_i = ($shl270_i_i + 245760 | 0) >>> 16 & 2;
           $add278_i_i = 14 - ($and268_i_i | $and264_i_i | $and273_i_i) + ($shl270_i_i << $and273_i_i >>> 15) | 0;
           $I252_0_i_i = $qsize_0_i_i >>> (($add278_i_i + 7 | 0) >>> 0) & 1 | $add278_i_i << 1;
          }
         } while (0);
         $arrayidx287_i_i = 6488 + ($I252_0_i_i << 2) | 0;
         HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 28) >> 2] = $I252_0_i_i;
         HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 20) >> 2] = 0;
         HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 16) >> 2] = 0;
         $296 = HEAP32[1547] | 0;
         $shl294_i_i = 1 << $I252_0_i_i;
         if (($296 & $shl294_i_i | 0) == 0) {
          HEAP32[1547] = $296 | $shl294_i_i;
          HEAP32[$arrayidx287_i_i >> 2] = $293;
          HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 24) >> 2] = $arrayidx287_i_i;
          HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 12) >> 2] = $293;
          HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 8) >> 2] = $293;
          break;
         }
         if (($I252_0_i_i | 0) == 31) {
          $cond315_i_i = 0;
         } else {
          $cond315_i_i = 25 - ($I252_0_i_i >>> 1) | 0;
         }
         $K305_0_i_i = $qsize_0_i_i << $cond315_i_i;
         $T_0_i69_i = HEAP32[$arrayidx287_i_i >> 2] | 0;
         while (1) {
          if ((HEAP32[$T_0_i69_i + 4 >> 2] & -8 | 0) == ($qsize_0_i_i | 0)) {
           break;
          }
          $arrayidx325_i_i = $T_0_i69_i + 16 + ($K305_0_i_i >>> 31 << 2) | 0;
          $303 = HEAP32[$arrayidx325_i_i >> 2] | 0;
          if (($303 | 0) == 0) {
           label = 16247;
           break;
          } else {
           $K305_0_i_i = $K305_0_i_i << 1;
           $T_0_i69_i = $303;
          }
         }
         if ((label | 0) == 16247) {
          if ($arrayidx325_i_i >>> 0 < (HEAP32[1550] | 0) >>> 0) {
           _abort();
           return 0;
           return 0;
          } else {
           HEAP32[$arrayidx325_i_i >> 2] = $293;
           HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 24) >> 2] = $T_0_i69_i;
           HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 12) >> 2] = $293;
           HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 8) >> 2] = $293;
           break;
          }
         }
         $fd344_i_i = $T_0_i69_i + 8 | 0;
         $309 = HEAP32[$fd344_i_i >> 2] | 0;
         $311 = HEAP32[1550] | 0;
         if ($T_0_i69_i >>> 0 < $311 >>> 0) {
          _abort();
          return 0;
          return 0;
         }
         if ($309 >>> 0 < $311 >>> 0) {
          _abort();
          return 0;
          return 0;
         } else {
          HEAP32[$309 + 12 >> 2] = $293;
          HEAP32[$fd344_i_i >> 2] = $293;
          HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 8) >> 2] = $309;
          HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 12) >> 2] = $T_0_i69_i;
          HEAP32[$tbase_292_i + ($add_ptr4_sum_i50_i + 24) >> 2] = 0;
          break;
         }
        }
       } while (0);
       $mem_0 = $tbase_292_i + ($cond_i43_i | 8) | 0;
       return $mem_0 | 0;
      }
     } while (0);
     $316 = $189;
     $sp_0_i_i_i = 6632;
     while (1) {
      $317 = HEAP32[$sp_0_i_i_i >> 2] | 0;
      if ($317 >>> 0 <= $316 >>> 0) {
       $318 = HEAP32[$sp_0_i_i_i + 4 >> 2] | 0;
       $add_ptr_i_i_i = $317 + $318 | 0;
       if ($add_ptr_i_i_i >>> 0 > $316 >>> 0) {
        break;
       }
      }
      $sp_0_i_i_i = HEAP32[$sp_0_i_i_i + 8 >> 2] | 0;
     }
     $320 = $317 + ($318 - 39) | 0;
     if (($320 & 7 | 0) == 0) {
      $cond_i18_i = 0;
     } else {
      $cond_i18_i = -$320 & 7;
     }
     $add_ptr7_i_i = $317 + ($318 - 47 + $cond_i18_i) | 0;
     $cond13_i_i = $add_ptr7_i_i >>> 0 < ($189 + 16 | 0) >>> 0 ? $316 : $add_ptr7_i_i;
     $add_ptr14_i_i = $cond13_i_i + 8 | 0;
     $323 = $tbase_292_i + 8 | 0;
     if (($323 & 7 | 0) == 0) {
      $cond_i_i_i = 0;
     } else {
      $cond_i_i_i = -$323 & 7;
     }
     $sub5_i_i_i = $tsize_291_i - 40 - $cond_i_i_i | 0;
     HEAP32[1552] = $tbase_292_i + $cond_i_i_i;
     HEAP32[1549] = $sub5_i_i_i;
     HEAP32[$tbase_292_i + ($cond_i_i_i + 4) >> 2] = $sub5_i_i_i | 1;
     HEAP32[$tbase_292_i + ($tsize_291_i - 36) >> 2] = 40;
     HEAP32[1553] = HEAP32[62];
     HEAP32[$cond13_i_i + 4 >> 2] = 27;
     HEAP32[$add_ptr14_i_i >> 2] = HEAP32[1658];
     HEAP32[$add_ptr14_i_i + 4 >> 2] = HEAP32[6636 >> 2];
     HEAP32[$add_ptr14_i_i + 8 >> 2] = HEAP32[6640 >> 2];
     HEAP32[$add_ptr14_i_i + 12 >> 2] = HEAP32[6644 >> 2];
     HEAP32[1658] = $tbase_292_i;
     HEAP32[1659] = $tsize_291_i;
     HEAP32[1661] = 0;
     HEAP32[1660] = $add_ptr14_i_i;
     $330 = $cond13_i_i + 28 | 0;
     HEAP32[$330 >> 2] = 7;
     if (($cond13_i_i + 32 | 0) >>> 0 < $add_ptr_i_i_i >>> 0) {
      $add_ptr2416_i_i = $330;
      while (1) {
       $332 = $add_ptr2416_i_i + 4 | 0;
       HEAP32[$332 >> 2] = 7;
       if (($add_ptr2416_i_i + 8 | 0) >>> 0 < $add_ptr_i_i_i >>> 0) {
        $add_ptr2416_i_i = $332;
       } else {
        break;
       }
      }
     }
     if (($cond13_i_i | 0) == ($316 | 0)) {
      break;
     }
     $sub_ptr_sub_i_i = $cond13_i_i - $189 | 0;
     $335 = $316 + ($sub_ptr_sub_i_i + 4) | 0;
     HEAP32[$335 >> 2] = HEAP32[$335 >> 2] & -2;
     HEAP32[$189 + 4 >> 2] = $sub_ptr_sub_i_i | 1;
     HEAP32[$316 + $sub_ptr_sub_i_i >> 2] = $sub_ptr_sub_i_i;
     $shr_i_i = $sub_ptr_sub_i_i >>> 3;
     if ($sub_ptr_sub_i_i >>> 0 < 256) {
      $shl_i21_i = $shr_i_i << 1;
      $337 = 6224 + ($shl_i21_i << 2) | 0;
      $338 = HEAP32[1546] | 0;
      $shl39_i_i = 1 << $shr_i_i;
      do {
       if (($338 & $shl39_i_i | 0) == 0) {
        HEAP32[1546] = $338 | $shl39_i_i;
        $F_0_i_i = $337;
        $_pre_phi_i_i = 6224 + ($shl_i21_i + 2 << 2) | 0;
       } else {
        $339 = 6224 + ($shl_i21_i + 2 << 2) | 0;
        $340 = HEAP32[$339 >> 2] | 0;
        if ($340 >>> 0 >= (HEAP32[1550] | 0) >>> 0) {
         $F_0_i_i = $340;
         $_pre_phi_i_i = $339;
         break;
        }
        _abort();
        return 0;
        return 0;
       }
      } while (0);
      HEAP32[$_pre_phi_i_i >> 2] = $189;
      HEAP32[$F_0_i_i + 12 >> 2] = $189;
      HEAP32[$189 + 8 >> 2] = $F_0_i_i;
      HEAP32[$189 + 12 >> 2] = $337;
      break;
     }
     $343 = $189;
     $shr58_i_i = $sub_ptr_sub_i_i >>> 8;
     do {
      if (($shr58_i_i | 0) == 0) {
       $I57_0_i_i = 0;
      } else {
       if ($sub_ptr_sub_i_i >>> 0 > 16777215) {
        $I57_0_i_i = 31;
        break;
       }
       $and69_i_i = ($shr58_i_i + 1048320 | 0) >>> 16 & 8;
       $shl70_i_i = $shr58_i_i << $and69_i_i;
       $and73_i_i = ($shl70_i_i + 520192 | 0) >>> 16 & 4;
       $shl75_i_i = $shl70_i_i << $and73_i_i;
       $and78_i_i = ($shl75_i_i + 245760 | 0) >>> 16 & 2;
       $add83_i_i = 14 - ($and73_i_i | $and69_i_i | $and78_i_i) + ($shl75_i_i << $and78_i_i >>> 15) | 0;
       $I57_0_i_i = $sub_ptr_sub_i_i >>> (($add83_i_i + 7 | 0) >>> 0) & 1 | $add83_i_i << 1;
      }
     } while (0);
     $arrayidx91_i_i = 6488 + ($I57_0_i_i << 2) | 0;
     HEAP32[$189 + 28 >> 2] = $I57_0_i_i;
     HEAP32[$189 + 20 >> 2] = 0;
     HEAP32[$189 + 16 >> 2] = 0;
     $345 = HEAP32[1547] | 0;
     $shl95_i_i = 1 << $I57_0_i_i;
     if (($345 & $shl95_i_i | 0) == 0) {
      HEAP32[1547] = $345 | $shl95_i_i;
      HEAP32[$arrayidx91_i_i >> 2] = $343;
      HEAP32[$189 + 24 >> 2] = $arrayidx91_i_i;
      HEAP32[$189 + 12 >> 2] = $189;
      HEAP32[$189 + 8 >> 2] = $189;
      break;
     }
     if (($I57_0_i_i | 0) == 31) {
      $cond115_i_i = 0;
     } else {
      $cond115_i_i = 25 - ($I57_0_i_i >>> 1) | 0;
     }
     $K105_0_i_i = $sub_ptr_sub_i_i << $cond115_i_i;
     $T_0_i_i = HEAP32[$arrayidx91_i_i >> 2] | 0;
     while (1) {
      if ((HEAP32[$T_0_i_i + 4 >> 2] & -8 | 0) == ($sub_ptr_sub_i_i | 0)) {
       break;
      }
      $arrayidx126_i_i = $T_0_i_i + 16 + ($K105_0_i_i >>> 31 << 2) | 0;
      $348 = HEAP32[$arrayidx126_i_i >> 2] | 0;
      if (($348 | 0) == 0) {
       label = 16282;
       break;
      } else {
       $K105_0_i_i = $K105_0_i_i << 1;
       $T_0_i_i = $348;
      }
     }
     if ((label | 0) == 16282) {
      if ($arrayidx126_i_i >>> 0 < (HEAP32[1550] | 0) >>> 0) {
       _abort();
       return 0;
       return 0;
      } else {
       HEAP32[$arrayidx126_i_i >> 2] = $343;
       HEAP32[$189 + 24 >> 2] = $T_0_i_i;
       HEAP32[$189 + 12 >> 2] = $189;
       HEAP32[$189 + 8 >> 2] = $189;
       break;
      }
     }
     $fd145_i_i = $T_0_i_i + 8 | 0;
     $351 = HEAP32[$fd145_i_i >> 2] | 0;
     $353 = HEAP32[1550] | 0;
     if ($T_0_i_i >>> 0 < $353 >>> 0) {
      _abort();
      return 0;
      return 0;
     }
     if ($351 >>> 0 < $353 >>> 0) {
      _abort();
      return 0;
      return 0;
     } else {
      HEAP32[$351 + 12 >> 2] = $343;
      HEAP32[$fd145_i_i >> 2] = $343;
      HEAP32[$189 + 8 >> 2] = $351;
      HEAP32[$189 + 12 >> 2] = $T_0_i_i;
      HEAP32[$189 + 24 >> 2] = 0;
      break;
     }
    }
   } while (0);
   $355 = HEAP32[1549] | 0;
   if ($355 >>> 0 <= $nb_0 >>> 0) {
    break;
   }
   $sub253_i = $355 - $nb_0 | 0;
   HEAP32[1549] = $sub253_i;
   $356 = HEAP32[1552] | 0;
   $357 = $356;
   HEAP32[1552] = $357 + $nb_0;
   HEAP32[$357 + ($nb_0 + 4) >> 2] = $sub253_i | 1;
   HEAP32[$356 + 4 >> 2] = $nb_0 | 3;
   $mem_0 = $356 + 8 | 0;
   return $mem_0 | 0;
  }
 } while (0);
 HEAP32[(___errno_location() | 0) >> 2] = 12;
 $mem_0 = 0;
 return $mem_0 | 0;
}
function _free($mem) {
 $mem = $mem | 0;
 var $add_ptr = 0, $0 = 0, $1 = 0, $3 = 0, $and = 0, $and5 = 0, $add_ptr6 = 0, $4 = 0, $5 = 0, $add_ptr_sum232 = 0, $add_ptr16 = 0, $6 = 0, $add17 = 0, $shr = 0, $9 = 0, $11 = 0, $12 = 0, $fd56 = 0, $fd67_pre_phi = 0, $18 = 0, $20 = 0, $22 = 0, $24 = 0, $bk82 = 0, $fd86 = 0, $28 = 0, $29 = 0, $arrayidx103 = 0, $30 = 0, $RP_0 = 0, $R_0 = 0, $arrayidx108 = 0, $31 = 0, $arrayidx113 = 0, $32 = 0, $R_1 = 0, $34 = 0, $arrayidx130 = 0, $arrayidx149 = 0, $44 = 0, $48 = 0, $51 = 0, $psize_0 = 0, $p_0 = 0, $55 = 0, $56 = 0, $57 = 0, $add243 = 0, $add258 = 0, $add266 = 0, $shr267 = 0, $66 = 0, $68 = 0, $69 = 0, $fd310 = 0, $fd321_pre_phi = 0, $77 = 0, $79 = 0, $81 = 0, $83 = 0, $bk342 = 0, $fd346 = 0, $88 = 0, $89 = 0, $arrayidx366 = 0, $90 = 0, $RP359_0 = 0, $R331_0 = 0, $arrayidx373 = 0, $91 = 0, $arrayidx378 = 0, $92 = 0, $R331_1 = 0, $95 = 0, $arrayidx399 = 0, $arrayidx418 = 0, $105 = 0, $109 = 0, $psize_1 = 0, $shr497 = 0, $shl504 = 0, $113 = 0, $114 = 0, $shl507 = 0, $115 = 0, $116 = 0, $_pre_phi = 0, $F506_0 = 0, $119 = 0, $shr531 = 0, $and541 = 0, $shl542 = 0, $and545 = 0, $shl547 = 0, $and550 = 0, $add555 = 0, $I530_0 = 0, $arrayidx563 = 0, $121 = 0, $shl569 = 0, $cond = 0, $T_0 = 0, $K579_0 = 0, $arrayidx595 = 0, $124 = 0, $fd613 = 0, $127 = 0, $129 = 0, $dec = 0, $sp_0_in_i = 0, $sp_0_i = 0, label = 0;
 if (($mem | 0) == 0) {
  return;
 }
 $add_ptr = $mem - 8 | 0;
 $0 = $add_ptr;
 $1 = HEAP32[1550] | 0;
 if ($add_ptr >>> 0 < $1 >>> 0) {
  _abort();
 }
 $3 = HEAP32[$mem - 4 >> 2] | 0;
 $and = $3 & 3;
 if (($and | 0) == 1) {
  _abort();
 }
 $and5 = $3 & -8;
 $add_ptr6 = $mem + ($and5 - 8) | 0;
 $4 = $add_ptr6;
 L19278 : do {
  if (($3 & 1 | 0) == 0) {
   $5 = HEAP32[$add_ptr >> 2] | 0;
   if (($and | 0) == 0) {
    return;
   }
   $add_ptr_sum232 = -8 - $5 | 0;
   $add_ptr16 = $mem + $add_ptr_sum232 | 0;
   $6 = $add_ptr16;
   $add17 = $5 + $and5 | 0;
   if ($add_ptr16 >>> 0 < $1 >>> 0) {
    _abort();
   }
   if (($6 | 0) == (HEAP32[1551] | 0)) {
    $51 = $mem + ($and5 - 4) | 0;
    if ((HEAP32[$51 >> 2] & 3 | 0) != 3) {
     $p_0 = $6;
     $psize_0 = $add17;
     break;
    }
    HEAP32[1548] = $add17;
    HEAP32[$51 >> 2] = HEAP32[$51 >> 2] & -2;
    HEAP32[$mem + ($add_ptr_sum232 + 4) >> 2] = $add17 | 1;
    HEAP32[$add_ptr6 >> 2] = $add17;
    return;
   }
   $shr = $5 >>> 3;
   if ($5 >>> 0 < 256) {
    $9 = HEAP32[$mem + ($add_ptr_sum232 + 8) >> 2] | 0;
    $11 = HEAP32[$mem + ($add_ptr_sum232 + 12) >> 2] | 0;
    $12 = 6224 + ($shr << 1 << 2) | 0;
    do {
     if (($9 | 0) != ($12 | 0)) {
      if ($9 >>> 0 < $1 >>> 0) {
       _abort();
      }
      if ((HEAP32[$9 + 12 >> 2] | 0) == ($6 | 0)) {
       break;
      }
      _abort();
     }
    } while (0);
    if (($11 | 0) == ($9 | 0)) {
     HEAP32[1546] = HEAP32[1546] & (1 << $shr ^ -1);
     $p_0 = $6;
     $psize_0 = $add17;
     break;
    }
    do {
     if (($11 | 0) == ($12 | 0)) {
      $fd67_pre_phi = $11 + 8 | 0;
     } else {
      if ($11 >>> 0 < $1 >>> 0) {
       _abort();
      }
      $fd56 = $11 + 8 | 0;
      if ((HEAP32[$fd56 >> 2] | 0) == ($6 | 0)) {
       $fd67_pre_phi = $fd56;
       break;
      }
      _abort();
     }
    } while (0);
    HEAP32[$9 + 12 >> 2] = $11;
    HEAP32[$fd67_pre_phi >> 2] = $9;
    $p_0 = $6;
    $psize_0 = $add17;
    break;
   }
   $18 = $add_ptr16;
   $20 = HEAP32[$mem + ($add_ptr_sum232 + 24) >> 2] | 0;
   $22 = HEAP32[$mem + ($add_ptr_sum232 + 12) >> 2] | 0;
   do {
    if (($22 | 0) == ($18 | 0)) {
     $28 = $mem + ($add_ptr_sum232 + 20) | 0;
     $29 = HEAP32[$28 >> 2] | 0;
     if (($29 | 0) == 0) {
      $arrayidx103 = $mem + ($add_ptr_sum232 + 16) | 0;
      $30 = HEAP32[$arrayidx103 >> 2] | 0;
      if (($30 | 0) == 0) {
       $R_1 = 0;
       break;
      } else {
       $R_0 = $30;
       $RP_0 = $arrayidx103;
      }
     } else {
      $R_0 = $29;
      $RP_0 = $28;
     }
     while (1) {
      $arrayidx108 = $R_0 + 20 | 0;
      $31 = HEAP32[$arrayidx108 >> 2] | 0;
      if (($31 | 0) != 0) {
       $R_0 = $31;
       $RP_0 = $arrayidx108;
       continue;
      }
      $arrayidx113 = $R_0 + 16 | 0;
      $32 = HEAP32[$arrayidx113 >> 2] | 0;
      if (($32 | 0) == 0) {
       break;
      } else {
       $R_0 = $32;
       $RP_0 = $arrayidx113;
      }
     }
     if ($RP_0 >>> 0 < $1 >>> 0) {
      _abort();
     } else {
      HEAP32[$RP_0 >> 2] = 0;
      $R_1 = $R_0;
      break;
     }
    } else {
     $24 = HEAP32[$mem + ($add_ptr_sum232 + 8) >> 2] | 0;
     if ($24 >>> 0 < $1 >>> 0) {
      _abort();
     }
     $bk82 = $24 + 12 | 0;
     if ((HEAP32[$bk82 >> 2] | 0) != ($18 | 0)) {
      _abort();
     }
     $fd86 = $22 + 8 | 0;
     if ((HEAP32[$fd86 >> 2] | 0) == ($18 | 0)) {
      HEAP32[$bk82 >> 2] = $22;
      HEAP32[$fd86 >> 2] = $24;
      $R_1 = $22;
      break;
     } else {
      _abort();
     }
    }
   } while (0);
   if (($20 | 0) == 0) {
    $p_0 = $6;
    $psize_0 = $add17;
    break;
   }
   $34 = $mem + ($add_ptr_sum232 + 28) | 0;
   $arrayidx130 = 6488 + (HEAP32[$34 >> 2] << 2) | 0;
   do {
    if (($18 | 0) == (HEAP32[$arrayidx130 >> 2] | 0)) {
     HEAP32[$arrayidx130 >> 2] = $R_1;
     if (($R_1 | 0) != 0) {
      break;
     }
     HEAP32[1547] = HEAP32[1547] & (1 << HEAP32[$34 >> 2] ^ -1);
     $p_0 = $6;
     $psize_0 = $add17;
     break L19278;
    } else {
     if ($20 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
      _abort();
     }
     $arrayidx149 = $20 + 16 | 0;
     if ((HEAP32[$arrayidx149 >> 2] | 0) == ($18 | 0)) {
      HEAP32[$arrayidx149 >> 2] = $R_1;
     } else {
      HEAP32[$20 + 20 >> 2] = $R_1;
     }
     if (($R_1 | 0) == 0) {
      $p_0 = $6;
      $psize_0 = $add17;
      break L19278;
     }
    }
   } while (0);
   if ($R_1 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
    _abort();
   }
   HEAP32[$R_1 + 24 >> 2] = $20;
   $44 = HEAP32[$mem + ($add_ptr_sum232 + 16) >> 2] | 0;
   do {
    if (($44 | 0) != 0) {
     if ($44 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
      _abort();
     } else {
      HEAP32[$R_1 + 16 >> 2] = $44;
      HEAP32[$44 + 24 >> 2] = $R_1;
      break;
     }
    }
   } while (0);
   $48 = HEAP32[$mem + ($add_ptr_sum232 + 20) >> 2] | 0;
   if (($48 | 0) == 0) {
    $p_0 = $6;
    $psize_0 = $add17;
    break;
   }
   if ($48 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
    _abort();
   } else {
    HEAP32[$R_1 + 20 >> 2] = $48;
    HEAP32[$48 + 24 >> 2] = $R_1;
    $p_0 = $6;
    $psize_0 = $add17;
    break;
   }
  } else {
   $p_0 = $0;
   $psize_0 = $and5;
  }
 } while (0);
 $55 = $p_0;
 if ($55 >>> 0 >= $add_ptr6 >>> 0) {
  _abort();
 }
 $56 = $mem + ($and5 - 4) | 0;
 $57 = HEAP32[$56 >> 2] | 0;
 if (($57 & 1 | 0) == 0) {
  _abort();
 }
 do {
  if (($57 & 2 | 0) == 0) {
   if (($4 | 0) == (HEAP32[1552] | 0)) {
    $add243 = (HEAP32[1549] | 0) + $psize_0 | 0;
    HEAP32[1549] = $add243;
    HEAP32[1552] = $p_0;
    HEAP32[$p_0 + 4 >> 2] = $add243 | 1;
    if (($p_0 | 0) == (HEAP32[1551] | 0)) {
     HEAP32[1551] = 0;
     HEAP32[1548] = 0;
    }
    if ($add243 >>> 0 <= (HEAP32[1553] | 0) >>> 0) {
     return;
    }
    _sys_trim(0) | 0;
    return;
   }
   if (($4 | 0) == (HEAP32[1551] | 0)) {
    $add258 = (HEAP32[1548] | 0) + $psize_0 | 0;
    HEAP32[1548] = $add258;
    HEAP32[1551] = $p_0;
    HEAP32[$p_0 + 4 >> 2] = $add258 | 1;
    HEAP32[$55 + $add258 >> 2] = $add258;
    return;
   }
   $add266 = ($57 & -8) + $psize_0 | 0;
   $shr267 = $57 >>> 3;
   L19383 : do {
    if ($57 >>> 0 < 256) {
     $66 = HEAP32[$mem + $and5 >> 2] | 0;
     $68 = HEAP32[$mem + ($and5 | 4) >> 2] | 0;
     $69 = 6224 + ($shr267 << 1 << 2) | 0;
     do {
      if (($66 | 0) != ($69 | 0)) {
       if ($66 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
        _abort();
       }
       if ((HEAP32[$66 + 12 >> 2] | 0) == ($4 | 0)) {
        break;
       }
       _abort();
      }
     } while (0);
     if (($68 | 0) == ($66 | 0)) {
      HEAP32[1546] = HEAP32[1546] & (1 << $shr267 ^ -1);
      break;
     }
     do {
      if (($68 | 0) == ($69 | 0)) {
       $fd321_pre_phi = $68 + 8 | 0;
      } else {
       if ($68 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
        _abort();
       }
       $fd310 = $68 + 8 | 0;
       if ((HEAP32[$fd310 >> 2] | 0) == ($4 | 0)) {
        $fd321_pre_phi = $fd310;
        break;
       }
       _abort();
      }
     } while (0);
     HEAP32[$66 + 12 >> 2] = $68;
     HEAP32[$fd321_pre_phi >> 2] = $66;
    } else {
     $77 = $add_ptr6;
     $79 = HEAP32[$mem + ($and5 + 16) >> 2] | 0;
     $81 = HEAP32[$mem + ($and5 | 4) >> 2] | 0;
     do {
      if (($81 | 0) == ($77 | 0)) {
       $88 = $mem + ($and5 + 12) | 0;
       $89 = HEAP32[$88 >> 2] | 0;
       if (($89 | 0) == 0) {
        $arrayidx366 = $mem + ($and5 + 8) | 0;
        $90 = HEAP32[$arrayidx366 >> 2] | 0;
        if (($90 | 0) == 0) {
         $R331_1 = 0;
         break;
        } else {
         $R331_0 = $90;
         $RP359_0 = $arrayidx366;
        }
       } else {
        $R331_0 = $89;
        $RP359_0 = $88;
       }
       while (1) {
        $arrayidx373 = $R331_0 + 20 | 0;
        $91 = HEAP32[$arrayidx373 >> 2] | 0;
        if (($91 | 0) != 0) {
         $R331_0 = $91;
         $RP359_0 = $arrayidx373;
         continue;
        }
        $arrayidx378 = $R331_0 + 16 | 0;
        $92 = HEAP32[$arrayidx378 >> 2] | 0;
        if (($92 | 0) == 0) {
         break;
        } else {
         $R331_0 = $92;
         $RP359_0 = $arrayidx378;
        }
       }
       if ($RP359_0 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
        _abort();
       } else {
        HEAP32[$RP359_0 >> 2] = 0;
        $R331_1 = $R331_0;
        break;
       }
      } else {
       $83 = HEAP32[$mem + $and5 >> 2] | 0;
       if ($83 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
        _abort();
       }
       $bk342 = $83 + 12 | 0;
       if ((HEAP32[$bk342 >> 2] | 0) != ($77 | 0)) {
        _abort();
       }
       $fd346 = $81 + 8 | 0;
       if ((HEAP32[$fd346 >> 2] | 0) == ($77 | 0)) {
        HEAP32[$bk342 >> 2] = $81;
        HEAP32[$fd346 >> 2] = $83;
        $R331_1 = $81;
        break;
       } else {
        _abort();
       }
      }
     } while (0);
     if (($79 | 0) == 0) {
      break;
     }
     $95 = $mem + ($and5 + 20) | 0;
     $arrayidx399 = 6488 + (HEAP32[$95 >> 2] << 2) | 0;
     do {
      if (($77 | 0) == (HEAP32[$arrayidx399 >> 2] | 0)) {
       HEAP32[$arrayidx399 >> 2] = $R331_1;
       if (($R331_1 | 0) != 0) {
        break;
       }
       HEAP32[1547] = HEAP32[1547] & (1 << HEAP32[$95 >> 2] ^ -1);
       break L19383;
      } else {
       if ($79 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
        _abort();
       }
       $arrayidx418 = $79 + 16 | 0;
       if ((HEAP32[$arrayidx418 >> 2] | 0) == ($77 | 0)) {
        HEAP32[$arrayidx418 >> 2] = $R331_1;
       } else {
        HEAP32[$79 + 20 >> 2] = $R331_1;
       }
       if (($R331_1 | 0) == 0) {
        break L19383;
       }
      }
     } while (0);
     if ($R331_1 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
      _abort();
     }
     HEAP32[$R331_1 + 24 >> 2] = $79;
     $105 = HEAP32[$mem + ($and5 + 8) >> 2] | 0;
     do {
      if (($105 | 0) != 0) {
       if ($105 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
        _abort();
       } else {
        HEAP32[$R331_1 + 16 >> 2] = $105;
        HEAP32[$105 + 24 >> 2] = $R331_1;
        break;
       }
      }
     } while (0);
     $109 = HEAP32[$mem + ($and5 + 12) >> 2] | 0;
     if (($109 | 0) == 0) {
      break;
     }
     if ($109 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
      _abort();
     } else {
      HEAP32[$R331_1 + 20 >> 2] = $109;
      HEAP32[$109 + 24 >> 2] = $R331_1;
      break;
     }
    }
   } while (0);
   HEAP32[$p_0 + 4 >> 2] = $add266 | 1;
   HEAP32[$55 + $add266 >> 2] = $add266;
   if (($p_0 | 0) != (HEAP32[1551] | 0)) {
    $psize_1 = $add266;
    break;
   }
   HEAP32[1548] = $add266;
   return;
  } else {
   HEAP32[$56 >> 2] = $57 & -2;
   HEAP32[$p_0 + 4 >> 2] = $psize_0 | 1;
   HEAP32[$55 + $psize_0 >> 2] = $psize_0;
   $psize_1 = $psize_0;
  }
 } while (0);
 $shr497 = $psize_1 >>> 3;
 if ($psize_1 >>> 0 < 256) {
  $shl504 = $shr497 << 1;
  $113 = 6224 + ($shl504 << 2) | 0;
  $114 = HEAP32[1546] | 0;
  $shl507 = 1 << $shr497;
  do {
   if (($114 & $shl507 | 0) == 0) {
    HEAP32[1546] = $114 | $shl507;
    $F506_0 = $113;
    $_pre_phi = 6224 + ($shl504 + 2 << 2) | 0;
   } else {
    $115 = 6224 + ($shl504 + 2 << 2) | 0;
    $116 = HEAP32[$115 >> 2] | 0;
    if ($116 >>> 0 >= (HEAP32[1550] | 0) >>> 0) {
     $F506_0 = $116;
     $_pre_phi = $115;
     break;
    }
    _abort();
   }
  } while (0);
  HEAP32[$_pre_phi >> 2] = $p_0;
  HEAP32[$F506_0 + 12 >> 2] = $p_0;
  HEAP32[$p_0 + 8 >> 2] = $F506_0;
  HEAP32[$p_0 + 12 >> 2] = $113;
  return;
 }
 $119 = $p_0;
 $shr531 = $psize_1 >>> 8;
 do {
  if (($shr531 | 0) == 0) {
   $I530_0 = 0;
  } else {
   if ($psize_1 >>> 0 > 16777215) {
    $I530_0 = 31;
    break;
   }
   $and541 = ($shr531 + 1048320 | 0) >>> 16 & 8;
   $shl542 = $shr531 << $and541;
   $and545 = ($shl542 + 520192 | 0) >>> 16 & 4;
   $shl547 = $shl542 << $and545;
   $and550 = ($shl547 + 245760 | 0) >>> 16 & 2;
   $add555 = 14 - ($and545 | $and541 | $and550) + ($shl547 << $and550 >>> 15) | 0;
   $I530_0 = $psize_1 >>> (($add555 + 7 | 0) >>> 0) & 1 | $add555 << 1;
  }
 } while (0);
 $arrayidx563 = 6488 + ($I530_0 << 2) | 0;
 HEAP32[$p_0 + 28 >> 2] = $I530_0;
 HEAP32[$p_0 + 20 >> 2] = 0;
 HEAP32[$p_0 + 16 >> 2] = 0;
 $121 = HEAP32[1547] | 0;
 $shl569 = 1 << $I530_0;
 do {
  if (($121 & $shl569 | 0) == 0) {
   HEAP32[1547] = $121 | $shl569;
   HEAP32[$arrayidx563 >> 2] = $119;
   HEAP32[$p_0 + 24 >> 2] = $arrayidx563;
   HEAP32[$p_0 + 12 >> 2] = $p_0;
   HEAP32[$p_0 + 8 >> 2] = $p_0;
  } else {
   if (($I530_0 | 0) == 31) {
    $cond = 0;
   } else {
    $cond = 25 - ($I530_0 >>> 1) | 0;
   }
   $K579_0 = $psize_1 << $cond;
   $T_0 = HEAP32[$arrayidx563 >> 2] | 0;
   while (1) {
    if ((HEAP32[$T_0 + 4 >> 2] & -8 | 0) == ($psize_1 | 0)) {
     break;
    }
    $arrayidx595 = $T_0 + 16 + ($K579_0 >>> 31 << 2) | 0;
    $124 = HEAP32[$arrayidx595 >> 2] | 0;
    if (($124 | 0) == 0) {
     label = 16461;
     break;
    } else {
     $K579_0 = $K579_0 << 1;
     $T_0 = $124;
    }
   }
   if ((label | 0) == 16461) {
    if ($arrayidx595 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
     _abort();
    } else {
     HEAP32[$arrayidx595 >> 2] = $119;
     HEAP32[$p_0 + 24 >> 2] = $T_0;
     HEAP32[$p_0 + 12 >> 2] = $p_0;
     HEAP32[$p_0 + 8 >> 2] = $p_0;
     break;
    }
   }
   $fd613 = $T_0 + 8 | 0;
   $127 = HEAP32[$fd613 >> 2] | 0;
   $129 = HEAP32[1550] | 0;
   if ($T_0 >>> 0 < $129 >>> 0) {
    _abort();
   }
   if ($127 >>> 0 < $129 >>> 0) {
    _abort();
   } else {
    HEAP32[$127 + 12 >> 2] = $119;
    HEAP32[$fd613 >> 2] = $119;
    HEAP32[$p_0 + 8 >> 2] = $127;
    HEAP32[$p_0 + 12 >> 2] = $T_0;
    HEAP32[$p_0 + 24 >> 2] = 0;
    break;
   }
  }
 } while (0);
 $dec = (HEAP32[1554] | 0) - 1 | 0;
 HEAP32[1554] = $dec;
 if (($dec | 0) == 0) {
  $sp_0_in_i = 6640;
 } else {
  return;
 }
 while (1) {
  $sp_0_i = HEAP32[$sp_0_in_i >> 2] | 0;
  if (($sp_0_i | 0) == 0) {
   break;
  } else {
   $sp_0_in_i = $sp_0_i + 8 | 0;
  }
 }
 HEAP32[1554] = -1;
 return;
}
function _realloc($oldmem, $bytes) {
 $oldmem = $oldmem | 0;
 $bytes = $bytes | 0;
 var $cond = 0, $call7 = 0, $call12 = 0, $3 = 0, $sub = 0, $cond24 = 0, $mem_0 = 0;
 if (($oldmem | 0) == 0) {
  $mem_0 = _malloc($bytes) | 0;
  return $mem_0 | 0;
 }
 if ($bytes >>> 0 > 4294967231) {
  HEAP32[(___errno_location() | 0) >> 2] = 12;
  $mem_0 = 0;
  return $mem_0 | 0;
 }
 if ($bytes >>> 0 < 11) {
  $cond = 16;
 } else {
  $cond = $bytes + 11 & -8;
 }
 $call7 = _try_realloc_chunk($oldmem - 8 | 0, $cond) | 0;
 if (($call7 | 0) != 0) {
  $mem_0 = $call7 + 8 | 0;
  return $mem_0 | 0;
 }
 $call12 = _malloc($bytes) | 0;
 if (($call12 | 0) == 0) {
  $mem_0 = 0;
  return $mem_0 | 0;
 }
 $3 = HEAP32[$oldmem - 4 >> 2] | 0;
 $sub = ($3 & -8) - (($3 & 3 | 0) == 0 ? 8 : 4) | 0;
 $cond24 = $sub >>> 0 < $bytes >>> 0 ? $sub : $bytes;
 _memcpy($call12 | 0, $oldmem | 0, $cond24) | 0;
 _free($oldmem);
 $mem_0 = $call12;
 return $mem_0 | 0;
}
function _sys_trim($pad) {
 $pad = $pad | 0;
 var $call_i = 0, $1 = 0, $2 = 0, $3 = 0, $mul = 0, $4 = 0, $sp_0_i = 0, $5 = 0, $7 = 0, $retval_0_i = 0, $call20 = 0, $size = 0, $call24 = 0, $call25 = 0, $sub_ptr_sub = 0, $13 = 0, $sub41 = 0, $15 = 0, $16 = 0, $cond_i = 0, $sub5_i = 0, $released_2 = 0;
 do {
  if ((HEAP32[58] | 0) == 0) {
   $call_i = _sysconf(8) | 0;
   if (($call_i - 1 & $call_i | 0) == 0) {
    HEAP32[60] = $call_i;
    HEAP32[59] = $call_i;
    HEAP32[61] = -1;
    HEAP32[62] = 2097152;
    HEAP32[63] = 0;
    HEAP32[1657] = 0;
    HEAP32[58] = (_time(0) | 0) & -16 ^ 1431655768;
    break;
   } else {
    _abort();
    return 0;
    return 0;
   }
  }
 } while (0);
 if ($pad >>> 0 >= 4294967232) {
  $released_2 = 0;
  return $released_2 | 0;
 }
 $1 = HEAP32[1552] | 0;
 if (($1 | 0) == 0) {
  $released_2 = 0;
  return $released_2 | 0;
 }
 $2 = HEAP32[1549] | 0;
 do {
  if ($2 >>> 0 > ($pad + 40 | 0) >>> 0) {
   $3 = HEAP32[60] | 0;
   $mul = Math_imul((((-40 - $pad - 1 + $2 + $3 | 0) >>> 0) / ($3 >>> 0) >>> 0) - 1 | 0, $3) | 0;
   $4 = $1;
   $sp_0_i = 6632;
   while (1) {
    $5 = HEAP32[$sp_0_i >> 2] | 0;
    if ($5 >>> 0 <= $4 >>> 0) {
     if (($5 + (HEAP32[$sp_0_i + 4 >> 2] | 0) | 0) >>> 0 > $4 >>> 0) {
      $retval_0_i = $sp_0_i;
      break;
     }
    }
    $7 = HEAP32[$sp_0_i + 8 >> 2] | 0;
    if (($7 | 0) == 0) {
     $retval_0_i = 0;
     break;
    } else {
     $sp_0_i = $7;
    }
   }
   if ((HEAP32[$retval_0_i + 12 >> 2] & 8 | 0) != 0) {
    break;
   }
   $call20 = _sbrk(0) | 0;
   $size = $retval_0_i + 4 | 0;
   if (($call20 | 0) != ((HEAP32[$retval_0_i >> 2] | 0) + (HEAP32[$size >> 2] | 0) | 0)) {
    break;
   }
   $call24 = _sbrk(-($mul >>> 0 > 2147483646 ? -2147483648 - $3 | 0 : $mul) | 0) | 0;
   $call25 = _sbrk(0) | 0;
   if (!(($call24 | 0) != -1 & $call25 >>> 0 < $call20 >>> 0)) {
    break;
   }
   $sub_ptr_sub = $call20 - $call25 | 0;
   if (($call20 | 0) == ($call25 | 0)) {
    break;
   }
   HEAP32[$size >> 2] = (HEAP32[$size >> 2] | 0) - $sub_ptr_sub;
   HEAP32[1654] = (HEAP32[1654] | 0) - $sub_ptr_sub;
   $13 = HEAP32[1552] | 0;
   $sub41 = (HEAP32[1549] | 0) - $sub_ptr_sub | 0;
   $15 = $13;
   $16 = $13 + 8 | 0;
   if (($16 & 7 | 0) == 0) {
    $cond_i = 0;
   } else {
    $cond_i = -$16 & 7;
   }
   $sub5_i = $sub41 - $cond_i | 0;
   HEAP32[1552] = $15 + $cond_i;
   HEAP32[1549] = $sub5_i;
   HEAP32[$15 + ($cond_i + 4) >> 2] = $sub5_i | 1;
   HEAP32[$15 + ($sub41 + 4) >> 2] = 40;
   HEAP32[1553] = HEAP32[62];
   $released_2 = ($call20 | 0) != ($call25 | 0) & 1;
   return $released_2 | 0;
  }
 } while (0);
 if ((HEAP32[1549] | 0) >>> 0 <= (HEAP32[1553] | 0) >>> 0) {
  $released_2 = 0;
  return $released_2 | 0;
 }
 HEAP32[1553] = -1;
 $released_2 = 0;
 return $released_2 | 0;
}
function _try_realloc_chunk($p, $nb) {
 $p = $p | 0;
 $nb = $nb | 0;
 var $head = 0, $0 = 0, $and = 0, $1 = 0, $add_ptr = 0, $2 = 0, $3 = 0, $and2 = 0, $4 = 0, $5 = 0, $sub = 0, $add = 0, $sub40 = 0, $add58 = 0, $sub62 = 0, $18 = 0, $20 = 0, $storemerge18 = 0, $storemerge = 0, $add105 = 0, $sub110 = 0, $shr = 0, $23 = 0, $25 = 0, $26 = 0, $fd138 = 0, $fd148_pre_phi = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $bk164 = 0, $fd167 = 0, $42 = 0, $43 = 0, $arrayidx182 = 0, $44 = 0, $RP_0 = 0, $R_0 = 0, $arrayidx186 = 0, $45 = 0, $arrayidx190 = 0, $46 = 0, $R_1 = 0, $48 = 0, $arrayidx206 = 0, $arrayidx226 = 0, $58 = 0, $62 = 0, $66 = 0, $71 = 0, $newp_0 = 0;
 $head = $p + 4 | 0;
 $0 = HEAP32[$head >> 2] | 0;
 $and = $0 & -8;
 $1 = $p;
 $add_ptr = $1 + $and | 0;
 $2 = $add_ptr;
 $3 = HEAP32[1550] | 0;
 if ($1 >>> 0 < $3 >>> 0) {
  _abort();
  return 0;
  return 0;
 }
 $and2 = $0 & 3;
 if (!(($and2 | 0) != 1 & $1 >>> 0 < $add_ptr >>> 0)) {
  _abort();
  return 0;
  return 0;
 }
 $4 = $1 + ($and | 4) | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 & 1 | 0) == 0) {
  _abort();
  return 0;
  return 0;
 }
 if (($and2 | 0) == 0) {
  if ($nb >>> 0 < 256) {
   $newp_0 = 0;
   return $newp_0 | 0;
  }
  do {
   if ($and >>> 0 >= ($nb + 4 | 0) >>> 0) {
    if (($and - $nb | 0) >>> 0 > HEAP32[60] << 1 >>> 0) {
     break;
    } else {
     $newp_0 = $p;
    }
    return $newp_0 | 0;
   }
  } while (0);
  $newp_0 = 0;
  return $newp_0 | 0;
 }
 if ($and >>> 0 >= $nb >>> 0) {
  $sub = $and - $nb | 0;
  if ($sub >>> 0 <= 15) {
   $newp_0 = $p;
   return $newp_0 | 0;
  }
  HEAP32[$head >> 2] = $0 & 1 | $nb | 2;
  HEAP32[$1 + ($nb + 4) >> 2] = $sub | 3;
  HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 1;
  _dispose_chunk($1 + $nb | 0, $sub);
  $newp_0 = $p;
  return $newp_0 | 0;
 }
 if (($2 | 0) == (HEAP32[1552] | 0)) {
  $add = (HEAP32[1549] | 0) + $and | 0;
  if ($add >>> 0 <= $nb >>> 0) {
   $newp_0 = 0;
   return $newp_0 | 0;
  }
  $sub40 = $add - $nb | 0;
  HEAP32[$head >> 2] = $0 & 1 | $nb | 2;
  HEAP32[$1 + ($nb + 4) >> 2] = $sub40 | 1;
  HEAP32[1552] = $1 + $nb;
  HEAP32[1549] = $sub40;
  $newp_0 = $p;
  return $newp_0 | 0;
 }
 if (($2 | 0) == (HEAP32[1551] | 0)) {
  $add58 = (HEAP32[1548] | 0) + $and | 0;
  if ($add58 >>> 0 < $nb >>> 0) {
   $newp_0 = 0;
   return $newp_0 | 0;
  }
  $sub62 = $add58 - $nb | 0;
  if ($sub62 >>> 0 > 15) {
   HEAP32[$head >> 2] = $0 & 1 | $nb | 2;
   HEAP32[$1 + ($nb + 4) >> 2] = $sub62 | 1;
   HEAP32[$1 + $add58 >> 2] = $sub62;
   $18 = $1 + ($add58 + 4) | 0;
   HEAP32[$18 >> 2] = HEAP32[$18 >> 2] & -2;
   $storemerge = $1 + $nb | 0;
   $storemerge18 = $sub62;
  } else {
   HEAP32[$head >> 2] = $0 & 1 | $add58 | 2;
   $20 = $1 + ($add58 + 4) | 0;
   HEAP32[$20 >> 2] = HEAP32[$20 >> 2] | 1;
   $storemerge = 0;
   $storemerge18 = 0;
  }
  HEAP32[1548] = $storemerge18;
  HEAP32[1551] = $storemerge;
  $newp_0 = $p;
  return $newp_0 | 0;
 }
 if (($5 & 2 | 0) != 0) {
  $newp_0 = 0;
  return $newp_0 | 0;
 }
 $add105 = ($5 & -8) + $and | 0;
 if ($add105 >>> 0 < $nb >>> 0) {
  $newp_0 = 0;
  return $newp_0 | 0;
 }
 $sub110 = $add105 - $nb | 0;
 $shr = $5 >>> 3;
 L19604 : do {
  if ($5 >>> 0 < 256) {
   $23 = HEAP32[$1 + ($and + 8) >> 2] | 0;
   $25 = HEAP32[$1 + ($and + 12) >> 2] | 0;
   $26 = 6224 + ($shr << 1 << 2) | 0;
   do {
    if (($23 | 0) != ($26 | 0)) {
     if ($23 >>> 0 < $3 >>> 0) {
      _abort();
      return 0;
      return 0;
     }
     if ((HEAP32[$23 + 12 >> 2] | 0) == ($2 | 0)) {
      break;
     }
     _abort();
     return 0;
     return 0;
    }
   } while (0);
   if (($25 | 0) == ($23 | 0)) {
    HEAP32[1546] = HEAP32[1546] & (1 << $shr ^ -1);
    break;
   }
   do {
    if (($25 | 0) == ($26 | 0)) {
     $fd148_pre_phi = $25 + 8 | 0;
    } else {
     if ($25 >>> 0 < $3 >>> 0) {
      _abort();
      return 0;
      return 0;
     }
     $fd138 = $25 + 8 | 0;
     if ((HEAP32[$fd138 >> 2] | 0) == ($2 | 0)) {
      $fd148_pre_phi = $fd138;
      break;
     }
     _abort();
     return 0;
     return 0;
    }
   } while (0);
   HEAP32[$23 + 12 >> 2] = $25;
   HEAP32[$fd148_pre_phi >> 2] = $23;
  } else {
   $32 = $add_ptr;
   $34 = HEAP32[$1 + ($and + 24) >> 2] | 0;
   $36 = HEAP32[$1 + ($and + 12) >> 2] | 0;
   do {
    if (($36 | 0) == ($32 | 0)) {
     $42 = $1 + ($and + 20) | 0;
     $43 = HEAP32[$42 >> 2] | 0;
     if (($43 | 0) == 0) {
      $arrayidx182 = $1 + ($and + 16) | 0;
      $44 = HEAP32[$arrayidx182 >> 2] | 0;
      if (($44 | 0) == 0) {
       $R_1 = 0;
       break;
      } else {
       $R_0 = $44;
       $RP_0 = $arrayidx182;
      }
     } else {
      $R_0 = $43;
      $RP_0 = $42;
     }
     while (1) {
      $arrayidx186 = $R_0 + 20 | 0;
      $45 = HEAP32[$arrayidx186 >> 2] | 0;
      if (($45 | 0) != 0) {
       $R_0 = $45;
       $RP_0 = $arrayidx186;
       continue;
      }
      $arrayidx190 = $R_0 + 16 | 0;
      $46 = HEAP32[$arrayidx190 >> 2] | 0;
      if (($46 | 0) == 0) {
       break;
      } else {
       $R_0 = $46;
       $RP_0 = $arrayidx190;
      }
     }
     if ($RP_0 >>> 0 < $3 >>> 0) {
      _abort();
      return 0;
      return 0;
     } else {
      HEAP32[$RP_0 >> 2] = 0;
      $R_1 = $R_0;
      break;
     }
    } else {
     $38 = HEAP32[$1 + ($and + 8) >> 2] | 0;
     if ($38 >>> 0 < $3 >>> 0) {
      _abort();
      return 0;
      return 0;
     }
     $bk164 = $38 + 12 | 0;
     if ((HEAP32[$bk164 >> 2] | 0) != ($32 | 0)) {
      _abort();
      return 0;
      return 0;
     }
     $fd167 = $36 + 8 | 0;
     if ((HEAP32[$fd167 >> 2] | 0) == ($32 | 0)) {
      HEAP32[$bk164 >> 2] = $36;
      HEAP32[$fd167 >> 2] = $38;
      $R_1 = $36;
      break;
     } else {
      _abort();
      return 0;
      return 0;
     }
    }
   } while (0);
   if (($34 | 0) == 0) {
    break;
   }
   $48 = $1 + ($and + 28) | 0;
   $arrayidx206 = 6488 + (HEAP32[$48 >> 2] << 2) | 0;
   do {
    if (($32 | 0) == (HEAP32[$arrayidx206 >> 2] | 0)) {
     HEAP32[$arrayidx206 >> 2] = $R_1;
     if (($R_1 | 0) != 0) {
      break;
     }
     HEAP32[1547] = HEAP32[1547] & (1 << HEAP32[$48 >> 2] ^ -1);
     break L19604;
    } else {
     if ($34 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
      _abort();
      return 0;
      return 0;
     }
     $arrayidx226 = $34 + 16 | 0;
     if ((HEAP32[$arrayidx226 >> 2] | 0) == ($32 | 0)) {
      HEAP32[$arrayidx226 >> 2] = $R_1;
     } else {
      HEAP32[$34 + 20 >> 2] = $R_1;
     }
     if (($R_1 | 0) == 0) {
      break L19604;
     }
    }
   } while (0);
   if ($R_1 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
    _abort();
    return 0;
    return 0;
   }
   HEAP32[$R_1 + 24 >> 2] = $34;
   $58 = HEAP32[$1 + ($and + 16) >> 2] | 0;
   do {
    if (($58 | 0) != 0) {
     if ($58 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
      _abort();
      return 0;
      return 0;
     } else {
      HEAP32[$R_1 + 16 >> 2] = $58;
      HEAP32[$58 + 24 >> 2] = $R_1;
      break;
     }
    }
   } while (0);
   $62 = HEAP32[$1 + ($and + 20) >> 2] | 0;
   if (($62 | 0) == 0) {
    break;
   }
   if ($62 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
    _abort();
    return 0;
    return 0;
   } else {
    HEAP32[$R_1 + 20 >> 2] = $62;
    HEAP32[$62 + 24 >> 2] = $R_1;
    break;
   }
  }
 } while (0);
 if ($sub110 >>> 0 < 16) {
  HEAP32[$head >> 2] = $add105 | HEAP32[$head >> 2] & 1 | 2;
  $66 = $1 + ($add105 | 4) | 0;
  HEAP32[$66 >> 2] = HEAP32[$66 >> 2] | 1;
  $newp_0 = $p;
  return $newp_0 | 0;
 } else {
  HEAP32[$head >> 2] = HEAP32[$head >> 2] & 1 | $nb | 2;
  HEAP32[$1 + ($nb + 4) >> 2] = $sub110 | 3;
  $71 = $1 + ($add105 | 4) | 0;
  HEAP32[$71 >> 2] = HEAP32[$71 >> 2] | 1;
  _dispose_chunk($1 + $nb | 0, $sub110);
  $newp_0 = $p;
  return $newp_0 | 0;
 }
 return 0;
}
function _dispose_chunk($p, $psize) {
 $p = $p | 0;
 $psize = $psize | 0;
 var $0 = 0, $add_ptr = 0, $1 = 0, $2 = 0, $3 = 0, $add_ptr5 = 0, $4 = 0, $add6 = 0, $5 = 0, $shr = 0, $8 = 0, $10 = 0, $11 = 0, $fd43 = 0, $fd53_pre_phi = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $bk70 = 0, $fd74 = 0, $add_ptr5_sum24 = 0, $27 = 0, $28 = 0, $arrayidx90 = 0, $29 = 0, $RP_0 = 0, $R_0 = 0, $arrayidx95 = 0, $30 = 0, $arrayidx100 = 0, $31 = 0, $R_1 = 0, $33 = 0, $arrayidx118 = 0, $arrayidx138 = 0, $add_ptr5_sum26 = 0, $43 = 0, $47 = 0, $50 = 0, $psize_addr_0 = 0, $p_addr_0 = 0, $54 = 0, $55 = 0, $56 = 0, $add229 = 0, $add246 = 0, $add255 = 0, $shr256 = 0, $64 = 0, $66 = 0, $67 = 0, $fd304 = 0, $fd315_pre_phi = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $bk337 = 0, $fd341 = 0, $83 = 0, $84 = 0, $arrayidx361 = 0, $85 = 0, $RP354_0 = 0, $R325_0 = 0, $arrayidx368 = 0, $86 = 0, $arrayidx373 = 0, $87 = 0, $R325_1 = 0, $89 = 0, $arrayidx396 = 0, $arrayidx417 = 0, $99 = 0, $103 = 0, $psize_addr_1 = 0, $shr501 = 0, $shl508 = 0, $109 = 0, $110 = 0, $shl513 = 0, $111 = 0, $112 = 0, $_pre_phi = 0, $F511_0 = 0, $115 = 0, $shr540 = 0, $and550 = 0, $shl551 = 0, $and554 = 0, $shl556 = 0, $and559 = 0, $add564 = 0, $I539_0 = 0, $arrayidx573 = 0, $117 = 0, $shl580 = 0, $cond = 0, $T_0 = 0, $K591_0 = 0, $arrayidx607 = 0, $120 = 0, $fd626 = 0, $123 = 0, $125 = 0, label = 0;
 $0 = $p;
 $add_ptr = $0 + $psize | 0;
 $1 = $add_ptr;
 $2 = HEAP32[$p + 4 >> 2] | 0;
 L19680 : do {
  if (($2 & 1 | 0) == 0) {
   $3 = HEAP32[$p >> 2] | 0;
   if (($2 & 3 | 0) == 0) {
    return;
   }
   $add_ptr5 = $0 + (-$3 | 0) | 0;
   $4 = $add_ptr5;
   $add6 = $3 + $psize | 0;
   $5 = HEAP32[1550] | 0;
   if ($add_ptr5 >>> 0 < $5 >>> 0) {
    _abort();
   }
   if (($4 | 0) == (HEAP32[1551] | 0)) {
    $50 = $0 + ($psize + 4) | 0;
    if ((HEAP32[$50 >> 2] & 3 | 0) != 3) {
     $p_addr_0 = $4;
     $psize_addr_0 = $add6;
     break;
    }
    HEAP32[1548] = $add6;
    HEAP32[$50 >> 2] = HEAP32[$50 >> 2] & -2;
    HEAP32[$0 + (4 - $3) >> 2] = $add6 | 1;
    HEAP32[$add_ptr >> 2] = $add6;
    return;
   }
   $shr = $3 >>> 3;
   if ($3 >>> 0 < 256) {
    $8 = HEAP32[$0 + (8 - $3) >> 2] | 0;
    $10 = HEAP32[$0 + (12 - $3) >> 2] | 0;
    $11 = 6224 + ($shr << 1 << 2) | 0;
    do {
     if (($8 | 0) != ($11 | 0)) {
      if ($8 >>> 0 < $5 >>> 0) {
       _abort();
      }
      if ((HEAP32[$8 + 12 >> 2] | 0) == ($4 | 0)) {
       break;
      }
      _abort();
     }
    } while (0);
    if (($10 | 0) == ($8 | 0)) {
     HEAP32[1546] = HEAP32[1546] & (1 << $shr ^ -1);
     $p_addr_0 = $4;
     $psize_addr_0 = $add6;
     break;
    }
    do {
     if (($10 | 0) == ($11 | 0)) {
      $fd53_pre_phi = $10 + 8 | 0;
     } else {
      if ($10 >>> 0 < $5 >>> 0) {
       _abort();
      }
      $fd43 = $10 + 8 | 0;
      if ((HEAP32[$fd43 >> 2] | 0) == ($4 | 0)) {
       $fd53_pre_phi = $fd43;
       break;
      }
      _abort();
     }
    } while (0);
    HEAP32[$8 + 12 >> 2] = $10;
    HEAP32[$fd53_pre_phi >> 2] = $8;
    $p_addr_0 = $4;
    $psize_addr_0 = $add6;
    break;
   }
   $17 = $add_ptr5;
   $19 = HEAP32[$0 + (24 - $3) >> 2] | 0;
   $21 = HEAP32[$0 + (12 - $3) >> 2] | 0;
   do {
    if (($21 | 0) == ($17 | 0)) {
     $add_ptr5_sum24 = 16 - $3 | 0;
     $27 = $0 + ($add_ptr5_sum24 + 4) | 0;
     $28 = HEAP32[$27 >> 2] | 0;
     if (($28 | 0) == 0) {
      $arrayidx90 = $0 + $add_ptr5_sum24 | 0;
      $29 = HEAP32[$arrayidx90 >> 2] | 0;
      if (($29 | 0) == 0) {
       $R_1 = 0;
       break;
      } else {
       $R_0 = $29;
       $RP_0 = $arrayidx90;
      }
     } else {
      $R_0 = $28;
      $RP_0 = $27;
     }
     while (1) {
      $arrayidx95 = $R_0 + 20 | 0;
      $30 = HEAP32[$arrayidx95 >> 2] | 0;
      if (($30 | 0) != 0) {
       $R_0 = $30;
       $RP_0 = $arrayidx95;
       continue;
      }
      $arrayidx100 = $R_0 + 16 | 0;
      $31 = HEAP32[$arrayidx100 >> 2] | 0;
      if (($31 | 0) == 0) {
       break;
      } else {
       $R_0 = $31;
       $RP_0 = $arrayidx100;
      }
     }
     if ($RP_0 >>> 0 < $5 >>> 0) {
      _abort();
     } else {
      HEAP32[$RP_0 >> 2] = 0;
      $R_1 = $R_0;
      break;
     }
    } else {
     $23 = HEAP32[$0 + (8 - $3) >> 2] | 0;
     if ($23 >>> 0 < $5 >>> 0) {
      _abort();
     }
     $bk70 = $23 + 12 | 0;
     if ((HEAP32[$bk70 >> 2] | 0) != ($17 | 0)) {
      _abort();
     }
     $fd74 = $21 + 8 | 0;
     if ((HEAP32[$fd74 >> 2] | 0) == ($17 | 0)) {
      HEAP32[$bk70 >> 2] = $21;
      HEAP32[$fd74 >> 2] = $23;
      $R_1 = $21;
      break;
     } else {
      _abort();
     }
    }
   } while (0);
   if (($19 | 0) == 0) {
    $p_addr_0 = $4;
    $psize_addr_0 = $add6;
    break;
   }
   $33 = $0 + (28 - $3) | 0;
   $arrayidx118 = 6488 + (HEAP32[$33 >> 2] << 2) | 0;
   do {
    if (($17 | 0) == (HEAP32[$arrayidx118 >> 2] | 0)) {
     HEAP32[$arrayidx118 >> 2] = $R_1;
     if (($R_1 | 0) != 0) {
      break;
     }
     HEAP32[1547] = HEAP32[1547] & (1 << HEAP32[$33 >> 2] ^ -1);
     $p_addr_0 = $4;
     $psize_addr_0 = $add6;
     break L19680;
    } else {
     if ($19 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
      _abort();
     }
     $arrayidx138 = $19 + 16 | 0;
     if ((HEAP32[$arrayidx138 >> 2] | 0) == ($17 | 0)) {
      HEAP32[$arrayidx138 >> 2] = $R_1;
     } else {
      HEAP32[$19 + 20 >> 2] = $R_1;
     }
     if (($R_1 | 0) == 0) {
      $p_addr_0 = $4;
      $psize_addr_0 = $add6;
      break L19680;
     }
    }
   } while (0);
   if ($R_1 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
    _abort();
   }
   HEAP32[$R_1 + 24 >> 2] = $19;
   $add_ptr5_sum26 = 16 - $3 | 0;
   $43 = HEAP32[$0 + $add_ptr5_sum26 >> 2] | 0;
   do {
    if (($43 | 0) != 0) {
     if ($43 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
      _abort();
     } else {
      HEAP32[$R_1 + 16 >> 2] = $43;
      HEAP32[$43 + 24 >> 2] = $R_1;
      break;
     }
    }
   } while (0);
   $47 = HEAP32[$0 + ($add_ptr5_sum26 + 4) >> 2] | 0;
   if (($47 | 0) == 0) {
    $p_addr_0 = $4;
    $psize_addr_0 = $add6;
    break;
   }
   if ($47 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
    _abort();
   } else {
    HEAP32[$R_1 + 20 >> 2] = $47;
    HEAP32[$47 + 24 >> 2] = $R_1;
    $p_addr_0 = $4;
    $psize_addr_0 = $add6;
    break;
   }
  } else {
   $p_addr_0 = $p;
   $psize_addr_0 = $psize;
  }
 } while (0);
 $54 = HEAP32[1550] | 0;
 if ($add_ptr >>> 0 < $54 >>> 0) {
  _abort();
 }
 $55 = $0 + ($psize + 4) | 0;
 $56 = HEAP32[$55 >> 2] | 0;
 do {
  if (($56 & 2 | 0) == 0) {
   if (($1 | 0) == (HEAP32[1552] | 0)) {
    $add229 = (HEAP32[1549] | 0) + $psize_addr_0 | 0;
    HEAP32[1549] = $add229;
    HEAP32[1552] = $p_addr_0;
    HEAP32[$p_addr_0 + 4 >> 2] = $add229 | 1;
    if (($p_addr_0 | 0) != (HEAP32[1551] | 0)) {
     return;
    }
    HEAP32[1551] = 0;
    HEAP32[1548] = 0;
    return;
   }
   if (($1 | 0) == (HEAP32[1551] | 0)) {
    $add246 = (HEAP32[1548] | 0) + $psize_addr_0 | 0;
    HEAP32[1548] = $add246;
    HEAP32[1551] = $p_addr_0;
    HEAP32[$p_addr_0 + 4 >> 2] = $add246 | 1;
    HEAP32[$p_addr_0 + $add246 >> 2] = $add246;
    return;
   }
   $add255 = ($56 & -8) + $psize_addr_0 | 0;
   $shr256 = $56 >>> 3;
   L19780 : do {
    if ($56 >>> 0 < 256) {
     $64 = HEAP32[$0 + ($psize + 8) >> 2] | 0;
     $66 = HEAP32[$0 + ($psize + 12) >> 2] | 0;
     $67 = 6224 + ($shr256 << 1 << 2) | 0;
     do {
      if (($64 | 0) != ($67 | 0)) {
       if ($64 >>> 0 < $54 >>> 0) {
        _abort();
       }
       if ((HEAP32[$64 + 12 >> 2] | 0) == ($1 | 0)) {
        break;
       }
       _abort();
      }
     } while (0);
     if (($66 | 0) == ($64 | 0)) {
      HEAP32[1546] = HEAP32[1546] & (1 << $shr256 ^ -1);
      break;
     }
     do {
      if (($66 | 0) == ($67 | 0)) {
       $fd315_pre_phi = $66 + 8 | 0;
      } else {
       if ($66 >>> 0 < $54 >>> 0) {
        _abort();
       }
       $fd304 = $66 + 8 | 0;
       if ((HEAP32[$fd304 >> 2] | 0) == ($1 | 0)) {
        $fd315_pre_phi = $fd304;
        break;
       }
       _abort();
      }
     } while (0);
     HEAP32[$64 + 12 >> 2] = $66;
     HEAP32[$fd315_pre_phi >> 2] = $64;
    } else {
     $73 = $add_ptr;
     $75 = HEAP32[$0 + ($psize + 24) >> 2] | 0;
     $77 = HEAP32[$0 + ($psize + 12) >> 2] | 0;
     do {
      if (($77 | 0) == ($73 | 0)) {
       $83 = $0 + ($psize + 20) | 0;
       $84 = HEAP32[$83 >> 2] | 0;
       if (($84 | 0) == 0) {
        $arrayidx361 = $0 + ($psize + 16) | 0;
        $85 = HEAP32[$arrayidx361 >> 2] | 0;
        if (($85 | 0) == 0) {
         $R325_1 = 0;
         break;
        } else {
         $R325_0 = $85;
         $RP354_0 = $arrayidx361;
        }
       } else {
        $R325_0 = $84;
        $RP354_0 = $83;
       }
       while (1) {
        $arrayidx368 = $R325_0 + 20 | 0;
        $86 = HEAP32[$arrayidx368 >> 2] | 0;
        if (($86 | 0) != 0) {
         $R325_0 = $86;
         $RP354_0 = $arrayidx368;
         continue;
        }
        $arrayidx373 = $R325_0 + 16 | 0;
        $87 = HEAP32[$arrayidx373 >> 2] | 0;
        if (($87 | 0) == 0) {
         break;
        } else {
         $R325_0 = $87;
         $RP354_0 = $arrayidx373;
        }
       }
       if ($RP354_0 >>> 0 < $54 >>> 0) {
        _abort();
       } else {
        HEAP32[$RP354_0 >> 2] = 0;
        $R325_1 = $R325_0;
        break;
       }
      } else {
       $79 = HEAP32[$0 + ($psize + 8) >> 2] | 0;
       if ($79 >>> 0 < $54 >>> 0) {
        _abort();
       }
       $bk337 = $79 + 12 | 0;
       if ((HEAP32[$bk337 >> 2] | 0) != ($73 | 0)) {
        _abort();
       }
       $fd341 = $77 + 8 | 0;
       if ((HEAP32[$fd341 >> 2] | 0) == ($73 | 0)) {
        HEAP32[$bk337 >> 2] = $77;
        HEAP32[$fd341 >> 2] = $79;
        $R325_1 = $77;
        break;
       } else {
        _abort();
       }
      }
     } while (0);
     if (($75 | 0) == 0) {
      break;
     }
     $89 = $0 + ($psize + 28) | 0;
     $arrayidx396 = 6488 + (HEAP32[$89 >> 2] << 2) | 0;
     do {
      if (($73 | 0) == (HEAP32[$arrayidx396 >> 2] | 0)) {
       HEAP32[$arrayidx396 >> 2] = $R325_1;
       if (($R325_1 | 0) != 0) {
        break;
       }
       HEAP32[1547] = HEAP32[1547] & (1 << HEAP32[$89 >> 2] ^ -1);
       break L19780;
      } else {
       if ($75 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
        _abort();
       }
       $arrayidx417 = $75 + 16 | 0;
       if ((HEAP32[$arrayidx417 >> 2] | 0) == ($73 | 0)) {
        HEAP32[$arrayidx417 >> 2] = $R325_1;
       } else {
        HEAP32[$75 + 20 >> 2] = $R325_1;
       }
       if (($R325_1 | 0) == 0) {
        break L19780;
       }
      }
     } while (0);
     if ($R325_1 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
      _abort();
     }
     HEAP32[$R325_1 + 24 >> 2] = $75;
     $99 = HEAP32[$0 + ($psize + 16) >> 2] | 0;
     do {
      if (($99 | 0) != 0) {
       if ($99 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
        _abort();
       } else {
        HEAP32[$R325_1 + 16 >> 2] = $99;
        HEAP32[$99 + 24 >> 2] = $R325_1;
        break;
       }
      }
     } while (0);
     $103 = HEAP32[$0 + ($psize + 20) >> 2] | 0;
     if (($103 | 0) == 0) {
      break;
     }
     if ($103 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
      _abort();
     } else {
      HEAP32[$R325_1 + 20 >> 2] = $103;
      HEAP32[$103 + 24 >> 2] = $R325_1;
      break;
     }
    }
   } while (0);
   HEAP32[$p_addr_0 + 4 >> 2] = $add255 | 1;
   HEAP32[$p_addr_0 + $add255 >> 2] = $add255;
   if (($p_addr_0 | 0) != (HEAP32[1551] | 0)) {
    $psize_addr_1 = $add255;
    break;
   }
   HEAP32[1548] = $add255;
   return;
  } else {
   HEAP32[$55 >> 2] = $56 & -2;
   HEAP32[$p_addr_0 + 4 >> 2] = $psize_addr_0 | 1;
   HEAP32[$p_addr_0 + $psize_addr_0 >> 2] = $psize_addr_0;
   $psize_addr_1 = $psize_addr_0;
  }
 } while (0);
 $shr501 = $psize_addr_1 >>> 3;
 if ($psize_addr_1 >>> 0 < 256) {
  $shl508 = $shr501 << 1;
  $109 = 6224 + ($shl508 << 2) | 0;
  $110 = HEAP32[1546] | 0;
  $shl513 = 1 << $shr501;
  do {
   if (($110 & $shl513 | 0) == 0) {
    HEAP32[1546] = $110 | $shl513;
    $F511_0 = $109;
    $_pre_phi = 6224 + ($shl508 + 2 << 2) | 0;
   } else {
    $111 = 6224 + ($shl508 + 2 << 2) | 0;
    $112 = HEAP32[$111 >> 2] | 0;
    if ($112 >>> 0 >= (HEAP32[1550] | 0) >>> 0) {
     $F511_0 = $112;
     $_pre_phi = $111;
     break;
    }
    _abort();
   }
  } while (0);
  HEAP32[$_pre_phi >> 2] = $p_addr_0;
  HEAP32[$F511_0 + 12 >> 2] = $p_addr_0;
  HEAP32[$p_addr_0 + 8 >> 2] = $F511_0;
  HEAP32[$p_addr_0 + 12 >> 2] = $109;
  return;
 }
 $115 = $p_addr_0;
 $shr540 = $psize_addr_1 >>> 8;
 do {
  if (($shr540 | 0) == 0) {
   $I539_0 = 0;
  } else {
   if ($psize_addr_1 >>> 0 > 16777215) {
    $I539_0 = 31;
    break;
   }
   $and550 = ($shr540 + 1048320 | 0) >>> 16 & 8;
   $shl551 = $shr540 << $and550;
   $and554 = ($shl551 + 520192 | 0) >>> 16 & 4;
   $shl556 = $shl551 << $and554;
   $and559 = ($shl556 + 245760 | 0) >>> 16 & 2;
   $add564 = 14 - ($and554 | $and550 | $and559) + ($shl556 << $and559 >>> 15) | 0;
   $I539_0 = $psize_addr_1 >>> (($add564 + 7 | 0) >>> 0) & 1 | $add564 << 1;
  }
 } while (0);
 $arrayidx573 = 6488 + ($I539_0 << 2) | 0;
 HEAP32[$p_addr_0 + 28 >> 2] = $I539_0;
 HEAP32[$p_addr_0 + 20 >> 2] = 0;
 HEAP32[$p_addr_0 + 16 >> 2] = 0;
 $117 = HEAP32[1547] | 0;
 $shl580 = 1 << $I539_0;
 if (($117 & $shl580 | 0) == 0) {
  HEAP32[1547] = $117 | $shl580;
  HEAP32[$arrayidx573 >> 2] = $115;
  HEAP32[$p_addr_0 + 24 >> 2] = $arrayidx573;
  HEAP32[$p_addr_0 + 12 >> 2] = $p_addr_0;
  HEAP32[$p_addr_0 + 8 >> 2] = $p_addr_0;
  return;
 }
 if (($I539_0 | 0) == 31) {
  $cond = 0;
 } else {
  $cond = 25 - ($I539_0 >>> 1) | 0;
 }
 $K591_0 = $psize_addr_1 << $cond;
 $T_0 = HEAP32[$arrayidx573 >> 2] | 0;
 while (1) {
  if ((HEAP32[$T_0 + 4 >> 2] & -8 | 0) == ($psize_addr_1 | 0)) {
   break;
  }
  $arrayidx607 = $T_0 + 16 + ($K591_0 >>> 31 << 2) | 0;
  $120 = HEAP32[$arrayidx607 >> 2] | 0;
  if (($120 | 0) == 0) {
   label = 16767;
   break;
  } else {
   $K591_0 = $K591_0 << 1;
   $T_0 = $120;
  }
 }
 if ((label | 0) == 16767) {
  if ($arrayidx607 >>> 0 < (HEAP32[1550] | 0) >>> 0) {
   _abort();
  }
  HEAP32[$arrayidx607 >> 2] = $115;
  HEAP32[$p_addr_0 + 24 >> 2] = $T_0;
  HEAP32[$p_addr_0 + 12 >> 2] = $p_addr_0;
  HEAP32[$p_addr_0 + 8 >> 2] = $p_addr_0;
  return;
 }
 $fd626 = $T_0 + 8 | 0;
 $123 = HEAP32[$fd626 >> 2] | 0;
 $125 = HEAP32[1550] | 0;
 if ($T_0 >>> 0 < $125 >>> 0) {
  _abort();
 }
 if ($123 >>> 0 < $125 >>> 0) {
  _abort();
 }
 HEAP32[$123 + 12 >> 2] = $115;
 HEAP32[$fd626 >> 2] = $115;
 HEAP32[$p_addr_0 + 8 >> 2] = $123;
 HEAP32[$p_addr_0 + 12 >> 2] = $T_0;
 HEAP32[$p_addr_0 + 24 >> 2] = 0;
 return;
}
function __Znwj($size) {
 $size = $size | 0;
 var $_size = 0, $call = 0, $0 = 0, $exception = 0, label = 0;
 $_size = ($size | 0) == 0 ? 1 : $size;
 while (1) {
  $call = _malloc($_size) | 0;
  if (($call | 0) != 0) {
   label = 16811;
   break;
  }
  $0 = (tempValue = HEAP32[4586] | 0, HEAP32[4586] = tempValue + 0, tempValue);
  if (($0 | 0) == 0) {
   break;
  }
  FUNCTION_TABLE_v[$0 & 1]();
 }
 if ((label | 0) == 16811) {
  return $call | 0;
 }
 $exception = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception >> 2] = 9152;
 ___cxa_throw($exception | 0, 15312, 28);
 return 0;
}
function __Znaj($size) {
 $size = $size | 0;
 return __Znwj($size) | 0;
}
function __ZNSt9bad_allocD2Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this | 0;
 return 2464 | 0;
}
function __ZdlPv($ptr) {
 $ptr = $ptr | 0;
 if (($ptr | 0) == 0) {
  return;
 }
 _free($ptr);
 return;
}
function __ZdaPv($ptr) {
 $ptr = $ptr | 0;
 __ZdlPv($ptr);
 return;
}
function __ZNSt9bad_allocD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}
function _strtod($string, $endPtr) {
 $string = $string | 0;
 $endPtr = $endPtr | 0;
 var $p_0 = 0, $add_ptr = 0, $1 = 0, $sign_0 = 0, $p_2 = 0, $p_3 = 0, $mantSize_0 = 0, $decPt_0 = 0, $2 = 0, $decPt_1 = 0, $add_ptr22 = 0, $cmp23 = 0, $mantSize_1 = 0, $cmp28 = 0, $fracExp_0 = 0, $mantSize_2 = 0, $p_4_lcssa91 = 0, $mantSize_3_lcssa90 = 0, $frac1_0_lcssa89 = 0.0, $frac1_081 = 0, $mantSize_380 = 0, $p_479 = 0, $4 = 0, $add_ptr43 = 0, $p_5 = 0, $c_0_in = 0, $add51 = 0, $sub53 = 0, $frac2_076 = 0, $mantSize_475 = 0, $p_674 = 0, $6 = 0, $add_ptr60 = 0, $p_7 = 0, $c_1_in = 0, $add69 = 0, $sub71 = 0, $frac1_0_lcssa88 = 0.0, $frac2_0_lcssa = 0.0, $add76 = 0.0, $add_ptr86 = 0, $8 = 0, $expSign_0_ph = 0, $p_9_ph = 0, $9 = 0, $10 = 0, $exp_070 = 0, $p_969 = 0, $add108 = 0, $add_ptr109 = 0, $11 = 0, $expSign_1 = 0, $p_10 = 0, $exp_1 = 0, $exp_2 = 0, $exp_3 = 0, $exp_565 = 0, $d_064 = 0, $dblExp_063 = 0.0, $dblExp_1 = 0.0, $shr = 0, $dblExp_0_lcssa = 0.0, $fraction_0 = 0.0, $p_11 = 0, $retval_0 = 0.0, label = 0;
 $p_0 = $string;
 while (1) {
  $add_ptr = $p_0 + 1 | 0;
  if ((_isspace(HEAP8[$p_0] | 0) | 0) == 0) {
   break;
  } else {
   $p_0 = $add_ptr;
  }
 }
 $1 = HEAP8[$p_0] | 0;
 if (($1 << 24 >> 24 | 0) == 43) {
  $p_2 = $add_ptr;
  $sign_0 = 0;
 } else if (($1 << 24 >> 24 | 0) == 45) {
  $p_2 = $add_ptr;
  $sign_0 = 1;
 } else {
  $p_2 = $p_0;
  $sign_0 = 0;
 }
 $decPt_0 = -1;
 $mantSize_0 = 0;
 $p_3 = $p_2;
 while (1) {
  $2 = HEAP8[$p_3] | 0;
  if ((($2 << 24 >> 24) - 48 | 0) >>> 0 < 10) {
   $decPt_1 = $decPt_0;
  } else {
   if ($2 << 24 >> 24 != 46 | ($decPt_0 | 0) > -1) {
    break;
   } else {
    $decPt_1 = $mantSize_0;
   }
  }
  $decPt_0 = $decPt_1;
  $mantSize_0 = $mantSize_0 + 1 | 0;
  $p_3 = $p_3 + 1 | 0;
 }
 $add_ptr22 = $p_3 + (-$mantSize_0 | 0) | 0;
 $cmp23 = ($decPt_0 | 0) < 0;
 $mantSize_1 = (($cmp23 ^ 1) << 31 >> 31) + $mantSize_0 | 0;
 $cmp28 = ($mantSize_1 | 0) > 18;
 $fracExp_0 = ($cmp28 ? -18 : -$mantSize_1 | 0) + ($cmp23 ? $mantSize_0 : $decPt_0) | 0;
 $mantSize_2 = $cmp28 ? 18 : $mantSize_1;
 do {
  if (($mantSize_2 | 0) == 0) {
   $p_11 = $string;
   $fraction_0 = 0.0;
  } else {
   if (($mantSize_2 | 0) > 9) {
    $p_479 = $add_ptr22;
    $mantSize_380 = $mantSize_2;
    $frac1_081 = 0;
    while (1) {
     $4 = HEAP8[$p_479] | 0;
     $add_ptr43 = $p_479 + 1 | 0;
     if ($4 << 24 >> 24 == 46) {
      $c_0_in = HEAP8[$add_ptr43] | 0;
      $p_5 = $p_479 + 2 | 0;
     } else {
      $c_0_in = $4;
      $p_5 = $add_ptr43;
     }
     $add51 = ($frac1_081 * 10 & -1) - 48 + ($c_0_in << 24 >> 24) | 0;
     $sub53 = $mantSize_380 - 1 | 0;
     if (($sub53 | 0) > 9) {
      $p_479 = $p_5;
      $mantSize_380 = $sub53;
      $frac1_081 = $add51;
     } else {
      break;
     }
    }
    $frac1_0_lcssa89 = +($add51 | 0) * 1.0e9;
    $mantSize_3_lcssa90 = 9;
    $p_4_lcssa91 = $p_5;
    label = 16841;
   } else {
    if (($mantSize_2 | 0) > 0) {
     $frac1_0_lcssa89 = 0.0;
     $mantSize_3_lcssa90 = $mantSize_2;
     $p_4_lcssa91 = $add_ptr22;
     label = 16841;
    } else {
     $frac2_0_lcssa = 0.0;
     $frac1_0_lcssa88 = 0.0;
    }
   }
   if ((label | 0) == 16841) {
    $p_674 = $p_4_lcssa91;
    $mantSize_475 = $mantSize_3_lcssa90;
    $frac2_076 = 0;
    while (1) {
     $6 = HEAP8[$p_674] | 0;
     $add_ptr60 = $p_674 + 1 | 0;
     if ($6 << 24 >> 24 == 46) {
      $c_1_in = HEAP8[$add_ptr60] | 0;
      $p_7 = $p_674 + 2 | 0;
     } else {
      $c_1_in = $6;
      $p_7 = $add_ptr60;
     }
     $add69 = ($frac2_076 * 10 & -1) - 48 + ($c_1_in << 24 >> 24) | 0;
     $sub71 = $mantSize_475 - 1 | 0;
     if (($sub71 | 0) > 0) {
      $p_674 = $p_7;
      $mantSize_475 = $sub71;
      $frac2_076 = $add69;
     } else {
      break;
     }
    }
    $frac2_0_lcssa = +($add69 | 0);
    $frac1_0_lcssa88 = $frac1_0_lcssa89;
   }
   $add76 = $frac1_0_lcssa88 + $frac2_0_lcssa;
   do {
    if (($2 << 24 >> 24 | 0) == 69 | ($2 << 24 >> 24 | 0) == 101) {
     $add_ptr86 = $p_3 + 1 | 0;
     $8 = HEAP8[$add_ptr86] | 0;
     if (($8 << 24 >> 24 | 0) == 43) {
      $p_9_ph = $p_3 + 2 | 0;
      $expSign_0_ph = 0;
     } else if (($8 << 24 >> 24 | 0) == 45) {
      $p_9_ph = $p_3 + 2 | 0;
      $expSign_0_ph = 1;
     } else {
      $p_9_ph = $add_ptr86;
      $expSign_0_ph = 0;
     }
     $9 = HEAP8[$p_9_ph] | 0;
     if ((($9 << 24 >> 24) - 48 | 0) >>> 0 < 10) {
      $p_969 = $p_9_ph;
      $exp_070 = 0;
      $10 = $9;
     } else {
      $exp_1 = 0;
      $p_10 = $p_9_ph;
      $expSign_1 = $expSign_0_ph;
      break;
     }
     while (1) {
      $add108 = ($exp_070 * 10 & -1) - 48 + ($10 << 24 >> 24) | 0;
      $add_ptr109 = $p_969 + 1 | 0;
      $11 = HEAP8[$add_ptr109] | 0;
      if ((($11 << 24 >> 24) - 48 | 0) >>> 0 < 10) {
       $p_969 = $add_ptr109;
       $exp_070 = $add108;
       $10 = $11;
      } else {
       $exp_1 = $add108;
       $p_10 = $add_ptr109;
       $expSign_1 = $expSign_0_ph;
       break;
      }
     }
    } else {
     $exp_1 = 0;
     $p_10 = $p_3;
     $expSign_1 = 0;
    }
   } while (0);
   $exp_2 = $fracExp_0 + (($expSign_1 | 0) == 0 ? $exp_1 : -$exp_1 | 0) | 0;
   $exp_3 = ($exp_2 | 0) < 0 ? -$exp_2 | 0 : $exp_2;
   if (($exp_3 | 0) > 511) {
    HEAP32[(___errno_location() | 0) >> 2] = 34;
    $dblExp_063 = 1.0;
    $d_064 = 160;
    $exp_565 = 511;
    label = 16858;
   } else {
    if (($exp_3 | 0) == 0) {
     $dblExp_0_lcssa = 1.0;
    } else {
     $dblExp_063 = 1.0;
     $d_064 = 160;
     $exp_565 = $exp_3;
     label = 16858;
    }
   }
   if ((label | 0) == 16858) {
    while (1) {
     label = 0;
     if (($exp_565 & 1 | 0) == 0) {
      $dblExp_1 = $dblExp_063;
     } else {
      $dblExp_1 = $dblExp_063 * +HEAPF64[$d_064 >> 3];
     }
     $shr = $exp_565 >> 1;
     if (($shr | 0) == 0) {
      $dblExp_0_lcssa = $dblExp_1;
      break;
     } else {
      $dblExp_063 = $dblExp_1;
      $d_064 = $d_064 + 8 | 0;
      $exp_565 = $shr;
      label = 16858;
     }
    }
   }
   if (($exp_2 | 0) > -1) {
    $p_11 = $p_10;
    $fraction_0 = $add76 * $dblExp_0_lcssa;
    break;
   } else {
    $p_11 = $p_10;
    $fraction_0 = $add76 / $dblExp_0_lcssa;
    break;
   }
  }
 } while (0);
 if (($endPtr | 0) != 0) {
  HEAP32[$endPtr >> 2] = $p_11;
 }
 if (($sign_0 | 0) == 0) {
  $retval_0 = $fraction_0;
  return +$retval_0;
 }
 $retval_0 = -0.0 - $fraction_0;
 return +$retval_0;
}
function __ZSt17__throw_bad_allocv() {
 var $exception = 0;
 $exception = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception >> 2] = 9152;
 ___cxa_throw($exception | 0, 15312, 28);
}
function _strlen(ptr) {
 ptr = ptr | 0;
 var curr = 0;
 curr = ptr;
 while (HEAP8[curr] | 0) {
  curr = curr + 1 | 0;
 }
 return curr - ptr | 0;
}
function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 ret = dest | 0;
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if ((num | 0) == 0) return ret | 0;
   HEAP8[dest] = HEAP8[src] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
   num = num - 1 | 0;
  }
  while ((num | 0) >= 4) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
   num = num - 4 | 0;
  }
 }
 while ((num | 0) > 0) {
  HEAP8[dest] = HEAP8[src] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
  num = num - 1 | 0;
 }
 return ret | 0;
}
function _memset(ptr, value, num) {
 ptr = ptr | 0;
 value = value | 0;
 num = num | 0;
 var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
 stop = ptr + num | 0;
 if ((num | 0) >= 20) {
  value = value & 255;
  unaligned = ptr & 3;
  value4 = value | value << 8 | value << 16 | value << 24;
  stop4 = stop & ~3;
  if (unaligned) {
   unaligned = ptr + 4 - unaligned | 0;
   while ((ptr | 0) < (unaligned | 0)) {
    HEAP8[ptr] = value;
    ptr = ptr + 1 | 0;
   }
  }
  while ((ptr | 0) < (stop4 | 0)) {
   HEAP32[ptr >> 2] = value4;
   ptr = ptr + 4 | 0;
  }
 }
 while ((ptr | 0) < (stop | 0)) {
  HEAP8[ptr] = value;
  ptr = ptr + 1 | 0;
 }
}
function _tolower(chr) {
 chr = chr | 0;
 if ((chr | 0) < 65) return chr | 0;
 if ((chr | 0) > 90) return chr | 0;
 return chr - 65 + 97 | 0;
}
function _strncasecmp(px, py, n) {
 px = px | 0;
 py = py | 0;
 n = n | 0;
 var i = 0, x = 0, y = 0;
 while (i >>> 0 < n >>> 0) {
  x = _tolower(HEAP8[px + i | 0] | 0) | 0;
  y = _tolower(HEAP8[py + i | 0] | 0) | 0;
  if ((x | 0) == (y | 0) & (x | 0) == 0) return 0;
  if ((x | 0) == 0) return -1;
  if ((y | 0) == 0) return 1;
  if ((x | 0) == (y | 0)) {
   i = i + 1 | 0;
   continue;
  } else {
   return (x >>> 0 > y >>> 0 ? 1 : -1) | 0;
  }
 }
 return 0;
}
function _strcasecmp(px, py) {
 px = px | 0;
 py = py | 0;
 return _strncasecmp(px, py, -1) | 0;
}
function _memmove(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 if ((src | 0) < (dest | 0) & (dest | 0) < (src + num | 0)) {
  src = src + num | 0;
  dest = dest + num | 0;
  while ((num | 0) > 0) {
   dest = dest - 1 | 0;
   src = src - 1 | 0;
   num = num - 1 | 0;
   HEAP8[dest] = HEAP8[src] | 0;
  }
 } else {
  _memcpy(dest, src, num) | 0;
 }
}
function _strcpy(pdest, psrc) {
 pdest = pdest | 0;
 psrc = psrc | 0;
 var i = 0;
 do {
  HEAP8[pdest + i | 0] = HEAP8[psrc + i | 0];
  i = i + 1 | 0;
 } while (HEAP8[psrc + (i - 1) | 0] | 0);
 return pdest | 0;
}
function _llvm_uadd_with_overflow_i64(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var l = 0, h = 0, overflow = 0;
 l = a + c >>> 0;
 h = b + d >>> 0;
 overflow = h >>> 0 < b >>> 0 | 0;
 if (l >>> 0 < a >>> 0) {
  h = h + 1 >>> 0;
  overflow = overflow | !h;
 }
 return (tempRet0 = h, tempRet1 = overflow, l | 0) | 0;
}
function _i64Add(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var l = 0;
 l = a + c >>> 0;
 return (tempRet0 = b + d + (l >>> 0 < a >>> 0 | 0) >>> 0, l | 0) | 0;
}
function _i64Subtract(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var h = 0;
 h = b - d >>> 0;
 h = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;
 return (tempRet0 = h, a - c >>> 0 | 0) | 0;
}
function _bitshift64Shl(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high << bits | (low & (1 << bits) - 1 << 32 - bits) >>> 32 - bits;
  return low << bits;
 }
 tempRet0 = low << bits - 32;
 return 0;
}
function _bitshift64Lshr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >>> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = 0;
 return high >>> bits - 32 | 0;
}
function _bitshift64Ashr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = (high | 0) < 0 ? -1 : 0;
 return high >> bits - 32 | 0;
}
function _llvm_ctlz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[ctlz_i8 + (x >>> 24) | 0] | 0;
 if ((ret | 0) < 8) return ret | 0;
 ret = HEAP8[ctlz_i8 + (x >> 16 & 255) | 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0;
 ret = HEAP8[ctlz_i8 + (x >> 8 & 255) | 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0;
 return (HEAP8[ctlz_i8 + (x & 255) | 0] | 0) + 24 | 0;
}
function _llvm_cttz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[cttz_i8 + (x & 255) | 0] | 0;
 if ((ret | 0) < 8) return ret | 0;
 ret = HEAP8[cttz_i8 + (x >> 8 & 255) | 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0;
 ret = HEAP8[cttz_i8 + (x >> 16 & 255) | 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0;
 return (HEAP8[cttz_i8 + (x >>> 24) | 0] | 0) + 24 | 0;
}
function ___muldsi3($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
 $1 = $a & 65535;
 $2 = $b & 65535;
 $3 = Math_imul($2, $1) | 0;
 $6 = $a >>> 16;
 $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
 $11 = $b >>> 16;
 $12 = Math_imul($11, $1) | 0;
 return (tempRet0 = ($8 >>> 16) + (Math_imul($11, $6) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, $8 + $12 << 16 | $3 & 65535 | 0) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $7$0 = 0, $7$1 = 0, $10$0 = 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
 $4$1 = tempRet0;
 $7$0 = $2$0 ^ $1$0;
 $7$1 = $2$1 ^ $1$1;
 $10$0 = _i64Subtract((___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0, tempRet0, 0) | 0) ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
 return (tempRet0 = tempRet0, $10$0) | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $rem = __stackBase__ | 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
 $4$1 = tempRet0;
 $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
 ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
 $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
 $10$1 = tempRet0;
 STACKTOP = __stackBase__;
 return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0;
 $x_sroa_0_0_extract_trunc = $a$0;
 $y_sroa_0_0_extract_trunc = $b$0;
 $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
 $1$1 = tempRet0;
 return (tempRet0 = (Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0) + (Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $1$1 | $1$1 & 0, $1$0 & -1 | 0) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0;
 $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
 return (tempRet0 = tempRet0, $1$0) | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $rem = __stackBase__ | 0;
 ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
 STACKTOP = __stackBase__;
 return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 $rem = $rem | 0;
 var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $_0$0 = 0, $_0$1 = 0;
 $n_sroa_0_0_extract_trunc = $a$0;
 $n_sroa_1_4_extract_shift$0 = $a$1;
 $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
 $d_sroa_0_0_extract_trunc = $b$0;
 $d_sroa_1_4_extract_shift$0 = $b$1;
 $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
 if (($n_sroa_1_4_extract_trunc | 0) == 0) {
  $4 = ($rem | 0) != 0;
  if (($d_sroa_1_4_extract_trunc | 0) == 0) {
   if ($4) {
    HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   if (!$4) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 & -1;
   HEAP32[$rem + 4 >> 2] = $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 }
 $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
 do {
  if (($d_sroa_0_0_extract_trunc | 0) == 0) {
   if ($17) {
    if (($rem | 0) != 0) {
     HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
     HEAP32[$rem + 4 >> 2] = 0;
    }
    $_0$1 = 0;
    $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   if (($n_sroa_0_0_extract_trunc | 0) == 0) {
    if (($rem | 0) != 0) {
     HEAP32[$rem >> 2] = 0;
     HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
    }
    $_0$1 = 0;
    $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
   if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
    if (($rem | 0) != 0) {
     HEAP32[$rem >> 2] = $a$0 & -1;
     HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
    }
    $_0$1 = 0;
    $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   $51 = (_llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0) - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   if ($51 >>> 0 <= 30) {
    $57 = $51 + 1 | 0;
    $58 = 31 - $51 | 0;
    $sr_1_ph = $57;
    $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
    $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
    $q_sroa_0_1_ph = 0;
    $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
    break;
   }
   if (($rem | 0) == 0) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 & -1;
   HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   if (!$17) {
    $119 = (_llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0) - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
    if ($119 >>> 0 <= 31) {
     $125 = $119 + 1 | 0;
     $126 = 31 - $119 | 0;
     $130 = $119 - 31 >> 31;
     $sr_1_ph = $125;
     $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
     $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
     $q_sroa_0_1_ph = 0;
     $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
     break;
    }
    if (($rem | 0) == 0) {
     $_0$1 = 0;
     $_0$0 = 0;
     return (tempRet0 = $_0$1, $_0$0) | 0;
    }
    HEAP32[$rem >> 2] = $a$0 & -1;
    HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
   if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
    $88 = (_llvm_ctlz_i32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
    $89 = 64 - $88 | 0;
    $91 = 32 - $88 | 0;
    $92 = $91 >> 31;
    $95 = $88 - 32 | 0;
    $105 = $95 >> 31;
    $sr_1_ph = $88;
    $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
    $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
    $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
    $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
    break;
   }
   if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
    HEAP32[$rem + 4 >> 2] = 0;
   }
   if (($d_sroa_0_0_extract_trunc | 0) == 1) {
    $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
    $_0$0 = $a$0 & -1 | 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   } else {
    $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
    $_0$1 = $n_sroa_1_4_extract_trunc >>> ($78 >>> 0) | 0;
    $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
  }
 } while (0);
 if (($sr_1_ph | 0) == 0) {
  $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
  $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
  $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
  $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = 0;
 } else {
  $d_sroa_0_0_insert_insert99$0 = $b$0 & -1 | 0;
  $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
  $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0, $d_sroa_0_0_insert_insert99$1, -1, -1) | 0;
  $137$1 = tempRet0;
  $q_sroa_1_1198 = $q_sroa_1_1_ph;
  $q_sroa_0_1199 = $q_sroa_0_1_ph;
  $r_sroa_1_1200 = $r_sroa_1_1_ph;
  $r_sroa_0_1201 = $r_sroa_0_1_ph;
  $sr_1202 = $sr_1_ph;
  $carry_0203 = 0;
  while (1) {
   $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
   $149 = $carry_0203 | $q_sroa_0_1199 << 1;
   $r_sroa_0_0_insert_insert42$0 = $r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31 | 0;
   $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
   _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
   $150$1 = tempRet0;
   $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
   $152 = $151$0 & 1;
   $r_sroa_0_0_extract_trunc = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
   $r_sroa_1_4_extract_trunc = tempRet0;
   $155 = $sr_1202 - 1 | 0;
   if (($155 | 0) == 0) {
    break;
   } else {
    $q_sroa_1_1198 = $147;
    $q_sroa_0_1199 = $149;
    $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
    $sr_1202 = $155;
    $carry_0203 = $152;
   }
  }
  $q_sroa_1_1_lcssa = $147;
  $q_sroa_0_1_lcssa = $149;
  $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
  $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = $152;
 }
 $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
 $q_sroa_0_0_insert_ext75$1 = 0;
 if (($rem | 0) != 0) {
  HEAP32[$rem >> 2] = $r_sroa_0_1_lcssa;
  HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa;
 }
 $_0$1 = ($q_sroa_0_0_insert_ext75$0 | 0) >>> 31 | ($q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1) << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
 $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
 return (tempRet0 = $_0$1, $_0$0) | 0;
}
function dynCall_iiiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return FUNCTION_TABLE_iiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}
function dynCall_viiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 FUNCTION_TABLE_viiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}
function dynCall_viiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 FUNCTION_TABLE_viiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}
function dynCall_vi(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 FUNCTION_TABLE_vi[index & 511](a1 | 0);
}
function dynCall_vii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 FUNCTION_TABLE_vii[index & 127](a1 | 0, a2 | 0);
}
function dynCall_iiii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return FUNCTION_TABLE_iiii[index & 63](a1 | 0, a2 | 0, a3 | 0) | 0;
}
function dynCall_ii(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return FUNCTION_TABLE_ii[index & 255](a1 | 0) | 0;
}
function dynCall_viiiiif(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 FUNCTION_TABLE_viiiiif[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6);
}
function dynCall_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 FUNCTION_TABLE_viiiiiii[index & 127](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}
function dynCall_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 FUNCTION_TABLE_viiiiiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0);
}
function dynCall_v(index) {
 index = index | 0;
 FUNCTION_TABLE_v[index & 1]();
}
function dynCall_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return FUNCTION_TABLE_iiiiiiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}
function dynCall_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 FUNCTION_TABLE_viiiiiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0);
}
function dynCall_viiiiiif(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = +a7;
 FUNCTION_TABLE_viiiiiif[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, +a7);
}
function dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 FUNCTION_TABLE_viiiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}
function dynCall_iii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return FUNCTION_TABLE_iii[index & 63](a1 | 0, a2 | 0) | 0;
}
function dynCall_iiiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return FUNCTION_TABLE_iiiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}
function dynCall_viii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 FUNCTION_TABLE_viii[index & 7](a1 | 0, a2 | 0, a3 | 0);
}
function b0(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(0);
 return 0;
}
function b1(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(1);
}
function b2(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(2);
}
function b3(p0) {
 p0 = p0 | 0;
 abort(3);
}
function b4(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(4);
}
function b5(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(5);
 return 0;
}
function b6(p0) {
 p0 = p0 | 0;
 abort(6);
 return 0;
}
function b7(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = +p5;
 abort(7);
}
function b8(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 abort(8);
}
function b9(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 abort(9);
}
function b10() {
 abort(10);
}
function b11(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 abort(11);
 return 0;
}
function b12(p0, p1, p2, p3, p4, p5, p6, p7, p8) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 abort(12);
}
function b13(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = +p6;
 abort(13);
}
function b14(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 abort(14);
}
function b15(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(15);
 return 0;
}
function b16(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(16);
 return 0;
}
function b17(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(17);
}
// EMSCRIPTEN_END_FUNCS
  var FUNCTION_TABLE_iiiii = [b0,b0,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,b0,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,b0,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,b0,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,b0,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,b0,b0,b0,b0,b0];
  var FUNCTION_TABLE_viiii = [b1,b1,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b1,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b1,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI10_mbstate_tEEj,b1,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b1,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI10_mbstate_tEEj,b1,__ZNKSt3__17collateIwE12do_transformEPKwS3_,b1,__ZNKSt3__17collateIcE12do_transformEPKcS3_,b1];
  var FUNCTION_TABLE_viiiii = [b2,b2,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b2,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b2,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b2];
  var FUNCTION_TABLE_vi = [b3,b3,__ZNSt3__18messagesIwED0Ev,b3,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,b3,__ZNSt12length_errorD0Ev,b3,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED1Ev
  ,b3,__ZNSt3__16locale2id6__initEv,b3,__ZNSt3__110__stdinbufIcED1Ev,b3,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,__ZNSt11logic_errorD0Ev
  ,b3,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,__ZNSt3__17collateIcED1Ev,b3,__ZNSt3__18ios_base7failureD2Ev,b3,__ZNSt9bad_allocD2Ev,b3,__ZNSt3__16locale5facetD0Ev
  ,b3,__ZNSt3__15ctypeIcED0Ev,b3,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,b3,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,b3,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,b3,__ZNSt3__18messagesIcED1Ev
  ,b3,__ZNSt3__16locale5facet16__on_zero_sharedEv,b3,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,b3,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,b3,__ZN10ClipperLib7Clipper5ResetEv,b3,__ZNSt3__110moneypunctIwLb0EED0Ev
  ,b3,__ZN10ClipperLib7Clipper5ClearEv,b3,__ZNSt3__16locale5__impD2Ev,b3,__ZTv0_n20_N10ClipperLib7Clipper5ResetEv,b3,__ZNSt3__18numpunctIcED2Ev,b3,__ZNSt3__17codecvtIcc10_mbstate_tED0Ev
  ,b3,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,b3,__ZN10__cxxabiv119__pointer_type_infoD0Ev,b3,__ZNSt3__18numpunctIcED0Ev,b3,__ZNSt3__119__iostream_categoryD1Ev,b3,__ZNSt3__110__stdinbufIwED0Ev
  ,b3,__ZNSt13runtime_errorD2Ev,b3,__ZNSt3__17collateIwED1Ev,b3,__ZNSt3__110moneypunctIcLb0EED1Ev,b3,__ZNSt3__18numpunctIwED2Ev,b3,__ZNSt3__15ctypeIwED0Ev
  ,b3,_free,b3,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,b3,__ZN10ClipperLib11ClipperBaseD2Ev,b3,__ZN10__cxxabiv123__fundamental_type_infoD0Ev
  ,b3,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,b3,__ZNSt3__110__stdinbufIwED1Ev,b3,__ZN10ClipperLib7ClipperD1Ev,b3,__ZNSt3__17collateIwED0Ev,b3,__ZNSt11logic_errorD2Ev
  ,b3,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,b3,__ZN10ClipperLib11ClipperBase5ClearEv,b3,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,b3,__ZNSt3__110moneypunctIwLb0EED1Ev,b3,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
  ,b3,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,b3,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,__ZNSt3__18ios_baseD0Ev,b3,__ZNSt3__110moneypunctIcLb1EED0Ev
  ,b3,__ZNSt9bad_allocD0Ev,b3,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,b3,___cxx_global_array_dtor53,b3,___cxx_global_array_dtor56,b3,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev
  ,b3,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED1Ev,b3,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b3,__ZNSt3__17codecvtIwc10_mbstate_tED0Ev,b3,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,b3,__ZNSt3__17codecvtIDsc10_mbstate_tED0Ev
  ,b3,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,b3,__ZN10ClipperLib16clipperExceptionD0Ev,b3,__ZNSt3__18ios_base7failureD0Ev,b3,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,__ZNSt3__18ios_base4InitD2Ev
  ,b3,__ZNSt3__110moneypunctIwLb1EED0Ev,b3,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,b3,___cxx_global_array_dtor105,b3,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b3,__ZNSt3__17codecvtIDic10_mbstate_tED0Ev
  ,b3,__ZNSt3__111__stdoutbufIcED1Ev,b3,__ZNSt3__16locale5__impD0Ev,b3,__ZTv0_n12_N10ClipperLib7ClipperD0Ev,b3,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,b3,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev
  ,b3,__ZNSt8bad_castD0Ev,b3,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,b3,__ZNSt3__112__do_nothingEPv,b3,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,b3,___cxx_global_array_dtor81
  ,b3,__ZNSt3__110moneypunctIcLb0EED0Ev,b3,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,__ZNSt3__17collateIcED0Ev,b3,__ZNSt3__111__stdoutbufIcED0Ev,b3,__ZNSt3__16locale5facetD2Ev
  ,b3,__Z10signal_FPEi,b3,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,b3,__ZNSt3__112system_errorD0Ev,b3,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev
  ,b3,__ZNSt3__18numpunctIwED0Ev,b3,__ZN10ClipperLib11ClipperBase5ResetEv,b3,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev,b3,__ZNSt8bad_castD2Ev,b3,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev
  ,b3,__ZTv0_n16_N10ClipperLib7Clipper5ClearEv,b3,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,b3,__ZN10ClipperLib16clipperExceptionD1Ev,b3,__ZNSt3__112system_errorD2Ev,b3,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
  ,b3,__ZTv0_n12_N10ClipperLib7ClipperD1Ev,b3,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,b3,__ZNSt3__18messagesIcED0Ev,b3,__ZNSt3__18ios_baseD2Ev,b3,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
  ,b3,__ZNSt3__110__stdinbufIcED0Ev,b3,__ZNSt3__119__iostream_categoryD0Ev,b3,__ZNSt3__110moneypunctIwLb1EED1Ev,b3,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,__ZNSt3__110moneypunctIcLb1EED1Ev
  ,b3,__ZNSt3__111__stdoutbufIwED0Ev,b3,__ZNSt3__17codecvtIwc10_mbstate_tED2Ev,b3,__ZN10ClipperLib7ClipperD0Ev,b3,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,b3,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev
  ,b3,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev,b3,__ZN10ClipperLib11ClipperBaseD0Ev,b3,___cxx_global_array_dtor,b3,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,b3,__ZN10__cxxabiv117__class_type_infoD0Ev
  ,b3,__ZNSt3__18messagesIwED1Ev,b3,__ZNSt3__111__stdoutbufIwED1Ev,b3,__ZN10__cxxabiv116__shim_type_infoD2Ev,b3,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,b3,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev
  ,b3,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,b3,__ZNSt3__15ctypeIcED2Ev,b3,__ZNSt13runtime_errorD0Ev,b3,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,b3,___cxx_global_array_dtor120,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3];
  var FUNCTION_TABLE_vii = [b4,b4,__ZNKSt3__18numpunctIcE12do_falsenameEv,b4,__ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE,b4,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,b4,__ZNKSt3__18numpunctIwE11do_groupingEv,b4,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv
  ,b4,__ZNKSt3__18numpunctIcE11do_groupingEv,b4,__ZNKSt3__18messagesIcE8do_closeEi,b4,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,b4,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,b4,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv
  ,b4,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,b4,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,b4,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,b4,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,b4,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv
  ,b4,__ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE,b4,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,b4,__ZNKSt3__18numpunctIwE11do_truenameEv,b4,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,b4,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv
  ,b4,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,b4,__ZNKSt3__18numpunctIwE12do_falsenameEv,b4,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,b4,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,b4,__ZNKSt3__18numpunctIcE11do_truenameEv
  ,b4,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,b4,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,b4,__ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE,b4,__ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE,b4,__ZNKSt3__18messagesIwE8do_closeEi
  ,b4,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,b4,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,b4,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,b4,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,b4,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,b4,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,b4,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,b4,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4];
  var FUNCTION_TABLE_iiii = [b5,b5,__ZNKSt3__17collateIcE7do_hashEPKcS3_,b5,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,b5,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,b5,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b5,__ZNKSt3__15ctypeIwE9do_narrowEwc
  ,b5,__ZNKSt3__17collateIwE7do_hashEPKwS3_,b5,__ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE,b5,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,b5,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,b5,__ZNKSt3__15ctypeIwE5do_isEtw
  ,b5,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,b5,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,b5,__ZNKSt3__15ctypeIcE9do_narrowEcc,b5,__ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv,b5,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw
  ,b5,__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv,b5,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,b5,__ZNKSt3__114error_category10equivalentERKNS_10error_codeEi,b5,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,b5,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,b5,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,b5,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5];
  var FUNCTION_TABLE_ii = [b6,b6,__ZNKSt3__120__time_get_c_storageIwE3__rEv,b6,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,b6,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,b6,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,b6,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv
  ,b6,__ZNKSt3__120__time_get_c_storageIwE3__cEv,b6,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,b6,__ZNKSt3__17codecvtIwc10_mbstate_tE11do_encodingEv,b6,__ZNKSt3__17codecvtIDsc10_mbstate_tE13do_max_lengthEv,b6,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv
  ,b6,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,b6,__ZNSt3__110__stdinbufIcE5uflowEv,b6,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv,b6,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv,b6,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv
  ,b6,__ZNK10ClipperLib16clipperException4whatEv,b6,__ZNKSt3__120__time_get_c_storageIwE3__xEv,b6,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,b6,__ZNKSt3__17codecvtIDic10_mbstate_tE11do_encodingEv,b6,__ZNKSt8bad_cast4whatEv
  ,b6,__ZNKSt13runtime_error4whatEv,b6,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,b6,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,b6,__ZNKSt3__120__time_get_c_storageIcE3__xEv,b6,__ZNKSt3__17codecvtIDsc10_mbstate_tE16do_always_noconvEv
  ,b6,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,b6,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,b6,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,b6,__ZNKSt3__120__time_get_c_storageIcE3__XEv,b6,__ZNSt3__110__stdinbufIcE9underflowEv
  ,b6,__ZNSt3__111__stdoutbufIwE4syncEv,b6,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,b6,__ZNKSt3__17codecvtIwc10_mbstate_tE16do_always_noconvEv,b6,__ZNKSt3__120__time_get_c_storageIcE3__rEv,b6,__ZNKSt3__17codecvtIDic10_mbstate_tE13do_max_lengthEv
  ,b6,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,b6,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,b6,__ZNSt3__110__stdinbufIwE9underflowEv,b6,__ZNKSt3__17codecvtIDic10_mbstate_tE16do_always_noconvEv,b6,__ZNKSt3__17codecvtIwc10_mbstate_tE13do_max_lengthEv
  ,b6,__ZNKSt3__119__iostream_category4nameEv,b6,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,b6,__ZNSt3__110__stdinbufIwE5uflowEv,b6,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,b6,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv
  ,b6,__ZNSt3__111__stdoutbufIcE4syncEv,b6,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,b6,__ZNKSt3__17codecvtIcc10_mbstate_tE13do_max_lengthEv,b6,__ZNKSt3__17codecvtIcc10_mbstate_tE16do_always_noconvEv,b6,__ZNKSt9bad_alloc4whatEv
  ,b6,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,b6,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,b6,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,b6,__ZNKSt3__17codecvtIcc10_mbstate_tE11do_encodingEv,b6,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv
  ,b6,__ZNKSt11logic_error4whatEv,b6,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,b6,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,b6,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,b6,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,b6,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,b6,__ZNKSt3__120__time_get_c_storageIcE3__cEv,b6,__ZNKSt3__120__time_get_c_storageIwE3__XEv,b6,__ZNKSt3__17codecvtIDsc10_mbstate_tE11do_encodingEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6];
  var FUNCTION_TABLE_viiiiif = [b7,b7,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b7,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,b7,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,b7,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,b7,b7,b7,b7,b7,b7,b7];
  var FUNCTION_TABLE_viiiiiii = [b8,b8,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b8,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,b8,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,b8,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b8,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy
  ,b8,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,b8,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,b8,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,b8,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,b8,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm
  ,b8,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b8,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,b8,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,b8,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,b8,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy
  ,b8,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,b8,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,b8,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,b8,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,b8,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv
  ,b8,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,b8,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,b8,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,b8,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,b8,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd
  ,b8,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,b8,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b8,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,b8,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,b8,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy
  ,b8,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,b8,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,b8,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,b8,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,b8,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,b8,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,b8,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,b8,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8];
  var FUNCTION_TABLE_viiiiiiii = [b9,b9,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,b9,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,b9,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,b9,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,b9,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,b9,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b9,b9,b9];
  var FUNCTION_TABLE_v = [b10,b10];
  var FUNCTION_TABLE_iiiiiiiii = [b11,b11,__ZNKSt3__17codecvtIcc10_mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,b11,__ZNKSt3__17codecvtIwc10_mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,b11,__ZNKSt3__17codecvtIDsc10_mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b11,__ZNKSt3__17codecvtIcc10_mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,b11,__ZNKSt3__17codecvtIDic10_mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,b11,__ZNKSt3__17codecvtIDic10_mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b11,__ZNKSt3__17codecvtIwc10_mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,b11,__ZNKSt3__17codecvtIDsc10_mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11];
  var FUNCTION_TABLE_viiiiiiiii = [b12,b12,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b12,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b12,b12,b12];
  var FUNCTION_TABLE_viiiiiif = [b13,b13,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b13,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,b13,b13,b13];
  var FUNCTION_TABLE_viiiiii = [b14,b14,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b14,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,b14,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,b14,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,b14,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib
  ,b14,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,b14,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b14,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,b14,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,b14,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb
  ,b14,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,b14,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,b14,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b14,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,b14,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,b14];
  var FUNCTION_TABLE_iii = [b15,b15,__ZNKSt3__15ctypeIcE10do_toupperEc,b15,__ZNSt3__110__stdinbufIcE9pbackfailEi,b15,__ZNKSt3__15ctypeIwE8do_widenEc,b15,__ZNKSt3__15ctypeIcE8do_widenEc,b15,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi
  ,b15,__ZNSt3__110__stdinbufIwE9pbackfailEi,b15,__ZNSt3__111__stdoutbufIcE8overflowEi,b15,__Z16cmp_SupportPointPKvS0_,b15,__ZNKSt3__15ctypeIwE10do_toupperEw,b15,__Z15compare_int64_tPKvS0_
  ,b15,__ZNKSt3__15ctypeIcE10do_tolowerEc,b15,__ZN10ClipperLib8PolySortEPNS_6OutRecES1_,b15,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEi,b15,__ZNKSt3__15ctypeIwE10do_tolowerEw,b15,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,b15,__ZNSt3__111__stdoutbufIwE8overflowEi,b15,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEi,b15,__ZN10ClipperLib7Clipper15ExecuteInternalEb,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15];
  var FUNCTION_TABLE_iiiiii = [b16,b16,__ZNKSt3__17codecvtIDsc10_mbstate_tE10do_unshiftERS1_PcS4_RS4_,b16,__ZNKSt3__17codecvtIwc10_mbstate_tE9do_lengthERS1_PKcS5_j,b16,__ZNKSt3__17codecvtIDic10_mbstate_tE9do_lengthERS1_PKcS5_j,b16,__ZNKSt3__17codecvtIcc10_mbstate_tE10do_unshiftERS1_PcS4_RS4_,b16,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc
  ,b16,__ZNKSt3__17codecvtIDsc10_mbstate_tE9do_lengthERS1_PKcS5_j,b16,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,b16,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,b16,__ZNKSt3__17codecvtIcc10_mbstate_tE9do_lengthERS1_PKcS5_j,b16,__ZNKSt3__17codecvtIwc10_mbstate_tE10do_unshiftERS1_PcS4_RS4_,b16,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,b16,__ZNKSt3__17codecvtIDic10_mbstate_tE10do_unshiftERS1_PcS4_RS4_,b16,b16,b16,b16,b16,b16,b16];
  var FUNCTION_TABLE_viii = [b17,b17,__ZNKSt3__114error_category23default_error_conditionEi,b17,__ZNKSt3__119__iostream_category7messageEi,b17,b17,b17];
  return { _strncasecmp: _strncasecmp, _tolower: _tolower, _free: _free, _main: _main, _realloc: _realloc, _memmove: _memmove, __GLOBAL__I_a: __GLOBAL__I_a, _strlen: _strlen, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _strcasecmp: _strcasecmp, _strcpy: _strcpy, _llvm_uadd_with_overflow_i64: _llvm_uadd_with_overflow_i64, __GLOBAL__I_a362: __GLOBAL__I_a362, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, setTempRet1: setTempRet1, setTempRet2: setTempRet2, setTempRet3: setTempRet3, setTempRet4: setTempRet4, setTempRet5: setTempRet5, setTempRet6: setTempRet6, setTempRet7: setTempRet7, setTempRet8: setTempRet8, setTempRet9: setTempRet9, dynCall_iiiii: dynCall_iiiii, dynCall_viiii: dynCall_viiii, dynCall_viiiii: dynCall_viiiii, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiii: dynCall_iiii, dynCall_ii: dynCall_ii, dynCall_viiiiif: dynCall_viiiiif, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_viiiiiiii: dynCall_viiiiiiii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_viiiiiiiii: dynCall_viiiiiiiii, dynCall_viiiiiif: dynCall_viiiiiif, dynCall_viiiiii: dynCall_viiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_viii: dynCall_viii };
})
// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_iiiii": invoke_iiiii, "invoke_viiii": invoke_viiii, "invoke_viiiii": invoke_viiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiii": invoke_iiii, "invoke_ii": invoke_ii, "invoke_viiiiif": invoke_viiiiif, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiif": invoke_viiiiiif, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_viii": invoke_viii, "_llvm_lifetime_end": _llvm_lifetime_end, "_llvm_dbg_value": _llvm_dbg_value, "__scanString": __scanString, "_fclose": _fclose, "_pthread_mutex_lock": _pthread_mutex_lock, "___cxa_end_catch": ___cxa_end_catch, "__isFloat": __isFloat, "_strtoull": _strtoull, "_fflush": _fflush, "_strtol": _strtol, "_fputc": _fputc, "_fwrite": _fwrite, "_send": _send, "_fputs": _fputs, "_llvm_umul_with_overflow_i32": _llvm_umul_with_overflow_i32, "_isspace": _isspace, "_read": _read, "_fsync": _fsync, "_newlocale": _newlocale, "_signal": _signal, "___gxx_personality_v0": ___gxx_personality_v0, "_pthread_cond_wait": _pthread_cond_wait, "___cxa_rethrow": ___cxa_rethrow, "___resumeException": ___resumeException, "_llvm_va_end": _llvm_va_end, "_vsscanf": _vsscanf, "_snprintf": _snprintf, "_fgetc": _fgetc, "_atexit": _atexit, "___cxa_free_exception": ___cxa_free_exception, "_close": _close, "_strchr": _strchr, "___setErrNo": ___setErrNo, "_isxdigit": _isxdigit, "_ftell": _ftell, "_exit": _exit, "_sprintf": _sprintf, "_asprintf": _asprintf, "___ctype_b_loc": ___ctype_b_loc, "_strrchr": _strrchr, "_freelocale": _freelocale, "__Z7catopenPKci": __Z7catopenPKci, "___cxa_is_number_type": ___cxa_is_number_type, "_llvm_uadd_with_overflow_i32": _llvm_uadd_with_overflow_i32, "___cxa_does_inherit": ___cxa_does_inherit, "___locale_mb_cur_max": ___locale_mb_cur_max, "___cxa_begin_catch": ___cxa_begin_catch, "_recv": _recv, "__parseInt64": __parseInt64, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_cos": _cos, "___cxa_call_unexpected": ___cxa_call_unexpected, "__exit": __exit, "_strftime": _strftime, "___cxa_throw": ___cxa_throw, "_llvm_eh_exception": _llvm_eh_exception, "_printf": _printf, "_pread": _pread, "_fopen": _fopen, "_open": _open, "_puts": _puts, "_qsort": _qsort, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "__formatString": __formatString, "_pthread_cond_broadcast": _pthread_cond_broadcast, "__ZSt9terminatev": __ZSt9terminatev, "_gettimeofday": _gettimeofday, "_atoi": _atoi, "_vfprintf": _vfprintf, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_sbrk": _sbrk, "___errno_location": ___errno_location, "_strerror": _strerror, "_llvm_lifetime_start": _llvm_lifetime_start, "__parseInt": __parseInt, "_ungetc": _ungetc, "_vsprintf": _vsprintf, "_uselocale": _uselocale, "_vsnprintf": _vsnprintf, "_sscanf": _sscanf, "_sysconf": _sysconf, "_fread": _fread, "_abort": _abort, "_fprintf": _fprintf, "_isdigit": _isdigit, "_strtoll": _strtoll, "_tan": _tan, "__reallyNegative": __reallyNegative, "_fabs": _fabs, "__Z7catgetsP8_nl_catdiiPKc": __Z7catgetsP8_nl_catdiiPKc, "_sqrt": _sqrt, "_write": _write, "___cxa_allocate_exception": ___cxa_allocate_exception, "_sin": _sin, "__Z8catcloseP8_nl_catd": __Z8catcloseP8_nl_catd, "_vasprintf": _vasprintf, "___ctype_toupper_loc": ___ctype_toupper_loc, "___ctype_tolower_loc": ___ctype_tolower_loc, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_atan2": _atan2, "_time": _time, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "_stdin": _stdin, "__ZTVN10__cxxabiv117__class_type_infoE": __ZTVN10__cxxabiv117__class_type_infoE, "__ZTIc": __ZTIc, "__ZTVN10__cxxabiv120__si_class_type_infoE": __ZTVN10__cxxabiv120__si_class_type_infoE, "_stderr": _stderr, "___fsmu8": ___fsmu8, "_stdout": _stdout, "__ZTVN10__cxxabiv119__pointer_type_infoE": __ZTVN10__cxxabiv119__pointer_type_infoE, "___dso_handle": ___dso_handle }, buffer);
var _strncasecmp = Module["_strncasecmp"] = asm["_strncasecmp"];
var _tolower = Module["_tolower"] = asm["_tolower"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strcasecmp = Module["_strcasecmp"] = asm["_strcasecmp"];
var _strcpy = Module["_strcpy"] = asm["_strcpy"];
var _llvm_uadd_with_overflow_i64 = Module["_llvm_uadd_with_overflow_i64"] = asm["_llvm_uadd_with_overflow_i64"];
var __GLOBAL__I_a362 = Module["__GLOBAL__I_a362"] = asm["__GLOBAL__I_a362"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viiiiif = Module["dynCall_viiiiif"] = asm["dynCall_viiiiif"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiif = Module["dynCall_viiiiiif"] = asm["dynCall_viiiiiif"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };
// TODO: strip out parts of this we do not need
//======= begin closure i64 code =======
// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */
var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };
  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.
    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };
  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.
  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};
  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }
    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };
  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };
  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };
  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };
  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.
  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;
  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);
  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);
  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);
  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);
  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };
  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };
  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (this.isZero()) {
      return '0';
    }
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }
    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);
      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };
  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };
  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };
  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };
  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };
  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };
  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };
  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };
  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }
    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }
    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };
  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };
  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };
  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }
    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);
      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }
      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }
      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };
  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };
  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };
  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };
  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };
  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };
  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };
  //======= begin jsbn =======
  var navigator = { appName: 'Modern Browser' }; // polyfill a little
  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/
  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */
  // Basic JavaScript BN library - subset useful for RSA encryption.
  // Bits per digit
  var dbits;
  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);
  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }
  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }
  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.
  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }
  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;
  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }
  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }
  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }
  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }
  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }
  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }
  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }
  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }
  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }
  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }
  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }
  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }
  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }
  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }
  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }
  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }
  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }
  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }
  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }
  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }
  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;
  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }
  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }
  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }
  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }
  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }
  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;
  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }
  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }
  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }
  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;
  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;
  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);
  // jsbn2 stuff
  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }
  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }
  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }
  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }
  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }
  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }
  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }
  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;
  //======= end jsbn =======
  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();
//======= end closure i64 code =======
// === Auto-generated postamble setup entry stuff ===
Module['callMain'] = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(!Module['preRun'] || Module['preRun'].length == 0, 'cannot call main when preRun functions remain to be called');
  args = args || [];
  ensureInitRuntime();
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);
  var ret;
  var initialStackTop = STACKTOP;
  try {
    ret = Module['_main'](argc, argv, 0);
  }
  catch(e) {
    if (e.name == 'ExitStatus') {
      return e.status;
    } else if (e == 'SimulateInfiniteLoop') {
      Module['noExitRuntime'] = true;
    } else {
      throw e;
    }
  } finally {
    STACKTOP = initialStackTop;
  }
  return ret;
}
function run(args) {
  args = args || Module['arguments'];
  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return 0;
  }
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    var toRun = Module['preRun'];
    Module['preRun'] = [];
    for (var i = toRun.length-1; i >= 0; i--) {
      toRun[i]();
    }
    if (runDependencies > 0) {
      // a preRun added a dependency, run will be called later
      return 0;
    }
  }
  function doRun() {
    ensureInitRuntime();
    preMain();
    var ret = 0;
    calledRun = true;
    if (Module['_main'] && shouldRunNow) {
      ret = Module['callMain'](args);
      if (!Module['noExitRuntime']) {
        exitRuntime();
      }
    }
    if (Module['postRun']) {
      if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
      while (Module['postRun'].length > 0) {
        Module['postRun'].pop()();
      }
    }
    return ret;
  }
  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
    return 0;
  } else {
    return doRun();
  }
}
Module['run'] = Module.run = run;
// {{PRE_RUN_ADDITIONS}}
(function() {
function assert(check, msg) {
  if (!check) throw msg + new Error().stack;
}
Module['FS_createDataFile']('/', 'woltBaseline.stl', [67, 79, 76, 79, 82, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 0, 0, 0, 228, 45, 154, 62, 0, 0, 0, 0, 254, 29, 116, 63, 0, 0, 168, 193, 88, 132, 135, 65, 205, 204, 28, 65, 225, 122, 165, 193, 176, 114, 132, 65, 91, 53, 27, 65, 205, 204, 152, 193, 12, 2, 152, 65, 51, 51, 19, 65, 46, 111, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 154, 153, 81, 193, 197, 32, 128, 191, 51, 51, 243, 63, 51, 51, 91, 193, 197, 32, 128, 191, 51, 51, 115, 64, 46, 111, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 51, 51, 91, 193, 197, 32, 128, 191, 51, 51, 115, 64, 154, 153, 105, 193, 197, 32, 128, 191, 0, 0, 176, 64, 46, 111, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 154, 153, 105, 193, 197, 32, 128, 191, 0, 0, 176, 64, 102, 102, 126, 193, 197, 32, 128, 191, 0, 0, 224, 64, 46, 111, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 102, 102, 126, 193, 197, 32, 128, 191, 0, 0, 224, 64, 51, 51, 139, 193, 197, 32, 128, 191, 205, 204, 4, 65, 46, 111, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 51, 51, 139, 193, 197, 32, 128, 191, 205, 204, 4, 65, 205, 204, 152, 193, 197, 32, 128, 191, 51, 51, 19, 65, 46, 111, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 205, 204, 152, 193, 197, 32, 128, 191, 51, 51, 19, 65, 0, 0, 168, 193, 197, 32, 128, 191, 205, 204, 28, 65, 46, 111, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 0, 0, 168, 193, 197, 32, 128, 191, 205, 204, 28, 65, 0, 0, 184, 193, 197, 32, 128, 191, 127, 106, 30, 65, 46, 111, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 0, 0, 184, 193, 197, 32, 128, 191, 127, 106, 30, 65, 51, 51, 199, 193, 197, 32, 128, 191, 205, 204, 28, 65, 46, 111, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 51, 51, 199, 193, 197, 32, 128, 191, 205, 204, 28, 65, 102, 102, 214, 193, 197, 32, 128, 191, 51, 51, 19, 65, 46, 111, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 102, 102, 214, 193, 197, 32, 128, 191, 51, 51, 19, 65, 0, 0, 228, 193, 197, 32, 128, 191, 205, 204, 4, 65, 46, 111, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 0, 0, 228, 193, 197, 32, 128, 191, 205, 204, 4, 65, 0, 0, 240, 193, 197, 32, 128, 191, 0, 0, 224, 64, 46, 111, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 0, 0, 240, 193, 197, 32, 128, 191, 0, 0, 224, 64, 102, 102, 250, 193, 197, 32, 128, 191, 0, 0, 176, 64, 46, 111, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 102, 102, 250, 193, 197, 32, 128, 191, 0, 0, 176, 64, 205, 204, 0, 194, 197, 32, 128, 191, 51, 51, 115, 64, 46, 111, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 205, 204, 0, 194, 197, 32, 128, 191, 51, 51, 115, 64, 51, 51, 3, 194, 197, 32, 128, 191, 51, 51, 243, 63, 46, 111, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 51, 51, 3, 194, 197, 32, 128, 191, 51, 51, 243, 63, 6, 1, 4, 194, 197, 32, 128, 191, 111, 18, 131, 186, 46, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 166, 155, 247, 193, 117, 147, 152, 63, 111, 18, 131, 186, 0, 0, 232, 193, 119, 190, 127, 63, 111, 18, 131, 186, 6, 1, 4, 194, 197, 32, 128, 191, 111, 18, 131, 186, 46, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 6, 1, 4, 194, 197, 32, 128, 191, 111, 18, 131, 186, 90, 100, 216, 193, 117, 147, 152, 63, 111, 18, 131, 186, 46, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 152, 110, 175, 193, 188, 116, 123, 64, 111, 18, 131, 186, 225, 122, 165, 193, 63, 53, 174, 64, 111, 18, 131, 186, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 46, 111, 4, 117, 34, 63, 0, 217, 69, 191, 0, 0, 0, 0, 80, 141, 187, 193, 10, 215, 43, 64, 210, 9, 30, 65, 0, 0, 184, 193, 74, 44, 67, 64, 127, 106, 30, 65, 80, 141, 187, 193, 10, 215, 43, 64, 12, 2, 160, 65, 30, 14, 131, 165, 127, 63, 0, 0, 0, 0, 5, 43, 87, 61, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 154, 153, 81, 193, 12, 2, 152, 65, 51, 51, 243, 63, 154, 153, 81, 193, 197, 32, 128, 191, 51, 51, 243, 63, 46, 111, 228, 45, 154, 62, 0, 0, 0, 0, 254, 29, 116, 63, 205, 204, 152, 193, 12, 2, 152, 65, 51, 51, 19, 65, 161, 190, 164, 193, 111, 18, 131, 65, 118, 190, 26, 65, 135, 22, 158, 193, 100, 59, 109, 65, 48, 138, 22, 65, 46, 111, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 168, 193, 12, 2, 152, 65, 205, 204, 28, 65, 205, 204, 152, 193, 12, 2, 152, 65, 51, 51, 19, 65, 38, 126, 184, 193, 12, 2, 152, 65, 111, 18, 131, 186, 46, 111, 4, 117, 34, 63, 0, 217, 69, 191, 0, 0, 0, 0, 152, 110, 175, 193, 188, 116, 123, 64, 12, 2, 160, 65, 80, 141, 187, 193, 10, 215, 43, 64, 12, 2, 160, 65, 0, 0, 184, 193, 74, 44, 67, 64, 127, 106, 30, 65, 30, 14, 254, 29, 116, 63, 0, 0, 0, 0, 228, 45, 154, 62, 154, 153, 81, 193, 197, 32, 128, 191, 51, 51, 243, 63, 154, 153, 81, 193, 12, 2, 152, 65, 51, 51, 243, 63, 51, 51, 91, 193, 197, 32, 128, 191, 51, 51, 115, 64, 46, 111, 254, 29, 116, 63, 0, 0, 0, 0, 228, 45, 154, 62, 51, 51, 91, 193, 12, 2, 152, 65, 51, 51, 115, 64, 51, 51, 91, 193, 197, 32, 128, 191, 51, 51, 115, 64, 154, 153, 81, 193, 12, 2, 152, 65, 51, 51, 243, 63, 46, 111, 4, 117, 34, 63, 0, 217, 69, 191, 0, 0, 0, 0, 152, 110, 175, 193, 188, 116, 123, 64, 246, 140, 29, 65, 152, 110, 175, 193, 188, 116, 123, 64, 12, 2, 160, 65, 0, 0, 184, 193, 74, 44, 67, 64, 127, 106, 30, 65, 30, 14, 237, 63, 98, 63, 0, 0, 0, 0, 251, 142, 239, 62, 154, 153, 105, 193, 197, 32, 128, 191, 0, 0, 176, 64, 51, 51, 91, 193, 197, 32, 128, 191, 51, 51, 115, 64, 51, 51, 91, 193, 12, 2, 152, 65, 51, 51, 115, 64, 46, 111, 178, 149, 78, 61, 0, 0, 0, 0, 152, 172, 127, 63, 0, 0, 184, 193, 12, 2, 152, 65, 127, 106, 30, 65, 0, 0, 184, 193, 119, 154, 151, 65, 127, 106, 30, 65, 0, 0, 168, 193, 12, 2, 152, 65, 205, 204, 28, 65, 46, 111, 178, 149, 78, 61, 0, 0, 0, 0, 152, 172, 127, 63, 152, 110, 175, 193, 104, 145, 144, 65, 246, 140, 29, 65, 0, 0, 168, 193, 12, 2, 152, 65, 205, 204, 28, 65, 0, 0, 184, 193, 119, 154, 151, 65, 127, 106, 30, 65, 46, 111, 178, 149, 78, 61, 0, 0, 0, 0, 152, 172, 127, 63, 0, 0, 168, 193, 88, 132, 135, 65, 205, 204, 28, 65, 0, 0, 168, 193, 12, 2, 152, 65, 205, 204, 28, 65, 152, 110, 175, 193, 104, 145, 144, 65, 246, 140, 29, 65, 46, 111, 228, 45, 154, 190, 0, 0, 0, 0, 254, 29, 116, 63, 78, 98, 201, 193, 115, 104, 225, 63, 175, 107, 27, 65, 102, 102, 214, 193, 49, 62, 162, 63, 51, 51, 19, 65, 51, 51, 199, 193, 197, 32, 128, 191, 205, 204, 28, 65, 46, 111, 129, 109, 89, 189, 0, 0, 0, 0, 154, 163, 127, 63, 0, 0, 184, 193, 12, 2, 152, 65, 127, 106, 30, 65, 38, 126, 184, 193, 12, 2, 152, 65, 22, 93, 30, 65, 0, 0, 184, 193, 119, 154, 151, 65, 127, 106, 30, 65, 46, 111, 228, 45, 154, 62, 0, 0, 0, 0, 254, 29, 116, 63, 205, 204, 152, 193, 12, 2, 152, 65, 51, 51, 19, 65, 135, 22, 158, 193, 100, 59, 109, 65, 48, 138, 22, 65, 55, 137, 153, 193, 76, 55, 79, 65, 51, 170, 19, 65, 46, 111, 228, 45, 154, 62, 0, 0, 0, 0, 254, 29, 116, 63, 205, 204, 152, 193, 12, 2, 152, 65, 51, 51, 19, 65, 55, 137, 153, 193, 76, 55, 79, 65, 51, 170, 19, 65, 205, 204, 152, 193, 249, 85, 64, 65, 51, 51, 19, 65, 46, 111, 22, 82, 241, 62, 243, 199, 97, 191, 0, 0, 0, 0, 80, 141, 187, 193, 10, 215, 43, 64, 12, 2, 160, 65, 78, 98, 201, 193, 115, 104, 225, 63, 12, 2, 160, 65, 80, 141, 187, 193, 10, 215, 43, 64, 210, 9, 30, 65, 30, 14, 197, 250, 116, 63, 101, 155, 148, 62, 0, 0, 0, 0, 135, 22, 158, 193, 100, 59, 109, 65, 12, 2, 160, 65, 55, 137, 153, 193, 76, 55, 79, 65, 12, 2, 160, 65, 135, 22, 158, 193, 100, 59, 109, 65, 48, 138, 22, 65, 30, 14, 228, 45, 154, 190, 0, 0, 0, 0, 254, 29, 116, 63, 51, 51, 199, 193, 32, 21, 244, 63, 205, 204, 28, 65, 78, 98, 201, 193, 115, 104, 225, 63, 175, 107, 27, 65, 51, 51, 199, 193, 197, 32, 128, 191, 205, 204, 28, 65, 46, 111, 22, 82, 241, 62, 243, 199, 97, 191, 0, 0, 0, 0, 80, 141, 187, 193, 10, 215, 43, 64, 210, 9, 30, 65, 78, 98, 201, 193, 115, 104, 225, 63, 12, 2, 160, 65, 51, 51, 199, 193, 32, 21, 244, 63, 205, 204, 28, 65, 30, 14, 135, 169, 39, 191, 0, 0, 0, 0, 215, 116, 65, 63, 0, 0, 240, 193, 197, 32, 128, 191, 0, 0, 224, 64, 0, 0, 228, 193, 197, 32, 128, 191, 205, 204, 4, 65, 0, 0, 232, 193, 119, 190, 127, 63, 188, 187, 251, 64, 46, 111, 4, 117, 34, 63, 0, 217, 69, 63, 0, 0, 0, 0, 0, 0, 184, 193, 119, 154, 151, 65, 127, 106, 30, 65, 152, 110, 175, 193, 104, 145, 144, 65, 12, 2, 160, 65, 152, 110, 175, 193, 104, 145, 144, 65, 246, 140, 29, 65, 30, 14, 22, 82, 241, 62, 243, 199, 97, 191, 0, 0, 0, 0, 78, 98, 201, 193, 115, 104, 225, 63, 12, 2, 160, 65, 78, 98, 201, 193, 115, 104, 225, 63, 175, 107, 27, 65, 51, 51, 199, 193, 32, 21, 244, 63, 205, 204, 28, 65, 30, 14, 197, 250, 116, 63, 101, 155, 148, 62, 0, 0, 0, 0, 55, 137, 153, 193, 76, 55, 79, 65, 51, 170, 19, 65, 135, 22, 158, 193, 100, 59, 109, 65, 48, 138, 22, 65, 55, 137, 153, 193, 76, 55, 79, 65, 12, 2, 160, 65, 30, 14, 4, 117, 34, 63, 0, 217, 69, 63, 0, 0, 0, 0, 80, 141, 187, 193, 31, 133, 154, 65, 12, 2, 160, 65, 152, 110, 175, 193, 104, 145, 144, 65, 12, 2, 160, 65, 0, 0, 184, 193, 119, 154, 151, 65, 127, 106, 30, 65, 30, 14, 228, 45, 154, 190, 0, 0, 0, 0, 254, 29, 116, 63, 102, 102, 214, 193, 49, 62, 162, 63, 51, 51, 19, 65, 102, 102, 214, 193, 197, 32, 128, 191, 51, 51, 19, 65, 51, 51, 199, 193, 197, 32, 128, 191, 205, 204, 28, 65, 46, 111, 237, 63, 98, 191, 0, 0, 0, 0, 251, 142, 239, 62, 102, 102, 250, 193, 197, 32, 128, 191, 0, 0, 176, 64, 102, 102, 250, 193, 16, 32, 166, 63, 0, 0, 176, 64, 205, 204, 0, 194, 197, 32, 128, 191, 51, 51, 115, 64, 46, 111, 251, 142, 239, 62, 0, 0, 0, 0, 237, 63, 98, 63, 244, 253, 151, 193, 0, 0, 48, 65, 47, 88, 18, 65, 51, 51, 139, 193, 12, 2, 152, 65, 205, 204, 4, 65, 205, 204, 152, 193, 249, 85, 64, 65, 51, 51, 19, 65, 46, 111, 251, 142, 239, 190, 0, 0, 0, 0, 237, 63, 98, 63, 102, 102, 214, 193, 49, 62, 162, 63, 51, 51, 19, 65, 90, 100, 216, 193, 117, 147, 152, 63, 64, 23, 17, 65, 102, 102, 214, 193, 197, 32, 128, 191, 51, 51, 19, 65, 46, 111, 4, 117, 34, 63, 0, 217, 69, 63, 0, 0, 0, 0, 38, 126, 184, 193, 12, 2, 152, 65, 22, 93, 30, 65, 80, 141, 187, 193, 31, 133, 154, 65, 12, 2, 160, 65, 0, 0, 184, 193, 119, 154, 151, 65, 127, 106, 30, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 244, 253, 151, 193, 0, 0, 48, 65, 111, 18, 131, 186, 0, 0, 80, 193, 12, 2, 152, 65, 111, 18, 131, 186, 46, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 135, 22, 158, 193, 55, 137, 229, 64, 111, 18, 131, 186, 55, 137, 153, 193, 180, 200, 16, 65, 111, 18, 131, 186, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 46, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 80, 193, 12, 2, 152, 65, 111, 18, 131, 186, 244, 253, 151, 193, 0, 0, 48, 65, 111, 18, 131, 186, 55, 137, 153, 193, 76, 55, 79, 65, 111, 18, 131, 186, 46, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 55, 137, 153, 193, 76, 55, 79, 65, 111, 18, 131, 186, 135, 22, 158, 193, 100, 59, 109, 65, 111, 18, 131, 186, 0, 0, 80, 193, 12, 2, 152, 65, 111, 18, 131, 186, 46, 111, 172, 193, 126, 63, 141, 156, 201, 61, 0, 0, 0, 0, 205, 204, 152, 193, 249, 85, 64, 65, 51, 51, 19, 65, 55, 137, 153, 193, 76, 55, 79, 65, 12, 2, 160, 65, 244, 253, 151, 193, 0, 0, 48, 65, 12, 2, 160, 65, 30, 14, 228, 45, 154, 62, 0, 0, 0, 0, 254, 29, 116, 63, 225, 122, 165, 193, 176, 114, 132, 65, 91, 53, 27, 65, 161, 190, 164, 193, 111, 18, 131, 65, 118, 190, 26, 65, 205, 204, 152, 193, 12, 2, 152, 65, 51, 51, 19, 65, 46, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 161, 190, 164, 193, 111, 18, 131, 65, 111, 18, 131, 186, 225, 122, 165, 193, 176, 114, 132, 65, 111, 18, 131, 186, 0, 0, 80, 193, 12, 2, 152, 65, 111, 18, 131, 186, 46, 111, 172, 193, 126, 63, 141, 156, 201, 61, 0, 0, 0, 0, 244, 253, 151, 193, 0, 0, 48, 65, 47, 88, 18, 65, 205, 204, 152, 193, 249, 85, 64, 65, 51, 51, 19, 65, 244, 253, 151, 193, 0, 0, 48, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 38, 126, 184, 193, 12, 2, 152, 65, 111, 18, 131, 186, 0, 0, 80, 193, 12, 2, 152, 65, 111, 18, 131, 186, 152, 110, 175, 193, 104, 145, 144, 65, 111, 18, 131, 186, 46, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 152, 110, 175, 193, 104, 145, 144, 65, 111, 18, 131, 186, 0, 0, 80, 193, 12, 2, 152, 65, 111, 18, 131, 186, 225, 122, 165, 193, 176, 114, 132, 65, 111, 18, 131, 186, 46, 111, 172, 193, 126, 63, 141, 156, 201, 61, 0, 0, 0, 0, 55, 137, 153, 193, 76, 55, 79, 65, 12, 2, 160, 65, 205, 204, 152, 193, 249, 85, 64, 65, 51, 51, 19, 65, 55, 137, 153, 193, 76, 55, 79, 65, 51, 170, 19, 65, 30, 14, 181, 148, 126, 191, 0, 0, 0, 0, 174, 87, 215, 61, 51, 51, 3, 194, 197, 32, 128, 191, 51, 51, 243, 63, 51, 51, 3, 194, 26, 92, 224, 63, 51, 51, 243, 63, 217, 78, 3, 194, 115, 104, 225, 63, 159, 131, 210, 63, 46, 111, 181, 148, 126, 191, 0, 0, 0, 0, 174, 87, 215, 61, 6, 1, 4, 194, 121, 79, 237, 63, 111, 18, 131, 186, 6, 1, 4, 194, 197, 32, 128, 191, 111, 18, 131, 186, 234, 0, 4, 194, 159, 77, 237, 63, 0, 0, 0, 128, 46, 111, 0, 217, 69, 63, 4, 117, 34, 63, 0, 0, 0, 0, 0, 0, 168, 193, 88, 132, 135, 65, 205, 204, 28, 65, 152, 110, 175, 193, 104, 145, 144, 65, 246, 140, 29, 65, 225, 122, 165, 193, 176, 114, 132, 65, 12, 2, 160, 65, 30, 14, 101, 155, 148, 62, 197, 250, 116, 191, 0, 0, 0, 0, 90, 100, 216, 193, 117, 147, 152, 63, 64, 23, 17, 65, 102, 102, 214, 193, 49, 62, 162, 63, 51, 51, 19, 65, 90, 100, 216, 193, 117, 147, 152, 63, 12, 2, 160, 65, 30, 14, 101, 155, 148, 62, 197, 250, 116, 191, 0, 0, 0, 0, 102, 102, 214, 193, 49, 62, 162, 63, 51, 51, 19, 65, 78, 98, 201, 193, 115, 104, 225, 63, 175, 107, 27, 65, 90, 100, 216, 193, 117, 147, 152, 63, 12, 2, 160, 65, 30, 14, 101, 155, 148, 62, 197, 250, 116, 191, 0, 0, 0, 0, 78, 98, 201, 193, 115, 104, 225, 63, 12, 2, 160, 65, 90, 100, 216, 193, 117, 147, 152, 63, 12, 2, 160, 65, 78, 98, 201, 193, 115, 104, 225, 63, 175, 107, 27, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 217, 78, 3, 194, 121, 233, 161, 65, 111, 18, 131, 186, 166, 155, 247, 193, 201, 118, 166, 65, 111, 18, 131, 186, 6, 1, 4, 194, 121, 79, 237, 63, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 166, 155, 247, 193, 201, 118, 166, 65, 111, 18, 131, 186, 0, 0, 232, 193, 12, 2, 168, 65, 111, 18, 131, 186, 6, 1, 4, 194, 121, 79, 237, 63, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 88, 57, 10, 194, 31, 133, 154, 65, 111, 18, 131, 186, 217, 78, 3, 194, 121, 233, 161, 65, 111, 18, 131, 186, 6, 1, 4, 194, 121, 79, 237, 63, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 232, 193, 12, 2, 168, 65, 111, 18, 131, 186, 90, 100, 216, 193, 201, 118, 166, 65, 111, 18, 131, 186, 6, 1, 4, 194, 121, 79, 237, 63, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 217, 78, 3, 194, 115, 104, 225, 63, 111, 18, 131, 186, 6, 1, 4, 194, 121, 79, 237, 63, 111, 18, 131, 186, 90, 100, 216, 193, 201, 118, 166, 65, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 78, 98, 201, 193, 121, 233, 161, 65, 111, 18, 131, 186, 111, 18, 3, 194, 17, 30, 223, 63, 111, 18, 131, 186, 90, 100, 216, 193, 201, 118, 166, 65, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 80, 141, 187, 193, 31, 133, 154, 65, 111, 18, 131, 186, 111, 18, 3, 194, 17, 30, 223, 63, 111, 18, 131, 186, 78, 98, 201, 193, 121, 233, 161, 65, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 38, 126, 184, 193, 12, 2, 152, 65, 111, 18, 131, 186, 111, 18, 3, 194, 17, 30, 223, 63, 111, 18, 131, 186, 80, 141, 187, 193, 31, 133, 154, 65, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 152, 110, 175, 193, 104, 145, 144, 65, 111, 18, 131, 186, 111, 18, 3, 194, 17, 30, 223, 63, 111, 18, 131, 186, 38, 126, 184, 193, 12, 2, 152, 65, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 225, 122, 165, 193, 176, 114, 132, 65, 111, 18, 131, 186, 111, 18, 3, 194, 17, 30, 223, 63, 111, 18, 131, 186, 152, 110, 175, 193, 104, 145, 144, 65, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 161, 190, 164, 193, 111, 18, 131, 65, 111, 18, 131, 186, 111, 18, 3, 194, 17, 30, 223, 63, 111, 18, 131, 186, 225, 122, 165, 193, 176, 114, 132, 65, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 180, 72, 16, 194, 104, 145, 144, 65, 111, 18, 131, 186, 88, 57, 10, 194, 31, 133, 154, 65, 111, 18, 131, 186, 6, 1, 4, 194, 121, 79, 237, 63, 111, 18, 131, 186, 30, 14, 0, 217, 69, 63, 4, 117, 34, 63, 0, 0, 0, 0, 225, 122, 165, 193, 176, 114, 132, 65, 91, 53, 27, 65, 0, 0, 168, 193, 88, 132, 135, 65, 205, 204, 28, 65, 225, 122, 165, 193, 176, 114, 132, 65, 12, 2, 160, 65, 30, 14, 0, 217, 69, 63, 4, 117, 34, 63, 0, 0, 0, 0, 152, 110, 175, 193, 104, 145, 144, 65, 246, 140, 29, 65, 152, 110, 175, 193, 104, 145, 144, 65, 12, 2, 160, 65, 225, 122, 165, 193, 176, 114, 132, 65, 12, 2, 160, 65, 30, 14, 254, 29, 116, 191, 0, 0, 0, 0, 228, 45, 154, 62, 51, 51, 3, 194, 26, 92, 224, 63, 51, 51, 243, 63, 51, 51, 3, 194, 197, 32, 128, 191, 51, 51, 243, 63, 111, 18, 3, 194, 17, 30, 223, 63, 216, 21, 0, 64, 46, 111, 254, 29, 116, 191, 0, 0, 0, 0, 228, 45, 154, 62, 205, 204, 0, 194, 197, 32, 128, 191, 51, 51, 115, 64, 205, 204, 0, 194, 227, 16, 201, 63, 51, 51, 115, 64, 51, 51, 3, 194, 197, 32, 128, 191, 51, 51, 243, 63, 46, 111, 101, 155, 148, 190, 197, 250, 116, 191, 0, 0, 0, 0, 217, 78, 3, 194, 115, 104, 225, 63, 159, 131, 210, 63, 51, 51, 3, 194, 26, 92, 224, 63, 51, 51, 243, 63, 217, 78, 3, 194, 115, 104, 225, 63, 12, 2, 160, 65, 30, 14, 101, 155, 148, 190, 197, 250, 116, 191, 0, 0, 0, 0, 111, 18, 3, 194, 17, 30, 223, 63, 216, 21, 0, 64, 217, 78, 3, 194, 115, 104, 225, 63, 12, 2, 160, 65, 51, 51, 3, 194, 26, 92, 224, 63, 51, 51, 243, 63, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 244, 253, 151, 193, 0, 0, 48, 65, 111, 18, 131, 186, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 55, 137, 153, 193, 180, 200, 16, 65, 111, 18, 131, 186, 46, 111, 251, 142, 239, 190, 0, 0, 0, 0, 237, 63, 98, 63, 0, 0, 228, 193, 197, 32, 128, 191, 205, 204, 4, 65, 102, 102, 214, 193, 197, 32, 128, 191, 51, 51, 19, 65, 0, 0, 228, 193, 255, 51, 134, 63, 205, 204, 4, 65, 46, 111, 251, 142, 239, 190, 0, 0, 0, 0, 237, 63, 98, 63, 90, 100, 216, 193, 117, 147, 152, 63, 64, 23, 17, 65, 0, 0, 228, 193, 255, 51, 134, 63, 205, 204, 4, 65, 102, 102, 214, 193, 197, 32, 128, 191, 51, 51, 19, 65, 46, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 135, 22, 158, 193, 55, 137, 229, 64, 111, 18, 131, 186, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 225, 122, 165, 193, 63, 53, 174, 64, 111, 18, 131, 186, 46, 111, 135, 169, 39, 191, 0, 0, 0, 0, 215, 116, 65, 63, 0, 0, 228, 193, 255, 51, 134, 63, 205, 204, 4, 65, 0, 0, 232, 193, 119, 190, 127, 63, 188, 187, 251, 64, 0, 0, 228, 193, 197, 32, 128, 191, 205, 204, 4, 65, 46, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 152, 110, 175, 193, 188, 116, 123, 64, 111, 18, 131, 186, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 80, 141, 187, 193, 10, 215, 43, 64, 111, 18, 131, 186, 46, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 90, 100, 216, 193, 117, 147, 152, 63, 111, 18, 131, 186, 78, 98, 201, 193, 115, 104, 225, 63, 111, 18, 131, 186, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 46, 111, 22, 82, 241, 190, 243, 199, 97, 191, 0, 0, 0, 0, 88, 57, 10, 194, 10, 215, 43, 64, 12, 2, 160, 65, 88, 57, 10, 194, 10, 215, 43, 64, 111, 18, 131, 186, 217, 78, 3, 194, 115, 104, 225, 63, 159, 131, 210, 63, 30, 14, 22, 82, 241, 190, 243, 199, 97, 191, 0, 0, 0, 0, 217, 78, 3, 194, 115, 104, 225, 63, 12, 2, 160, 65, 88, 57, 10, 194, 10, 215, 43, 64, 12, 2, 160, 65, 217, 78, 3, 194, 115, 104, 225, 63, 159, 131, 210, 63, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 80, 141, 187, 193, 10, 215, 43, 64, 111, 18, 131, 186, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 78, 98, 201, 193, 115, 104, 225, 63, 111, 18, 131, 186, 46, 111, 4, 117, 34, 191, 0, 217, 69, 191, 0, 0, 0, 0, 88, 57, 10, 194, 10, 215, 43, 64, 12, 2, 160, 65, 180, 72, 16, 194, 188, 116, 123, 64, 12, 2, 160, 65, 88, 57, 10, 194, 10, 215, 43, 64, 111, 18, 131, 186, 30, 14, 243, 199, 97, 63, 22, 82, 241, 62, 0, 0, 0, 0, 135, 22, 158, 193, 100, 59, 109, 65, 48, 138, 22, 65, 161, 190, 164, 193, 111, 18, 131, 65, 118, 190, 26, 65, 135, 22, 158, 193, 100, 59, 109, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 232, 193, 119, 190, 127, 63, 111, 18, 131, 186, 90, 100, 216, 193, 117, 147, 152, 63, 111, 18, 131, 186, 6, 1, 4, 194, 197, 32, 128, 191, 111, 18, 131, 186, 46, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 111, 18, 3, 194, 17, 30, 223, 63, 111, 18, 131, 186, 166, 155, 247, 193, 117, 147, 152, 63, 111, 18, 131, 186, 6, 1, 4, 194, 197, 32, 128, 191, 111, 18, 131, 186, 46, 111, 243, 199, 97, 63, 22, 82, 241, 62, 0, 0, 0, 0, 161, 190, 164, 193, 111, 18, 131, 65, 118, 190, 26, 65, 225, 122, 165, 193, 176, 114, 132, 65, 91, 53, 27, 65, 135, 22, 158, 193, 100, 59, 109, 65, 12, 2, 160, 65, 30, 14, 243, 199, 97, 63, 22, 82, 241, 62, 0, 0, 0, 0, 225, 122, 165, 193, 176, 114, 132, 65, 12, 2, 160, 65, 135, 22, 158, 193, 100, 59, 109, 65, 12, 2, 160, 65, 225, 122, 165, 193, 176, 114, 132, 65, 91, 53, 27, 65, 30, 14, 172, 193, 126, 191, 141, 156, 201, 189, 0, 0, 0, 0, 6, 1, 28, 194, 0, 0, 48, 65, 12, 2, 160, 65, 6, 1, 28, 194, 0, 0, 48, 65, 111, 18, 131, 186, 100, 59, 27, 194, 180, 200, 16, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 161, 190, 164, 193, 111, 18, 131, 65, 111, 18, 131, 186, 0, 0, 80, 193, 12, 2, 152, 65, 111, 18, 131, 186, 135, 22, 158, 193, 100, 59, 109, 65, 111, 18, 131, 186, 46, 111, 172, 193, 126, 191, 141, 156, 201, 61, 0, 0, 0, 0, 100, 59, 27, 194, 76, 55, 79, 65, 12, 2, 160, 65, 6, 1, 28, 194, 0, 0, 48, 65, 111, 18, 131, 186, 6, 1, 28, 194, 0, 0, 48, 65, 12, 2, 160, 65, 30, 14, 141, 156, 201, 61, 172, 193, 126, 191, 0, 0, 0, 0, 0, 0, 232, 193, 119, 190, 127, 63, 188, 187, 251, 64, 0, 0, 228, 193, 255, 51, 134, 63, 205, 204, 4, 65, 0, 0, 232, 193, 119, 190, 127, 63, 12, 2, 160, 65, 30, 14, 251, 142, 239, 62, 0, 0, 0, 0, 237, 63, 98, 63, 51, 51, 139, 193, 197, 32, 128, 191, 205, 204, 4, 65, 205, 204, 152, 193, 7, 170, 31, 65, 51, 51, 19, 65, 205, 204, 152, 193, 197, 32, 128, 191, 51, 51, 19, 65, 46, 111, 141, 156, 201, 61, 172, 193, 126, 191, 0, 0, 0, 0, 0, 0, 228, 193, 255, 51, 134, 63, 205, 204, 4, 65, 90, 100, 216, 193, 117, 147, 152, 63, 64, 23, 17, 65, 0, 0, 232, 193, 119, 190, 127, 63, 12, 2, 160, 65, 30, 14, 228, 45, 154, 62, 0, 0, 0, 0, 254, 29, 116, 63, 55, 137, 153, 193, 180, 200, 16, 65, 51, 170, 19, 65, 135, 22, 158, 193, 55, 137, 229, 64, 48, 138, 22, 65, 205, 204, 152, 193, 197, 32, 128, 191, 51, 51, 19, 65, 46, 111, 228, 45, 154, 62, 0, 0, 0, 0, 254, 29, 116, 63, 205, 204, 152, 193, 7, 170, 31, 65, 51, 51, 19, 65, 55, 137, 153, 193, 180, 200, 16, 65, 51, 170, 19, 65, 205, 204, 152, 193, 197, 32, 128, 191, 51, 51, 19, 65, 46, 111, 4, 117, 34, 191, 0, 217, 69, 63, 0, 0, 0, 0, 88, 57, 10, 194, 31, 133, 154, 65, 12, 2, 160, 65, 88, 57, 10, 194, 31, 133, 154, 65, 111, 18, 131, 186, 180, 72, 16, 194, 104, 145, 144, 65, 111, 18, 131, 186, 30, 14, 22, 82, 241, 190, 243, 199, 97, 63, 0, 0, 0, 0, 217, 78, 3, 194, 121, 233, 161, 65, 111, 18, 131, 186, 88, 57, 10, 194, 31, 133, 154, 65, 111, 18, 131, 186, 88, 57, 10, 194, 31, 133, 154, 65, 12, 2, 160, 65, 30, 14, 141, 156, 201, 61, 172, 193, 126, 191, 0, 0, 0, 0, 90, 100, 216, 193, 117, 147, 152, 63, 12, 2, 160, 65, 0, 0, 232, 193, 119, 190, 127, 63, 12, 2, 160, 65, 90, 100, 216, 193, 117, 147, 152, 63, 64, 23, 17, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 217, 78, 3, 194, 115, 104, 225, 63, 111, 18, 131, 186, 90, 100, 216, 193, 201, 118, 166, 65, 111, 18, 131, 186, 111, 18, 3, 194, 17, 30, 223, 63, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 111, 18, 3, 194, 17, 30, 223, 63, 111, 18, 131, 186, 135, 22, 158, 193, 100, 59, 109, 65, 111, 18, 131, 186, 166, 155, 247, 193, 117, 147, 152, 63, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 135, 22, 158, 193, 100, 59, 109, 65, 111, 18, 131, 186, 111, 18, 3, 194, 17, 30, 223, 63, 111, 18, 131, 186, 161, 190, 164, 193, 111, 18, 131, 65, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 55, 137, 153, 193, 76, 55, 79, 65, 111, 18, 131, 186, 166, 155, 247, 193, 117, 147, 152, 63, 111, 18, 131, 186, 135, 22, 158, 193, 100, 59, 109, 65, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 55, 137, 153, 193, 76, 55, 79, 65, 111, 18, 131, 186, 244, 253, 151, 193, 0, 0, 48, 65, 111, 18, 131, 186, 166, 155, 247, 193, 117, 147, 152, 63, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 244, 253, 151, 193, 0, 0, 48, 65, 111, 18, 131, 186, 55, 137, 153, 193, 180, 200, 16, 65, 111, 18, 131, 186, 166, 155, 247, 193, 117, 147, 152, 63, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 232, 193, 119, 190, 127, 63, 111, 18, 131, 186, 166, 155, 247, 193, 117, 147, 152, 63, 111, 18, 131, 186, 55, 137, 153, 193, 180, 200, 16, 65, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 135, 22, 158, 193, 55, 137, 229, 64, 111, 18, 131, 186, 90, 100, 216, 193, 117, 147, 152, 63, 111, 18, 131, 186, 55, 137, 153, 193, 180, 200, 16, 65, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 225, 122, 165, 193, 63, 53, 174, 64, 111, 18, 131, 186, 90, 100, 216, 193, 117, 147, 152, 63, 111, 18, 131, 186, 135, 22, 158, 193, 55, 137, 229, 64, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 152, 110, 175, 193, 188, 116, 123, 64, 111, 18, 131, 186, 90, 100, 216, 193, 117, 147, 152, 63, 111, 18, 131, 186, 225, 122, 165, 193, 63, 53, 174, 64, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 80, 141, 187, 193, 10, 215, 43, 64, 111, 18, 131, 186, 78, 98, 201, 193, 115, 104, 225, 63, 111, 18, 131, 186, 152, 110, 175, 193, 188, 116, 123, 64, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 90, 100, 216, 193, 117, 147, 152, 63, 111, 18, 131, 186, 152, 110, 175, 193, 188, 116, 123, 64, 111, 18, 131, 186, 78, 98, 201, 193, 115, 104, 225, 63, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 232, 193, 119, 190, 127, 63, 111, 18, 131, 186, 55, 137, 153, 193, 180, 200, 16, 65, 111, 18, 131, 186, 90, 100, 216, 193, 117, 147, 152, 63, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 217, 78, 3, 194, 115, 104, 225, 63, 111, 18, 131, 186, 6, 1, 4, 194, 197, 32, 128, 191, 111, 18, 131, 186, 6, 1, 4, 194, 121, 79, 237, 63, 111, 18, 131, 186, 46, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 111, 18, 3, 194, 17, 30, 223, 63, 111, 18, 131, 186, 6, 1, 4, 194, 197, 32, 128, 191, 111, 18, 131, 186, 217, 78, 3, 194, 115, 104, 225, 63, 111, 18, 131, 186, 46, 111, 135, 169, 39, 191, 0, 0, 0, 0, 215, 116, 65, 63, 0, 0, 232, 193, 119, 190, 127, 63, 188, 187, 251, 64, 0, 0, 240, 193, 195, 136, 140, 63, 0, 0, 224, 64, 0, 0, 240, 193, 197, 32, 128, 191, 0, 0, 224, 64, 46, 111, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 51, 51, 139, 193, 12, 2, 152, 65, 205, 204, 4, 65, 102, 102, 126, 193, 12, 2, 152, 65, 0, 0, 224, 64, 38, 126, 184, 193, 12, 2, 152, 65, 111, 18, 131, 186, 46, 111, 172, 193, 126, 63, 141, 156, 201, 189, 0, 0, 0, 0, 55, 137, 153, 193, 180, 200, 16, 65, 12, 2, 160, 65, 205, 204, 152, 193, 7, 170, 31, 65, 51, 51, 19, 65, 244, 253, 151, 193, 0, 0, 48, 65, 12, 2, 160, 65, 30, 14, 101, 155, 148, 62, 197, 250, 116, 63, 0, 0, 0, 0, 78, 98, 201, 193, 121, 233, 161, 65, 12, 2, 160, 65, 78, 98, 201, 193, 121, 233, 161, 65, 111, 18, 131, 186, 90, 100, 216, 193, 201, 118, 166, 65, 111, 18, 131, 186, 30, 14, 215, 116, 65, 191, 0, 0, 0, 0, 135, 169, 39, 63, 102, 102, 250, 193, 197, 32, 128, 191, 0, 0, 176, 64, 0, 0, 240, 193, 197, 32, 128, 191, 0, 0, 224, 64, 166, 155, 247, 193, 117, 147, 152, 63, 219, 226, 188, 64, 46, 111, 215, 116, 65, 191, 0, 0, 0, 0, 135, 169, 39, 63, 0, 0, 240, 193, 195, 136, 140, 63, 0, 0, 224, 64, 166, 155, 247, 193, 117, 147, 152, 63, 219, 226, 188, 64, 0, 0, 240, 193, 197, 32, 128, 191, 0, 0, 224, 64, 46, 111, 172, 193, 126, 63, 141, 156, 201, 189, 0, 0, 0, 0, 244, 253, 151, 193, 0, 0, 48, 65, 47, 88, 18, 65, 244, 253, 151, 193, 0, 0, 48, 65, 12, 2, 160, 65, 205, 204, 152, 193, 7, 170, 31, 65, 51, 51, 19, 65, 30, 14, 22, 82, 241, 62, 243, 199, 97, 63, 0, 0, 0, 0, 78, 98, 201, 193, 121, 233, 161, 65, 111, 18, 131, 186, 78, 98, 201, 193, 121, 233, 161, 65, 12, 2, 160, 65, 80, 141, 187, 193, 31, 133, 154, 65, 111, 18, 131, 186, 30, 14, 22, 82, 241, 62, 243, 199, 97, 63, 0, 0, 0, 0, 80, 141, 187, 193, 31, 133, 154, 65, 12, 2, 160, 65, 80, 141, 187, 193, 31, 133, 154, 65, 111, 18, 131, 186, 78, 98, 201, 193, 121, 233, 161, 65, 12, 2, 160, 65, 30, 14, 172, 193, 126, 63, 141, 156, 201, 189, 0, 0, 0, 0, 55, 137, 153, 193, 180, 200, 16, 65, 12, 2, 160, 65, 55, 137, 153, 193, 180, 200, 16, 65, 51, 170, 19, 65, 205, 204, 152, 193, 7, 170, 31, 65, 51, 51, 19, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 143, 66, 21, 194, 176, 114, 132, 65, 111, 18, 131, 186, 180, 72, 16, 194, 104, 145, 144, 65, 111, 18, 131, 186, 6, 1, 4, 194, 121, 79, 237, 63, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 188, 244, 24, 194, 100, 59, 109, 65, 111, 18, 131, 186, 143, 66, 21, 194, 176, 114, 132, 65, 111, 18, 131, 186, 6, 1, 4, 194, 121, 79, 237, 63, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 100, 59, 27, 194, 76, 55, 79, 65, 111, 18, 131, 186, 188, 244, 24, 194, 100, 59, 109, 65, 111, 18, 131, 186, 6, 1, 4, 194, 121, 79, 237, 63, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 6, 1, 4, 194, 121, 79, 237, 63, 111, 18, 131, 186, 88, 57, 10, 194, 10, 215, 43, 64, 111, 18, 131, 186, 100, 59, 27, 194, 76, 55, 79, 65, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 6, 1, 28, 194, 0, 0, 48, 65, 111, 18, 131, 186, 100, 59, 27, 194, 76, 55, 79, 65, 111, 18, 131, 186, 88, 57, 10, 194, 10, 215, 43, 64, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 180, 72, 16, 194, 188, 116, 123, 64, 111, 18, 131, 186, 100, 59, 27, 194, 180, 200, 16, 65, 111, 18, 131, 186, 88, 57, 10, 194, 10, 215, 43, 64, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 143, 66, 21, 194, 63, 53, 174, 64, 111, 18, 131, 186, 188, 244, 24, 194, 55, 137, 229, 64, 111, 18, 131, 186, 180, 72, 16, 194, 188, 116, 123, 64, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 100, 59, 27, 194, 180, 200, 16, 65, 111, 18, 131, 186, 180, 72, 16, 194, 188, 116, 123, 64, 111, 18, 131, 186, 188, 244, 24, 194, 55, 137, 229, 64, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 6, 1, 28, 194, 0, 0, 48, 65, 111, 18, 131, 186, 88, 57, 10, 194, 10, 215, 43, 64, 111, 18, 131, 186, 100, 59, 27, 194, 180, 200, 16, 65, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 184, 193, 12, 2, 152, 65, 127, 106, 30, 65, 0, 0, 168, 193, 12, 2, 152, 65, 205, 204, 28, 65, 38, 126, 184, 193, 12, 2, 152, 65, 111, 18, 131, 186, 46, 111, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 38, 126, 184, 193, 12, 2, 152, 65, 22, 93, 30, 65, 0, 0, 184, 193, 12, 2, 152, 65, 127, 106, 30, 65, 38, 126, 184, 193, 12, 2, 152, 65, 111, 18, 131, 186, 46, 111, 4, 117, 34, 63, 0, 217, 69, 63, 0, 0, 0, 0, 38, 126, 184, 193, 12, 2, 152, 65, 22, 93, 30, 65, 38, 126, 184, 193, 12, 2, 152, 65, 111, 18, 131, 186, 80, 141, 187, 193, 31, 133, 154, 65, 111, 18, 131, 186, 30, 14, 4, 117, 34, 63, 0, 217, 69, 63, 0, 0, 0, 0, 80, 141, 187, 193, 31, 133, 154, 65, 12, 2, 160, 65, 38, 126, 184, 193, 12, 2, 152, 65, 22, 93, 30, 65, 80, 141, 187, 193, 31, 133, 154, 65, 111, 18, 131, 186, 30, 14, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 51, 51, 91, 193, 12, 2, 152, 65, 51, 51, 115, 64, 154, 153, 81, 193, 12, 2, 152, 65, 51, 51, 243, 63, 38, 126, 184, 193, 12, 2, 152, 65, 111, 18, 131, 186, 46, 111, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 154, 153, 105, 193, 12, 2, 152, 65, 0, 0, 176, 64, 51, 51, 91, 193, 12, 2, 152, 65, 51, 51, 115, 64, 38, 126, 184, 193, 12, 2, 152, 65, 111, 18, 131, 186, 46, 111, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 80, 193, 12, 2, 152, 65, 111, 18, 131, 186, 38, 126, 184, 193, 12, 2, 152, 65, 111, 18, 131, 186, 154, 153, 81, 193, 12, 2, 152, 65, 51, 51, 243, 63, 46, 111, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 102, 102, 126, 193, 12, 2, 152, 65, 0, 0, 224, 64, 154, 153, 105, 193, 12, 2, 152, 65, 0, 0, 176, 64, 38, 126, 184, 193, 12, 2, 152, 65, 111, 18, 131, 186, 46, 111, 228, 45, 154, 62, 0, 0, 0, 0, 254, 29, 116, 63, 135, 22, 158, 193, 55, 137, 229, 64, 48, 138, 22, 65, 225, 122, 165, 193, 63, 53, 174, 64, 91, 53, 27, 65, 205, 204, 152, 193, 197, 32, 128, 191, 51, 51, 19, 65, 46, 111, 131, 165, 127, 63, 0, 0, 0, 0, 5, 43, 87, 61, 0, 0, 80, 193, 197, 32, 128, 191, 111, 18, 131, 186, 0, 0, 80, 193, 12, 2, 152, 65, 111, 18, 131, 186, 154, 153, 81, 193, 12, 2, 152, 65, 51, 51, 243, 63, 46, 111, 181, 148, 126, 191, 0, 0, 0, 0, 174, 87, 215, 61, 51, 51, 3, 194, 197, 32, 128, 191, 51, 51, 243, 63, 217, 78, 3, 194, 115, 104, 225, 63, 159, 131, 210, 63, 6, 1, 4, 194, 197, 32, 128, 191, 111, 18, 131, 186, 46, 111, 181, 148, 126, 191, 0, 0, 0, 0, 174, 87, 215, 61, 234, 0, 4, 194, 159, 77, 237, 63, 0, 0, 0, 128, 6, 1, 4, 194, 197, 32, 128, 191, 111, 18, 131, 186, 217, 78, 3, 194, 115, 104, 225, 63, 159, 131, 210, 63, 46, 111, 22, 82, 241, 190, 243, 199, 97, 191, 0, 0, 0, 0, 6, 1, 4, 194, 121, 79, 237, 63, 111, 18, 131, 186, 234, 0, 4, 194, 159, 77, 237, 63, 0, 0, 0, 128, 88, 57, 10, 194, 10, 215, 43, 64, 111, 18, 131, 186, 30, 14, 237, 63, 98, 63, 0, 0, 0, 0, 251, 142, 239, 62, 154, 153, 105, 193, 12, 2, 152, 65, 0, 0, 176, 64, 154, 153, 105, 193, 197, 32, 128, 191, 0, 0, 176, 64, 51, 51, 91, 193, 12, 2, 152, 65, 51, 51, 115, 64, 46, 111, 22, 82, 241, 190, 243, 199, 97, 191, 0, 0, 0, 0, 234, 0, 4, 194, 159, 77, 237, 63, 0, 0, 0, 128, 217, 78, 3, 194, 115, 104, 225, 63, 159, 131, 210, 63, 88, 57, 10, 194, 10, 215, 43, 64, 111, 18, 131, 186, 30, 14, 215, 116, 65, 63, 0, 0, 0, 0, 135, 169, 39, 63, 154, 153, 105, 193, 197, 32, 128, 191, 0, 0, 176, 64, 154, 153, 105, 193, 12, 2, 152, 65, 0, 0, 176, 64, 102, 102, 126, 193, 197, 32, 128, 191, 0, 0, 224, 64, 46, 111, 215, 116, 65, 63, 0, 0, 0, 0, 135, 169, 39, 63, 102, 102, 126, 193, 12, 2, 152, 65, 0, 0, 224, 64, 102, 102, 126, 193, 197, 32, 128, 191, 0, 0, 224, 64, 154, 153, 105, 193, 12, 2, 152, 65, 0, 0, 176, 64, 46, 111, 4, 117, 34, 191, 0, 217, 69, 191, 0, 0, 0, 0, 88, 57, 10, 194, 10, 215, 43, 64, 111, 18, 131, 186, 180, 72, 16, 194, 188, 116, 123, 64, 12, 2, 160, 65, 180, 72, 16, 194, 188, 116, 123, 64, 111, 18, 131, 186, 30, 14, 197, 250, 116, 63, 101, 155, 148, 190, 0, 0, 0, 0, 55, 137, 153, 193, 180, 200, 16, 65, 12, 2, 160, 65, 135, 22, 158, 193, 55, 137, 229, 64, 12, 2, 160, 65, 135, 22, 158, 193, 55, 137, 229, 64, 48, 138, 22, 65, 30, 14, 135, 169, 39, 63, 0, 0, 0, 0, 215, 116, 65, 63, 102, 102, 126, 193, 12, 2, 152, 65, 0, 0, 224, 64, 51, 51, 139, 193, 12, 2, 152, 65, 205, 204, 4, 65, 51, 51, 139, 193, 197, 32, 128, 191, 205, 204, 4, 65, 46, 111, 135, 169, 39, 63, 0, 0, 0, 0, 215, 116, 65, 63, 102, 102, 126, 193, 12, 2, 152, 65, 0, 0, 224, 64, 51, 51, 139, 193, 197, 32, 128, 191, 205, 204, 4, 65, 102, 102, 126, 193, 197, 32, 128, 191, 0, 0, 224, 64, 46, 111, 0, 217, 69, 191, 4, 117, 34, 191, 0, 0, 0, 0, 180, 72, 16, 194, 188, 116, 123, 64, 111, 18, 131, 186, 180, 72, 16, 194, 188, 116, 123, 64, 12, 2, 160, 65, 143, 66, 21, 194, 63, 53, 174, 64, 111, 18, 131, 186, 30, 14, 0, 217, 69, 191, 4, 117, 34, 191, 0, 0, 0, 0, 143, 66, 21, 194, 63, 53, 174, 64, 12, 2, 160, 65, 143, 66, 21, 194, 63, 53, 174, 64, 111, 18, 131, 186, 180, 72, 16, 194, 188, 116, 123, 64, 12, 2, 160, 65, 30, 14, 141, 156, 201, 189, 172, 193, 126, 191, 0, 0, 0, 0, 166, 155, 247, 193, 117, 147, 152, 63, 219, 226, 188, 64, 0, 0, 240, 193, 195, 136, 140, 63, 0, 0, 224, 64, 166, 155, 247, 193, 117, 147, 152, 63, 12, 2, 160, 65, 30, 14, 243, 199, 97, 191, 22, 82, 241, 190, 0, 0, 0, 0, 188, 244, 24, 194, 55, 137, 229, 64, 12, 2, 160, 65, 188, 244, 24, 194, 55, 137, 229, 64, 111, 18, 131, 186, 143, 66, 21, 194, 63, 53, 174, 64, 111, 18, 131, 186, 30, 14, 243, 199, 97, 191, 22, 82, 241, 190, 0, 0, 0, 0, 188, 244, 24, 194, 55, 137, 229, 64, 12, 2, 160, 65, 143, 66, 21, 194, 63, 53, 174, 64, 111, 18, 131, 186, 143, 66, 21, 194, 63, 53, 174, 64, 12, 2, 160, 65, 30, 14, 197, 250, 116, 191, 101, 155, 148, 190, 0, 0, 0, 0, 188, 244, 24, 194, 55, 137, 229, 64, 111, 18, 131, 186, 188, 244, 24, 194, 55, 137, 229, 64, 12, 2, 160, 65, 100, 59, 27, 194, 180, 200, 16, 65, 111, 18, 131, 186, 30, 14, 197, 250, 116, 191, 101, 155, 148, 190, 0, 0, 0, 0, 100, 59, 27, 194, 180, 200, 16, 65, 12, 2, 160, 65, 100, 59, 27, 194, 180, 200, 16, 65, 111, 18, 131, 186, 188, 244, 24, 194, 55, 137, 229, 64, 12, 2, 160, 65, 30, 14, 172, 193, 126, 191, 141, 156, 201, 189, 0, 0, 0, 0, 6, 1, 28, 194, 0, 0, 48, 65, 111, 18, 131, 186, 100, 59, 27, 194, 180, 200, 16, 65, 111, 18, 131, 186, 100, 59, 27, 194, 180, 200, 16, 65, 12, 2, 160, 65, 30, 14, 251, 142, 239, 62, 0, 0, 0, 0, 237, 63, 98, 63, 51, 51, 139, 193, 12, 2, 152, 65, 205, 204, 4, 65, 205, 204, 152, 193, 12, 2, 152, 65, 51, 51, 19, 65, 205, 204, 152, 193, 249, 85, 64, 65, 51, 51, 19, 65, 46, 111, 251, 142, 239, 62, 0, 0, 0, 0, 237, 63, 98, 63, 244, 253, 151, 193, 0, 0, 48, 65, 47, 88, 18, 65, 205, 204, 152, 193, 7, 170, 31, 65, 51, 51, 19, 65, 51, 51, 139, 193, 197, 32, 128, 191, 205, 204, 4, 65, 46, 111, 251, 142, 239, 62, 0, 0, 0, 0, 237, 63, 98, 63, 51, 51, 139, 193, 12, 2, 152, 65, 205, 204, 4, 65, 244, 253, 151, 193, 0, 0, 48, 65, 47, 88, 18, 65, 51, 51, 139, 193, 197, 32, 128, 191, 205, 204, 4, 65, 46, 111, 172, 193, 126, 191, 141, 156, 201, 61, 0, 0, 0, 0, 100, 59, 27, 194, 76, 55, 79, 65, 12, 2, 160, 65, 100, 59, 27, 194, 76, 55, 79, 65, 111, 18, 131, 186, 6, 1, 28, 194, 0, 0, 48, 65, 111, 18, 131, 186, 30, 14, 197, 250, 116, 191, 101, 155, 148, 62, 0, 0, 0, 0, 188, 244, 24, 194, 100, 59, 109, 65, 12, 2, 160, 65, 188, 244, 24, 194, 100, 59, 109, 65, 111, 18, 131, 186, 100, 59, 27, 194, 76, 55, 79, 65, 111, 18, 131, 186, 30, 14, 197, 250, 116, 191, 101, 155, 148, 62, 0, 0, 0, 0, 188, 244, 24, 194, 100, 59, 109, 65, 12, 2, 160, 65, 100, 59, 27, 194, 76, 55, 79, 65, 111, 18, 131, 186, 100, 59, 27, 194, 76, 55, 79, 65, 12, 2, 160, 65, 30, 14, 197, 250, 116, 63, 101, 155, 148, 190, 0, 0, 0, 0, 55, 137, 153, 193, 180, 200, 16, 65, 12, 2, 160, 65, 135, 22, 158, 193, 55, 137, 229, 64, 48, 138, 22, 65, 55, 137, 153, 193, 180, 200, 16, 65, 51, 170, 19, 65, 30, 14, 228, 45, 154, 62, 0, 0, 0, 0, 254, 29, 116, 63, 0, 0, 168, 193, 197, 32, 128, 191, 205, 204, 28, 65, 205, 204, 152, 193, 197, 32, 128, 191, 51, 51, 19, 65, 0, 0, 168, 193, 159, 238, 161, 64, 205, 204, 28, 65, 46, 111, 228, 45, 154, 62, 0, 0, 0, 0, 254, 29, 116, 63, 225, 122, 165, 193, 63, 53, 174, 64, 91, 53, 27, 65, 0, 0, 168, 193, 159, 238, 161, 64, 205, 204, 28, 65, 205, 204, 152, 193, 197, 32, 128, 191, 51, 51, 19, 65, 46, 111, 141, 156, 201, 189, 172, 193, 126, 191, 0, 0, 0, 0, 0, 0, 232, 193, 119, 190, 127, 63, 12, 2, 160, 65, 166, 155, 247, 193, 117, 147, 152, 63, 12, 2, 160, 65, 0, 0, 232, 193, 119, 190, 127, 63, 188, 187, 251, 64, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 152, 110, 175, 193, 104, 145, 144, 65, 12, 2, 160, 65, 78, 98, 201, 193, 121, 233, 161, 65, 12, 2, 160, 65, 225, 122, 165, 193, 176, 114, 132, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 80, 141, 187, 193, 31, 133, 154, 65, 12, 2, 160, 65, 78, 98, 201, 193, 121, 233, 161, 65, 12, 2, 160, 65, 152, 110, 175, 193, 104, 145, 144, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 135, 22, 158, 193, 100, 59, 109, 65, 12, 2, 160, 65, 225, 122, 165, 193, 176, 114, 132, 65, 12, 2, 160, 65, 78, 98, 201, 193, 121, 233, 161, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 135, 22, 158, 193, 100, 59, 109, 65, 12, 2, 160, 65, 78, 98, 201, 193, 121, 233, 161, 65, 12, 2, 160, 65, 90, 100, 216, 193, 201, 118, 166, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 135, 22, 158, 193, 100, 59, 109, 65, 12, 2, 160, 65, 90, 100, 216, 193, 201, 118, 166, 65, 12, 2, 160, 65, 0, 0, 232, 193, 12, 2, 168, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 135, 22, 158, 193, 100, 59, 109, 65, 12, 2, 160, 65, 0, 0, 232, 193, 12, 2, 168, 65, 12, 2, 160, 65, 166, 155, 247, 193, 201, 118, 166, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 135, 22, 158, 193, 100, 59, 109, 65, 12, 2, 160, 65, 166, 155, 247, 193, 201, 118, 166, 65, 12, 2, 160, 65, 217, 78, 3, 194, 121, 233, 161, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 135, 22, 158, 193, 100, 59, 109, 65, 12, 2, 160, 65, 217, 78, 3, 194, 121, 233, 161, 65, 12, 2, 160, 65, 88, 57, 10, 194, 31, 133, 154, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 188, 244, 24, 194, 100, 59, 109, 65, 12, 2, 160, 65, 180, 72, 16, 194, 188, 116, 123, 64, 12, 2, 160, 65, 143, 66, 21, 194, 176, 114, 132, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 135, 22, 158, 193, 100, 59, 109, 65, 12, 2, 160, 65, 88, 57, 10, 194, 31, 133, 154, 65, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 30, 14, 178, 149, 78, 61, 0, 0, 0, 0, 152, 172, 127, 63, 0, 0, 184, 193, 197, 32, 128, 191, 127, 106, 30, 65, 0, 0, 168, 193, 197, 32, 128, 191, 205, 204, 28, 65, 0, 0, 184, 193, 74, 44, 67, 64, 127, 106, 30, 65, 46, 111, 178, 149, 78, 61, 0, 0, 0, 0, 152, 172, 127, 63, 0, 0, 168, 193, 159, 238, 161, 64, 205, 204, 28, 65, 152, 110, 175, 193, 188, 116, 123, 64, 246, 140, 29, 65, 0, 0, 168, 193, 197, 32, 128, 191, 205, 204, 28, 65, 46, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 55, 137, 153, 193, 76, 55, 79, 65, 12, 2, 160, 65, 135, 22, 158, 193, 100, 59, 109, 65, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 244, 253, 151, 193, 0, 0, 48, 65, 12, 2, 160, 65, 55, 137, 153, 193, 76, 55, 79, 65, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 217, 78, 3, 194, 115, 104, 225, 63, 12, 2, 160, 65, 166, 155, 247, 193, 117, 147, 152, 63, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 166, 155, 247, 193, 117, 147, 152, 63, 12, 2, 160, 65, 0, 0, 232, 193, 119, 190, 127, 63, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 232, 193, 119, 190, 127, 63, 12, 2, 160, 65, 90, 100, 216, 193, 117, 147, 152, 63, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 90, 100, 216, 193, 117, 147, 152, 63, 12, 2, 160, 65, 78, 98, 201, 193, 115, 104, 225, 63, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 78, 98, 201, 193, 115, 104, 225, 63, 12, 2, 160, 65, 80, 141, 187, 193, 10, 215, 43, 64, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0].concat([0, 0, 0, 0, 128, 63, 80, 141, 187, 193, 10, 215, 43, 64, 12, 2, 160, 65, 152, 110, 175, 193, 188, 116, 123, 64, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 152, 110, 175, 193, 188, 116, 123, 64, 12, 2, 160, 65, 225, 122, 165, 193, 63, 53, 174, 64, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 135, 22, 158, 193, 55, 137, 229, 64, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 225, 122, 165, 193, 63, 53, 174, 64, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 55, 137, 153, 193, 180, 200, 16, 65, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 135, 22, 158, 193, 55, 137, 229, 64, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 244, 253, 151, 193, 0, 0, 48, 65, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 55, 137, 153, 193, 180, 200, 16, 65, 12, 2, 160, 65, 30, 14, 141, 156, 201, 189, 172, 193, 126, 191, 0, 0, 0, 0, 0, 0, 232, 193, 119, 190, 127, 63, 188, 187, 251, 64, 166, 155, 247, 193, 117, 147, 152, 63, 12, 2, 160, 65, 0, 0, 240, 193, 195, 136, 140, 63, 0, 0, 224, 64, 30, 14, 243, 199, 97, 63, 22, 82, 241, 190, 0, 0, 0, 0, 225, 122, 165, 193, 63, 53, 174, 64, 12, 2, 160, 65, 225, 122, 165, 193, 63, 53, 174, 64, 91, 53, 27, 65, 135, 22, 158, 193, 55, 137, 229, 64, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 6, 1, 28, 194, 0, 0, 48, 65, 12, 2, 160, 65, 100, 59, 27, 194, 180, 200, 16, 65, 12, 2, 160, 65, 100, 59, 27, 194, 76, 55, 79, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 100, 59, 27, 194, 180, 200, 16, 65, 12, 2, 160, 65, 188, 244, 24, 194, 55, 137, 229, 64, 12, 2, 160, 65, 100, 59, 27, 194, 76, 55, 79, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 188, 244, 24, 194, 100, 59, 109, 65, 12, 2, 160, 65, 100, 59, 27, 194, 76, 55, 79, 65, 12, 2, 160, 65, 188, 244, 24, 194, 55, 137, 229, 64, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 188, 244, 24, 194, 100, 59, 109, 65, 12, 2, 160, 65, 188, 244, 24, 194, 55, 137, 229, 64, 12, 2, 160, 65, 143, 66, 21, 194, 63, 53, 174, 64, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 188, 244, 24, 194, 100, 59, 109, 65, 12, 2, 160, 65, 143, 66, 21, 194, 63, 53, 174, 64, 12, 2, 160, 65, 180, 72, 16, 194, 188, 116, 123, 64, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 88, 57, 10, 194, 10, 215, 43, 64, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 180, 72, 16, 194, 188, 116, 123, 64, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 217, 78, 3, 194, 115, 104, 225, 63, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 88, 57, 10, 194, 10, 215, 43, 64, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 143, 66, 21, 194, 176, 114, 132, 65, 12, 2, 160, 65, 180, 72, 16, 194, 188, 116, 123, 64, 12, 2, 160, 65, 30, 14, 215, 116, 65, 191, 0, 0, 0, 0, 135, 169, 39, 63, 166, 155, 247, 193, 117, 147, 152, 63, 219, 226, 188, 64, 102, 102, 250, 193, 16, 32, 166, 63, 0, 0, 176, 64, 102, 102, 250, 193, 197, 32, 128, 191, 0, 0, 176, 64, 46, 111, 243, 199, 97, 63, 22, 82, 241, 190, 0, 0, 0, 0, 135, 22, 158, 193, 55, 137, 229, 64, 48, 138, 22, 65, 135, 22, 158, 193, 55, 137, 229, 64, 12, 2, 160, 65, 225, 122, 165, 193, 63, 53, 174, 64, 91, 53, 27, 65, 30, 14, 243, 199, 97, 191, 22, 82, 241, 62, 0, 0, 0, 0, 143, 66, 21, 194, 176, 114, 132, 65, 111, 18, 131, 186, 188, 244, 24, 194, 100, 59, 109, 65, 111, 18, 131, 186, 188, 244, 24, 194, 100, 59, 109, 65, 12, 2, 160, 65, 30, 14, 243, 199, 97, 191, 22, 82, 241, 62, 0, 0, 0, 0, 143, 66, 21, 194, 176, 114, 132, 65, 12, 2, 160, 65, 143, 66, 21, 194, 176, 114, 132, 65, 111, 18, 131, 186, 188, 244, 24, 194, 100, 59, 109, 65, 12, 2, 160, 65, 30, 14, 237, 63, 98, 191, 0, 0, 0, 0, 251, 142, 239, 62, 102, 102, 250, 193, 16, 32, 166, 63, 0, 0, 176, 64, 205, 204, 0, 194, 227, 16, 201, 63, 51, 51, 115, 64, 205, 204, 0, 194, 197, 32, 128, 191, 51, 51, 115, 64, 46, 111, 0, 217, 69, 191, 4, 117, 34, 63, 0, 0, 0, 0, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 111, 18, 131, 186, 143, 66, 21, 194, 176, 114, 132, 65, 111, 18, 131, 186, 30, 14, 0, 217, 69, 191, 4, 117, 34, 63, 0, 0, 0, 0, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 143, 66, 21, 194, 176, 114, 132, 65, 111, 18, 131, 186, 143, 66, 21, 194, 176, 114, 132, 65, 12, 2, 160, 65, 30, 14, 178, 149, 78, 61, 0, 0, 0, 0, 152, 172, 127, 63, 152, 110, 175, 193, 188, 116, 123, 64, 246, 140, 29, 65, 0, 0, 184, 193, 74, 44, 67, 64, 127, 106, 30, 65, 0, 0, 168, 193, 197, 32, 128, 191, 205, 204, 28, 65, 46, 111, 4, 117, 34, 191, 0, 217, 69, 63, 0, 0, 0, 0, 88, 57, 10, 194, 31, 133, 154, 65, 12, 2, 160, 65, 180, 72, 16, 194, 104, 145, 144, 65, 111, 18, 131, 186, 180, 72, 16, 194, 104, 145, 144, 65, 12, 2, 160, 65, 30, 14, 254, 29, 116, 191, 0, 0, 0, 0, 228, 45, 154, 62, 111, 18, 3, 194, 17, 30, 223, 63, 216, 21, 0, 64, 51, 51, 3, 194, 197, 32, 128, 191, 51, 51, 243, 63, 205, 204, 0, 194, 227, 16, 201, 63, 51, 51, 115, 64, 46, 111, 129, 109, 89, 189, 0, 0, 0, 0, 154, 163, 127, 63, 0, 0, 184, 193, 74, 44, 67, 64, 127, 106, 30, 65, 80, 141, 187, 193, 10, 215, 43, 64, 210, 9, 30, 65, 0, 0, 184, 193, 197, 32, 128, 191, 127, 106, 30, 65, 46, 111, 22, 82, 241, 190, 243, 199, 97, 63, 0, 0, 0, 0, 217, 78, 3, 194, 121, 233, 161, 65, 12, 2, 160, 65, 217, 78, 3, 194, 121, 233, 161, 65, 111, 18, 131, 186, 88, 57, 10, 194, 31, 133, 154, 65, 12, 2, 160, 65, 30, 14, 101, 155, 148, 190, 197, 250, 116, 63, 0, 0, 0, 0, 217, 78, 3, 194, 121, 233, 161, 65, 111, 18, 131, 186, 217, 78, 3, 194, 121, 233, 161, 65, 12, 2, 160, 65, 166, 155, 247, 193, 201, 118, 166, 65, 111, 18, 131, 186, 30, 14, 101, 155, 148, 190, 197, 250, 116, 63, 0, 0, 0, 0, 166, 155, 247, 193, 201, 118, 166, 65, 12, 2, 160, 65, 166, 155, 247, 193, 201, 118, 166, 65, 111, 18, 131, 186, 217, 78, 3, 194, 121, 233, 161, 65, 12, 2, 160, 65, 30, 14, 0, 217, 69, 63, 4, 117, 34, 191, 0, 0, 0, 0, 152, 110, 175, 193, 188, 116, 123, 64, 246, 140, 29, 65, 225, 122, 165, 193, 63, 53, 174, 64, 12, 2, 160, 65, 152, 110, 175, 193, 188, 116, 123, 64, 12, 2, 160, 65, 30, 14, 141, 156, 201, 189, 172, 193, 126, 63, 0, 0, 0, 0, 0, 0, 232, 193, 12, 2, 168, 65, 12, 2, 160, 65, 0, 0, 232, 193, 12, 2, 168, 65, 111, 18, 131, 186, 166, 155, 247, 193, 201, 118, 166, 65, 111, 18, 131, 186, 30, 14, 141, 156, 201, 189, 172, 193, 126, 63, 0, 0, 0, 0, 0, 0, 232, 193, 12, 2, 168, 65, 12, 2, 160, 65, 166, 155, 247, 193, 201, 118, 166, 65, 111, 18, 131, 186, 166, 155, 247, 193, 201, 118, 166, 65, 12, 2, 160, 65, 30, 14, 101, 155, 148, 190, 197, 250, 116, 191, 0, 0, 0, 0, 166, 155, 247, 193, 117, 147, 152, 63, 12, 2, 160, 65, 217, 78, 3, 194, 115, 104, 225, 63, 12, 2, 160, 65, 166, 155, 247, 193, 117, 147, 152, 63, 219, 226, 188, 64, 30, 14, 141, 156, 201, 61, 172, 193, 126, 63, 0, 0, 0, 0, 0, 0, 232, 193, 12, 2, 168, 65, 111, 18, 131, 186, 0, 0, 232, 193, 12, 2, 168, 65, 12, 2, 160, 65, 90, 100, 216, 193, 201, 118, 166, 65, 111, 18, 131, 186, 30, 14, 141, 156, 201, 61, 172, 193, 126, 63, 0, 0, 0, 0, 90, 100, 216, 193, 201, 118, 166, 65, 12, 2, 160, 65, 90, 100, 216, 193, 201, 118, 166, 65, 111, 18, 131, 186, 0, 0, 232, 193, 12, 2, 168, 65, 12, 2, 160, 65, 30, 14, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 205, 204, 152, 193, 12, 2, 152, 65, 51, 51, 19, 65, 51, 51, 139, 193, 12, 2, 152, 65, 205, 204, 4, 65, 38, 126, 184, 193, 12, 2, 152, 65, 111, 18, 131, 186, 46, 111, 0, 217, 69, 63, 4, 117, 34, 191, 0, 0, 0, 0, 0, 0, 168, 193, 159, 238, 161, 64, 205, 204, 28, 65, 225, 122, 165, 193, 63, 53, 174, 64, 12, 2, 160, 65, 152, 110, 175, 193, 188, 116, 123, 64, 246, 140, 29, 65, 30, 14, 0, 217, 69, 63, 4, 117, 34, 191, 0, 0, 0, 0, 225, 122, 165, 193, 63, 53, 174, 64, 12, 2, 160, 65, 0, 0, 168, 193, 159, 238, 161, 64, 205, 204, 28, 65, 225, 122, 165, 193, 63, 53, 174, 64, 91, 53, 27, 65, 30, 14, 228, 45, 154, 62, 0, 0, 0, 0, 254, 29, 116, 63, 0, 0, 168, 193, 12, 2, 152, 65, 205, 204, 28, 65, 0, 0, 168, 193, 88, 132, 135, 65, 205, 204, 28, 65, 205, 204, 152, 193, 12, 2, 152, 65, 51, 51, 19, 65, 46, 111, 101, 155, 148, 62, 197, 250, 116, 63, 0, 0, 0, 0, 78, 98, 201, 193, 121, 233, 161, 65, 12, 2, 160, 65, 90, 100, 216, 193, 201, 118, 166, 65, 111, 18, 131, 186, 90, 100, 216, 193, 201, 118, 166, 65, 12, 2, 160, 65, 30, 14, 129, 109, 89, 189, 0, 0, 0, 0, 154, 163, 127, 63, 51, 51, 199, 193, 197, 32, 128, 191, 205, 204, 28, 65, 0, 0, 184, 193, 197, 32, 128, 191, 127, 106, 30, 65, 51, 51, 199, 193, 32, 21, 244, 63, 205, 204, 28, 65, 46, 111, 129, 109, 89, 189, 0, 0, 0, 0, 154, 163, 127, 63, 80, 141, 187, 193, 10, 215, 43, 64, 210, 9, 30, 65, 51, 51, 199, 193, 32, 21, 244, 63, 205, 204, 28, 65, 0, 0, 184, 193, 197, 32, 128, 191, 127, 106, 30, 65, 46, 111, 101, 155, 148, 190, 197, 250, 116, 191, 0, 0, 0, 0, 166, 155, 247, 193, 117, 147, 152, 63, 219, 226, 188, 64, 217, 78, 3, 194, 115, 104, 225, 63, 12, 2, 160, 65, 102, 102, 250, 193, 16, 32, 166, 63, 0, 0, 176, 64, 30, 14, 101, 155, 148, 190, 197, 250, 116, 191, 0, 0, 0, 0, 102, 102, 250, 193, 16, 32, 166, 63, 0, 0, 176, 64, 217, 78, 3, 194, 115, 104, 225, 63, 12, 2, 160, 65, 205, 204, 0, 194, 227, 16, 201, 63, 51, 51, 115, 64, 30, 14, 101, 155, 148, 190, 197, 250, 116, 191, 0, 0, 0, 0, 111, 18, 3, 194, 17, 30, 223, 63, 216, 21, 0, 64, 205, 204, 0, 194, 227, 16, 201, 63, 51, 51, 115, 64, 217, 78, 3, 194, 115, 104, 225, 63, 12, 2, 160, 65, 30, 14]), true, true);
})();
if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}
// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}
run();
// {{POST_RUN_ADDITIONS}}
  // {{MODULE_ADDITIONS}}
